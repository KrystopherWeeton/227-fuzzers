; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrConfigConversionEffect.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrConfigConversionEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrConfigConversionEffect = type { %class.GrFragmentProcessor.base, i32 }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %class.sk_sp.204, %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.24", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.186" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.23 }
%class.sk_sp.23 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.27, %class.SkTHashMap, %class.SkTHashMap.35, %class.SkTArray.44, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.27 = type { %"class.std::__1::unique_ptr.28"*, i64 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.35 = type { %class.SkTHashTable.36 }
%class.SkTHashTable.36 = type { i32, i32, %class.SkAutoTArray.37 }
%class.SkAutoTArray.37 = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.262" }
%"struct.std::__1::pair.262" = type { i32, %class.SkTArray.263* }
%class.SkTArray.263 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.44 = type { %"class.std::__1::unique_ptr.45"*, i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.263, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.58 }
%class.SkFibBlockSizes.58 = type { i32 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.65, %class.SkTArray.74, %class.GrOpsTask*, %class.SkSTArray.152, %class.SkSTArray.154, %"class.std::__1::unique_ptr.156", %class.sk_sp.172, %class.GrTokenTracker, i8, i8, %class.SkTArray.173, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.65 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.66", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.69, i8, [7 x i8] }>
%class.sk_sp.69 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.70, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.70 = type { i32 }
%class.SkTArray.74 = type { %class.sk_sp.75*, i64 }
%class.sk_sp.75 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.76, %class.SkTArray.128, i32, i32, %class.SkSTArray.135, %class.SkSTArray.135, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.76 = type { %class.SkAlignedSTStorage.77, %class.SkTArray.78 }
%class.SkAlignedSTStorage.77 = type { [8 x i8] }
%class.SkTArray.78 = type { %class.sk_sp.79*, i64 }
%class.sk_sp.79 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.80, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.123" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.80 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.83 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.81, i8* }
%class.sk_sp.81 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.82, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.82 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.83 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.84, void (i8*)*, i8* }
%class.SkNVRefCnt.84 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.85, i32, [4 x i8] }
%union.anon.85 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.80, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.120, %class.sk_sp.122, %class.sk_sp.122 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.95, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.111, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.104, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.104 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.105" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.110, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.110 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.111 = type { %class.SkTHashTable.112 }
%class.SkTHashTable.112 = type { i32, i32, %class.SkAutoTArray.113 }
%class.SkAutoTArray.113 = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.120 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.121, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.121 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.122 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__cxx_atomic_impl.126" }
%"struct.std::__1::__cxx_atomic_impl.126" = type { %"struct.std::__1::__cxx_atomic_base_impl.127" }
%"struct.std::__1::__cxx_atomic_base_impl.127" = type { i64 }
%class.SkTArray.128 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.129", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.137 }
%class.SkAlignedSTStorage.136 = type { [8 x i8] }
%class.SkTArray.137 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.138, %class.sk_sp.149, %class.SkTArray.151, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.138 = type { %class.SkAlignedSTStorage.139, %class.SkTArray.140 }
%class.SkAlignedSTStorage.139 = type { [2000 x i8] }
%class.SkTArray.140 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.141", %class.GrOp* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.141", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.79, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.4" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.147 }
%union.anon.147 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.148, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.148 = type { i32 }
%class.sk_sp.149 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.150, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.150 = type { %"struct.std::__1::atomic" }
%class.SkTArray.151 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.152 = type { %class.SkAlignedSTStorage.153, %class.SkTArray.16 }
%class.SkAlignedSTStorage.153 = type { [32 x i8] }
%class.SkSTArray.154 = type { %class.SkAlignedSTStorage.155, %class.SkTArray.74 }
%class.SkAlignedSTStorage.155 = type { [32 x i8] }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.159, %"class.std::__1::unique_ptr.163", %class.GrPathRenderer* }
%class.SkSTArray.159 = type { %class.SkAlignedSTStorage.160, %class.SkTArray.161 }
%class.SkAlignedSTStorage.160 = type { [64 x i8] }
%class.SkTArray.161 = type { %class.sk_sp.162*, i64 }
%class.sk_sp.162 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.172 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.173 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.174, i32, %class.GrRenderTask** }
%class.SkTHashMap.174 = type { %class.SkTHashTable.175 }
%class.SkTHashTable.175 = type { i32, i32, %class.SkAutoTArray.176 }
%class.SkAutoTArray.176 = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrProxyProvider* }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.204 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.GrResourceProvider* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.220, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.220 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.221, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.221 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.244, %class.sk_sp.249, i32, i32 }
%class.sk_sp.244 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.245, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.245 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.249 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.244, i32, i32 }
%class.SkBitmap = type { %class.sk_sp.254, %class.SkPixmap, %class.sk_sp.255 }
%class.sk_sp.254 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.255 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.256", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.256" = type { i32 }
%class.GrPixmap = type { %class.GrPixmapBase }
%class.GrPixmapBase = type { i8*, i64, %class.GrImageInfo, %class.sk_sp.81 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.250, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.250 = type { %class.GrOpsTask* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLConfigConversionEffect = type { %class.GrGLSLFragmentProcessor }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.276, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.278, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.287], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::vector", i32, %class.SkSTArray.319 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.289, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.289 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.290, i32, [4 x i8] }>
%class.SkSTArray.290 = type { %class.SkAlignedSTStorage.291, %class.SkTArray.16 }
%class.SkAlignedSTStorage.291 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.292, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.292 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.293, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.293 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.294"*, [24 x i8] }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.300, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.300 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.304 }
%class.SkTArray.304 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.319 = type { %class.SkAlignedSTStorage.320, %class.SkTArray.321 }
%class.SkAlignedSTStorage.320 = type { [160 x i8] }
%class.SkTArray.321 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.271 }
%union.anon.271 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.276 = type { %class.SkAlignedSTStorage.277, %class.SkTArray }
%class.SkAlignedSTStorage.277 = type { [120 x i8] }
%class.SkSTArray.278 = type { %class.SkAlignedSTStorage.279, %class.SkTArray.280 }
%class.SkAlignedSTStorage.279 = type { [16 x i8] }
%class.SkTArray.280 = type { %"class.std::__1::unique_ptr.281"*, i64 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.287 = type { %class.SkAlignedSTStorage.288, %class.SkTArray }
%class.SkAlignedSTStorage.288 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.272 }
%struct.anon.272 = type { i8 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.276, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.278, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.287], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN24GrConfigConversionEffectD0Ev = comdat any

$_ZNK24GrConfigConversionEffect4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm = comdat any

$_ZN28GrGLSLConfigConversionEffectD0Ev = comdat any

$_ZN28GrGLSLConfigConversionEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN28GrGLSLConfigConversionEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV28GrGLSLConfigConversionEffect = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [13 x i8] c"pmConversion\00", align 1
@_ZTV24GrConfigConversionEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrConfigConversionEffect*)* @_ZN24GrConfigConversionEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrConfigConversionEffect*)* @_ZNK24GrConfigConversionEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrConfigConversionEffect*)* @_ZNK24GrConfigConversionEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrConfigConversionEffect*)* @_ZNK24GrConfigConversionEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrConfigConversionEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK24GrConfigConversionEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrConfigConversionEffect*, %class.GrFragmentProcessor*)* @_ZNK24GrConfigConversionEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"ConfigConversionEffect\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV28GrGLSLConfigConversionEffect = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLConfigConversionEffect*)* @_ZN28GrGLSLConfigConversionEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLSLConfigConversionEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN28GrGLSLConfigConversionEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLConfigConversionEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN28GrGLSLConfigConversionEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [307 x i8] c"half4 color = floor(%s * 255.0 + 0.5) / 255.0;\0A@switch (%d) {\0A    case 0:\0A        color.xyz = floor((color.xyz * color.w) * 255.0 + 0.5) / 255.0;\0A        break;\0A    case 1:\0A        color.xyz = color.w <= 0.0 ? half3(0.0) : floor((color.xyz / color.w) * 255.0 + 0.5) / 255.0;\0A        break;\0A}\0Areturn color;\0A\00", align 1
@switch.table._ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm = private unnamed_addr constant [31 x i64] [i64 0, i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8

@_ZN24GrConfigConversionEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrConfigConversionEffect*, %class.GrConfigConversionEffect*), void (%class.GrConfigConversionEffect*, %class.GrConfigConversionEffect*)* @_ZN24GrConfigConversionEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK24GrConfigConversionEffect17onMakeProgramImplEv(%class.GrConfigConversionEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV28GrGLSLConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrConfigConversionEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrConfigConversionEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %7 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, i64 2
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, align 8
  tail call void %9(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK24GrConfigConversionEffect9onIsEqualERK19GrFragmentProcessor(%class.GrConfigConversionEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %4, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrConfigConversionEffectC2ERKS_(%class.GrConfigConversionEffect*, %class.GrConfigConversionEffect* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrConfigConversionEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrConfigConversionEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 34, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK24GrConfigConversionEffect5cloneEv(%class.GrConfigConversionEffect*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrConfigConversionEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 34, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24GrConfigConversionEffect30TestForPreservingPMConversionsEP15GrDirectContext(%class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GrImageInfo, align 8
  %3 = alloca %class.GrImageInfo, align 8
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = alloca %class.GrImageInfo, align 8
  %7 = alloca %class.GrImageInfo, align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %class.GrPixmap, align 8
  %11 = alloca %class.GrImageInfo, align 8
  %12 = alloca %class.GrPixmap, align 8
  %13 = alloca %class.GrImageInfo, align 8
  %14 = alloca %class.GrSurfaceProxyView, align 8
  %15 = alloca <2 x i64>, align 16
  %16 = alloca %class.GrPixmap, align 8
  %17 = alloca %class.GrSurfaceProxyView, align 8
  %18 = alloca <2 x i64>, align 16
  %19 = alloca %class.GrSurfaceProxyView, align 8
  %20 = alloca <2 x i64>, align 16
  %21 = alloca %class.GrPixmap, align 8
  %22 = tail call i8* @_Z15sk_malloc_throwmm(i64 196608, i64 4) #10
  %23 = bitcast i8* %22 to i32*
  br label %24

24:                                               ; preds = %105, %1
  %25 = phi i64 [ 0, %1 ], [ %106, %105 ]
  %26 = phi i32 [ 0, %1 ], [ %107, %105 ]
  %27 = shl i64 %25, 8
  %28 = trunc i32 %26 to i8
  br label %109

29:                                               ; preds = %105
  %30 = bitcast <2 x i64>* %15 to %struct.SkIRect*
  %31 = bitcast <2 x i64>* %18 to %struct.SkIRect*
  %32 = bitcast <2 x i64>* %20 to %struct.SkIRect*
  %33 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934596>, <2 x i64>* %35, align 16, !alias.scope !2
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %37 = bitcast %struct.SkISize* %36 to i64*
  store i64 1099511628032, i64* %37, align 16, !alias.scope !2
  %38 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901892>, <2 x i64>* %40, align 16, !alias.scope !5
  %41 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %42 = bitcast %struct.SkISize* %41 to i64*
  store i64 1099511628032, i64* %42, align 16, !alias.scope !5
  %43 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %0, i64 0, i32 0
  %44 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %6, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %44, %class.SkColorInfo* nonnull dereferenceable(16) %45) #10
  %46 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %6, i64 0, i32 1
  %47 = load i64, i64* %42, align 16
  %48 = bitcast %struct.SkISize* %46 to i64*
  store i64 %47, i64* %48, align 8
  %49 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %43, %class.GrImageInfo* nonnull %6, i32 1, i32 1, i1 zeroext false, i1 zeroext false, i32 0, i1 zeroext true) #10
  %50 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %6, i64 0, i32 0, i32 1, i32 0
  %51 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %50, align 8
  %52 = icmp eq %class.GrColorSpaceXform* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %29
  %54 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.GrColorSpaceXform* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.GrColorSpaceXform* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #10
  br label %63

63:                                               ; preds = %57, %53, %29
  %64 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %class.SkColorSpace* %65 to i8*
  call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %63, %67, %71
  %74 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %7, i64 0, i32 0
  %75 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %74, %class.SkColorInfo* nonnull dereferenceable(16) %75) #10
  %76 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %7, i64 0, i32 1
  %77 = load i64, i64* %37, align 16
  %78 = bitcast %struct.SkISize* %76 to i64*
  store i64 %77, i64* %78, align 8
  %79 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %43, %class.GrImageInfo* nonnull %7, i32 1, i32 1, i1 zeroext false, i1 zeroext false, i32 0, i1 zeroext true) #10
  %80 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %7, i64 0, i32 0, i32 1, i32 0
  %81 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %80, align 8
  %82 = icmp eq %class.GrColorSpaceXform* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.GrColorSpaceXform* %81 to %class.SkRefCntBase*
  %89 = bitcast %class.GrColorSpaceXform* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #10
  br label %93

93:                                               ; preds = %87, %83, %73
  %94 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %95 = load %class.SkColorSpace*, %class.SkColorSpace** %94, align 8
  %96 = icmp eq %class.SkColorSpace* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = bitcast %class.SkColorSpace* %95 to i8*
  call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %93, %97, %101
  %104 = icmp eq %class.GrSurfaceFillContext* %49, null
  br i1 %104, label %609, label %132

105:                                              ; preds = %109
  %106 = add nuw nsw i64 %25, 1
  %107 = add nuw nsw i32 %26, 1
  %108 = icmp eq i64 %106, 256
  br i1 %108, label %29, label %24

109:                                              ; preds = %109, %24
  %110 = phi i64 [ 0, %24 ], [ %130, %109 ]
  %111 = add nuw nsw i64 %110, %27
  %112 = getelementptr inbounds i32, i32* %23, i64 %111
  %113 = bitcast i32* %112 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 3
  store i8 %28, i8* %114, align 1
  %115 = icmp ult i64 %25, %110
  %116 = select i1 %115, i64 %25, i64 %110
  %117 = trunc i64 %116 to i8
  %118 = getelementptr inbounds i8, i8* %113, i64 2
  store i8 %117, i8* %118, align 1
  %119 = getelementptr inbounds i8, i8* %113, i64 1
  store i8 %117, i8* %119, align 1
  store i8 %117, i8* %113, align 1
  %120 = or i64 %110, 1
  %121 = add nuw nsw i64 %120, %27
  %122 = getelementptr inbounds i32, i32* %23, i64 %121
  %123 = bitcast i32* %122 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 3
  store i8 %28, i8* %124, align 1
  %125 = icmp ult i64 %25, %120
  %126 = select i1 %125, i64 %25, i64 %120
  %127 = trunc i64 %126 to i8
  %128 = getelementptr inbounds i8, i8* %123, i64 2
  store i8 %127, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %123, i64 1
  store i8 %127, i8* %129, align 1
  store i8 %127, i8* %123, align 1
  %130 = add nuw nsw i64 %110, 2
  %131 = icmp eq i64 %130, 256
  br i1 %131, label %105, label %109

132:                                              ; preds = %103
  %133 = icmp eq %class.GrSurfaceFillContext* %79, null
  br i1 %133, label %618, label %134

134:                                              ; preds = %132
  %135 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %135) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #10
  %136 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i8* %22, i64 1024, void (i8*, i8*)* null, i8* null) #10
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %8) #10
  %137 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #10
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* nonnull sret %9, %class.GrRecordingContext* %43, %class.SkBitmap* nonnull dereferenceable(56) %8, i1 zeroext false, i32 1, i1 zeroext true) #10
  %138 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::tuple"* %9 to i64*
  %140 = load i64, i64* %139, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %138, align 8
  %141 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %144 = load i16, i16* %143, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #10
  %145 = icmp eq i64 %140, 0
  br i1 %145, label %607, label %146

146:                                              ; preds = %134
  %147 = getelementptr inbounds i8, i8* %22, i64 262144
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds i8, i8* %22, i64 524288
  %150 = bitcast i8* %149 to i32*
  %151 = bitcast %class.GrPixmap* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %147, i8 0, i64 524288, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %151) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 56, i1 false)
  %152 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %152, %class.SkColorInfo* nonnull dereferenceable(16) %45) #10
  %153 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 1
  %154 = load i64, i64* %42, align 16
  %155 = bitcast %struct.SkISize* %153 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %class.GrImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %156)
  %157 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0
  %158 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %158, %class.GrColorInfo* nonnull dereferenceable(24) %152) #10
  %159 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 1
  %160 = bitcast %struct.SkISize* %159 to i64*
  %161 = load i64, i64* %155, align 8
  store i64 %161, i64* %160, align 8
  call void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm(%class.GrPixmapBase* nonnull %157, %class.GrImageInfo* nonnull %3, i8* %147, i64 1024) #10
  %162 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 1, i32 0
  %163 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %162, align 8
  %164 = icmp eq %class.GrColorSpaceXform* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %146
  %166 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %163, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast %class.GrColorSpaceXform* %163 to %class.SkRefCntBase*
  %171 = bitcast %class.GrColorSpaceXform* %163 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  call void %174(%class.SkRefCntBase* nonnull %170) #10
  br label %175

175:                                              ; preds = %169, %165, %146
  %176 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %177 = load %class.SkColorSpace*, %class.SkColorSpace** %176, align 8
  %178 = icmp eq %class.SkColorSpace* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = atomicrmw add i32* %180, i32 -1 acq_rel
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = bitcast %class.SkColorSpace* %177 to i8*
  call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %175, %179, %183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %156)
  %186 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0, i32 1, i32 0
  %187 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %186, align 8
  %188 = icmp eq %class.GrColorSpaceXform* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %187, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.GrColorSpaceXform* %187 to %class.SkRefCntBase*
  %195 = bitcast %class.GrColorSpaceXform* %187 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #10
  br label %199

199:                                              ; preds = %193, %189, %185
  %200 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %201 = load %class.SkColorSpace*, %class.SkColorSpace** %200, align 8
  %202 = icmp eq %class.SkColorSpace* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 -1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = bitcast %class.SkColorSpace* %201 to i8*
  call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %199, %203, %207
  %210 = bitcast %class.GrPixmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %210) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 56, i1 false)
  %211 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %211, %class.SkColorInfo* nonnull dereferenceable(16) %45) #10
  %212 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 1
  %213 = load i64, i64* %42, align 16
  %214 = bitcast %struct.SkISize* %212 to i64*
  store i64 %213, i64* %214, align 8
  %215 = bitcast %class.GrImageInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %215)
  %216 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0
  %217 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %2, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %217, %class.GrColorInfo* nonnull dereferenceable(24) %211) #10
  %218 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %2, i64 0, i32 1
  %219 = bitcast %struct.SkISize* %218 to i64*
  %220 = load i64, i64* %214, align 8
  store i64 %220, i64* %219, align 8
  call void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm(%class.GrPixmapBase* nonnull %216, %class.GrImageInfo* nonnull %2, i8* %149, i64 1024) #10
  %221 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %2, i64 0, i32 0, i32 1, i32 0
  %222 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %221, align 8
  %223 = icmp eq %class.GrColorSpaceXform* %222, null
  br i1 %223, label %234, label %224

224:                                              ; preds = %209
  %225 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %222, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %224
  %229 = bitcast %class.GrColorSpaceXform* %222 to %class.SkRefCntBase*
  %230 = bitcast %class.GrColorSpaceXform* %222 to void (%class.SkRefCntBase*)***
  %231 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %230, align 8
  %232 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %231, i64 2
  %233 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %232, align 8
  call void %233(%class.SkRefCntBase* nonnull %229) #10
  br label %234

234:                                              ; preds = %228, %224, %209
  %235 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %236 = load %class.SkColorSpace*, %class.SkColorSpace** %235, align 8
  %237 = icmp eq %class.SkColorSpace* %236, null
  br i1 %237, label %244, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw add i32* %239, i32 -1 acq_rel
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = bitcast %class.SkColorSpace* %236 to i8*
  call void @_ZdlPv(i8* %243) #11
  br label %244

244:                                              ; preds = %234, %238, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %215)
  %245 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0, i32 1, i32 0
  %246 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %245, align 8
  %247 = icmp eq %class.GrColorSpaceXform* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %246, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %258

252:                                              ; preds = %248
  %253 = bitcast %class.GrColorSpaceXform* %246 to %class.SkRefCntBase*
  %254 = bitcast %class.GrColorSpaceXform* %246 to void (%class.SkRefCntBase*)***
  %255 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %254, align 8
  %256 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %255, i64 2
  %257 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %256, align 8
  call void %257(%class.SkRefCntBase* nonnull %253) #10
  br label %258

258:                                              ; preds = %252, %248, %244
  %259 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %13, i64 0, i32 0, i32 0, i32 0
  %260 = load %class.SkColorSpace*, %class.SkColorSpace** %259, align 8
  %261 = icmp eq %class.SkColorSpace* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %268

266:                                              ; preds = %262
  %267 = bitcast %class.SkColorSpace* %260 to i8*
  call void @_ZdlPv(i8* %267) #11
  br label %268

268:                                              ; preds = %258, %262, %266
  %269 = bitcast %class.GrSurfaceProxyView* %14 to i64*
  store i64 %140, i64* %269, align 8
  %270 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 1
  store i32 %142, i32* %270, align 8
  %271 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 2, i32 0
  store i16 %144, i16* %271, align 4
  %272 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %275 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %14, i32 %273, %class.SkMatrix* dereferenceable(40) %274, i32 0, i32 0) #10
  %276 = icmp eq %class.GrFragmentProcessor* %275, null
  br i1 %276, label %293, label %277

277:                                              ; preds = %268
  %278 = call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %279 = bitcast i8* %278 to %class.GrFragmentProcessor*
  %280 = bitcast i8* %278 to i32 (...)***
  %281 = getelementptr inbounds i8, i8* %278, i64 8
  %282 = bitcast i8* %281 to i32*
  store i32 34, i32* %282, align 8
  %283 = getelementptr inbounds i8, i8* %278, i64 12
  %284 = bitcast i8* %283 to i32*
  store i32 0, i32* %284, align 4
  %285 = getelementptr inbounds i8, i8* %278, i64 24
  %286 = getelementptr inbounds i8, i8* %278, i64 16
  %287 = getelementptr inbounds i8, i8* %278, i64 32
  %288 = bitcast i8* %287 to i64*
  %289 = bitcast i8* %285 to i8**
  store i8* %286, i8** %289, align 8
  store i64 8589934592, i64* %288, align 8
  %290 = getelementptr inbounds i8, i8* %278, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 17, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %291 = getelementptr inbounds i8, i8* %278, i64 60
  %292 = bitcast i8* %291 to i32*
  store i32 1, i32* %292, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %279, %class.GrFragmentProcessor* nonnull %275, i64 1) #10
  br label %293

293:                                              ; preds = %268, %277
  %294 = phi %class.GrFragmentProcessor* [ %279, %277 ], [ null, %268 ]
  %295 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 0, i32 0
  %296 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %295, align 8
  %297 = icmp eq %class.GrSurfaceProxy* %296, null
  br i1 %297, label %310, label %298

298:                                              ; preds = %293
  %299 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %296, i64 0, i32 1
  %300 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw add i32* %300, i32 -1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %299, i64 -2
  %305 = bitcast %class.SkNVRefCnt* %304 to %class.GrSurfaceProxy*
  %306 = bitcast %class.SkNVRefCnt* %304 to void (%class.GrSurfaceProxy*)***
  %307 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %306, align 8
  %308 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %307, i64 1
  %309 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %308, align 8
  call void %309(%class.GrSurfaceProxy* nonnull %305) #10
  br label %310

310:                                              ; preds = %293, %298, %303
  %311 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %311) #10
  store <2 x i64> <i64 0, i64 1099511628032>, <2 x i64>* %15, align 16
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %49, %struct.SkIRect* nonnull dereferenceable(16) %30, %class.GrFragmentProcessor* %294) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %311) #10
  %312 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %49, i64 0, i32 0
  %313 = bitcast %class.GrPixmap* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %313, i8* nonnull align 8 %151, i64 16, i1 false) #10
  %314 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %16, i64 0, i32 0, i32 2, i32 0
  %315 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %314, %class.GrColorInfo* dereferenceable(24) %315) #10
  %316 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %16, i64 0, i32 0, i32 2, i32 1
  %317 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0, i32 2, i32 1
  %318 = bitcast %struct.SkISize* %317 to i64*
  %319 = bitcast %struct.SkISize* %316 to i64*
  %320 = load i64, i64* %318, align 8
  store i64 %320, i64* %319, align 8
  %321 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %16, i64 0, i32 0, i32 3, i32 0
  %322 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0, i32 3, i32 0
  %323 = load %class.SkData*, %class.SkData** %322, align 8
  %324 = icmp eq %class.SkData* %323, null
  br i1 %324, label %328, label %325

325:                                              ; preds = %310
  %326 = getelementptr inbounds %class.SkData, %class.SkData* %323, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = atomicrmw add i32* %326, i32 1 monotonic
  br label %328

328:                                              ; preds = %310, %325
  store %class.SkData* %323, %class.SkData** %321, align 8
  %329 = call zeroext i1 @_ZN16GrSurfaceContext10readPixelsEP15GrDirectContext8GrPixmap8SkIPoint(%class.GrSurfaceContext* %312, %class.GrDirectContext* %0, %class.GrPixmap* nonnull %16, i64 0) #10
  %330 = load %class.SkData*, %class.SkData** %321, align 8
  %331 = icmp eq %class.SkData* %330, null
  br i1 %331, label %338, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %class.SkData, %class.SkData* %330, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = atomicrmw add i32* %333, i32 -1 acq_rel
  %335 = icmp eq i32 %334, 1
  br i1 %335, label %336, label %338

336:                                              ; preds = %332
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %330) #10
  %337 = bitcast %class.SkData* %330 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %337) #10
  br label %338

338:                                              ; preds = %336, %332, %328
  %339 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %16, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %340 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %339, align 8
  %341 = icmp eq %class.GrColorSpaceXform* %340, null
  br i1 %341, label %352, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %340, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = atomicrmw add i32* %343, i32 -1 acq_rel
  %345 = icmp eq i32 %344, 1
  br i1 %345, label %346, label %352

346:                                              ; preds = %342
  %347 = bitcast %class.GrColorSpaceXform* %340 to %class.SkRefCntBase*
  %348 = bitcast %class.GrColorSpaceXform* %340 to void (%class.SkRefCntBase*)***
  %349 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %348, align 8
  %350 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %349, i64 2
  %351 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %350, align 8
  call void %351(%class.SkRefCntBase* nonnull %347) #10
  br label %352

352:                                              ; preds = %346, %342, %338
  %353 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %16, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %354 = load %class.SkColorSpace*, %class.SkColorSpace** %353, align 8
  %355 = icmp eq %class.SkColorSpace* %354, null
  br i1 %355, label %362, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %354, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = atomicrmw add i32* %357, i32 -1 acq_rel
  %359 = icmp eq i32 %358, 1
  br i1 %359, label %360, label %362

360:                                              ; preds = %356
  %361 = bitcast %class.SkColorSpace* %354 to i8*
  call void @_ZdlPv(i8* %361) #11
  br label %362

362:                                              ; preds = %352, %356, %360
  br i1 %329, label %363, label %538

363:                                              ; preds = %362
  %364 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 0, i32 0
  %365 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %49, i64 0, i32 0, i32 2, i32 0, i32 0
  %366 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %365, align 8, !noalias !10
  %367 = icmp eq %class.GrSurfaceProxy* %366, null
  br i1 %367, label %371, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %366, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = atomicrmw add i32* %369, i32 1 monotonic, !noalias !10
  br label %371

371:                                              ; preds = %363, %368
  store %class.GrSurfaceProxy* %366, %class.GrSurfaceProxy** %364, align 8, !alias.scope !10
  %372 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 1
  %373 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %49, i64 0, i32 0, i32 2, i32 1
  %374 = load i32, i32* %373, align 8, !noalias !10
  store i32 %374, i32* %372, align 8, !alias.scope !10
  %375 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 2, i32 0
  %376 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %49, i64 0, i32 0, i32 2, i32 2, i32 0
  %377 = load i16, i16* %376, align 2, !noalias !10
  store i16 %377, i16* %375, align 4, !alias.scope !10
  %378 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %49, i64 0, i32 0, i32 3, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %381 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %17, i32 %379, %class.SkMatrix* dereferenceable(40) %380, i32 0, i32 0) #10
  %382 = icmp eq %class.GrFragmentProcessor* %381, null
  br i1 %382, label %399, label %383

383:                                              ; preds = %371
  %384 = call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %385 = bitcast i8* %384 to %class.GrFragmentProcessor*
  %386 = bitcast i8* %384 to i32 (...)***
  %387 = getelementptr inbounds i8, i8* %384, i64 8
  %388 = bitcast i8* %387 to i32*
  store i32 34, i32* %388, align 8
  %389 = getelementptr inbounds i8, i8* %384, i64 12
  %390 = bitcast i8* %389 to i32*
  store i32 0, i32* %390, align 4
  %391 = getelementptr inbounds i8, i8* %384, i64 24
  %392 = getelementptr inbounds i8, i8* %384, i64 16
  %393 = getelementptr inbounds i8, i8* %384, i64 32
  %394 = bitcast i8* %393 to i64*
  %395 = bitcast i8* %391 to i8**
  store i8* %392, i8** %395, align 8
  store i64 8589934592, i64* %394, align 8
  %396 = getelementptr inbounds i8, i8* %384, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 17, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %386, align 8
  %397 = getelementptr inbounds i8, i8* %384, i64 60
  %398 = bitcast i8* %397 to i32*
  store i32 0, i32* %398, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %385, %class.GrFragmentProcessor* nonnull %381, i64 1) #10
  br label %399

399:                                              ; preds = %371, %383
  %400 = phi %class.GrFragmentProcessor* [ %385, %383 ], [ null, %371 ]
  %401 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %364, align 8
  %402 = icmp eq %class.GrSurfaceProxy* %401, null
  br i1 %402, label %415, label %403

403:                                              ; preds = %399
  %404 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %401, i64 0, i32 1
  %405 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %404, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = atomicrmw add i32* %405, i32 -1 acq_rel
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %415

408:                                              ; preds = %403
  %409 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %404, i64 -2
  %410 = bitcast %class.SkNVRefCnt* %409 to %class.GrSurfaceProxy*
  %411 = bitcast %class.SkNVRefCnt* %409 to void (%class.GrSurfaceProxy*)***
  %412 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %411, align 8
  %413 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %412, i64 1
  %414 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %413, align 8
  call void %414(%class.GrSurfaceProxy* nonnull %410) #10
  br label %415

415:                                              ; preds = %399, %403, %408
  %416 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %416) #10
  store <2 x i64> <i64 0, i64 1099511628032>, <2 x i64>* %18, align 16
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %79, %struct.SkIRect* nonnull dereferenceable(16) %31, %class.GrFragmentProcessor* %400) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %416) #10
  %417 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 0, i32 0
  %418 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %79, i64 0, i32 0, i32 2, i32 0, i32 0
  %419 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %418, align 8, !noalias !13
  %420 = icmp eq %class.GrSurfaceProxy* %419, null
  br i1 %420, label %424, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %419, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = atomicrmw add i32* %422, i32 1 monotonic, !noalias !13
  br label %424

424:                                              ; preds = %415, %421
  store %class.GrSurfaceProxy* %419, %class.GrSurfaceProxy** %417, align 8, !alias.scope !13
  %425 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 1
  %426 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %79, i64 0, i32 0, i32 2, i32 1
  %427 = load i32, i32* %426, align 8, !noalias !13
  store i32 %427, i32* %425, align 8, !alias.scope !13
  %428 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2, i32 0
  %429 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %79, i64 0, i32 0, i32 2, i32 2, i32 0
  %430 = load i16, i16* %429, align 2, !noalias !13
  store i16 %430, i16* %428, align 4, !alias.scope !13
  %431 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %79, i64 0, i32 0, i32 3, i32 3
  %432 = load i32, i32* %431, align 4
  %433 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %434 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %19, i32 %432, %class.SkMatrix* dereferenceable(40) %433, i32 0, i32 0) #10
  %435 = icmp eq %class.GrFragmentProcessor* %434, null
  br i1 %435, label %452, label %436

436:                                              ; preds = %424
  %437 = call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %438 = bitcast i8* %437 to %class.GrFragmentProcessor*
  %439 = bitcast i8* %437 to i32 (...)***
  %440 = getelementptr inbounds i8, i8* %437, i64 8
  %441 = bitcast i8* %440 to i32*
  store i32 34, i32* %441, align 8
  %442 = getelementptr inbounds i8, i8* %437, i64 12
  %443 = bitcast i8* %442 to i32*
  store i32 0, i32* %443, align 4
  %444 = getelementptr inbounds i8, i8* %437, i64 24
  %445 = getelementptr inbounds i8, i8* %437, i64 16
  %446 = getelementptr inbounds i8, i8* %437, i64 32
  %447 = bitcast i8* %446 to i64*
  %448 = bitcast i8* %444 to i8**
  store i8* %445, i8** %448, align 8
  store i64 8589934592, i64* %447, align 8
  %449 = getelementptr inbounds i8, i8* %437, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %449, i8 0, i64 17, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrConfigConversionEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %439, align 8
  %450 = getelementptr inbounds i8, i8* %437, i64 60
  %451 = bitcast i8* %450 to i32*
  store i32 1, i32* %451, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %438, %class.GrFragmentProcessor* nonnull %434, i64 1) #10
  br label %452

452:                                              ; preds = %424, %436
  %453 = phi %class.GrFragmentProcessor* [ %438, %436 ], [ null, %424 ]
  %454 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %417, align 8
  %455 = icmp eq %class.GrSurfaceProxy* %454, null
  br i1 %455, label %468, label %456

456:                                              ; preds = %452
  %457 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %454, i64 0, i32 1
  %458 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %457, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = atomicrmw add i32* %458, i32 -1 acq_rel
  %460 = icmp eq i32 %459, 1
  br i1 %460, label %461, label %468

461:                                              ; preds = %456
  %462 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %457, i64 -2
  %463 = bitcast %class.SkNVRefCnt* %462 to %class.GrSurfaceProxy*
  %464 = bitcast %class.SkNVRefCnt* %462 to void (%class.GrSurfaceProxy*)***
  %465 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %464, align 8
  %466 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %465, i64 1
  %467 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %466, align 8
  call void %467(%class.GrSurfaceProxy* nonnull %463) #10
  br label %468

468:                                              ; preds = %452, %456, %461
  %469 = bitcast <2 x i64>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %469) #10
  store <2 x i64> <i64 0, i64 1099511628032>, <2 x i64>* %20, align 16
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %49, %struct.SkIRect* nonnull dereferenceable(16) %32, %class.GrFragmentProcessor* %453) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %469) #10
  %470 = bitcast %class.GrPixmap* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %470, i8* nonnull align 8 %210, i64 16, i1 false) #10
  %471 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %21, i64 0, i32 0, i32 2, i32 0
  %472 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %471, %class.GrColorInfo* dereferenceable(24) %472) #10
  %473 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %21, i64 0, i32 0, i32 2, i32 1
  %474 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 2, i32 1
  %475 = bitcast %struct.SkISize* %474 to i64*
  %476 = bitcast %struct.SkISize* %473 to i64*
  %477 = load i64, i64* %475, align 8
  store i64 %477, i64* %476, align 8
  %478 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %21, i64 0, i32 0, i32 3, i32 0
  %479 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 3, i32 0
  %480 = load %class.SkData*, %class.SkData** %479, align 8
  %481 = icmp eq %class.SkData* %480, null
  br i1 %481, label %485, label %482

482:                                              ; preds = %468
  %483 = getelementptr inbounds %class.SkData, %class.SkData* %480, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = atomicrmw add i32* %483, i32 1 monotonic
  br label %485

485:                                              ; preds = %468, %482
  store %class.SkData* %480, %class.SkData** %478, align 8
  %486 = call zeroext i1 @_ZN16GrSurfaceContext10readPixelsEP15GrDirectContext8GrPixmap8SkIPoint(%class.GrSurfaceContext* %312, %class.GrDirectContext* %0, %class.GrPixmap* nonnull %21, i64 0) #10
  %487 = load %class.SkData*, %class.SkData** %478, align 8
  %488 = icmp eq %class.SkData* %487, null
  br i1 %488, label %495, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %class.SkData, %class.SkData* %487, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = atomicrmw add i32* %490, i32 -1 acq_rel
  %492 = icmp eq i32 %491, 1
  br i1 %492, label %493, label %495

493:                                              ; preds = %489
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %487) #10
  %494 = bitcast %class.SkData* %487 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %494) #10
  br label %495

495:                                              ; preds = %493, %489, %485
  %496 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %21, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %497 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %496, align 8
  %498 = icmp eq %class.GrColorSpaceXform* %497, null
  br i1 %498, label %509, label %499

499:                                              ; preds = %495
  %500 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %497, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = atomicrmw add i32* %500, i32 -1 acq_rel
  %502 = icmp eq i32 %501, 1
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = bitcast %class.GrColorSpaceXform* %497 to %class.SkRefCntBase*
  %505 = bitcast %class.GrColorSpaceXform* %497 to void (%class.SkRefCntBase*)***
  %506 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %505, align 8
  %507 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %506, i64 2
  %508 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %507, align 8
  call void %508(%class.SkRefCntBase* nonnull %504) #10
  br label %509

509:                                              ; preds = %503, %499, %495
  %510 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %21, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %511 = load %class.SkColorSpace*, %class.SkColorSpace** %510, align 8
  %512 = icmp eq %class.SkColorSpace* %511, null
  br i1 %512, label %519, label %513

513:                                              ; preds = %509
  %514 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %511, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = atomicrmw add i32* %514, i32 -1 acq_rel
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %517, label %519

517:                                              ; preds = %513
  %518 = bitcast %class.SkColorSpace* %511 to i8*
  call void @_ZdlPv(i8* %518) #11
  br label %519

519:                                              ; preds = %509, %513, %517
  br i1 %486, label %520, label %538

520:                                              ; preds = %519, %658
  %521 = phi i64 [ %659, %658 ], [ 0, %519 ]
  %522 = phi i64 [ %660, %658 ], [ 1, %519 ]
  %523 = shl i64 %521, 8
  br label %527

524:                                              ; preds = %527
  %525 = add nuw nsw i64 %528, 1
  %526 = icmp eq i64 %525, %522
  br i1 %526, label %535, label %527

527:                                              ; preds = %524, %520
  %528 = phi i64 [ %525, %524 ], [ 0, %520 ]
  %529 = add nuw nsw i64 %528, %523
  %530 = getelementptr inbounds i32, i32* %148, i64 %529
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr inbounds i32, i32* %150, i64 %529
  %533 = load i32, i32* %532, align 4
  %534 = icmp eq i32 %531, %533
  br i1 %534, label %524, label %538

535:                                              ; preds = %524
  %536 = shl i64 %521, 8
  %537 = or i64 %536, 256
  br label %647

538:                                              ; preds = %658, %527, %647, %362, %519
  %539 = phi i1 [ false, %362 ], [ false, %519 ], [ false, %647 ], [ false, %527 ], [ true, %658 ]
  %540 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 3, i32 0
  %541 = load %class.SkData*, %class.SkData** %540, align 8
  %542 = icmp eq %class.SkData* %541, null
  br i1 %542, label %549, label %543

543:                                              ; preds = %538
  %544 = getelementptr inbounds %class.SkData, %class.SkData* %541, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = atomicrmw add i32* %544, i32 -1 acq_rel
  %546 = icmp eq i32 %545, 1
  br i1 %546, label %547, label %549

547:                                              ; preds = %543
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %541) #10
  %548 = bitcast %class.SkData* %541 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %548) #10
  br label %549

549:                                              ; preds = %547, %543, %538
  %550 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %551 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %550, align 8
  %552 = icmp eq %class.GrColorSpaceXform* %551, null
  br i1 %552, label %563, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %551, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = atomicrmw add i32* %554, i32 -1 acq_rel
  %556 = icmp eq i32 %555, 1
  br i1 %556, label %557, label %563

557:                                              ; preds = %553
  %558 = bitcast %class.GrColorSpaceXform* %551 to %class.SkRefCntBase*
  %559 = bitcast %class.GrColorSpaceXform* %551 to void (%class.SkRefCntBase*)***
  %560 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %559, align 8
  %561 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %560, i64 2
  %562 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %561, align 8
  call void %562(%class.SkRefCntBase* nonnull %558) #10
  br label %563

563:                                              ; preds = %557, %553, %549
  %564 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %12, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %565 = load %class.SkColorSpace*, %class.SkColorSpace** %564, align 8
  %566 = icmp eq %class.SkColorSpace* %565, null
  br i1 %566, label %573, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %565, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = atomicrmw add i32* %568, i32 -1 acq_rel
  %570 = icmp eq i32 %569, 1
  br i1 %570, label %571, label %573

571:                                              ; preds = %567
  %572 = bitcast %class.SkColorSpace* %565 to i8*
  call void @_ZdlPv(i8* %572) #11
  br label %573

573:                                              ; preds = %563, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %210) #10
  %574 = load %class.SkData*, %class.SkData** %322, align 8
  %575 = icmp eq %class.SkData* %574, null
  br i1 %575, label %582, label %576

576:                                              ; preds = %573
  %577 = getelementptr inbounds %class.SkData, %class.SkData* %574, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = atomicrmw add i32* %577, i32 -1 acq_rel
  %579 = icmp eq i32 %578, 1
  br i1 %579, label %580, label %582

580:                                              ; preds = %576
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %574) #10
  %581 = bitcast %class.SkData* %574 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %581) #10
  br label %582

582:                                              ; preds = %580, %576, %573
  %583 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %584 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %583, align 8
  %585 = icmp eq %class.GrColorSpaceXform* %584, null
  br i1 %585, label %596, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %584, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %588 = atomicrmw add i32* %587, i32 -1 acq_rel
  %589 = icmp eq i32 %588, 1
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = bitcast %class.GrColorSpaceXform* %584 to %class.SkRefCntBase*
  %592 = bitcast %class.GrColorSpaceXform* %584 to void (%class.SkRefCntBase*)***
  %593 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %592, align 8
  %594 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %593, i64 2
  %595 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %594, align 8
  call void %595(%class.SkRefCntBase* nonnull %591) #10
  br label %596

596:                                              ; preds = %590, %586, %582
  %597 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %10, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %598 = load %class.SkColorSpace*, %class.SkColorSpace** %597, align 8
  %599 = icmp eq %class.SkColorSpace* %598, null
  br i1 %599, label %606, label %600

600:                                              ; preds = %596
  %601 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %598, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = atomicrmw add i32* %601, i32 -1 acq_rel
  %603 = icmp eq i32 %602, 1
  br i1 %603, label %604, label %606

604:                                              ; preds = %600
  %605 = bitcast %class.SkColorSpace* %598 to i8*
  call void @_ZdlPv(i8* %605) #11
  br label %606

606:                                              ; preds = %604, %600, %596
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %151) #10
  br label %607

607:                                              ; preds = %134, %606
  %608 = phi i1 [ %539, %606 ], [ false, %134 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %135) #10
  br label %609

609:                                              ; preds = %103, %607
  %610 = phi i1 [ %608, %607 ], [ false, %103 ]
  %611 = icmp eq %class.GrSurfaceFillContext* %79, null
  br i1 %611, label %617, label %612

612:                                              ; preds = %609
  %613 = bitcast %class.GrSurfaceFillContext* %79 to void (%class.GrSurfaceFillContext*)***
  %614 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %613, align 8
  %615 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %614, i64 1
  %616 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %615, align 8
  call void %616(%class.GrSurfaceFillContext* nonnull %79) #10
  br label %617

617:                                              ; preds = %609, %612
  br i1 %104, label %624, label %618

618:                                              ; preds = %132, %617
  %619 = phi i1 [ %610, %617 ], [ false, %132 ]
  %620 = bitcast %class.GrSurfaceFillContext* %49 to void (%class.GrSurfaceFillContext*)***
  %621 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %620, align 8
  %622 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %621, i64 1
  %623 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %622, align 8
  call void %623(%class.GrSurfaceFillContext* nonnull %49) #10
  br label %624

624:                                              ; preds = %617, %618
  %625 = phi i1 [ %610, %617 ], [ %619, %618 ]
  %626 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 16
  %627 = icmp eq %class.SkColorSpace* %626, null
  br i1 %627, label %634, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %626, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = atomicrmw add i32* %629, i32 -1 acq_rel
  %631 = icmp eq i32 %630, 1
  br i1 %631, label %632, label %634

632:                                              ; preds = %628
  %633 = bitcast %class.SkColorSpace* %626 to i8*
  call void @_ZdlPv(i8* %633) #11
  br label %634

634:                                              ; preds = %624, %628, %632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10
  %635 = load %class.SkColorSpace*, %class.SkColorSpace** %34, align 16
  %636 = icmp eq %class.SkColorSpace* %635, null
  br i1 %636, label %643, label %637

637:                                              ; preds = %634
  %638 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %635, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = atomicrmw add i32* %638, i32 -1 acq_rel
  %640 = icmp eq i32 %639, 1
  br i1 %640, label %641, label %643

641:                                              ; preds = %637
  %642 = bitcast %class.SkColorSpace* %635 to i8*
  call void @_ZdlPv(i8* %642) #11
  br label %643

643:                                              ; preds = %634, %637, %641
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %644 = icmp eq i8* %22, null
  br i1 %644, label %646, label %645

645:                                              ; preds = %643
  call void @_Z7sk_freePv(i8* nonnull %22) #10
  br label %646

646:                                              ; preds = %643, %645
  ret i1 %625

647:                                              ; preds = %655, %535
  %648 = phi i64 [ %656, %655 ], [ 0, %535 ]
  %649 = add nuw nsw i64 %648, %537
  %650 = getelementptr inbounds i32, i32* %148, i64 %649
  %651 = load i32, i32* %650, align 4
  %652 = getelementptr inbounds i32, i32* %150, i64 %649
  %653 = load i32, i32* %652, align 4
  %654 = icmp eq i32 %651, %653
  br i1 %654, label %655, label %538

655:                                              ; preds = %647
  %656 = add nuw nsw i64 %648, 1
  %657 = icmp eq i64 %648, %522
  br i1 %657, label %658, label %647

658:                                              ; preds = %655
  %659 = add nuw nsw i64 %521, 2
  %660 = add nuw nsw i64 %522, 2
  %661 = icmp eq i64 %659, 256
  br i1 %661, label %538, label %520
}

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #3

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare zeroext i1 @_ZN16GrSurfaceContext10readPixelsEP15GrDirectContext8GrPixmap8SkIPoint(%class.GrSurfaceContext*, %class.GrDirectContext*, %class.GrPixmap*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #10
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #10
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24GrConfigConversionEffectD0Ev(%class.GrConfigConversionEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrConfigConversionEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK24GrConfigConversionEffect4nameEv(%class.GrConfigConversionEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo*, %class.SkColorInfo* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm(%class.GrPixmapBase*, %class.GrImageInfo*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrPixmapBase, align 8
  %6 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  tail call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %9) #10
  %10 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = bitcast %struct.SkISize* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 3, i32 0
  store %class.SkData* null, %class.SkData** %15, align 8
  %16 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 31
  br i1 %18, label %20, label %19

19:                                               ; preds = %4
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %4
  %21 = load i64, i64* %7, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm, i64 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %24, %27
  %29 = icmp uge i64 %21, %28
  %30 = icmp ne i8* %2, null
  %31 = and i1 %30, %29
  br i1 %31, label %86, label %32

32:                                               ; preds = %20
  %33 = bitcast %class.GrPixmapBase* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #10
  %34 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 3, i32 0
  %35 = bitcast %class.GrPixmapBase* %0 to i8*
  %36 = bitcast %class.GrPixmapBase* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 56, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %37 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0
  %38 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %37) #10
  %39 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 1
  %40 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 3, i32 0
  %41 = bitcast %struct.SkISize* %39 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  store %class.SkData* null, %class.SkData** %40, align 8
  %43 = load %class.SkData*, %class.SkData** %15, align 8
  %44 = bitcast %struct.SkISize* %10 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %44, align 8
  %45 = icmp eq %class.SkData* %43, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #10
  %51 = bitcast %class.SkData* %43 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #10
  br label %52

52:                                               ; preds = %32, %46, %50
  %53 = load %class.SkData*, %class.SkData** %34, align 8
  %54 = icmp eq %class.SkData* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkData, %class.SkData* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %53) #10
  %60 = bitcast %class.SkData* %53 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %60) #10
  br label %61

61:                                               ; preds = %59, %55, %52
  %62 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  %63 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %62, align 8
  %64 = icmp eq %class.GrColorSpaceXform* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.GrColorSpaceXform* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.GrColorSpaceXform* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #10
  br label %75

75:                                               ; preds = %69, %65, %61
  %76 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %75, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #10
  br label %86

86:                                               ; preds = %20, %85
  ret void
}

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

declare dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28GrGLSLConfigConversionEffectD0Ev(%class.GrGLSLConfigConversionEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLConfigConversionEffect, %class.GrGLSLConfigConversionEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #10
  %3 = bitcast %class.GrGLSLConfigConversionEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28GrGLSLConfigConversionEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLConfigConversionEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %7 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %6, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %9 = bitcast %class.GrFragmentProcessor** %8 to %class.GrConfigConversionEffect**
  %10 = load %class.GrConfigConversionEffect*, %class.GrConfigConversionEffect** %9, align 8
  %11 = getelementptr inbounds %class.GrConfigConversionEffect, %class.GrConfigConversionEffect* %10, i64 0, i32 1
  %12 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to void (%class.GrGLSLFPFragmentBuilder*)***
  %13 = load void (%class.GrGLSLFPFragmentBuilder*)**, void (%class.GrGLSLFPFragmentBuilder*)*** %12, align 8
  %14 = load void (%class.GrGLSLFPFragmentBuilder*)*, void (%class.GrGLSLFPFragmentBuilder*)** %13, align 8
  tail call void %14(%class.GrGLSLFPFragmentBuilder* %7) #10
  %15 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %16, align 8
  %17 = getelementptr inbounds %class.GrGLSLConfigConversionEffect, %class.GrGLSLConfigConversionEffect* %0, i64 0, i32 0
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.SkSL::String"* %5 to i8*
  store i8 0, i8* %20, align 8
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %20, i64 24, i1 false) #10, !noalias !16
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %4, %class.GrGLSLFragmentProcessor* %17, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #10
  %22 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !16
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !16
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %2, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  %30 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr i8, i8* %31, i64 -24
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %16, align 8
  %36 = load i32, i32* %11, align 4
  %37 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %34
  %39 = bitcast i8* %38 to %class.GrGLSLShaderBuilder*
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %35, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %39, i8* getelementptr inbounds ([307 x i8], [307 x i8]* @.str.5, i64 0, i64 0), i8* %40, i32 %36)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28GrGLSLConfigConversionEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLConfigConversionEffect*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #10
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #10
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!8 = distinct !{!8, !9, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!9 = distinct !{!9, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!12 = distinct !{!12, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!15 = distinct !{!15, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!18 = distinct !{!18, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
