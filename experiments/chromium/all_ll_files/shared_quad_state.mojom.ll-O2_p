; ModuleID = 'gen/services/viz/public/mojom/compositing/shared_quad_state.mojom.cc'
source_filename = "gen/services/viz/public/mojom/compositing/shared_quad_state.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional", i8, [3 x i8], float, i32, i32, i8, [3 x i8], float, i8, [3 x i8] }>
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.24, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.26", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"class.viz::mojom::internal::SharedQuadState_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.32", %"struct.mojo::internal::Pointer.31", i8, [3 x i8], float, i32, i32, float, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.32" = type { i64 }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.viz::mojom::SharedQuadState"* }
%"class.gfx::mojom::internal::MaskFilterInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.37" }
%"struct.mojo::internal::Pointer.37" = type { i64 }

@.str = private unnamed_addr constant [25 x i8] c"quad_to_target_transform\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"quad_layer_rect\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"visible_quad_layer_rect\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"mask_filter_info\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"clip_rect\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"are_contents_opaque\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"blend_mode\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"sorting_context_id\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"is_fast_rounded_corner\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"de_jelly_delta_y\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"no_damage\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3viz5mojom15SharedQuadStateC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::SharedQuadState"*), void (%"class.viz::mojom::SharedQuadState"*)* @_ZN3viz5mojom15SharedQuadStateC2Ev
@_ZN3viz5mojom15SharedQuadStateC1ERKN3gfx9TransformERKNS2_4RectES8_RKNS2_14MaskFilterInfoERKN4absl8optionalIS6_EEbfjibfb = hidden unnamed_addr alias void (%"class.viz::mojom::SharedQuadState"*, %"class.gfx::Transform"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::MaskFilterInfo"*, %"class.absl::optional"*, i1, float, i32, i32, i1, float, i1), void (%"class.viz::mojom::SharedQuadState"*, %"class.gfx::Transform"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::MaskFilterInfo"*, %"class.absl::optional"*, i1, float, i32, i32, i1, float, i1)* @_ZN3viz5mojom15SharedQuadStateC2ERKN3gfx9TransformERKNS2_4RectES8_RKNS2_14MaskFilterInfoERKN4absl8optionalIS6_EEbfjibfb
@_ZN3viz5mojom15SharedQuadStateD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::SharedQuadState"*), void (%"class.viz::mojom::SharedQuadState"*)* @_ZN3viz5mojom15SharedQuadStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom15SharedQuadStateC2Ev(%"class.viz::mojom::SharedQuadState"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::SharedQuadState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #6
  %3 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 12
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 13
  store i8 0, i8* %8, align 4
  %9 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 85, i1 false)
  %10 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 13, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom15SharedQuadStateC2ERKN3gfx9TransformERKNS2_4RectES8_RKNS2_14MaskFilterInfoERKN4absl8optionalIS6_EEbfjibfb(%"class.viz::mojom::SharedQuadState"* nocapture, %"class.gfx::Transform"* nocapture readonly dereferenceable(68), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::MaskFilterInfo"* nocapture readonly dereferenceable(52), %"class.absl::optional"* nocapture readonly dereferenceable(20), i1 zeroext, float, i32, i32, i1 zeroext, float, i1 zeroext) unnamed_addr #0 align 2 {
  %14 = zext i1 %6 to i8
  %15 = zext i1 %10 to i8
  %16 = zext i1 %12 to i8
  %17 = bitcast %"class.viz::mojom::SharedQuadState"* %0 to i8*
  %18 = bitcast %"class.gfx::Transform"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 68, i1 false) #6
  %19 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 1
  %20 = bitcast %"class.gfx::Rect"* %19 to i8*
  %21 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 2
  %23 = bitcast %"class.gfx::Rect"* %22 to i8*
  %24 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 3
  %26 = bitcast %"class.gfx::MaskFilterInfo"* %25 to i8*
  %27 = bitcast %"class.gfx::MaskFilterInfo"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 52, i1 false)
  %28 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 20, i1 false)
  %30 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 5
  store i8 %14, i8* %30, align 4
  %31 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 7
  store float %7, float* %31, align 4
  %32 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 8
  store i32 %8, i32* %32, align 4
  %33 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 9
  store i32 %9, i32* %33, align 4
  %34 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 10
  store i8 %15, i8* %34, align 4
  %35 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 12
  store float %11, float* %35, align 4
  %36 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 13
  store i8 %16, i8* %36, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom15SharedQuadStateD2Ev(%"class.viz::mojom::SharedQuadState"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom15SharedQuadState14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::SharedQuadState"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedDictionary", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = alloca %"class.perfetto::TracedValue", align 8
  %23 = alloca %"class.perfetto::TracedValue", align 8
  %24 = alloca %"class.perfetto::TracedValue", align 8
  %25 = alloca %"class.perfetto::TracedValue", align 8
  %26 = alloca %"class.perfetto::TracedValue", align 8
  %27 = alloca %"class.perfetto::TracedValue", align 8
  %28 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %10, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #6
  %30 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  %31 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 7, i8* %32, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %33 = getelementptr inbounds i8, i8* %30, i64 7
  store i8 0, i8* %33, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #6
  %34 = load i8, i8* %32, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #7
  br label %39

39:                                               ; preds = %2, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #6
  %40 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #6
  %41 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 7, i8* %42, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %43 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 0, i8* %43, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #6
  %44 = load i8, i8* %42, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %39, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6
  %50 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  %51 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 7, i8* %52, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %53 = getelementptr inbounds i8, i8* %50, i64 7
  store i8 0, i8* %53, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #6
  %54 = load i8, i8* %52, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #7
  br label %59

59:                                               ; preds = %49, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #6
  %60 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #6
  %61 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 7, i8* %62, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %63 = getelementptr inbounds i8, i8* %60, i64 7
  store i8 0, i8* %63, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #6
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #7
  br label %69

69:                                               ; preds = %59, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #6
  %70 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #6
  %71 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 7, i8* %72, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %73 = getelementptr inbounds i8, i8* %70, i64 7
  store i8 0, i8* %73, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #6
  %74 = load i8, i8* %72, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #7
  br label %79

79:                                               ; preds = %76, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #6
  %80 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 5
  %81 = bitcast %"class.perfetto::TracedValue"* %21 to i8*
  %82 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* nonnull align 8 %81, i64 16, i1 false) #6
  %83 = load i8, i8* %80, align 1, !range !2
  %84 = icmp ne i8 %83, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %8, i1 zeroext %84) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %22, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #6
  %85 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 7
  %86 = bitcast %"class.perfetto::TracedValue"* %22 to i8*
  %87 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* nonnull align 8 %86, i64 16, i1 false) #6
  %88 = load float, float* %85, align 4
  %89 = fpext float %88 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %7, double %89) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %23, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #6
  %90 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 8
  %91 = bitcast %"class.perfetto::TracedValue"* %23 to i8*
  %92 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %91, i64 16, i1 false) #6
  %93 = load i32, i32* %90, align 4
  %94 = zext i32 %93 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %6, i64 %94) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %24, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #6
  %95 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 9
  %96 = bitcast %"class.perfetto::TracedValue"* %24 to i8*
  %97 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* nonnull align 8 %96, i64 16, i1 false) #6
  %98 = load i32, i32* %95, align 4
  %99 = sext i32 %98 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %99) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %25, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #6
  %100 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 10
  %101 = bitcast %"class.perfetto::TracedValue"* %25 to i8*
  %102 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %102, i8* nonnull align 8 %101, i64 16, i1 false) #6
  %103 = load i8, i8* %100, align 1, !range !2
  %104 = icmp ne i8 %103, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %4, i1 zeroext %104) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %26, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #6
  %105 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 12
  %106 = bitcast %"class.perfetto::TracedValue"* %26 to i8*
  %107 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* nonnull align 8 %106, i64 16, i1 false) #6
  %108 = load float, float* %105, align 4
  %109 = fpext float %108 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %3, double %109) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %27, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #6
  %110 = getelementptr inbounds %"class.viz::mojom::SharedQuadState", %"class.viz::mojom::SharedQuadState"* %0, i64 0, i32 13
  %111 = bitcast %"class.perfetto::TracedValue"* %27 to i8*
  %112 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* nonnull align 8 %111, i64 16, i1 false) #6
  %113 = load i8, i8* %110, align 1, !range !2
  %114 = icmp ne i8 %113, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %9, i1 zeroext %114) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom15SharedQuadState8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal20SharedQuadState_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal20SharedQuadState_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom23SharedQuadStateDataViewENS_9StructPtrINS2_15SharedQuadStateEEEE4ReadES3_PS6_(%"class.viz::mojom::internal::SharedQuadState_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 200) #7, !noalias !3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #6, !noalias !3
  %5 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 0, i8* %5, align 4, !noalias !3
  %6 = getelementptr inbounds i8, i8* %4, i64 68
  %7 = getelementptr inbounds i8, i8* %4, i64 172
  store i8 0, i8* %7, align 4, !noalias !3
  %8 = getelementptr inbounds i8, i8* %4, i64 176
  %9 = getelementptr inbounds i8, i8* %4, i64 192
  %10 = bitcast i8* %9 to float*
  store float 0.000000e+00, float* %10, align 4, !noalias !3
  %11 = getelementptr inbounds i8, i8* %4, i64 196
  store i8 0, i8* %11, align 4, !noalias !3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 85, i1 false) #6, !noalias !3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 13, i1 false) #6, !noalias !3
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %13, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = bitcast %"struct.mojo::internal::Pointer"* %13 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %15
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast i8* %4 to %class.SkMatrix44*
  br i1 %23, label %25, label %26

25:                                               ; preds = %17
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* nonnull %24) #6
  br label %30

26:                                               ; preds = %17
  %27 = getelementptr inbounds i8, i8* %20, i64 %22
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* nonnull %24, float* %29) #6
  br label %30

30:                                               ; preds = %26, %25, %3
  %31 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  %35 = bitcast %"struct.mojo::internal::Pointer.31"* %31 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %33
  br i1 %34, label %77, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds i8, i8* %36, i64 16
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %217, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %36, i64 20
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 1
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %217, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, i8* %36, i64 8
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 1
  %51 = getelementptr inbounds i8, i8* %36, i64 12
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  %54 = bitcast i8* %6 to i32*
  store i32 %50, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %4, i64 72
  %56 = bitcast i8* %55 to i32*
  store i32 %53, i32* %56, align 4
  %57 = icmp sgt i32 %50, 0
  %58 = icmp sgt i32 %40, 0
  %59 = and i1 %58, %57
  %60 = sub nuw nsw i32 2147483647, %50
  %61 = icmp ult i32 %60, %40
  %62 = and i1 %61, %59
  %63 = select i1 %62, i32 %60, i32 %40
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = getelementptr inbounds i8, i8* %4, i64 76
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  %68 = icmp sgt i32 %53, 0
  %69 = sub nuw nsw i32 2147483647, %53
  %70 = icmp ult i32 %69, %45
  %71 = and i1 %68, %70
  %72 = select i1 %71, i32 %69, i32 %45
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = getelementptr inbounds i8, i8* %4, i64 80
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 4
  br label %77

77:                                               ; preds = %47, %30
  %78 = getelementptr inbounds i8, i8* %4, i64 84
  %79 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 3
  %80 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %79, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  %83 = bitcast %"struct.mojo::internal::Pointer.31"* %79 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %81
  br i1 %82, label %125, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds i8, i8* %84, i64 16
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %217, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds i8, i8* %84, i64 20
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 1
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %217, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %84, i64 8
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  %99 = getelementptr inbounds i8, i8* %84, i64 12
  %100 = bitcast i8* %99 to i32*
  %101 = load i32, i32* %100, align 1
  %102 = bitcast i8* %78 to i32*
  store i32 %98, i32* %102, align 4
  %103 = getelementptr inbounds i8, i8* %4, i64 88
  %104 = bitcast i8* %103 to i32*
  store i32 %101, i32* %104, align 4
  %105 = icmp sgt i32 %98, 0
  %106 = icmp sgt i32 %88, 0
  %107 = and i1 %106, %105
  %108 = sub nuw nsw i32 2147483647, %98
  %109 = icmp ult i32 %108, %88
  %110 = and i1 %109, %107
  %111 = select i1 %110, i32 %108, i32 %88
  %112 = icmp sgt i32 %111, 0
  %113 = select i1 %112, i32 %111, i32 0
  %114 = getelementptr inbounds i8, i8* %4, i64 92
  %115 = bitcast i8* %114 to i32*
  store i32 %113, i32* %115, align 4
  %116 = icmp sgt i32 %101, 0
  %117 = sub nuw nsw i32 2147483647, %101
  %118 = icmp ult i32 %117, %93
  %119 = and i1 %116, %118
  %120 = select i1 %119, i32 %117, i32 %93
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = getelementptr inbounds i8, i8* %4, i64 96
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 4
  br label %125

125:                                              ; preds = %95, %77
  %126 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 4
  %127 = getelementptr inbounds %"struct.mojo::internal::Pointer.32", %"struct.mojo::internal::Pointer.32"* %126, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %125
  %131 = bitcast %"struct.mojo::internal::Pointer.32"* %126 to i8*
  %132 = getelementptr inbounds i8, i8* %131, i64 %128
  %133 = getelementptr inbounds i8, i8* %4, i64 100
  %134 = bitcast i8* %133 to %"class.gfx::MaskFilterInfo"*
  %135 = bitcast i8* %132 to %"class.gfx::mojom::internal::MaskFilterInfo_Data"*
  %136 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom22MaskFilterInfoDataViewENS1_14MaskFilterInfoEE4ReadES3_PS4_(%"class.gfx::mojom::internal::MaskFilterInfo_Data"* nonnull %135, %"class.mojo::Message"* %1, %"class.gfx::MaskFilterInfo"* %134) #6
  br i1 %136, label %137, label %217

137:                                              ; preds = %125, %130
  %138 = getelementptr inbounds i8, i8* %4, i64 152
  %139 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 5
  %140 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %139, i64 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  %143 = bitcast %"struct.mojo::internal::Pointer.31"* %139 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 %141
  br i1 %142, label %145, label %146

145:                                              ; preds = %137
  store i8 0, i8* %138, align 4
  br label %192

146:                                              ; preds = %137
  %147 = load i8, i8* %138, align 4, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = getelementptr inbounds i8, i8* %4, i64 156
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %150, i8 0, i64 16, i1 false) #6
  store i8 1, i8* %138, align 4
  br label %151

151:                                              ; preds = %149, %146
  %152 = getelementptr inbounds i8, i8* %144, i64 16
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 1
  %155 = icmp slt i32 %154, 0
  br i1 %155, label %217, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds i8, i8* %144, i64 20
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 1
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %217, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds i8, i8* %144, i64 8
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 1
  %165 = getelementptr inbounds i8, i8* %144, i64 12
  %166 = bitcast i8* %165 to i32*
  %167 = load i32, i32* %166, align 1
  %168 = getelementptr inbounds i8, i8* %4, i64 156
  %169 = bitcast i8* %168 to i32*
  store i32 %164, i32* %169, align 4
  %170 = getelementptr inbounds i8, i8* %4, i64 160
  %171 = bitcast i8* %170 to i32*
  store i32 %167, i32* %171, align 4
  %172 = icmp sgt i32 %164, 0
  %173 = icmp sgt i32 %154, 0
  %174 = and i1 %173, %172
  %175 = sub nuw nsw i32 2147483647, %164
  %176 = icmp ult i32 %175, %154
  %177 = and i1 %176, %174
  %178 = select i1 %177, i32 %175, i32 %154
  %179 = icmp sgt i32 %178, 0
  %180 = select i1 %179, i32 %178, i32 0
  %181 = getelementptr inbounds i8, i8* %4, i64 164
  %182 = bitcast i8* %181 to i32*
  store i32 %180, i32* %182, align 4
  %183 = icmp sgt i32 %167, 0
  %184 = sub nuw nsw i32 2147483647, %167
  %185 = icmp ult i32 %184, %159
  %186 = and i1 %183, %185
  %187 = select i1 %186, i32 %184, i32 %159
  %188 = icmp sgt i32 %187, 0
  %189 = select i1 %188, i32 %187, i32 0
  %190 = getelementptr inbounds i8, i8* %4, i64 168
  %191 = bitcast i8* %190 to i32*
  store i32 %189, i32* %191, align 4
  br label %192

192:                                              ; preds = %161, %145
  %193 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 6
  %194 = load i8, i8* %193, align 1
  %195 = and i8 %194, 1
  store i8 %195, i8* %7, align 4
  %196 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 8
  %197 = bitcast float* %196 to i32*
  %198 = load i32, i32* %197, align 1
  %199 = bitcast i8* %8 to i32*
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 9
  %201 = load i32, i32* %200, align 1
  %202 = getelementptr inbounds i8, i8* %4, i64 180
  %203 = bitcast i8* %202 to i32*
  store i32 %201, i32* %203, align 4
  %204 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 10
  %205 = load i32, i32* %204, align 1
  %206 = getelementptr inbounds i8, i8* %4, i64 184
  %207 = bitcast i8* %206 to i32*
  store i32 %205, i32* %207, align 4
  %208 = getelementptr inbounds i8, i8* %4, i64 188
  %209 = lshr i8 %194, 1
  %210 = and i8 %209, 1
  store i8 %210, i8* %208, align 4
  %211 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 11
  %212 = bitcast float* %211 to i32*
  %213 = load i32, i32* %212, align 1
  %214 = bitcast i8* %9 to i32*
  store i32 %213, i32* %214, align 4
  %215 = lshr i8 %194, 2
  %216 = and i8 %215, 1
  store i8 %216, i8* %11, align 4
  br label %217

217:                                              ; preds = %42, %37, %90, %85, %130, %156, %151, %192
  %218 = phi i1 [ true, %192 ], [ false, %151 ], [ false, %156 ], [ false, %130 ], [ false, %85 ], [ false, %90 ], [ false, %37 ], [ false, %42 ]
  %219 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %220 = load %"class.viz::mojom::SharedQuadState"*, %"class.viz::mojom::SharedQuadState"** %219, align 8
  store %"class.viz::mojom::SharedQuadState"* null, %"class.viz::mojom::SharedQuadState"** %219, align 8
  %221 = icmp eq %"class.viz::mojom::SharedQuadState"* %220, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %217
  %223 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %12, i64* %223, align 8
  br label %231

224:                                              ; preds = %217
  %225 = bitcast %"class.viz::mojom::SharedQuadState"* %220 to i8*
  tail call void @_ZdlPv(i8* %225) #7
  %226 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %227 = load %"class.viz::mojom::SharedQuadState"*, %"class.viz::mojom::SharedQuadState"** %219, align 8
  store i64 %12, i64* %226, align 8
  %228 = icmp eq %"class.viz::mojom::SharedQuadState"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %224
  %230 = bitcast %"class.viz::mojom::SharedQuadState"* %227 to i8*
  tail call void @_ZdlPv(i8* %230) #7
  br label %231

231:                                              ; preds = %222, %224, %229
  ret i1 %218
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #3

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom22MaskFilterInfoDataViewENS1_14MaskFilterInfoEE4ReadES3_PS4_(%"class.gfx::mojom::internal::MaskFilterInfo_Data"*, %"class.mojo::Message"*, %"class.gfx::MaskFilterInfo"*) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3viz5mojom15SharedQuadState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN3viz5mojom15SharedQuadState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
