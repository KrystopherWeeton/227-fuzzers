; ModuleID = '../../native_client/src/trusted/service_runtime/sel_main_chrome.c'
source_filename = "../../native_client/src/trusted/service_runtime/sel_main_chrome.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.NaClChromeMainArgs = type { i32, %struct.NaClDesc*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 (i64, i32)*, %struct.NaClValidationCache*, void (i32)*, i32, i64, %struct.NaClDesc*, i32, i8** }
%struct.NaClValidationCache = type opaque
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClThread = type { i64 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type { i32, i64, i8*, i64, i64, i64, i64, i64, i64 }
%struct.NaClEnvCleanser = type { i32, i32, i8** }
%struct.NaClRichFileInfo = type { i8, i8*, i32 }

@g_initialized = internal unnamed_addr global i1 false, align 4
@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../native_client/src/trusted/service_runtime/sel_main_chrome.c\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"!g_initialized\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"g_initialized\00", align 1
@g_fatal_error_handler = internal unnamed_addr global void (i8*, i64)* null, align 8
@.str.4 = private unnamed_addr constant [41 x i8] c"NaClSetFatalErrorCallback called twice.\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"NACL_DANGEROUS_SKIP_QUALIFICATION_TEST\00", align 1
@default_argv = internal constant [1 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0)], align 8
@.str.6 = private unnamed_addr constant [14 x i8] c"state == NULL\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"NaClMain\00", align 1
@g_prereserved_sandbox_size = external local_unnamed_addr global i64, align 8
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.8 = private unnamed_addr constant [79 x i8] c"PLATFORM QUALIFICATION DISABLED - Native Client's sandbox will be unreliable!\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"pq\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Error while loading in SelMain: %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"args->nexe_desc != NULL\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"BeforeLoadIrt\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"NaCl Fault Injection: at %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [67 x i8] c"Skipped NaClLoadIrt, irt_load_optional with dynamic_text_end: %lx\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"args->irt_desc == NULL\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [53 x i8] c"NaCl LoadApp failed. Transferring logs before exit.\0A\00", align 1
@.str.17 = private unnamed_addr constant [54 x i8] c"IrtDescFromFd: Integrated runtime (IRT) not present.\0A\00", align 1
@.str.18 = private unnamed_addr constant [68 x i8] c"IrtDescFromFd: failed to construct NaClDesc object from descriptor\0A\00", align 1
@kFakeIrtName = internal global [5 x i8] c"\00IRT\00", align 1
@.str.19 = private unnamed_addr constant [62 x i8] c"NaClLoadIrt: Failed to load the integrated runtime (IRT): %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"BeforeEnvCleanserCtor\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"Failed to initialise env cleanser\0A\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"CreateMainThread\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"creating main thread failed\0A\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"BeforeEnvCleanserDtor\00", align 1
@.str.25 = private unnamed_addr constant [40 x i8] c"NaCl untrusted code called _exit(0x%x)\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClChromeMainSetUrandomFd(i32) local_unnamed_addr #0 {
  %2 = load i1, i1* @g_initialized, align 4
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 53, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %4

4:                                                ; preds = %1, %3
  tail call void @NaClSecureRngModuleSetUrandomFd(i32 %0) #6
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

declare void @NaClSecureRngModuleSetUrandomFd(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClChromeMainInit() local_unnamed_addr #0 {
  %1 = load i1, i1* @g_initialized, align 4
  br i1 %1, label %2, label %3

2:                                                ; preds = %0
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %3

3:                                                ; preds = %0, %2
  tail call void @NaClAllModulesInit() #6
  store i1 true, i1* @g_initialized, align 4
  ret void
}

declare void @NaClAllModulesInit() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSetFatalErrorCallback(void (i8*, i64)*) local_unnamed_addr #0 {
  %2 = load i1, i1* @g_initialized, align 4
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %4

4:                                                ; preds = %1, %3
  %5 = load void (i8*, i64)*, void (i8*, i64)** @g_fatal_error_handler, align 8
  %6 = icmp eq void (i8*, i64)* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %8

8:                                                ; preds = %4, %7
  store void (i8*, i64)* %0, void (i8*, i64)** @g_fatal_error_handler, align 8
  tail call void @NaClErrorLogHookInit(void (i8*, i8*, i64)* nonnull @NaClFatalErrorHandlerCallback, i8* null) #6
  ret void
}

declare void @NaClErrorLogHookInit(void (i8*, i8*, i64)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @NaClFatalErrorHandlerCallback(i8* readnone, i8*, i64) #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %6

6:                                                ; preds = %3, %5
  %7 = load void (i8*, i64)*, void (i8*, i64)** @g_fatal_error_handler, align 8
  tail call void %7(i8* %1, i64 %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClChromeMainArgs* @NaClChromeMainArgsCreate() local_unnamed_addr #0 {
  %1 = load i1, i1* @g_initialized, align 4
  br i1 %1, label %3, label %2

2:                                                ; preds = %0
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %3

3:                                                ; preds = %2, %0
  %4 = tail call noalias i8* @malloc(i64 120) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %4 to %struct.NaClChromeMainArgs*
  %8 = bitcast i8* %4 to i32*
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = getelementptr inbounds i8, i8* %4, i64 28
  %11 = bitcast i8* %10 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 32
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #6
  %15 = icmp ne i8* %14, null
  %16 = zext i1 %15 to i32
  %17 = getelementptr inbounds i8, i8* %4, i64 36
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %4, i64 40
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 48
  %22 = bitcast i8* %21 to i32*
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 44
  %24 = bitcast i8* %23 to i32*
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %4, i64 56
  %26 = getelementptr inbounds i8, i8* %4, i64 80
  %27 = bitcast i8* %26 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false)
  store i32 -1, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %4, i64 88
  %29 = getelementptr inbounds i8, i8* %4, i64 104
  %30 = bitcast i8* %29 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %4, i64 112
  %32 = bitcast i8* %31 to i8***
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @default_argv, i64 0, i64 0), i8*** %32, align 8
  br label %33

33:                                               ; preds = %3, %6
  %34 = phi %struct.NaClChromeMainArgs* [ %7, %6 ], [ null, %3 ]
  ret %struct.NaClChromeMainArgs* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClChromeMainStart(%struct.NaClApp*, %struct.NaClChromeMainArgs*, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.NaClEnvCleanser, align 8
  %5 = alloca %struct.NaClRichFileInfo, align 8
  %6 = alloca %struct.NaClValidationMetadata, align 8
  %7 = load i1, i1* @g_initialized, align 4
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %9

9:                                                ; preds = %8, %3
  %10 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 26
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 2
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 46
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 15
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* @g_prereserved_sandbox_size, align 8
  %21 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 63
  store i32 %22, i32* %25, align 8
  br label %26

26:                                               ; preds = %24, %9
  %27 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 11
  %28 = load i32 (i64, i32)*, i32 (i64, i32)** %27, align 8
  %29 = icmp eq i32 (i64, i32)* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @NaClSetCreateMemoryObjectFunc(i32 (i64, i32)* nonnull %28) #6
  br label %31

31:                                               ; preds = %30, %26
  %32 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 12
  %33 = bitcast %struct.NaClValidationCache** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 41
  %36 = bitcast %struct.NaClValidationCache** %35 to i64*
  store i64 %34, i64* %36, align 8
  tail call void @NaClAppInitialDescriptorHookup(%struct.NaClApp* %0) #6
  %37 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 7
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %31
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %41, i32 1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %59

43:                                               ; preds = %31
  %44 = tail call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = tail call i64 @NaClFaultInjectionValue() #6
  %48 = trunc i64 %47 to i32
  br label %51

49:                                               ; preds = %43
  %50 = tail call i32 @NaClRunSelQualificationTests() #6
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi i32 [ %48, %46 ], [ %50, %49 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 22
  store i32 %52, i32* %55, align 4
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = tail call i8* @NaClErrorString(i32 %52) #6
  %58 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %56, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8* %57) #6
  br label %141

59:                                               ; preds = %51, %40
  tail call void @NaClSignalTestCrashOnStartup() #6
  %60 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 58
  store i32 %61, i32* %62, align 4
  tail call void @NaClSignalHandlerInit() #6
  tail call void @NaClGdbHook(%struct.NaClApp* %0) #6
  %63 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 16
  %64 = load %struct.NaClDesc*, %struct.NaClDesc** %63, align 8
  %65 = icmp eq %struct.NaClDesc* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 269, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #6
  %67 = load %struct.NaClDesc*, %struct.NaClDesc** %63, align 8
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi %struct.NaClDesc* [ %64, %59 ], [ %67, %66 ]
  tail call void @NaClAppLoadModule(%struct.NaClApp* %0, %struct.NaClDesc* %69) #6
  %70 = load %struct.NaClDesc*, %struct.NaClDesc** %63, align 8
  tail call void @NaClDescUnref(%struct.NaClDesc* %70) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %63, align 8
  %71 = tail call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)) #6
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %68
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %74

74:                                               ; preds = %73, %68
  %75 = tail call i32 @NaClGetLoadStatus(%struct.NaClApp* %0) #6
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %141

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 9
  %83 = load i64, i64* %82, align 8
  %84 = icmp ult i64 %83, 268435456
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.14, i64 0, i64 0), i64 %83) #6
  br label %119

86:                                               ; preds = %81, %77
  %87 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, -1
  %90 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 1
  %91 = load %struct.NaClDesc*, %struct.NaClDesc** %90, align 8
  br i1 %89, label %104, label %92

92:                                               ; preds = %86
  %93 = icmp eq %struct.NaClDesc* %91, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 296, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #6
  %95 = load i32, i32* %87, align 8
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %98

98:                                               ; preds = %97, %94, %92
  %99 = phi i32 [ -1, %97 ], [ %95, %94 ], [ %88, %92 ]
  %100 = tail call %struct.NaClDesc* @NaClDescIoDescFromDescAllocCtor(i32 %99, i32 0) #6
  %101 = icmp eq %struct.NaClDesc* %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %103

103:                                              ; preds = %102, %98
  store %struct.NaClDesc* %100, %struct.NaClDesc** %90, align 8
  store i32 -1, i32* %87, align 8
  br label %104

104:                                              ; preds = %103, %86
  %105 = phi %struct.NaClDesc* [ %100, %103 ], [ %91, %86 ]
  %106 = icmp eq %struct.NaClDesc* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.NaClRichFileInfo, %struct.NaClRichFileInfo* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #6
  %109 = bitcast %struct.NaClValidationMetadata* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %109) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 72, i1 false) #6
  call void @NaClRichFileInfoCtor(%struct.NaClRichFileInfo* nonnull %5) #6
  store i8 1, i8* %108, align 8
  %110 = getelementptr inbounds %struct.NaClRichFileInfo, %struct.NaClRichFileInfo* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @kFakeIrtName, i64 0, i64 0), i8** %110, align 8
  %111 = getelementptr inbounds %struct.NaClRichFileInfo, %struct.NaClRichFileInfo* %5, i64 0, i32 2
  store i32 5, i32* %111, align 8
  %112 = call i32 @NaClSetFileOriginInfo(%struct.NaClDesc* nonnull %105, %struct.NaClRichFileInfo* nonnull %5) #6
  call void @NaClMetadataFromNaClDescCtor(%struct.NaClValidationMetadata* nonnull %6, %struct.NaClDesc* nonnull %105) #6
  %113 = call i32 @NaClMainLoadIrt(%struct.NaClApp* %0, %struct.NaClDesc* nonnull %105, %struct.NaClValidationMetadata* nonnull %6) #6
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  %116 = call i8* @NaClErrorString(i32 %113) #6
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.19, i64 0, i64 0), i8* %116) #6
  br label %117

117:                                              ; preds = %115, %107
  call void @NaClMetadataDtor(%struct.NaClValidationMetadata* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %109) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #6
  %118 = load %struct.NaClDesc*, %struct.NaClDesc** %90, align 8
  call void @NaClDescUnref(%struct.NaClDesc* %118) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %90, align 8
  br label %119

119:                                              ; preds = %117, %104, %85
  %120 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 4
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 10
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  call void @NaClDebugStubSetPipe(i32 %125) #6
  br label %133

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 9
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @NaClDebugSetBoundSocket(i32 %130) #6
  br label %133

133:                                              ; preds = %132, %128, %127
  %134 = call i32 @NaClDebugInit(%struct.NaClApp* %0) #6
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %133, %119
  %137 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 13
  %138 = load void (i32)*, void (i32)** %137, align 8
  %139 = icmp eq void (i32)* %138, null
  br i1 %139, label %154, label %140

140:                                              ; preds = %136
  call void %138(i32 0) #6
  br label %154

141:                                              ; preds = %74, %54
  %142 = phi i32 [ %52, %54 ], [ %75, %74 ]
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %144 = tail call i32 @fflush(%struct._IO_FILE* %143) #6
  br label %148

145:                                              ; preds = %133
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %147 = call i32 @fflush(%struct._IO_FILE* %146) #6
  br label %148

148:                                              ; preds = %145, %141
  %149 = phi i32 [ 4, %145 ], [ %142, %141 ]
  %150 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 13
  %151 = load void (i32)*, void (i32)** %150, align 8
  %152 = icmp eq void (i32)* %151, null
  br i1 %152, label %188, label %153

153:                                              ; preds = %148
  call void %151(i32 %149) #6
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #6
  call void @NaClLogRunAbortBehavior() #6
  br label %188

154:                                              ; preds = %136, %140
  %155 = bitcast %struct.NaClEnvCleanser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 16, i1 false) #6
  %156 = call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)) #6
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %154
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)) #6
  br label %159

159:                                              ; preds = %158, %154
  call void @NaClEnvCleanserCtor(%struct.NaClEnvCleanser* nonnull %4, i32 1, i32 0) #6
  %160 = call i8** @NaClGetEnviron() #6
  %161 = call i32 @NaClEnvCleanserInit(%struct.NaClEnvCleanser* nonnull %4, i8** %160, i8** null) #6
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %159
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0)) #6
  br label %164

164:                                              ; preds = %163, %159
  %165 = call i8** @NaClEnvCleanserEnvironment(%struct.NaClEnvCleanser* nonnull %4) #6
  %166 = call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #6
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 17
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %struct.NaClChromeMainArgs, %struct.NaClChromeMainArgs* %1, i64 0, i32 18
  %172 = load i8**, i8*** %171, align 8
  %173 = call i32 @NaClCreateMainThread(%struct.NaClApp* %0, i32 %170, i8** %172, i8** %165) #6
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168, %164
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %176

176:                                              ; preds = %175, %168
  %177 = call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0)) #6
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %180

180:                                              ; preds = %179, %176
  call void @NaClEnvCleanserDtor(%struct.NaClEnvCleanser* nonnull %4) #6
  %181 = call i32 @NaClWaitForMainThreadToExit(%struct.NaClApp* %0) #6
  %182 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 39
  %183 = load i32, i32* %182, align 8
  %184 = and i32 %183, 127
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25, i64 0, i64 0), i32 %181) #6
  br label %187

187:                                              ; preds = %180, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #6
  store i32 %181, i32* %2, align 4
  br label %188

188:                                              ; preds = %153, %148, %187
  %189 = phi i32 [ 1, %187 ], [ 0, %148 ], [ 0, %153 ]
  %190 = bitcast %struct.NaClChromeMainArgs* %1 to i8*
  call void @free(i8* %190) #6
  ret i32 %189
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @NaClSetCreateMemoryObjectFunc(i32 (i64, i32)*) local_unnamed_addr #1

declare void @NaClAppInitialDescriptorHookup(%struct.NaClApp*) local_unnamed_addr #1

declare i32 @__fprintf_chk(%struct._IO_FILE*, i32, i8*, ...) local_unnamed_addr #1

declare i32 @NaClFaultInjectionFaultP(i8*) local_unnamed_addr #1

declare i64 @NaClFaultInjectionValue() local_unnamed_addr #1

declare i32 @NaClRunSelQualificationTests() local_unnamed_addr #1

declare i8* @NaClErrorString(i32) local_unnamed_addr #1

declare void @NaClSignalTestCrashOnStartup() local_unnamed_addr #1

declare void @NaClSignalHandlerInit() local_unnamed_addr #1

declare void @NaClGdbHook(%struct.NaClApp*) local_unnamed_addr #1

declare void @NaClAppLoadModule(%struct.NaClApp*, %struct.NaClDesc*) local_unnamed_addr #1

declare void @NaClDescUnref(%struct.NaClDesc*) local_unnamed_addr #1

declare i32 @NaClGetLoadStatus(%struct.NaClApp*) local_unnamed_addr #1

declare void @NaClDebugStubSetPipe(i32) local_unnamed_addr #1

declare void @NaClDebugSetBoundSocket(i32) local_unnamed_addr #1

declare i32 @NaClDebugInit(%struct.NaClApp*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #3

declare void @NaClLogRunAbortBehavior() local_unnamed_addr #1

declare %struct.NaClDesc* @NaClDescIoDescFromDescAllocCtor(i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @NaClRichFileInfoCtor(%struct.NaClRichFileInfo*) local_unnamed_addr #1

declare i32 @NaClSetFileOriginInfo(%struct.NaClDesc*, %struct.NaClRichFileInfo*) local_unnamed_addr #1

declare void @NaClMetadataFromNaClDescCtor(%struct.NaClValidationMetadata*, %struct.NaClDesc*) local_unnamed_addr #1

declare i32 @NaClMainLoadIrt(%struct.NaClApp*, %struct.NaClDesc*, %struct.NaClValidationMetadata*) local_unnamed_addr #1

declare void @NaClMetadataDtor(%struct.NaClValidationMetadata*) local_unnamed_addr #1

declare void @NaClEnvCleanserCtor(%struct.NaClEnvCleanser*, i32, i32) local_unnamed_addr #1

declare i32 @NaClEnvCleanserInit(%struct.NaClEnvCleanser*, i8**, i8**) local_unnamed_addr #1

declare i8** @NaClGetEnviron() local_unnamed_addr #1

declare i8** @NaClEnvCleanserEnvironment(%struct.NaClEnvCleanser*) local_unnamed_addr #1

declare i32 @NaClCreateMainThread(%struct.NaClApp*, i32, i8**, i8**) local_unnamed_addr #1

declare void @NaClEnvCleanserDtor(%struct.NaClEnvCleanser*) local_unnamed_addr #1

declare i32 @NaClWaitForMainThreadToExit(%struct.NaClApp*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
