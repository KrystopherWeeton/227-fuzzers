; ModuleID = '../../third_party/blink/renderer/modules/service_worker/fetch_respond_with_observer.cc'
source_filename = "../../third_party/blink/renderer/modules/service_worker/fetch_respond_with_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.66", i32, [4 x i8], %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.244", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.183", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.162", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { float }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.186", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.195" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.225" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.473" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__cxx_atomic_impl.246" }
%"struct.std::__1::__cxx_atomic_impl.246" = type { %"struct.std::__1::__cxx_atomic_base_impl.247" }
%"struct.std::__1::__cxx_atomic_base_impl.247" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.64", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.347" }
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__atomic_base.349" }
%"struct.std::__1::__atomic_base.349" = type { %"struct.std::__1::__cxx_atomic_impl.350" }
%"struct.std::__1::__cxx_atomic_impl.350" = type { %"struct.std::__1::__cxx_atomic_base_impl.351" }
%"struct.std::__1::__cxx_atomic_base_impl.351" = type { i32 }
%"class.blink::FetchRespondWithObserver" = type { %"class.blink::RespondWithObserver", %"class.blink::KURL", i32, i32, i32, i32, %"class.blink::Member.3", %"class.blink::Member.295", i8, %"class.base::WeakPtr", %class.scoped_refptr.449 }
%"class.blink::RespondWithObserver" = type { %"class.blink::ExecutionContextClient", i32, %"class.base::TimeTicks", i32, %"class.blink::Member" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::WaitUntilObserver"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::FetchEvent"* }
%"class.blink::FetchEvent" = type <{ %"class.blink::ExtendableEvent", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.13", %"class.blink::Member.15", %"class.blink::Member.370", %"class.std::__1::unique_ptr.372", %"class.blink::Member.443", %"class.blink::Member.464", %"class.blink::HeapMojoRemote.467", %"class.WTF::String", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::ExtendableEvent" = type { %"class.blink::Event", %"class.blink::Member" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.7", %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::Member.11", %"class.base::TimeTicks" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Event"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::FetchRespondWithObserver"* }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::Request"* }
%"class.blink::Request" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.17", %"class.blink::Body", %"class.blink::Member.18", %"class.blink::Member.368", %"class.blink::Member.321" }
%"class.blink::ActiveScriptWrappable.17" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Body" = type { %"class.blink::ExecutionContextClient" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::FetchRequestData"* }
%"class.blink::FetchRequestData" = type <{ %"class.WTF::AtomicString", %"class.blink::KURL", %"class.blink::Member.22", i32, [4 x i8], %class.scoped_refptr.32, %class.scoped_refptr.32, %"class.WTF::AtomicString", i32, i32, i32, i32, i32, i32, %"class.absl::optional.33", %"class.blink::Member.43", %"class.WTF::String", %"class.WTF::String", i32, i8, i8, [2 x i8], %"class.blink::HeapMojoRemote", %"class.base::UnguessableToken", %"class.blink::Member.361", i8, [7 x i8] }>
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::FetchHeaderList"* }
%"class.blink::FetchHeaderList" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%class.scoped_refptr.32 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.478", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.432", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.32 }
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.432" = type { %"class.absl::optional_internal::optional_data.433" }
%"class.absl::optional_internal::optional_data.433" = type { %"class.absl::optional_internal::optional_data_base.434" }
%"class.absl::optional_internal::optional_data_base.434" = type { %"class.absl::optional_internal::optional_data_dtor_base.435" }
%"class.absl::optional_internal::optional_data_dtor_base.435" = type { i8, %union.anon.436 }
%union.anon.436 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.38", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.32*, i32, i32 }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::BodyStreamBuffer"* }
%"class.blink::BodyStreamBuffer" = type <{ %"class.blink::UnderlyingSourceBase", %"class.blink::BytesConsumer::Client", %"class.blink::Member.53", %"class.blink::Member.295", %"class.blink::Member.311", %"class.blink::Member.313", %"class.blink::Member.317", %"class.blink::Member.321", %"class.blink::Member.362", %class.scoped_refptr.364, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::UnderlyingSourceBase" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.51" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.45" }
%"class.blink::WeakMember.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.50"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ReadableStreamDefaultControllerWithScriptScope"* }
%"class.blink::ReadableStreamDefaultControllerWithScriptScope" = type opaque
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.57, %"class.blink::Member.248", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.57 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.252", %"class.blink::HeapHashMap.261", %"class.std::__1::unique_ptr.271", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.283", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.286" }
%"class.blink::HeapHashMap.252" = type { %"class.WTF::HashMap.255" }
%"class.WTF::HashMap.255" = type { %"class.WTF::HashTable.256" }
%"class.WTF::HashTable.256" = type <{ %"struct.WTF::KeyValuePair.258"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.258" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.261" = type { %"class.WTF::HashMap.264" }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.268" }
%"class.blink::TraceWrapperV8Reference.268" = type { %"class.v8::TracedReference.269" }
%"class.v8::TracedReference.269" = type { %"class.v8::BasicTracedReference.270" }
%"class.v8::BasicTracedReference.270" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.274" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.283" = type { %"class.v8::Persistent.284" }
%"class.v8::Persistent.284" = type { %"class.v8::PersistentBase.285" }
%"class.v8::PersistentBase.285" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.286" = type { %"class.WTF::HashMap.289" }
%"class.WTF::HashMap.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"struct.WTF::KeyValuePair.292"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.292" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.293" }
%"class.blink::Persistent.293" = type { %"class.blink::PersistentBase.294" }
%"class.blink::PersistentBase.294" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::BytesUploader"* }
%"class.blink::BytesUploader" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::FetchDataLoader"* }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%class.scoped_refptr.364 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.365" }
%"class.base::RefCountedThreadSafe.365" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.347" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.366" }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1659" }
%"class.mojo::Remote.1659" = type { %"class.mojo::internal::InterfacePtrState.1660" }
%"class.mojo::internal::InterfacePtrState.1660" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1661" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.798, %"class.std::__1::unique_ptr.905", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.452, i32 }>
%class.scoped_refptr.798 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.452, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.871", %"class.absl::optional.876", %"class.absl::optional.829", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.896", i8, [7 x i8], %class.scoped_refptr.452, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.799" }>
%"class.base::RefCountedThreadSafe.799" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.428 }
%union.anon.428 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.800", %"class.std::__1::unique_ptr.806", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.812" }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.812" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.456", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.456" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.457" }
%"struct.std::__1::atomic.457" = type { %"struct.std::__1::__atomic_base.458" }
%"struct.std::__1::__atomic_base.458" = type { %"struct.std::__1::__atomic_base.459" }
%"struct.std::__1::__atomic_base.459" = type { %"struct.std::__1::__cxx_atomic_impl.460" }
%"struct.std::__1::__cxx_atomic_impl.460" = type { %"struct.std::__1::__cxx_atomic_base_impl.461" }
%"struct.std::__1::__cxx_atomic_base_impl.461" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.452, %"class.std::__1::unique_ptr.813", %"class.absl::optional.819", %"struct.std::__1::atomic.244", i8, i8, i8, i8, i32, i32, %"class.absl::optional.829", %"class.std::__1::unique_ptr.834", i8, i64, %class.scoped_refptr.867, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.869", %"class.base::WeakPtrFactory.870" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.452, i8, %"class.mojo::ScopedHandleBase.453", %class.scoped_refptr.454, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.453" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.454 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.824", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.824" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.837", i8, i64, %class.scoped_refptr.838, %class.scoped_refptr.863 }
%"class.base::RepeatingCallback.837" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.838 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.839", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.841", %"class.std::__1::map.852", i8, [7 x i8] }>
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.840 }
%class.scoped_refptr.840 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.841" = type { %"class.std::__1::__tree.842" }
%"class.std::__1::__tree.842" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.843", %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.852" = type { %"class.std::__1::__tree.853" }
%"class.std::__1::__tree.853" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.854", %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%class.scoped_refptr.863 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.867 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.868 }
%class.scoped_refptr.868 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1315", [4 x i8], %"class.base::RepeatingCallback.908", %class.scoped_refptr.452, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1315" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.908" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.869" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.870" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.871" = type { %"class.absl::optional_internal::optional_data.872" }
%"class.absl::optional_internal::optional_data.872" = type { %"class.absl::optional_internal::optional_data_base.873" }
%"class.absl::optional_internal::optional_data_base.873" = type { %"class.absl::optional_internal::optional_data_dtor_base.874" }
%"class.absl::optional_internal::optional_data_dtor_base.874" = type { i8, %union.anon.875 }
%union.anon.875 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.876" = type { %"class.absl::optional_internal::optional_data.877" }
%"class.absl::optional_internal::optional_data.877" = type { %"class.absl::optional_internal::optional_data_base.878" }
%"class.absl::optional_internal::optional_data_base.878" = type { %"class.absl::optional_internal::optional_data_dtor_base.879" }
%"class.absl::optional_internal::optional_data_dtor_base.879" = type { i8, [7 x i8], %union.anon.880 }
%union.anon.880 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.829" = type { %"class.absl::optional_internal::optional_data.830" }
%"class.absl::optional_internal::optional_data.830" = type { %"class.absl::optional_internal::optional_data_base.831" }
%"class.absl::optional_internal::optional_data_base.831" = type { %"class.absl::optional_internal::optional_data_dtor_base.832" }
%"class.absl::optional_internal::optional_data_dtor_base.832" = type { i8, %union.anon.833 }
%union.anon.833 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.881 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.881 = type { %"class.std::__1::map.884" }
%"class.std::__1::map.884" = type { %"class.std::__1::__tree.885" }
%"class.std::__1::__tree.885" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.895"*, i64 }
%"class.std::__1::unique_ptr.895" = type opaque
%"class.std::__1::map.896" = type { %"class.std::__1::__tree.897" }
%"class.std::__1::__tree.897" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.908", %"class.base::OnceCallback.909", %"class.absl::optional.401", %"class.absl::optional.910", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.917", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.925", %"class.std::__1::map.936", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.945", i8, %class.scoped_refptr.452, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.946" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.909" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.401" = type { %"class.absl::optional_internal::optional_data.402" }
%"class.absl::optional_internal::optional_data.402" = type { %"class.absl::optional_internal::optional_data_base.403" }
%"class.absl::optional_internal::optional_data_base.403" = type { %"class.absl::optional_internal::optional_data_dtor_base.404" }
%"class.absl::optional_internal::optional_data_dtor_base.404" = type { i8, %union.anon.405 }
%union.anon.405 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.910" = type { %"class.absl::optional_internal::optional_data.911" }
%"class.absl::optional_internal::optional_data.911" = type { %"class.absl::optional_internal::optional_data_base.912" }
%"class.absl::optional_internal::optional_data_base.912" = type { %"class.absl::optional_internal::optional_data_dtor_base.913" }
%"class.absl::optional_internal::optional_data_dtor_base.913" = type { i8, %union.anon.914 }
%union.anon.914 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.452, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.915" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.915" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.916 }
%class.scoped_refptr.916 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.920", %class.scoped_refptr.921 }
%"class.base::RepeatingCallback.920" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.921 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.799", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.925" = type { %"class.std::__1::__tree.926" }
%"class.std::__1::__tree.926" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.936" = type { %"class.std::__1::__tree.937" }
%"class.std::__1::__tree.937" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.938", %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::OnceCallback.945" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.946" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.452 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.450" }>
%"class.base::RefCountedThreadSafe.450" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.network::mojom::blink::URLLoaderFactoryProxy"* }
%"class.network::mojom::blink::URLLoaderFactoryProxy" = type { %"class.network::mojom::blink::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::URLLoaderFactory" = type { i32 (...)** }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.361" = type { %"class.blink::MemberBase" }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::Headers"* }
%"class.blink::Headers" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.blink::Member.22", i32, [4 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.343", %"class.blink::HeapVector.354", %"class.blink::Member.361" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.336" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.327" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329", [32 x i8] }
%"class.WTF::VectorBufferBase.329" = type { %"struct.std::__1::pair.330"*, i32, i32 }
%"struct.std::__1::pair.330" = type { %"class.WTF::AtomicString", %"class.blink::Member.331" }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::HeapVector.333"* }
%"class.blink::HeapVector.333" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.WTF::Vector.339"* }
%"class.WTF::Vector.339" = type opaque
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345" }
%"class.WTF::VectorBufferBase.345" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::HeapVector.354" = type { %"class.WTF::Vector.357" }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::Member.321"*, i32, i32 }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::WebURLResponse"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.375", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::ResourceResponse"* }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.384", %class.scoped_refptr.399, %class.scoped_refptr.400, %"struct.blink::CacheControlHeader", %"class.absl::optional.401", %"class.absl::optional.406", %"class.absl::optional.406", %"class.absl::optional.406", i64, %"class.blink::KURL", %"class.WTF::Vector.411", %"class.WTF::String", %"class.WTF::Vector.38", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.416", %"class.WTF::Vector.38", %"class.blink::KURL", %"class.absl::optional.421" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.378" }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.382" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.384" = type { %"class.absl::optional_internal::optional_data.385" }
%"class.absl::optional_internal::optional_data.385" = type { %"class.absl::optional_internal::optional_data_base.386" }
%"class.absl::optional_internal::optional_data_base.386" = type { %"class.absl::optional_internal::optional_data_dtor_base.387" }
%"class.absl::optional_internal::optional_data_dtor_base.387" = type { i8, %union.anon.388 }
%union.anon.388 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.38", %"class.WTF::String", i64, i64, %"class.WTF::Vector.389", %"class.WTF::Vector.394" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.399 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.400 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.401", %"class.absl::optional.401" }
%"class.absl::optional.406" = type { %"class.absl::optional_internal::optional_data.407" }
%"class.absl::optional_internal::optional_data.407" = type { %"class.absl::optional_internal::optional_data_base.408" }
%"class.absl::optional_internal::optional_data_base.408" = type { %"class.absl::optional_internal::optional_data_dtor_base.409" }
%"class.absl::optional_internal::optional_data_dtor_base.409" = type { i8, %union.anon.410 }
%union.anon.410 = type { %"class.base::Time" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::KURL"*, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.383" }
%"class.base::time_internal::TimeBase.383" = type { i64 }
%"class.absl::optional.416" = type { %"class.absl::optional_internal::optional_data.417" }
%"class.absl::optional_internal::optional_data.417" = type { %"class.absl::optional_internal::optional_data_base.418" }
%"class.absl::optional_internal::optional_data_base.418" = type { %"class.absl::optional_internal::optional_data_dtor_base.419" }
%"class.absl::optional_internal::optional_data_dtor_base.419" = type { i8, %union.anon.420 }
%union.anon.420 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.421" = type { %"class.absl::optional_internal::optional_data.422" }
%"class.absl::optional_internal::optional_data.422" = type { %"class.absl::optional_internal::optional_data_base.423" }
%"class.absl::optional_internal::optional_data_base.423" = type { %"class.absl::optional_internal::optional_data_dtor_base.424" }
%"class.absl::optional_internal::optional_data_dtor_base.424" = type { i8, %union.anon.425 }
%union.anon.425 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.432" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* }
%"class.blink::DataPipeBytesConsumer::CompletionNotifier" = type { %"class.blink::WeakMember.447" }
%"class.blink::WeakMember.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DataPipeBytesConsumer"* }
%"class.blink::DataPipeBytesConsumer" = type <{ %"class.blink::BytesConsumer", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %class.scoped_refptr.449, %"class.mojo::ScopedHandleBase.451", [4 x i8], %"class.mojo::SimpleWatcher", %"class.blink::Member.462", i32, [4 x i8], %"class.blink::BytesConsumer::Error", i64, %"class.absl::optional", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::ScopedHandleBase.451" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::BytesConsumer::Error" = type { %"class.WTF::String" }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ScriptPromiseProperty.466"* }
%"class.blink::ScriptPromiseProperty.466" = type opaque
%"class.blink::HeapMojoRemote.467" = type { %"class.blink::Member.468" }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::WorkerTimingContainer, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::WorkerTimingContainer, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.297", i8, %"class.blink::Member.298", %"class.blink::Member.300", %"class.blink::TraceWrapperV8Reference.302", %"class.std::__1::unique_ptr.305" }
%"class.base::StrongAlias.297" = type { i8 }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.471", %"class.blink::Member.295" }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::TraceWrapperV8Reference.302" = type { %"class.v8::TracedReference.303" }
%"class.v8::TracedReference.303" = type { %"class.v8::BasicTracedReference.304" }
%"class.v8::BasicTracedReference.304" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.449 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.535", i32, i8, [3 x i8], %"class.blink::HeapVector.537", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.557", %"class.blink::Member.563", %"class.blink::Member.565", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.484" }
%"class.blink::HeapHashMap.484" = type { %"class.WTF::HashMap.487" }
%"class.WTF::HashMap.487" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ %"struct.WTF::KeyValuePair.490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.490" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.491" }
%"class.blink::Supplementable.491" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.492" }
%"class.blink::HeapHashMap.492" = type { %"class.WTF::HashMap.495" }
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.498" = type { i8*, %"class.blink::Member.1639" }
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1641" }
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.499, %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525", %"class.blink::Member.361", i32, [4 x i8], %"class.WTF::HashSet.531", i32, i32 }
%class.scoped_refptr.499 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.512", %"class.std::__1::map.521"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.503" }
%"class.std::__1::__tree.503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.512" = type { %"class.std::__1::__tree.513" }
%"class.std::__1::__tree.513" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.514", %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.521" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.537" = type { %"class.WTF::Vector.540" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::Member.543"*, i32, i32 }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.550", i32, i32 }
%"class.blink::HeapHashMap.550" = type { %"class.WTF::HashMap.553" }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.548", i8, [7 x i8], %"class.WTF::Vector.569", %"class.blink::HeapVector.604", i8, [7 x i8], %"class.WTF::HashSet.531", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.572" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.575", %"class.WTF::HashMap.582", %"class.WTF::HashMap.587", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.38", i32, %"class.mojo::StructPtr.592", %"class.WTF::Vector.38" }
%"class.mojo::StructPtr.575" = type { %"class.std::__1::unique_ptr.576" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type opaque
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.592" = type { %"class.std::__1::unique_ptr.593" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.38", i8, i8, [6 x i8] }>
%"class.blink::HeapVector.604" = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::Member.610"*, i32, i32 }
%"class.blink::Member.610" = type opaque
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap.1618", %class.scoped_refptr.364, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.1632", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.416", i8, i8, i8, %"class.WTF::String" }
%"class.WTF::HashMap.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1622, %"class.mojo::PendingRemote.1631" }
%class.scoped_refptr.1622 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.1623", [4 x i8], %"class.WTF::Vector.1625", i64, %"class.WTF::Vector.1488", i8, [7 x i8] }>
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1625" = type { %"class.WTF::VectorBuffer.1626" }
%"class.WTF::VectorBuffer.1626" = type { %"class.WTF::VectorBufferBase.1627" }
%"class.WTF::VectorBufferBase.1627" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.1488", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.364, i64, i64, %"class.absl::optional.406", %class.scoped_refptr.1628 }
%class.scoped_refptr.1628 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.1631" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.1632" = type { %"class.std::__1::unique_ptr.1633" }
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::WaitUntilObserver" = type { %"class.blink::ExecutionContextClient", i32, i32, i32, i32, i8, %"class.blink::HeapTaskRunnerTimer" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.483", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.449, %"class.base::WeakPtrFactory.482" }
%"class.base::WeakPtrFactory.482" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.483" = type { %"class.blink::MemberBase.0" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1709", i8* }
%"class.WTF::StringAppend.1709" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.1710" = type { %"class.WTF::String", i8* }
%"class.mojo::StructPtr.633" = type { %"class.std::__1::unique_ptr.634" }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector.411", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap.637", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.364, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.38", %class.scoped_refptr.364, %class.scoped_refptr.364, %"class.mojo::StructPtr.642", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.421" }
%"class.WTF::HashMap.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"class.mojo::StructPtr.642" = type { %"class.std::__1::unique_ptr.643" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.569", %"class.mojo::StructPtr.646", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.658", %"class.base::TimeDelta", %"class.absl::optional.658", i32, [4 x i8], %"class.WTF::Vector.668", %"class.mojo::StructPtr.680", i8, [7 x i8] }>
%"class.mojo::StructPtr.646" = type { %"class.std::__1::unique_ptr.647" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.32* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.653", i32, %"class.absl::optional.653" }
%"class.absl::optional.653" = type { %"class.absl::optional_internal::optional_data.654" }
%"class.absl::optional_internal::optional_data.654" = type { %"class.absl::optional_internal::optional_data_base.655" }
%"class.absl::optional_internal::optional_data_base.655" = type { %"class.absl::optional_internal::optional_data_dtor_base.656" }
%"class.absl::optional_internal::optional_data_dtor_base.656" = type { i8, %union.anon.657 }
%union.anon.657 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.653", i32, %"class.absl::optional.653" }
%"class.absl::optional.658" = type { %"class.absl::optional_internal::optional_data.659" }
%"class.absl::optional_internal::optional_data.659" = type { %"class.absl::optional_internal::optional_data_base.660" }
%"class.absl::optional_internal::optional_data_base.660" = type { %"class.absl::optional_internal::optional_data_dtor_base.661" }
%"class.absl::optional_internal::optional_data_dtor_base.661" = type { i8, %union.anon.662 }
%union.anon.662 = type { %"class.WTF::Vector.663" }
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.WTF::VectorBufferBase.665" = type { i32*, i32, i32 }
%"class.WTF::Vector.668" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { %"class.mojo::StructPtr.671"*, i32, i32 }
%"class.mojo::StructPtr.671" = type { %"class.std::__1::unique_ptr.672" }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.680" = type { %"class.std::__1::unique_ptr.681" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.38"* }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.614", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.626", %"class.WTF::Vector.628" }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.617", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { i32*, i32, i32 }
%"class.blink::ServiceWorkerGlobalScope" = type { %"class.blink::WorkerGlobalScope", %"class.blink::mojom::blink::ControllerServiceWorker", %"class.blink::mojom::blink::ServiceWorker", %"class.blink::Member.1209", %"class.blink::Member.1211", %"class.blink::Member.1213", %"class.blink::HeapHashMap.1215", i8, i64, i64, i64, i8, i64, i64, i64, %"class.std::__1::unique_ptr.1222", %"class.mojo::PendingRemote.1245", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoReceiver", %"class.WTF::HashMap.1250", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.blink::HeapHashMap.1260", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.WTF::HashMap.1255", %"class.blink::HeapHashMap.1260", %"class.blink::HeapHashMap.1260", %"class.blink::HeapHashMap.1267", %"class.blink::HeapHashMap.1274", %"class.WTF::HashMap.1281", %"class.std::__1::unique_ptr.1286", i8, i8, %"class.blink::HeapMojoReceiverSet", %"class.util::TokenType.1313" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.735", %"class.blink::Supplementable.736", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.751", %"class.blink::Member.769", %"class.blink::Member.771", %"class.blink::Member.781", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.783", i32, %"class.blink::Member.790", %"class.std::__1::unique_ptr.792", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.967", %"class.absl::optional.977", i32, %"class.std::__1::unique_ptr.983", %"class.std::__1::unique_ptr.989", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.708", %"class.blink::Member.714", %"class.blink::HeapHashSet.716", %class.scoped_refptr.723, %"class.blink::Member.725", %"class.blink::Member.727", i32, %"class.WTF::Vector.569", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.731" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.535", i32, i8, [3 x i8], %"class.blink::HeapVector.537", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.557", %"class.blink::Member.563", %"class.blink::Member.565", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.693" }
%"class.blink::PersistentBase.693" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.696" }
%"class.blink::Supplementable.696" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.697" }
%"class.blink::HeapHashMap.697" = type { %"class.WTF::HashMap.700" }
%"class.WTF::HashMap.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"struct.WTF::KeyValuePair.703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.703" = type { i8*, %"class.blink::Member.1667" }
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::Supplement.1669"* }
%"class.blink::Supplement.1669" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1670" }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.704" }
%"struct.std::__1::atomic.704" = type { %"struct.std::__1::__atomic_base.705" }
%"struct.std::__1::__atomic_base.705" = type { %"struct.std::__1::__cxx_atomic_impl.706" }
%"struct.std::__1::__cxx_atomic_impl.706" = type { %"struct.std::__1::__cxx_atomic_base_impl.707" }
%"struct.std::__1::__cxx_atomic_base_impl.707" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1318", %"class.blink::Member.1319", %"class.blink::Member.1321", %"class.blink::Member.1325", %class.scoped_refptr.449, %class.scoped_refptr.449, %"class.blink::Member.1327", %"class.blink::Member.1329", %"class.blink::Member.1335", %"class.blink::Member.1339", %"class.blink::Member.1391", %"class.blink::HeapHashMap.1393", %"class.blink::HeapHashSet.1400", %"class.blink::HeapHashSet.1400", %"class.blink::HeapHashMap.1508", %"class.blink::HeapVector.1515", %"class.blink::Member.1523", %"class.blink::HeapTaskRunnerTimer.1525", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1526", %"class.WTF::Vector.1533", %"class.blink::HeapHashSet.1539", %"class.blink::HeapHashSet.1539", %"class.std::__1::unique_ptr.1545", %"class.base::WeakPtr.1384", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1552", %"class.blink::Member.1555", i8, i8, %"class.base::WeakPtrFactory.1557" }
%"class.blink::ThreadState::PrefinalizerRegistration.1318" = type { i8 }
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1325" = type { %"class.blink::MemberBase.1326" }
%"class.blink::MemberBase.1326" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1333" }
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1343", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1345", %"class.WTF::HashSet.1350", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1354", %"class.std::__1::map.1361", %"class.std::__1::map.1372", %"class.std::__1::unique_ptr.1381", %"class.blink::Member.1329", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1388", %"class.mojo::InlinedStructPtr.1390", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1345" = type { %"class.WTF::HashTable.1346" }
%"class.WTF::HashTable.1346" = type <{ %"struct.WTF::KeyValuePair.1349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1349" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1350" = type { %"class.WTF::HashTable.1351" }
%"class.WTF::HashTable.1351" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1354" = type { %"class.WTF::HashMap.1357" }
%"class.WTF::HashMap.1357" = type { %"class.WTF::HashTable.1358" }
%"class.WTF::HashTable.1358" = type <{ %"struct.WTF::KeyValuePair.1360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1360" = type opaque
%"class.std::__1::map.1361" = type { %"class.std::__1::__tree.1362" }
%"class.std::__1::__tree.1362" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1363", %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.1372" = type { %"class.std::__1::__tree.1373" }
%"class.std::__1::__tree.1373" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1374", %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.1381" = type { %"class.std::__1::__compressed_pair.1382" }
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1384", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1390" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1393" = type { %"class.WTF::HashMap.1396" }
%"class.WTF::HashMap.1396" = type { %"class.WTF::HashTable.1397" }
%"class.WTF::HashTable.1397" = type <{ %"struct.WTF::KeyValuePair.1399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1399" = type opaque
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::WeakMember.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1410", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1430", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1471", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1483", %"class.blink::ResourceResponse", %class.scoped_refptr.1485, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1410" = type { %"class.absl::optional_internal::optional_data.1411" }
%"class.absl::optional_internal::optional_data.1411" = type { %"class.absl::optional_internal::optional_data_base.1412" }
%"class.absl::optional_internal::optional_data_base.1412" = type { %"class.absl::optional_internal::optional_data_dtor_base.1413" }
%"class.absl::optional_internal::optional_data_dtor_base.1413" = type { i8, %union.anon.1414 }
%union.anon.1414 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1415", i8, %"class.absl::optional.1420", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1415" = type { %"class.absl::optional_internal::optional_data.1416" }
%"class.absl::optional_internal::optional_data.1416" = type { %"class.absl::optional_internal::optional_data_base.1417" }
%"class.absl::optional_internal::optional_data_base.1417" = type { %"class.absl::optional_internal::optional_data_dtor_base.1418" }
%"class.absl::optional_internal::optional_data_dtor_base.1418" = type { i8, [7 x i8], %union.anon.1419 }
%union.anon.1419 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1420" = type { %"class.absl::optional_internal::optional_data.1421" }
%"class.absl::optional_internal::optional_data.1421" = type { %"class.absl::optional_internal::optional_data_base.1422" }
%"class.absl::optional_internal::optional_data_base.1422" = type { %"class.absl::optional_internal::optional_data_dtor_base.1423" }
%"class.absl::optional_internal::optional_data_dtor_base.1423" = type { i8, %union.anon.1424 }
%union.anon.1424 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1425", %"class.WTF::Vector.38" }
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { i32*, i32, i32 }
%"class.WTF::Vector.1430" = type { %"class.WTF::VectorBuffer.1431" }
%"class.WTF::VectorBuffer.1431" = type { %"class.WTF::VectorBufferBase.1432" }
%"class.WTF::VectorBufferBase.1432" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1467" }
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1470" = type <{ %"class.blink::WeakMember.1672", i32, [4 x i8] }>
%"class.blink::WeakMember.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1674", [7 x i8], %"class.blink::Member.1521", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1674" = type { i8 }
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1407" }
%"class.blink::HeapHashSet.1471" = type { %"class.WTF::HashSet.1474" }
%"class.WTF::HashSet.1474" = type { %"class.WTF::HashTable.1475" }
%"class.WTF::HashTable.1475" = type <{ %"class.blink::WeakMember.1477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1477" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.976", %"class.WTF::String", %"class.WTF::HashSet.971", i8, i8, %class.scoped_refptr.1478, %class.scoped_refptr.1479, %class.scoped_refptr.1481 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.976" = type { i8 }
%"class.WTF::HashSet.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"struct.std::__1::pair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.975" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1478 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1479 = type { %"class.base::RefCountedData.1480"* }
%"class.base::RefCountedData.1480" = type opaque
%class.scoped_refptr.1481 = type { %"class.base::RefCountedData.1482"* }
%"class.base::RefCountedData.1482" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.32, %class.scoped_refptr.32, %class.scoped_refptr.32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1433, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1445", %"class.absl::optional.33", %"class.absl::optional.1450", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.416", %"class.absl::optional.1450", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1450", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.416", %"class.absl::optional.1455", i8, %class.scoped_refptr.1461 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.1433 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1434", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1443, i8, %"class.url::Origin" }
%"class.base::RefCounted.1434" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1435" }
%"class.std::__1::vector.1435" = type { %"class.std::__1::__vector_base.1436" }
%"class.std::__1::__vector_base.1436" = type { %"class.std::__1::unique_ptr.1437"*, %"class.std::__1::unique_ptr.1437"*, %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::unique_ptr.1437" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.1439" }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"class.std::__1::unique_ptr.1437"* }
%class.scoped_refptr.1443 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1444", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1445" = type { %"class.absl::optional_internal::optional_data.1446" }
%"class.absl::optional_internal::optional_data.1446" = type { %"class.absl::optional_internal::optional_data_base.1447" }
%"class.absl::optional_internal::optional_data_base.1447" = type { %"class.absl::optional_internal::optional_data_dtor_base.1448" }
%"class.absl::optional_internal::optional_data_dtor_base.1448" = type { i8, %union.anon.1449 }
%union.anon.1449 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1450" = type { %"class.absl::optional_internal::optional_data.1451" }
%"class.absl::optional_internal::optional_data.1451" = type { %"class.absl::optional_internal::optional_data_base.1452" }
%"class.absl::optional_internal::optional_data_base.1452" = type { %"class.absl::optional_internal::optional_data_dtor_base.1453" }
%"class.absl::optional_internal::optional_data_dtor_base.1453" = type { i8, %union.anon.1454 }
%union.anon.1454 = type { %"class.WTF::String" }
%"class.absl::optional.1455" = type { %"class.absl::optional_internal::optional_data.1456" }
%"class.absl::optional_internal::optional_data.1456" = type { %"class.absl::optional_internal::optional_data_base.1457" }
%"class.absl::optional_internal::optional_data_base.1457" = type { %"class.absl::optional_internal::optional_data_dtor_base.1458" }
%"class.absl::optional_internal::optional_data_dtor_base.1458" = type { i8, %union.anon.1459 }
%union.anon.1459 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1460" }
%"class.mojo::PendingRemote.1460" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.1461 = type { %"class.base::RefCountedData.1462"* }
%"class.base::RefCountedData.1462" = type { %"class.base::RefCountedThreadSafe.1648", %"class.base::internal::flat_tree.1649" }
%"class.base::RefCountedThreadSafe.1648" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1649" = type { %"class.std::__1::vector.1650" }
%"class.std::__1::vector.1650" = type { %"class.std::__1::__vector_base.1651" }
%"class.std::__1::__vector_base.1651" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { i32* }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%class.scoped_refptr.1485 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1486", i64, %"class.WTF::Vector.1488", %"class.WTF::Vector.1493" }
%"class.WTF::RefCounted.1486" = type { %"class.base::RefCounted.1487" }
%"class.base::RefCounted.1487" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1493" = type { %"class.WTF::VectorBuffer.1494" }
%"class.WTF::VectorBuffer.1494" = type { %"class.WTF::VectorBufferBase.1495" }
%"class.WTF::VectorBufferBase.1495" = type { %"class.std::__1::unique_ptr.1496"*, i32, i32 }
%"class.std::__1::unique_ptr.1496" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1499" }
%"class.std::__1::__tree.1499" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1500", %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.blink::HeapHashMap.1508" = type { %"class.WTF::HashMap.1511" }
%"class.WTF::HashMap.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"struct.WTF::KeyValuePair.1514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1514" = type opaque
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1521"*, i32, i32 }
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1525" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.722", { i64, i64 } }
%"class.blink::WeakMember.722" = type { %"class.blink::MemberBase.715" }
%"class.blink::HeapHashMap.1526" = type { %"class.WTF::HashMap.1529" }
%"class.WTF::HashMap.1529" = type { %"class.WTF::HashTable.1530" }
%"class.WTF::HashTable.1530" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.WTF::Vector.1533" = type { %"class.WTF::VectorBuffer.1534" }
%"class.WTF::VectorBuffer.1534" = type { %"class.WTF::VectorBufferBase.1535" }
%"class.WTF::VectorBufferBase.1535" = type { %class.scoped_refptr.1536*, i32, i32 }
%class.scoped_refptr.1536 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1539" = type { %"class.WTF::HashSet.1542" }
%"class.WTF::HashSet.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"class.blink::Member.1483"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.WTF::HashSet.1548"* }
%"class.WTF::HashSet.1548" = type opaque
%"class.base::WeakPtr.1384" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1295 }
%class.scoped_refptr.1295 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote.1552" = type { %"class.blink::Member.1553" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1557" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.716" = type { %"class.WTF::HashSet.719" }
%"class.WTF::HashSet.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"class.blink::WeakMember.722"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.723 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.724", [4 x i8] }>
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.729", i32, [4 x i8] }>
%"class.std::__1::bitset.729" = type { %"class.std::__1::__bitset.730" }
%"class.std::__1::__bitset.730" = type { [25 x i64] }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable.735" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.736" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.737" }
%"class.blink::HeapHashMap.737" = type { %"class.WTF::HashMap.740" }
%"class.WTF::HashMap.740" = type { %"class.WTF::HashTable.741" }
%"class.WTF::HashTable.741" = type <{ %"struct.WTF::KeyValuePair.743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.743" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.744", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.744" = type { %"class.std::__1::__vector_base.745" }
%"class.std::__1::__vector_base.745" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.746" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.WTF::HashMap.754", %"class.std::__1::unique_ptr.759" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.773" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember", %"class.WTF::Vector.38", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.773" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.774" }
%"class.blink::HeapHashMap.774" = type { %"class.WTF::HashMap.777" }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.780" = type { i8*, %"class.blink::Member.1676" }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::Supplement.1678"* }
%"class.blink::Supplement.1678" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1679" }
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.783" = type { %"class.WTF::HashMap.786" }
%"class.WTF::HashMap.786" = type { %"class.WTF::HashTable.787" }
%"class.WTF::HashTable.787" = type <{ %"struct.WTF::KeyValuePair.789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.789" = type opaque
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.956" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.950" }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.956" = type { %"class.std::__1::__tree.957" }
%"class.std::__1::__tree.957" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.958", %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.971", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.976", [6 x i8] }>
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, [7 x i8], %union.anon.981 }
%union.anon.981 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.982", i8, [7 x i8] }>
%"struct.std::__1::pair.982" = type { i64, i64 }
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.992", %"class.mojo::ScopedHandleBase.451", %"class.mojo::StructPtr.1184", %"class.std::__1::vector.1192", %"class.std::__1::vector.1199" }
%"class.mojo::StructPtr.992" = type { %"class.std::__1::unique_ptr.993" }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.996, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.1011", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.1027", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.1033", %"class.std::__1::vector.1040", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.421", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1075", %"class.absl::optional.1170", %"class.absl::optional.416", %"class.std::__1::vector.1040", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.996 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.997", %"class.std::__1::vector.998", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.997" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.998" = type { %"class.std::__1::__vector_base.999" }
%"class.std::__1::__vector_base.999" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.1000" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.1011" = type { %"class.std::__1::unique_ptr.1012" }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.1015", %"class.std::__1::vector.1015", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.1015" = type { %"class.std::__1::__vector_base.1016" }
%"class.std::__1::__vector_base.1016" = type { %"class.mojo::InlinedStructPtr.1017"*, %"class.mojo::InlinedStructPtr.1017"*, %"class.std::__1::__compressed_pair.1019" }
%"class.mojo::InlinedStructPtr.1017" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.mojo::InlinedStructPtr.1017"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.1027" = type { %"class.std::__1::__vector_base.1028" }
%"class.std::__1::__vector_base.1028" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %class.GURL* }
%"class.absl::optional.1033" = type { %"class.absl::optional_internal::optional_data.1034" }
%"class.absl::optional_internal::optional_data.1034" = type { %"class.absl::optional_internal::optional_data_base.1035" }
%"class.absl::optional_internal::optional_data_base.1035" = type { %"class.absl::optional_internal::optional_data_dtor_base.1036" }
%"class.absl::optional_internal::optional_data_dtor_base.1036" = type { i8, [7 x i8], %union.anon.1037 }
%union.anon.1037 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.1038, %class.scoped_refptr.1038, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1058", %"class.std::__1::basic_string", %"class.std::__1::vector.1066", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.1038 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.1039", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.1047", %"class.std::__1::vector.1051" }
%"class.base::RefCountedThreadSafe.1039" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.1040", %"class.std::__1::vector.1040", %"class.std::__1::vector.1040", %"class.std::__1::vector.1040" }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.1051" = type { %"class.std::__1::__vector_base.1052" }
%"class.std::__1::__vector_base.1052" = type { %"class.std::__1::unique_ptr.1047"*, %"class.std::__1::unique_ptr.1047"*, %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.std::__1::unique_ptr.1047"* }
%"class.std::__1::vector.1058" = type { %"class.std::__1::__vector_base.1059" }
%"class.std::__1::__vector_base.1059" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.1061" }
%"class.net::HashValue" = type { i32, %union.anon.1060 }
%union.anon.1060 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.1068, i32, [4 x i8] }>
%class.scoped_refptr.1068 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.1069", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.1069" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.1075" = type { %"class.std::__1::unique_ptr.1076" }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1079", %"class.mojo::StructPtr.1127", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1134", %"class.base::TimeDelta", %"class.absl::optional.1134", i32, [4 x i8], %"class.std::__1::vector.1146", %"class.mojo::StructPtr.1160", i8, [7 x i8] }>
%"class.std::__1::vector.1079" = type { %"class.std::__1::__vector_base.1080" }
%"class.std::__1::__vector_base.1080" = type { %"class.mojo::StructPtr.1081"*, %"class.mojo::StructPtr.1081"*, %"class.std::__1::__compressed_pair.1122" }
%"class.mojo::StructPtr.1081" = type { %"class.std::__1::unique_ptr.1082" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1085", %"class.base::flat_map", %"class.base::flat_map.1100", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1110", i8, %"class.std::__1::vector.1040", i32, %"class.mojo::StructPtr.1112", %"class.std::__1::vector.1040" }
%"class.mojo::StructPtr.1085" = type { %"class.std::__1::unique_ptr.1086" }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1092" }
%"class.std::__1::vector.1092" = type { %"class.std::__1::__vector_base.1093" }
%"class.std::__1::__vector_base.1093" = type { %"struct.std::__1::pair.1094"*, %"struct.std::__1::pair.1094"*, %"class.std::__1::__compressed_pair.1095" }
%"struct.std::__1::pair.1094" = type opaque
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::pair.1094"* }
%"class.base::flat_map.1100" = type { %"class.base::internal::flat_tree.1101" }
%"class.base::internal::flat_tree.1101" = type { %"class.std::__1::vector.1102" }
%"class.std::__1::vector.1102" = type { %"class.std::__1::__vector_base.1103" }
%"class.std::__1::__vector_base.1103" = type { %"struct.std::__1::pair.1104"*, %"struct.std::__1::pair.1104"*, %"class.std::__1::__compressed_pair.1105" }
%"struct.std::__1::pair.1104" = type opaque
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.std::__1::pair.1104"* }
%"class.mojo::InlinedStructPtr.1110" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1112" = type { %"class.std::__1::unique_ptr.1113" }
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.1040", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.mojo::StructPtr.1081"* }
%"class.mojo::StructPtr.1127" = type { %"class.std::__1::unique_ptr.1128" }
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"class.absl::optional.1134" = type { %"class.absl::optional_internal::optional_data.1135" }
%"class.absl::optional_internal::optional_data.1135" = type { %"class.absl::optional_internal::optional_data_base.1136" }
%"class.absl::optional_internal::optional_data_base.1136" = type { %"class.absl::optional_internal::optional_data_dtor_base.1137" }
%"class.absl::optional_internal::optional_data_dtor_base.1137" = type { i8, %union.anon.1138 }
%union.anon.1138 = type { %"class.std::__1::vector.1139" }
%"class.std::__1::vector.1139" = type { %"class.std::__1::__vector_base.1140" }
%"class.std::__1::__vector_base.1140" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { i32* }
%"class.std::__1::vector.1146" = type { %"class.std::__1::__vector_base.1147" }
%"class.std::__1::__vector_base.1147" = type { %"class.mojo::StructPtr.1148"*, %"class.mojo::StructPtr.1148"*, %"class.std::__1::__compressed_pair.1155" }
%"class.mojo::StructPtr.1148" = type { %"class.std::__1::unique_ptr.1149" }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.653" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.mojo::StructPtr.1148"* }
%"class.mojo::StructPtr.1160" = type { %"class.std::__1::unique_ptr.1161" }
%"class.std::__1::unique_ptr.1161" = type { %"class.std::__1::__compressed_pair.1162" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.1040"* }
%"class.absl::optional.1170" = type { %"class.absl::optional_internal::optional_data.1171" }
%"class.absl::optional_internal::optional_data.1171" = type { %"class.absl::optional_internal::optional_data_base.1172" }
%"class.absl::optional_internal::optional_data_base.1172" = type { %"class.absl::optional_internal::optional_data_dtor_base.1173" }
%"class.absl::optional_internal::optional_data_dtor_base.1173" = type { i8, %union.anon.1174 }
%union.anon.1174 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1175" }
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.1040", %"class.absl::optional.653", %"class.std::__1::vector.1040", %"class.std::__1::vector.1040" }
%"class.std::__1::vector.1040" = type { %"class.std::__1::__vector_base.1041" }
%"class.std::__1::__vector_base.1041" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1005" }
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"class.mojo::StructPtr.1184" = type { %"class.std::__1::unique_ptr.1185" }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1188", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1188" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1192" = type { %"class.std::__1::__vector_base.1193" }
%"class.std::__1::__vector_base.1193" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1194" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"class.mojo::StructPtr.992"*, %"class.mojo::StructPtr.992"*, %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.mojo::StructPtr.992"* }
%"class.blink::mojom::blink::ControllerServiceWorker" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorker" = type { i32 (...)** }
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::ServiceWorkerClients"* }
%"class.blink::ServiceWorkerClients" = type opaque
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::ServiceWorkerRegistration"* }
%"class.blink::ServiceWorkerRegistration" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::ServiceWorker"* }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::HeapHashMap.1215" = type { %"class.WTF::HashMap.1218" }
%"class.WTF::HashMap.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ %"struct.WTF::KeyValuePair.1221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1221" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::ServiceWorkerInstalledScriptsManager"* }
%"class.blink::ServiceWorkerInstalledScriptsManager" = type { %"class.blink::InstalledScriptsManager", %"class.WTF::HashSet.1225", %class.scoped_refptr.1229, %"class.mojo::SharedRemote" }
%"class.blink::InstalledScriptsManager" = type { i32 (...)** }
%"class.WTF::HashSet.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1229 = type { %"class.blink::ThreadSafeScriptContainer"* }
%"class.blink::ThreadSafeScriptContainer" = type <{ %"class.WTF::ThreadSafeRefCounted.1230", [4 x i8], %"class.WTF::Mutex", %"class.WTF::ThreadCondition", %"class.WTF::HashMap.1236", %"class.blink::KURL", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1230" = type { %"class.base::RefCountedThreadSafe.1231" }
%"class.base::RefCountedThreadSafe.1231" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::ThreadCondition" = type { %union.pthread_cond_t, %"struct.WTF::PlatformMutex"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1232, %union.anon.1234, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1232 = type { i64 }
%union.anon.1234 = type { i64 }
%"class.WTF::HashMap.1236" = type { %"class.WTF::HashTable.1237" }
%"class.WTF::HashTable.1237" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type opaque
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.1241 }
%class.scoped_refptr.1241 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%"class.mojo::PendingRemote.1245" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1246" }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1683" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.905", i32 }>
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"class.blink::mojom::blink::ServiceWorkerHostProxy"* }
%"class.blink::mojom::blink::ServiceWorkerHostProxy" = type { %"class.blink::mojom::blink::ServiceWorkerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ServiceWorkerHost" = type { i32 (...)** }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1248" }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1691", %"class.blink::Member.1692", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1691" = type { i8 }
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::ServiceWorkerGlobalScope"* }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::ServiceWorkerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.798, %"class.std::__1::unique_ptr.905", %"class.base::WeakPtrFactory.1694" }
%"class.base::WeakPtrFactory.1694" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::ServiceWorkerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::ServiceWorker"* }
%"class.WTF::HashMap.1250" = type { %"class.WTF::HashTable.1251" }
%"class.WTF::HashTable.1251" = type <{ %"struct.WTF::KeyValuePair.1254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1254" = type opaque
%"class.WTF::HashMap.1255" = type { %"class.WTF::HashTable.1256" }
%"class.WTF::HashTable.1256" = type <{ %"struct.WTF::KeyValuePair.1259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1259" = type opaque
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type opaque
%"class.blink::HeapHashMap.1267" = type { %"class.WTF::HashMap.1270" }
%"class.WTF::HashMap.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"struct.WTF::KeyValuePair.1273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1273" = type opaque
%"class.blink::HeapHashMap.1274" = type { %"class.WTF::HashMap.1277" }
%"class.WTF::HashMap.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"struct.WTF::KeyValuePair.1280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1280" = type opaque
%"class.WTF::HashMap.1281" = type { %"class.WTF::HashTable.1282" }
%"class.WTF::HashTable.1282" = type <{ %"struct.WTF::KeyValuePair.1285"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1285" = type opaque
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::ServiceWorkerEventQueue"* }
%"class.blink::ServiceWorkerEventQueue" = type { %class.scoped_refptr.452, %"class.WTF::HashMap.1289", %"class.base::RepeatingCallback.1294", %"class.base::RepeatingCallback.908", %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, %"class.std::__1::map.1296", %"class.std::__1::map.1296", i8, i32, i32, %"class.base::RepeatingTimer", %"class.base::TickClock"*, i32, %"class.base::WeakPtrFactory.1307" }
%"class.WTF::HashMap.1289" = type { %"class.WTF::HashTable.1290" }
%"class.WTF::HashTable.1290" = type <{ %"struct.WTF::KeyValuePair.1293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1293" = type opaque
%"class.base::RepeatingCallback.1294" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1296" = type { %"class.std::__1::__tree.1297" }
%"class.std::__1::__tree.1297" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1298", %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.908" }
%"class.base::WeakPtrFactory.1307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiverSet" = type { %"class.blink::Member.1311" }
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper"* }
%"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1697", %"class.blink::Member.1692", %"class.mojo::ReceiverSetBase" }
%"class.blink::ThreadState::PrefinalizerRegistration.1697" = type { i8 }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.908", %"class.base::RepeatingCallback.1698", i64, %"class.std::__1::map.1699", i8*, i64, %"class.base::WeakPtrFactory.1708" }
%"class.base::RepeatingCallback.1698" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1699" = type { %"class.std::__1::__tree.1700" }
%"class.std::__1::__tree.1700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1701", %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::WeakPtrFactory.1708" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.util::TokenType.1313" = type { %"class.base::StrongAlias.1314" }
%"class.base::StrongAlias.1314" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.302", %class.scoped_refptr.1478 }
%"class.mojo::PendingReceiver.1595" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.302" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.mojo::StructPtr.1611" = type { %"class.std::__1::unique_ptr.1612" }
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* }
%"class.blink::mojom::blink::ServiceWorkerStreamHandle" = type { %"class.mojo::ScopedHandleBase.451", %"class.mojo::PendingReceiver.1595" }
%"class.v8::Value" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1748", %"class.WTF::HashMap.1748", %"class.WTF::HashMap.1753", %"class.std::__1::unique_ptr.1758", %"class.std::__1::unique_ptr.1805", %"class.blink::Persistent.293", i8, i8, i8, %"class.WTF::Vector.343", %"class.std::__1::unique_ptr.1811", %"class.blink::Persistent.1817", %"class.blink::Persistent.1821", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1730", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1736", %"class.std::__1::unique_ptr.1742", i32, i32 }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1748" = type { %"class.WTF::HashTable.1749" }
%"class.WTF::HashTable.1749" = type <{ %"struct.WTF::KeyValuePair.1752"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1752" = type opaque
%"class.WTF::HashMap.1753" = type { %"class.WTF::HashTable.1754" }
%"class.WTF::HashTable.1754" = type <{ %"struct.WTF::KeyValuePair.1757"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1757" = type opaque
%"class.std::__1::unique_ptr.1758" = type { %"class.std::__1::__compressed_pair.1759" }
%"class.std::__1::__compressed_pair.1759" = type { %"struct.std::__1::__compressed_pair_elem.1760" }
%"struct.std::__1::__compressed_pair_elem.1760" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1766", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1761", i8* }
%"class.WTF::HashMap.1761" = type { %"class.WTF::HashTable.1762" }
%"class.WTF::HashTable.1762" = type <{ %"struct.WTF::KeyValuePair.1765"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1765" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1766" = type { %"class.v8::PersistentValueMapBase.1767" }
%"class.v8::PersistentValueMapBase.1767" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1768", i8* }
%"class.WTF::HashMap.1768" = type { %"class.WTF::HashTable.1769" }
%"class.WTF::HashTable.1769" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1773", %"class.WTF::String", %"class.std::__1::unique_ptr.1775" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1778", %"class.std::__1::unique_ptr.1789", %"class.WTF::Vector.1795", i8, i32 }
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.WTF::Vector.1781"* }
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1783", [32 x i8] }
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1817" = type { %"class.blink::PersistentBase.1818" }
%"class.blink::PersistentBase.1818" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1821" = type { %"class.blink::PersistentBase.1822" }
%"class.blink::PersistentBase.1822" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1825", i64 }
%"class.blink::HeapVector.1825" = type { %"class.WTF::Vector.1828" }
%"class.WTF::Vector.1828" = type { %"class.WTF::VectorBuffer.1829" }
%"class.WTF::VectorBuffer.1829" = type { %"class.WTF::VectorBufferBase.1830" }
%"class.WTF::VectorBufferBase.1830" = type { %"struct.std::__1::pair.1831"*, i32, i32 }
%"struct.std::__1::pair.1831" = type { %"class.blink::UntracedMember", %"class.blink::Member.1833" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::Response" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.1559", %"class.blink::Body", %"class.blink::Member.1560", %"class.blink::Member.368" }
%"class.blink::ActiveScriptWrappable.1559" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::FetchResponseData"* }
%"class.blink::FetchResponseData" = type { i32, i64, i32, %"class.std::__1::unique_ptr.1564", %"class.WTF::Vector.411", i16, %"class.WTF::AtomicString", %"class.blink::Member.22", %"class.blink::Member.1560", %"class.blink::Member.43", %"class.WTF::String", %"class.WTF::AtomicString", %"class.base::Time", %"class.WTF::String", %"class.std::__1::set.1570", i32, %"class.WTF::AtomicString", i8, i8, %"class.std::__1::unique_ptr.1578" }
%"class.std::__1::unique_ptr.1564" = type { %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { i32* }
%"class.std::__1::set.1570" = type { %"class.std::__1::__tree.1571" }
%"class.std::__1::__tree.1571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1572", %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.net::AuthChallengeInfo"* }
%"class.blink::CrossOriginResourcePolicyChecker" = type { %"struct.network::CrossOriginEmbedderPolicy", %"class.mojo::Remote.1584", %"class.base::WeakPtrFactory.1592" }
%"class.mojo::Remote.1584" = type { %"class.mojo::internal::InterfacePtrState.1585" }
%"class.mojo::internal::InterfacePtrState.1585" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1586" }
%"class.std::__1::unique_ptr.1586" = type { %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.1588" }
%"struct.std::__1::__compressed_pair_elem.1588" = type { %"class.network::mojom::CrossOriginEmbedderPolicyReporterProxy"* }
%"class.network::mojom::CrossOriginEmbedderPolicyReporterProxy" = type { %"class.network::mojom::CrossOriginEmbedderPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::CrossOriginEmbedderPolicyReporter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1592" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::ServiceWorkerEventQueue::StayAwakeToken" = type { %"class.base::WeakPtr.1607" }
%"class.base::WeakPtr.1607" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.mojo::Remote.1596" = type { %"class.mojo::internal::InterfacePtrState.1597" }
%"class.mojo::internal::InterfacePtrState.1597" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1598" }
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* }
%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy" = type { %"class.blink::mojom::blink::ServiceWorkerStreamCallback", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ServiceWorkerStreamCallback" = type { i32 (...)** }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.798, %"class.std::__1::unique_ptr.905", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.452, i32, [4 x i8] }>
%"class.blink::FetchDataLoader::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.v8::internal::Isolate" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.450", [4 x i8] }>
%"class.WTF::StringTypeAdapter.1711" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.1712" = type { %"class.WTF::StringTypeAdapter.1713" }
%"class.WTF::StringTypeAdapter.1713" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::(anonymous namespace)::FetchLoaderClient" = type { %"class.blink::FetchDataLoader::Client", %"class.mojo::ScopedHandleBase.451", %"class.mojo::PendingReceiver.1595", %"class.mojo::Remote.1596", %"class.std::__1::unique_ptr.1604" }
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::FormData" = type opaque
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::PendingRemote.1842" = type { %"struct.mojo::internal::PendingRemoteState" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }

$_ZN5blink24FetchRespondWithObserverD2Ev = comdat any

$_ZN5blink24FetchRespondWithObserverD0Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE = comdat any

$_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE = comdat any

$_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE = comdat any

$_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE = comdat any

$_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink10TraceTraitINS_10FetchEventEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink24FetchRespondWithObserverE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*, %"class.blink::Visitor"*)* @_ZNK5blink24FetchRespondWithObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*)* @_ZN5blink24FetchRespondWithObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*)* @_ZN5blink24FetchRespondWithObserverD0Ev to i8*), i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*, i32)* @_ZN5blink24FetchRespondWithObserver18OnResponseRejectedENS_5mojom26ServiceWorkerResponseErrorE to i8*), i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, i16, i8*, i8*)* @_ZN5blink24FetchRespondWithObserver19OnResponseFulfilledEPNS_11ScriptStateERKNS_11ScriptValueENS_16ExceptionContext7ContextEPKcS9_ to i8*), i8* bitcast (void (%"class.blink::FetchRespondWithObserver"*)* @_ZN5blink24FetchRespondWithObserver12OnNoResponseEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"The FetchEvent for \22\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"\22 resulted in a network error response: \00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"the promise was rejected.\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"preventDefault() was called without calling respondWith().\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"an object that was not a Response was passed to respondWith().\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"the promise was resolved with an error response object.\00", align 1
@.str.7 = private unnamed_addr constant [70 x i8] c"an \22opaque\22 response was used for a request whose type is not no-cors\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"a Response whose \22bodyUsed\22 is \22true\22 cannot be used to respond to a request.\00", align 1
@.str.9 = private unnamed_addr constant [52 x i8] c"an \22opaque\22 response was used for a client request.\00", align 1
@.str.10 = private unnamed_addr constant [94 x i8] c"an \22opaqueredirect\22 type response was used for a request whose redirect mode is not \22manual\22.\00", align 1
@.str.11 = private unnamed_addr constant [75 x i8] c"a \22cors\22 type response was used for a request whose mode is \22same-origin\22.\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"a Response whose \22body\22 is locked cannot be used to respond to a request.\00", align 1
@.str.13 = private unnamed_addr constant [82 x i8] c"a redirected response was used for a request whose redirect mode is not \22follow\22.\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"insufficient resources.\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"a response body's status could not be checked.\00", align 1
@.str.16 = private unnamed_addr constant [80 x i8] c"Cross-Origin-Resource-Policy prevented from serving the response to the client.\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"an unexpected error occurred.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.19 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.21 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.25 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10V8Response18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.str.26 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_117FetchLoaderClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_117FetchLoaderClientEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@_ZTVN5blink12_GLOBAL__N_117FetchLoaderClientE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_117FetchLoaderClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClientD0Ev to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)* @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)* @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)* @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*, %"class.mojo::ScopedHandleBase.451"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClient27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClient26DidFetchDataLoadedDataPipeEv to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*)* @_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClient22DidFetchDataLoadFailedEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchLoaderClient"*)* @_ZN5blink12_GLOBAL__N_117FetchLoaderClient5AbortEv to i8*)] }, align 8
@_ZN5blink5mojom5blink27ServiceWorkerStreamCallback5Name_E = external constant [0 x i8], align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink24FetchRespondWithObserverC1EPNS_16ExecutionContextEiN4base7WeakPtrINS_32CrossOriginResourcePolicyCheckerEEERKNS_5mojom5blink15FetchAPIRequestEPNS_17WaitUntilObserverE = hidden unnamed_addr alias void (%"class.blink::FetchRespondWithObserver"*, %"class.blink::ExecutionContext"*, i32, %"class.base::WeakPtr"*, %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::WaitUntilObserver"*), void (%"class.blink::FetchRespondWithObserver"*, %"class.blink::ExecutionContext"*, i32, %"class.base::WeakPtr"*, %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::WaitUntilObserver"*)* @_ZN5blink24FetchRespondWithObserverC2EPNS_16ExecutionContextEiN4base7WeakPtrINS_32CrossOriginResourcePolicyCheckerEEERKNS_5mojom5blink15FetchAPIRequestEPNS_17WaitUntilObserverE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24FetchRespondWithObserver18OnResponseRejectedENS_5mojom26ServiceWorkerResponseErrorE(%"class.blink::FetchRespondWithObserver"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.1710", align 8
  %5 = alloca %"class.WTF::StringAppend.1710", align 8
  %6 = alloca %"class.WTF::StringAppend.1710", align 8
  %7 = alloca %"class.WTF::StringAppend.1710", align 8
  %8 = alloca %"class.WTF::StringAppend.1710", align 8
  %9 = alloca %"class.WTF::StringAppend.1710", align 8
  %10 = alloca %"class.WTF::StringAppend.1710", align 8
  %11 = alloca %"class.WTF::StringAppend.1710", align 8
  %12 = alloca %"class.WTF::StringAppend.1710", align 8
  %13 = alloca %"class.WTF::StringAppend.1710", align 8
  %14 = alloca %"class.WTF::StringAppend.1710", align 8
  %15 = alloca %"class.WTF::StringAppend.1710", align 8
  %16 = alloca %"class.WTF::StringAppend.1710", align 8
  %17 = alloca %"class.WTF::StringAppend.1710", align 8
  %18 = alloca %"class.WTF::StringAppend.1710", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.mojo::StructPtr.633", align 8
  %22 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  %25 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %104, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #10
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %44, %29
  %47 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %48 = load atomic i32, i32* %30 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = zext i32 %47 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #10
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %51
  tail call void @llvm.trap() #10
  unreachable

59:                                               ; preds = %51
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %34, align 4
  br label %61

61:                                               ; preds = %59, %46
  %62 = phi i32 [ %60, %59 ], [ %47, %46 ]
  %63 = load atomic i32, i32* %30 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = add i32 %62, -1
  store i32 %67, i32* %34, align 4
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi i32 [ %67, %66 ], [ %62, %61 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %72

72:                                               ; preds = %71, %68
  %73 = load atomic i32, i32* %30 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %87

76:                                               ; preds = %72
  %77 = load i32, i32* %34, align 4
  %78 = zext i32 %77 to i33
  %79 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %76
  tail call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %76
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %34, align 4
  br label %87

87:                                               ; preds = %85, %72
  %88 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %89, align 8
  %90 = load atomic i32, i32* %30 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %108

93:                                               ; preds = %87
  %94 = load i32, i32* %34, align 4
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #10
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %93
  tail call void @llvm.trap() #10
  unreachable

102:                                              ; preds = %93
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %34, align 4
  br label %108

104:                                              ; preds = %2
  %105 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i8** %107, align 8
  br label %120

108:                                              ; preds = %102, %87
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i8** %109, align 8
  %110 = load atomic i32, i32* %30 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = load i32, i32* %34, align 4
  br i1 %112, label %114, label %116

114:                                              ; preds = %108
  %115 = add i32 %113, -1
  store i32 %115, i32* %34, align 4
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i32 [ %115, %114 ], [ %113, %108 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %120

120:                                              ; preds = %119, %116, %104
  %121 = phi %"class.WTF::StringImpl"** [ %106, %104 ], [ %89, %116 ], [ %89, %119 ]
  %122 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %3) #10
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %138

138:                                              ; preds = %137, %134, %120
  br i1 %28, label %152, label %139

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %152

152:                                              ; preds = %151, %148, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  switch i32 %1, label %1259 [
    i32 1, label %153
    i32 2, label %232
    i32 3, label %311
    i32 4, label %390
    i32 5, label %469
    i32 6, label %1341
    i32 7, label %548
    i32 8, label %627
    i32 9, label %706
    i32 13, label %785
    i32 10, label %864
    i32 11, label %943
    i32 12, label %1022
    i32 14, label %1101
    i32 15, label %1180
  ]

153:                                              ; preds = %152
  %154 = bitcast %"class.WTF::StringAppend.1710"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #10
  %155 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %155, label %199, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %173

163:                                              ; preds = %156
  %164 = zext i32 %162 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #10
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !2

170:                                              ; preds = %163
  call void @llvm.trap() #10
  unreachable

171:                                              ; preds = %163
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %161, align 4
  br label %173

173:                                              ; preds = %171, %156
  %174 = phi i32 [ %172, %171 ], [ %162, %156 ]
  %175 = load atomic i32, i32* %157 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %173
  %179 = zext i32 %174 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #10
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %178
  call void @llvm.trap() #10
  unreachable

186:                                              ; preds = %178
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %161, align 4
  br label %188

188:                                              ; preds = %186, %173
  %189 = phi i32 [ %187, %186 ], [ %174, %173 ]
  %190 = load atomic i32, i32* %157 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = add i32 %189, -1
  store i32 %194, i32* %161, align 4
  br label %195

195:                                              ; preds = %193, %188
  %196 = phi i32 [ %194, %193 ], [ %189, %188 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %199

199:                                              ; preds = %198, %195, %153
  %200 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8** %201, align 8
  %202 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %4) #10
  br i1 %155, label %216, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %216

216:                                              ; preds = %215, %212, %199
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %1338, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %1338

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #10
  br label %1338

232:                                              ; preds = %152
  %233 = bitcast %"class.WTF::StringAppend.1710"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #10
  %234 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %234, label %278, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %252

242:                                              ; preds = %235
  %243 = zext i32 %241 to i33
  %244 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %243, i33 1) #10
  %245 = extractvalue { i33, i1 } %244, 1
  %246 = extractvalue { i33, i1 } %244, 0
  %247 = icmp slt i33 %246, 0
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250, !prof !2

249:                                              ; preds = %242
  call void @llvm.trap() #10
  unreachable

250:                                              ; preds = %242
  %251 = trunc i33 %246 to i32
  store i32 %251, i32* %240, align 4
  br label %252

252:                                              ; preds = %250, %235
  %253 = phi i32 [ %251, %250 ], [ %241, %235 ]
  %254 = load atomic i32, i32* %236 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %267

257:                                              ; preds = %252
  %258 = zext i32 %253 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #10
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !2

264:                                              ; preds = %257
  call void @llvm.trap() #10
  unreachable

265:                                              ; preds = %257
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %240, align 4
  br label %267

267:                                              ; preds = %265, %252
  %268 = phi i32 [ %266, %265 ], [ %253, %252 ]
  %269 = load atomic i32, i32* %236 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %267
  %273 = add i32 %268, -1
  store i32 %273, i32* %240, align 4
  br label %274

274:                                              ; preds = %272, %267
  %275 = phi i32 [ %273, %272 ], [ %268, %267 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %278

278:                                              ; preds = %277, %274, %232
  %279 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %279, align 8
  %280 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8** %280, align 8
  %281 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %5) #10
  br i1 %234, label %295, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %295

295:                                              ; preds = %294, %291, %278
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %1338, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %1338

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #10
  br label %1338

311:                                              ; preds = %152
  %312 = bitcast %"class.WTF::StringAppend.1710"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #10
  %313 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %313, label %357, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %331

321:                                              ; preds = %314
  %322 = zext i32 %320 to i33
  %323 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %322, i33 1) #10
  %324 = extractvalue { i33, i1 } %323, 1
  %325 = extractvalue { i33, i1 } %323, 0
  %326 = icmp slt i33 %325, 0
  %327 = or i1 %324, %326
  br i1 %327, label %328, label %329, !prof !2

328:                                              ; preds = %321
  call void @llvm.trap() #10
  unreachable

329:                                              ; preds = %321
  %330 = trunc i33 %325 to i32
  store i32 %330, i32* %319, align 4
  br label %331

331:                                              ; preds = %329, %314
  %332 = phi i32 [ %330, %329 ], [ %320, %314 ]
  %333 = load atomic i32, i32* %315 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %346

336:                                              ; preds = %331
  %337 = zext i32 %332 to i33
  %338 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %337, i33 1) #10
  %339 = extractvalue { i33, i1 } %338, 1
  %340 = extractvalue { i33, i1 } %338, 0
  %341 = icmp slt i33 %340, 0
  %342 = or i1 %339, %341
  br i1 %342, label %343, label %344, !prof !2

343:                                              ; preds = %336
  call void @llvm.trap() #10
  unreachable

344:                                              ; preds = %336
  %345 = trunc i33 %340 to i32
  store i32 %345, i32* %319, align 4
  br label %346

346:                                              ; preds = %344, %331
  %347 = phi i32 [ %345, %344 ], [ %332, %331 ]
  %348 = load atomic i32, i32* %315 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %353

351:                                              ; preds = %346
  %352 = add i32 %347, -1
  store i32 %352, i32* %319, align 4
  br label %353

353:                                              ; preds = %351, %346
  %354 = phi i32 [ %352, %351 ], [ %347, %346 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %357

357:                                              ; preds = %356, %353, %311
  %358 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %358, align 8
  %359 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0), i8** %359, align 8
  %360 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %6) #10
  br i1 %313, label %374, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %374

374:                                              ; preds = %373, %370, %357
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %1338, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %1338

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #10
  br label %1338

390:                                              ; preds = %152
  %391 = bitcast %"class.WTF::StringAppend.1710"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %391) #10
  %392 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %392, label %436, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  br i1 %397, label %400, label %410

400:                                              ; preds = %393
  %401 = zext i32 %399 to i33
  %402 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %401, i33 1) #10
  %403 = extractvalue { i33, i1 } %402, 1
  %404 = extractvalue { i33, i1 } %402, 0
  %405 = icmp slt i33 %404, 0
  %406 = or i1 %403, %405
  br i1 %406, label %407, label %408, !prof !2

407:                                              ; preds = %400
  call void @llvm.trap() #10
  unreachable

408:                                              ; preds = %400
  %409 = trunc i33 %404 to i32
  store i32 %409, i32* %398, align 4
  br label %410

410:                                              ; preds = %408, %393
  %411 = phi i32 [ %409, %408 ], [ %399, %393 ]
  %412 = load atomic i32, i32* %394 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %425

415:                                              ; preds = %410
  %416 = zext i32 %411 to i33
  %417 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %416, i33 1) #10
  %418 = extractvalue { i33, i1 } %417, 1
  %419 = extractvalue { i33, i1 } %417, 0
  %420 = icmp slt i33 %419, 0
  %421 = or i1 %418, %420
  br i1 %421, label %422, label %423, !prof !2

422:                                              ; preds = %415
  call void @llvm.trap() #10
  unreachable

423:                                              ; preds = %415
  %424 = trunc i33 %419 to i32
  store i32 %424, i32* %398, align 4
  br label %425

425:                                              ; preds = %423, %410
  %426 = phi i32 [ %424, %423 ], [ %411, %410 ]
  %427 = load atomic i32, i32* %394 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %432

430:                                              ; preds = %425
  %431 = add i32 %426, -1
  store i32 %431, i32* %398, align 4
  br label %432

432:                                              ; preds = %430, %425
  %433 = phi i32 [ %431, %430 ], [ %426, %425 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %436

436:                                              ; preds = %435, %432, %390
  %437 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %437, align 8
  %438 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0), i8** %438, align 8
  %439 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %7) #10
  br i1 %392, label %453, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %453

453:                                              ; preds = %452, %449, %436
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %1338, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  br i1 %460, label %463, label %465

463:                                              ; preds = %456
  %464 = add i32 %462, -1
  store i32 %464, i32* %461, align 4
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i32 [ %464, %463 ], [ %462, %456 ]
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %1338

468:                                              ; preds = %465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #10
  br label %1338

469:                                              ; preds = %152
  %470 = bitcast %"class.WTF::StringAppend.1710"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %470) #10
  %471 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %471, label %515, label %472

472:                                              ; preds = %469
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  br i1 %476, label %479, label %489

479:                                              ; preds = %472
  %480 = zext i32 %478 to i33
  %481 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %480, i33 1) #10
  %482 = extractvalue { i33, i1 } %481, 1
  %483 = extractvalue { i33, i1 } %481, 0
  %484 = icmp slt i33 %483, 0
  %485 = or i1 %482, %484
  br i1 %485, label %486, label %487, !prof !2

486:                                              ; preds = %479
  call void @llvm.trap() #10
  unreachable

487:                                              ; preds = %479
  %488 = trunc i33 %483 to i32
  store i32 %488, i32* %477, align 4
  br label %489

489:                                              ; preds = %487, %472
  %490 = phi i32 [ %488, %487 ], [ %478, %472 ]
  %491 = load atomic i32, i32* %473 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %504

494:                                              ; preds = %489
  %495 = zext i32 %490 to i33
  %496 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %495, i33 1) #10
  %497 = extractvalue { i33, i1 } %496, 1
  %498 = extractvalue { i33, i1 } %496, 0
  %499 = icmp slt i33 %498, 0
  %500 = or i1 %497, %499
  br i1 %500, label %501, label %502, !prof !2

501:                                              ; preds = %494
  call void @llvm.trap() #10
  unreachable

502:                                              ; preds = %494
  %503 = trunc i33 %498 to i32
  store i32 %503, i32* %477, align 4
  br label %504

504:                                              ; preds = %502, %489
  %505 = phi i32 [ %503, %502 ], [ %490, %489 ]
  %506 = load atomic i32, i32* %473 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %504
  %510 = add i32 %505, -1
  store i32 %510, i32* %477, align 4
  br label %511

511:                                              ; preds = %509, %504
  %512 = phi i32 [ %510, %509 ], [ %505, %504 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %515

515:                                              ; preds = %514, %511, %469
  %516 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %516, align 8
  %517 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i8** %517, align 8
  %518 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %8) #10
  br i1 %471, label %532, label %519

519:                                              ; preds = %515
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load atomic i32, i32* %520 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %523, label %526, label %528

526:                                              ; preds = %519
  %527 = add i32 %525, -1
  store i32 %527, i32* %524, align 4
  br label %528

528:                                              ; preds = %526, %519
  %529 = phi i32 [ %527, %526 ], [ %525, %519 ]
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %532

532:                                              ; preds = %531, %528, %515
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %1338, label %535

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %1338

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #10
  br label %1338

548:                                              ; preds = %152
  %549 = bitcast %"class.WTF::StringAppend.1710"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %549) #10
  %550 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %550, label %594, label %551

551:                                              ; preds = %548
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %568

558:                                              ; preds = %551
  %559 = zext i32 %557 to i33
  %560 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %559, i33 1) #10
  %561 = extractvalue { i33, i1 } %560, 1
  %562 = extractvalue { i33, i1 } %560, 0
  %563 = icmp slt i33 %562, 0
  %564 = or i1 %561, %563
  br i1 %564, label %565, label %566, !prof !2

565:                                              ; preds = %558
  call void @llvm.trap() #10
  unreachable

566:                                              ; preds = %558
  %567 = trunc i33 %562 to i32
  store i32 %567, i32* %556, align 4
  br label %568

568:                                              ; preds = %566, %551
  %569 = phi i32 [ %567, %566 ], [ %557, %551 ]
  %570 = load atomic i32, i32* %552 monotonic, align 4
  %571 = and i32 %570, 2
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %583

573:                                              ; preds = %568
  %574 = zext i32 %569 to i33
  %575 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %574, i33 1) #10
  %576 = extractvalue { i33, i1 } %575, 1
  %577 = extractvalue { i33, i1 } %575, 0
  %578 = icmp slt i33 %577, 0
  %579 = or i1 %576, %578
  br i1 %579, label %580, label %581, !prof !2

580:                                              ; preds = %573
  call void @llvm.trap() #10
  unreachable

581:                                              ; preds = %573
  %582 = trunc i33 %577 to i32
  store i32 %582, i32* %556, align 4
  br label %583

583:                                              ; preds = %581, %568
  %584 = phi i32 [ %582, %581 ], [ %569, %568 ]
  %585 = load atomic i32, i32* %552 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %590

588:                                              ; preds = %583
  %589 = add i32 %584, -1
  store i32 %589, i32* %556, align 4
  br label %590

590:                                              ; preds = %588, %583
  %591 = phi i32 [ %589, %588 ], [ %584, %583 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %594

594:                                              ; preds = %593, %590, %548
  %595 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %595, align 8
  %596 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i8** %596, align 8
  %597 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %9) #10
  br i1 %550, label %611, label %598

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %611

611:                                              ; preds = %610, %607, %594
  %612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %595, align 8
  %613 = icmp eq %"class.WTF::StringImpl"* %612, null
  br i1 %613, label %1338, label %614

614:                                              ; preds = %611
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = and i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 0
  %620 = load i32, i32* %619, align 4
  br i1 %618, label %621, label %623

621:                                              ; preds = %614
  %622 = add i32 %620, -1
  store i32 %622, i32* %619, align 4
  br label %623

623:                                              ; preds = %621, %614
  %624 = phi i32 [ %622, %621 ], [ %620, %614 ]
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %1338

626:                                              ; preds = %623
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %612) #10
  br label %1338

627:                                              ; preds = %152
  %628 = bitcast %"class.WTF::StringAppend.1710"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %628) #10
  %629 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %629, label %673, label %630

630:                                              ; preds = %627
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load atomic i32, i32* %631 monotonic, align 4
  %633 = and i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  br i1 %634, label %637, label %647

637:                                              ; preds = %630
  %638 = zext i32 %636 to i33
  %639 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %638, i33 1) #10
  %640 = extractvalue { i33, i1 } %639, 1
  %641 = extractvalue { i33, i1 } %639, 0
  %642 = icmp slt i33 %641, 0
  %643 = or i1 %640, %642
  br i1 %643, label %644, label %645, !prof !2

644:                                              ; preds = %637
  call void @llvm.trap() #10
  unreachable

645:                                              ; preds = %637
  %646 = trunc i33 %641 to i32
  store i32 %646, i32* %635, align 4
  br label %647

647:                                              ; preds = %645, %630
  %648 = phi i32 [ %646, %645 ], [ %636, %630 ]
  %649 = load atomic i32, i32* %631 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %662

652:                                              ; preds = %647
  %653 = zext i32 %648 to i33
  %654 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %653, i33 1) #10
  %655 = extractvalue { i33, i1 } %654, 1
  %656 = extractvalue { i33, i1 } %654, 0
  %657 = icmp slt i33 %656, 0
  %658 = or i1 %655, %657
  br i1 %658, label %659, label %660, !prof !2

659:                                              ; preds = %652
  call void @llvm.trap() #10
  unreachable

660:                                              ; preds = %652
  %661 = trunc i33 %656 to i32
  store i32 %661, i32* %635, align 4
  br label %662

662:                                              ; preds = %660, %647
  %663 = phi i32 [ %661, %660 ], [ %648, %647 ]
  %664 = load atomic i32, i32* %631 monotonic, align 4
  %665 = and i32 %664, 2
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %667, label %669

667:                                              ; preds = %662
  %668 = add i32 %663, -1
  store i32 %668, i32* %635, align 4
  br label %669

669:                                              ; preds = %667, %662
  %670 = phi i32 [ %668, %667 ], [ %663, %662 ]
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %669
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %673

673:                                              ; preds = %672, %669, %627
  %674 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %674, align 8
  %675 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i64 0, i64 0), i8** %675, align 8
  %676 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %10) #10
  br i1 %629, label %690, label %677

677:                                              ; preds = %673
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %690

690:                                              ; preds = %689, %686, %673
  %691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %674, align 8
  %692 = icmp eq %"class.WTF::StringImpl"* %691, null
  br i1 %692, label %1338, label %693

693:                                              ; preds = %690
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %695 = load atomic i32, i32* %694 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  br i1 %697, label %700, label %702

700:                                              ; preds = %693
  %701 = add i32 %699, -1
  store i32 %701, i32* %698, align 4
  br label %702

702:                                              ; preds = %700, %693
  %703 = phi i32 [ %701, %700 ], [ %699, %693 ]
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %1338

705:                                              ; preds = %702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %691) #10
  br label %1338

706:                                              ; preds = %152
  %707 = bitcast %"class.WTF::StringAppend.1710"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %707) #10
  %708 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %708, label %752, label %709

709:                                              ; preds = %706
  %710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load atomic i32, i32* %710 monotonic, align 4
  %712 = and i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  br i1 %713, label %716, label %726

716:                                              ; preds = %709
  %717 = zext i32 %715 to i33
  %718 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %717, i33 1) #10
  %719 = extractvalue { i33, i1 } %718, 1
  %720 = extractvalue { i33, i1 } %718, 0
  %721 = icmp slt i33 %720, 0
  %722 = or i1 %719, %721
  br i1 %722, label %723, label %724, !prof !2

723:                                              ; preds = %716
  call void @llvm.trap() #10
  unreachable

724:                                              ; preds = %716
  %725 = trunc i33 %720 to i32
  store i32 %725, i32* %714, align 4
  br label %726

726:                                              ; preds = %724, %709
  %727 = phi i32 [ %725, %724 ], [ %715, %709 ]
  %728 = load atomic i32, i32* %710 monotonic, align 4
  %729 = and i32 %728, 2
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %731, label %741

731:                                              ; preds = %726
  %732 = zext i32 %727 to i33
  %733 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %732, i33 1) #10
  %734 = extractvalue { i33, i1 } %733, 1
  %735 = extractvalue { i33, i1 } %733, 0
  %736 = icmp slt i33 %735, 0
  %737 = or i1 %734, %736
  br i1 %737, label %738, label %739, !prof !2

738:                                              ; preds = %731
  call void @llvm.trap() #10
  unreachable

739:                                              ; preds = %731
  %740 = trunc i33 %735 to i32
  store i32 %740, i32* %714, align 4
  br label %741

741:                                              ; preds = %739, %726
  %742 = phi i32 [ %740, %739 ], [ %727, %726 ]
  %743 = load atomic i32, i32* %710 monotonic, align 4
  %744 = and i32 %743, 2
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %748

746:                                              ; preds = %741
  %747 = add i32 %742, -1
  store i32 %747, i32* %714, align 4
  br label %748

748:                                              ; preds = %746, %741
  %749 = phi i32 [ %747, %746 ], [ %742, %741 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %752

752:                                              ; preds = %751, %748, %706
  %753 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %753, align 8
  %754 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.10, i64 0, i64 0), i8** %754, align 8
  %755 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %11) #10
  br i1 %708, label %769, label %756

756:                                              ; preds = %752
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %758 = load atomic i32, i32* %757 monotonic, align 4
  %759 = and i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %762 = load i32, i32* %761, align 4
  br i1 %760, label %763, label %765

763:                                              ; preds = %756
  %764 = add i32 %762, -1
  store i32 %764, i32* %761, align 4
  br label %765

765:                                              ; preds = %763, %756
  %766 = phi i32 [ %764, %763 ], [ %762, %756 ]
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %768, label %769

768:                                              ; preds = %765
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %769

769:                                              ; preds = %768, %765, %752
  %770 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %753, align 8
  %771 = icmp eq %"class.WTF::StringImpl"* %770, null
  br i1 %771, label %1338, label %772

772:                                              ; preds = %769
  %773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %770, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %774 = load atomic i32, i32* %773 monotonic, align 4
  %775 = and i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %770, i64 0, i32 0
  %778 = load i32, i32* %777, align 4
  br i1 %776, label %779, label %781

779:                                              ; preds = %772
  %780 = add i32 %778, -1
  store i32 %780, i32* %777, align 4
  br label %781

781:                                              ; preds = %779, %772
  %782 = phi i32 [ %780, %779 ], [ %778, %772 ]
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %1338

784:                                              ; preds = %781
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %770) #10
  br label %1338

785:                                              ; preds = %152
  %786 = bitcast %"class.WTF::StringAppend.1710"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %786) #10
  %787 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %787, label %831, label %788

788:                                              ; preds = %785
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load atomic i32, i32* %789 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %794 = load i32, i32* %793, align 4
  br i1 %792, label %795, label %805

795:                                              ; preds = %788
  %796 = zext i32 %794 to i33
  %797 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %796, i33 1) #10
  %798 = extractvalue { i33, i1 } %797, 1
  %799 = extractvalue { i33, i1 } %797, 0
  %800 = icmp slt i33 %799, 0
  %801 = or i1 %798, %800
  br i1 %801, label %802, label %803, !prof !2

802:                                              ; preds = %795
  call void @llvm.trap() #10
  unreachable

803:                                              ; preds = %795
  %804 = trunc i33 %799 to i32
  store i32 %804, i32* %793, align 4
  br label %805

805:                                              ; preds = %803, %788
  %806 = phi i32 [ %804, %803 ], [ %794, %788 ]
  %807 = load atomic i32, i32* %789 monotonic, align 4
  %808 = and i32 %807, 2
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %820

810:                                              ; preds = %805
  %811 = zext i32 %806 to i33
  %812 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %811, i33 1) #10
  %813 = extractvalue { i33, i1 } %812, 1
  %814 = extractvalue { i33, i1 } %812, 0
  %815 = icmp slt i33 %814, 0
  %816 = or i1 %813, %815
  br i1 %816, label %817, label %818, !prof !2

817:                                              ; preds = %810
  call void @llvm.trap() #10
  unreachable

818:                                              ; preds = %810
  %819 = trunc i33 %814 to i32
  store i32 %819, i32* %793, align 4
  br label %820

820:                                              ; preds = %818, %805
  %821 = phi i32 [ %819, %818 ], [ %806, %805 ]
  %822 = load atomic i32, i32* %789 monotonic, align 4
  %823 = and i32 %822, 2
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %827

825:                                              ; preds = %820
  %826 = add i32 %821, -1
  store i32 %826, i32* %793, align 4
  br label %827

827:                                              ; preds = %825, %820
  %828 = phi i32 [ %826, %825 ], [ %821, %820 ]
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %831

830:                                              ; preds = %827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %831

831:                                              ; preds = %830, %827, %785
  %832 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %832, align 8
  %833 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.11, i64 0, i64 0), i8** %833, align 8
  %834 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %12) #10
  br i1 %787, label %848, label %835

835:                                              ; preds = %831
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %837 = load atomic i32, i32* %836 monotonic, align 4
  %838 = and i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %841 = load i32, i32* %840, align 4
  br i1 %839, label %842, label %844

842:                                              ; preds = %835
  %843 = add i32 %841, -1
  store i32 %843, i32* %840, align 4
  br label %844

844:                                              ; preds = %842, %835
  %845 = phi i32 [ %843, %842 ], [ %841, %835 ]
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %848

847:                                              ; preds = %844
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %848

848:                                              ; preds = %847, %844, %831
  %849 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %832, align 8
  %850 = icmp eq %"class.WTF::StringImpl"* %849, null
  br i1 %850, label %1338, label %851

851:                                              ; preds = %848
  %852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load atomic i32, i32* %852 monotonic, align 4
  %854 = and i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  br i1 %855, label %858, label %860

858:                                              ; preds = %851
  %859 = add i32 %857, -1
  store i32 %859, i32* %856, align 4
  br label %860

860:                                              ; preds = %858, %851
  %861 = phi i32 [ %859, %858 ], [ %857, %851 ]
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %1338

863:                                              ; preds = %860
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %849) #10
  br label %1338

864:                                              ; preds = %152
  %865 = bitcast %"class.WTF::StringAppend.1710"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %865) #10
  %866 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %866, label %910, label %867

867:                                              ; preds = %864
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %869 = load atomic i32, i32* %868 monotonic, align 4
  %870 = and i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %873 = load i32, i32* %872, align 4
  br i1 %871, label %874, label %884

874:                                              ; preds = %867
  %875 = zext i32 %873 to i33
  %876 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %875, i33 1) #10
  %877 = extractvalue { i33, i1 } %876, 1
  %878 = extractvalue { i33, i1 } %876, 0
  %879 = icmp slt i33 %878, 0
  %880 = or i1 %877, %879
  br i1 %880, label %881, label %882, !prof !2

881:                                              ; preds = %874
  call void @llvm.trap() #10
  unreachable

882:                                              ; preds = %874
  %883 = trunc i33 %878 to i32
  store i32 %883, i32* %872, align 4
  br label %884

884:                                              ; preds = %882, %867
  %885 = phi i32 [ %883, %882 ], [ %873, %867 ]
  %886 = load atomic i32, i32* %868 monotonic, align 4
  %887 = and i32 %886, 2
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %899

889:                                              ; preds = %884
  %890 = zext i32 %885 to i33
  %891 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %890, i33 1) #10
  %892 = extractvalue { i33, i1 } %891, 1
  %893 = extractvalue { i33, i1 } %891, 0
  %894 = icmp slt i33 %893, 0
  %895 = or i1 %892, %894
  br i1 %895, label %896, label %897, !prof !2

896:                                              ; preds = %889
  call void @llvm.trap() #10
  unreachable

897:                                              ; preds = %889
  %898 = trunc i33 %893 to i32
  store i32 %898, i32* %872, align 4
  br label %899

899:                                              ; preds = %897, %884
  %900 = phi i32 [ %898, %897 ], [ %885, %884 ]
  %901 = load atomic i32, i32* %868 monotonic, align 4
  %902 = and i32 %901, 2
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %904, label %906

904:                                              ; preds = %899
  %905 = add i32 %900, -1
  store i32 %905, i32* %872, align 4
  br label %906

906:                                              ; preds = %904, %899
  %907 = phi i32 [ %905, %904 ], [ %900, %899 ]
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %910

909:                                              ; preds = %906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %910

910:                                              ; preds = %909, %906, %864
  %911 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %911, align 8
  %912 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i8** %912, align 8
  %913 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %13) #10
  br i1 %866, label %927, label %914

914:                                              ; preds = %910
  %915 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %916 = load atomic i32, i32* %915 monotonic, align 4
  %917 = and i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %920 = load i32, i32* %919, align 4
  br i1 %918, label %921, label %923

921:                                              ; preds = %914
  %922 = add i32 %920, -1
  store i32 %922, i32* %919, align 4
  br label %923

923:                                              ; preds = %921, %914
  %924 = phi i32 [ %922, %921 ], [ %920, %914 ]
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %926, label %927

926:                                              ; preds = %923
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %927

927:                                              ; preds = %926, %923, %910
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %911, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %1338, label %930

930:                                              ; preds = %927
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %939

937:                                              ; preds = %930
  %938 = add i32 %936, -1
  store i32 %938, i32* %935, align 4
  br label %939

939:                                              ; preds = %937, %930
  %940 = phi i32 [ %938, %937 ], [ %936, %930 ]
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %1338

942:                                              ; preds = %939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #10
  br label %1338

943:                                              ; preds = %152
  %944 = bitcast %"class.WTF::StringAppend.1710"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %944) #10
  %945 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %945, label %989, label %946

946:                                              ; preds = %943
  %947 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %948 = load atomic i32, i32* %947 monotonic, align 4
  %949 = and i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %952 = load i32, i32* %951, align 4
  br i1 %950, label %953, label %963

953:                                              ; preds = %946
  %954 = zext i32 %952 to i33
  %955 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %954, i33 1) #10
  %956 = extractvalue { i33, i1 } %955, 1
  %957 = extractvalue { i33, i1 } %955, 0
  %958 = icmp slt i33 %957, 0
  %959 = or i1 %956, %958
  br i1 %959, label %960, label %961, !prof !2

960:                                              ; preds = %953
  call void @llvm.trap() #10
  unreachable

961:                                              ; preds = %953
  %962 = trunc i33 %957 to i32
  store i32 %962, i32* %951, align 4
  br label %963

963:                                              ; preds = %961, %946
  %964 = phi i32 [ %962, %961 ], [ %952, %946 ]
  %965 = load atomic i32, i32* %947 monotonic, align 4
  %966 = and i32 %965, 2
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %968, label %978

968:                                              ; preds = %963
  %969 = zext i32 %964 to i33
  %970 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %969, i33 1) #10
  %971 = extractvalue { i33, i1 } %970, 1
  %972 = extractvalue { i33, i1 } %970, 0
  %973 = icmp slt i33 %972, 0
  %974 = or i1 %971, %973
  br i1 %974, label %975, label %976, !prof !2

975:                                              ; preds = %968
  call void @llvm.trap() #10
  unreachable

976:                                              ; preds = %968
  %977 = trunc i33 %972 to i32
  store i32 %977, i32* %951, align 4
  br label %978

978:                                              ; preds = %976, %963
  %979 = phi i32 [ %977, %976 ], [ %964, %963 ]
  %980 = load atomic i32, i32* %947 monotonic, align 4
  %981 = and i32 %980, 2
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %985

983:                                              ; preds = %978
  %984 = add i32 %979, -1
  store i32 %984, i32* %951, align 4
  br label %985

985:                                              ; preds = %983, %978
  %986 = phi i32 [ %984, %983 ], [ %979, %978 ]
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %989

988:                                              ; preds = %985
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %989

989:                                              ; preds = %988, %985, %943
  %990 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %990, align 8
  %991 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.13, i64 0, i64 0), i8** %991, align 8
  %992 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %14) #10
  br i1 %945, label %1006, label %993

993:                                              ; preds = %989
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %995 = load atomic i32, i32* %994 monotonic, align 4
  %996 = and i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %999 = load i32, i32* %998, align 4
  br i1 %997, label %1000, label %1002

1000:                                             ; preds = %993
  %1001 = add i32 %999, -1
  store i32 %1001, i32* %998, align 4
  br label %1002

1002:                                             ; preds = %1000, %993
  %1003 = phi i32 [ %1001, %1000 ], [ %999, %993 ]
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1005, label %1006

1005:                                             ; preds = %1002
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1006

1006:                                             ; preds = %1005, %1002, %989
  %1007 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %990, align 8
  %1008 = icmp eq %"class.WTF::StringImpl"* %1007, null
  br i1 %1008, label %1338, label %1009

1009:                                             ; preds = %1006
  %1010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1007, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1011 = load atomic i32, i32* %1010 monotonic, align 4
  %1012 = and i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1007, i64 0, i32 0
  %1015 = load i32, i32* %1014, align 4
  br i1 %1013, label %1016, label %1018

1016:                                             ; preds = %1009
  %1017 = add i32 %1015, -1
  store i32 %1017, i32* %1014, align 4
  br label %1018

1018:                                             ; preds = %1016, %1009
  %1019 = phi i32 [ %1017, %1016 ], [ %1015, %1009 ]
  %1020 = icmp eq i32 %1019, 0
  br i1 %1020, label %1021, label %1338

1021:                                             ; preds = %1018
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1007) #10
  br label %1338

1022:                                             ; preds = %152
  %1023 = bitcast %"class.WTF::StringAppend.1710"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1023) #10
  %1024 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %1024, label %1068, label %1025

1025:                                             ; preds = %1022
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1027 = load atomic i32, i32* %1026 monotonic, align 4
  %1028 = and i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1031 = load i32, i32* %1030, align 4
  br i1 %1029, label %1032, label %1042

1032:                                             ; preds = %1025
  %1033 = zext i32 %1031 to i33
  %1034 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1033, i33 1) #10
  %1035 = extractvalue { i33, i1 } %1034, 1
  %1036 = extractvalue { i33, i1 } %1034, 0
  %1037 = icmp slt i33 %1036, 0
  %1038 = or i1 %1035, %1037
  br i1 %1038, label %1039, label %1040, !prof !2

1039:                                             ; preds = %1032
  call void @llvm.trap() #10
  unreachable

1040:                                             ; preds = %1032
  %1041 = trunc i33 %1036 to i32
  store i32 %1041, i32* %1030, align 4
  br label %1042

1042:                                             ; preds = %1040, %1025
  %1043 = phi i32 [ %1041, %1040 ], [ %1031, %1025 ]
  %1044 = load atomic i32, i32* %1026 monotonic, align 4
  %1045 = and i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %1057

1047:                                             ; preds = %1042
  %1048 = zext i32 %1043 to i33
  %1049 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1048, i33 1) #10
  %1050 = extractvalue { i33, i1 } %1049, 1
  %1051 = extractvalue { i33, i1 } %1049, 0
  %1052 = icmp slt i33 %1051, 0
  %1053 = or i1 %1050, %1052
  br i1 %1053, label %1054, label %1055, !prof !2

1054:                                             ; preds = %1047
  call void @llvm.trap() #10
  unreachable

1055:                                             ; preds = %1047
  %1056 = trunc i33 %1051 to i32
  store i32 %1056, i32* %1030, align 4
  br label %1057

1057:                                             ; preds = %1055, %1042
  %1058 = phi i32 [ %1056, %1055 ], [ %1043, %1042 ]
  %1059 = load atomic i32, i32* %1026 monotonic, align 4
  %1060 = and i32 %1059, 2
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1064

1062:                                             ; preds = %1057
  %1063 = add i32 %1058, -1
  store i32 %1063, i32* %1030, align 4
  br label %1064

1064:                                             ; preds = %1062, %1057
  %1065 = phi i32 [ %1063, %1062 ], [ %1058, %1057 ]
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %1068

1067:                                             ; preds = %1064
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1068

1068:                                             ; preds = %1067, %1064, %1022
  %1069 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %1069, align 8
  %1070 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8** %1070, align 8
  %1071 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %15) #10
  br i1 %1024, label %1085, label %1072

1072:                                             ; preds = %1068
  %1073 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1074 = load atomic i32, i32* %1073 monotonic, align 4
  %1075 = and i32 %1074, 2
  %1076 = icmp eq i32 %1075, 0
  %1077 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1078 = load i32, i32* %1077, align 4
  br i1 %1076, label %1079, label %1081

1079:                                             ; preds = %1072
  %1080 = add i32 %1078, -1
  store i32 %1080, i32* %1077, align 4
  br label %1081

1081:                                             ; preds = %1079, %1072
  %1082 = phi i32 [ %1080, %1079 ], [ %1078, %1072 ]
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1081
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1085

1085:                                             ; preds = %1084, %1081, %1068
  %1086 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  %1087 = icmp eq %"class.WTF::StringImpl"* %1086, null
  br i1 %1087, label %1338, label %1088

1088:                                             ; preds = %1085
  %1089 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1086, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1090 = load atomic i32, i32* %1089 monotonic, align 4
  %1091 = and i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1086, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 4
  br i1 %1092, label %1095, label %1097

1095:                                             ; preds = %1088
  %1096 = add i32 %1094, -1
  store i32 %1096, i32* %1093, align 4
  br label %1097

1097:                                             ; preds = %1095, %1088
  %1098 = phi i32 [ %1096, %1095 ], [ %1094, %1088 ]
  %1099 = icmp eq i32 %1098, 0
  br i1 %1099, label %1100, label %1338

1100:                                             ; preds = %1097
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1086) #10
  br label %1338

1101:                                             ; preds = %152
  %1102 = bitcast %"class.WTF::StringAppend.1710"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1102) #10
  %1103 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %1103, label %1147, label %1104

1104:                                             ; preds = %1101
  %1105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1106 = load atomic i32, i32* %1105 monotonic, align 4
  %1107 = and i32 %1106, 2
  %1108 = icmp eq i32 %1107, 0
  %1109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1110 = load i32, i32* %1109, align 4
  br i1 %1108, label %1111, label %1121

1111:                                             ; preds = %1104
  %1112 = zext i32 %1110 to i33
  %1113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1112, i33 1) #10
  %1114 = extractvalue { i33, i1 } %1113, 1
  %1115 = extractvalue { i33, i1 } %1113, 0
  %1116 = icmp slt i33 %1115, 0
  %1117 = or i1 %1114, %1116
  br i1 %1117, label %1118, label %1119, !prof !2

1118:                                             ; preds = %1111
  call void @llvm.trap() #10
  unreachable

1119:                                             ; preds = %1111
  %1120 = trunc i33 %1115 to i32
  store i32 %1120, i32* %1109, align 4
  br label %1121

1121:                                             ; preds = %1119, %1104
  %1122 = phi i32 [ %1120, %1119 ], [ %1110, %1104 ]
  %1123 = load atomic i32, i32* %1105 monotonic, align 4
  %1124 = and i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  br i1 %1125, label %1126, label %1136

1126:                                             ; preds = %1121
  %1127 = zext i32 %1122 to i33
  %1128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1127, i33 1) #10
  %1129 = extractvalue { i33, i1 } %1128, 1
  %1130 = extractvalue { i33, i1 } %1128, 0
  %1131 = icmp slt i33 %1130, 0
  %1132 = or i1 %1129, %1131
  br i1 %1132, label %1133, label %1134, !prof !2

1133:                                             ; preds = %1126
  call void @llvm.trap() #10
  unreachable

1134:                                             ; preds = %1126
  %1135 = trunc i33 %1130 to i32
  store i32 %1135, i32* %1109, align 4
  br label %1136

1136:                                             ; preds = %1134, %1121
  %1137 = phi i32 [ %1135, %1134 ], [ %1122, %1121 ]
  %1138 = load atomic i32, i32* %1105 monotonic, align 4
  %1139 = and i32 %1138, 2
  %1140 = icmp eq i32 %1139, 0
  br i1 %1140, label %1141, label %1143

1141:                                             ; preds = %1136
  %1142 = add i32 %1137, -1
  store i32 %1142, i32* %1109, align 4
  br label %1143

1143:                                             ; preds = %1141, %1136
  %1144 = phi i32 [ %1142, %1141 ], [ %1137, %1136 ]
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1147

1146:                                             ; preds = %1143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1147

1147:                                             ; preds = %1146, %1143, %1101
  %1148 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %1148, align 8
  %1149 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i8** %1149, align 8
  %1150 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %16) #10
  br i1 %1103, label %1164, label %1151

1151:                                             ; preds = %1147
  %1152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1153 = load atomic i32, i32* %1152 monotonic, align 4
  %1154 = and i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1157 = load i32, i32* %1156, align 4
  br i1 %1155, label %1158, label %1160

1158:                                             ; preds = %1151
  %1159 = add i32 %1157, -1
  store i32 %1159, i32* %1156, align 4
  br label %1160

1160:                                             ; preds = %1158, %1151
  %1161 = phi i32 [ %1159, %1158 ], [ %1157, %1151 ]
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1163, label %1164

1163:                                             ; preds = %1160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1164

1164:                                             ; preds = %1163, %1160, %1147
  %1165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1148, align 8
  %1166 = icmp eq %"class.WTF::StringImpl"* %1165, null
  br i1 %1166, label %1338, label %1167

1167:                                             ; preds = %1164
  %1168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1169 = load atomic i32, i32* %1168 monotonic, align 4
  %1170 = and i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1165, i64 0, i32 0
  %1173 = load i32, i32* %1172, align 4
  br i1 %1171, label %1174, label %1176

1174:                                             ; preds = %1167
  %1175 = add i32 %1173, -1
  store i32 %1175, i32* %1172, align 4
  br label %1176

1176:                                             ; preds = %1174, %1167
  %1177 = phi i32 [ %1175, %1174 ], [ %1173, %1167 ]
  %1178 = icmp eq i32 %1177, 0
  br i1 %1178, label %1179, label %1338

1179:                                             ; preds = %1176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1165) #10
  br label %1338

1180:                                             ; preds = %152
  %1181 = bitcast %"class.WTF::StringAppend.1710"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1181) #10
  %1182 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %1182, label %1226, label %1183

1183:                                             ; preds = %1180
  %1184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1185 = load atomic i32, i32* %1184 monotonic, align 4
  %1186 = and i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1189 = load i32, i32* %1188, align 4
  br i1 %1187, label %1190, label %1200

1190:                                             ; preds = %1183
  %1191 = zext i32 %1189 to i33
  %1192 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1191, i33 1) #10
  %1193 = extractvalue { i33, i1 } %1192, 1
  %1194 = extractvalue { i33, i1 } %1192, 0
  %1195 = icmp slt i33 %1194, 0
  %1196 = or i1 %1193, %1195
  br i1 %1196, label %1197, label %1198, !prof !2

1197:                                             ; preds = %1190
  call void @llvm.trap() #10
  unreachable

1198:                                             ; preds = %1190
  %1199 = trunc i33 %1194 to i32
  store i32 %1199, i32* %1188, align 4
  br label %1200

1200:                                             ; preds = %1198, %1183
  %1201 = phi i32 [ %1199, %1198 ], [ %1189, %1183 ]
  %1202 = load atomic i32, i32* %1184 monotonic, align 4
  %1203 = and i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1205, label %1215

1205:                                             ; preds = %1200
  %1206 = zext i32 %1201 to i33
  %1207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1206, i33 1) #10
  %1208 = extractvalue { i33, i1 } %1207, 1
  %1209 = extractvalue { i33, i1 } %1207, 0
  %1210 = icmp slt i33 %1209, 0
  %1211 = or i1 %1208, %1210
  br i1 %1211, label %1212, label %1213, !prof !2

1212:                                             ; preds = %1205
  call void @llvm.trap() #10
  unreachable

1213:                                             ; preds = %1205
  %1214 = trunc i33 %1209 to i32
  store i32 %1214, i32* %1188, align 4
  br label %1215

1215:                                             ; preds = %1213, %1200
  %1216 = phi i32 [ %1214, %1213 ], [ %1201, %1200 ]
  %1217 = load atomic i32, i32* %1184 monotonic, align 4
  %1218 = and i32 %1217, 2
  %1219 = icmp eq i32 %1218, 0
  br i1 %1219, label %1220, label %1222

1220:                                             ; preds = %1215
  %1221 = add i32 %1216, -1
  store i32 %1221, i32* %1188, align 4
  br label %1222

1222:                                             ; preds = %1220, %1215
  %1223 = phi i32 [ %1221, %1220 ], [ %1216, %1215 ]
  %1224 = icmp eq i32 %1223, 0
  br i1 %1224, label %1225, label %1226

1225:                                             ; preds = %1222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1226

1226:                                             ; preds = %1225, %1222, %1180
  %1227 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %1227, align 8
  %1228 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.16, i64 0, i64 0), i8** %1228, align 8
  %1229 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %17) #10
  br i1 %1182, label %1243, label %1230

1230:                                             ; preds = %1226
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1232 = load atomic i32, i32* %1231 monotonic, align 4
  %1233 = and i32 %1232, 2
  %1234 = icmp eq i32 %1233, 0
  %1235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1236 = load i32, i32* %1235, align 4
  br i1 %1234, label %1237, label %1239

1237:                                             ; preds = %1230
  %1238 = add i32 %1236, -1
  store i32 %1238, i32* %1235, align 4
  br label %1239

1239:                                             ; preds = %1237, %1230
  %1240 = phi i32 [ %1238, %1237 ], [ %1236, %1230 ]
  %1241 = icmp eq i32 %1240, 0
  br i1 %1241, label %1242, label %1243

1242:                                             ; preds = %1239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1243

1243:                                             ; preds = %1242, %1239, %1226
  %1244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1227, align 8
  %1245 = icmp eq %"class.WTF::StringImpl"* %1244, null
  br i1 %1245, label %1338, label %1246

1246:                                             ; preds = %1243
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1248 = load atomic i32, i32* %1247 monotonic, align 4
  %1249 = and i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1244, i64 0, i32 0
  %1252 = load i32, i32* %1251, align 4
  br i1 %1250, label %1253, label %1255

1253:                                             ; preds = %1246
  %1254 = add i32 %1252, -1
  store i32 %1254, i32* %1251, align 4
  br label %1255

1255:                                             ; preds = %1253, %1246
  %1256 = phi i32 [ %1254, %1253 ], [ %1252, %1246 ]
  %1257 = icmp eq i32 %1256, 0
  br i1 %1257, label %1258, label %1338

1258:                                             ; preds = %1255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1244) #10
  br label %1338

1259:                                             ; preds = %152
  %1260 = bitcast %"class.WTF::StringAppend.1710"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1260) #10
  %1261 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %1261, label %1305, label %1262

1262:                                             ; preds = %1259
  %1263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1264 = load atomic i32, i32* %1263 monotonic, align 4
  %1265 = and i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  %1267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1268 = load i32, i32* %1267, align 4
  br i1 %1266, label %1269, label %1279

1269:                                             ; preds = %1262
  %1270 = zext i32 %1268 to i33
  %1271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1270, i33 1) #10
  %1272 = extractvalue { i33, i1 } %1271, 1
  %1273 = extractvalue { i33, i1 } %1271, 0
  %1274 = icmp slt i33 %1273, 0
  %1275 = or i1 %1272, %1274
  br i1 %1275, label %1276, label %1277, !prof !2

1276:                                             ; preds = %1269
  call void @llvm.trap() #10
  unreachable

1277:                                             ; preds = %1269
  %1278 = trunc i33 %1273 to i32
  store i32 %1278, i32* %1267, align 4
  br label %1279

1279:                                             ; preds = %1277, %1262
  %1280 = phi i32 [ %1278, %1277 ], [ %1268, %1262 ]
  %1281 = load atomic i32, i32* %1263 monotonic, align 4
  %1282 = and i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  br i1 %1283, label %1284, label %1294

1284:                                             ; preds = %1279
  %1285 = zext i32 %1280 to i33
  %1286 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1285, i33 1) #10
  %1287 = extractvalue { i33, i1 } %1286, 1
  %1288 = extractvalue { i33, i1 } %1286, 0
  %1289 = icmp slt i33 %1288, 0
  %1290 = or i1 %1287, %1289
  br i1 %1290, label %1291, label %1292, !prof !2

1291:                                             ; preds = %1284
  call void @llvm.trap() #10
  unreachable

1292:                                             ; preds = %1284
  %1293 = trunc i33 %1288 to i32
  store i32 %1293, i32* %1267, align 4
  br label %1294

1294:                                             ; preds = %1292, %1279
  %1295 = phi i32 [ %1293, %1292 ], [ %1280, %1279 ]
  %1296 = load atomic i32, i32* %1263 monotonic, align 4
  %1297 = and i32 %1296, 2
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1299, label %1301

1299:                                             ; preds = %1294
  %1300 = add i32 %1295, -1
  store i32 %1300, i32* %1267, align 4
  br label %1301

1301:                                             ; preds = %1299, %1294
  %1302 = phi i32 [ %1300, %1299 ], [ %1295, %1294 ]
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1304, label %1305

1304:                                             ; preds = %1301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1305

1305:                                             ; preds = %1304, %1301, %1259
  %1306 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %1306, align 8
  %1307 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i8** %1307, align 8
  %1308 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"* nonnull %18) #10
  br i1 %1261, label %1322, label %1309

1309:                                             ; preds = %1305
  %1310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load atomic i32, i32* %1310 monotonic, align 4
  %1312 = and i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %1315 = load i32, i32* %1314, align 4
  br i1 %1313, label %1316, label %1318

1316:                                             ; preds = %1309
  %1317 = add i32 %1315, -1
  store i32 %1317, i32* %1314, align 4
  br label %1318

1318:                                             ; preds = %1316, %1309
  %1319 = phi i32 [ %1317, %1316 ], [ %1315, %1309 ]
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1321, label %1322

1321:                                             ; preds = %1318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %1322

1322:                                             ; preds = %1321, %1318, %1305
  %1323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1306, align 8
  %1324 = icmp eq %"class.WTF::StringImpl"* %1323, null
  br i1 %1324, label %1338, label %1325

1325:                                             ; preds = %1322
  %1326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1327 = load atomic i32, i32* %1326 monotonic, align 4
  %1328 = and i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  %1330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 0
  %1331 = load i32, i32* %1330, align 4
  br i1 %1329, label %1332, label %1334

1332:                                             ; preds = %1325
  %1333 = add i32 %1331, -1
  store i32 %1333, i32* %1330, align 4
  br label %1334

1334:                                             ; preds = %1332, %1325
  %1335 = phi i32 [ %1333, %1332 ], [ %1331, %1325 ]
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1337, label %1338

1337:                                             ; preds = %1334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1323) #10
  br label %1338

1338:                                             ; preds = %1322, %1334, %1337, %1243, %1255, %1258, %1164, %1176, %1179, %1085, %1097, %1100, %1006, %1018, %1021, %927, %939, %942, %848, %860, %863, %769, %781, %784, %690, %702, %705, %611, %623, %626, %532, %544, %547, %453, %465, %468, %374, %386, %389, %295, %307, %310, %216, %228, %231
  %1339 = phi i8* [ %154, %231 ], [ %154, %228 ], [ %154, %216 ], [ %233, %310 ], [ %233, %307 ], [ %233, %295 ], [ %312, %389 ], [ %312, %386 ], [ %312, %374 ], [ %391, %468 ], [ %391, %465 ], [ %391, %453 ], [ %470, %547 ], [ %470, %544 ], [ %470, %532 ], [ %549, %626 ], [ %549, %623 ], [ %549, %611 ], [ %628, %705 ], [ %628, %702 ], [ %628, %690 ], [ %707, %784 ], [ %707, %781 ], [ %707, %769 ], [ %786, %863 ], [ %786, %860 ], [ %786, %848 ], [ %865, %942 ], [ %865, %939 ], [ %865, %927 ], [ %944, %1021 ], [ %944, %1018 ], [ %944, %1006 ], [ %1023, %1100 ], [ %1023, %1097 ], [ %1023, %1085 ], [ %1102, %1179 ], [ %1102, %1176 ], [ %1102, %1164 ], [ %1181, %1258 ], [ %1181, %1255 ], [ %1181, %1243 ], [ %1260, %1337 ], [ %1260, %1334 ], [ %1260, %1322 ]
  %1340 = phi %"class.WTF::StringImpl"* [ %202, %231 ], [ %202, %228 ], [ %202, %216 ], [ %281, %310 ], [ %281, %307 ], [ %281, %295 ], [ %360, %389 ], [ %360, %386 ], [ %360, %374 ], [ %439, %468 ], [ %439, %465 ], [ %439, %453 ], [ %518, %547 ], [ %518, %544 ], [ %518, %532 ], [ %597, %626 ], [ %597, %623 ], [ %597, %611 ], [ %676, %705 ], [ %676, %702 ], [ %676, %690 ], [ %755, %784 ], [ %755, %781 ], [ %755, %769 ], [ %834, %863 ], [ %834, %860 ], [ %834, %848 ], [ %913, %942 ], [ %913, %939 ], [ %913, %927 ], [ %992, %1021 ], [ %992, %1018 ], [ %992, %1006 ], [ %1071, %1100 ], [ %1071, %1097 ], [ %1071, %1085 ], [ %1150, %1179 ], [ %1150, %1176 ], [ %1150, %1164 ], [ %1229, %1258 ], [ %1229, %1255 ], [ %1229, %1243 ], [ %1308, %1337 ], [ %1308, %1334 ], [ %1308, %1322 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1339) #10
  br label %1341

1341:                                             ; preds = %1338, %152
  %1342 = phi %"class.WTF::StringImpl"* [ %122, %152 ], [ %1340, %1338 ]
  store %"class.WTF::StringImpl"* %1342, %"class.WTF::StringImpl"** %23, align 8
  %1343 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0
  %1344 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %1343) #10
  %1345 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %1346 = bitcast i8* %1345 to %"class.blink::ConsoleMessage"*
  %1347 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %1346, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.blink::SourceLocation"* %1347) #10
  %1348 = getelementptr inbounds i8, i8* %1345, i64 -4
  %1349 = bitcast i8* %1348 to i16*
  %1350 = load atomic i16, i16* %1349 monotonic, align 2
  %1351 = or i16 %1350, 1
  store atomic i16 %1351, i16* %1349 release, align 2
  %1352 = bitcast %"class.blink::ExecutionContext"* %1344 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %1353 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %1352, align 8
  %1354 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %1353, i64 52
  %1355 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %1354, align 8
  call void %1355(%"class.blink::ExecutionContext"* %1344, %"class.blink::ConsoleMessage"* %1346, i1 zeroext false) #10
  %1356 = call i8* @_Znwm(i64 384) #11, !noalias !3
  %1357 = bitcast i8* %1356 to %"class.blink::mojom::blink::FetchAPIResponse"*
  call void @_ZN5blink5mojom5blink16FetchAPIResponseC1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %1357) #10, !noalias !3
  %1358 = ptrtoint i8* %1356 to i64
  %1359 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1359) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #10
  %1360 = getelementptr inbounds i8, i8* %1356, i64 24
  %1361 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %1362 = bitcast %"class.WTF::String"* %20 to i64*
  %1363 = load i64, i64* %1362, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1361, align 8
  %1364 = bitcast i8* %1360 to i64*
  %1365 = bitcast i8* %1360 to %"class.WTF::StringImpl"**
  %1366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1365, align 8
  store i64 %1363, i64* %1364, align 8
  %1367 = icmp eq %"class.WTF::StringImpl"* %1366, null
  br i1 %1367, label %1381, label %1368

1368:                                             ; preds = %1341
  %1369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = load atomic i32, i32* %1369 monotonic, align 4
  %1371 = and i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 0
  %1374 = load i32, i32* %1373, align 4
  br i1 %1372, label %1375, label %1377

1375:                                             ; preds = %1368
  %1376 = add i32 %1374, -1
  store i32 %1376, i32* %1373, align 4
  br label %1377

1377:                                             ; preds = %1375, %1368
  %1378 = phi i32 [ %1376, %1375 ], [ %1374, %1368 ]
  %1379 = icmp eq i32 %1378, 0
  br i1 %1379, label %1380, label %1381

1380:                                             ; preds = %1377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1366) #10
  br label %1381

1381:                                             ; preds = %1341, %1377, %1380
  %1382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1361, align 8
  %1383 = icmp eq %"class.WTF::StringImpl"* %1382, null
  br i1 %1383, label %1397, label %1384

1384:                                             ; preds = %1381
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1386 = load atomic i32, i32* %1385 monotonic, align 4
  %1387 = and i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 0
  %1390 = load i32, i32* %1389, align 4
  br i1 %1388, label %1391, label %1393

1391:                                             ; preds = %1384
  %1392 = add i32 %1390, -1
  store i32 %1392, i32* %1389, align 4
  br label %1393

1393:                                             ; preds = %1391, %1384
  %1394 = phi i32 [ %1392, %1391 ], [ %1390, %1384 ]
  %1395 = icmp eq i32 %1394, 0
  br i1 %1395, label %1396, label %1397

1396:                                             ; preds = %1393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1382) #10
  br label %1397

1397:                                             ; preds = %1381, %1393, %1396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1359) #10
  %1398 = getelementptr inbounds i8, i8* %1356, i64 104
  %1399 = bitcast i8* %1398 to i32*
  store i32 %1, i32* %1399, align 8
  %1400 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %1343) #10
  %1401 = icmp eq %"class.blink::ExecutionContext"* %1400, null
  %1402 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1400, i64 -1, i32 22
  %1403 = bitcast %"class.blink::DOMTimerCoordinator"* %1402 to %"class.blink::ServiceWorkerGlobalScope"*
  %1404 = select i1 %1401, %"class.blink::ServiceWorkerGlobalScope"* null, %"class.blink::ServiceWorkerGlobalScope"* %1403
  %1405 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 1
  %1406 = load i32, i32* %1405, align 8
  %1407 = bitcast %"class.mojo::StructPtr.633"* %21 to i64*
  %1408 = getelementptr inbounds %"class.mojo::StructPtr.633", %"class.mojo::StructPtr.633"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1358, i64* %1407, align 8
  %1409 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %1410 = load i64, i64* %1409, align 8
  %1411 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  call void @_ZN5blink24ServiceWorkerGlobalScope19RespondToFetchEventEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEEN4base9TimeTicksESB_(%"class.blink::ServiceWorkerGlobalScope"* %1404, i32 %1406, %"class.blink::KURL"* dereferenceable(112) %24, %"class.mojo::StructPtr.633"* nonnull %21, i64 %1410, i64 %1411) #10
  %1412 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %1408, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %1408, align 8
  %1413 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %1412, null
  br i1 %1413, label %1416, label %1414

1414:                                             ; preds = %1397
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %1412) #10
  %1415 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %1412 to i8*
  call void @_ZdlPv(i8* %1415) #11
  br label %1416

1416:                                             ; preds = %1414, %1397
  %1417 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %1418 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %1417, align 8
  call void @_ZN5blink10FetchEvent20RejectHandledPromiseERKN3WTF6StringE(%"class.blink::FetchEvent"* %1418, %"class.WTF::String"* nonnull dereferenceable(8) %19) #10
  %1419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %1420 = icmp eq %"class.WTF::StringImpl"* %1419, null
  br i1 %1420, label %1434, label %1421

1421:                                             ; preds = %1416
  %1422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1423 = load atomic i32, i32* %1422 monotonic, align 4
  %1424 = and i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1419, i64 0, i32 0
  %1427 = load i32, i32* %1426, align 4
  br i1 %1425, label %1428, label %1430

1428:                                             ; preds = %1421
  %1429 = add i32 %1427, -1
  store i32 %1429, i32* %1426, align 4
  br label %1430

1430:                                             ; preds = %1428, %1421
  %1431 = phi i32 [ %1429, %1428 ], [ %1427, %1421 ]
  %1432 = icmp eq i32 %1431, 0
  br i1 %1432, label %1433, label %1434

1433:                                             ; preds = %1430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1419) #10
  br label %1434

1434:                                             ; preds = %1416, %1430, %1433
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink24ServiceWorkerGlobalScope19RespondToFetchEventEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEEN4base9TimeTicksESB_(%"class.blink::ServiceWorkerGlobalScope"*, i32, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::StructPtr.633"*, i64, i64) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN5blink10FetchEvent20RejectHandledPromiseERKN3WTF6StringE(%"class.blink::FetchEvent"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24FetchRespondWithObserver19OnResponseFulfilledEPNS_11ScriptStateERKNS_11ScriptValueENS_16ExceptionContext7ContextEPKcS9_(%"class.blink::FetchRespondWithObserver"*, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), i16 signext, i8*, i8*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::ScopedHandleBase.451", align 4
  %8 = alloca %"class.mojo::PendingReceiver.1595", align 8
  %9 = alloca %"class.mojo::PendingReceiver.1595", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.mojo::StructPtr.633", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %class.GURL, align 8
  %15 = alloca %"class.url::Origin", align 8
  %16 = alloca %class.GURL, align 8
  %17 = alloca %"class.blink::ExceptionState", align 8
  %18 = alloca %"class.mojo::StructPtr.633", align 8
  %19 = alloca %"class.mojo::StructPtr.633", align 8
  %20 = alloca %"class.mojo::StructPtr.1611", align 8
  %21 = alloca %"class.mojo::StructPtr.633", align 8
  %22 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %23 = bitcast %"class.blink::ScriptState"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 8
  %26 = inttoptr i64 %25 to %"class.blink::V8PerIsolateData"**
  %27 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %27, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8Response18wrapper_type_info_E, %"class.v8::Value"* %22) #10
  br i1 %28, label %34, label %29

29:                                               ; preds = %6
  %30 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %31 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %31, i64 3
  %33 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %32, align 8
  tail call void %33(%"class.blink::FetchRespondWithObserver"* %0, i32 3) #10
  br label %460

34:                                               ; preds = %6
  %35 = load i64, i64* %23, align 8
  %36 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %37 = add i64 %35, 8
  %38 = inttoptr i64 %37 to %"class.blink::V8PerIsolateData"**
  %39 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %39, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8Response18wrapper_type_info_E, %"class.v8::Value"* %36) #10
  br i1 %40, label %41, label %63

41:                                               ; preds = %34
  %42 = bitcast %"class.v8::Value"* %36 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %43, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  switch i16 %52, label %57 [
    i16 1057, label %53
    i16 1056, label %53
    i16 1040, label %53
  ]

53:                                               ; preds = %41, %41, %41
  %54 = add i64 %43, 19
  %55 = inttoptr i64 %54 to i8**
  %56 = load i8*, i8** %55, align 1
  br label %60

57:                                               ; preds = %41
  %58 = bitcast %"class.v8::Value"* %36 to %"class.v8::Object"*
  %59 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %58, i32 1) #10
  br label %60

60:                                               ; preds = %57, %53
  %61 = phi i8* [ %56, %53 ], [ %59, %57 ]
  %62 = bitcast i8* %61 to %"class.blink::Response"*
  br label %63

63:                                               ; preds = %34, %60
  %64 = phi %"class.blink::Response"* [ %62, %60 ], [ null, %34 ]
  %65 = getelementptr inbounds %"class.blink::Response", %"class.blink::Response"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %107 [
    i32 3, label %69
    i32 1, label %74
    i32 4, label %83
  ]

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %71 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %71, i64 3
  %73 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %72, align 8
  tail call void %73(%"class.blink::FetchRespondWithObserver"* %0, i32 4) #10
  br label %460

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %104

78:                                               ; preds = %74
  %79 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %80 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %80, i64 3
  %82 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %81, align 8
  tail call void %82(%"class.blink::FetchRespondWithObserver"* %0, i32 13) #10
  br label %460

83:                                               ; preds = %63
  %84 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %89 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %89, i64 3
  %91 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %90, align 8
  tail call void %91(%"class.blink::FetchRespondWithObserver"* %0, i32 5) #10
  br label %460

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 5
  %98 = load i32, i32* %97, align 4
  switch i32 %98, label %104 [
    i32 20, label %99
    i32 15, label %99
  ]

99:                                               ; preds = %92, %96, %96
  %100 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %101 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %101, i64 3
  %103 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %102, align 8
  tail call void %103(%"class.blink::FetchRespondWithObserver"* %0, i32 8) #10
  br label %460

104:                                              ; preds = %96, %74
  %105 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  br label %118

107:                                              ; preds = %63
  %108 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = icmp ne i32 %109, 2
  %111 = icmp eq i32 %68, 5
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %118

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %115 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %115, i64 3
  %117 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %116, align 8
  tail call void %117(%"class.blink::FetchRespondWithObserver"* %0, i32 9) #10
  br label %460

118:                                              ; preds = %104, %107
  %119 = phi i32 [ %106, %104 ], [ %109, %107 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %118
  %122 = tail call zeroext i1 @_ZNK5blink8Response10redirectedEv(%"class.blink::Response"* %64) #10
  br i1 %122, label %123, label %128

123:                                              ; preds = %121
  %124 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %125 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %125, i64 3
  %127 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %126, align 8
  tail call void %127(%"class.blink::FetchRespondWithObserver"* %0, i32 11) #10
  br label %460

128:                                              ; preds = %118, %121
  %129 = getelementptr inbounds %"class.blink::Response", %"class.blink::Response"* %64, i64 0, i32 2
  %130 = tail call zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"* %129) #10
  br i1 %130, label %131, label %136

131:                                              ; preds = %128
  %132 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %133 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %133, i64 3
  %135 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %134, align 8
  tail call void %135(%"class.blink::FetchRespondWithObserver"* %0, i32 10) #10
  br label %460

136:                                              ; preds = %128
  %137 = tail call zeroext i1 @_ZNK5blink8Response10IsBodyUsedEv(%"class.blink::Response"* %64) #10
  br i1 %137, label %138, label %143

138:                                              ; preds = %136
  %139 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %140 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %140, i64 3
  %142 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %141, align 8
  tail call void %142(%"class.blink::FetchRespondWithObserver"* %0, i32 7) #10
  br label %460

143:                                              ; preds = %136
  %144 = bitcast %"class.mojo::StructPtr.633"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #10
  %145 = getelementptr inbounds %"class.mojo::StructPtr.633", %"class.mojo::StructPtr.633"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIResponse"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::FetchAPIResponse"*), %"class.blink::mojom::blink::FetchAPIResponse"** %145, align 8
  %146 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  call void @_ZN5blink8Response24PopulateFetchAPIResponseERKNS_4KURLE(%"class.mojo::StructPtr.633"* nonnull sret %12, %"class.blink::Response"* %64, %"class.blink::KURL"* dereferenceable(112) %146) #10
  %147 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0
  %148 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %147) #10
  %149 = icmp eq %"class.blink::ExecutionContext"* %148, null
  %150 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %148, i64 -1, i32 22
  %151 = bitcast %"class.blink::DOMTimerCoordinator"* %150 to %"class.blink::ServiceWorkerGlobalScope"*
  %152 = select i1 %149, %"class.blink::ServiceWorkerGlobalScope"* null, %"class.blink::ServiceWorkerGlobalScope"* %151
  %153 = bitcast %"class.url::Origin"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %153) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 80, i1 false)
  %154 = bitcast %class.GURL* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %154) #10
  %155 = getelementptr inbounds %"class.blink::ServiceWorkerGlobalScope", %"class.blink::ServiceWorkerGlobalScope"* %152, i64 0, i32 0
  %156 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"* %155) #10
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %14, %"class.blink::KURL"* %156) #10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %13, %class.GURL* nonnull dereferenceable(120) %14) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %154) #10
  %157 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0, i32 0
  %158 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %157) #10
  br i1 %158, label %159, label %188

159:                                              ; preds = %143
  %160 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0, i32 1
  %161 = bitcast i64* %160 to %"class.blink::CrossOriginResourcePolicyChecker"**
  %162 = load %"class.blink::CrossOriginResourcePolicyChecker"*, %"class.blink::CrossOriginResourcePolicyChecker"** %161, align 8
  %163 = icmp eq %"class.blink::CrossOriginResourcePolicyChecker"* %162, null
  br i1 %163, label %188, label %164

164:                                              ; preds = %159
  %165 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %157) #10
  br i1 %165, label %169, label %166

166:                                              ; preds = %164
  %167 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #10
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #10
  br label %169

169:                                              ; preds = %166, %164
  %170 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %157) #10
  br i1 %170, label %171, label %173

171:                                              ; preds = %169
  %172 = load %"class.blink::CrossOriginResourcePolicyChecker"*, %"class.blink::CrossOriginResourcePolicyChecker"** %161, align 8
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi %"class.blink::CrossOriginResourcePolicyChecker"* [ %172, %171 ], [ null, %169 ]
  %175 = bitcast %"class.url::Origin"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %175) #10
  %176 = bitcast %class.GURL* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %176) #10
  %177 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"* %155) #10
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %16, %"class.blink::KURL"* %177) #10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %15, %class.GURL* nonnull dereferenceable(120) %16) #10
  %178 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 5
  %181 = load i32, i32* %180, align 4
  %182 = call zeroext i1 @_ZN5blink32CrossOriginResourcePolicyChecker9IsBlockedERKN3url6OriginEN7network5mojom11RequestModeENS6_18RequestDestinationERKNS_8ResponseE(%"class.blink::CrossOriginResourcePolicyChecker"* %174, %"class.url::Origin"* nonnull dereferenceable(80) %15, i32 %179, i32 %181, %"class.blink::Response"* dereferenceable(56) %64) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %15) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %176) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %175) #10
  br i1 %182, label %183, label %188

183:                                              ; preds = %173
  %184 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %185 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %185, i64 3
  %187 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %186, align 8
  call void %187(%"class.blink::FetchRespondWithObserver"* %0, i32 15) #10
  br label %454

188:                                              ; preds = %159, %143, %173
  %189 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %65, align 8
  %190 = call %"class.blink::BodyStreamBuffer"* @_ZNK5blink17FetchResponseData14InternalBufferEv(%"class.blink::FetchResponseData"* %189) #10
  %191 = icmp eq %"class.blink::BodyStreamBuffer"* %190, null
  br i1 %191, label %437, label %192

192:                                              ; preds = %188
  %193 = call %"class.blink::BlobDataHandle"* @_ZN5blink16BodyStreamBuffer16TakeSideDataBlobEv(%"class.blink::BodyStreamBuffer"* nonnull %190) #10
  %194 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %145, align 8
  %195 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %194, i64 0, i32 15
  %196 = ptrtoint %"class.blink::BlobDataHandle"* %193 to i64
  %197 = bitcast %class.scoped_refptr.364* %195 to i64*
  %198 = getelementptr inbounds %class.scoped_refptr.364, %class.scoped_refptr.364* %195, i64 0, i32 0
  %199 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %198, align 8
  store i64 %196, i64* %197, align 8
  %200 = icmp eq %"class.blink::BlobDataHandle"* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw sub i32* %202, i32 1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %207

205:                                              ; preds = %201
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %199) #10
  %206 = bitcast %"class.blink::BlobDataHandle"* %199 to i8*
  call void @free(i8* %206) #10
  br label %207

207:                                              ; preds = %192, %201, %205
  %208 = bitcast %"class.blink::ExceptionState"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %208) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 -86, i64 56, i1 false)
  %209 = load i64, i64* %23, align 8
  %210 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %211 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 1, i32 0
  store i16 %3, i16* %211, align 8
  %212 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 1, i32 1
  store i16 0, i16* %212, align 2
  %213 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 1, i32 2
  store i8* %4, i8** %213, align 8
  %214 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 1, i32 3
  store i8* %5, i8** %214, align 8
  %215 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %215, align 8
  %216 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 3
  %217 = bitcast %"class.v8::Isolate"** %216 to i64*
  store i64 %209, i64* %217, align 8
  %218 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 4
  store i32 0, i32* %218, align 8
  %219 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 5, i32 0, i32 0
  %220 = bitcast %"class.WTF::StringImpl"** %219 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 16, i1 false) #10
  %221 = call %"class.blink::BlobDataHandle"* @_ZN5blink16BodyStreamBuffer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::BodyStreamBuffer"* nonnull %190, i32 1) #10
  %222 = icmp eq %"class.blink::BlobDataHandle"* %221, null
  br i1 %222, label %258, label %223

223:                                              ; preds = %207
  %224 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = atomicrmw add i32* %224, i32 1 monotonic
  %226 = icmp sgt i32 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %223
  %228 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0)) #10
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #10
  br label %230

230:                                              ; preds = %223, %227
  %231 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %145, align 8
  %232 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %231, i64 0, i32 10
  %233 = ptrtoint %"class.blink::BlobDataHandle"* %221 to i64
  %234 = bitcast %class.scoped_refptr.364* %232 to i64*
  %235 = getelementptr inbounds %class.scoped_refptr.364, %class.scoped_refptr.364* %232, i64 0, i32 0
  %236 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %235, align 8
  store i64 %233, i64* %234, align 8
  %237 = icmp eq %"class.blink::BlobDataHandle"* %236, null
  br i1 %237, label %244, label %238

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw sub i32* %239, i32 1 acq_rel
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %236) #10
  %243 = bitcast %"class.blink::BlobDataHandle"* %236 to i8*
  call void @free(i8* %243) #10
  br label %244

244:                                              ; preds = %230, %238, %242
  %245 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = bitcast %"class.mojo::StructPtr.633"* %18 to i64*
  %248 = getelementptr inbounds %"class.mojo::StructPtr.633", %"class.mojo::StructPtr.633"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = bitcast %"class.mojo::StructPtr.633"* %12 to i64*
  %250 = load i64, i64* %249, align 8
  store i64 %250, i64* %247, align 8
  store i64 0, i64* %249, align 8
  %251 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  call void @_ZN5blink24ServiceWorkerGlobalScope19RespondToFetchEventEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEEN4base9TimeTicksESB_(%"class.blink::ServiceWorkerGlobalScope"* %152, i32 %246, %"class.blink::KURL"* dereferenceable(112) %146, %"class.mojo::StructPtr.633"* nonnull %18, i64 %252, i64 %253) #10
  %254 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %248, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %248, align 8
  %255 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %254, null
  br i1 %255, label %400, label %256

256:                                              ; preds = %244
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %254) #10
  %257 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %254 to i8*
  call void @_ZdlPv(i8* %257) #11
  br label %400

258:                                              ; preds = %207
  %259 = call %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* @_ZN5blink24ServiceWorkerGlobalScope20CreateStayAwakeTokenEv(%"class.blink::ServiceWorkerGlobalScope"* %152) #10
  %260 = ptrtoint %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %259 to i64
  %261 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %262 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %261, i64 0, i32 1
  %263 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %262) #10
  %264 = icmp eq i8* %263, null
  br i1 %264, label %265, label %267, !prof !2

265:                                              ; preds = %258
  %266 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %262, i8* %266) #10
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i8* [ %266, %265 ], [ %263, %258 ]
  %269 = bitcast i8* %268 to %"class.blink::ThreadState"**
  %270 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %270, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %271, align 8
  %273 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %267
  %276 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %277 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %276, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %278

278:                                              ; preds = %275, %267
  %279 = phi i32 [ %273, %267 ], [ %277, %275 ]
  %280 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %272, i64 0, i32 19, i64 2
  %281 = bitcast %"class.blink::BaseArena"** %280 to %"class.blink::NormalPageArena"**
  %282 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %282, i64 0, i32 4
  %284 = load i64, i64* %283, align 8
  %285 = icmp ult i64 %284, 104
  br i1 %285, label %316, label %286, !prof !2

286:                                              ; preds = %278
  %287 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %282, i64 0, i32 3
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 104
  store i8* %289, i8** %287, align 8
  %290 = add i64 %284, -104
  store i64 %290, i64* %283, align 8
  %291 = bitcast i8* %288 to i32*
  store i32 0, i32* %291, align 4
  %292 = getelementptr inbounds i8, i8* %288, i64 4
  %293 = bitcast i8* %292 to i16*
  %294 = trunc i32 %279 to i16
  %295 = shl i16 %294, 2
  store atomic i16 %295, i16* %293 monotonic, align 2
  %296 = getelementptr inbounds i8, i8* %288, i64 6
  %297 = bitcast i8* %296 to i16*
  store i16 52, i16* %297, align 2
  %298 = ptrtoint i8* %288 to i64
  %299 = and i64 %298, -131072
  %300 = inttoptr i64 %299 to i8*
  %301 = getelementptr inbounds i8, i8* %300, i64 4400
  %302 = bitcast i8* %301 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %303 = bitcast i8* %301 to i64*
  %304 = load i64, i64* %303, align 16
  %305 = sub i64 %298, %304
  %306 = lshr i64 %305, 3
  %307 = lshr i64 %305, 6
  %308 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %302, i64 0, i32 0, i32 1, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = trunc i64 %306 to i32
  %311 = and i32 %310, 7
  %312 = shl i32 1, %311
  %313 = trunc i32 %312 to i8
  %314 = or i8 %309, %313
  store atomic i8 %314, i8* %308 release, align 1
  %315 = getelementptr inbounds i8, i8* %288, i64 8
  br label %319

316:                                              ; preds = %278
  %317 = zext i32 %279 to i64
  %318 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %282, i64 104, i64 %317) #10
  br label %319

319:                                              ; preds = %316, %286
  %320 = phi i8* [ %315, %286 ], [ %318, %316 ]
  %321 = bitcast i8* %320 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117FetchLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %321, align 8
  %322 = getelementptr inbounds i8, i8* %320, i64 8
  %323 = bitcast i8* %322 to i32*
  store i32 0, i32* %323, align 4
  %324 = getelementptr inbounds i8, i8* %320, i64 16
  %325 = bitcast i8* %324 to %"struct.mojo::internal::PendingReceiverState"*
  call void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"* %325) #10
  %326 = getelementptr inbounds i8, i8* %320, i64 40
  %327 = bitcast i8* %326 to %"class.mojo::Remote.1596"*
  %328 = bitcast i8* %326 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %328) #10
  %329 = getelementptr inbounds i8, i8* %320, i64 80
  %330 = bitcast i8* %329 to i64*
  store i64 0, i64* %330, align 8
  %331 = getelementptr inbounds i8, i8* %320, i64 88
  %332 = bitcast i8* %331 to i64*
  store i64 %260, i64* %332, align 8
  %333 = bitcast %"class.mojo::PendingReceiver.1595"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #10
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver.1595"* nonnull sret %9, %"class.mojo::Remote.1596"* %327, %"class.base::SequencedTaskRunner"* null) #10
  %334 = getelementptr inbounds %"class.mojo::PendingReceiver.1595", %"class.mojo::PendingReceiver.1595"* %9, i64 0, i32 0
  %335 = call dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"* %325, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %334) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %334) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #10
  %336 = getelementptr inbounds i8, i8* %320, i64 -4
  %337 = bitcast i8* %336 to i16*
  %338 = load atomic i16, i16* %337 monotonic, align 2
  %339 = or i16 %338, 1
  store atomic i16 %339, i16* %337 release, align 2
  %340 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 10, i32 0
  %341 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %340, align 8
  %342 = icmp eq %"class.base::SingleThreadTaskRunner"* %341, null
  br i1 %342, label %346, label %343

343:                                              ; preds = %319
  %344 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %341, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = atomicrmw add i32* %344, i32 1 monotonic
  br label %346

346:                                              ; preds = %319, %343
  %347 = call %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader22CreateLoaderAsDataPipeE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"* %341) #10
  %348 = bitcast i8* %320 to %"class.blink::FetchDataLoader::Client"*
  call void @_ZN5blink16BodyStreamBuffer12StartLoadingEPNS_15FetchDataLoaderEPNS1_6ClientERNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"* nonnull %190, %"class.blink::FetchDataLoader"* %347, %"class.blink::FetchDataLoader::Client"* %348, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %17) #10
  %349 = load i32, i32* %218, align 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %356, label %351

351:                                              ; preds = %346
  %352 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %353 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %353, i64 3
  %355 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %354, align 8
  call void %355(%"class.blink::FetchRespondWithObserver"* %0, i32 14) #10
  br label %407

356:                                              ; preds = %346
  %357 = load i32, i32* %323, align 4, !noalias !6
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %371, label %359

359:                                              ; preds = %356
  %360 = bitcast %"class.mojo::ScopedHandleBase.451"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %360) #10, !noalias !9
  %361 = bitcast %"class.mojo::PendingReceiver.1595"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #10, !noalias !9
  %362 = call i8* @_Znwm(i64 32) #11, !noalias !9
  %363 = bitcast i8* %362 to %"class.blink::mojom::blink::ServiceWorkerStreamHandle"*
  %364 = getelementptr inbounds %"class.mojo::ScopedHandleBase.451", %"class.mojo::ScopedHandleBase.451"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 %357, i32* %364, align 4, !alias.scope !12, !noalias !9
  store i32 0, i32* %323, align 4, !noalias !15
  %365 = getelementptr inbounds %"class.mojo::PendingReceiver.1595", %"class.mojo::PendingReceiver.1595"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %365, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %325) #10, !noalias !9
  call void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleC1EN4mojo16ScopedHandleBaseINS3_22DataPipeConsumerHandleEEENS3_15PendingReceiverINS1_27ServiceWorkerStreamCallbackEEE(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"* nonnull %363, %"class.mojo::ScopedHandleBase.451"* nonnull %7, %"class.mojo::PendingReceiver.1595"* nonnull %8) #10, !noalias !9
  %366 = ptrtoint i8* %362 to i64
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %365) #10, !noalias !9
  %367 = load i32, i32* %364, align 4, !noalias !9
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %376, label %369

369:                                              ; preds = %359
  %370 = call i32 @MojoClose(i32 %367) #10, !noalias !9
  br label %376

371:                                              ; preds = %356
  %372 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %373 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %372, align 8
  %374 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %373, i64 3
  %375 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %374, align 8
  call void %375(%"class.blink::FetchRespondWithObserver"* %0, i32 12) #10
  br label %407

376:                                              ; preds = %369, %359
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %360) #10, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #10, !noalias !9
  %377 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = bitcast %"class.mojo::StructPtr.633"* %19 to i64*
  %380 = getelementptr inbounds %"class.mojo::StructPtr.633", %"class.mojo::StructPtr.633"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %381 = bitcast %"class.mojo::StructPtr.633"* %12 to i64*
  %382 = load i64, i64* %381, align 8
  store i64 %382, i64* %379, align 8
  store i64 0, i64* %381, align 8
  %383 = bitcast %"class.mojo::StructPtr.1611"* %20 to i64*
  %384 = getelementptr inbounds %"class.mojo::StructPtr.1611", %"class.mojo::StructPtr.1611"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %366, i64* %383, align 8
  %385 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %386 = load i64, i64* %385, align 8
  %387 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  call void @_ZN5blink24ServiceWorkerGlobalScope37RespondToFetchEventWithResponseStreamEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEENS5_INS7_25ServiceWorkerStreamHandleEEEN4base9TimeTicksESD_(%"class.blink::ServiceWorkerGlobalScope"* %152, i32 %378, %"class.blink::KURL"* dereferenceable(112) %146, %"class.mojo::StructPtr.633"* nonnull %19, %"class.mojo::StructPtr.1611"* nonnull %20, i64 %386, i64 %387) #10
  %388 = load %"class.blink::mojom::blink::ServiceWorkerStreamHandle"*, %"class.blink::mojom::blink::ServiceWorkerStreamHandle"** %384, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* null, %"class.blink::mojom::blink::ServiceWorkerStreamHandle"** %384, align 8
  %389 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* %388, null
  br i1 %389, label %392, label %390

390:                                              ; preds = %376
  call void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleD1Ev(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"* nonnull %388) #10
  %391 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* %388 to i8*
  call void @_ZdlPv(i8* %391) #11
  br label %392

392:                                              ; preds = %376, %390
  %393 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %380, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %380, align 8
  %394 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %393, null
  br i1 %394, label %397, label %395

395:                                              ; preds = %392
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %393) #10
  %396 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %393 to i8*
  call void @_ZdlPv(i8* %396) #11
  br label %397

397:                                              ; preds = %392, %395
  %398 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %399 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %398, align 8
  call void @_ZN5blink10FetchEvent21ResolveHandledPromiseEv(%"class.blink::FetchEvent"* %399) #10
  br label %407

400:                                              ; preds = %244, %256
  %401 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %402 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %401, align 8
  call void @_ZN5blink10FetchEvent21ResolveHandledPromiseEv(%"class.blink::FetchEvent"* %402) #10
  %403 = atomicrmw sub i32* %224, i32 1 acq_rel
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %407

405:                                              ; preds = %400
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %221) #10
  %406 = bitcast %"class.blink::BlobDataHandle"* %221 to i8*
  call void @free(i8* %406) #10
  br label %407

407:                                              ; preds = %397, %371, %351, %400, %405
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %408 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %17, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %409 = load i64*, i64** %408, align 8
  %410 = icmp eq i64* %409, null
  br i1 %410, label %420, label %411

411:                                              ; preds = %407
  %412 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %216, align 8
  %413 = bitcast %"class.v8::Isolate"* %412 to %"class.v8::internal::Isolate"*
  %414 = load i64, i64* %409, align 8
  %415 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %413, i64 %414) #10
  %416 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %412) #10
  br i1 %416, label %420, label %417

417:                                              ; preds = %411
  %418 = bitcast i64* %415 to %"class.v8::Value"*
  %419 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %412, %"class.v8::Value"* %418) #10
  br label %420

420:                                              ; preds = %417, %411, %407
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #10
  br label %436

436:                                              ; preds = %420, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %208) #10
  br label %454

437:                                              ; preds = %188
  %438 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 1
  %439 = load i32, i32* %438, align 8
  %440 = bitcast %"class.mojo::StructPtr.633"* %21 to i64*
  %441 = getelementptr inbounds %"class.mojo::StructPtr.633", %"class.mojo::StructPtr.633"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %442 = bitcast %"class.mojo::StructPtr.633"* %12 to i64*
  %443 = load i64, i64* %442, align 8
  store i64 %443, i64* %440, align 8
  store i64 0, i64* %442, align 8
  %444 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %445 = load i64, i64* %444, align 8
  %446 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  call void @_ZN5blink24ServiceWorkerGlobalScope19RespondToFetchEventEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEEN4base9TimeTicksESB_(%"class.blink::ServiceWorkerGlobalScope"* %152, i32 %439, %"class.blink::KURL"* dereferenceable(112) %146, %"class.mojo::StructPtr.633"* nonnull %21, i64 %445, i64 %446) #10
  %447 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %441, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %441, align 8
  %448 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %447, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %437
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %447) #10
  %450 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %447 to i8*
  call void @_ZdlPv(i8* %450) #11
  br label %451

451:                                              ; preds = %437, %449
  %452 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %453 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %452, align 8
  call void @_ZN5blink10FetchEvent21ResolveHandledPromiseEv(%"class.blink::FetchEvent"* %453) #10
  br label %454

454:                                              ; preds = %436, %451, %183
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %153) #10
  %455 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %145, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %145, align 8
  %456 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %455, null
  br i1 %456, label %459, label %457

457:                                              ; preds = %454
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %455) #10
  %458 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %455 to i8*
  call void @_ZdlPv(i8* %458) #11
  br label %459

459:                                              ; preds = %454, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #10
  br label %460

460:                                              ; preds = %69, %78, %87, %99, %113, %123, %131, %138, %459, %29
  ret void
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8Response10redirectedEv(%"class.blink::Response"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8Response10IsBodyUsedEv(%"class.blink::Response"*) unnamed_addr #2

declare void @_ZN5blink8Response24PopulateFetchAPIResponseERKNS_4KURLE(%"class.mojo::StructPtr.633"* sret, %"class.blink::Response"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"*) unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZN5blink32CrossOriginResourcePolicyChecker9IsBlockedERKN3url6OriginEN7network5mojom11RequestModeENS6_18RequestDestinationERKNS_8ResponseE(%"class.blink::CrossOriginResourcePolicyChecker"*, %"class.url::Origin"* dereferenceable(80), i32, i32, %"class.blink::Response"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare %"class.blink::BlobDataHandle"* @_ZN5blink16BodyStreamBuffer16TakeSideDataBlobEv(%"class.blink::BodyStreamBuffer"*) local_unnamed_addr #2

declare %"class.blink::BlobDataHandle"* @_ZN5blink16BodyStreamBuffer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::BodyStreamBuffer"*, i32) local_unnamed_addr #2

declare void @_ZN5blink10FetchEvent21ResolveHandledPromiseEv(%"class.blink::FetchEvent"*) local_unnamed_addr #2

declare %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* @_ZN5blink24ServiceWorkerGlobalScope20CreateStayAwakeTokenEv(%"class.blink::ServiceWorkerGlobalScope"*) local_unnamed_addr #2

declare void @_ZN5blink16BodyStreamBuffer12StartLoadingEPNS_15FetchDataLoaderEPNS1_6ClientERNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"*, %"class.blink::FetchDataLoader"*, %"class.blink::FetchDataLoader::Client"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader22CreateLoaderAsDataPipeE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #2

declare void @_ZN5blink24ServiceWorkerGlobalScope37RespondToFetchEventWithResponseStreamEiRKNS_4KURLEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEENS5_INS7_25ServiceWorkerStreamHandleEEEN4base9TimeTicksESD_(%"class.blink::ServiceWorkerGlobalScope"*, i32, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::StructPtr.633"*, %"class.mojo::StructPtr.1611"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24FetchRespondWithObserver12OnNoResponseEv(%"class.blink::FetchRespondWithObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %2, align 8
  %4 = icmp eq %"class.blink::ReadableStream"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ReadableStream", %"class.blink::ReadableStream"* %3, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ReadableStreamGenericReader"*, %"class.blink::ReadableStreamGenericReader"** %6, align 8
  %8 = icmp eq %"class.blink::ReadableStreamGenericReader"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ReadableStream", %"class.blink::ReadableStream"* %3, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !16
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %14) #10
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 0, i32 3
  %17 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* %16, i32 3774) #10
  %21 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 8
  %22 = load i8, i8* %21, align 8, !range !16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::FetchRespondWithObserver"* %0 to void (%"class.blink::FetchRespondWithObserver"*, i32)***
  %26 = load void (%"class.blink::FetchRespondWithObserver"*, i32)**, void (%"class.blink::FetchRespondWithObserver"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %26, i64 3
  %28 = load void (%"class.blink::FetchRespondWithObserver"*, i32)*, void (%"class.blink::FetchRespondWithObserver"*, i32)** %27, align 8
  tail call void %28(%"class.blink::FetchRespondWithObserver"* %0, i32 16) #10
  br label %44

29:                                               ; preds = %9, %1, %13
  %30 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0
  %31 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %30) #10
  %32 = icmp eq %"class.blink::ExecutionContext"* %31, null
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %31, i64 -1, i32 22
  %34 = bitcast %"class.blink::DOMTimerCoordinator"* %33 to %"class.blink::ServiceWorkerGlobalScope"*
  %35 = select i1 %32, %"class.blink::ServiceWorkerGlobalScope"* null, %"class.blink::ServiceWorkerGlobalScope"* %34
  %36 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN5blink24ServiceWorkerGlobalScope33RespondToFetchEventWithNoResponseEiRKNS_4KURLEN4base9TimeTicksES5_(%"class.blink::ServiceWorkerGlobalScope"* %35, i32 %37, %"class.blink::KURL"* dereferenceable(112) %38, i64 %40, i64 %41) #10
  %42 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %43 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %42, align 8
  tail call void @_ZN5blink10FetchEvent21ResolveHandledPromiseEv(%"class.blink::FetchEvent"* %43) #10
  br label %44

44:                                               ; preds = %29, %24
  ret void
}

declare void @_ZN5blink24ServiceWorkerGlobalScope33RespondToFetchEventWithNoResponseEiRKNS_4KURLEN4base9TimeTicksES5_(%"class.blink::ServiceWorkerGlobalScope"*, i32, %"class.blink::KURL"* dereferenceable(112), i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24FetchRespondWithObserver8SetEventEPNS_10FetchEventE(%"class.blink::FetchRespondWithObserver"* nocapture, %"class.blink::FetchEvent"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6
  %4 = ptrtoint %"class.blink::FetchEvent"* %1 to i64
  %5 = bitcast %"class.blink::Member.3"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::FetchEvent"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  %11 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.blink::FetchEvent"*, %"class.blink::FetchEvent"** %11, align 8
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %"class.blink::FetchEvent"* [ %1, %2 ], [ %12, %8 ]
  %15 = tail call %"class.blink::Request"* @_ZNK5blink10FetchEvent7requestEv(%"class.blink::FetchEvent"* %14) #10
  %16 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %17, i64 0, i32 15, i32 0, i32 0
  %19 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %18, align 8
  %20 = icmp eq %"class.blink::BodyStreamBuffer"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::BodyStreamBuffer", %"class.blink::BodyStreamBuffer"* %19, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 7
  %25 = ptrtoint %"class.blink::ReadableStream"* %23 to i64
  %26 = bitcast %"class.blink::Member.295"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::ReadableStream"* %23 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %29, %21, %13
  ret void
}

declare %"class.blink::Request"* @_ZNK5blink10FetchEvent7requestEv(%"class.blink::FetchEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24FetchRespondWithObserverC2EPNS_16ExecutionContextEiN4base7WeakPtrINS_32CrossOriginResourcePolicyCheckerEEERKNS_5mojom5blink15FetchAPIRequestEPNS_17WaitUntilObserverE(%"class.blink::FetchRespondWithObserver"*, %"class.blink::ExecutionContext"*, i32, %"class.base::WeakPtr"*, %"class.blink::mojom::blink::FetchAPIRequest"* dereferenceable(264), %"class.blink::WaitUntilObserver"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0
  tail call void @_ZN5blink19RespondWithObserverC2EPNS_16ExecutionContextEiPNS_17WaitUntilObserverE(%"class.blink::RespondWithObserver"* %7, %"class.blink::ExecutionContext"* %1, i32 %2, %"class.blink::WaitUntilObserver"* %5) #10
  %8 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink24FetchRespondWithObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 4
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %9, %"class.blink::KURL"* dereferenceable(112) %10) #10
  %11 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 12
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 8
  %25 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %4, i64 0, i32 8, i32 0, i32 0
  %26 = bitcast %"class.blink::FetchEvent"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  %27 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %25, align 8
  %28 = icmp ne %"class.blink::EncodedFormData"* %27, null
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %24, align 8
  %30 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0, i32 0
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %30, %"class.base::internal::WeakReference"* dereferenceable(8) %31) #10
  %32 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1
  %36 = bitcast %"class.blink::MojoBindingContext"* %35 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %37 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %36, align 8
  %38 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %37, i64 6
  %39 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %38, align 8
  %40 = tail call %"class.base::SingleThreadTaskRunner"* %39(%"class.blink::MojoBindingContext"* %35, i8 zeroext 3) #10
  %41 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 10, i32 0
  store %"class.base::SingleThreadTaskRunner"* %40, %"class.base::SingleThreadTaskRunner"** %41, align 8
  ret void
}

declare void @_ZN5blink19RespondWithObserverC2EPNS_16ExecutionContextEiPNS_17WaitUntilObserverE(%"class.blink::RespondWithObserver"*, %"class.blink::ExecutionContext"*, i32, %"class.blink::WaitUntilObserver"*) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24FetchRespondWithObserver5TraceEPNS_7VisitorE(%"class.blink::FetchRespondWithObserver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member.3"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10FetchEventEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::Member.295"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0
  tail call void @_ZNK5blink19RespondWithObserver5TraceEPNS_7VisitorE(%"class.blink::RespondWithObserver"* %25, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink19RespondWithObserver5TraceEPNS_7VisitorE(%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24FetchRespondWithObserverD2Ev(%"class.blink::FetchRespondWithObserver"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink24FetchRespondWithObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.450"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #10
  %16 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24FetchRespondWithObserverD0Ev(%"class.blink::FetchRespondWithObserver"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink24FetchRespondWithObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.450"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #10
  %16 = getelementptr inbounds %"class.blink::FetchRespondWithObserver", %"class.blink::FetchRespondWithObserver"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1711"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.1711"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1710"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1712", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1712", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1711"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #10
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %6, i8* %16) #10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1710"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #10
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #10
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1711"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #10
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i8* %45) #10
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1713"* nonnull %46, i8* %25) #10
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i8* %49) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #10
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #10
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1710"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #10
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.1712"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #10
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.1712"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1711"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #10
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i8* %105) #10
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1713"* nonnull %106, i16* %85) #10
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i16* %109) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #10
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #10
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1711", %"class.WTF::StringTypeAdapter.1711"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1709"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1709"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1712", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1711"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1711"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1711"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1711", %"class.WTF::StringTypeAdapter.1711"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1713"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1709"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1712", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1711"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1711"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1711"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1711", %"class.WTF::StringTypeAdapter.1711"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1712"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1711"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1712", %"class.WTF::StringTypeAdapter.1712"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1713"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1709"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1711"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1709"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1711", %"class.WTF::StringTypeAdapter.1711"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1709", %"class.WTF::StringAppend.1709"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1709", %"class.WTF::StringAppend.1709"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1711"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1713"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1711"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1713"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1710"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1711", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1711", %"class.WTF::StringTypeAdapter.1711"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1710", %"class.WTF::StringAppend.1710"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1711"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1711"* nonnull %4, i8* %21) #10
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret i32 %23
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.blink::BodyStreamBuffer"* @_ZNK5blink17FetchResponseData14InternalBufferEv(%"class.blink::FetchResponseData"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleC1EN4mojo16ScopedHandleBaseINS3_22DataPipeConsumerHandleEEENS3_15PendingReceiverINS1_27ServiceWorkerStreamCallbackEEE(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"*, %"class.mojo::ScopedHandleBase.451"*, %"class.mojo::PendingReceiver.1595"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleD1Ev(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"*) unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*) unnamed_addr #3

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare void @_ZN5blink5mojom5blink16FetchAPIResponseC1Ev(%"class.blink::mojom::blink::FetchAPIResponse"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_117FetchLoaderClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"* nocapture, i8* nocapture) #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_117FetchLoaderClientEE8FinalizeEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117FetchLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 88
  %4 = bitcast i8* %3 to %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"**
  %5 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %4, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %4, align 8
  %6 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %5) #10
  %8 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds i8, i8* %0, i64 40
  %11 = getelementptr inbounds i8, i8* %0, i64 80
  %12 = bitcast i8* %11 to %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"**
  %13 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %12, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* null, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %12, align 8
  %14 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %13 to void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)***
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)**, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %17, i64 1
  %19 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %18, align 8
  tail call void %19(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %13) #10
  br label %20

20:                                               ; preds = %15, %9
  %21 = bitcast i8* %10 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %21) #10
  %22 = getelementptr inbounds i8, i8* %0, i64 16
  %23 = bitcast i8* %22 to %"struct.mojo::internal::PendingReceiverState"*
  tail call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* %23) #10
  %24 = getelementptr inbounds i8, i8* %0, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = tail call i32 @MojoClose(i32 %26) #10
  br label %30

30:                                               ; preds = %20, %28
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_117FetchLoaderClientEE7GetNameEPKv(i8* nocapture readnone) #9 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i8 1 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_117FetchLoaderClient5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchLoaderClient"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClientD2Ev(%"class.blink::(anonymous namespace)::FetchLoaderClient"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117FetchLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %3, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %3, align 8
  %5 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %4) #10
  %7 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %10, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* null, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %10, align 8
  %12 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %11 to void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)**, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %15, i64 1
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %16, align 8
  tail call void %17(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %11) #10
  br label %18

18:                                               ; preds = %8, %13
  %19 = bitcast %"class.mojo::Remote.1596"* %9 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* %20) #10
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = tail call i32 @MojoClose(i32 %22) #10
  br label %26

26:                                               ; preds = %18, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClientD0Ev(%"class.blink::(anonymous namespace)::FetchLoaderClient"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117FetchLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %3, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %3, align 8
  %5 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %4) #10
  %7 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %10, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* null, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %10, align 8
  %12 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %11 to void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)**, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %15, i64 1
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %16, align 8
  tail call void %17(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %11) #10
  br label %18

18:                                               ; preds = %13, %8
  %19 = bitcast %"class.mojo::Remote.1596"* %9 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* %20) #10
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = tail call i32 @MojoClose(i32 %22) #10
  br label %26

26:                                               ; preds = %18, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #10
  %9 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %9) #10
  br label %10

10:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE(%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClient27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE(%"class.blink::(anonymous namespace)::FetchLoaderClient"*, %"class.mojo::ScopedHandleBase.451"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 1
  %4 = icmp eq %"class.mojo::ScopedHandleBase.451"* %3, %1
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.mojo::ScopedHandleBase.451", %"class.mojo::ScopedHandleBase.451"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @MojoClose(i32 %7) #10
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.mojo::ScopedHandleBase.451", %"class.mojo::ScopedHandleBase.451"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !17
  store i32 0, i32* %12, align 4, !noalias !17
  store i32 %13, i32* %6, align 4
  br label %14

14:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClient26DidFetchDataLoadedDataPipeEv(%"class.blink::(anonymous namespace)::FetchLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.1597"* %2) #10
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxy11OnCompletedEv(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %4) #10
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  %7 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %6) #10
  %9 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv(%"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClient22DidFetchDataLoadFailedEv(%"class.blink::(anonymous namespace)::FetchLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.1597"* %2) #10
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxy9OnAbortedEv(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %4) #10
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  %7 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %6) #10
  %9 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117FetchLoaderClient5AbortEv(%"class.blink::(anonymous namespace)::FetchLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.1597"* %2) #10
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxy9OnAbortedEv(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %4) #10
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchLoaderClient", %"class.blink::(anonymous namespace)::FetchLoaderClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  store %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* null, %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"** %5, align 8
  %7 = icmp eq %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %6) #10
  %9 = bitcast %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxy11OnCompletedEv(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.1597"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1597", %"class.mojo::internal::InterfacePtrState.1597"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1598", %"class.std::__1::unique_ptr.1598"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState.1597"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #11
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #10
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink27ServiceWorkerStreamCallback5Name_E, i64 0, i64 0)) #10
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1597", %"class.mojo::internal::InterfacePtrState.1597"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #11
  %17 = bitcast i8* %16 to %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*
  tail call void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #10
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.1598"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %19 to void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)***
  %24 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)**, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %24, i64 1
  %26 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %25, align 8
  tail call void %26(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %19) #10
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink32ServiceWorkerStreamCallbackProxy9OnAbortedEv(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*) unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver.1595"* noalias sret, %"class.mojo::Remote.1596"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote.1842", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #10
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.1842", %"class.mojo::PendingRemote.1842"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !20
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #10
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #10
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.1596"* %1, %"class.mojo::PendingRemote.1842"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #10
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver.1595", %"class.mojo::PendingReceiver.1595"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !23
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #10
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #10
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.1596"*, %"class.mojo::PendingRemote.1842"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState.1597", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.1842", %"class.mojo::PendingRemote.1842"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.1597"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #10
  %10 = bitcast %"class.mojo::internal::InterfacePtrState.1597"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1597", %"class.mojo::internal::InterfacePtrState.1597"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.1598"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote.1596", %"class.mojo::Remote.1596"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.1598"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote.1596"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1597", %"class.mojo::internal::InterfacePtrState.1597"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %17, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* null, %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* %18 to void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)**, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)*, void (%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::ServiceWorkerStreamCallbackProxy"* nonnull %18) #10
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote.1596", %"class.mojo::Remote.1596"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote.1842", %"class.mojo::PendingRemote.1842"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote.1596"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #10
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink27ServiceWorkerStreamCallbackEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState.1597"* %26) #10
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.450", %"class.base::RefCountedThreadSafe.450"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.450"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #10
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10FetchEventEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchEvent"*
  tail call void @_ZNK5blink10FetchEvent5TraceEPNS_7VisitorE(%"class.blink::FetchEvent"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink10FetchEvent5TraceEPNS_7VisitorE(%"class.blink::FetchEvent"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ReadableStreamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ReadableStream"*
  %4 = bitcast i8* %1 to void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)**, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStream"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ReadableStream"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom5blink16FetchAPIResponse3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom5blink16FetchAPIResponse3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink12_GLOBAL__N_117FetchLoaderClient18CreateStreamHandleEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink12_GLOBAL__N_117FetchLoaderClient18CreateStreamHandleEv"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN5blink5mojom5blink25ServiceWorkerStreamHandle3NewIJN4mojo16ScopedHandleBaseINS4_22DataPipeConsumerHandleEEENS4_15PendingReceiverINS1_27ServiceWorkerStreamCallbackEEEEEENS4_9StructPtrIS2_EEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink5mojom5blink25ServiceWorkerStreamHandle3NewIJN4mojo16ScopedHandleBaseINS4_22DataPipeConsumerHandleEEENS4_15PendingReceiverINS1_27ServiceWorkerStreamCallbackEEEEEENS4_9StructPtrIS2_EEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!14 = distinct !{!14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!15 = !{!13, !10, !7}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!19 = distinct !{!19, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!22 = distinct !{!22, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!25 = distinct !{!25, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
