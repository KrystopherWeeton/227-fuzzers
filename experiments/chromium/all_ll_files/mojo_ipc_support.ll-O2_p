; ModuleID = '../../content/app/mojo_ipc_support.cc'
source_filename = "../../content/app/mojo_ipc_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.content::MojoIpcSupport" = type { %"class.std::__1::unique_ptr", %"class.base::Thread", %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::BrowserProcessIOThread"* }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.4", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.mojo::core::ScopedIPCSupport"* }
%"class.mojo::core::ScopedIPCSupport" = type { i32 }
%"class.content::BrowserProcessIOThread" = type { %"class.base::Thread.base", i8, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19" }
%"class.base::Thread.base" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.4", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.content::BrowserThreadImpl"* }
%"class.content::BrowserThreadImpl" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.content::NotificationService"* }
%"class.content::NotificationService" = type opaque
%"struct.base::Thread::Options" = type <{ i32, [4 x i8], %"class.base::Thread::Delegate"*, i32, [4 x i8], %"class.base::sequence_manager::TimeDomain"*, %"class.base::RepeatingCallback", i64, i32, i8, i8, [2 x i8] }>
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.35" }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.35", [4 x i8] }>
%"struct.content::StartupDataImpl" = type { %"struct.content::StartupData", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.28" }
%"struct.content::StartupData" = type { i32 (...)** }

@_ZN8features20kMojoDedicatedThreadE = external global %"struct.base::Feature", align 8

@_ZN7content14MojoIpcSupportC1ENSt3__110unique_ptrINS_22BrowserProcessIOThreadENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.content::MojoIpcSupport"*, %"class.content::BrowserProcessIOThread"*), void (%"class.content::MojoIpcSupport"*, %"class.content::BrowserProcessIOThread"*)* @_ZN7content14MojoIpcSupportC2ENSt3__110unique_ptrINS_22BrowserProcessIOThreadENS1_14default_deleteIS3_EEEE
@_ZN7content14MojoIpcSupportD1Ev = hidden unnamed_addr alias void (%"class.content::MojoIpcSupport"*), void (%"class.content::MojoIpcSupport"*)* @_ZN7content14MojoIpcSupportD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14MojoIpcSupportC2ENSt3__110unique_ptrINS_22BrowserProcessIOThreadENS1_14default_deleteIS3_EEEE(%"class.content::MojoIpcSupport"*, %"class.content::BrowserProcessIOThread"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.base::Thread::Options", align 8
  %5 = ptrtoint %"class.content::BrowserProcessIOThread"* %1 to i64
  %6 = bitcast %"class.content::MojoIpcSupport"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 8, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  store i64 4850457202335051597, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to i8*
  store i8 0, i8* %13, align 8
  call void @_ZN4base6ThreadC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Thread"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #6
  %14 = load i8, i8* %10, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  %20 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::unique_ptr.28"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"class.content::MojoIpcSupport"* %0 to %"class.base::Thread"**
  %23 = load %"class.base::Thread"*, %"class.base::Thread"** %22, align 8
  %24 = getelementptr inbounds %"class.base::Thread", %"class.base::Thread"* %23, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %24, align 8
  %26 = icmp eq %"class.base::Thread::Delegate"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.base::Thread::Delegate"* %25 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %29 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %29, i64 2
  %31 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %30, align 8
  %32 = call %"class.base::SingleThreadTaskRunner"* %31(%"class.base::Thread::Delegate"* nonnull %25) #6
  br label %33

33:                                               ; preds = %19, %27
  %34 = phi %"class.base::SingleThreadTaskRunner"* [ %32, %27 ], [ null, %19 ]
  %35 = call zeroext i1 @_ZN7content30IsMojoCoreSharedLibraryEnabledEv() #6
  br i1 %35, label %79, label %36

36:                                               ; preds = %33
  %37 = ptrtoint %"class.base::SingleThreadTaskRunner"* %34 to i64
  %38 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features20kMojoDedicatedThreadE) #6
  br i1 %38, label %39, label %63

39:                                               ; preds = %36
  %40 = bitcast %"struct.base::Thread::Options"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #6
  call void @_ZN4base6Thread7OptionsC1ENS_15MessagePumpTypeEm(%"struct.base::Thread::Options"* nonnull %4, i32 3, i64 0) #6
  %41 = call zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"* %7, %"struct.base::Thread::Options"* nonnull dereferenceable(56) %4) #6
  call void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #6
  %42 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 1, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %42, align 8
  %44 = icmp eq %"class.base::Thread::Delegate"* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.base::Thread::Delegate"* %43 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %47 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %47, i64 2
  %49 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %48, align 8
  %50 = call %"class.base::SingleThreadTaskRunner"* %49(%"class.base::Thread::Delegate"* nonnull %43) #6
  %51 = ptrtoint %"class.base::SingleThreadTaskRunner"* %50 to i64
  br label %52

52:                                               ; preds = %39, %45
  %53 = phi i64 [ %51, %45 ], [ 0, %39 ]
  %54 = icmp eq %"class.base::SingleThreadTaskRunner"* %34, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %34, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe.35"* %61 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %62) #6
  br label %63

63:                                               ; preds = %60, %55, %52, %36
  %64 = phi i64 [ %37, %36 ], [ %53, %52 ], [ %53, %55 ], [ %53, %60 ]
  %65 = call i8* @_Znwm(i64 4) #7
  %66 = bitcast i8* %65 to %"class.mojo::core::ScopedIPCSupport"*
  %67 = inttoptr i64 %64 to %"class.base::SingleThreadTaskRunner"*
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 1 monotonic
  br label %72

72:                                               ; preds = %63, %69
  call void @_ZN4mojo4core16ScopedIPCSupportC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS1_14ShutdownPolicyE(%"class.mojo::core::ScopedIPCSupport"* nonnull %66, %"class.base::SingleThreadTaskRunner"* %67, i32 1) #6
  %73 = ptrtoint i8* %65 to i64
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %20, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.mojo::core::ScopedIPCSupport"*, %"class.mojo::core::ScopedIPCSupport"** %74, align 8
  store i64 %73, i64* %21, align 8
  %76 = icmp eq %"class.mojo::core::ScopedIPCSupport"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  call void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"* nonnull %75) #6
  %78 = bitcast %"class.mojo::core::ScopedIPCSupport"* %75 to i8*
  call void @_ZdlPv(i8* %78) #7
  br label %79

79:                                               ; preds = %72, %77, %33
  %80 = phi %"class.base::SingleThreadTaskRunner"* [ %34, %33 ], [ %67, %77 ], [ %67, %72 ]
  %81 = icmp eq %"class.base::SingleThreadTaskRunner"* %80, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %80, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe.35"* %88 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %89) #6
  br label %90

90:                                               ; preds = %87, %82, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base6ThreadC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Thread"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7content30IsMojoCoreSharedLibraryEnabledEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"*, %"struct.base::Thread::Options"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN4base6Thread7OptionsC1ENS_15MessagePumpTypeEm(%"struct.base::Thread::Options"*, i32, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14MojoIpcSupportD2Ev(%"class.content::MojoIpcSupport"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.mojo::core::ScopedIPCSupport"*, %"class.mojo::core::ScopedIPCSupport"** %2, align 8
  store %"class.mojo::core::ScopedIPCSupport"* null, %"class.mojo::core::ScopedIPCSupport"** %2, align 8
  %4 = icmp eq %"class.mojo::core::ScopedIPCSupport"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"* nonnull %3) #6
  %6 = bitcast %"class.mojo::core::ScopedIPCSupport"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 1
  tail call void @_ZN4base6ThreadD1Ev(%"class.base::Thread"* %8) #6
  %9 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.content::BrowserProcessIOThread"*, %"class.content::BrowserProcessIOThread"** %9, align 8
  store %"class.content::BrowserProcessIOThread"* null, %"class.content::BrowserProcessIOThread"** %9, align 8
  %11 = icmp eq %"class.content::BrowserProcessIOThread"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.content::BrowserProcessIOThread"* %10 to void (%"class.content::BrowserProcessIOThread"*)***
  %14 = load void (%"class.content::BrowserProcessIOThread"*)**, void (%"class.content::BrowserProcessIOThread"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %14, i64 3
  %16 = load void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %15, align 8
  tail call void %16(%"class.content::BrowserProcessIOThread"* nonnull %10) #6
  br label %17

17:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base6ThreadD1Ev(%"class.base::Thread"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.content::StartupDataImpl"* @_ZN7content14MojoIpcSupport24CreateBrowserStartupDataEv(%"class.content::MojoIpcSupport"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #7
  %3 = bitcast i8* %2 to %"struct.content::StartupDataImpl"*
  tail call void @_ZN7content15StartupDataImplC1Ev(%"struct.content::StartupDataImpl"* nonnull %3) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.content::MojoIpcSupport"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.content::BrowserProcessIOThread"* null, %"class.content::BrowserProcessIOThread"** %5, align 8
  %8 = bitcast i8* %4 to %"class.content::BrowserProcessIOThread"**
  %9 = load %"class.content::BrowserProcessIOThread"*, %"class.content::BrowserProcessIOThread"** %8, align 8
  %10 = bitcast i8* %4 to i64*
  store i64 %7, i64* %10, align 8
  %11 = icmp eq %"class.content::BrowserProcessIOThread"* %9, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.content::BrowserProcessIOThread"* %9 to void (%"class.content::BrowserProcessIOThread"*)***
  %14 = load void (%"class.content::BrowserProcessIOThread"*)**, void (%"class.content::BrowserProcessIOThread"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %14, i64 3
  %16 = load void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %15, align 8
  tail call void %16(%"class.content::BrowserProcessIOThread"* nonnull %9) #6
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.content::MojoIpcSupport", %"class.content::MojoIpcSupport"* %0, i64 0, i32 2
  %19 = getelementptr inbounds i8, i8* %2, i64 16
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.28"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.mojo::core::ScopedIPCSupport"* null, %"class.mojo::core::ScopedIPCSupport"** %20, align 8
  %23 = bitcast i8* %19 to %"class.mojo::core::ScopedIPCSupport"**
  %24 = load %"class.mojo::core::ScopedIPCSupport"*, %"class.mojo::core::ScopedIPCSupport"** %23, align 8
  %25 = bitcast i8* %19 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %"class.mojo::core::ScopedIPCSupport"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  tail call void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"* nonnull %24) #6
  %28 = bitcast %"class.mojo::core::ScopedIPCSupport"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %17, %27
  ret %"struct.content::StartupDataImpl"* %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"*) unnamed_addr #3

declare void @_ZN4mojo4core16ScopedIPCSupportC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS1_14ShutdownPolicyE(%"class.mojo::core::ScopedIPCSupport"*, %"class.base::SingleThreadTaskRunner"*, i32) unnamed_addr #2

declare void @_ZN7content15StartupDataImplC1Ev(%"struct.content::StartupDataImpl"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
