; ModuleID = '../../third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c'
source_filename = "../../third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.ASN1_VALUE_st = type opaque
%struct.pkcs8_priv_key_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ATTRIBUTE* }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st_X509_ATTRIBUTE = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.X509_sig_st = type opaque
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.stack_st_X509 = type opaque
%struct.pkcs12_context = type { %struct.evp_pkey_st**, %struct.stack_st_X509*, i8*, i64 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.env_md_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.pkcs12_st = type { i8*, i64 }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@PKCS8_PRIV_KEY_INFO_seq_tt = internal constant [4 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_INTEGER_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OCTET_STRING_it }, %struct.ASN1_TEMPLATE_st { i64 139, i64 0, i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ATTRIBUTE_it }], align 16
@PKCS8_PRIV_KEY_INFO_aux = internal constant %struct.ASN1_AUX_st { i8* null, i32 0, i32 0, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* @pkey_cb, i32 0 }, align 8
@.str = private unnamed_addr constant [20 x i8] c"PKCS8_PRIV_KEY_INFO\00", align 1
@PKCS8_PRIV_KEY_INFO_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([4 x %struct.ASN1_TEMPLATE_st], [4 x %struct.ASN1_TEMPLATE_st]* @PKCS8_PRIV_KEY_INFO_seq_tt, i32 0, i32 0), i64 4, i8* bitcast (%struct.ASN1_AUX_st* @PKCS8_PRIV_KEY_INFO_aux to i8*), i64 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [58 x i8] c"../../third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c\00", align 1
@kPKCS7Data = internal constant [9 x i8] c"*\86H\86\F7\0D\01\07\01", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@kKeyBag = internal constant [11 x i8] c"*\86H\86\F7\0D\01\0C\0A\01\01", align 1
@kPKCS8ShroudedKeyBag = internal constant [11 x i8] c"*\86H\86\F7\0D\01\0C\0A\01\02", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@ASN1_INTEGER_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"pkeyalg\00", align 1
@X509_ALGOR_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"pkey\00", align 1
@ASN1_OCTET_STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.10 = private unnamed_addr constant [11 x i8] c"attributes\00", align 1
@X509_ATTRIBUTE_it = external constant %struct.ASN1_ITEM_st, align 8
@kPKCS7EncryptedData = internal constant [9 x i8] c"*\86H\86\F7\0D\01\07\06", align 1
@kCertBag = internal constant [11 x i8] c"*\86H\86\F7\0D\01\0C\0A\01\03", align 1
@kX509Certificate = internal constant [10 x i8] c"*\86H\86\F7\0D\01\09\16\01", align 1
@kFriendlyName = internal constant [9 x i8] c"*\86H\86\F7\0D\01\09\14", align 1
@kLocalKeyID = internal constant [9 x i8] c"*\86H\86\F7\0D\01\09\15", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @pkcs12_iterations_acceptable(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, -1
  %3 = icmp ult i64 %2, 100000000
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st**, i8**, i64) local_unnamed_addr #1 {
  %4 = bitcast %struct.pkcs8_priv_key_info_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.pkcs8_priv_key_info_st*
  ret %struct.pkcs8_priv_key_info_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st*, i8**) local_unnamed_addr #1 {
  %3 = bitcast %struct.pkcs8_priv_key_info_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs8_priv_key_info_st* @PKCS8_PRIV_KEY_INFO_new() local_unnamed_addr #1 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.pkcs8_priv_key_info_st*
  ret %struct.pkcs8_priv_key_info_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @PKCS8_PRIV_KEY_INFO_free(%struct.pkcs8_priv_key_info_st*) local_unnamed_addr #1 {
  %2 = bitcast %struct.pkcs8_priv_key_info_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS8_pkey_set0(%struct.pkcs8_priv_key_info_st* nocapture readonly, %struct.asn1_object_st*, i32, i32, i8*, i8*, i32) local_unnamed_addr #1 {
  %8 = icmp sgt i32 %2, -1
  br i1 %8, label %9, label %15

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %0, i64 0, i32 0
  %11 = load %struct.asn1_string_st*, %struct.asn1_string_st** %10, align 8
  %12 = sext i32 %2 to i64
  %13 = tail call i32 @ASN1_INTEGER_set(%struct.asn1_string_st* %11, i64 %12) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %9, %7
  %16 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %0, i64 0, i32 1
  %17 = load %struct.X509_algor_st*, %struct.X509_algor_st** %16, align 8
  %18 = tail call i32 @X509_ALGOR_set0(%struct.X509_algor_st* %17, %struct.asn1_object_st* %1, i32 %3, i8* %4) #7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = icmp eq i8* %5, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %0, i64 0, i32 2
  %24 = load %struct.asn1_string_st*, %struct.asn1_string_st** %23, align 8
  tail call void @ASN1_STRING_set0(%struct.asn1_string_st* %24, i8* nonnull %5, i32 %6) #7
  br label %25

25:                                               ; preds = %22, %20, %15, %9
  %26 = phi i32 [ 0, %9 ], [ 0, %15 ], [ 1, %20 ], [ 1, %22 ]
  ret i32 %26
}

declare i32 @ASN1_INTEGER_set(%struct.asn1_string_st*, i64) local_unnamed_addr #2

declare i32 @X509_ALGOR_set0(%struct.X509_algor_st*, %struct.asn1_object_st*, i32, i8*) local_unnamed_addr #2

declare void @ASN1_STRING_set0(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS8_pkey_get0(%struct.asn1_object_st**, i8**, i32* nocapture, %struct.X509_algor_st**, %struct.pkcs8_priv_key_info_st* nocapture readonly) local_unnamed_addr #1 {
  %6 = icmp eq %struct.asn1_object_st** %0, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %4, i64 0, i32 1
  %9 = bitcast %struct.X509_algor_st** %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %struct.asn1_object_st** %0 to i64*
  store i64 %11, i64* %12, align 8
  br label %13

13:                                               ; preds = %5, %7
  %14 = icmp eq i8** %1, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %4, i64 0, i32 2
  %17 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  %18 = tail call i8* @ASN1_STRING_data(%struct.asn1_string_st* %17) #7
  store i8* %18, i8** %1, align 8
  %19 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  %20 = tail call i32 @ASN1_STRING_length(%struct.asn1_string_st* %19) #7
  store i32 %20, i32* %2, align 4
  br label %21

21:                                               ; preds = %13, %15
  %22 = icmp eq %struct.X509_algor_st** %3, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %4, i64 0, i32 1
  %25 = bitcast %struct.X509_algor_st** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.X509_algor_st** %3 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %21, %23
  ret i32 1
}

declare i8* @ASN1_STRING_data(%struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @ASN1_STRING_length(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st*) local_unnamed_addr #1 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  store i8* null, i8** %2, align 8
  %5 = bitcast %struct.pkcs8_priv_key_info_st* %0 to %struct.ASN1_VALUE_st*
  %6 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %5, i8** nonnull %2, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load i8*, i8** %2, align 8
  %12 = sext i32 %6 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %3, i8* %11, i64 %12) #7
  %13 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %3) #7
  %14 = icmp eq %struct.evp_pkey_st* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15, %8
  call void @ERR_put_error(i32 19, i32 0, i32 104, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 159) #7
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %13) #7
  br label %19

19:                                               ; preds = %15, %18
  %20 = phi %struct.evp_pkey_st* [ null, %18 ], [ %13, %15 ]
  %21 = load i8*, i8** %2, align 8
  call void @OPENSSL_free(i8* %21) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi %struct.evp_pkey_st* [ %20, %19 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret %struct.evp_pkey_st* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs8_priv_key_info_st* @EVP_PKEY2PKCS8(%struct.evp_pkey_st*) local_unnamed_addr #1 {
  %2 = alloca %struct.cbb_st, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %struct.cbb_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  store i8* null, i8** %3, align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  store i64 -6148914691236517206, i64* %4, align 8
  %9 = call i32 @CBB_init(%struct.cbb_st* nonnull %2, i64 0) #7
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = call i32 @EVP_marshal_private_key(%struct.cbb_st* nonnull %2, %struct.evp_pkey_st* %0) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = call i32 @CBB_finish(%struct.cbb_st* nonnull %2, i8** nonnull %3, i64* nonnull %4) #7
  %16 = icmp eq i32 %15, 0
  %17 = load i64, i64* %4, align 8
  %18 = icmp slt i64 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %11, %1, %14
  call void @CBB_cleanup(%struct.cbb_st* nonnull %2) #7
  call void @ERR_put_error(i32 19, i32 0, i32 105, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 178) #7
  br label %35

21:                                               ; preds = %14
  %22 = bitcast i8** %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i8** %5 to i64*
  store i64 %23, i64* %24, align 8
  %25 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** null, i8** nonnull %5, i64 %17, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  %26 = icmp eq %struct.ASN1_VALUE_st* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = bitcast %struct.ASN1_VALUE_st* %25 to %struct.pkcs8_priv_key_info_st*
  %29 = load i8*, i8** %5, align 8
  %30 = load i8*, i8** %3, align 8
  %31 = load i64, i64* %4, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = icmp eq i8* %29, %32
  br i1 %33, label %37, label %34

34:                                               ; preds = %27, %21
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* %25, %struct.ASN1_ITEM_st* nonnull @PKCS8_PRIV_KEY_INFO_it) #7
  call void @ERR_put_error(i32 19, i32 0, i32 104, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 186) #7
  br label %35

35:                                               ; preds = %34, %20
  %36 = load i8*, i8** %3, align 8
  br label %37

37:                                               ; preds = %27, %35
  %38 = phi i8* [ %36, %35 ], [ %30, %27 ]
  %39 = phi %struct.pkcs8_priv_key_info_st* [ null, %35 ], [ %28, %27 ]
  call void @OPENSSL_free(i8* %38) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret %struct.pkcs8_priv_key_info_st* %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @EVP_marshal_private_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs8_priv_key_info_st* @PKCS8_decrypt(%struct.X509_sig_st*, i8*, i32) local_unnamed_addr #1 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = icmp eq i32 %2, -1
  %7 = icmp ne i8* %1, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call i64 @strlen(i8* nonnull %1) #8
  br label %13

11:                                               ; preds = %3
  %12 = sext i32 %2 to i64
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i64 [ %10, %9 ], [ %12, %11 ]
  %15 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  store i8* null, i8** %4, align 8
  %16 = call i32 @i2d_X509_SIG(%struct.X509_sig_st* %0, i8** nonnull %4) #7
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13
  %19 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load i8*, i8** %4, align 8
  %21 = sext i32 %16 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %20, i64 %21) #7
  %22 = call %struct.evp_pkey_st* @PKCS8_parse_encrypted_private_key(%struct.cbs_st* nonnull %5, i8* %1, i64 %14) #7
  %23 = icmp eq %struct.evp_pkey_st* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = call %struct.pkcs8_priv_key_info_st* @EVP_PKEY2PKCS8(%struct.evp_pkey_st* nonnull %22)
  br label %29

29:                                               ; preds = %24, %18, %13, %27
  %30 = phi %struct.pkcs8_priv_key_info_st* [ null, %13 ], [ null, %18 ], [ null, %24 ], [ %28, %27 ]
  %31 = phi %struct.evp_pkey_st* [ null, %13 ], [ null, %18 ], [ %22, %24 ], [ %22, %27 ]
  %32 = load i8*, i8** %4, align 8
  call void @OPENSSL_free(i8* %32) #7
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %31) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  ret %struct.pkcs8_priv_key_info_st* %30
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @i2d_X509_SIG(%struct.X509_sig_st*, i8**) local_unnamed_addr #2

declare %struct.evp_pkey_st* @PKCS8_parse_encrypted_private_key(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_sig_st* @PKCS8_encrypt(i32, %struct.evp_cipher_st*, i8*, i32, i8*, i64, i32, %struct.pkcs8_priv_key_info_st*) local_unnamed_addr #1 {
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca i8*, align 8
  %13 = icmp eq i32 %3, -1
  %14 = icmp ne i8* %2, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = tail call i64 @strlen(i8* nonnull %2) #8
  br label %20

18:                                               ; preds = %8
  %19 = sext i32 %3 to i64
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i64 [ %17, %16 ], [ %19, %18 ]
  %22 = tail call %struct.evp_pkey_st* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st* %7)
  %23 = icmp eq %struct.evp_pkey_st* %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %20
  %25 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  store i8* null, i8** %9, align 8
  %26 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  store i64 -6148914691236517206, i64* %10, align 8
  %27 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = call i32 @CBB_init(%struct.cbb_st* nonnull %11, i64 128) #7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = call i32 @PKCS8_marshal_encrypted_private_key(%struct.cbb_st* nonnull %11, i32 %0, %struct.evp_cipher_st* %1, i8* %2, i64 %21, i8* %4, i64 %5, i32 %6, %struct.evp_pkey_st* nonnull %22) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = call i32 @CBB_finish(%struct.cbb_st* nonnull %11, i8** nonnull %9, i64* nonnull %10) #7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %30, %24
  call void @CBB_cleanup(%struct.cbb_st* nonnull %11) #7
  br label %51

37:                                               ; preds = %33
  %38 = bitcast i8** %9 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast i8** %12 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load i64, i64* %10, align 8
  %42 = call %struct.X509_sig_st* @d2i_X509_SIG(%struct.X509_sig_st** null, i8** nonnull %12, i64 %41) #7
  %43 = icmp eq %struct.X509_sig_st* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = load i8*, i8** %12, align 8
  %46 = load i8*, i8** %9, align 8
  %47 = load i64, i64* %10, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = icmp eq i8* %45, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %44, %37
  call void @ERR_put_error(i32 19, i32 0, i32 68, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 265) #7
  call void @X509_SIG_free(%struct.X509_sig_st* %42) #7
  br label %51

51:                                               ; preds = %44, %50, %36
  %52 = phi %struct.X509_sig_st* [ null, %50 ], [ %42, %44 ], [ null, %36 ]
  %53 = load i8*, i8** %9, align 8
  call void @OPENSSL_free(i8* %53) #7
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  br label %54

54:                                               ; preds = %20, %51
  %55 = phi %struct.X509_sig_st* [ %52, %51 ], [ null, %20 ]
  ret %struct.X509_sig_st* %55
}

declare i32 @PKCS8_marshal_encrypted_private_key(%struct.cbb_st*, i32, %struct.evp_cipher_st*, i8*, i64, i8*, i64, i32, %struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.X509_sig_st* @d2i_X509_SIG(%struct.X509_sig_st**, i8**, i64) local_unnamed_addr #2

declare void @X509_SIG_free(%struct.X509_sig_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS12_get_key_and_certs(%struct.evp_pkey_st**, %struct.stack_st_X509*, %struct.cbs_st*, i8*) local_unnamed_addr #1 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca i64, align 8
  %14 = alloca %struct.pkcs12_context, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca %struct.cbs_st, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  store i8* null, i8** %5, align 8
  %21 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = bitcast %struct.cbs_st* %7 to i8*
  %23 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %24 = bitcast %struct.cbs_st* %8 to i8*
  %25 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #7
  %26 = bitcast %struct.cbs_st* %9 to i8*
  %27 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %28 = bitcast %struct.cbs_st* %10 to i8*
  %29 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %30 = bitcast %struct.cbs_st* %11 to i8*
  %31 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7
  %32 = bitcast %struct.cbs_st* %12 to i8*
  %33 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  %34 = bitcast i64* %13 to i8*
  %35 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  store i64 -6148914691236517206, i64* %13, align 8
  %36 = bitcast %struct.pkcs12_context* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #7
  %37 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %14, i64 0, i32 0
  %38 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %14, i64 0, i32 1
  %39 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %14, i64 0, i32 2
  %40 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %14, i64 0, i32 3
  %41 = bitcast %struct.stack_st_X509* %1 to %struct.stack_st*
  %42 = bitcast %struct.pkcs12_context* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false)
  %43 = tail call i64 @sk_num(%struct.stack_st* %41) #7
  %44 = call i32 @CBS_asn1_ber_to_der(%struct.cbs_st* %2, %struct.cbs_st* nonnull %6, i8** nonnull %5) #7
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %4
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 645) #7
  br label %171

47:                                               ; preds = %4
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %0, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #7
  %48 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i32 536870928) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %47
  %51 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %7, i64* nonnull %13) #7
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53, %50, %47
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 657) #7
  br label %161

57:                                               ; preds = %53
  %58 = load i64, i64* %13, align 8
  %59 = icmp ult i64 %58, 3
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @ERR_put_error(i32 19, i32 0, i32 101, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 662) #7
  br label %161

61:                                               ; preds = %57
  %62 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %9, i32 536870928) #7
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 667) #7
  br label %161

65:                                               ; preds = %61
  %66 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @ERR_put_error(i32 19, i32 0, i32 112, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 672) #7
  br label %161

69:                                               ; preds = %65
  %70 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32 536870928) #7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 677) #7
  br label %161

73:                                               ; preds = %69
  %74 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %9, %struct.cbs_st* nonnull %10, i32 6) #7
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %9, %struct.cbs_st* nonnull %11, i32 -1610612736) #7
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76, %73
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 686) #7
  br label %161

80:                                               ; preds = %76
  %81 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @ERR_put_error(i32 19, i32 0, i32 114, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 693) #7
  br label %161

84:                                               ; preds = %80
  %85 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %11, %struct.cbs_st* nonnull %12, i32 4) #7
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 698) #7
  br label %161

88:                                               ; preds = %84
  store %struct.evp_pkey_st** %0, %struct.evp_pkey_st*** %37, align 8
  store %struct.stack_st_X509* %1, %struct.stack_st_X509** %38, align 8
  store i8* %3, i8** %39, align 8
  %89 = icmp eq i8* %3, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = call i64 @strlen(i8* nonnull %3) #8
  br label %92

92:                                               ; preds = %88, %90
  %93 = phi i64 [ %91, %90 ], [ 0, %88 ]
  store i64 %93, i64* %40, align 8
  %94 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #7
  %95 = bitcast %struct.cbs_st* %16 to i8*
  %96 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #7
  %97 = bitcast %struct.cbs_st* %17 to i8*
  %98 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #7
  %99 = bitcast %struct.cbs_st* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 16, i1 false)
  %100 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %15, i32 536870928) #7
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %152, label %102

102:                                              ; preds = %92
  %103 = call %struct.env_md_st* @EVP_parse_digest_algorithm(%struct.cbs_st* nonnull %15) #7
  %104 = icmp eq %struct.env_md_st* %103, null
  br i1 %104, label %154, label %105

105:                                              ; preds = %102
  %106 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %15, %struct.cbs_st* nonnull %17, i32 4) #7
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %152, label %108

108:                                              ; preds = %105
  %109 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %16, i32 4) #7
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %152, label %111

111:                                              ; preds = %108
  %112 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #7
  store i64 1, i64* %18, align 8
  %113 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #7
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %127, label %115

115:                                              ; preds = %111
  %116 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %18) #7
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %115
  %119 = load i64, i64* %18, align 8
  %120 = add i64 %119, -1
  %121 = icmp ugt i64 %120, 99999999
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = load i8*, i8** %39, align 8
  %124 = load i64, i64* %40, align 8
  %125 = trunc i64 %119 to i32
  br label %127

126:                                              ; preds = %115, %118
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 731) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #7
  br label %161

127:                                              ; preds = %122, %111
  %128 = phi i32 [ %125, %122 ], [ 1, %111 ]
  %129 = phi i64 [ %124, %122 ], [ %93, %111 ]
  %130 = phi i8* [ %123, %122 ], [ %3, %111 ]
  %131 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #7
  store i32 -1431655766, i32* %19, align 4
  %132 = call fastcc i32 @pkcs12_check_mac(i32* nonnull %19, i8* %130, i64 %129, %struct.cbs_st* nonnull %16, i32 %128, %struct.env_md_st* nonnull %103, %struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %17)
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %155, label %134

134:                                              ; preds = %127
  %135 = load i32, i32* %19, align 4
  %136 = icmp eq i32 %135, 0
  %137 = icmp eq i64 %129, 0
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %148

139:                                              ; preds = %134
  %140 = icmp eq i8* %130, null
  %141 = select i1 %140, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* null
  store i8* %141, i8** %39, align 8
  %142 = load i64, i64* %18, align 8
  %143 = trunc i64 %142 to i32
  %144 = call fastcc i32 @pkcs12_check_mac(i32* nonnull %19, i8* %141, i64 0, %struct.cbs_st* nonnull %16, i32 %143, %struct.env_md_st* nonnull %103, %struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %17)
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %139
  %147 = load i32, i32* %19, align 4
  br label %148

148:                                              ; preds = %146, %134
  %149 = phi i32 [ %147, %146 ], [ %135, %134 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %148
  call void @ERR_put_error(i32 19, i32 0, i32 108, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 754) #7
  br label %155

152:                                              ; preds = %105, %108, %92
  %153 = phi i32 [ 711, %92 ], [ 722, %108 ], [ 722, %105 ]
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 %153) #7
  br label %154

154:                                              ; preds = %152, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #7
  br label %161

155:                                              ; preds = %151, %127, %139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #7
  br label %161

156:                                              ; preds = %148
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #7
  %157 = call fastcc i32 @PKCS12_handle_sequence(%struct.cbs_st* nonnull %12, %struct.pkcs12_context* nonnull %14, i32 (%struct.cbs_st*, %struct.pkcs12_context*)* nonnull @PKCS12_handle_content_info)
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %160) #7
  br label %171

161:                                              ; preds = %156, %56, %60, %68, %87, %83, %79, %72, %64, %154, %126, %155
  %162 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %162) #7
  %163 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %0, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %163) #7
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %0, align 8
  %164 = call i64 @sk_num(%struct.stack_st* %41) #7
  %165 = icmp ugt i64 %164, %43
  br i1 %165, label %166, label %171

166:                                              ; preds = %161, %166
  %167 = call i8* @sk_pop(%struct.stack_st* %41) #7
  %168 = bitcast i8* %167 to %struct.x509_st*
  call void @X509_free(%struct.x509_st* %168) #7
  %169 = call i64 @sk_num(%struct.stack_st* %41) #7
  %170 = icmp ugt i64 %169, %43
  br i1 %170, label %166, label %171

171:                                              ; preds = %166, %161, %159, %46
  %172 = phi i32 [ 0, %46 ], [ 1, %159 ], [ 0, %161 ], [ 0, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  ret i32 %172
}

declare i32 @CBS_asn1_ber_to_der(%struct.cbs_st*, %struct.cbs_st*, i8**) local_unnamed_addr #2

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_parse_digest_algorithm(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pkcs12_check_mac(i32* nocapture, i8*, i64, %struct.cbs_st*, i32, %struct.env_md_st*, %struct.cbs_st*, %struct.cbs_st*) unnamed_addr #1 {
  %9 = alloca [64 x i8], align 16
  %10 = alloca [64 x i8], align 16
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 64, i1 false)
  %13 = tail call i8* @CBS_data(%struct.cbs_st* %3) #7
  %14 = tail call i64 @CBS_len(%struct.cbs_st* %3) #7
  %15 = tail call i64 @EVP_MD_size(%struct.env_md_st* %5) #7
  %16 = call i32 @pkcs12_key_gen(i8* %1, i64 %2, i8* %13, i64 %14, i8 zeroext 3, i32 %4, i64 %15, i8* nonnull %12, %struct.env_md_st* %5) #7
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 64, i1 false)
  store i32 -1431655766, i32* %11, align 4
  %20 = call i64 @EVP_MD_size(%struct.env_md_st* %5) #7
  %21 = call i8* @CBS_data(%struct.cbs_st* %6) #7
  %22 = call i64 @CBS_len(%struct.cbs_st* %6) #7
  %23 = call i8* @HMAC(%struct.env_md_st* %5, i8* nonnull %12, i64 %20, i8* %21, i64 %22, i8* nonnull %19, i32* nonnull %11) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = load i32, i32* %11, align 4
  %27 = zext i32 %26 to i64
  %28 = call i32 @CBS_mem_equal(%struct.cbs_st* %7, i8* nonnull %19, i64 %27) #7
  store i32 %28, i32* %0, align 4
  br label %29

29:                                               ; preds = %8, %18, %25
  %30 = phi i32 [ 0, %18 ], [ 1, %25 ], [ 0, %8 ]
  call void @OPENSSL_cleanse(i8* nonnull %12, i64 64) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #7
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @PKCS12_handle_sequence(%struct.cbs_st*, %struct.pkcs12_context*, i32 (%struct.cbs_st*, %struct.pkcs12_context*)* nocapture) unnamed_addr #1 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  store i8* null, i8** %4, align 8
  %9 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = call i32 @CBS_asn1_ber_to_der(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i8** nonnull %4) #7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 297) #7
  br label %43

14:                                               ; preds = %3
  %15 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i32 536870928) #7
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %14
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %19
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %22
  %26 = bitcast %struct.cbs_st* %7 to i8*
  %27 = bitcast %struct.cbs_st* %7 to i8*
  br label %29

28:                                               ; preds = %19, %14
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 304) #7
  br label %40

29:                                               ; preds = %25, %37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %30 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i32 536870928) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 311) #7
  br label %36

33:                                               ; preds = %29
  %34 = call i32 %2(%struct.cbs_st* nonnull %7, %struct.pkcs12_context* %1) #7, !callees !2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  br label %40

37:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  %38 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %29

40:                                               ; preds = %37, %22, %36, %28
  %41 = phi i32 [ 0, %28 ], [ 0, %36 ], [ 1, %22 ], [ 1, %37 ]
  %42 = load i8*, i8** %4, align 8
  call void @OPENSSL_free(i8* %42) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  br label %43

43:                                               ; preds = %40, %13
  %44 = phi i32 [ %41, %40 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @PKCS12_handle_content_info(%struct.cbs_st*, %struct.pkcs12_context*) #1 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7
  %17 = bitcast %struct.cbs_st* %4 to i8*
  %18 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #7
  %19 = bitcast %struct.cbs_st* %5 to i8*
  %20 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %21 = bitcast i8** %6 to i8*
  %22 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  store i8* null, i8** %6, align 8
  %23 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %3, i32 6) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %2
  %26 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %4, i32 -1610612736) #7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = call i64 @CBS_len(%struct.cbs_st* %0) #7
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28, %25, %2
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 536) #7
  br label %101

32:                                               ; preds = %28
  %33 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7EncryptedData, i64 0, i64 0), i64 9) #7
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %88, label %35

35:                                               ; preds = %32
  %36 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #7
  %37 = bitcast %struct.cbs_st* %8 to i8*
  %38 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %39 = bitcast %struct.cbs_st* %9 to i8*
  %40 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %41 = bitcast %struct.cbs_st* %10 to i8*
  %42 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #7
  %43 = bitcast %struct.cbs_st* %11 to i8*
  %44 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %45 = bitcast i8** %12 to i8*
  %46 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %47 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  store i64 -6148914691236517206, i64* %13, align 8
  %48 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32 536870928) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %65, label %50

50:                                               ; preds = %35
  %51 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %7, i32 2) #7
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %8, i32 536870928) #7
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %53
  %57 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %9, i32 6) #7
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %56
  %60 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %10, i32 536870928) #7
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = call i32 @CBS_get_asn1_implicit_string(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %11, i8** nonnull %6, i32 -2147483648, i32 4) #7
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62, %59, %56, %53, %50, %35
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 563) #7
  br label %86

66:                                               ; preds = %62
  %67 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 568) #7
  br label %86

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 3
  %74 = load i64, i64* %73, align 8
  %75 = call i8* @CBS_data(%struct.cbs_st* nonnull %11) #7
  %76 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #7
  %77 = call i32 @pkcs8_pbe_decrypt(i8** nonnull %12, i64* nonnull %13, %struct.cbs_st* nonnull %10, i8* %72, i64 %74, i8* %75, i64 %76) #7
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %70
  %80 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #7
  %81 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  %82 = load i8*, i8** %12, align 8
  %83 = load i64, i64* %13, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %14, i8* %82, i64 %83) #7
  %84 = call fastcc i32 @PKCS12_handle_sequence(%struct.cbs_st* nonnull %14, %struct.pkcs12_context* %1, i32 (%struct.cbs_st*, %struct.pkcs12_context*)* nonnull @PKCS12_handle_safe_bag)
  %85 = load i8*, i8** %12, align 8
  call void @OPENSSL_free(i8* %85) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #7
  br label %86

86:                                               ; preds = %70, %69, %65, %79
  %87 = phi i32 [ %84, %79 ], [ 0, %69 ], [ 0, %65 ], [ 0, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #7
  br label %101

88:                                               ; preds = %32
  %89 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88
  %92 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #7
  %93 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  %94 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %15, i32 4) #7
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 587) #7
  br label %99

97:                                               ; preds = %91
  %98 = call fastcc i32 @PKCS12_handle_sequence(%struct.cbs_st* nonnull %15, %struct.pkcs12_context* %1, i32 (%struct.cbs_st*, %struct.pkcs12_context*)* nonnull @PKCS12_handle_safe_bag)
  br label %99

99:                                               ; preds = %96, %97
  %100 = phi i32 [ %98, %97 ], [ 0, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #7
  br label %101

101:                                              ; preds = %88, %99, %86, %31
  %102 = phi i32 [ 0, %31 ], [ %87, %86 ], [ %100, %99 ], [ 1, %88 ]
  %103 = load i8*, i8** %6, align 8
  call void @OPENSSL_free(i8* %103) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7
  ret i32 %102
}

declare void @X509_free(%struct.x509_st*) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @PKCS12_PBE_add() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs12_st* @d2i_PKCS12(%struct.pkcs12_st**, i8** nocapture, i64) local_unnamed_addr #1 {
  %4 = tail call i8* @OPENSSL_malloc(i64 16) #7
  %5 = bitcast i8* %4 to %struct.pkcs12_st*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @OPENSSL_malloc(i64 %2) #7
  %9 = bitcast i8* %4 to i8**
  store i8* %8, i8** %9, align 8
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @OPENSSL_free(i8* nonnull %4) #7
  br label %31

12:                                               ; preds = %7
  %13 = icmp eq i64 %2, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = load i8*, i8** %1, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 %15, i64 %2, i1 false) #7
  br label %16

16:                                               ; preds = %12, %14
  %17 = getelementptr inbounds i8, i8* %4, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %2, i64* %18, align 8
  %19 = load i8*, i8** %1, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %2
  store i8* %20, i8** %1, align 8
  %21 = icmp eq %struct.pkcs12_st** %0, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %16
  %23 = load %struct.pkcs12_st*, %struct.pkcs12_st** %0, align 8
  %24 = icmp eq %struct.pkcs12_st* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %23, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @OPENSSL_free(i8* %27) #7
  %28 = bitcast %struct.pkcs12_st* %23 to i8*
  tail call void @OPENSSL_free(i8* nonnull %28) #7
  br label %29

29:                                               ; preds = %22, %25
  %30 = bitcast %struct.pkcs12_st** %0 to i8**
  store i8* %4, i8** %30, align 8
  br label %31

31:                                               ; preds = %29, %16, %3, %11
  %32 = phi %struct.pkcs12_st* [ null, %11 ], [ null, %3 ], [ %5, %16 ], [ %5, %29 ]
  ret %struct.pkcs12_st* %32
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @PKCS12_free(%struct.pkcs12_st*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.pkcs12_st* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  tail call void @OPENSSL_free(i8* %5) #7
  %6 = bitcast %struct.pkcs12_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %6) #7
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs12_st* @d2i_PKCS12_bio(%struct.bio_st*, %struct.pkcs12_st**) local_unnamed_addr #1 {
  %3 = tail call %struct.buf_mem_st* @BUF_MEM_new() #7
  %4 = icmp eq %struct.buf_mem_st* %3, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @BUF_MEM_grow(%struct.buf_mem_st* nonnull %3, i64 8192) #7
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %3, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %3, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = tail call i32 @BIO_read(%struct.bio_st* %0, i8* %10, i32 %13) #7
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %70, label %18

16:                                               ; preds = %35
  %17 = icmp eq i64 %24, 0
  br i1 %17, label %70, label %43

18:                                               ; preds = %8, %35
  %19 = phi i32 [ %41, %35 ], [ %14, %8 ]
  %20 = phi i64 [ %24, %35 ], [ 0, %8 ]
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %18
  %23 = sext i32 %19 to i64
  %24 = add i64 %20, %23
  %25 = load i64, i64* %11, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 262144
  br i1 %28, label %70, label %29

29:                                               ; preds = %27
  %30 = shl i64 %25, 1
  %31 = tail call i64 @BUF_MEM_grow(%struct.buf_mem_st* nonnull %3, i64 %30) #7
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %70, label %33

33:                                               ; preds = %29
  %34 = load i64, i64* %11, align 8
  br label %35

35:                                               ; preds = %33, %22
  %36 = phi i64 [ %34, %33 ], [ %25, %22 ]
  %37 = load i8*, i8** %9, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %24
  %39 = sub i64 %36, %24
  %40 = trunc i64 %39 to i32
  %41 = tail call i32 @BIO_read(%struct.bio_st* %0, i8* %38, i32 %40) #7
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %16, label %18

43:                                               ; preds = %18, %16
  %44 = phi i64 [ %24, %16 ], [ %20, %18 ]
  %45 = load i8*, i8** %9, align 8
  %46 = tail call i8* @OPENSSL_malloc(i64 16) #7
  %47 = bitcast i8* %46 to %struct.pkcs12_st*
  %48 = icmp eq i8* %46, null
  br i1 %48, label %70, label %49

49:                                               ; preds = %43
  %50 = tail call i8* @OPENSSL_malloc(i64 %44) #7
  %51 = bitcast i8* %46 to i8**
  store i8* %50, i8** %51, align 8
  %52 = icmp eq i8* %50, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  tail call void @OPENSSL_free(i8* nonnull %46) #7
  br label %70

54:                                               ; preds = %49
  %55 = icmp eq i64 %44, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %54
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %45, i64 %44, i1 false) #7
  br label %57

57:                                               ; preds = %56, %54
  %58 = getelementptr inbounds i8, i8* %46, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 %44, i64* %59, align 8
  %60 = icmp eq %struct.pkcs12_st** %1, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %57
  %62 = load %struct.pkcs12_st*, %struct.pkcs12_st** %1, align 8
  %63 = icmp eq %struct.pkcs12_st* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %62, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void @OPENSSL_free(i8* %66) #7
  %67 = bitcast %struct.pkcs12_st* %62 to i8*
  tail call void @OPENSSL_free(i8* nonnull %67) #7
  br label %68

68:                                               ; preds = %64, %61
  %69 = bitcast %struct.pkcs12_st** %1 to i8**
  store i8* %46, i8** %69, align 8
  br label %70

70:                                               ; preds = %29, %27, %8, %16, %68, %57, %53, %43, %5
  %71 = phi %struct.pkcs12_st* [ null, %5 ], [ null, %53 ], [ null, %43 ], [ %47, %57 ], [ %47, %68 ], [ null, %16 ], [ null, %8 ], [ null, %27 ], [ null, %29 ]
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %3) #7
  br label %72

72:                                               ; preds = %2, %70
  %73 = phi %struct.pkcs12_st* [ %71, %70 ], [ null, %2 ]
  ret %struct.pkcs12_st* %73
}

declare %struct.buf_mem_st* @BUF_MEM_new() local_unnamed_addr #2

declare i64 @BUF_MEM_grow(%struct.buf_mem_st*, i64) local_unnamed_addr #2

declare i32 @BIO_read(%struct.bio_st*, i8*, i32) local_unnamed_addr #2

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs12_st* @d2i_PKCS12_fp(%struct._IO_FILE*, %struct.pkcs12_st**) local_unnamed_addr #1 {
  %3 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #7
  %4 = icmp eq %struct.bio_st* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.pkcs12_st* @d2i_PKCS12_bio(%struct.bio_st* nonnull %3, %struct.pkcs12_st** %1)
  %7 = tail call i32 @BIO_free(%struct.bio_st* nonnull %3) #7
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi %struct.pkcs12_st* [ %6, %5 ], [ null, %2 ]
  ret %struct.pkcs12_st* %9
}

declare %struct.bio_st* @BIO_new_fp(%struct._IO_FILE*, i32) local_unnamed_addr #2

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS12(%struct.pkcs12_st* nocapture readonly, i8**) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 2147483647
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 19, i32 0, i32 69, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 880) #7
  br label %38

7:                                                ; preds = %2
  %8 = icmp eq i8** %1, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = trunc i64 %4 to i32
  br label %38

11:                                               ; preds = %7
  %12 = load i8*, i8** %1, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %24

14:                                               ; preds = %11
  %15 = tail call i8* @OPENSSL_malloc(i64 %4) #7
  store i8* %15, i8** %1, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 891) #7
  br label %38

18:                                               ; preds = %14
  %19 = load i64, i64* %3, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %23, i64 %19, i1 false) #7
  br label %35

24:                                               ; preds = %11
  %25 = icmp eq i64 %4, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %28, i64 %4, i1 false) #7
  %29 = load i64, i64* %3, align 8
  %30 = load i8*, i8** %1, align 8
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i8* [ %12, %24 ], [ %30, %26 ]
  %33 = phi i64 [ 0, %24 ], [ %29, %26 ]
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8* %34, i8** %1, align 8
  br label %35

35:                                               ; preds = %21, %18, %31
  %36 = load i64, i64* %3, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %35, %17, %9, %6
  %39 = phi i32 [ -1, %6 ], [ %10, %9 ], [ -1, %17 ], [ %37, %35 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS12_bio(%struct.bio_st*, %struct.pkcs12_st* nocapture readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @BIO_write_all(%struct.bio_st* %0, i8* %4, i64 %6) #7
  ret i32 %7
}

declare i32 @BIO_write_all(%struct.bio_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS12_fp(%struct._IO_FILE*, %struct.pkcs12_st* nocapture readonly) local_unnamed_addr #1 {
  %3 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #7
  %4 = icmp eq %struct.bio_st* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call i32 @BIO_write_all(%struct.bio_st* nonnull %3, i8* %7, i64 %9) #7
  %11 = tail call i32 @BIO_free(%struct.bio_st* nonnull %3) #7
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi i32 [ %10, %5 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS12_parse(%struct.pkcs12_st* nocapture readonly, i8*, %struct.evp_pkey_st**, %struct.x509_st** nocapture, %struct.stack_st_X509**) local_unnamed_addr #1 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = icmp ne %struct.stack_st_X509** %4, null
  %9 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  br i1 %8, label %10, label %13

10:                                               ; preds = %5
  %11 = load %struct.stack_st_X509*, %struct.stack_st_X509** %4, align 8
  %12 = icmp eq %struct.stack_st_X509* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %5, %10
  %14 = tail call %struct.stack_st* @sk_new_null() #7
  %15 = bitcast %struct.stack_st* %14 to %struct.stack_st_X509*
  %16 = icmp eq %struct.stack_st* %14, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 930) #7
  br label %56

18:                                               ; preds = %13, %10
  %19 = phi %struct.stack_st_X509* [ %11, %10 ], [ %15, %13 ]
  %20 = phi i8 [ 0, %10 ], [ 1, %13 ]
  %21 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.pkcs12_st, %struct.pkcs12_st* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %6, i8* %22, i64 %24) #7
  %25 = call i32 @PKCS12_get_key_and_certs(%struct.evp_pkey_st** %2, %struct.stack_st_X509* nonnull %19, %struct.cbs_st* nonnull %6, i8* %1)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = icmp eq i8 %20, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = bitcast %struct.stack_st_X509* %19 to %struct.stack_st*
  call void @sk_free(%struct.stack_st* %30) #7
  br label %56

31:                                               ; preds = %18
  store %struct.x509_st* null, %struct.x509_st** %3, align 8
  %32 = bitcast %struct.stack_st_X509* %19 to %struct.stack_st*
  %33 = call i64 @sk_num(%struct.stack_st* %32) #7
  %34 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  %35 = icmp ne %struct.evp_pkey_st* %34, null
  %36 = icmp ne i64 %33, 0
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %53

38:                                               ; preds = %31
  %39 = add i64 %33, -1
  br label %40

40:                                               ; preds = %38, %50
  %41 = phi i64 [ %51, %50 ], [ %39, %38 ]
  %42 = call i8* @sk_value(%struct.stack_st* %32, i64 %41) #7
  %43 = bitcast i8* %42 to %struct.x509_st*
  %44 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  %45 = call i32 @X509_check_private_key(%struct.x509_st* %43, %struct.evp_pkey_st* %44) #7
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %40
  %48 = bitcast %struct.x509_st** %3 to i8**
  store i8* %42, i8** %48, align 8
  %49 = call i8* @sk_delete(%struct.stack_st* %32, i64 %41) #7
  br label %53

50:                                               ; preds = %40
  call void @ERR_clear_error() #7
  %51 = add i64 %41, -1
  %52 = icmp ult i64 %51, %33
  br i1 %52, label %40, label %53

53:                                               ; preds = %50, %47, %31
  br i1 %8, label %54, label %55

54:                                               ; preds = %53
  store %struct.stack_st_X509* %19, %struct.stack_st_X509** %4, align 8
  br label %56

55:                                               ; preds = %53
  call void @sk_pop_free_ex(%struct.stack_st* %32, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #7
  br label %56

56:                                               ; preds = %54, %55, %29, %27, %17
  %57 = phi i32 [ 0, %17 ], [ 0, %27 ], [ 0, %29 ], [ 1, %55 ], [ 1, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret i32 %57
}

declare i32 @X509_check_private_key(%struct.x509_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS12_verify_mac(%struct.pkcs12_st* nocapture readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = alloca %struct.evp_pkey_st*, align 8
  %5 = alloca %struct.x509_st*, align 8
  %6 = icmp eq i8* %1, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %21, label %32

9:                                                ; preds = %3
  %10 = icmp eq i32 %2, -1
  br i1 %10, label %21, label %11

11:                                               ; preds = %9
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = tail call i8* @memchr(i8* nonnull %1, i32 0, i64 %12) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %16, %7, %18, %9
  %22 = bitcast %struct.evp_pkey_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %4, align 8
  %23 = bitcast %struct.x509_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  store %struct.x509_st* null, %struct.x509_st** %5, align 8
  %24 = call i32 @PKCS12_parse(%struct.pkcs12_st* %0, i8* %1, %struct.evp_pkey_st** nonnull %4, %struct.x509_st** nonnull %5, %struct.stack_st_X509** null)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @ERR_clear_error() #7
  br label %30

27:                                               ; preds = %21
  %28 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %4, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %28) #7
  %29 = load %struct.x509_st*, %struct.x509_st** %5, align 8
  call void @X509_free(%struct.x509_st* %29) #7
  br label %30

30:                                               ; preds = %27, %26
  %31 = phi i32 [ 1, %27 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  br label %32

32:                                               ; preds = %11, %18, %7, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %7 ], [ 0, %18 ], [ 0, %11 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.pkcs12_st* @PKCS12_create(i8*, i8*, %struct.evp_pkey_st*, %struct.x509_st*, %struct.stack_st_X509*, i32, i32, i32, i32, i32) local_unnamed_addr #1 {
  %11 = alloca i64, align 8
  %12 = alloca %struct.evp_cipher_ctx_st, align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = alloca %struct.cbb_st, align 8
  %15 = alloca %struct.cbb_st, align 8
  %16 = alloca %struct.cbb_st, align 8
  %17 = alloca %struct.cbb_st, align 8
  %18 = alloca %struct.cbb_st, align 8
  %19 = alloca %struct.cbb_st, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca [64 x i8], align 16
  %24 = alloca i32, align 4
  %25 = alloca %struct.cbb_st, align 8
  %26 = alloca %struct.cbb_st, align 8
  %27 = alloca %struct.cbb_st, align 8
  %28 = alloca %struct.cbb_st, align 8
  %29 = alloca %struct.cbb_st, align 8
  %30 = alloca %struct.cbb_st, align 8
  %31 = alloca %struct.cbb_st, align 8
  %32 = alloca [64 x i8], align 16
  %33 = alloca %struct.cbb_st, align 8
  %34 = alloca %struct.cbb_st, align 8
  %35 = alloca %struct.cbb_st, align 8
  %36 = alloca %struct.cbb_st, align 8
  %37 = alloca %struct.cbb_st, align 8
  %38 = alloca %struct.cbb_st, align 8
  %39 = alloca %struct.cbb_st, align 8
  %40 = alloca %struct.cbb_st, align 8
  %41 = alloca %struct.cbb_st, align 8
  %42 = alloca %struct.cbb_st, align 8
  %43 = alloca %struct.cbb_st, align 8
  %44 = alloca %struct.cbb_st, align 8
  %45 = alloca %struct.cbb_st, align 8
  %46 = alloca i64, align 8
  %47 = alloca [64 x i8], align 16
  %48 = alloca i32, align 4
  %49 = alloca %struct.cbb_st, align 8
  %50 = alloca %struct.cbb_st, align 8
  %51 = alloca %struct.cbb_st, align 8
  %52 = alloca %struct.cbb_st, align 8
  %53 = icmp eq i32 %5, 0
  %54 = select i1 %53, i32 146, i32 %5
  %55 = icmp eq i32 %6, 0
  %56 = select i1 %55, i32 149, i32 %6
  %57 = icmp eq i32 %7, 0
  %58 = select i1 %57, i32 2048, i32 %7
  %59 = icmp eq i32 %8, 0
  %60 = select i1 %59, i32 1, i32 %8
  %61 = icmp ne i32 %9, 0
  %62 = icmp slt i32 %60, 0
  %63 = or i1 %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %10
  %65 = icmp eq %struct.evp_pkey_st* %2, null
  %66 = icmp eq %struct.x509_st* %3, null
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %73

68:                                               ; preds = %64
  %69 = bitcast %struct.stack_st_X509* %4 to %struct.stack_st*
  %70 = tail call i64 @sk_num(%struct.stack_st* %69) #7
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %68, %10
  tail call void @ERR_put_error(i32 19, i32 0, i32 132, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1178) #7
  br label %404

73:                                               ; preds = %68, %64
  %74 = icmp eq i8* %0, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = tail call i64 @strlen(i8* nonnull %0) #8
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi i64 [ %76, %75 ], [ 0, %73 ]
  %79 = getelementptr inbounds [64 x i8], [64 x i8]* %23, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %79) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -86, i64 64, i1 false)
  %80 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #7
  store i32 0, i32* %24, align 4
  %81 = icmp ne %struct.x509_st* %3, null
  %82 = icmp ne %struct.evp_pkey_st* %2, null
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %91

84:                                               ; preds = %77
  %85 = tail call i32 @X509_check_private_key(%struct.x509_st* nonnull %3, %struct.evp_pkey_st* nonnull %2) #7
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %402, label %87

87:                                               ; preds = %84
  %88 = tail call %struct.env_md_st* @EVP_sha1() #7
  %89 = call i32 @X509_digest(%struct.x509_st* nonnull %3, %struct.env_md_st* %88, i8* nonnull %79, i32* nonnull %24) #7
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %402, label %91

91:                                               ; preds = %87, %77
  %92 = bitcast %struct.cbb_st* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false)
  %93 = bitcast %struct.cbb_st* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 32, i1 false)
  %94 = bitcast %struct.cbb_st* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 32, i1 false)
  %95 = bitcast %struct.cbb_st* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 32, i1 false)
  %96 = bitcast %struct.cbb_st* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 32, i1 false)
  %97 = bitcast %struct.cbb_st* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 32, i1 false)
  %98 = bitcast %struct.cbb_st* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 32, i1 false)
  %99 = getelementptr inbounds [64 x i8], [64 x i8]* %32, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %99) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 64, i1 false)
  %100 = call i32 @CBB_init(%struct.cbb_st* nonnull %25, i64 0) #7
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %400, label %102

102:                                              ; preds = %91
  %103 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %25, %struct.cbb_st* nonnull %26, i32 536870928) #7
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %400, label %105

105:                                              ; preds = %102
  %106 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %26, i64 3) #7
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %400, label %108

108:                                              ; preds = %105
  %109 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %26, %struct.cbb_st* nonnull %27, i32 536870928) #7
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %400, label %111

111:                                              ; preds = %108
  %112 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %27, %struct.cbb_st* nonnull %28, i32 6) #7
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %400, label %114

114:                                              ; preds = %111
  %115 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %400, label %117

117:                                              ; preds = %114
  %118 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %27, %struct.cbb_st* nonnull %29, i32 -1610612736) #7
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %400, label %120

120:                                              ; preds = %117
  %121 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %29, %struct.cbb_st* nonnull %30, i32 4) #7
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %400, label %123

123:                                              ; preds = %120
  %124 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %30, %struct.cbb_st* nonnull %31, i32 536870928) #7
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %400, label %126

126:                                              ; preds = %123
  br i1 %81, label %131, label %127

127:                                              ; preds = %126
  %128 = bitcast %struct.stack_st_X509* %4 to %struct.stack_st*
  %129 = call i64 @sk_num(%struct.stack_st* %128) #7
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %261, label %131

131:                                              ; preds = %127, %126
  %132 = icmp slt i32 %56, 0
  br i1 %132, label %133, label %164

133:                                              ; preds = %131
  %134 = bitcast %struct.cbb_st* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 32, i1 false)
  %135 = bitcast %struct.cbb_st* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 32, i1 false)
  %136 = bitcast %struct.cbb_st* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %136) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 32, i1 false)
  %137 = bitcast %struct.cbb_st* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 32, i1 false)
  %138 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %31, %struct.cbb_st* nonnull %33, i32 536870928) #7
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %161, label %140

140:                                              ; preds = %133
  %141 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %33, %struct.cbb_st* nonnull %34, i32 6) #7
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %161, label %143

143:                                              ; preds = %140
  %144 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %161, label %146

146:                                              ; preds = %143
  %147 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %33, %struct.cbb_st* nonnull %35, i32 -1610612736) #7
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %161, label %149

149:                                              ; preds = %146
  %150 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %35, %struct.cbb_st* nonnull %36, i32 4) #7
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %161, label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %24, align 4
  %154 = zext i32 %153 to i64
  %155 = call fastcc i32 @add_cert_safe_contents(%struct.cbb_st* nonnull %36, %struct.x509_st* %3, %struct.stack_st_X509* %4, i8* %1, i8* nonnull %79, i64 %154)
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %152
  %158 = call i32 @CBB_flush(%struct.cbb_st* nonnull %31) #7
  %159 = icmp eq i32 %158, 0
  %160 = select i1 %159, i32 2, i32 0
  br label %161

161:                                              ; preds = %157, %133, %140, %143, %146, %149, %152
  %162 = phi i32 [ 2, %152 ], [ 2, %149 ], [ 2, %146 ], [ 2, %143 ], [ 2, %140 ], [ 2, %133 ], [ %160, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %136) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #7
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %261, label %400

164:                                              ; preds = %131
  %165 = bitcast %struct.cbb_st* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 32, i1 false)
  %166 = call i32 @CBB_init(%struct.cbb_st* nonnull %37, i64 0) #7
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %384, label %168

168:                                              ; preds = %164
  %169 = load i32, i32* %24, align 4
  %170 = zext i32 %169 to i64
  %171 = call fastcc i32 @add_cert_safe_contents(%struct.cbb_st* nonnull %37, %struct.x509_st* %3, %struct.stack_st_X509* %4, i8* %1, i8* nonnull %79, i64 %170)
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %383, label %173

173:                                              ; preds = %168
  %174 = call i8* @CBB_data(%struct.cbb_st* nonnull %37) #7
  %175 = call i64 @CBB_len(%struct.cbb_st* nonnull %37) #7
  %176 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176)
  %177 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177)
  %178 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178)
  %179 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #7
  store i64 -6148914691236517206, i64* %11, align 8
  %180 = call i32 @RAND_bytes(i8* nonnull %179, i64 8) #7
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %258, label %182

182:                                              ; preds = %173
  %183 = bitcast %struct.evp_cipher_ctx_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %183) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 144, i1 false) #7
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %12) #7
  %184 = bitcast %struct.cbb_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 -86, i64 32, i1 false) #7
  %185 = bitcast %struct.cbb_st* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 32, i1 false) #7
  %186 = bitcast %struct.cbb_st* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 32, i1 false) #7
  %187 = bitcast %struct.cbb_st* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 32, i1 false) #7
  %188 = bitcast %struct.cbb_st* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 32, i1 false) #7
  %189 = bitcast %struct.cbb_st* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 32, i1 false) #7
  %190 = bitcast %struct.cbb_st* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 -86, i64 32, i1 false) #7
  %191 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %31, %struct.cbb_st* nonnull %13, i32 536870928) #7
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %255, label %193

193:                                              ; preds = %182
  %194 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %13, %struct.cbb_st* nonnull %14, i32 6) #7
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %255, label %196

196:                                              ; preds = %193
  %197 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7EncryptedData, i64 0, i64 0), i64 9) #7
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %255, label %199

199:                                              ; preds = %196
  %200 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %13, %struct.cbb_st* nonnull %15, i32 -1610612736) #7
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %255, label %202

202:                                              ; preds = %199
  %203 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %15, %struct.cbb_st* nonnull %16, i32 536870928) #7
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %255, label %205

205:                                              ; preds = %202
  %206 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %16, i64 0) #7
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %255, label %208

208:                                              ; preds = %205
  %209 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %16, %struct.cbb_st* nonnull %17, i32 536870928) #7
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %255, label %211

211:                                              ; preds = %208
  %212 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %17, %struct.cbb_st* nonnull %18, i32 6) #7
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %255, label %214

214:                                              ; preds = %211
  %215 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %255, label %217

217:                                              ; preds = %214
  %218 = call i32 @pkcs12_pbe_encrypt_init(%struct.cbb_st* nonnull %17, %struct.evp_cipher_ctx_st* nonnull %12, i32 %56, i32 %58, i8* %0, i64 %78, i8* nonnull %179, i64 8) #7
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %255, label %220

220:                                              ; preds = %217
  %221 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %17, %struct.cbb_st* nonnull %19, i32 -2147483648) #7
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %255, label %223

223:                                              ; preds = %220
  %224 = call i32 @EVP_CIPHER_CTX_block_size(%struct.evp_cipher_ctx_st* nonnull %12) #7
  %225 = zext i32 %224 to i64
  %226 = add i64 %175, %225
  %227 = icmp ult i64 %226, %175
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  call void @ERR_put_error(i32 19, i32 0, i32 118, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1132) #7
  br label %255

229:                                              ; preds = %223
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  store i32 -1431655766, i32* %21, align 4
  store i32 -1431655766, i32* %22, align 4
  %230 = call i32 @CBB_reserve(%struct.cbb_st* nonnull %19, i8** nonnull %20, i64 %226) #7
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %255, label %232

232:                                              ; preds = %229
  %233 = load i8*, i8** %20, align 8
  %234 = trunc i64 %175 to i32
  %235 = call i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st* nonnull %12, i8* %233, i32* nonnull %21, i8* %174, i32 %234) #7
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %255, label %237

237:                                              ; preds = %232
  %238 = load i8*, i8** %20, align 8
  %239 = load i32, i32* %21, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %238, i64 %240
  %242 = call i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st* nonnull %12, i8* %241, i32* nonnull %22) #7
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %255, label %244

244:                                              ; preds = %237
  %245 = load i32, i32* %21, align 4
  %246 = load i32, i32* %22, align 4
  %247 = add nsw i32 %246, %245
  %248 = sext i32 %247 to i64
  %249 = call i32 @CBB_did_write(%struct.cbb_st* nonnull %19, i64 %248) #7
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %244
  %252 = call i32 @CBB_flush(%struct.cbb_st* nonnull %31) #7
  %253 = icmp ne i32 %252, 0
  %254 = zext i1 %253 to i32
  br label %255

255:                                              ; preds = %251, %244, %237, %232, %229, %228, %220, %217, %214, %211, %208, %205, %202, %199, %196, %193, %182
  %256 = phi i32 [ 0, %228 ], [ 0, %244 ], [ 0, %237 ], [ 0, %232 ], [ 0, %229 ], [ 0, %220 ], [ 0, %217 ], [ 0, %214 ], [ 0, %211 ], [ 0, %208 ], [ 0, %205 ], [ 0, %202 ], [ 0, %199 ], [ 0, %196 ], [ 0, %193 ], [ 0, %182 ], [ %254, %251 ]
  %257 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #7
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %183) #7
  br label %258

258:                                              ; preds = %173, %255
  %259 = phi i32 [ %256, %255 ], [ 0, %173 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178)
  %260 = icmp eq i32 %259, 0
  call void @CBB_cleanup(%struct.cbb_st* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #7
  br i1 %260, label %400, label %261

261:                                              ; preds = %258, %161, %127
  br i1 %82, label %262, label %322

262:                                              ; preds = %261
  %263 = bitcast %struct.cbb_st* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %263) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 32, i1 false)
  %264 = bitcast %struct.cbb_st* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 32, i1 false)
  %265 = bitcast %struct.cbb_st* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 -86, i64 32, i1 false)
  %266 = bitcast %struct.cbb_st* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 -86, i64 32, i1 false)
  %267 = bitcast %struct.cbb_st* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 32, i1 false)
  %268 = bitcast %struct.cbb_st* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 -86, i64 32, i1 false)
  %269 = bitcast %struct.cbb_st* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 32, i1 false)
  %270 = bitcast %struct.cbb_st* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %270, i8 -86, i64 32, i1 false)
  %271 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %31, %struct.cbb_st* nonnull %38, i32 536870928) #7
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %392, label %273

273:                                              ; preds = %262
  %274 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %38, %struct.cbb_st* nonnull %39, i32 6) #7
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %391, label %276

276:                                              ; preds = %273
  %277 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #7
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %390, label %279

279:                                              ; preds = %276
  %280 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %38, %struct.cbb_st* nonnull %40, i32 -1610612736) #7
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %389, label %282

282:                                              ; preds = %279
  %283 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %40, %struct.cbb_st* nonnull %41, i32 4) #7
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %388, label %285

285:                                              ; preds = %282
  %286 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %41, %struct.cbb_st* nonnull %42, i32 536870928) #7
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %387, label %288

288:                                              ; preds = %285
  %289 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %42, %struct.cbb_st* nonnull %43, i32 536870928) #7
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %386, label %291

291:                                              ; preds = %288
  %292 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %43, %struct.cbb_st* nonnull %44, i32 6) #7
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %385, label %294

294:                                              ; preds = %291
  %295 = icmp slt i32 %54, 0
  br i1 %295, label %296, label %305

296:                                              ; preds = %294
  %297 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kKeyBag, i64 0, i64 0), i64 11) #7
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %395, label %299

299:                                              ; preds = %296
  %300 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %43, %struct.cbb_st* nonnull %45, i32 -1610612736) #7
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %394, label %302

302:                                              ; preds = %299
  %303 = call i32 @EVP_marshal_private_key(%struct.cbb_st* nonnull %45, %struct.evp_pkey_st* nonnull %2) #7
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %393, label %314

305:                                              ; preds = %294
  %306 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kPKCS8ShroudedKeyBag, i64 0, i64 0), i64 11) #7
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %398, label %308

308:                                              ; preds = %305
  %309 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %43, %struct.cbb_st* nonnull %45, i32 -1610612736) #7
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %397, label %311

311:                                              ; preds = %308
  %312 = call i32 @PKCS8_marshal_encrypted_private_key(%struct.cbb_st* nonnull %45, i32 %54, %struct.evp_cipher_st* null, i8* %0, i64 %78, i8* null, i64 0, i32 %58, %struct.evp_pkey_st* nonnull %2) #7
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %396, label %314

314:                                              ; preds = %302, %311
  %315 = load i32, i32* %24, align 4
  %316 = zext i32 %315 to i64
  %317 = call fastcc i32 @add_bag_attributes(%struct.cbb_st* nonnull %43, i8* %1, i8* nonnull %79, i64 %316)
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %399, label %319

319:                                              ; preds = %314
  %320 = call i32 @CBB_flush(%struct.cbb_st* nonnull %31) #7
  %321 = icmp eq i32 %320, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br i1 %321, label %400, label %322

322:                                              ; preds = %319, %261
  %323 = call %struct.env_md_st* @EVP_sha1() #7
  %324 = bitcast i64* %46 to i8*
  %325 = getelementptr inbounds [64 x i8], [64 x i8]* %47, i64 0, i64 0
  store i64 -6148914691236517206, i64* %46, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %325, i8 -86, i64 64, i1 false)
  store i32 -1431655766, i32* %48, align 4
  %326 = call i32 @CBB_flush(%struct.cbb_st* nonnull %30) #7
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %400, label %328

328:                                              ; preds = %322
  %329 = call i32 @RAND_bytes(i8* nonnull %324, i64 8) #7
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %400, label %331

331:                                              ; preds = %328
  %332 = call i64 @EVP_MD_size(%struct.env_md_st* %323) #7
  %333 = call i32 @pkcs12_key_gen(i8* %0, i64 %78, i8* nonnull %324, i64 8, i8 zeroext 3, i32 %60, i64 %332, i8* nonnull %99, %struct.env_md_st* %323) #7
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %400, label %335

335:                                              ; preds = %331
  %336 = call i64 @EVP_MD_size(%struct.env_md_st* %323) #7
  %337 = call i8* @CBB_data(%struct.cbb_st* nonnull %30) #7
  %338 = call i64 @CBB_len(%struct.cbb_st* nonnull %30) #7
  %339 = call i8* @HMAC(%struct.env_md_st* %323, i8* nonnull %99, i64 %336, i8* %337, i64 %338, i8* nonnull %325, i32* nonnull %48) #7
  %340 = icmp eq i8* %339, null
  br i1 %340, label %400, label %341

341:                                              ; preds = %335
  %342 = bitcast %struct.cbb_st* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 -86, i64 32, i1 false)
  %343 = bitcast %struct.cbb_st* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 -86, i64 32, i1 false)
  %344 = bitcast %struct.cbb_st* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %344, i8 -86, i64 32, i1 false)
  %345 = bitcast %struct.cbb_st* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 -86, i64 32, i1 false)
  %346 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %26, %struct.cbb_st* nonnull %49, i32 536870928) #7
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %400, label %348

348:                                              ; preds = %341
  %349 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %49, %struct.cbb_st* nonnull %50, i32 536870928) #7
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %400, label %351

351:                                              ; preds = %348
  %352 = call i32 @EVP_marshal_digest_algorithm(%struct.cbb_st* nonnull %50, %struct.env_md_st* %323) #7
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %400, label %354

354:                                              ; preds = %351
  %355 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %50, %struct.cbb_st* nonnull %51, i32 4) #7
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %400, label %357

357:                                              ; preds = %354
  %358 = load i32, i32* %48, align 4
  %359 = zext i32 %358 to i64
  %360 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %51, i8* nonnull %325, i64 %359) #7
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %400, label %362

362:                                              ; preds = %357
  %363 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %49, %struct.cbb_st* nonnull %52, i32 4) #7
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %400, label %365

365:                                              ; preds = %362
  %366 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %52, i8* nonnull %324, i64 8) #7
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %400, label %368

368:                                              ; preds = %365
  %369 = sext i32 %60 to i64
  %370 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %49, i64 %369) #7
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %400, label %372

372:                                              ; preds = %368
  %373 = call i8* @OPENSSL_malloc(i64 16) #7
  %374 = icmp eq i8* %373, null
  br i1 %374, label %382, label %375

375:                                              ; preds = %372
  %376 = bitcast i8* %373 to %struct.pkcs12_st*
  %377 = bitcast i8* %373 to i8**
  %378 = getelementptr inbounds i8, i8* %373, i64 8
  %379 = bitcast i8* %378 to i64*
  %380 = call i32 @CBB_finish(%struct.cbb_st* nonnull %25, i8** nonnull %377, i64* %379) #7
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %400

382:                                              ; preds = %375, %372
  call void @OPENSSL_free(i8* %373) #7
  br label %400

383:                                              ; preds = %168
  call void @CBB_cleanup(%struct.cbb_st* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #7
  br label %400

384:                                              ; preds = %164
  call void @CBB_cleanup(%struct.cbb_st* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #7
  br label %400

385:                                              ; preds = %291
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

386:                                              ; preds = %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

387:                                              ; preds = %285
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

388:                                              ; preds = %282
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

389:                                              ; preds = %279
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

390:                                              ; preds = %276
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

391:                                              ; preds = %273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

392:                                              ; preds = %262
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

393:                                              ; preds = %302
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

394:                                              ; preds = %299
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

395:                                              ; preds = %296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

396:                                              ; preds = %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

397:                                              ; preds = %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

398:                                              ; preds = %305
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

399:                                              ; preds = %314
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #7
  br label %400

400:                                              ; preds = %319, %399, %398, %397, %396, %395, %394, %393, %392, %391, %390, %389, %388, %387, %386, %385, %258, %384, %383, %161, %375, %368, %365, %362, %357, %354, %351, %348, %341, %335, %331, %328, %322, %123, %120, %117, %114, %111, %108, %105, %102, %91, %382
  %401 = phi %struct.pkcs12_st* [ null, %161 ], [ null, %319 ], [ null, %382 ], [ %376, %375 ], [ null, %368 ], [ null, %365 ], [ null, %362 ], [ null, %357 ], [ null, %354 ], [ null, %351 ], [ null, %348 ], [ null, %341 ], [ null, %335 ], [ null, %331 ], [ null, %328 ], [ null, %322 ], [ null, %258 ], [ null, %123 ], [ null, %120 ], [ null, %117 ], [ null, %114 ], [ null, %111 ], [ null, %108 ], [ null, %105 ], [ null, %102 ], [ null, %91 ], [ null, %383 ], [ null, %384 ], [ null, %385 ], [ null, %386 ], [ null, %387 ], [ null, %388 ], [ null, %389 ], [ null, %390 ], [ null, %391 ], [ null, %392 ], [ null, %393 ], [ null, %394 ], [ null, %395 ], [ null, %396 ], [ null, %397 ], [ null, %398 ], [ null, %399 ]
  call void @OPENSSL_cleanse(i8* nonnull %99, i64 64) #7
  call void @CBB_cleanup(%struct.cbb_st* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %99) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #7
  br label %402

402:                                              ; preds = %84, %87, %400
  %403 = phi %struct.pkcs12_st* [ %401, %400 ], [ null, %87 ], [ null, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %79) #7
  br label %404

404:                                              ; preds = %402, %72
  %405 = phi %struct.pkcs12_st* [ null, %72 ], [ %403, %402 ]
  ret %struct.pkcs12_st* %405
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @X509_digest(%struct.x509_st*, %struct.env_md_st*, i8*, i32*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @add_cert_safe_contents(%struct.cbb_st*, %struct.x509_st*, %struct.stack_st_X509*, i8*, i8*, i64) unnamed_addr #1 {
  %7 = alloca %struct.cbb_st, align 8
  %8 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %7, i32 536870928) #7
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %6
  %12 = icmp eq %struct.x509_st* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = call fastcc i32 @add_cert_bag(%struct.cbb_st* nonnull %7, %struct.x509_st* nonnull %1, i8* %3, i8* %4, i64 %5)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13, %11
  %17 = bitcast %struct.stack_st_X509* %2 to %struct.stack_st*
  %18 = call i64 @sk_num(%struct.stack_st* %17) #7
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %30, label %23

20:                                               ; preds = %23
  %21 = call i64 @sk_num(%struct.stack_st* %17) #7
  %22 = icmp ult i64 %29, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %16, %20
  %24 = phi i64 [ %29, %20 ], [ 0, %16 ]
  %25 = call i8* @sk_value(%struct.stack_st* %17, i64 %24) #7
  %26 = bitcast i8* %25 to %struct.x509_st*
  %27 = call fastcc i32 @add_cert_bag(%struct.cbb_st* nonnull %7, %struct.x509_st* %26, i8* null, i8* null, i64 0)
  %28 = icmp eq i32 %27, 0
  %29 = add nuw i64 %24, 1
  br i1 %28, label %32, label %20

30:                                               ; preds = %20, %16
  %31 = call i32 @CBB_flush(%struct.cbb_st* %0) #7
  br label %32

32:                                               ; preds = %23, %6, %13, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %13 ], [ 0, %6 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7
  ret i32 %33
}

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @add_bag_attributes(%struct.cbb_st*, i8*, i8*, i64) unnamed_addr #1 {
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca i32, align 4
  %12 = icmp eq i8* %1, null
  %13 = icmp eq i64 %3, 0
  %14 = and i1 %12, %13
  br i1 %14, label %87, label %15

15:                                               ; preds = %4
  %16 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %5, i32 536870929) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %85, label %23

23:                                               ; preds = %15
  br i1 %12, label %59, label %24

24:                                               ; preds = %23
  %25 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %6, i32 536870928) #7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %85, label %27

27:                                               ; preds = %24
  %28 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7, i32 6) #7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %85, label %30

30:                                               ; preds = %27
  %31 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kFriendlyName, i64 0, i64 0), i64 9) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %85, label %33

33:                                               ; preds = %30
  %34 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %8, i32 536870929) #7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %85, label %36

36:                                               ; preds = %33
  %37 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9, i32 30) #7
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %85, label %39

39:                                               ; preds = %36
  %40 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7
  %41 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  %42 = call i64 @strlen(i8* nonnull %1) #8
  call void @CBS_init(%struct.cbs_st* nonnull %10, i8* nonnull %1, i64 %42) #7
  %43 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast i32* %11 to i8*
  br label %48

47:                                               ; preds = %55, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  br label %59

48:                                               ; preds = %45, %55
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #7
  store i32 -1431655766, i32* %11, align 4
  %49 = call i32 @cbs_get_utf8(%struct.cbs_st* nonnull %10, i32* nonnull %11) #7
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %11, align 4
  %53 = call i32 @cbb_add_ucs2_be(%struct.cbb_st* nonnull %9, i32 %52) #7
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #7
  %56 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %47, label %48

58:                                               ; preds = %48, %51
  call void @ERR_put_error(i32 19, i32 0, i32 131, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1022) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  br label %85

59:                                               ; preds = %47, %23
  br i1 %13, label %78, label %60

60:                                               ; preds = %59
  %61 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %6, i32 536870928) #7
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %85, label %63

63:                                               ; preds = %60
  %64 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7, i32 6) #7
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %63
  %67 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kLocalKeyID, i64 0, i64 0), i64 9) #7
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %66
  %70 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %8, i32 536870929) #7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9, i32 4) #7
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %9, i8* %2, i64 %3) #7
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %75, %59
  %79 = call i32 @CBB_flush_asn1_set_of(%struct.cbb_st* nonnull %5) #7
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = call i32 @CBB_flush(%struct.cbb_st* %0) #7
  %83 = icmp ne i32 %82, 0
  %84 = zext i1 %83 to i32
  br label %85

85:                                               ; preds = %58, %81, %78, %60, %63, %66, %69, %72, %75, %24, %27, %30, %33, %36, %15
  %86 = phi i32 [ 0, %58 ], [ 0, %15 ], [ 0, %36 ], [ 0, %33 ], [ 0, %30 ], [ 0, %27 ], [ 0, %24 ], [ 0, %75 ], [ 0, %72 ], [ 0, %69 ], [ 0, %66 ], [ 0, %63 ], [ 0, %60 ], [ 0, %78 ], [ %84, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  br label %87

87:                                               ; preds = %4, %85
  %88 = phi i32 [ %86, %85 ], [ 1, %4 ]
  ret i32 %88
}

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

declare i32 @pkcs12_key_gen(i8*, i64, i8*, i64, i8 zeroext, i32, i64, i8*, %struct.env_md_st*) local_unnamed_addr #2

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #2

declare i8* @HMAC(%struct.env_md_st*, i8*, i64, i8*, i64, i8*, i32*) local_unnamed_addr #2

declare i32 @EVP_marshal_digest_algorithm(%struct.cbb_st*, %struct.env_md_st*) local_unnamed_addr #2

declare void @OPENSSL_cleanse(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_cb(i32, %struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readnone, i8* nocapture readnone) #1 {
  %5 = icmp eq i32 %0, 2
  br i1 %5, label %6, label %18

6:                                                ; preds = %4
  %7 = bitcast %struct.ASN1_VALUE_st** %1 to %struct.pkcs8_priv_key_info_st**
  %8 = load %struct.pkcs8_priv_key_info_st*, %struct.pkcs8_priv_key_info_st** %7, align 8
  %9 = getelementptr inbounds %struct.pkcs8_priv_key_info_st, %struct.pkcs8_priv_key_info_st* %8, i64 0, i32 2
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %9, align 8
  %11 = icmp eq %struct.asn1_string_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %10, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %10, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  tail call void @OPENSSL_cleanse(i8* %14, i64 %17) #7
  br label %18

18:                                               ; preds = %12, %6, %4
  ret i32 1
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_asn1_implicit_string(%struct.cbs_st*, %struct.cbs_st*, i8**, i32, i32) local_unnamed_addr #2

declare i32 @pkcs8_pbe_decrypt(i8**, i64*, %struct.cbs_st*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @PKCS12_handle_safe_bag(%struct.cbs_st*, %struct.pkcs12_context* nocapture readonly) #1 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = bitcast %struct.cbs_st* %10 to i8*
  %21 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7
  %22 = bitcast %struct.cbs_st* %11 to i8*
  %23 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %24 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %9, i32 6) #7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %2
  %28 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %10, i32 -1610612736) #7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %2
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 419) #7
  br label %212

31:                                               ; preds = %27
  %32 = call i64 @CBS_len(%struct.cbs_st* %0) #7
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @CBS_init(%struct.cbs_st* nonnull %11, i8* null, i64 0) #7
  br label %42

35:                                               ; preds = %31
  %36 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %11, i32 536870929) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = call i64 @CBS_len(%struct.cbs_st* %0) #7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38, %35
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 426) #7
  br label %212

42:                                               ; preds = %38, %34
  %43 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kKeyBag, i64 0, i64 0), i64 11) #7
  %44 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kPKCS8ShroudedKeyBag, i64 0, i64 0), i64 11) #7
  %45 = icmp eq i32 %43, 0
  %46 = or i32 %44, %43
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 0
  %50 = load %struct.evp_pkey_st**, %struct.evp_pkey_st*** %49, align 8
  %51 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %50, align 8
  %52 = icmp eq %struct.evp_pkey_st* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  call void @ERR_put_error(i32 19, i32 0, i32 113, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 436) #7
  br label %212

54:                                               ; preds = %48
  br i1 %45, label %57, label %55

55:                                               ; preds = %54
  %56 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %10) #7
  br label %63

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = call %struct.evp_pkey_st* @PKCS8_parse_encrypted_private_key(%struct.cbs_st* nonnull %10, i8* %59, i64 %61) #7
  br label %63

63:                                               ; preds = %57, %55
  %64 = phi %struct.evp_pkey_st* [ %56, %55 ], [ %62, %57 ]
  %65 = icmp eq %struct.evp_pkey_st* %64, null
  br i1 %65, label %212, label %66

66:                                               ; preds = %63
  %67 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 449) #7
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %64) #7
  br label %212

70:                                               ; preds = %66
  %71 = load %struct.evp_pkey_st**, %struct.evp_pkey_st*** %49, align 8
  store %struct.evp_pkey_st* %64, %struct.evp_pkey_st** %71, align 8
  br label %212

72:                                               ; preds = %42
  %73 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kCertBag, i64 0, i64 0), i64 11) #7
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %212, label %75

75:                                               ; preds = %72
  %76 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #7
  %77 = bitcast %struct.cbs_st* %13 to i8*
  %78 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #7
  %79 = bitcast %struct.cbs_st* %14 to i8*
  %80 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #7
  %81 = bitcast %struct.cbs_st* %15 to i8*
  %82 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #7
  %83 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false)
  %84 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %10, %struct.cbs_st* nonnull %12, i32 536870928) #7
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %75
  %87 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %13, i32 6) #7
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  %90 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %14, i32 -1610612736) #7
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %15, i32 4) #7
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92, %89, %86, %75
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 466) #7
  br label %210

96:                                               ; preds = %92
  %97 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @kX509Certificate, i64 0, i64 0), i64 10) #7
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %210, label %99

99:                                               ; preds = %96
  %100 = call i64 @CBS_len(%struct.cbs_st* nonnull %15) #7
  %101 = icmp slt i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 477) #7
  br label %210

103:                                              ; preds = %99
  %104 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %105 = call i8* @CBS_data(%struct.cbs_st* nonnull %15) #7
  store i8* %105, i8** %16, align 8
  %106 = call i64 @CBS_len(%struct.cbs_st* nonnull %15) #7
  %107 = call %struct.x509_st* @d2i_X509(%struct.x509_st** null, i8** nonnull %16, i64 %106) #7
  %108 = icmp eq %struct.x509_st* %107, null
  br i1 %108, label %109, label %110

109:                                              ; preds = %103
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 484) #7
  br label %208

110:                                              ; preds = %103
  %111 = load i8*, i8** %16, align 8
  %112 = call i8* @CBS_data(%struct.cbs_st* nonnull %15) #7
  %113 = call i64 @CBS_len(%struct.cbs_st* nonnull %15) #7
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = icmp eq i8* %111, %114
  br i1 %115, label %117, label %116

116:                                              ; preds = %110
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 489) #7
  call void @X509_free(%struct.x509_st* nonnull %107) #7
  br label %208

117:                                              ; preds = %110
  %118 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #7
  %119 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #7
  store i8* null, i8** %17, align 8
  store i64 0, i64* %18, align 8
  %120 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #7
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %188, label %122

122:                                              ; preds = %117
  %123 = bitcast %struct.cbs_st* %3 to i8*
  %124 = bitcast %struct.cbs_st* %4 to i8*
  %125 = bitcast %struct.cbs_st* %5 to i8*
  %126 = bitcast %struct.cbs_st* %6 to i8*
  %127 = bitcast %struct.cbb_st* %7 to i8*
  %128 = bitcast i32* %8 to i8*
  br label %129

129:                                              ; preds = %183, %122
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 16, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 16, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 16, i1 false) #7
  %130 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %11, %struct.cbs_st* nonnull %3, i32 536870928) #7
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %141, label %132

132:                                              ; preds = %129
  %133 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4, i32 6) #7
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %132
  %136 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %5, i32 536870929) #7
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %138, %135, %132, %129
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 367) #7
  br label %186

142:                                              ; preds = %138
  %143 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kFriendlyName, i64 0, i64 0), i64 9) #7
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %183, label %145

145:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 16, i1 false) #7
  %146 = load i8*, i8** %17, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %148, label %157

148:                                              ; preds = %145
  %149 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i32 30) #7
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %151
  %155 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154, %151, %148, %145
  call void @ERR_put_error(i32 19, i32 0, i32 100, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 377) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #7
  br label %186

158:                                              ; preds = %154
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 32, i1 false) #7
  %159 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %160 = call i32 @CBB_init(%struct.cbb_st* nonnull %7, i64 %159) #7
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %177, label %166

165:                                              ; preds = %158
  call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 383) #7
  br label %181

166:                                              ; preds = %162, %174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #7
  store i32 -1431655766, i32* %8, align 4
  %167 = call i32 @cbs_get_ucs2_be(%struct.cbs_st* nonnull %6, i32* nonnull %8) #7
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %8, align 4
  %171 = call i32 @cbb_add_utf8(%struct.cbb_st* nonnull %7, i32 %170) #7
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %169, %166
  call void @ERR_put_error(i32 19, i32 0, i32 131, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 390) #7
  call void @CBB_cleanup(%struct.cbb_st* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #7
  br label %181

174:                                              ; preds = %169
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #7
  %175 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #7
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %166

177:                                              ; preds = %174, %162
  %178 = call i32 @CBB_finish(%struct.cbb_st* nonnull %7, i8** nonnull %17, i64* nonnull %18) #7
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 396) #7
  call void @CBB_cleanup(%struct.cbb_st* nonnull %7) #7
  br label %181

181:                                              ; preds = %180, %173, %165
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #7
  br label %186

182:                                              ; preds = %177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #7
  br label %183

183:                                              ; preds = %182, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #7
  %184 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %188, label %129

186:                                              ; preds = %181, %157, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #7
  %187 = load i8*, i8** %17, align 8
  call void @OPENSSL_free(i8* %187) #7
  store i8* null, i8** %17, align 8
  store i64 0, i64* %18, align 8
  br label %205

188:                                              ; preds = %183, %117
  %189 = load i64, i64* %18, align 8
  %190 = icmp eq i64 %189, 0
  %191 = load i8*, i8** %17, align 8
  br i1 %190, label %197, label %192

192:                                              ; preds = %188
  %193 = trunc i64 %189 to i32
  %194 = call i32 @X509_alias_set1(%struct.x509_st* nonnull %107, i8* %191, i32 %193) #7
  %195 = icmp eq i32 %194, 0
  %196 = load i8*, i8** %17, align 8
  call void @OPENSSL_free(i8* %196) #7
  br i1 %195, label %205, label %198

197:                                              ; preds = %188
  call void @OPENSSL_free(i8* %191) #7
  br label %198

198:                                              ; preds = %192, %197
  %199 = getelementptr inbounds %struct.pkcs12_context, %struct.pkcs12_context* %1, i64 0, i32 1
  %200 = bitcast %struct.stack_st_X509** %199 to %struct.stack_st**
  %201 = load %struct.stack_st*, %struct.stack_st** %200, align 8
  %202 = bitcast %struct.x509_st* %107 to i8*
  %203 = call i64 @sk_push(%struct.stack_st* %201, i8* nonnull %202) #7
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %198, %192, %186
  call void @X509_free(%struct.x509_st* nonnull %107) #7
  br label %206

206:                                              ; preds = %205, %198
  %207 = phi i32 [ 1, %198 ], [ 0, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #7
  br label %208

208:                                              ; preds = %206, %116, %109
  %209 = phi i32 [ 0, %116 ], [ %207, %206 ], [ 0, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #7
  br label %210

210:                                              ; preds = %96, %208, %102, %95
  %211 = phi i32 [ 0, %102 ], [ %209, %208 ], [ 0, %95 ], [ 1, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #7
  br label %212

212:                                              ; preds = %53, %210, %63, %70, %69, %72, %41, %30
  %213 = phi i32 [ 0, %41 ], [ 0, %30 ], [ 0, %53 ], [ %211, %210 ], [ 0, %69 ], [ 1, %70 ], [ 0, %63 ], [ 1, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  ret i32 %213
}

declare %struct.x509_st* @d2i_X509(%struct.x509_st**, i8**, i64) local_unnamed_addr #2

declare i32 @X509_alias_set1(%struct.x509_st*, i8*, i32) local_unnamed_addr #2

declare i32 @cbs_get_ucs2_be(%struct.cbs_st*, i32*) local_unnamed_addr #2

declare i32 @cbb_add_utf8(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare i8* @sk_pop(%struct.stack_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i8* @sk_delete(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_st*)*
  %4 = bitcast i8* %1 to %struct.x509_st*
  tail call void %3(%struct.x509_st* %4) #7
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @add_cert_bag(%struct.cbb_st*, %struct.x509_st*, i8*, i8*, i64) unnamed_addr #1 {
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca %struct.cbb_st, align 8
  %13 = alloca i8*, align 8
  %14 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %struct.cbb_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %6, i32 536870928) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %67, label %23

23:                                               ; preds = %5
  %24 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7, i32 6) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %67, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @kCertBag, i64 0, i64 0), i64 11) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %8, i32 -1610612736) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %67, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9, i32 536870928) #7
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %67, label %35

35:                                               ; preds = %32
  %36 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %10, i32 6) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %67, label %38

38:                                               ; preds = %35
  %39 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @kX509Certificate, i64 0, i64 0), i64 10) #7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %67, label %41

41:                                               ; preds = %38
  %42 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %11, i32 -1610612736) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %41
  %45 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %11, %struct.cbb_st* nonnull %12, i32 4) #7
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %67, label %47

47:                                               ; preds = %44
  %48 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %49 = call i32 @i2d_X509(%struct.x509_st* %1, i8** null) #7
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = sext i32 %49 to i64
  %53 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %12, i8** nonnull %13, i64 %52) #7
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = call i32 @i2d_X509(%struct.x509_st* %1, i8** nonnull %13) #7
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  %59 = call fastcc i32 @add_bag_attributes(%struct.cbb_st* nonnull %6, i8* %2, i8* %3, i64 %4)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = call i32 @CBB_flush(%struct.cbb_st* %0) #7
  %63 = icmp ne i32 %62, 0
  %64 = zext i1 %63 to i32
  br label %65

65:                                               ; preds = %61, %47, %55, %51, %58
  %66 = phi i32 [ 0, %58 ], [ 0, %51 ], [ 0, %55 ], [ 0, %47 ], [ %64, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7
  br label %67

67:                                               ; preds = %5, %23, %26, %29, %32, %35, %38, %41, %44, %65
  %68 = phi i32 [ %66, %65 ], [ 0, %44 ], [ 0, %41 ], [ 0, %38 ], [ 0, %35 ], [ 0, %32 ], [ 0, %29 ], [ 0, %26 ], [ 0, %23 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #7
  ret i32 %68
}

declare i32 @i2d_X509(%struct.x509_st*, i8**) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i32 @pkcs12_pbe_encrypt_init(%struct.cbb_st*, %struct.evp_cipher_ctx_st*, i32, i32, i8*, i64, i8*, i64) local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_block_size(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i32 @CBB_reserve(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #2

declare i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare i32 @CBB_did_write(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i32 @cbs_get_utf8(%struct.cbs_st*, i32*) local_unnamed_addr #2

declare i32 @cbb_add_ucs2_be(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_flush_asn1_set_of(%struct.cbb_st*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (%struct.cbs_st*, %struct.pkcs12_context*)* @PKCS12_handle_content_info, i32 (%struct.cbs_st*, %struct.pkcs12_context*)* @PKCS12_handle_safe_bag}
