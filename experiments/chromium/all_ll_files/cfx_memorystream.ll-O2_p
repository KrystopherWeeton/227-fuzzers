; ModuleID = '../../third_party/pdfium/core/fxcrt/cfx_memorystream.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/cfx_memorystream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_MemoryStream = type { %class.IFX_SeekableStream.base, %"class.std::__1::unique_ptr", i64, i64, i64, %"class.fxcrt::Retainable" }
%class.IFX_SeekableStream.base = type { %class.IFX_SeekableReadStream.base, %class.IFX_SeekableWriteStream.base }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%class.IFX_SeekableWriteStream.base = type { %class.IFX_RetainableWriteStream.base }
%class.IFX_RetainableWriteStream.base = type { %class.IFX_WriteStream }
%class.IFX_WriteStream = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_SeekableStream = type { %class.IFX_SeekableReadStream.base, %class.IFX_SeekableWriteStream.base, %"class.fxcrt::Retainable" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.IFX_SeekableWriteStream = type { %class.IFX_RetainableWriteStream.base, %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_RetainableWriteStream = type { %class.IFX_WriteStream, %"class.fxcrt::Retainable" }

$_ZN18IFX_SeekableStreamD1Ev = comdat any

$_ZN18IFX_SeekableStreamD0Ev = comdat any

$_ZThn8_N18IFX_SeekableStreamD1Ev = comdat any

$_ZThn8_N18IFX_SeekableStreamD0Ev = comdat any

$_ZTv0_n24_N18IFX_SeekableStreamD1Ev = comdat any

$_ZTv0_n24_N18IFX_SeekableStreamD0Ev = comdat any

$_ZN22IFX_SeekableReadStreamD1Ev = comdat any

$_ZN22IFX_SeekableReadStreamD0Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev = comdat any

$_ZN23IFX_SeekableWriteStreamD1Ev = comdat any

$_ZN23IFX_SeekableWriteStreamD0Ev = comdat any

$_ZTv0_n24_N23IFX_SeekableWriteStreamD1Ev = comdat any

$_ZTv0_n24_N23IFX_SeekableWriteStreamD0Ev = comdat any

$_ZN25IFX_RetainableWriteStreamD1Ev = comdat any

$_ZN25IFX_RetainableWriteStreamD0Ev = comdat any

$_ZTv0_n24_N25IFX_RetainableWriteStreamD1Ev = comdat any

$_ZTv0_n24_N25IFX_RetainableWriteStreamD0Ev = comdat any

$_ZN15IFX_WriteStreamD2Ev = comdat any

$_ZN15IFX_WriteStreamD0Ev = comdat any

$_ZTV15IFX_WriteStream = comdat any

@_ZTV16CFX_MemoryStream = hidden unnamed_addr constant { [16 x i8*], [10 x i8*], [5 x i8*] } { [16 x i8*] [i8* null, i8* inttoptr (i64 48 to i8*), i8* null, i8* null, i8* null, i8* bitcast (i64 (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStream7GetSizeEv to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.CFX_MemoryStream*, i8*, i64)* @_ZN16CFX_MemoryStream9ReadBlockEPvm to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*, i8*, i64, i64)* @_ZN16CFX_MemoryStream17ReadBlockAtOffsetEPvlm to i8*), i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStreamD1Ev to i8*), i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStreamD0Ev to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, i8*, i64)* @_ZN18IFX_SeekableStream10WriteBlockEPKvm to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)* @_ZN18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*, i8*, i64, i64)* @_ZN16CFX_MemoryStream18WriteBlockAtOffsetEPKvlm to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*)* @_ZN16CFX_MemoryStream5FlushEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 40 to i8*), i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i1 (%class.IFX_SeekableStream*, i8*, i64)* @_ZThn8_N18IFX_SeekableStream10WriteBlockEPKvm to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)* @_ZThn8_N18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZThn8_N16CFX_MemoryStreamD1Ev to i8*), i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZThn8_N16CFX_MemoryStreamD0Ev to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*)* @_ZThn8_N16CFX_MemoryStream5FlushEv to i8*), i8* bitcast (i1 (%class.CFX_MemoryStream*, i8*, i64, i64)* @_ZThn8_N16CFX_MemoryStream18WriteBlockAtOffsetEPKvlm to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZTv0_n24_N16CFX_MemoryStreamD1Ev to i8*), i8* bitcast (void (%class.CFX_MemoryStream*)* @_ZTv0_n24_N16CFX_MemoryStreamD0Ev to i8*)] }, align 8
@_ZTT16CFX_MemoryStream = hidden unnamed_addr constant [16 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*], [5 x i8*] }, { [14 x i8*], [10 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_18IFX_SeekableStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*], [5 x i8*] }, { [10 x i8*], [4 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream8_23IFX_SeekableWriteStream, i32 0, inrange i32 0, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream8_25IFX_RetainableWriteStream, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream8_25IFX_RetainableWriteStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*], [5 x i8*] }, { [10 x i8*], [4 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream8_23IFX_SeekableWriteStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*], [5 x i8*] }, { [10 x i8*], [4 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream8_23IFX_SeekableWriteStream, i32 0, inrange i32 2, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*], [5 x i8*] }, { [14 x i8*], [10 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_18IFX_SeekableStream, i32 0, inrange i32 2, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*], [5 x i8*] }, { [14 x i8*], [10 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_18IFX_SeekableStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*], [5 x i8*] }, { [14 x i8*], [10 x i8*], [5 x i8*] }* @_ZTC16CFX_MemoryStream0_18IFX_SeekableStream, i32 0, inrange i32 1, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i32 0, inrange i32 2, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i32 0, inrange i32 1, i32 4) to i8*)], align 8
@_ZTC16CFX_MemoryStream0_18IFX_SeekableStream = hidden unnamed_addr constant { [14 x i8*], [10 x i8*], [5 x i8*] } { [14 x i8*] [i8* null, i8* inttoptr (i64 48 to i8*), i8* null, i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZN18IFX_SeekableStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZN18IFX_SeekableStreamD0Ev to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, i8*, i64)* @_ZN18IFX_SeekableStream10WriteBlockEPKvm to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)* @_ZN18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE to i8*)], [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 40 to i8*), i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i1 (%class.IFX_SeekableStream*, i8*, i64)* @_ZThn8_N18IFX_SeekableStream10WriteBlockEPKvm to i8*), i8* bitcast (i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)* @_ZThn8_N18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZThn8_N18IFX_SeekableStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZThn8_N18IFX_SeekableStreamD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZTv0_n24_N18IFX_SeekableStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableStream*)* @_ZTv0_n24_N18IFX_SeekableStreamD0Ev to i8*)] }, align 8
@_ZTC16CFX_MemoryStream0_22IFX_SeekableReadStream = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 48 to i8*), i8* null, i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev to i8*)] }, align 8
@_ZTC16CFX_MemoryStream8_23IFX_SeekableWriteStream = hidden unnamed_addr constant { [10 x i8*], [4 x i8*], [5 x i8*] } { [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 40 to i8*), i8* null, i8* null, i8* bitcast (i1 (%class.IFX_SeekableWriteStream*, i8*, i64)* @_ZN23IFX_SeekableWriteStream10WriteBlockEPKvm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_SeekableWriteStream*)* @_ZN23IFX_SeekableWriteStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableWriteStream*)* @_ZN23IFX_SeekableWriteStreamD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [4 x i8*] [i8* null, i8* inttoptr (i64 8 to i8*), i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [5 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%class.IFX_SeekableWriteStream*)* @_ZTv0_n24_N23IFX_SeekableWriteStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableWriteStream*)* @_ZTv0_n24_N23IFX_SeekableWriteStreamD0Ev to i8*)] }, align 8
@_ZTC16CFX_MemoryStream8_25IFX_RetainableWriteStream = hidden unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* inttoptr (i64 40 to i8*), i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_RetainableWriteStream*)* @_ZN25IFX_RetainableWriteStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_RetainableWriteStream*)* @_ZN25IFX_RetainableWriteStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%class.IFX_RetainableWriteStream*)* @_ZTv0_n24_N25IFX_RetainableWriteStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_RetainableWriteStream*)* @_ZTv0_n24_N25IFX_RetainableWriteStreamD0Ev to i8*)] }, align 8
@_ZTV15IFX_WriteStream = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_WriteStream*)* @_ZN15IFX_WriteStreamD2Ev to i8*), i8* bitcast (void (%class.IFX_WriteStream*)* @_ZN15IFX_WriteStreamD0Ev to i8*)] }, comdat, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamC2Ev(%class.CFX_MemoryStream* nocapture, i8** nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8*, i8** %1, i64 1
  %4 = getelementptr inbounds i8*, i8** %1, i64 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.CFX_MemoryStream* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds i8*, i8** %1, i64 3
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %12 = inttoptr i64 %6 to i8*
  %13 = getelementptr i8, i8* %12, i64 -32
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to i64*
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds i8*, i8** %1, i64 4
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i8*, i8** %11, align 8
  %23 = getelementptr i8, i8* %22, i64 -40
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds i8*, i8** %1, i64 5
  %30 = getelementptr inbounds i8*, i8** %1, i64 6
  %31 = getelementptr inbounds %class.IFX_SeekableWriteStream.base, %class.IFX_SeekableWriteStream.base* %28, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15IFX_WriteStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = bitcast i8** %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %class.IFX_SeekableWriteStream.base* %28 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds i8*, i8** %1, i64 7
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %33 to i8*
  %39 = getelementptr i8, i8* %38, i64 -24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %class.IFX_SeekableWriteStream.base* %28 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = bitcast i8** %29 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %34, align 8
  %47 = getelementptr inbounds i8*, i8** %1, i64 8
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %class.IFX_SeekableWriteStream.base* %28 to i8**
  %51 = inttoptr i64 %46 to i8*
  %52 = getelementptr i8, i8* %51, i64 -32
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %42, i64 %54
  %56 = bitcast i8* %55 to i64*
  store i64 %49, i64* %56, align 8
  %57 = getelementptr inbounds i8*, i8** %1, i64 9
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i8*, i8** %50, align 8
  %61 = getelementptr i8, i8* %60, i64 -24
  %62 = bitcast i8* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i8, i8* %42, i64 %63
  %65 = bitcast i8* %64 to i64*
  store i64 %59, i64* %65, align 8
  %66 = bitcast i8** %3 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %7, align 8
  %68 = getelementptr inbounds i8*, i8** %1, i64 10
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = inttoptr i64 %67 to i8*
  %72 = getelementptr i8, i8* %71, i64 -32
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %16, i64 %74
  %76 = bitcast i8* %75 to i64*
  store i64 %70, i64* %76, align 8
  %77 = getelementptr inbounds i8*, i8** %1, i64 11
  %78 = bitcast i8** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load i8*, i8** %11, align 8
  %81 = getelementptr i8, i8* %80, i64 -40
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i8, i8* %16, i64 %83
  %85 = bitcast i8* %84 to i64*
  store i64 %79, i64* %85, align 8
  %86 = getelementptr inbounds i8*, i8** %1, i64 12
  %87 = bitcast i8** %86 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %34, align 8
  %89 = bitcast i8** %1 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %7, align 8
  %91 = getelementptr inbounds i8*, i8** %1, i64 13
  %92 = bitcast i8** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i8*
  %95 = getelementptr i8, i8* %94, i64 -32
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i8, i8* %16, i64 %97
  %99 = bitcast i8* %98 to i64*
  store i64 %93, i64* %99, align 8
  %100 = getelementptr inbounds i8*, i8** %1, i64 14
  %101 = bitcast i8** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = load i8*, i8** %11, align 8
  %104 = getelementptr i8, i8* %103, i64 -40
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds i8, i8* %16, i64 %106
  %108 = bitcast i8* %107 to i64*
  store i64 %102, i64* %108, align 8
  %109 = getelementptr inbounds i8*, i8** %1, i64 15
  %110 = bitcast i8** %109 to i64*
  %111 = load i64, i64* %110, align 8
  store i64 %111, i64* %34, align 8
  %112 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1
  %113 = bitcast %"class.std::__1::unique_ptr"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamC1Ev(%class.CFX_MemoryStream* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5, i32 0
  %3 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5, i32 1
  store i64 0, i64* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = bitcast %class.CFX_MemoryStream* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamC2ENSt3__110unique_ptrIh13FxFreeDeleterEEm(%class.CFX_MemoryStream* nocapture, i8** nocapture readonly, i8*, i64) unnamed_addr #1 align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds i8*, i8** %1, i64 1
  %7 = getelementptr inbounds i8*, i8** %1, i64 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.CFX_MemoryStream* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8*, i8** %1, i64 3
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %15 = inttoptr i64 %9 to i8*
  %16 = getelementptr i8, i8* %15, i64 -32
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = getelementptr inbounds i8*, i8** %1, i64 4
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i8*, i8** %14, align 8
  %26 = getelementptr i8, i8* %25, i64 -40
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 %28
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8
  %31 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds i8*, i8** %1, i64 5
  %33 = getelementptr inbounds i8*, i8** %1, i64 6
  %34 = getelementptr inbounds %class.IFX_SeekableWriteStream.base, %class.IFX_SeekableWriteStream.base* %31, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15IFX_WriteStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8** %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.IFX_SeekableWriteStream.base* %31 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds i8*, i8** %1, i64 7
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %36 to i8*
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.IFX_SeekableWriteStream.base* %31 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = bitcast i8* %46 to i64*
  store i64 %40, i64* %47, align 8
  %48 = bitcast i8** %32 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %37, align 8
  %50 = getelementptr inbounds i8*, i8** %1, i64 8
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.IFX_SeekableWriteStream.base* %31 to i8**
  %54 = inttoptr i64 %49 to i8*
  %55 = getelementptr i8, i8* %54, i64 -32
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i8, i8* %45, i64 %57
  %59 = bitcast i8* %58 to i64*
  store i64 %52, i64* %59, align 8
  %60 = getelementptr inbounds i8*, i8** %1, i64 9
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load i8*, i8** %53, align 8
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %45, i64 %66
  %68 = bitcast i8* %67 to i64*
  store i64 %62, i64* %68, align 8
  %69 = bitcast i8** %6 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %10, align 8
  %71 = getelementptr inbounds i8*, i8** %1, i64 10
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = inttoptr i64 %70 to i8*
  %75 = getelementptr i8, i8* %74, i64 -32
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %19, i64 %77
  %79 = bitcast i8* %78 to i64*
  store i64 %73, i64* %79, align 8
  %80 = getelementptr inbounds i8*, i8** %1, i64 11
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = load i8*, i8** %14, align 8
  %84 = getelementptr i8, i8* %83, i64 -40
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %19, i64 %86
  %88 = bitcast i8* %87 to i64*
  store i64 %82, i64* %88, align 8
  %89 = getelementptr inbounds i8*, i8** %1, i64 12
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %37, align 8
  %92 = bitcast i8** %1 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %10, align 8
  %94 = getelementptr inbounds i8*, i8** %1, i64 13
  %95 = bitcast i8** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i8*
  %98 = getelementptr i8, i8* %97, i64 -32
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %19, i64 %100
  %102 = bitcast i8* %101 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i8*, i8** %1, i64 14
  %104 = bitcast i8** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i8*, i8** %14, align 8
  %107 = getelementptr i8, i8* %106, i64 -40
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i8, i8* %19, i64 %109
  %111 = bitcast i8* %110 to i64*
  store i64 %105, i64* %111, align 8
  %112 = getelementptr inbounds i8*, i8** %1, i64 15
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  store i64 %114, i64* %37, align 8
  %115 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1
  %116 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %5, i64* %116, align 8
  %117 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 2
  store i64 %3, i64* %117, align 8
  %118 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  store i64 %3, i64* %118, align 8
  %119 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  store i64 0, i64* %119, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamC1ENSt3__110unique_ptrIh13FxFreeDeleterEEm(%class.CFX_MemoryStream* nocapture, i8*, i64) unnamed_addr #1 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5, i32 0
  %6 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5, i32 1
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = bitcast %class.CFX_MemoryStream* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamD2Ev(%class.CFX_MemoryStream* nocapture, i8** nocapture readonly) unnamed_addr #1 align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.CFX_MemoryStream* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds i8*, i8** %1, i64 13
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %10 = inttoptr i64 %4 to i8*
  %11 = getelementptr i8, i8* %10, i64 -32
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds i8*, i8** %1, i64 14
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load i8*, i8** %9, align 8
  %21 = getelementptr i8, i8* %20, i64 -40
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds i8*, i8** %1, i64 15
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 0, i32 1
  %30 = bitcast %class.IFX_SeekableWriteStream.base* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* null, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %2
  tail call void @_Z7FX_FreePv(i8* nonnull %32) #10
  br label %35

35:                                               ; preds = %2, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamD1Ev(%class.CFX_MemoryStream* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5
  %3 = bitcast %"class.fxcrt::Retainable"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %3, align 8
  %4 = bitcast %class.CFX_MemoryStream* %0 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8* null, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %6) #10
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N16CFX_MemoryStreamD1Ev(%class.CFX_MemoryStream* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 -1, i32 5, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 6
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %3, align 8
  %4 = bitcast i64* %2 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds i64, i64* %2, i64 2
  %6 = bitcast i64* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  store i8* null, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %7) #10
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_N16CFX_MemoryStreamD1Ev(%class.CFX_MemoryStream* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %10, align 8
  %11 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %14) #10
  br label %17

17:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_MemoryStreamD0Ev(%class.CFX_MemoryStream*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 5
  %3 = bitcast %"class.fxcrt::Retainable"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %3, align 8
  %4 = bitcast %class.CFX_MemoryStream* %0 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8* null, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %6) #10
  br label %9

9:                                                ; preds = %1, %8
  %10 = bitcast %class.CFX_MemoryStream* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N16CFX_MemoryStreamD0Ev(%class.CFX_MemoryStream*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 -1, i32 5, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 6
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %3, align 8
  %4 = bitcast i64* %2 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds i64, i64* %2, i64 2
  %6 = bitcast i64* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  store i8* null, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %7) #10
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_N16CFX_MemoryStreamD0Ev(%class.CFX_MemoryStream*) unnamed_addr #1 align 2 {
  %2 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 2, i64 3) to i64), i64* %10, align 8
  %11 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV16CFX_MemoryStream, i64 0, inrange i32 1, i64 4) to i64)>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %14) #10
  br label %17

17:                                               ; preds = %1, %16
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN16CFX_MemoryStream7GetSizeEv(%class.CFX_MemoryStream* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZTv0_n24_N16CFX_MemoryStream7GetSizeEv(%class.CFX_MemoryStream* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = bitcast %class.CFX_MemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_MemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN16CFX_MemoryStream5IsEOFEv(%class.CFX_MemoryStream* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp uge i64 %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN16CFX_MemoryStream11GetPositionEv(%class.CFX_MemoryStream* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN16CFX_MemoryStream5FlushEv(%class.CFX_MemoryStream* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn8_N16CFX_MemoryStream5FlushEv(%class.CFX_MemoryStream* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_MemoryStream17ReadBlockAtOffsetEPvlm(%class.CFX_MemoryStream* nocapture, i8*, i64, i64) unnamed_addr #1 align 2 {
  %5 = icmp ne i8* %1, null
  %6 = icmp sgt i64 %2, -1
  %7 = and i1 %5, %6
  %8 = icmp ne i64 %3, 0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %4
  %11 = zext i64 %3 to i65
  %12 = sext i64 %2 to i65
  %13 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %11, i65 %12) #10
  %14 = extractvalue { i65, i1 } %13, 1
  %15 = extractvalue { i65, i1 } %13, 0
  %16 = trunc i65 %15 to i64
  %17 = icmp slt i65 %15, 0
  %18 = or i1 %14, %17
  %19 = icmp eq i64 %16, 0
  %20 = or i1 %18, %19
  br i1 %20, label %30, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %16
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %29, i64 %3, i1 false)
  br label %30

30:                                               ; preds = %25, %21, %10, %4
  %31 = phi i1 [ false, %4 ], [ true, %25 ], [ false, %10 ], [ false, %21 ]
  ret i1 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN16CFX_MemoryStream9ReadBlockEPvm(%class.CFX_MemoryStream* nocapture, i8*, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %36

9:                                                ; preds = %3
  %10 = sub i64 %7, %5
  %11 = icmp ult i64 %10, %2
  %12 = select i1 %11, i64 %10, i64 %2
  %13 = shl i64 %5, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i8* %1, null
  %16 = icmp sgt i64 %13, -4294967296
  %17 = and i1 %15, %16
  %18 = icmp ne i64 %12, 0
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %9
  %21 = zext i64 %12 to i65
  %22 = sext i64 %14 to i65
  %23 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %21, i65 %22) #10
  %24 = extractvalue { i65, i1 } %23, 1
  %25 = extractvalue { i65, i1 } %23, 0
  %26 = trunc i65 %25 to i64
  %27 = icmp slt i65 %25, 0
  %28 = or i1 %24, %27
  %29 = add i64 %26, -1
  %30 = icmp uge i64 %29, %7
  %31 = or i1 %28, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  store i64 %26, i64* %4, align 8
  %33 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %35, i64 %12, i1 false) #10
  br label %36

36:                                               ; preds = %20, %9, %32, %3
  %37 = phi i64 [ 0, %3 ], [ %12, %32 ], [ 0, %9 ], [ 0, %20 ]
  ret i64 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_MemoryStream18WriteBlockAtOffsetEPKvlm(%class.CFX_MemoryStream* nocapture, i8* readonly, i64, i64) unnamed_addr #1 align 2 {
  %5 = icmp ne i8* %1, null
  %6 = icmp sgt i64 %2, -1
  %7 = and i1 %5, %6
  %8 = icmp ne i64 %3, 0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %56

10:                                               ; preds = %4
  %11 = zext i64 %3 to i65
  %12 = sext i64 %2 to i65
  %13 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %11, i65 %12) #10
  %14 = extractvalue { i65, i1 } %13, 1
  %15 = extractvalue { i65, i1 } %13, 0
  %16 = trunc i65 %15 to i64
  %17 = icmp slt i65 %15, 0
  %18 = or i1 %14, %17
  br i1 %18, label %56, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %16
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 2) #10
  %25 = extractvalue { i64, i1 } %24, 1
  br i1 %25, label %56, label %26

26:                                               ; preds = %23
  %27 = extractvalue { i64, i1 } %24, 0
  %28 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %27, i64 65535) #10
  %29 = extractvalue { i64, i1 } %28, 1
  br i1 %29, label %56, label %30, !prof !2

30:                                               ; preds = %26
  %31 = extractvalue { i64, i1 } %28, 0
  %32 = and i64 %31, -65536
  store i64 %32, i64* %20, align 8
  %33 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  store i8* null, i8** %33, align 8
  %37 = tail call i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8* nonnull %34, i64 %32, i64 1) #10
  %38 = load i8*, i8** %33, align 8
  store i8* %37, i8** %33, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  tail call void @_Z7FX_FreePv(i8* nonnull %38) #10
  br label %46

41:                                               ; preds = %30
  %42 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %32, i64 1) #10
  %43 = load i8*, i8** %33, align 8
  store i8* %42, i8** %33, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_Z7FX_FreePv(i8* nonnull %43) #10
  br label %46

46:                                               ; preds = %36, %40, %41, %45, %19
  %47 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 4
  store i64 %16, i64* %47, align 8
  %48 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %1, i64 %3, i1 false)
  %51 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %47, align 8
  %54 = icmp ult i64 %52, %53
  %55 = select i1 %54, i64 %53, i64 %52
  store i64 %55, i64* %51, align 8
  br label %56

56:                                               ; preds = %46, %10, %26, %23, %4
  %57 = phi i1 [ false, %4 ], [ false, %10 ], [ true, %46 ], [ false, %26 ], [ false, %23 ]
  ret i1 %57
}

declare i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8*, i64, i64) local_unnamed_addr #6

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn8_N16CFX_MemoryStream18WriteBlockAtOffsetEPKvlm(%class.CFX_MemoryStream* nocapture, i8* readonly, i64, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CFX_MemoryStream, %class.CFX_MemoryStream* %0, i64 -1, i32 5, i32 1
  %6 = bitcast i64* %5 to %class.CFX_MemoryStream*
  %7 = tail call zeroext i1 @_ZN16CFX_MemoryStream18WriteBlockAtOffsetEPKvlm(%class.CFX_MemoryStream* %6, i8* %1, i64 %2, i64 %3)
  ret i1 %7
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN22IFX_SeekableReadStream5IsEOFEv(%class.IFX_SeekableReadStream*) unnamed_addr #6

declare i64 @_ZN22IFX_SeekableReadStream11GetPositionEv(%class.IFX_SeekableReadStream*) unnamed_addr #6

declare i64 @_ZN22IFX_SeekableReadStream9ReadBlockEPvm(%class.IFX_SeekableReadStream*, i8*, i64) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18IFX_SeekableStreamD1Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18IFX_SeekableStreamD0Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare zeroext i1 @_ZN18IFX_SeekableStream10WriteBlockEPKvm(%class.IFX_SeekableStream*, i8*, i64) unnamed_addr #6

declare zeroext i1 @_ZN18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE(%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N18IFX_SeekableStream10WriteBlockEPKvm(%class.IFX_SeekableStream*, i8*, i64) unnamed_addr #1 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N18IFX_SeekableStream11WriteStringEN5fxcrt18StringViewTemplateIcEE(%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N18IFX_SeekableStreamD1Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N18IFX_SeekableStreamD0Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N18IFX_SeekableStreamD1Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N18IFX_SeekableStreamD0Ev(%class.IFX_SeekableStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare zeroext i1 @_ZN23IFX_SeekableWriteStream10WriteBlockEPKvm(%class.IFX_SeekableWriteStream*, i8*, i64) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23IFX_SeekableWriteStreamD1Ev(%class.IFX_SeekableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23IFX_SeekableWriteStreamD0Ev(%class.IFX_SeekableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23IFX_SeekableWriteStreamD1Ev(%class.IFX_SeekableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N23IFX_SeekableWriteStreamD0Ev(%class.IFX_SeekableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25IFX_RetainableWriteStreamD1Ev(%class.IFX_RetainableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25IFX_RetainableWriteStreamD0Ev(%class.IFX_RetainableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N25IFX_RetainableWriteStreamD1Ev(%class.IFX_RetainableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N25IFX_RetainableWriteStreamD0Ev(%class.IFX_RetainableWriteStream*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15IFX_WriteStreamD2Ev(%class.IFX_WriteStream*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15IFX_WriteStreamD0Ev(%class.IFX_WriteStream*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2002, i32 2000}
