; ModuleID = '../../third_party/dawn/third_party/tint/src/transform/renamer.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/transform/renamer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::ProgramBuilder" = type <{ i32 (...)**, %"class.tint::ProgramBuilder::TypesBuilder", %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.45", %"class.tint::BlockAllocator.54", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", %"class.tint::Source", i8, i8, [6 x i8] }>
%"class.tint::ProgramBuilder::TypesBuilder" = type { %"class.tint::ProgramBuilder"* }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::sem::Manager" = type { %"class.std::__1::unordered_map.15", %"class.tint::BlockAllocator" }
%"class.std::__1::unordered_map.15" = type { %"class.std::__1::__hash_table.16" }
%"class.std::__1::__hash_table.16" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base.20"** }
%"struct.std::__1::__hash_node_base.20" = type { %"struct.std::__1::__hash_node_base.20"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator.22" }
%"class.std::__1::__bucket_list_deallocator.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base.20" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.tint::BlockAllocator" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::unique_ptr.39" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::unique_ptr.39"* }
%"class.tint::BlockAllocator.45" = type { %"class.std::__1::vector.46" }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.tint::ast::Node"* }
%"class.tint::ast::Node" = type { %"class.tint::Castable.64", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.64" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.65" }
%"class.tint::Castable.65" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.tint::BlockAllocator.54" = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::unique_ptr.57" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::unique_ptr.57"* }
%"class.tint::ast::Module" = type { %"class.tint::Castable.63", %"class.std::__1::vector.78", %"class.std::__1::vector.85", %"class.tint::ast::FunctionList", %"class.std::__1::vector.97" }
%"class.tint::Castable.63" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.tint::ast::Node"**, %"class.tint::ast::Node"**, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.tint::ast::Node"** }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.tint::ast::NamedType"**, %"class.tint::ast::NamedType"**, %"class.std::__1::__compressed_pair.89" }
%"class.tint::ast::NamedType" = type { %"class.tint::Castable.87", %"class.tint::Symbol" }
%"class.tint::Castable.87" = type { %"class.tint::ast::Type" }
%"class.tint::ast::Type" = type { %"class.tint::Castable.88" }
%"class.tint::Castable.88" = type { %"class.tint::ast::Node" }
%"class.tint::Symbol" = type { i32, %"class.tint::ProgramID" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.tint::ast::NamedType"** }
%"class.tint::ast::FunctionList" = type { %"class.std::__1::vector.94" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.tint::ast::Function"**, %"class.tint::ast::Function"**, %"class.std::__1::__compressed_pair.123" }
%"class.tint::ast::Function" = type { %"class.tint::Castable.96", %"class.tint::Symbol", %"class.std::__1::vector.97", %"class.tint::ast::Type"*, %"class.tint::ast::BlockStatement"*, %"class.std::__1::vector.101", %"class.std::__1::vector.101" }
%"class.tint::Castable.96" = type { %"class.tint::ast::Node" }
%"class.tint::ast::BlockStatement" = type { %"class.tint::Castable.114", %"class.std::__1::vector.116" }
%"class.tint::Castable.114" = type { %"class.tint::ast::Statement" }
%"class.tint::ast::Statement" = type { %"class.tint::Castable.115" }
%"class.tint::Castable.115" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.tint::ast::Statement"**, %"class.tint::ast::Statement"**, %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.tint::ast::Statement"** }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.tint::ast::Decoration"**, %"class.tint::ast::Decoration"**, %"class.std::__1::__compressed_pair.104" }
%"class.tint::ast::Decoration" = type { %"class.tint::Castable.103" }
%"class.tint::Castable.103" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.tint::ast::Decoration"** }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.tint::ast::Function"** }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.tint::ast::Variable"**, %"class.tint::ast::Variable"**, %"class.std::__1::__compressed_pair.109" }
%"class.tint::ast::Variable" = type <{ %"class.tint::Castable.99", %"class.tint::Symbol", %"class.tint::ast::Type"*, i8, [7 x i8], %"class.tint::ast::Expression"*, %"class.std::__1::vector.101", i32, [4 x i8] }>
%"class.tint::Castable.99" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Expression" = type { %"class.tint::Castable.100" }
%"class.tint::Castable.100" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.tint::ast::Variable"** }
%"class.tint::sem::Info" = type { %"class.std::__1::unordered_map.128" }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map.156", %"class.std::__1::unordered_map.182", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map.156" = type { %"class.std::__1::__hash_table.157" }
%"class.std::__1::__hash_table.157" = type <{ %"class.std::__1::unique_ptr.158", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.176", [4 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.161"** }
%"struct.std::__1::__hash_node_base.161" = type { %"struct.std::__1::__hash_node_base.161"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator.163" }
%"class.std::__1::__bucket_list_deallocator.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.161" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.182" = type { %"class.std::__1::__hash_table.183" }
%"class.std::__1::__hash_table.183" = type <{ %"class.std::__1::unique_ptr.184", %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.202", [4 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186", %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.187"** }
%"struct.std::__1::__hash_node_base.187" = type { %"struct.std::__1::__hash_node_base.187"* }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::__bucket_list_deallocator.189" }
%"class.std::__1::__bucket_list_deallocator.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base.187" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.tint::diag::List" = type { %"class.std::__1::vector.206", i64 }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"class.tint::diag::Diagnostic"*, %"class.tint::diag::Diagnostic"*, %"class.std::__1::__compressed_pair.208" }
%"class.tint::diag::Diagnostic" = type { i32, %"class.tint::Source", %"class.std::__1::basic_string", i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.tint::diag::Diagnostic"* }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::basic_string"* }
%"class.tint::CloneContext" = type { %"class.tint::ProgramBuilder"*, %"class.tint::Program"*, %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.269", %"class.std::__1::vector.293", %"class.std::__1::unordered_map.301", %"class.std::__1::function.329" }
%"class.tint::Program" = type <{ %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.45", %"class.tint::BlockAllocator.54", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map.241" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.263", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.269" = type { %"class.std::__1::__hash_table.270" }
%"class.std::__1::__hash_table.270" = type <{ %"class.std::__1::unique_ptr.271", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.289", [4 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273", %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.274"** }
%"struct.std::__1::__hash_node_base.274" = type { %"struct.std::__1::__hash_node_base.274"* }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::__bucket_list_deallocator.276" }
%"class.std::__1::__bucket_list_deallocator.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.274" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"*, %"class.std::__1::__compressed_pair.296" }
%"struct.tint::CloneContext::CloneableTransform" = type { %"struct.tint::TypeInfo"*, %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.tint::Cloneable"* (%"union.std::__1::__function::__policy_storage"*, %"class.tint::Cloneable"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.tint::CloneContext::CloneableTransform"* }
%"class.std::__1::unordered_map.301" = type { %"class.std::__1::__hash_table.302" }
%"class.std::__1::__hash_table.302" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.323", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.306"** }
%"struct.std::__1::__hash_node_base.306" = type { %"struct.std::__1::__hash_node_base.306"* }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::__bucket_list_deallocator.308" }
%"class.std::__1::__bucket_list_deallocator.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.306" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::function.329" = type { %"class.std::__1::__function::__policy_func.333" }
%"class.std::__1::__function::__policy_func.333" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.334", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.334" = type { void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.tint::transform::Renamer::Data" = type { %"class.tint::Castable", %"class.std::__1::unordered_map" }
%"class.tint::Castable" = type { %"class.tint::transform::Data" }
%"class.tint::transform::Data" = type { %"class.tint::Castable.0" }
%"class.tint::Castable.0" = type { %"class.tint::CastableBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.tint::transform::Renamer" = type <{ %"class.tint::transform::Transform", %"struct.tint::transform::Renamer::Config", [4 x i8] }>
%"class.tint::transform::Transform" = type { i32 (...)** }
%"struct.tint::transform::Renamer::Config" = type { i32 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.393" }
%"struct.std::__1::pair.393" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.tint::transform::Output" = type { %"class.tint::Program", %"class.tint::transform::DataMap" }
%"class.tint::transform::DataMap" = type { %"class.std::__1::unordered_map.213" }
%"class.std::__1::unordered_map.213" = type { %"class.std::__1::__hash_table.214" }
%"class.std::__1::__hash_table.214" = type <{ %"class.std::__1::unique_ptr.215", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", [4 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.218"** }
%"struct.std::__1::__hash_node_base.218" = type { %"struct.std::__1::__hash_node_base.218"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator.220" }
%"class.std::__1::__bucket_list_deallocator.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.218" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.tint::TypeInfo"** }
%"class.std::__1::tuple.450" = type { i8 }
%"class.tint::InternalCompilerError" = type { i8*, i64, %"class.tint::diag::List"*, %"class.std::__1::basic_stringstream" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.335" }
%"class.std::__1::__hash_table.335" = type <{ %"class.std::__1::unique_ptr.336", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.355", [4 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338", %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base.339"** }
%"struct.std::__1::__hash_node_base.339" = type { %"struct.std::__1::__hash_node_base.339"* }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::__bucket_list_deallocator.341" }
%"class.std::__1::__bucket_list_deallocator.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"struct.std::__1::__hash_node_base.339" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.tint::ast::IdentifierExpression" = type { %"class.tint::Castable.361", %"class.tint::Symbol" }
%"class.tint::Castable.361" = type { %"class.tint::ast::Expression" }
%"class.tint::Castable.362" = type { %"class.tint::sem::Expression" }
%"class.tint::sem::Expression" = type { %"class.tint::Castable.363", %"class.tint::ast::Expression"*, %"class.tint::sem::Type"*, %"class.tint::sem::Statement"* }
%"class.tint::Castable.363" = type { %"class.tint::sem::Node" }
%"class.tint::sem::Node" = type { %"class.tint::Castable.364" }
%"class.tint::Castable.364" = type { %"class.tint::CastableBase" }
%"class.tint::sem::Type" = type { %"class.tint::Castable.365" }
%"class.tint::Castable.365" = type { %"class.tint::sem::Node" }
%"class.tint::sem::Statement" = type opaque
%"class.tint::sem::CallTarget" = type { %"class.tint::Castable.375", %"class.tint::sem::Type"*, %"class.std::__1::vector.376" }
%"class.tint::Castable.375" = type { %"class.tint::sem::Node" }
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { %"struct.tint::sem::Parameter"*, %"struct.tint::sem::Parameter"*, %"class.std::__1::__compressed_pair.378" }
%"struct.tint::sem::Parameter" = type <{ %"class.tint::sem::Type"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.tint::sem::Parameter"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.tint::CloneContext"*, %"class.tint::transform::Renamer"*, %"class.std::__1::unordered_map"* }
%"class.std::__1::__function::__default_alloc_func.428" = type { %class.anon.427 }
%class.anon.427 = type { %class.anon.383 }
%class.anon.383 = type { %"class.std::__1::unordered_set"*, %"class.tint::Program"**, %"class.tint::ProgramBuilder"*, %"class.tint::CloneContext"* }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.tint::ast::IdentifierExpression"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4tint12CloneContext10ReplaceAllERKNSt3__18functionIFNS_6SymbolES3_EEE = comdat any

$_ZNK4tint8CastableINS_9transform7Renamer4DataENS1_4DataEE8TypeInfoEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRS7_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN4tint14BlockAllocatorINS_3ast4NodeEE6CreateINS1_20IdentifierExpressionEJRNS_9ProgramIDERKNS_6SourceERNS_6SymbolEEEEPT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_20IdentifierExpressionENS5_ISC_EEEEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4tint12CloneContext18CloneableTransformENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm = comdat any

@_ZN4tint6detail10TypeInfoOfINS_9transform4DataEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [31 x i8] c"tint::transform::Renamer::Data\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_9transform7Renamer4DataEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_9transform4DataEE4infoE, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint9transform7Renamer4DataE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.tint::transform::Renamer::Data"*)* @_ZN4tint9transform7Renamer4DataD2Ev to i8*), i8* bitcast (void (%"struct.tint::transform::Renamer::Data"*)* @_ZN4tint9transform7Renamer4DataD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_9transform7Renamer4DataENS1_4DataEE8TypeInfoEv to i8*)] }, align 8
@_ZTVN4tint9transform7RenamerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::transform::Renamer"*)* @_ZN4tint9transform7RenamerD2Ev to i8*), i8* bitcast (void (%"class.tint::transform::Renamer"*)* @_ZN4tint9transform7RenamerD0Ev to i8*), i8* bitcast (void (%"class.tint::transform::Output"*, %"class.tint::transform::Renamer"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)* @_ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE to i8*)] }, align 8
@__const._ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE.out = private unnamed_addr constant %"class.tint::ProgramBuilder" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.tint::ProgramBuilder::TypesBuilder" { %"class.tint::ProgramBuilder"* inttoptr (i64 -6148914691236517206 to %"class.tint::ProgramBuilder"*) }, %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.tint::sem::Manager" { %"class.std::__1::unordered_map.15" { %"class.std::__1::__hash_table.16" <{ %"class.std::__1::unique_ptr.17" { %"class.std::__1::__compressed_pair.18" { %"struct.std::__1::__compressed_pair_elem.19" { %"struct.std::__1::__hash_node_base.20"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.20"**) }, %"struct.std::__1::__compressed_pair_elem.21" { %"class.std::__1::__bucket_list_deallocator.22" { %"class.std::__1::__compressed_pair.23" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %"struct.std::__1::__hash_node_base.20" { %"struct.std::__1::__hash_node_base.20"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.20"*) } } }, %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::BlockAllocator" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::unique_ptr.39"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.39"*), %"class.std::__1::unique_ptr.39"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.39"*), %"class.std::__1::__compressed_pair.40" { %"struct.std::__1::__compressed_pair_elem.41" { %"class.std::__1::unique_ptr.39"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.39"*) } } } } } }, %"class.tint::BlockAllocator.45" { %"class.std::__1::vector.46" { %"class.std::__1::__vector_base.47" { %"class.std::__1::unique_ptr.48"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.48"*), %"class.std::__1::unique_ptr.48"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.48"*), %"class.std::__1::__compressed_pair.49" { %"struct.std::__1::__compressed_pair_elem.50" { %"class.std::__1::unique_ptr.48"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.48"*) } } } } }, %"class.tint::BlockAllocator.54" { %"class.std::__1::vector.55" { %"class.std::__1::__vector_base.56" { %"class.std::__1::unique_ptr.57"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.57"*), %"class.std::__1::unique_ptr.57"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.57"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::unique_ptr.57"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.57"*) } } } } }, %"class.tint::ast::Module"* inttoptr (i64 -6148914691236517206 to %"class.tint::ast::Module"*), %"class.tint::sem::Info" { %"class.std::__1::unordered_map.128" { %"class.std::__1::__hash_table.129" <{ %"class.std::__1::unique_ptr.130" { %"class.std::__1::__compressed_pair.131" { %"struct.std::__1::__compressed_pair_elem.132" { %"struct.std::__1::__hash_node_base.133"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.133"**) }, %"struct.std::__1::__compressed_pair_elem.134" { %"class.std::__1::__bucket_list_deallocator.135" { %"class.std::__1::__compressed_pair.136" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.140" { %"struct.std::__1::__compressed_pair_elem.141" { %"struct.std::__1::__hash_node_base.133" { %"struct.std::__1::__hash_node_base.133"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.133"*) } } }, %"class.std::__1::__compressed_pair.145" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.150" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.tint::SymbolTable" { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.156" { %"class.std::__1::__hash_table.157" <{ %"class.std::__1::unique_ptr.158" { %"class.std::__1::__compressed_pair.159" { %"struct.std::__1::__compressed_pair_elem.160" { %"struct.std::__1::__hash_node_base.161"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.161"**) }, %"struct.std::__1::__compressed_pair_elem.162" { %"class.std::__1::__bucket_list_deallocator.163" { %"class.std::__1::__compressed_pair.164" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.168" { %"struct.std::__1::__compressed_pair_elem.169" { %"struct.std::__1::__hash_node_base.161" { %"struct.std::__1::__hash_node_base.161"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.161"*) } } }, %"class.std::__1::__compressed_pair.173" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.176" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.182" { %"class.std::__1::__hash_table.183" <{ %"class.std::__1::unique_ptr.184" { %"class.std::__1::__compressed_pair.185" { %"struct.std::__1::__compressed_pair_elem.186" { %"struct.std::__1::__hash_node_base.187"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.187"**) }, %"struct.std::__1::__compressed_pair_elem.188" { %"class.std::__1::__bucket_list_deallocator.189" { %"class.std::__1::__compressed_pair.190" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.194" { %"struct.std::__1::__compressed_pair_elem.195" { %"struct.std::__1::__hash_node_base.187" { %"struct.std::__1::__hash_node_base.187"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.187"*) } } }, %"class.std::__1::__compressed_pair.199" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.202" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, %"class.tint::diag::List" { %"class.std::__1::vector.206" { %"class.std::__1::__vector_base.207" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.std::__1::__compressed_pair.208" { %"struct.std::__1::__compressed_pair_elem.209" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*) } } } }, i64 -6148914691236517206 }, %"class.tint::Source" { %"class.tint::Source::Range" { %"class.tint::Source::Location" { i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.tint::Source::Location" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.tint::Source::FileContent"* inttoptr (i64 -6148914691236517206 to %"class.tint::Source::FileContent"*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE.ctx = private unnamed_addr constant %"class.tint::CloneContext" { %"class.tint::ProgramBuilder"* inttoptr (i64 -6148914691236517206 to %"class.tint::ProgramBuilder"*), %"class.tint::Program"* inttoptr (i64 -6148914691236517206 to %"class.tint::Program"*), %"class.std::__1::unordered_map.241" { %"class.std::__1::__hash_table.242" <{ %"class.std::__1::unique_ptr.243" { %"class.std::__1::__compressed_pair.244" { %"struct.std::__1::__compressed_pair_elem.245" { %"struct.std::__1::__hash_node_base.246"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.246"**) }, %"struct.std::__1::__compressed_pair_elem.247" { %"class.std::__1::__bucket_list_deallocator.248" { %"class.std::__1::__compressed_pair.249" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.253" { %"struct.std::__1::__compressed_pair_elem.254" { %"struct.std::__1::__hash_node_base.246" { %"struct.std::__1::__hash_node_base.246"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.246"*) } } }, %"class.std::__1::__compressed_pair.258" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.263" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.269" { %"class.std::__1::__hash_table.270" <{ %"class.std::__1::unique_ptr.271" { %"class.std::__1::__compressed_pair.272" { %"struct.std::__1::__compressed_pair_elem.273" { %"struct.std::__1::__hash_node_base.274"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.274"**) }, %"struct.std::__1::__compressed_pair_elem.275" { %"class.std::__1::__bucket_list_deallocator.276" { %"class.std::__1::__compressed_pair.277" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.281" { %"struct.std::__1::__compressed_pair_elem.282" { %"struct.std::__1::__hash_node_base.274" { %"struct.std::__1::__hash_node_base.274"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.274"*) } } }, %"class.std::__1::__compressed_pair.286" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.289" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.293" { %"class.std::__1::__vector_base.294" { %"struct.tint::CloneContext::CloneableTransform"* inttoptr (i64 -6148914691236517206 to %"struct.tint::CloneContext::CloneableTransform"*), %"struct.tint::CloneContext::CloneableTransform"* inttoptr (i64 -6148914691236517206 to %"struct.tint::CloneContext::CloneableTransform"*), %"class.std::__1::__compressed_pair.296" { %"struct.std::__1::__compressed_pair_elem.297" { %"struct.tint::CloneContext::CloneableTransform"* inttoptr (i64 -6148914691236517206 to %"struct.tint::CloneContext::CloneableTransform"*) } } } }, %"class.std::__1::unordered_map.301" { %"class.std::__1::__hash_table.302" <{ %"class.std::__1::unique_ptr.303" { %"class.std::__1::__compressed_pair.304" { %"struct.std::__1::__compressed_pair_elem.305" { %"struct.std::__1::__hash_node_base.306"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.306"**) }, %"struct.std::__1::__compressed_pair_elem.307" { %"class.std::__1::__bucket_list_deallocator.308" { %"class.std::__1::__compressed_pair.309" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.313" { %"struct.std::__1::__compressed_pair_elem.314" { %"struct.std::__1::__hash_node_base.306" { %"struct.std::__1::__hash_node_base.306"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.306"*) } } }, %"class.std::__1::__compressed_pair.318" { %"struct.std::__1::__compressed_pair_elem.3" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.323" { %"struct.std::__1::__compressed_pair_elem.13" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::function.329" { %"class.std::__1::__function::__policy_func.333" { %"union.std::__1::__function::__policy_storage" { i8* inttoptr (i64 -6148914691236517206 to i8*), [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, %"struct.std::__1::__function::__policy_invoker.334" { void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)* inttoptr (i64 -6148914691236517206 to void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)*) }, %"struct.std::__1::__function::__policy"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__function::__policy"*) } } }, align 8
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/dawn/third_party/tint/src/transform/renamer.cc\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"MemberAccessorExpression has no semantic info\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"CallExpression has no semantic info\00", align 1
@.str.4 = private unnamed_addr constant [60 x i8] c"../../third_party/dawn/third_party/tint/src/clone_context.h\00", align 1
@.str.5 = private unnamed_addr constant [82 x i8] c"ReplaceAll(const SymbolTransform&) called multiple times on the same CloneContext\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4tint6detail10TypeInfoOfINS_3ast24MemberAccessorExpressionEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint6detail10TypeInfoOfINS_3sem24MemberAccessorExpressionEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint6detail10TypeInfoOfINS_3sem7SwizzleEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint6detail10TypeInfoOfINS_3ast14CallExpressionEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint6detail10TypeInfoOfINS_3sem4CallEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint6detail10TypeInfoOfINS_3sem9IntrinsicEE4infoE = external global %"struct.tint::TypeInfo", align 8
@_ZN4tint9transform12_GLOBAL__N_121kReservedKeywordsHLSLE = internal global [563 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.282, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.404, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.406, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.408, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.412, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.414, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.418, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.454, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.460, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.464, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.468, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.470, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.474, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.482, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.484, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.485, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.488, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.489, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.492, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.494, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.495, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.497, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.498, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.499, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.500, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.501, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.502, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.504, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.505, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.507, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0)], align 16
@_ZN4tint9transform12_GLOBAL__N_120kReservedKeywordsMSLE = internal global [236 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.460, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.468, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.488, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.496, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.683, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.687, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.688, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.689, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.690, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.691, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.692, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.693, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.694, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.695, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.696, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.697, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.699, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.701, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.702, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.703, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.704, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.705, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.706, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.707, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.708, i32 0, i32 0)], align 16
@.str.7 = private unnamed_addr constant [9 x i8] c"AddressU\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"AddressV\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"AddressW\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"AllMemoryBarrier\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"AllMemoryBarrierWithGroupSync\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"AppendStructuredBuffer\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"BINORMAL\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"BLENDINDICES\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"BLENDWEIGHT\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"BlendState\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"BorderColor\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Buffer\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"ByteAddressBuffer\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"COLOR\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"CheckAccessFullyMapped\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"ComparisonFunc\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"CompileShader\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"ComputeShader\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"ConsumeStructuredBuffer\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"D3DCOLORtoUBYTE4\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"DEPTH\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"DepthStencilState\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"DepthStencilView\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"DeviceMemoryBarrier\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"DeviceMemroyBarrierWithGroupSync\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"DomainShader\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"EvaluateAttributeAtCentroid\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"EvaluateAttributeAtSample\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"EvaluateAttributeSnapped\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"FOG\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"Filter\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"GeometryShader\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"GetRenderTargetSampleCount\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"GetRenderTargetSamplePosition\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"GroupMemoryBarrier\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"GroupMemroyBarrierWithGroupSync\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"Hullshader\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"InputPatch\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"InterlockedAdd\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"InterlockedAnd\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"InterlockedCompareExchange\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"InterlockedCompareStore\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"InterlockedExchange\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"InterlockedMax\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"InterlockedMin\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"InterlockedOr\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"InterlockedXor\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"LineStream\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"MaxAnisotropy\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"MaxLOD\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"MinLOD\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"MipLODBias\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"NORMAL\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"OutputPatch\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"POSITION\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"POSITIONT\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"PSIZE\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"PixelShader\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"PointStream\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"Process2DQuadTessFactorsAvg\00", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"Process2DQuadTessFactorsMax\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"Process2DQuadTessFactorsMin\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"ProcessIsolineTessFactors\00", align 1
@.str.72 = private unnamed_addr constant [26 x i8] c"ProcessQuadTessFactorsAvg\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"ProcessQuadTessFactorsMax\00", align 1
@.str.74 = private unnamed_addr constant [26 x i8] c"ProcessQuadTessFactorsMin\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"ProcessTriTessFactorsAvg\00", align 1
@.str.76 = private unnamed_addr constant [25 x i8] c"ProcessTriTessFactorsMax\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"ProcessTriTessFactorsMin\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"RWBuffer\00", align 1
@.str.79 = private unnamed_addr constant [20 x i8] c"RWByteAddressBuffer\00", align 1
@.str.80 = private unnamed_addr constant [19 x i8] c"RWStructuredBuffer\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"RWTexture1D\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c"RWTexture2D\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"RWTexture2DArray\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"RWTexture3D\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"RasterizerState\00", align 1
@.str.86 = private unnamed_addr constant [17 x i8] c"RenderTargetView\00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"SV_ClipDistance\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"SV_Coverage\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"SV_CullDistance\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"SV_Depth\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"SV_DepthGreaterEqual\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"SV_DepthLessEqual\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"SV_DispatchThreadID\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"SV_DomainLocation\00", align 1
@.str.95 = private unnamed_addr constant [16 x i8] c"SV_GSInstanceID\00", align 1
@.str.96 = private unnamed_addr constant [11 x i8] c"SV_GroupID\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"SV_GroupIndex\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"SV_GroupThreadID\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"SV_InnerCoverage\00", align 1
@.str.100 = private unnamed_addr constant [20 x i8] c"SV_InsideTessFactor\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"SV_InstanceID\00", align 1
@.str.102 = private unnamed_addr constant [15 x i8] c"SV_IsFrontFace\00", align 1
@.str.103 = private unnamed_addr constant [24 x i8] c"SV_OutputControlPointID\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"SV_Position\00", align 1
@.str.105 = private unnamed_addr constant [15 x i8] c"SV_PrimitiveID\00", align 1
@.str.106 = private unnamed_addr constant [26 x i8] c"SV_RenderTargetArrayIndex\00", align 1
@.str.107 = private unnamed_addr constant [15 x i8] c"SV_SampleIndex\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"SV_StencilRef\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"SV_Target\00", align 1
@.str.110 = private unnamed_addr constant [14 x i8] c"SV_TessFactor\00", align 1
@.str.111 = private unnamed_addr constant [20 x i8] c"SV_VertexArrayIndex\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"SV_VertexID\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"Sampler\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"Sampler1D\00", align 1
@.str.115 = private unnamed_addr constant [10 x i8] c"Sampler2D\00", align 1
@.str.116 = private unnamed_addr constant [10 x i8] c"Sampler3D\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"SamplerCUBE\00", align 1
@.str.118 = private unnamed_addr constant [17 x i8] c"StructuredBuffer\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"TANGENT\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"TESSFACTOR\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"TEXCOORD\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"Texcoord\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"Texture\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"Texture1D\00", align 1
@.str.125 = private unnamed_addr constant [10 x i8] c"Texture2D\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"Texture2DArray\00", align 1
@.str.127 = private unnamed_addr constant [12 x i8] c"Texture2DMS\00", align 1
@.str.128 = private unnamed_addr constant [17 x i8] c"Texture2DMSArray\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"Texture3D\00", align 1
@.str.130 = private unnamed_addr constant [12 x i8] c"TextureCube\00", align 1
@.str.131 = private unnamed_addr constant [17 x i8] c"TextureCubeArray\00", align 1
@.str.132 = private unnamed_addr constant [15 x i8] c"TriangleStream\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"VFACE\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"VPOS\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"VertexShader\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"allow_uav_condition\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"asdouble\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"asfloat\00", align 1
@.str.140 = private unnamed_addr constant [6 x i8] c"asint\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"asm_fragment\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"asuint\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"bool1\00", align 1
@.str.147 = private unnamed_addr constant [8 x i8] c"bool1x1\00", align 1
@.str.148 = private unnamed_addr constant [8 x i8] c"bool1x2\00", align 1
@.str.149 = private unnamed_addr constant [8 x i8] c"bool1x3\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"bool1x4\00", align 1
@.str.151 = private unnamed_addr constant [6 x i8] c"bool2\00", align 1
@.str.152 = private unnamed_addr constant [8 x i8] c"bool2x1\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"bool2x2\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c"bool2x3\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"bool2x4\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"bool3\00", align 1
@.str.157 = private unnamed_addr constant [8 x i8] c"bool3x1\00", align 1
@.str.158 = private unnamed_addr constant [8 x i8] c"bool3x2\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"bool3x3\00", align 1
@.str.160 = private unnamed_addr constant [8 x i8] c"bool3x4\00", align 1
@.str.161 = private unnamed_addr constant [6 x i8] c"bool4\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"bool4x1\00", align 1
@.str.163 = private unnamed_addr constant [8 x i8] c"bool4x2\00", align 1
@.str.164 = private unnamed_addr constant [8 x i8] c"bool4x3\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"bool4x4\00", align 1
@.str.166 = private unnamed_addr constant [7 x i8] c"branch\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.170 = private unnamed_addr constant [6 x i8] c"catch\00", align 1
@.str.171 = private unnamed_addr constant [8 x i8] c"cbuffer\00", align 1
@.str.172 = private unnamed_addr constant [9 x i8] c"centroid\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.174 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"clip\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"column_major\00", align 1
@.str.177 = private unnamed_addr constant [17 x i8] c"compile_fragment\00", align 1
@.str.178 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.179 = private unnamed_addr constant [11 x i8] c"const_cast\00", align 1
@.str.180 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.181 = private unnamed_addr constant [10 x i8] c"countbits\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"ddx\00", align 1
@.str.183 = private unnamed_addr constant [11 x i8] c"ddx_coarse\00", align 1
@.str.184 = private unnamed_addr constant [9 x i8] c"ddx_fine\00", align 1
@.str.185 = private unnamed_addr constant [4 x i8] c"ddy\00", align 1
@.str.186 = private unnamed_addr constant [11 x i8] c"ddy_coarse\00", align 1
@.str.187 = private unnamed_addr constant [9 x i8] c"ddy_fine\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"degrees\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.190 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.192 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"double1\00", align 1
@.str.194 = private unnamed_addr constant [10 x i8] c"double1x1\00", align 1
@.str.195 = private unnamed_addr constant [10 x i8] c"double1x2\00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"double1x3\00", align 1
@.str.197 = private unnamed_addr constant [10 x i8] c"double1x4\00", align 1
@.str.198 = private unnamed_addr constant [8 x i8] c"double2\00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"double2x1\00", align 1
@.str.200 = private unnamed_addr constant [10 x i8] c"double2x2\00", align 1
@.str.201 = private unnamed_addr constant [10 x i8] c"double2x3\00", align 1
@.str.202 = private unnamed_addr constant [10 x i8] c"double2x4\00", align 1
@.str.203 = private unnamed_addr constant [8 x i8] c"double3\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"double3x1\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"double3x2\00", align 1
@.str.206 = private unnamed_addr constant [10 x i8] c"double3x3\00", align 1
@.str.207 = private unnamed_addr constant [10 x i8] c"double3x4\00", align 1
@.str.208 = private unnamed_addr constant [8 x i8] c"double4\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"double4x1\00", align 1
@.str.210 = private unnamed_addr constant [10 x i8] c"double4x2\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"double4x3\00", align 1
@.str.212 = private unnamed_addr constant [10 x i8] c"double4x4\00", align 1
@.str.213 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"dword\00", align 1
@.str.215 = private unnamed_addr constant [7 x i8] c"dword1\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"dword1x1\00", align 1
@.str.217 = private unnamed_addr constant [9 x i8] c"dword1x2\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"dword1x3\00", align 1
@.str.219 = private unnamed_addr constant [9 x i8] c"dword1x4\00", align 1
@.str.220 = private unnamed_addr constant [7 x i8] c"dword2\00", align 1
@.str.221 = private unnamed_addr constant [9 x i8] c"dword2x1\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"dword2x2\00", align 1
@.str.223 = private unnamed_addr constant [9 x i8] c"dword2x3\00", align 1
@.str.224 = private unnamed_addr constant [9 x i8] c"dword2x4\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"dword3\00", align 1
@.str.226 = private unnamed_addr constant [9 x i8] c"dword3x1\00", align 1
@.str.227 = private unnamed_addr constant [9 x i8] c"dword3x2\00", align 1
@.str.228 = private unnamed_addr constant [9 x i8] c"dword3x3\00", align 1
@.str.229 = private unnamed_addr constant [9 x i8] c"dword3x4\00", align 1
@.str.230 = private unnamed_addr constant [7 x i8] c"dword4\00", align 1
@.str.231 = private unnamed_addr constant [9 x i8] c"dword4x1\00", align 1
@.str.232 = private unnamed_addr constant [9 x i8] c"dword4x2\00", align 1
@.str.233 = private unnamed_addr constant [9 x i8] c"dword4x3\00", align 1
@.str.234 = private unnamed_addr constant [9 x i8] c"dword4x4\00", align 1
@.str.235 = private unnamed_addr constant [13 x i8] c"dynamic_cast\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"errorf\00", align 1
@.str.239 = private unnamed_addr constant [9 x i8] c"explicit\00", align 1
@.str.240 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.241 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"f16to32\00", align 1
@.str.243 = private unnamed_addr constant [9 x i8] c"f32tof16\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.245 = private unnamed_addr constant [8 x i8] c"fastopt\00", align 1
@.str.246 = private unnamed_addr constant [13 x i8] c"firstbithigh\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c"firstbitlow\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"flatten\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"float1\00", align 1
@.str.251 = private unnamed_addr constant [9 x i8] c"float1x1\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"float1x2\00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"float1x3\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"float1x4\00", align 1
@.str.255 = private unnamed_addr constant [7 x i8] c"float2\00", align 1
@.str.256 = private unnamed_addr constant [9 x i8] c"float2x1\00", align 1
@.str.257 = private unnamed_addr constant [9 x i8] c"float2x2\00", align 1
@.str.258 = private unnamed_addr constant [9 x i8] c"float2x3\00", align 1
@.str.259 = private unnamed_addr constant [9 x i8] c"float2x4\00", align 1
@.str.260 = private unnamed_addr constant [7 x i8] c"float3\00", align 1
@.str.261 = private unnamed_addr constant [9 x i8] c"float3x1\00", align 1
@.str.262 = private unnamed_addr constant [9 x i8] c"float3x2\00", align 1
@.str.263 = private unnamed_addr constant [9 x i8] c"float3x3\00", align 1
@.str.264 = private unnamed_addr constant [9 x i8] c"float3x4\00", align 1
@.str.265 = private unnamed_addr constant [7 x i8] c"float4\00", align 1
@.str.266 = private unnamed_addr constant [9 x i8] c"float4x1\00", align 1
@.str.267 = private unnamed_addr constant [9 x i8] c"float4x2\00", align 1
@.str.268 = private unnamed_addr constant [9 x i8] c"float4x3\00", align 1
@.str.269 = private unnamed_addr constant [9 x i8] c"float4x4\00", align 1
@.str.270 = private unnamed_addr constant [5 x i8] c"fmod\00", align 1
@.str.271 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.272 = private unnamed_addr constant [10 x i8] c"forcecase\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c"frac\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"friend\00", align 1
@.str.275 = private unnamed_addr constant [8 x i8] c"fxgroup\00", align 1
@.str.276 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.277 = private unnamed_addr constant [12 x i8] c"groupshared\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.279 = private unnamed_addr constant [6 x i8] c"half1\00", align 1
@.str.280 = private unnamed_addr constant [8 x i8] c"half1x1\00", align 1
@.str.281 = private unnamed_addr constant [8 x i8] c"half1x2\00", align 1
@.str.282 = private unnamed_addr constant [8 x i8] c"half1x3\00", align 1
@.str.283 = private unnamed_addr constant [8 x i8] c"half1x4\00", align 1
@.str.284 = private unnamed_addr constant [6 x i8] c"half2\00", align 1
@.str.285 = private unnamed_addr constant [8 x i8] c"half2x1\00", align 1
@.str.286 = private unnamed_addr constant [8 x i8] c"half2x2\00", align 1
@.str.287 = private unnamed_addr constant [8 x i8] c"half2x3\00", align 1
@.str.288 = private unnamed_addr constant [8 x i8] c"half2x4\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"half3\00", align 1
@.str.290 = private unnamed_addr constant [8 x i8] c"half3x1\00", align 1
@.str.291 = private unnamed_addr constant [8 x i8] c"half3x2\00", align 1
@.str.292 = private unnamed_addr constant [8 x i8] c"half3x3\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c"half3x4\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"half4\00", align 1
@.str.295 = private unnamed_addr constant [8 x i8] c"half4x1\00", align 1
@.str.296 = private unnamed_addr constant [8 x i8] c"half4x2\00", align 1
@.str.297 = private unnamed_addr constant [8 x i8] c"half4x3\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"half4x4\00", align 1
@.str.299 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"inout\00", align 1
@.str.303 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"int1\00", align 1
@.str.305 = private unnamed_addr constant [7 x i8] c"int1x1\00", align 1
@.str.306 = private unnamed_addr constant [7 x i8] c"int1x2\00", align 1
@.str.307 = private unnamed_addr constant [7 x i8] c"int1x3\00", align 1
@.str.308 = private unnamed_addr constant [7 x i8] c"int1x4\00", align 1
@.str.309 = private unnamed_addr constant [5 x i8] c"int2\00", align 1
@.str.310 = private unnamed_addr constant [7 x i8] c"int2x1\00", align 1
@.str.311 = private unnamed_addr constant [7 x i8] c"int2x2\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"int2x3\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"int2x4\00", align 1
@.str.314 = private unnamed_addr constant [5 x i8] c"int3\00", align 1
@.str.315 = private unnamed_addr constant [7 x i8] c"int3x1\00", align 1
@.str.316 = private unnamed_addr constant [7 x i8] c"int3x2\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"int3x3\00", align 1
@.str.318 = private unnamed_addr constant [7 x i8] c"int3x4\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"int4\00", align 1
@.str.320 = private unnamed_addr constant [7 x i8] c"int4x1\00", align 1
@.str.321 = private unnamed_addr constant [7 x i8] c"int4x2\00", align 1
@.str.322 = private unnamed_addr constant [7 x i8] c"int4x3\00", align 1
@.str.323 = private unnamed_addr constant [7 x i8] c"int4x4\00", align 1
@.str.324 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@.str.325 = private unnamed_addr constant [9 x i8] c"isfinite\00", align 1
@.str.326 = private unnamed_addr constant [6 x i8] c"isinf\00", align 1
@.str.327 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.328 = private unnamed_addr constant [5 x i8] c"lerp\00", align 1
@.str.329 = private unnamed_addr constant [8 x i8] c"lineadj\00", align 1
@.str.330 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.331 = private unnamed_addr constant [4 x i8] c"lit\00", align 1
@.str.332 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.333 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.334 = private unnamed_addr constant [5 x i8] c"loop\00", align 1
@.str.335 = private unnamed_addr constant [4 x i8] c"mad\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.337 = private unnamed_addr constant [11 x i8] c"min10float\00", align 1
@.str.338 = private unnamed_addr constant [12 x i8] c"min10float1\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"min10float1x1\00", align 1
@.str.340 = private unnamed_addr constant [14 x i8] c"min10float1x2\00", align 1
@.str.341 = private unnamed_addr constant [14 x i8] c"min10float1x3\00", align 1
@.str.342 = private unnamed_addr constant [14 x i8] c"min10float1x4\00", align 1
@.str.343 = private unnamed_addr constant [12 x i8] c"min10float2\00", align 1
@.str.344 = private unnamed_addr constant [14 x i8] c"min10float2x1\00", align 1
@.str.345 = private unnamed_addr constant [14 x i8] c"min10float2x2\00", align 1
@.str.346 = private unnamed_addr constant [14 x i8] c"min10float2x3\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"min10float2x4\00", align 1
@.str.348 = private unnamed_addr constant [12 x i8] c"min10float3\00", align 1
@.str.349 = private unnamed_addr constant [14 x i8] c"min10float3x1\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"min10float3x2\00", align 1
@.str.351 = private unnamed_addr constant [14 x i8] c"min10float3x3\00", align 1
@.str.352 = private unnamed_addr constant [14 x i8] c"min10float3x4\00", align 1
@.str.353 = private unnamed_addr constant [12 x i8] c"min10float4\00", align 1
@.str.354 = private unnamed_addr constant [14 x i8] c"min10float4x1\00", align 1
@.str.355 = private unnamed_addr constant [14 x i8] c"min10float4x2\00", align 1
@.str.356 = private unnamed_addr constant [14 x i8] c"min10float4x3\00", align 1
@.str.357 = private unnamed_addr constant [14 x i8] c"min10float4x4\00", align 1
@.str.358 = private unnamed_addr constant [9 x i8] c"min12int\00", align 1
@.str.359 = private unnamed_addr constant [10 x i8] c"min12int1\00", align 1
@.str.360 = private unnamed_addr constant [12 x i8] c"min12int1x1\00", align 1
@.str.361 = private unnamed_addr constant [12 x i8] c"min12int1x2\00", align 1
@.str.362 = private unnamed_addr constant [12 x i8] c"min12int1x3\00", align 1
@.str.363 = private unnamed_addr constant [12 x i8] c"min12int1x4\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"min12int2\00", align 1
@.str.365 = private unnamed_addr constant [12 x i8] c"min12int2x1\00", align 1
@.str.366 = private unnamed_addr constant [12 x i8] c"min12int2x2\00", align 1
@.str.367 = private unnamed_addr constant [12 x i8] c"min12int2x3\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"min12int2x4\00", align 1
@.str.369 = private unnamed_addr constant [10 x i8] c"min12int3\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"min12int3x1\00", align 1
@.str.371 = private unnamed_addr constant [12 x i8] c"min12int3x2\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"min12int3x3\00", align 1
@.str.373 = private unnamed_addr constant [12 x i8] c"min12int3x4\00", align 1
@.str.374 = private unnamed_addr constant [10 x i8] c"min12int4\00", align 1
@.str.375 = private unnamed_addr constant [12 x i8] c"min12int4x1\00", align 1
@.str.376 = private unnamed_addr constant [12 x i8] c"min12int4x2\00", align 1
@.str.377 = private unnamed_addr constant [12 x i8] c"min12int4x3\00", align 1
@.str.378 = private unnamed_addr constant [12 x i8] c"min12int4x4\00", align 1
@.str.379 = private unnamed_addr constant [11 x i8] c"min16float\00", align 1
@.str.380 = private unnamed_addr constant [12 x i8] c"min16float1\00", align 1
@.str.381 = private unnamed_addr constant [14 x i8] c"min16float1x1\00", align 1
@.str.382 = private unnamed_addr constant [14 x i8] c"min16float1x2\00", align 1
@.str.383 = private unnamed_addr constant [14 x i8] c"min16float1x3\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"min16float1x4\00", align 1
@.str.385 = private unnamed_addr constant [12 x i8] c"min16float2\00", align 1
@.str.386 = private unnamed_addr constant [14 x i8] c"min16float2x1\00", align 1
@.str.387 = private unnamed_addr constant [14 x i8] c"min16float2x2\00", align 1
@.str.388 = private unnamed_addr constant [14 x i8] c"min16float2x3\00", align 1
@.str.389 = private unnamed_addr constant [14 x i8] c"min16float2x4\00", align 1
@.str.390 = private unnamed_addr constant [12 x i8] c"min16float3\00", align 1
@.str.391 = private unnamed_addr constant [14 x i8] c"min16float3x1\00", align 1
@.str.392 = private unnamed_addr constant [14 x i8] c"min16float3x2\00", align 1
@.str.393 = private unnamed_addr constant [14 x i8] c"min16float3x3\00", align 1
@.str.394 = private unnamed_addr constant [14 x i8] c"min16float3x4\00", align 1
@.str.395 = private unnamed_addr constant [12 x i8] c"min16float4\00", align 1
@.str.396 = private unnamed_addr constant [14 x i8] c"min16float4x1\00", align 1
@.str.397 = private unnamed_addr constant [14 x i8] c"min16float4x2\00", align 1
@.str.398 = private unnamed_addr constant [14 x i8] c"min16float4x3\00", align 1
@.str.399 = private unnamed_addr constant [14 x i8] c"min16float4x4\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"min16int\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"min16int1\00", align 1
@.str.402 = private unnamed_addr constant [12 x i8] c"min16int1x1\00", align 1
@.str.403 = private unnamed_addr constant [12 x i8] c"min16int1x2\00", align 1
@.str.404 = private unnamed_addr constant [12 x i8] c"min16int1x3\00", align 1
@.str.405 = private unnamed_addr constant [12 x i8] c"min16int1x4\00", align 1
@.str.406 = private unnamed_addr constant [10 x i8] c"min16int2\00", align 1
@.str.407 = private unnamed_addr constant [12 x i8] c"min16int2x1\00", align 1
@.str.408 = private unnamed_addr constant [12 x i8] c"min16int2x2\00", align 1
@.str.409 = private unnamed_addr constant [12 x i8] c"min16int2x3\00", align 1
@.str.410 = private unnamed_addr constant [12 x i8] c"min16int2x4\00", align 1
@.str.411 = private unnamed_addr constant [10 x i8] c"min16int3\00", align 1
@.str.412 = private unnamed_addr constant [12 x i8] c"min16int3x1\00", align 1
@.str.413 = private unnamed_addr constant [12 x i8] c"min16int3x2\00", align 1
@.str.414 = private unnamed_addr constant [12 x i8] c"min16int3x3\00", align 1
@.str.415 = private unnamed_addr constant [12 x i8] c"min16int3x4\00", align 1
@.str.416 = private unnamed_addr constant [10 x i8] c"min16int4\00", align 1
@.str.417 = private unnamed_addr constant [12 x i8] c"min16int4x1\00", align 1
@.str.418 = private unnamed_addr constant [12 x i8] c"min16int4x2\00", align 1
@.str.419 = private unnamed_addr constant [12 x i8] c"min16int4x3\00", align 1
@.str.420 = private unnamed_addr constant [12 x i8] c"min16int4x4\00", align 1
@.str.421 = private unnamed_addr constant [10 x i8] c"min16uint\00", align 1
@.str.422 = private unnamed_addr constant [11 x i8] c"min16uint1\00", align 1
@.str.423 = private unnamed_addr constant [13 x i8] c"min16uint1x1\00", align 1
@.str.424 = private unnamed_addr constant [13 x i8] c"min16uint1x2\00", align 1
@.str.425 = private unnamed_addr constant [13 x i8] c"min16uint1x3\00", align 1
@.str.426 = private unnamed_addr constant [13 x i8] c"min16uint1x4\00", align 1
@.str.427 = private unnamed_addr constant [11 x i8] c"min16uint2\00", align 1
@.str.428 = private unnamed_addr constant [13 x i8] c"min16uint2x1\00", align 1
@.str.429 = private unnamed_addr constant [13 x i8] c"min16uint2x2\00", align 1
@.str.430 = private unnamed_addr constant [13 x i8] c"min16uint2x3\00", align 1
@.str.431 = private unnamed_addr constant [13 x i8] c"min16uint2x4\00", align 1
@.str.432 = private unnamed_addr constant [11 x i8] c"min16uint3\00", align 1
@.str.433 = private unnamed_addr constant [13 x i8] c"min16uint3x1\00", align 1
@.str.434 = private unnamed_addr constant [13 x i8] c"min16uint3x2\00", align 1
@.str.435 = private unnamed_addr constant [13 x i8] c"min16uint3x3\00", align 1
@.str.436 = private unnamed_addr constant [13 x i8] c"min16uint3x4\00", align 1
@.str.437 = private unnamed_addr constant [11 x i8] c"min16uint4\00", align 1
@.str.438 = private unnamed_addr constant [13 x i8] c"min16uint4x1\00", align 1
@.str.439 = private unnamed_addr constant [13 x i8] c"min16uint4x2\00", align 1
@.str.440 = private unnamed_addr constant [13 x i8] c"min16uint4x3\00", align 1
@.str.441 = private unnamed_addr constant [13 x i8] c"min16uint4x4\00", align 1
@.str.442 = private unnamed_addr constant [6 x i8] c"msad4\00", align 1
@.str.443 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str.444 = private unnamed_addr constant [8 x i8] c"mutable\00", align 1
@.str.445 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1
@.str.446 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.447 = private unnamed_addr constant [16 x i8] c"nointerpolation\00", align 1
@.str.448 = private unnamed_addr constant [6 x i8] c"noise\00", align 1
@.str.449 = private unnamed_addr constant [14 x i8] c"noperspective\00", align 1
@.str.450 = private unnamed_addr constant [11 x i8] c"numthreads\00", align 1
@.str.451 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@.str.452 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.453 = private unnamed_addr constant [11 x i8] c"packoffset\00", align 1
@.str.454 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.455 = private unnamed_addr constant [14 x i8] c"pixelfragment\00", align 1
@.str.456 = private unnamed_addr constant [12 x i8] c"pixelshader\00", align 1
@.str.457 = private unnamed_addr constant [6 x i8] c"point\00", align 1
@.str.458 = private unnamed_addr constant [8 x i8] c"precise\00", align 1
@.str.459 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.460 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.461 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.462 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"radians\00", align 1
@.str.464 = private unnamed_addr constant [4 x i8] c"rcp\00", align 1
@.str.465 = private unnamed_addr constant [8 x i8] c"refract\00", align 1
@.str.466 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.467 = private unnamed_addr constant [17 x i8] c"reinterpret_cast\00", align 1
@.str.468 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.469 = private unnamed_addr constant [10 x i8] c"row_major\00", align 1
@.str.470 = private unnamed_addr constant [6 x i8] c"rsqrt\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.472 = private unnamed_addr constant [8 x i8] c"sampler\00", align 1
@.str.473 = private unnamed_addr constant [10 x i8] c"sampler1D\00", align 1
@.str.474 = private unnamed_addr constant [10 x i8] c"sampler2D\00", align 1
@.str.475 = private unnamed_addr constant [10 x i8] c"sampler3D\00", align 1
@.str.476 = private unnamed_addr constant [12 x i8] c"samplerCUBE\00", align 1
@.str.477 = private unnamed_addr constant [14 x i8] c"sampler_state\00", align 1
@.str.478 = private unnamed_addr constant [9 x i8] c"saturate\00", align 1
@.str.479 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.480 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.481 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.482 = private unnamed_addr constant [7 x i8] c"sincos\00", align 1
@.str.483 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.484 = private unnamed_addr constant [6 x i8] c"snorm\00", align 1
@.str.485 = private unnamed_addr constant [11 x i8] c"stateblock\00", align 1
@.str.486 = private unnamed_addr constant [17 x i8] c"stateblock_state\00", align 1
@.str.487 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.488 = private unnamed_addr constant [12 x i8] c"static_cast\00", align 1
@.str.489 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.490 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.491 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.492 = private unnamed_addr constant [8 x i8] c"tbuffer\00", align 1
@.str.493 = private unnamed_addr constant [10 x i8] c"technique\00", align 1
@.str.494 = private unnamed_addr constant [12 x i8] c"technique10\00", align 1
@.str.495 = private unnamed_addr constant [12 x i8] c"technique11\00", align 1
@.str.496 = private unnamed_addr constant [9 x i8] c"template\00", align 1
@.str.497 = private unnamed_addr constant [6 x i8] c"tex1D\00", align 1
@.str.498 = private unnamed_addr constant [10 x i8] c"tex1Dbias\00", align 1
@.str.499 = private unnamed_addr constant [10 x i8] c"tex1Dgrad\00", align 1
@.str.500 = private unnamed_addr constant [9 x i8] c"tex1Dlod\00", align 1
@.str.501 = private unnamed_addr constant [10 x i8] c"tex1Dproj\00", align 1
@.str.502 = private unnamed_addr constant [6 x i8] c"tex2D\00", align 1
@.str.503 = private unnamed_addr constant [10 x i8] c"tex2Dbias\00", align 1
@.str.504 = private unnamed_addr constant [10 x i8] c"tex2Dgrad\00", align 1
@.str.505 = private unnamed_addr constant [9 x i8] c"tex2Dlod\00", align 1
@.str.506 = private unnamed_addr constant [10 x i8] c"tex2Dproj\00", align 1
@.str.507 = private unnamed_addr constant [6 x i8] c"tex3D\00", align 1
@.str.508 = private unnamed_addr constant [10 x i8] c"tex3Dbias\00", align 1
@.str.509 = private unnamed_addr constant [10 x i8] c"tex3Dgrad\00", align 1
@.str.510 = private unnamed_addr constant [9 x i8] c"tex3Dlod\00", align 1
@.str.511 = private unnamed_addr constant [10 x i8] c"tex3Dproj\00", align 1
@.str.512 = private unnamed_addr constant [8 x i8] c"texCUBE\00", align 1
@.str.513 = private unnamed_addr constant [12 x i8] c"texCUBEbias\00", align 1
@.str.514 = private unnamed_addr constant [12 x i8] c"texCUBEgrad\00", align 1
@.str.515 = private unnamed_addr constant [11 x i8] c"texCUBElod\00", align 1
@.str.516 = private unnamed_addr constant [12 x i8] c"texCUBEproj\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"texture\00", align 1
@.str.518 = private unnamed_addr constant [10 x i8] c"texture1D\00", align 1
@.str.519 = private unnamed_addr constant [15 x i8] c"texture1DArray\00", align 1
@.str.520 = private unnamed_addr constant [10 x i8] c"texture2D\00", align 1
@.str.521 = private unnamed_addr constant [15 x i8] c"texture2DArray\00", align 1
@.str.522 = private unnamed_addr constant [12 x i8] c"texture2DMS\00", align 1
@.str.523 = private unnamed_addr constant [17 x i8] c"texture2DMSArray\00", align 1
@.str.524 = private unnamed_addr constant [10 x i8] c"texture3D\00", align 1
@.str.525 = private unnamed_addr constant [12 x i8] c"textureCube\00", align 1
@.str.526 = private unnamed_addr constant [17 x i8] c"textureCubeArray\00", align 1
@.str.527 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"transpose\00", align 1
@.str.530 = private unnamed_addr constant [9 x i8] c"triangle\00", align 1
@.str.531 = private unnamed_addr constant [12 x i8] c"triangleadj\00", align 1
@.str.532 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.533 = private unnamed_addr constant [4 x i8] c"try\00", align 1
@.str.534 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"typename\00", align 1
@.str.536 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.537 = private unnamed_addr constant [6 x i8] c"uint1\00", align 1
@.str.538 = private unnamed_addr constant [8 x i8] c"uint1x1\00", align 1
@.str.539 = private unnamed_addr constant [8 x i8] c"uint1x2\00", align 1
@.str.540 = private unnamed_addr constant [8 x i8] c"uint1x3\00", align 1
@.str.541 = private unnamed_addr constant [8 x i8] c"uint1x4\00", align 1
@.str.542 = private unnamed_addr constant [6 x i8] c"uint2\00", align 1
@.str.543 = private unnamed_addr constant [8 x i8] c"uint2x1\00", align 1
@.str.544 = private unnamed_addr constant [8 x i8] c"uint2x2\00", align 1
@.str.545 = private unnamed_addr constant [8 x i8] c"uint2x3\00", align 1
@.str.546 = private unnamed_addr constant [8 x i8] c"uint2x4\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"uint3\00", align 1
@.str.548 = private unnamed_addr constant [8 x i8] c"uint3x1\00", align 1
@.str.549 = private unnamed_addr constant [8 x i8] c"uint3x2\00", align 1
@.str.550 = private unnamed_addr constant [8 x i8] c"uint3x3\00", align 1
@.str.551 = private unnamed_addr constant [8 x i8] c"uint3x4\00", align 1
@.str.552 = private unnamed_addr constant [6 x i8] c"uint4\00", align 1
@.str.553 = private unnamed_addr constant [8 x i8] c"uint4x1\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"uint4x2\00", align 1
@.str.555 = private unnamed_addr constant [8 x i8] c"uint4x3\00", align 1
@.str.556 = private unnamed_addr constant [8 x i8] c"uint4x4\00", align 1
@.str.557 = private unnamed_addr constant [8 x i8] c"uniform\00", align 1
@.str.558 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.559 = private unnamed_addr constant [6 x i8] c"unorm\00", align 1
@.str.560 = private unnamed_addr constant [7 x i8] c"unroll\00", align 1
@.str.561 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.562 = private unnamed_addr constant [6 x i8] c"using\00", align 1
@.str.563 = private unnamed_addr constant [7 x i8] c"vector\00", align 1
@.str.564 = private unnamed_addr constant [15 x i8] c"vertexfragment\00", align 1
@.str.565 = private unnamed_addr constant [13 x i8] c"vertexshader\00", align 1
@.str.566 = private unnamed_addr constant [8 x i8] c"virtual\00", align 1
@.str.567 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.568 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.570 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.571 = private unnamed_addr constant [8 x i8] c"alignas\00", align 1
@.str.572 = private unnamed_addr constant [8 x i8] c"alignof\00", align 1
@.str.573 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.574 = private unnamed_addr constant [7 x i8] c"and_eq\00", align 1
@.str.575 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.576 = private unnamed_addr constant [10 x i8] c"array_ref\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"as_type\00", align 1
@.str.578 = private unnamed_addr constant [7 x i8] c"atomic\00", align 1
@.str.579 = private unnamed_addr constant [12 x i8] c"atomic_bool\00", align 1
@.str.580 = private unnamed_addr constant [11 x i8] c"atomic_int\00", align 1
@.str.581 = private unnamed_addr constant [12 x i8] c"atomic_uint\00", align 1
@.str.582 = private unnamed_addr constant [7 x i8] c"bitand\00", align 1
@.str.583 = private unnamed_addr constant [6 x i8] c"bitor\00", align 1
@.str.584 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.585 = private unnamed_addr constant [9 x i8] c"char16_t\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"char2\00", align 1
@.str.587 = private unnamed_addr constant [6 x i8] c"char3\00", align 1
@.str.588 = private unnamed_addr constant [9 x i8] c"char32_t\00", align 1
@.str.589 = private unnamed_addr constant [6 x i8] c"char4\00", align 1
@.str.590 = private unnamed_addr constant [6 x i8] c"compl\00", align 1
@.str.591 = private unnamed_addr constant [16 x i8] c"const_reference\00", align 1
@.str.592 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.593 = private unnamed_addr constant [10 x i8] c"constexpr\00", align 1
@.str.594 = private unnamed_addr constant [9 x i8] c"decltype\00", align 1
@.str.595 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.596 = private unnamed_addr constant [8 x i8] c"depth2d\00", align 1
@.str.597 = private unnamed_addr constant [14 x i8] c"depth2d_array\00", align 1
@.str.598 = private unnamed_addr constant [11 x i8] c"depth2d_ms\00", align 1
@.str.599 = private unnamed_addr constant [17 x i8] c"depth2d_ms_array\00", align 1
@.str.600 = private unnamed_addr constant [10 x i8] c"depthcube\00", align 1
@.str.601 = private unnamed_addr constant [16 x i8] c"depthcube_array\00", align 1
@.str.602 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.603 = private unnamed_addr constant [17 x i8] c"discard_fragment\00", align 1
@.str.604 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@.str.605 = private unnamed_addr constant [9 x i8] c"fragment\00", align 1
@.str.606 = private unnamed_addr constant [11 x i8] c"imageblock\00", align 1
@.str.607 = private unnamed_addr constant [8 x i8] c"int16_t\00", align 1
@.str.608 = private unnamed_addr constant [8 x i8] c"int32_t\00", align 1
@.str.609 = private unnamed_addr constant [8 x i8] c"int64_t\00", align 1
@.str.610 = private unnamed_addr constant [7 x i8] c"int8_t\00", align 1
@.str.611 = private unnamed_addr constant [7 x i8] c"kernel\00", align 1
@.str.612 = private unnamed_addr constant [6 x i8] c"long2\00", align 1
@.str.613 = private unnamed_addr constant [6 x i8] c"long3\00", align 1
@.str.614 = private unnamed_addr constant [6 x i8] c"long4\00", align 1
@.str.615 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.616 = private unnamed_addr constant [6 x i8] c"metal\00", align 1
@.str.617 = private unnamed_addr constant [9 x i8] c"noexcept\00", align 1
@.str.618 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.619 = private unnamed_addr constant [7 x i8] c"not_eq\00", align 1
@.str.620 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.621 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.622 = private unnamed_addr constant [6 x i8] c"or_eq\00", align 1
@.str.623 = private unnamed_addr constant [9 x i8] c"override\00", align 1
@.str.624 = private unnamed_addr constant [13 x i8] c"packed_bool2\00", align 1
@.str.625 = private unnamed_addr constant [13 x i8] c"packed_bool3\00", align 1
@.str.626 = private unnamed_addr constant [13 x i8] c"packed_bool4\00", align 1
@.str.627 = private unnamed_addr constant [13 x i8] c"packed_char2\00", align 1
@.str.628 = private unnamed_addr constant [13 x i8] c"packed_char3\00", align 1
@.str.629 = private unnamed_addr constant [13 x i8] c"packed_char4\00", align 1
@.str.630 = private unnamed_addr constant [14 x i8] c"packed_float2\00", align 1
@.str.631 = private unnamed_addr constant [14 x i8] c"packed_float3\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"packed_float4\00", align 1
@.str.633 = private unnamed_addr constant [13 x i8] c"packed_half2\00", align 1
@.str.634 = private unnamed_addr constant [13 x i8] c"packed_half3\00", align 1
@.str.635 = private unnamed_addr constant [13 x i8] c"packed_half4\00", align 1
@.str.636 = private unnamed_addr constant [12 x i8] c"packed_int2\00", align 1
@.str.637 = private unnamed_addr constant [12 x i8] c"packed_int3\00", align 1
@.str.638 = private unnamed_addr constant [12 x i8] c"packed_int4\00", align 1
@.str.639 = private unnamed_addr constant [14 x i8] c"packed_short2\00", align 1
@.str.640 = private unnamed_addr constant [14 x i8] c"packed_short3\00", align 1
@.str.641 = private unnamed_addr constant [14 x i8] c"packed_short4\00", align 1
@.str.642 = private unnamed_addr constant [14 x i8] c"packed_uchar2\00", align 1
@.str.643 = private unnamed_addr constant [14 x i8] c"packed_uchar3\00", align 1
@.str.644 = private unnamed_addr constant [14 x i8] c"packed_uchar4\00", align 1
@.str.645 = private unnamed_addr constant [13 x i8] c"packed_uint2\00", align 1
@.str.646 = private unnamed_addr constant [13 x i8] c"packed_uint3\00", align 1
@.str.647 = private unnamed_addr constant [13 x i8] c"packed_uint4\00", align 1
@.str.648 = private unnamed_addr constant [15 x i8] c"packed_ushort2\00", align 1
@.str.649 = private unnamed_addr constant [15 x i8] c"packed_ushort3\00", align 1
@.str.650 = private unnamed_addr constant [15 x i8] c"packed_ushort4\00", align 1
@.str.651 = private unnamed_addr constant [20 x i8] c"patch_control_point\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"ptrdiff_t\00", align 1
@.str.653 = private unnamed_addr constant [9 x i8] c"r16snorm\00", align 1
@.str.654 = private unnamed_addr constant [9 x i8] c"r16unorm\00", align 1
@.str.655 = private unnamed_addr constant [8 x i8] c"r8unorm\00", align 1
@.str.656 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.657 = private unnamed_addr constant [9 x i8] c"rg11b10f\00", align 1
@.str.658 = private unnamed_addr constant [10 x i8] c"rg16snorm\00", align 1
@.str.659 = private unnamed_addr constant [10 x i8] c"rg16unorm\00", align 1
@.str.660 = private unnamed_addr constant [9 x i8] c"rg8snorm\00", align 1
@.str.661 = private unnamed_addr constant [9 x i8] c"rg8unorm\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"rgb10a2\00", align 1
@.str.663 = private unnamed_addr constant [7 x i8] c"rgb9e5\00", align 1
@.str.664 = private unnamed_addr constant [12 x i8] c"rgba16snorm\00", align 1
@.str.665 = private unnamed_addr constant [12 x i8] c"rgba16unorm\00", align 1
@.str.666 = private unnamed_addr constant [11 x i8] c"rgba8snorm\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"rgba8unorm\00", align 1
@.str.668 = private unnamed_addr constant [7 x i8] c"short2\00", align 1
@.str.669 = private unnamed_addr constant [7 x i8] c"short3\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"short4\00", align 1
@.str.671 = private unnamed_addr constant [7 x i8] c"size_t\00", align 1
@.str.672 = private unnamed_addr constant [12 x i8] c"srgba8unorm\00", align 1
@.str.673 = private unnamed_addr constant [14 x i8] c"static_assert\00", align 1
@.str.674 = private unnamed_addr constant [10 x i8] c"texture1d\00", align 1
@.str.675 = private unnamed_addr constant [16 x i8] c"texture1d_array\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"texture2d\00", align 1
@.str.677 = private unnamed_addr constant [16 x i8] c"texture2d_array\00", align 1
@.str.678 = private unnamed_addr constant [13 x i8] c"texture2d_ms\00", align 1
@.str.679 = private unnamed_addr constant [19 x i8] c"texture2d_ms_array\00", align 1
@.str.680 = private unnamed_addr constant [10 x i8] c"texture3d\00", align 1
@.str.681 = private unnamed_addr constant [15 x i8] c"texture_buffer\00", align 1
@.str.682 = private unnamed_addr constant [12 x i8] c"texturecube\00", align 1
@.str.683 = private unnamed_addr constant [18 x i8] c"texturecube_array\00", align 1
@.str.684 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@.str.685 = private unnamed_addr constant [13 x i8] c"thread_local\00", align 1
@.str.686 = private unnamed_addr constant [12 x i8] c"threadgroup\00", align 1
@.str.687 = private unnamed_addr constant [23 x i8] c"threadgroup_imageblock\00", align 1
@.str.688 = private unnamed_addr constant [7 x i8] c"typeid\00", align 1
@.str.689 = private unnamed_addr constant [6 x i8] c"uchar\00", align 1
@.str.690 = private unnamed_addr constant [7 x i8] c"uchar2\00", align 1
@.str.691 = private unnamed_addr constant [7 x i8] c"uchar3\00", align 1
@.str.692 = private unnamed_addr constant [7 x i8] c"uchar4\00", align 1
@.str.693 = private unnamed_addr constant [9 x i8] c"uint16_t\00", align 1
@.str.694 = private unnamed_addr constant [9 x i8] c"uint32_t\00", align 1
@.str.695 = private unnamed_addr constant [9 x i8] c"uint64_t\00", align 1
@.str.696 = private unnamed_addr constant [8 x i8] c"uint8_t\00", align 1
@.str.697 = private unnamed_addr constant [7 x i8] c"ulong2\00", align 1
@.str.698 = private unnamed_addr constant [7 x i8] c"ulong3\00", align 1
@.str.699 = private unnamed_addr constant [7 x i8] c"ulong4\00", align 1
@.str.700 = private unnamed_addr constant [7 x i8] c"ushort\00", align 1
@.str.701 = private unnamed_addr constant [8 x i8] c"ushort2\00", align 1
@.str.702 = private unnamed_addr constant [8 x i8] c"ushort3\00", align 1
@.str.703 = private unnamed_addr constant [8 x i8] c"ushort4\00", align 1
@.str.704 = private unnamed_addr constant [4 x i8] c"vec\00", align 1
@.str.705 = private unnamed_addr constant [7 x i8] c"vertex\00", align 1
@.str.706 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str.707 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str.708 = private unnamed_addr constant [7 x i8] c"xor_eq\00", align 1
@.str.709 = private unnamed_addr constant [12 x i8] c"tint_symbol\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@.str.710 = private unnamed_addr constant [45 x i8] c"ReplaceAll() called with a handler for type \00", align 1
@.str.711 = private unnamed_addr constant [48 x i8] c" that is already handled by a handler for type \00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE = external global %"struct.tint::TypeInfo", align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN4tint9transform7Renamer4DataC1EONSt3__113unordered_mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4hashISA_EENS3_8equal_toISA_EENS8_INS3_4pairIKSA_SA_EEEEEE = hidden unnamed_addr alias void (%"struct.tint::transform::Renamer::Data"*, %"class.std::__1::unordered_map"*), void (%"struct.tint::transform::Renamer::Data"*, %"class.std::__1::unordered_map"*)* @_ZN4tint9transform7Renamer4DataC2EONSt3__113unordered_mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4hashISA_EENS3_8equal_toISA_EENS8_INS3_4pairIKSA_SA_EEEEEE
@_ZN4tint9transform7Renamer4DataC1ERKS2_ = hidden unnamed_addr alias void (%"struct.tint::transform::Renamer::Data"*, %"struct.tint::transform::Renamer::Data"*), void (%"struct.tint::transform::Renamer::Data"*, %"struct.tint::transform::Renamer::Data"*)* @_ZN4tint9transform7Renamer4DataC2ERKS2_
@_ZN4tint9transform7Renamer4DataD1Ev = hidden unnamed_addr alias void (%"struct.tint::transform::Renamer::Data"*), void (%"struct.tint::transform::Renamer::Data"*)* @_ZN4tint9transform7Renamer4DataD2Ev
@_ZN4tint9transform7RenamerC1Ev = hidden unnamed_addr alias void (%"class.tint::transform::Renamer"*), void (%"class.tint::transform::Renamer"*)* @_ZN4tint9transform7RenamerC2Ev
@_ZN4tint9transform7RenamerC1ERKNS1_6ConfigE = hidden unnamed_addr alias void (%"class.tint::transform::Renamer"*, %"struct.tint::transform::Renamer::Config"*), void (%"class.tint::transform::Renamer"*, %"struct.tint::transform::Renamer::Config"*)* @_ZN4tint9transform7RenamerC2ERKNS1_6ConfigE
@_ZN4tint9transform7RenamerD1Ev = hidden unnamed_addr alias void (%"class.tint::transform::Renamer"*), void (%"class.tint::transform::Renamer"*)* @_ZN4tint9transform7RenamerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Renamer4DataC2EONSt3__113unordered_mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4hashISA_EENS3_8equal_toISA_EENS8_INS3_4pairIKSA_SA_EEEEEE(%"struct.tint::transform::Renamer::Data"*, %"class.std::__1::unordered_map"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint9transform4DataC2Ev(%"class.tint::transform::Data"* %3) #12
  %4 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7Renamer4DataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::unordered_map"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %6, align 8
  %9 = bitcast %"class.std::__1::unordered_map"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  store i64 0, i64* %10, align 8
  %13 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__compressed_pair.5"* %14 to i64*
  %16 = bitcast %"class.std::__1::__compressed_pair.5"* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 3
  %22 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.12"* %22 to i32*
  %24 = bitcast %"class.std::__1::__compressed_pair.12"* %21 to i32*
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %24, align 8
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %2
  %28 = inttoptr i64 %17 to %"struct.std::__1::__hash_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.5"* %13, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 1
  %31 = bitcast %"struct.std::__1::__hash_node_base"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* %11, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %33) #12, !range !2
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = add i64 %33, -1
  %38 = and i64 %37, %32
  br label %43

39:                                               ; preds = %27
  %40 = icmp ult i64 %32, %33
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %32, %33
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %32, %39 ]
  %45 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base"* %29, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = bitcast %"class.std::__1::__compressed_pair.5"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #12
  br label %49

49:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Renamer4DataC2ERKS2_(%"struct.tint::transform::Renamer::Data"*, %"struct.tint::transform::Renamer::Data"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4tint9transform4DataC2ERKS1_(%"class.tint::transform::Data"* %3, %"class.tint::transform::Data"* dereferenceable(8) %4) #12
  %5 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7Renamer4DataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 3
  %9 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %1, i64 0, i32 1, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.12"* %9 to i32*
  %11 = bitcast %"class.std::__1::__compressed_pair.12"* %8 to i32*
  %12 = bitcast %"class.std::__1::unordered_map"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #12
  %13 = load i32, i32* %10, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %7, i64 %15) #12
  %16 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  %18 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %2
  %20 = ptrtoint %"struct.std::__1::__hash_node_base"* %17 to i64
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ %20, %19 ], [ %28, %21 ]
  %23 = inttoptr i64 %22 to %"struct.std::__1::__hash_node"*
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %23, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.393", %"struct.std::__1::pair.393"* %24, i64 0, i32 0
  %26 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %25, %"struct.std::__1::pair.393"* dereferenceable(48) %24) #12
  %27 = inttoptr i64 %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Renamer4DataD2Ev(%"struct.tint::transform::Renamer::Data"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7Renamer4DataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1, %27
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %27 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 2
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 5
  %12 = bitcast %"struct.std::__1::__hash_node_base"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %6
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %16, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %24, %19
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %29, label %30, label %6

30:                                               ; preds = %27, %1
  %31 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"struct.tint::transform::Renamer::Data", %"struct.tint::transform::Renamer::Data"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint9transform4DataD2Ev(%"class.tint::transform::Data"* %37) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Renamer4DataD0Ev(%"struct.tint::transform::Renamer::Data"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4tint9transform7Renamer4DataD2Ev(%"struct.tint::transform::Renamer::Data"* %0) #12
  %2 = bitcast %"struct.tint::transform::Renamer::Data"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7RenamerC2Ev(%"class.tint::transform::Renamer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformC2Ev(%"class.tint::transform::Transform"* %2) #12
  %3 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7RenamerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %4, align 8
  ret void
}

declare void @_ZN4tint9transform9TransformC2Ev(%"class.tint::transform::Transform"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7RenamerC2ERKNS1_6ConfigE(%"class.tint::transform::Renamer"*, %"struct.tint::transform::Renamer::Config"* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformC2Ev(%"class.tint::transform::Transform"* %3) #12
  %4 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7RenamerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"struct.tint::transform::Renamer::Config", %"struct.tint::transform::Renamer::Config"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %5, align 4
  store i32 %7, i32* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7RenamerD2Ev(%"class.tint::transform::Renamer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7RenamerD0Ev(%"class.tint::transform::Renamer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"* %2) #12
  %3 = bitcast %"class.tint::transform::Renamer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE(%"class.tint::transform::Output"* noalias sret, %"class.tint::transform::Renamer"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"* nocapture readnone dereferenceable(40)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.450", align 1
  %7 = alloca %"struct.tint::TypeInfo"*, align 8
  %8 = alloca %"class.tint::InternalCompilerError", align 8
  %9 = alloca %"struct.tint::CloneContext::CloneableTransform", align 8
  %10 = alloca %"class.tint::Program"*, align 8
  %11 = alloca %"class.tint::ProgramBuilder", align 8
  %12 = alloca %"class.tint::CloneContext", align 8
  %13 = alloca %"class.std::__1::unordered_set", align 8
  %14 = alloca %"class.tint::InternalCompilerError", align 8
  %15 = alloca %"class.tint::ast::IdentifierExpression"*, align 8
  %16 = alloca %"class.tint::InternalCompilerError", align 8
  %17 = alloca %"class.tint::ast::IdentifierExpression"*, align 8
  %18 = alloca %"class.std::__1::unordered_map", align 8
  %19 = alloca %"class.std::__1::function.329", align 8
  %20 = alloca %"class.tint::Program", align 8
  store %"class.tint::Program"* %2, %"class.tint::Program"** %10, align 8
  %21 = bitcast %"class.tint::ProgramBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %21) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%"class.tint::ProgramBuilder"* @__const._ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE.out to i8*), i64 384, i1 false)
  call void @_ZN4tint14ProgramBuilderC1Ev(%"class.tint::ProgramBuilder"* nonnull %11) #12
  %22 = bitcast %"class.tint::CloneContext"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %22) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (%"class.tint::CloneContext"* @__const._ZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapE.ctx to i8*), i64 192, i1 false)
  call void @_ZN4tint12CloneContextC1EPNS_14ProgramBuilderEPKNS_7ProgramEb(%"class.tint::CloneContext"* nonnull %12, %"class.tint::ProgramBuilder"* nonnull %11, %"class.tint::Program"* %2, i1 zeroext false) #12
  %23 = bitcast %"class.std::__1::unordered_set"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %13, i64 0, i32 0, i32 4, i64 0
  %27 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %13, i64 0, i32 0, i32 3
  %28 = bitcast %"class.std::__1::__compressed_pair.355"* %27 to i32*
  %29 = bitcast i8* %26 to i32*
  store i32 -1431655766, i32* %29, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %28, align 8
  call void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"* %2) #12
  %30 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %30, align 8
  %32 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.48"* %31, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %4
  %36 = bitcast %"class.tint::ast::IdentifierExpression"** %17 to i8*
  %37 = bitcast %"class.tint::ast::IdentifierExpression"** %17 to i64*
  %38 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %13, i64 0, i32 0
  %39 = bitcast %"class.tint::InternalCompilerError"* %16 to i8*
  %40 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %11, i64 0, i32 10
  %41 = getelementptr inbounds %"class.tint::InternalCompilerError", %"class.tint::InternalCompilerError"* %16, i64 0, i32 3, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %41 to %"class.std::__1::basic_ostream"*
  %43 = bitcast %"class.tint::ast::IdentifierExpression"** %15 to i8*
  %44 = bitcast %"class.tint::ast::IdentifierExpression"** %15 to i64*
  %45 = bitcast %"class.tint::InternalCompilerError"* %14 to i8*
  %46 = getelementptr inbounds %"class.tint::InternalCompilerError", %"class.tint::InternalCompilerError"* %14, i64 0, i32 3, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_ostream.base"* %46 to %"class.std::__1::basic_ostream"*
  br label %257

48:                                               ; preds = %471, %4
  %49 = bitcast %"class.std::__1::unordered_map"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 4, i64 0
  %55 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 3
  %56 = bitcast %"class.std::__1::__compressed_pair.12"* %55 to i32*
  %57 = bitcast i8* %54 to i32*
  store i32 -1431655766, i32* %57, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %56, align 8
  %58 = bitcast %"class.std::__1::function.329"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %19, i64 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %19, i64 0, i32 0, i32 2
  store void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)* @"_ZNSt3__110__function16__policy_invokerIFN4tint6SymbolES3_EE11__call_implINS0_20__default_alloc_funcIZNS2_9transform7Renamer3RunEPKNS2_7ProgramERKNS8_7DataMapEE3$_0S4_EEEES3_PKNS0_16__policy_storageEOS3_", void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)** %59, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %60, align 8
  %61 = call i8* @_Znwm(i64 24) #13, !noalias !3
  %62 = bitcast i8* %61 to %"class.tint::CloneContext"**
  store %"class.tint::CloneContext"* %12, %"class.tint::CloneContext"** %62, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 8
  %64 = bitcast i8* %63 to %"class.tint::transform::Renamer"**
  store %"class.tint::transform::Renamer"* %1, %"class.tint::transform::Renamer"** %64, align 8
  %65 = getelementptr inbounds i8, i8* %61, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::unordered_map"**
  store %"class.std::__1::unordered_map"* %18, %"class.std::__1::unordered_map"** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %19, i64 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %67, align 8
  %68 = call dereferenceable(192) %"class.tint::CloneContext"* @_ZN4tint12CloneContext10ReplaceAllERKNSt3__18functionIFNS_6SymbolES3_EEE(%"class.tint::CloneContext"* nonnull %12, %"class.std::__1::function.329"* nonnull dereferenceable(32) %19)
  %69 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %60, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %69, i64 0, i32 1
  %71 = load void (i8*)*, void (i8*)** %70, align 8
  %72 = icmp eq void (i8*)* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %48
  %74 = load i8*, i8** %67, align 8
  call void %71(i8* %74) #12
  br label %75

75:                                               ; preds = %48, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #12
  %76 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %12, i64 0, i32 4
  %77 = getelementptr inbounds %"class.std::__1::vector.293", %"class.std::__1::vector.293"* %76, i64 0, i32 0, i32 0
  %78 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %77, align 8
  %79 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %12, i64 0, i32 4, i32 0, i32 1
  %80 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %79, align 8
  %81 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %78, %80
  br i1 %81, label %108, label %84

82:                                               ; preds = %89
  %83 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %92, %80
  br i1 %83, label %108, label %84

84:                                               ; preds = %75, %82
  %85 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %92, %82 ], [ %78, %75 ]
  %86 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %85, i64 0, i32 0
  %87 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %86, align 8
  %88 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %87, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE) #12
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %86, align 8
  %91 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* nonnull @_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE, %"struct.tint::TypeInfo"* dereferenceable(16) %90) #12
  %92 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %85, i64 1
  br i1 %91, label %93, label %82

93:                                               ; preds = %89, %84
  %94 = bitcast %"class.tint::InternalCompilerError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %94) #12
  %95 = call dereferenceable(32) %"class.tint::diag::List"* @_ZNK4tint12CloneContext11DiagnosticsEv(%"class.tint::CloneContext"* nonnull %12) #12
  call void @_ZN4tint21InternalCompilerErrorC1EPKcmRNS_4diag4ListE(%"class.tint::InternalCompilerError"* nonnull %8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0), i64 313, %"class.tint::diag::List"* dereferenceable(32) %95) #12
  %96 = getelementptr inbounds %"class.tint::InternalCompilerError", %"class.tint::InternalCompilerError"* %8, i64 0, i32 3, i32 0, i32 1
  %97 = bitcast %"class.std::__1::basic_ostream.base"* %96 to %"class.std::__1::basic_ostream"*
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.710, i64 0, i64 0), i64 44) #12
  %99 = load i8*, i8** getelementptr inbounds (%"struct.tint::TypeInfo", %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE, i64 0, i32 1), align 8
  %100 = call i64 @strlen(i8* %99) #12
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* %99, i64 %100) #12
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.711, i64 0, i64 0), i64 47) #12
  %103 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %86, align 8
  %104 = getelementptr inbounds %"struct.tint::TypeInfo", %"struct.tint::TypeInfo"* %103, i64 0, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = call i64 @strlen(i8* %105) #12
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* %105, i64 %106) #12
  call void @_ZN4tint21InternalCompilerErrorD1Ev(%"class.tint::InternalCompilerError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %94) #12
  br label %143

108:                                              ; preds = %82, %75
  %109 = bitcast %"struct.tint::CloneContext::CloneableTransform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 40, i1 false) #12
  call void @_ZN4tint12CloneContext18CloneableTransformC1Ev(%"struct.tint::CloneContext::CloneableTransform"* nonnull %9) #12
  %110 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %9, i64 0, i32 0
  store %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE, %"struct.tint::TypeInfo"** %110, align 8
  %111 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %9, i64 0, i32 1
  %112 = call i8* @_Znwm(i64 32) #13, !noalias !8
  %113 = bitcast i8* %112 to %"class.std::__1::unordered_set"**
  store %"class.std::__1::unordered_set"* %13, %"class.std::__1::unordered_set"** %113, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = bitcast i8* %114 to %"class.tint::Program"***
  store %"class.tint::Program"** %10, %"class.tint::Program"*** %115, align 8
  %116 = getelementptr inbounds i8, i8* %112, i64 16
  %117 = bitcast i8* %116 to %"class.tint::ProgramBuilder"**
  store %"class.tint::ProgramBuilder"* %11, %"class.tint::ProgramBuilder"** %117, align 8
  %118 = getelementptr inbounds i8, i8* %112, i64 24
  %119 = bitcast i8* %118 to %"class.tint::CloneContext"**
  store %"class.tint::CloneContext"* %12, %"class.tint::CloneContext"** %119, align 8
  %120 = ptrtoint i8* %112 to i64
  %121 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %9, i64 0, i32 1, i32 0, i32 1
  %122 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %9, i64 0, i32 1, i32 0, i32 2
  %123 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %122, align 8
  %124 = bitcast %"struct.std::__1::__function::__policy_invoker"* %121 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (%"class.tint::Cloneable"* (%"union.std::__1::__function::__policy_storage"*, %"class.tint::Cloneable"*)* @"_ZNSt3__110__function16__policy_invokerIFPN4tint9CloneableES4_EE11__call_implINS0_20__default_alloc_funcIZNS2_12CloneContext10ReplaceAllIZNS2_9transform7Renamer3RunEPKNS2_7ProgramERKNSB_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_S3_EE5valueES9_E4typeEOSL_EUlS4_E_S5_EEEES4_PKNS0_16__policy_storageES4_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" to i64)>, <2 x i64>* %124, align 8
  %125 = bitcast %"class.std::__1::function"* %111 to i64*
  %126 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %111, i64 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  store i64 %120, i64* %125, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %123, i64 0, i32 1
  %129 = load void (i8*)*, void (i8*)** %128, align 8
  %130 = icmp eq void (i8*)* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %108
  call void %129(i8* %127) #12
  br label %132

132:                                              ; preds = %131, %108
  %133 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %79, align 8
  %134 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %12, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %135 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %134, align 8
  %136 = icmp ult %"struct.tint::CloneContext::CloneableTransform"* %133, %135
  br i1 %136, label %137, label %141

137:                                              ; preds = %132
  call void @_ZN4tint12CloneContext18CloneableTransformC1ERKS1_(%"struct.tint::CloneContext::CloneableTransform"* %133, %"struct.tint::CloneContext::CloneableTransform"* nonnull dereferenceable(40) %9) #12
  %138 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %133, i64 1
  %139 = ptrtoint %"struct.tint::CloneContext::CloneableTransform"* %138 to i64
  %140 = bitcast %"struct.tint::CloneContext::CloneableTransform"** %79 to i64*
  store i64 %139, i64* %140, align 8
  br label %142

141:                                              ; preds = %132
  call void @_ZNSt3__16vectorIN4tint12CloneContext18CloneableTransformENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.293"* %76, %"struct.tint::CloneContext::CloneableTransform"* nonnull dereferenceable(40) %9) #12
  br label %142

142:                                              ; preds = %141, %137
  call void @_ZN4tint12CloneContext18CloneableTransformD1Ev(%"struct.tint::CloneContext::CloneableTransform"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #12
  br label %143

143:                                              ; preds = %93, %142
  call void @_ZN4tint12CloneContext5CloneEv(%"class.tint::CloneContext"* nonnull %12) #12
  %144 = bitcast %"class.tint::Program"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %144) #12
  call void @_ZN4tint7ProgramC1EONS_14ProgramBuilderE(%"class.tint::Program"* nonnull %20, %"class.tint::ProgramBuilder"* nonnull dereferenceable(384) %11) #12
  %145 = call i8* @_Znwm(i64 48) #13
  %146 = bitcast i8* %145 to %"class.tint::transform::Data"*
  call void @_ZN4tint9transform4DataC2Ev(%"class.tint::transform::Data"* nonnull %146) #12
  %147 = bitcast i8* %145 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7Renamer4DataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds i8, i8* %145, i64 8
  %149 = bitcast %"class.std::__1::unordered_map"* %18 to i64*
  %150 = load i64, i64* %149, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %151 = bitcast i8* %148 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %145, i64 16
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %51, align 8
  store i64 %154, i64* %153, align 8
  store i64 0, i64* %51, align 8
  %155 = getelementptr inbounds i8, i8* %145, i64 24
  %156 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 1
  %157 = bitcast %"class.std::__1::__compressed_pair.5"* %156 to i64*
  %158 = bitcast i8* %155 to i64*
  %159 = load i64, i64* %157, align 8
  store i64 %159, i64* %158, align 8
  %160 = getelementptr inbounds i8, i8* %145, i64 32
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %53, align 8
  store i64 %162, i64* %161, align 8
  %163 = getelementptr inbounds i8, i8* %145, i64 40
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %56, align 8
  store i32 %165, i32* %164, align 8
  %166 = icmp eq i64 %162, 0
  %167 = inttoptr i64 %150 to %"struct.std::__1::__hash_node_base"**
  br i1 %166, label %187, label %168

168:                                              ; preds = %143
  %169 = inttoptr i64 %159 to %"struct.std::__1::__hash_node_base"*
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %169, i64 1
  %171 = bitcast %"struct.std::__1::__hash_node_base"* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = call i64 @llvm.ctpop.i64(i64 %154) #12, !range !2
  %174 = icmp ugt i64 %173, 1
  br i1 %174, label %178, label %175

175:                                              ; preds = %168
  %176 = add i64 %154, -1
  %177 = and i64 %172, %176
  br label %182

178:                                              ; preds = %168
  %179 = icmp ult i64 %172, %154
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = urem i64 %172, %154
  br label %182

182:                                              ; preds = %180, %178, %175
  %183 = phi i64 [ %177, %175 ], [ %181, %180 ], [ %172, %178 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, i64 %183
  %185 = bitcast %"struct.std::__1::__hash_node_base"** %184 to i8**
  store i8* %155, i8** %185, align 8
  %186 = bitcast %"class.std::__1::__compressed_pair.5"* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #12
  br label %187

187:                                              ; preds = %143, %182
  %188 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 0
  call void @_ZN4tint7ProgramC1EOS0_(%"class.tint::Program"* %188, %"class.tint::Program"* nonnull dereferenceable(304) %20) #12
  %189 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %191 = bitcast %"class.std::__1::__compressed_pair.235"* %190 to i32*
  %192 = bitcast %"class.tint::transform::DataMap"* %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %191, align 4
  %193 = bitcast %"struct.tint::TypeInfo"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #12
  store %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_9transform7Renamer4DataEE4infoE, %"struct.tint::TypeInfo"** %7, align 8
  %194 = getelementptr inbounds %"class.tint::transform::DataMap", %"class.tint::transform::DataMap"* %189, i64 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #12
  %196 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.tint::TypeInfo"** %7, %"struct.tint::TypeInfo"*** %196, align 8
  %197 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %197) #12
  %198 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %194, %"struct.tint::TypeInfo"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %6) #12
  %199 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %198, 0
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %199, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %197) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #12
  %201 = bitcast %"struct.std::__1::__hash_node_base.218"* %200 to %"class.tint::transform::Data"**
  %202 = load %"class.tint::transform::Data"*, %"class.tint::transform::Data"** %201, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.218"* %200 to i8**
  store i8* %145, i8** %203, align 8
  %204 = icmp eq %"class.tint::transform::Data"* %202, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %187
  %206 = bitcast %"class.tint::transform::Data"* %202 to void (%"class.tint::transform::Data"*)***
  %207 = load void (%"class.tint::transform::Data"*)**, void (%"class.tint::transform::Data"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.tint::transform::Data"*)*, void (%"class.tint::transform::Data"*)** %207, i64 1
  %209 = load void (%"class.tint::transform::Data"*)*, void (%"class.tint::transform::Data"*)** %208, align 8
  call void %209(%"class.tint::transform::Data"* nonnull %202) #12
  br label %210

210:                                              ; preds = %187, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #12
  call void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %144) #12
  %211 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %212 = icmp eq %"struct.std::__1::__hash_node_base"* %211, null
  br i1 %212, label %237, label %213

213:                                              ; preds = %210, %234
  %214 = phi %"struct.std::__1::__hash_node_base"* [ %216, %234 ], [ %211, %210 ]
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %214, i64 0, i32 0
  %216 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %215, align 8
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %214, i64 2
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %214, i64 5
  %219 = bitcast %"struct.std::__1::__hash_node_base"* %218 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %213
  %224 = bitcast %"struct.std::__1::__hash_node_base"* %218 to i8**
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #13
  br label %226

226:                                              ; preds = %223, %213
  %227 = bitcast %"struct.std::__1::__hash_node_base"* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %226
  %232 = bitcast %"struct.std::__1::__hash_node_base"* %217 to i8**
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #13
  br label %234

234:                                              ; preds = %231, %226
  %235 = bitcast %"struct.std::__1::__hash_node_base"* %214 to i8*
  call void @_ZdlPv(i8* %235) #13
  %236 = icmp eq %"struct.std::__1::__hash_node_base"* %216, null
  br i1 %236, label %237, label %213

237:                                              ; preds = %234, %210
  %238 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %50, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %239 = icmp eq %"struct.std::__1::__hash_node_base"** %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = bitcast %"struct.std::__1::__hash_node_base"** %238 to i8*
  call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #12
  %243 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %25, align 8
  %244 = icmp eq %"struct.std::__1::__hash_node_base.339"* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %242, %245
  %246 = phi %"struct.std::__1::__hash_node_base.339"* [ %248, %245 ], [ %243, %242 ]
  %247 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %246, i64 0, i32 0
  %248 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %247, align 8
  %249 = bitcast %"struct.std::__1::__hash_node_base.339"* %246 to i8*
  call void @_ZdlPv(i8* %249) #13
  %250 = icmp eq %"struct.std::__1::__hash_node_base.339"* %248, null
  br i1 %250, label %251, label %245

251:                                              ; preds = %245, %242
  %252 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %24, align 8
  store %"struct.std::__1::__hash_node_base.339"** null, %"struct.std::__1::__hash_node_base.339"*** %24, align 8
  %253 = icmp eq %"struct.std::__1::__hash_node_base.339"** %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %251
  %255 = bitcast %"struct.std::__1::__hash_node_base.339"** %252 to i8*
  call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %251, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #12
  call void @_ZN4tint12CloneContextD1Ev(%"class.tint::CloneContext"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %22) #12
  call void @_ZN4tint14ProgramBuilderD1Ev(%"class.tint::ProgramBuilder"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %21) #12
  ret void

257:                                              ; preds = %35, %471
  %258 = phi %"class.std::__1::unique_ptr.48"* [ %31, %35 ], [ %472, %471 ]
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.tint::ast::Node"*, %"class.tint::ast::Node"** %259, align 8
  %261 = getelementptr inbounds %"class.tint::ast::Node", %"class.tint::ast::Node"* %260, i64 0, i32 0
  %262 = icmp eq %"class.tint::ast::Node"* %260, null
  br i1 %262, label %471, label %263

263:                                              ; preds = %257
  %264 = bitcast %"class.tint::ast::Node"* %260 to %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)***
  %265 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)**, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*** %264, align 8
  %266 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)** %265, i64 2
  %267 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)** %266, align 8
  %268 = call dereferenceable(16) %"struct.tint::TypeInfo"* %267(%"class.tint::Castable.64"* nonnull %261) #12
  %269 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %268, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3ast24MemberAccessorExpressionEE4infoE) #12
  br i1 %269, label %270, label %365

270:                                              ; preds = %263
  %271 = load %"class.tint::Program"*, %"class.tint::Program"** %10, align 8
  call void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"* %271) #12
  %272 = getelementptr inbounds %"class.tint::ast::Node", %"class.tint::ast::Node"* %260, i64 0, i32 0, i32 0, i32 0, i32 0
  %273 = ptrtoint %"class.tint::ast::Node"* %260 to i64
  %274 = lshr i64 %273, 32
  %275 = shl i64 %273, 3
  %276 = and i64 %275, 4294967288
  %277 = add nuw nsw i64 %276, 8
  %278 = xor i64 %277, %274
  %279 = mul i64 %278, -7070675565921424023
  %280 = lshr i64 %279, 47
  %281 = xor i64 %279, %274
  %282 = xor i64 %281, %280
  %283 = mul i64 %282, -7070675565921424023
  %284 = lshr i64 %283, 47
  %285 = xor i64 %284, %283
  %286 = mul i64 %285, -7070675565921424023
  %287 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %271, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %363, label %290

290:                                              ; preds = %270
  %291 = call i64 @llvm.ctpop.i64(i64 %288) #12, !range !2
  %292 = icmp ugt i64 %291, 1
  br i1 %292, label %296, label %293

293:                                              ; preds = %290
  %294 = add i64 %288, -1
  %295 = and i64 %294, %286
  br label %300

296:                                              ; preds = %290
  %297 = icmp ult i64 %286, %288
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = urem i64 %286, %288
  br label %300

300:                                              ; preds = %298, %296, %293
  %301 = phi i64 [ %295, %293 ], [ %299, %298 ], [ %286, %296 ]
  %302 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %271, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %302, align 8
  %304 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %303, i64 %301
  %305 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %304, align 8
  %306 = icmp eq %"struct.std::__1::__hash_node_base.133"* %305, null
  br i1 %306, label %363, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %305, i64 0, i32 0
  %309 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %308, align 8
  %310 = icmp eq %"struct.std::__1::__hash_node_base.133"* %309, null
  br i1 %310, label %363, label %311

311:                                              ; preds = %307
  %312 = add i64 %288, -1
  br label %313

313:                                              ; preds = %334, %311
  %314 = phi %"struct.std::__1::__hash_node_base.133"* [ %309, %311 ], [ %336, %334 ]
  %315 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %314, i64 1
  %316 = bitcast %"struct.std::__1::__hash_node_base.133"* %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = icmp eq i64 %286, %317
  br i1 %318, label %329, label %319

319:                                              ; preds = %313
  br i1 %292, label %322, label %320

320:                                              ; preds = %319
  %321 = and i64 %317, %312
  br label %326

322:                                              ; preds = %319
  %323 = icmp ult i64 %317, %288
  br i1 %323, label %326, label %324

324:                                              ; preds = %322
  %325 = urem i64 %317, %288
  br label %326

326:                                              ; preds = %324, %322, %320
  %327 = phi i64 [ %321, %320 ], [ %325, %324 ], [ %317, %322 ]
  %328 = icmp eq i64 %327, %301
  br i1 %328, label %334, label %363

329:                                              ; preds = %313
  %330 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %314, i64 2
  %331 = bitcast %"struct.std::__1::__hash_node_base.133"* %330 to %"class.tint::CastableBase"**
  %332 = load %"class.tint::CastableBase"*, %"class.tint::CastableBase"** %331, align 8
  %333 = icmp eq %"class.tint::CastableBase"* %332, %272
  br i1 %333, label %338, label %334

334:                                              ; preds = %329, %326
  %335 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %314, i64 0, i32 0
  %336 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %335, align 8
  %337 = icmp eq %"struct.std::__1::__hash_node_base.133"* %336, null
  br i1 %337, label %363, label %313

338:                                              ; preds = %329
  %339 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %314, i64 3
  %340 = bitcast %"struct.std::__1::__hash_node_base.133"* %339 to %"class.tint::CastableBase"**
  %341 = load %"class.tint::CastableBase"*, %"class.tint::CastableBase"** %340, align 8
  %342 = icmp eq %"class.tint::CastableBase"* %341, null
  br i1 %342, label %363, label %343

343:                                              ; preds = %338
  %344 = bitcast %"class.tint::CastableBase"* %341 to %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)***
  %345 = load %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)**, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*** %344, align 8
  %346 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)** %345, i64 2
  %347 = load %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)** %346, align 8
  %348 = call dereferenceable(16) %"struct.tint::TypeInfo"* %347(%"class.tint::CastableBase"* nonnull %341) #12
  %349 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %348, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3sem24MemberAccessorExpressionEE4infoE) #12
  br i1 %349, label %350, label %363

350:                                              ; preds = %343
  %351 = bitcast %"class.tint::CastableBase"* %341 to %"class.tint::Castable.362"*
  %352 = bitcast %"class.tint::CastableBase"* %341 to %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)***
  %353 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)**, %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)*** %352, align 8
  %354 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)** %353, i64 2
  %355 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.362"*)** %354, align 8
  %356 = call dereferenceable(16) %"struct.tint::TypeInfo"* %355(%"class.tint::Castable.362"* nonnull %351) #12
  %357 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %356, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3sem7SwizzleEE4infoE) #12
  br i1 %357, label %358, label %471

358:                                              ; preds = %350
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %359 = getelementptr inbounds %"class.tint::ast::Node", %"class.tint::ast::Node"* %260, i64 1, i32 1
  %360 = bitcast %"class.tint::ProgramID"* %359 to i64*
  %361 = load i64, i64* %360, align 8
  store i64 %361, i64* %44, align 8
  %362 = call { %"struct.std::__1::__hash_node_base.339"*, i8 } @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.335"* nonnull %38, %"class.tint::ast::IdentifierExpression"** nonnull dereferenceable(8) %15, %"class.tint::ast::IdentifierExpression"** nonnull dereferenceable(8) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %471

363:                                              ; preds = %334, %326, %343, %307, %270, %300, %338
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %45) #12
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* nonnull %11) #12
  call void @_ZN4tint21InternalCompilerErrorC1EPKcmRNS_4diag4ListE(%"class.tint::InternalCompilerError"* nonnull %14, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i64 860, %"class.tint::diag::List"* dereferenceable(32) %40) #12
  %364 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i64 45) #12
  call void @_ZN4tint21InternalCompilerErrorD1Ev(%"class.tint::InternalCompilerError"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %45) #12
  br label %471

365:                                              ; preds = %263
  %366 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)**, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*** %264, align 8
  %367 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)** %366, i64 2
  %368 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.64"*)** %367, align 8
  %369 = call dereferenceable(16) %"struct.tint::TypeInfo"* %368(%"class.tint::Castable.64"* nonnull %261) #12
  %370 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %369, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3ast14CallExpressionEE4infoE) #12
  br i1 %370, label %371, label %471

371:                                              ; preds = %365
  %372 = load %"class.tint::Program"*, %"class.tint::Program"** %10, align 8
  call void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"* %372) #12
  %373 = getelementptr inbounds %"class.tint::ast::Node", %"class.tint::ast::Node"* %260, i64 0, i32 0, i32 0, i32 0, i32 0
  %374 = ptrtoint %"class.tint::ast::Node"* %260 to i64
  %375 = lshr i64 %374, 32
  %376 = shl i64 %374, 3
  %377 = and i64 %376, 4294967288
  %378 = add nuw nsw i64 %377, 8
  %379 = xor i64 %378, %375
  %380 = mul i64 %379, -7070675565921424023
  %381 = lshr i64 %380, 47
  %382 = xor i64 %380, %375
  %383 = xor i64 %382, %381
  %384 = mul i64 %383, -7070675565921424023
  %385 = lshr i64 %384, 47
  %386 = xor i64 %385, %384
  %387 = mul i64 %386, -7070675565921424023
  %388 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %372, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %469, label %391

391:                                              ; preds = %371
  %392 = call i64 @llvm.ctpop.i64(i64 %389) #12, !range !2
  %393 = icmp ugt i64 %392, 1
  br i1 %393, label %397, label %394

394:                                              ; preds = %391
  %395 = add i64 %389, -1
  %396 = and i64 %395, %387
  br label %401

397:                                              ; preds = %391
  %398 = icmp ult i64 %387, %389
  br i1 %398, label %401, label %399

399:                                              ; preds = %397
  %400 = urem i64 %387, %389
  br label %401

401:                                              ; preds = %399, %397, %394
  %402 = phi i64 [ %396, %394 ], [ %400, %399 ], [ %387, %397 ]
  %403 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %372, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %403, align 8
  %405 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %404, i64 %402
  %406 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %405, align 8
  %407 = icmp eq %"struct.std::__1::__hash_node_base.133"* %406, null
  br i1 %407, label %469, label %408

408:                                              ; preds = %401
  %409 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %406, i64 0, i32 0
  %410 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %409, align 8
  %411 = icmp eq %"struct.std::__1::__hash_node_base.133"* %410, null
  br i1 %411, label %469, label %412

412:                                              ; preds = %408
  %413 = add i64 %389, -1
  br label %414

414:                                              ; preds = %435, %412
  %415 = phi %"struct.std::__1::__hash_node_base.133"* [ %410, %412 ], [ %437, %435 ]
  %416 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %415, i64 1
  %417 = bitcast %"struct.std::__1::__hash_node_base.133"* %416 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = icmp eq i64 %387, %418
  br i1 %419, label %430, label %420

420:                                              ; preds = %414
  br i1 %393, label %423, label %421

421:                                              ; preds = %420
  %422 = and i64 %418, %413
  br label %427

423:                                              ; preds = %420
  %424 = icmp ult i64 %418, %389
  br i1 %424, label %427, label %425

425:                                              ; preds = %423
  %426 = urem i64 %418, %389
  br label %427

427:                                              ; preds = %425, %423, %421
  %428 = phi i64 [ %422, %421 ], [ %426, %425 ], [ %418, %423 ]
  %429 = icmp eq i64 %428, %402
  br i1 %429, label %435, label %469

430:                                              ; preds = %414
  %431 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %415, i64 2
  %432 = bitcast %"struct.std::__1::__hash_node_base.133"* %431 to %"class.tint::CastableBase"**
  %433 = load %"class.tint::CastableBase"*, %"class.tint::CastableBase"** %432, align 8
  %434 = icmp eq %"class.tint::CastableBase"* %433, %373
  br i1 %434, label %439, label %435

435:                                              ; preds = %430, %427
  %436 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %415, i64 0, i32 0
  %437 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %436, align 8
  %438 = icmp eq %"struct.std::__1::__hash_node_base.133"* %437, null
  br i1 %438, label %469, label %414

439:                                              ; preds = %430
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %415, i64 3
  %441 = bitcast %"struct.std::__1::__hash_node_base.133"* %440 to %"class.tint::CastableBase"**
  %442 = load %"class.tint::CastableBase"*, %"class.tint::CastableBase"** %441, align 8
  %443 = icmp eq %"class.tint::CastableBase"* %442, null
  br i1 %443, label %469, label %444

444:                                              ; preds = %439
  %445 = bitcast %"class.tint::CastableBase"* %442 to %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)***
  %446 = load %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)**, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*** %445, align 8
  %447 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)** %446, i64 2
  %448 = load %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)*, %"struct.tint::TypeInfo"* (%"class.tint::CastableBase"*)** %447, align 8
  %449 = call dereferenceable(16) %"struct.tint::TypeInfo"* %448(%"class.tint::CastableBase"* nonnull %442) #12
  %450 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %449, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3sem4CallEE4infoE) #12
  br i1 %450, label %451, label %469

451:                                              ; preds = %444
  %452 = getelementptr inbounds %"class.tint::CastableBase", %"class.tint::CastableBase"* %442, i64 4
  %453 = bitcast %"class.tint::CastableBase"* %452 to %"class.tint::sem::CallTarget"**
  %454 = load %"class.tint::sem::CallTarget"*, %"class.tint::sem::CallTarget"** %453, align 8
  %455 = icmp eq %"class.tint::sem::CallTarget"* %454, null
  br i1 %455, label %471, label %456

456:                                              ; preds = %451
  %457 = getelementptr inbounds %"class.tint::sem::CallTarget", %"class.tint::sem::CallTarget"* %454, i64 0, i32 0
  %458 = bitcast %"class.tint::sem::CallTarget"* %454 to %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)***
  %459 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)**, %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)*** %458, align 8
  %460 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)** %459, i64 2
  %461 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.375"*)** %460, align 8
  %462 = call dereferenceable(16) %"struct.tint::TypeInfo"* %461(%"class.tint::Castable.375"* nonnull %457) #12
  %463 = call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %462, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3sem9IntrinsicEE4infoE) #12
  br i1 %463, label %464, label %471

464:                                              ; preds = %456
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  %465 = getelementptr inbounds %"class.tint::ast::Node", %"class.tint::ast::Node"* %260, i64 1
  %466 = bitcast %"class.tint::ast::Node"* %465 to i64*
  %467 = load i64, i64* %466, align 8
  store i64 %467, i64* %37, align 8
  %468 = call { %"struct.std::__1::__hash_node_base.339"*, i8 } @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.335"* nonnull %38, %"class.tint::ast::IdentifierExpression"** nonnull dereferenceable(8) %17, %"class.tint::ast::IdentifierExpression"** nonnull dereferenceable(8) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %471

469:                                              ; preds = %435, %427, %444, %408, %371, %401, %439
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #12
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* nonnull %11) #12
  call void @_ZN4tint21InternalCompilerErrorC1EPKcmRNS_4diag4ListE(%"class.tint::InternalCompilerError"* nonnull %16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i64 870, %"class.tint::diag::List"* dereferenceable(32) %40) #12
  %470 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i64 35) #12
  call void @_ZN4tint21InternalCompilerErrorD1Ev(%"class.tint::InternalCompilerError"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #12
  br label %471

471:                                              ; preds = %365, %451, %456, %464, %257, %350, %358, %469, %363
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %258, i64 1
  %473 = icmp eq %"class.std::__1::unique_ptr.48"* %472, %33
  br i1 %473, label %48, label %257
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4tint14ProgramBuilderC1Ev(%"class.tint::ProgramBuilder"*) unnamed_addr #2

declare void @_ZN4tint12CloneContextC1EPNS_14ProgramBuilderEPKNS_7ProgramEb(%"class.tint::CloneContext"*, %"class.tint::ProgramBuilder"*, %"class.tint::Program"*, i1 zeroext) unnamed_addr #2

declare void @_ZN4tint21InternalCompilerErrorC1EPKcmRNS_4diag4ListE(%"class.tint::InternalCompilerError"*, i8*, i64, %"class.tint::diag::List"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint21InternalCompilerErrorD1Ev(%"class.tint::InternalCompilerError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(192) %"class.tint::CloneContext"* @_ZN4tint12CloneContext10ReplaceAllERKNSt3__18functionIFNS_6SymbolES3_EEE(%"class.tint::CloneContext"*, %"class.std::__1::function.329"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.tint::InternalCompilerError", align 8
  %4 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 2
  %6 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !13
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = bitcast %"class.tint::InternalCompilerError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #12
  %12 = tail call dereferenceable(32) %"class.tint::diag::List"* @_ZNK4tint12CloneContext11DiagnosticsEv(%"class.tint::CloneContext"* %0) #12
  call void @_ZN4tint21InternalCompilerErrorC1EPKcmRNS_4diag4ListE(%"class.tint::InternalCompilerError"* nonnull %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0), i64 339, %"class.tint::diag::List"* dereferenceable(32) %12) #12
  %13 = getelementptr inbounds %"class.tint::InternalCompilerError", %"class.tint::InternalCompilerError"* %3, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_ostream.base"* %13 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.5, i64 0, i64 0), i64 81) #12
  call void @_ZN4tint21InternalCompilerErrorD1Ev(%"class.tint::InternalCompilerError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #12
  br label %70

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::function.329"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %20 = load i8, i8* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 2
  %24 = load i8, i8* %23, align 2
  %25 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 4
  %28 = load i8, i8* %27, align 4
  %29 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 5
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 6
  %32 = load i8, i8* %31, align 2
  %33 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 0, i32 1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 1
  %36 = bitcast %"struct.std::__1::__function::__policy_invoker.334"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %1, i64 0, i32 0, i32 2
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %38, align 8
  %40 = ptrtoint %"struct.std::__1::__function::__policy"* %39 to i64
  %41 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 0
  %42 = load i8* (i8*)*, i8* (i8*)** %41, align 8
  %43 = icmp eq i8* (i8*)* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %16
  %45 = inttoptr i64 %18 to i8*
  %46 = tail call i8* %42(i8* %45) #12
  %47 = ptrtoint i8* %46 to i64
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  br label %49

49:                                               ; preds = %44, %16
  %50 = phi %"struct.std::__1::__function::__policy"* [ %6, %16 ], [ %48, %44 ]
  %51 = phi i64 [ %18, %16 ], [ %47, %44 ]
  %52 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 1
  %53 = bitcast %"struct.std::__1::__function::__policy_invoker.334"* %52 to i64*
  store i64 %37, i64* %53, align 8
  %54 = bitcast %"struct.std::__1::__function::__policy"** %5 to i64*
  store i64 %40, i64* %54, align 8
  %55 = bitcast %"class.std::__1::function.329"* %4 to i64*
  %56 = getelementptr inbounds %"class.std::__1::function.329", %"class.std::__1::function.329"* %4, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 0
  %59 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 1
  %60 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 2
  %61 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 3
  %62 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 4
  %63 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 5
  %64 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 6
  %65 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i64 7
  store i64 %51, i64* %55, align 8
  store i8 %20, i8* %58, align 8
  store i8 %22, i8* %59, align 1
  store i8 %24, i8* %60, align 2
  store i8 %26, i8* %61, align 1
  store i8 %28, i8* %62, align 4
  store i8 %30, i8* %63, align 1
  store i8 %32, i8* %64, align 2
  store i8 %34, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %50, i64 0, i32 1
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = icmp eq void (i8*)* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %49
  tail call void %67(i8* %57) #12
  br label %70

70:                                               ; preds = %69, %49, %10
  ret %"class.tint::CloneContext"* %0
}

declare void @_ZN4tint12CloneContext5CloneEv(%"class.tint::CloneContext"*) local_unnamed_addr #2

declare void @_ZN4tint7ProgramC1EONS_14ProgramBuilderE(%"class.tint::Program"*, %"class.tint::ProgramBuilder"* dereferenceable(384)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4tint12CloneContextD1Ev(%"class.tint::CloneContext"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4tint14ProgramBuilderD1Ev(%"class.tint::ProgramBuilder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_9transform7Renamer4DataENS1_4DataEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_9transform7Renamer4DataEE4infoE
}

declare void @_ZN4tint9transform4DataC2Ev(%"class.tint::transform::Data"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint9transform4DataD2Ev(%"class.tint::transform::Data"*) unnamed_addr #4

declare void @_ZN4tint9transform4DataC2ERKS1_(%"class.tint::transform::Data"*, %"class.tint::transform::Data"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"*) local_unnamed_addr #2

declare void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.tint::diag::List"* @_ZNK4tint12CloneContext11DiagnosticsEv(%"class.tint::CloneContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !13
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !14

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.393"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %225, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %225, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %225, label %96

96:                                               ; preds = %107, %87, %69, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %225, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 64) #13, !noalias !16
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"struct.std::__1::pair.393"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !16
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"struct.std::__1::pair.393"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #12, !noalias !16
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"struct.std::__1::pair.393", %"struct.std::__1::pair.393"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !16
  %126 = getelementptr inbounds %"struct.std::__1::pair.393", %"struct.std::__1::pair.393"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #12, !noalias !16
  br label %128

128:                                              ; preds = %122, %120
  %129 = getelementptr inbounds i8, i8* %114, i64 40
  %130 = getelementptr inbounds %"struct.std::__1::pair.393", %"struct.std::__1::pair.393"* %2, i64 0, i32 1
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1, !noalias !16
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.std::__1::basic_string"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %136, i64 24, i1 false) #12, !noalias !16
  br label %143

137:                                              ; preds = %128
  %138 = bitcast i8* %129 to %"class.std::__1::basic_string"*
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8, !noalias !16
  %141 = getelementptr inbounds %"struct.std::__1::pair.393", %"struct.std::__1::pair.393"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %138, i8* %140, i64 %142) #12, !noalias !16
  br label %143

143:                                              ; preds = %135, %137
  %144 = getelementptr inbounds i8, i8* %114, i64 8
  %145 = bitcast i8* %144 to i64*
  store i64 %18, i64* %145, align 8, !noalias !16
  %146 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %146, align 8, !noalias !16
  %147 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  %150 = uitofp i64 %149 to float
  %151 = uitofp i64 %20 to float
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %153 = load float, float* %152, align 4
  %154 = fmul float %153, %151
  %155 = fcmp olt float %154, %150
  %156 = or i1 %21, %155
  br i1 %156, label %157, label %180

157:                                              ; preds = %143
  %158 = shl i64 %20, 1
  %159 = icmp ult i64 %20, 3
  %160 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !2
  %161 = icmp ugt i64 %160, 1
  %162 = or i1 %159, %161
  %163 = zext i1 %162 to i64
  %164 = or i64 %158, %163
  %165 = fdiv float %150, %153
  %166 = call float @llvm.ceil.f32(float %165) #12
  %167 = fptoui float %166 to i64
  %168 = icmp ult i64 %164, %167
  %169 = select i1 %168, i64 %167, i64 %164
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %169)
  %170 = load i64, i64* %19, align 8
  %171 = call i64 @llvm.ctpop.i64(i64 %170) #12, !range !2
  %172 = icmp ugt i64 %171, 1
  br i1 %172, label %176, label %173

173:                                              ; preds = %157
  %174 = add i64 %170, -1
  %175 = and i64 %174, %18
  br label %180

176:                                              ; preds = %157
  %177 = icmp ult i64 %18, %170
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = urem i64 %18, %170
  br label %180

180:                                              ; preds = %178, %176, %173, %143
  %181 = phi i64 [ %20, %143 ], [ %170, %173 ], [ %170, %176 ], [ %170, %178 ]
  %182 = phi i64 [ %113, %143 ], [ %175, %173 ], [ %18, %176 ], [ %179, %178 ]
  %183 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %183, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %184, i64 %182
  %186 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %185, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base"* %186, null
  br i1 %187, label %188, label %214

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %190 = bitcast %"struct.std::__1::__hash_node_base"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast i8* %114 to i64*
  store i64 %191, i64* %192, align 8
  %193 = bitcast %"struct.std::__1::__hash_node_base"* %189 to i8**
  store i8* %114, i8** %193, align 8
  store %"struct.std::__1::__hash_node_base"* %189, %"struct.std::__1::__hash_node_base"** %185, align 8
  %194 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, align 8
  %195 = icmp eq %"struct.std::__1::__hash_node_base"* %194, null
  br i1 %195, label %221, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %194, i64 1
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = call i64 @llvm.ctpop.i64(i64 %181) #12, !range !2
  %201 = icmp ugt i64 %200, 1
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = add i64 %181, -1
  %204 = and i64 %199, %203
  br label %209

205:                                              ; preds = %196
  %206 = icmp ult i64 %199, %181
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = urem i64 %199, %181
  br label %209

209:                                              ; preds = %202, %205, %207
  %210 = phi i64 [ %204, %202 ], [ %208, %207 ], [ %199, %205 ]
  %211 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %183, align 8
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %211, i64 %210
  %213 = bitcast %"struct.std::__1::__hash_node_base"** %212 to i8**
  br label %219

214:                                              ; preds = %180
  %215 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i8* %114 to i64*
  store i64 %216, i64* %217, align 8
  %218 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i8**
  br label %219

219:                                              ; preds = %209, %214
  %220 = phi i8** [ %218, %214 ], [ %213, %209 ]
  store i8* %114, i8** %220, align 8
  br label %221

221:                                              ; preds = %219, %188
  %222 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %223 = load i64, i64* %147, align 8
  %224 = add i64 %223, 1
  store i64 %224, i64* %147, align 8
  br label %225

225:                                              ; preds = %86, %92, %93, %100, %221
  %226 = phi i8 [ 1, %221 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %227 = phi %"struct.std::__1::__hash_node_base"* [ %222, %221 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %228 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %227, 0
  %229 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %228, i8 %226, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %229
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.339"*, i8 } @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.335"*, %"class.tint::ast::IdentifierExpression"** dereferenceable(8), %"class.tint::ast::IdentifierExpression"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %1, align 8
  %5 = ptrtoint %"class.tint::ast::IdentifierExpression"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.339"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.339"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.339"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.339"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.339"* %62 to %"class.tint::ast::IdentifierExpression"**
  %64 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %63, align 8
  %65 = icmp eq %"class.tint::ast::IdentifierExpression"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !19
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.tint::ast::IdentifierExpression"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !19
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !19
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !19
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.339"**
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %75, align 8, !noalias !19
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #12
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.335"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #12, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.339"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.339"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.339"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.339"* %118, %"struct.std::__1::__hash_node_base.339"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.339"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.339"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #12, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.339"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.339"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.339"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.339"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.339"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.339"*, i8 } undef, %"struct.std::__1::__hash_node_base.339"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.339"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.339"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.335"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.335"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.335"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.335"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.335"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.339"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.339"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.341", %"class.std::__1::__bucket_list_deallocator.341"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !22

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.339"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.339"* null, %"struct.std::__1::__hash_node_base.339"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.339"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.339"* %36, %"struct.std::__1::__hash_node_base.339"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.339"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.339"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.339"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.339"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.339"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.339"* %101 to %"class.tint::ast::IdentifierExpression"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.339"* %82, %"struct.std::__1::__hash_node_base.339"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.339"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.339"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.339"* %110 to %"class.tint::ast::IdentifierExpression"**
  %112 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %102, align 8
  %113 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %111, align 8
  %114 = icmp eq %"class.tint::ast::IdentifierExpression"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.339"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.339"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.339"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.339"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.339"* %80, %"struct.std::__1::__hash_node_base.339"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.339"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.339"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.335", %"class.std::__1::__hash_table.335"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.339"** null, %"struct.std::__1::__hash_node_base.339"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.339"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.339"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.341", %"class.std::__1::__bucket_list_deallocator.341"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFN4tint6SymbolES3_EE11__call_implINS0_20__default_alloc_funcIZNS2_9transform7Renamer3RunEPKNS2_7ProgramERKNS8_7DataMapEE3$_0S4_EEEES3_PKNS0_16__policy_storageEOS3_"(%"class.tint::Symbol"* noalias sret, %"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.tint::Symbol"* dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.tint::Symbol", align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.tint::Symbol", align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.tint::Symbol", align 4
  %12 = alloca %"class.tint::Symbol", align 4
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %1 to %"class.std::__1::__function::__default_alloc_func"**
  %14 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %13, align 8
  %15 = bitcast %"class.tint::Symbol"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12, !noalias !23
  call void @_ZN4tint6SymbolC1EOS0_(%"class.tint::Symbol"* nonnull %12, %"class.tint::Symbol"* dereferenceable(8) %2) #12, !noalias !28
  %16 = bitcast %"class.tint::Symbol"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12, !noalias !28
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12, !noalias !28
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12, !noalias !28
  %19 = bitcast %"class.tint::Symbol"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12, !noalias !28
  %20 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %14, i64 0, i32 0, i32 1
  %21 = load %"class.tint::transform::Renamer"*, %"class.tint::transform::Renamer"** %20, align 8, !noalias !31
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !31
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %14, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !31
  %26 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %25, align 8, !noalias !31
  %27 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %26, i64 0, i32 1
  %28 = load %"class.tint::Program"*, %"class.tint::Program"** %27, align 8, !noalias !31
  call void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"* %28) #12, !noalias !31
  %29 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %28, i64 0, i32 7
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %6, %"class.tint::Symbol"* nonnull dereferenceable(8) %12) #12, !noalias !31
  call void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.tint::SymbolTable"* %29, %"class.tint::Symbol"* nonnull %6) #12, !noalias !31
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %6) #12, !noalias !31
  %30 = getelementptr inbounds %"class.tint::transform::Renamer", %"class.tint::transform::Renamer"* %21, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 8, !noalias !31
  switch i32 %31, label %114 [
    i32 2, label %73
    i32 1, label %32
  ]

32:                                               ; preds = %3, %32
  %33 = phi i64 [ %44, %32 ], [ 563, %3 ]
  %34 = phi i8** [ %43, %32 ], [ getelementptr inbounds ([563 x i8*], [563 x i8*]* @_ZN4tint9transform12_GLOBAL__N_121kReservedKeywordsHLSLE, i64 0, i64 0), %3 ]
  %35 = lshr i64 %33, 1
  %36 = getelementptr inbounds i8*, i8** %34, i64 %35
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %37) #12
  %39 = icmp sgt i32 %38, 0
  %40 = getelementptr inbounds i8*, i8** %36, i64 1
  %41 = xor i64 %35, -1
  %42 = add i64 %33, %41
  %43 = select i1 %39, i8** %40, i8** %34
  %44 = select i1 %39, i64 %42, i64 %35
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %32

46:                                               ; preds = %32
  %47 = icmp eq i8** %43, getelementptr inbounds ([563 x i8*], [563 x i8*]* @_ZN4tint9transform12_GLOBAL__N_121kReservedKeywordsHLSLE, i64 1, i64 0)
  br i1 %47, label %52, label %48

48:                                               ; preds = %46
  %49 = load i8*, i8** %43, align 8
  %50 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %49) #12
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %114, label %52

52:                                               ; preds = %48, %46
  %53 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %25, align 8, !noalias !31
  %54 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %53, i64 0, i32 0
  %55 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %54, align 8
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %55) #12
  %56 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %55, i64 0, i32 9
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1, !noalias !31
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %22, i64 24, i1 false) #12, !noalias !31
  br label %65

62:                                               ; preds = %52
  %63 = load i8*, i8** %23, align 8, !noalias !31
  %64 = load i64, i64* %24, align 8, !noalias !31
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %63, i64 %64) #12
  br label %65

65:                                               ; preds = %62, %61
  call void @_ZN4tint11SymbolTable3NewENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* sret %0, %"class.tint::SymbolTable"* %56, %"class.std::__1::basic_string"* nonnull %7) #12
  %66 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1, !noalias !31
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %150

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8, !noalias !31
  call void @_ZdlPv(i8* %72) #13
  br label %150

73:                                               ; preds = %3, %73
  %74 = phi i64 [ %85, %73 ], [ 236, %3 ]
  %75 = phi i8** [ %84, %73 ], [ getelementptr inbounds ([236 x i8*], [236 x i8*]* @_ZN4tint9transform12_GLOBAL__N_120kReservedKeywordsMSLE, i64 0, i64 0), %3 ]
  %76 = lshr i64 %74, 1
  %77 = getelementptr inbounds i8*, i8** %75, i64 %76
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %78) #12
  %80 = icmp sgt i32 %79, 0
  %81 = getelementptr inbounds i8*, i8** %77, i64 1
  %82 = xor i64 %76, -1
  %83 = add i64 %74, %82
  %84 = select i1 %80, i8** %81, i8** %75
  %85 = select i1 %80, i64 %83, i64 %76
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %73
  %88 = icmp eq i8** %84, getelementptr inbounds ([236 x i8*], [236 x i8*]* @_ZN4tint9transform12_GLOBAL__N_120kReservedKeywordsMSLE, i64 1, i64 0)
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = load i8*, i8** %84, align 8
  %91 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %90) #12
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %114, label %93

93:                                               ; preds = %89, %87
  %94 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %25, align 8, !noalias !31
  %95 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %94, i64 0, i32 0
  %96 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %95, align 8
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %96) #12
  %97 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %96, i64 0, i32 9
  %98 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1, !noalias !31
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %22, i64 24, i1 false) #12, !noalias !31
  br label %106

103:                                              ; preds = %93
  %104 = load i8*, i8** %23, align 8, !noalias !31
  %105 = load i64, i64* %24, align 8, !noalias !31
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %104, i64 %105) #12
  br label %106

106:                                              ; preds = %103, %102
  call void @_ZN4tint11SymbolTable3NewENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* sret %0, %"class.tint::SymbolTable"* %97, %"class.std::__1::basic_string"* nonnull %8) #12
  %107 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1, !noalias !31
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %150

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8, !noalias !31
  call void @_ZdlPv(i8* %113) #13
  br label %150

114:                                              ; preds = %89, %48, %3
  %115 = bitcast %"class.tint::Symbol"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12, !noalias !31
  %116 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %116, align 4, !noalias !31
  %117 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %9, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %117, align 4, !noalias !31
  %118 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %25, align 8, !noalias !31
  %119 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %118, i64 0, i32 0
  %120 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %119, align 8
  %121 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12, !noalias !31
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %120) #12, !noalias !34
  %122 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %120, i64 0, i32 9
  %123 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  store i8 11, i8* %124, align 1, !noalias !37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.709, i64 0, i64 0), i64 11, i1 false) #12, !noalias !34
  %125 = getelementptr inbounds i8, i8* %121, i64 11
  store i8 0, i8* %125, align 1, !noalias !37
  call void @_ZN4tint11SymbolTable3NewENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* nonnull sret %9, %"class.tint::SymbolTable"* %122, %"class.std::__1::basic_string"* nonnull %4) #12
  %126 = load i8, i8* %124, align 1, !noalias !37
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %114
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8, !noalias !37
  call void @_ZdlPv(i8* %130) #13
  br label %131

131:                                              ; preds = %128, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12, !noalias !31
  %132 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %14, i64 0, i32 0, i32 2
  %133 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %132, align 8, !noalias !31
  %134 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #12, !noalias !31
  %135 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %25, align 8, !noalias !31
  %136 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %135, i64 0, i32 0
  %137 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %136, align 8
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %137) #12
  %138 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %137, i64 0, i32 9
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %11, %"class.tint::Symbol"* nonnull dereferenceable(8) %9) #12
  call void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.tint::SymbolTable"* %138, %"class.tint::Symbol"* nonnull %11) #12
  %139 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %133, i64 0, i32 0
  %140 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRS7_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %139, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %141 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1, !noalias !31
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %131
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8, !noalias !31
  call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %145, %131
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #12, !noalias !31
  call void @_ZN4tint6SymbolC1EOS0_(%"class.tint::Symbol"* %0, %"class.tint::Symbol"* nonnull dereferenceable(8) %9) #12
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12, !noalias !31
  %149 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %150

150:                                              ; preds = %148, %111, %106, %70, %65
  %151 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %98, %111 ], [ %98, %106 ], [ %57, %70 ], [ %57, %65 ], [ %149, %148 ]
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1, !noalias !31
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = load i8*, i8** %23, align 8, !noalias !31
  call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %150, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12, !noalias !28
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12, !noalias !23
  ret void
}

declare void @_ZN4tint6SymbolC1EOS0_(%"class.tint::Symbol"*, %"class.tint::Symbol"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"*) unnamed_addr #4

declare void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* sret, %"class.tint::SymbolTable"*, %"class.tint::Symbol"*) local_unnamed_addr #2

declare void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"*, %"class.tint::Symbol"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4tint11SymbolTable3NewENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* sret, %"class.tint::SymbolTable"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRS7_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #12
  %19 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %5, i8* %16, i64 %17) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #12
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %4
  %24 = call i64 @llvm.ctpop.i64(i64 %21) #12, !range !2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %113, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %113, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  %46 = load i8, i8* %7, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %12, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = load i8*, i8** %10, align 8
  %52 = select i1 %47, i8* %51, i8* %14
  %53 = icmp eq i64 %50, 0
  br label %54

54:                                               ; preds = %44, %97
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %99, %97 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %19
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %25, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %45
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %21
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %21
  br label %67

67:                                               ; preds = %61, %63, %65
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %34
  br i1 %69, label %70, label %113

70:                                               ; preds = %54, %67
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %74 to i64
  %80 = select i1 %75, i64 %78, i64 %79
  %81 = icmp eq i64 %80, %50
  br i1 %81, label %82, label %97

82:                                               ; preds = %70
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8*
  %86 = select i1 %75, i8* %84, i8* %85
  br i1 %75, label %93, label %87

87:                                               ; preds = %82
  br i1 %53, label %213, label %88

88:                                               ; preds = %87
  %89 = ptrtoint i8* %84 to i64
  %90 = trunc i64 %89 to i8
  %91 = load i8, i8* %52, align 1
  %92 = icmp eq i8 %91, %90
  br i1 %92, label %101, label %97

93:                                               ; preds = %82
  br i1 %53, label %213, label %94

94:                                               ; preds = %93
  %95 = call i32 @bcmp(i8* %86, i8* %52, i64 %50) #12
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %213, label %97

97:                                               ; preds = %108, %88, %70, %94
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %100, label %113, label %54

101:                                              ; preds = %88, %108
  %102 = phi i64 [ %105, %108 ], [ %79, %88 ]
  %103 = phi i8* [ %106, %108 ], [ %85, %88 ]
  %104 = phi i8* [ %109, %108 ], [ %52, %88 ]
  %105 = add i64 %102, -1
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %213, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %104, i64 1
  %110 = load i8, i8* %106, align 1
  %111 = load i8, i8* %109, align 1
  %112 = icmp eq i8 %110, %111
  br i1 %112, label %101, label %97

113:                                              ; preds = %67, %97, %40, %33, %4
  %114 = phi i64 [ %34, %33 ], [ -6148914691236517206, %4 ], [ %34, %40 ], [ %34, %97 ], [ %34, %67 ]
  %115 = call i8* @_Znwm(i64 64) #13, !noalias !38
  %116 = getelementptr inbounds i8, i8* %115, i64 16
  %117 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1, !noalias !38
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %113
  %122 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %122, i64 24, i1 false) #12, !noalias !38
  br label %129

123:                                              ; preds = %113
  %124 = bitcast i8* %116 to %"class.std::__1::basic_string"*
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8, !noalias !38
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8, !noalias !38
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %124, i8* %126, i64 %128) #12, !noalias !38
  br label %129

129:                                              ; preds = %121, %123
  %130 = getelementptr inbounds i8, i8* %115, i64 40
  %131 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #12, !noalias !38
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #12, !noalias !38
  %132 = getelementptr inbounds i8, i8* %115, i64 8
  %133 = bitcast i8* %132 to i64*
  store i64 %19, i64* %133, align 8, !noalias !38
  %134 = bitcast i8* %115 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %134, align 8, !noalias !38
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  %138 = uitofp i64 %137 to float
  %139 = uitofp i64 %21 to float
  %140 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %141 = load float, float* %140, align 4
  %142 = fmul float %141, %139
  %143 = fcmp olt float %142, %138
  %144 = or i1 %22, %143
  br i1 %144, label %145, label %168

145:                                              ; preds = %129
  %146 = shl i64 %21, 1
  %147 = icmp ult i64 %21, 3
  %148 = call i64 @llvm.ctpop.i64(i64 %21) #12, !range !2
  %149 = icmp ugt i64 %148, 1
  %150 = or i1 %147, %149
  %151 = zext i1 %150 to i64
  %152 = or i64 %146, %151
  %153 = fdiv float %138, %141
  %154 = call float @llvm.ceil.f32(float %153) #12
  %155 = fptoui float %154 to i64
  %156 = icmp ult i64 %152, %155
  %157 = select i1 %156, i64 %155, i64 %152
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %157)
  %158 = load i64, i64* %20, align 8
  %159 = call i64 @llvm.ctpop.i64(i64 %158) #12, !range !2
  %160 = icmp ugt i64 %159, 1
  br i1 %160, label %164, label %161

161:                                              ; preds = %145
  %162 = add i64 %158, -1
  %163 = and i64 %162, %19
  br label %168

164:                                              ; preds = %145
  %165 = icmp ult i64 %19, %158
  br i1 %165, label %168, label %166

166:                                              ; preds = %164
  %167 = urem i64 %19, %158
  br label %168

168:                                              ; preds = %166, %164, %161, %129
  %169 = phi i64 [ %21, %129 ], [ %158, %161 ], [ %158, %164 ], [ %158, %166 ]
  %170 = phi i64 [ %114, %129 ], [ %163, %161 ], [ %19, %164 ], [ %167, %166 ]
  %171 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %171, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %172, i64 %170
  %174 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base"* %174, null
  br i1 %175, label %176, label %202

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i8* %115 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8**
  store i8* %115, i8** %181, align 8
  store %"struct.std::__1::__hash_node_base"* %177, %"struct.std::__1::__hash_node_base"** %173, align 8
  %182 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %134, align 8
  %183 = icmp eq %"struct.std::__1::__hash_node_base"* %182, null
  br i1 %183, label %209, label %184

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 1
  %186 = bitcast %"struct.std::__1::__hash_node_base"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = call i64 @llvm.ctpop.i64(i64 %169) #12, !range !2
  %189 = icmp ugt i64 %188, 1
  br i1 %189, label %193, label %190

190:                                              ; preds = %184
  %191 = add i64 %169, -1
  %192 = and i64 %187, %191
  br label %197

193:                                              ; preds = %184
  %194 = icmp ult i64 %187, %169
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = urem i64 %187, %169
  br label %197

197:                                              ; preds = %190, %193, %195
  %198 = phi i64 [ %192, %190 ], [ %196, %195 ], [ %187, %193 ]
  %199 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %171, align 8
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %199, i64 %198
  %201 = bitcast %"struct.std::__1::__hash_node_base"** %200 to i8**
  br label %207

202:                                              ; preds = %168
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast i8* %115 to i64*
  store i64 %204, i64* %205, align 8
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  br label %207

207:                                              ; preds = %197, %202
  %208 = phi i8** [ %206, %202 ], [ %201, %197 ]
  store i8* %115, i8** %208, align 8
  br label %209

209:                                              ; preds = %207, %176
  %210 = bitcast i8* %115 to %"struct.std::__1::__hash_node_base"*
  %211 = load i64, i64* %135, align 8
  %212 = add i64 %211, 1
  store i64 %212, i64* %135, align 8
  br label %213

213:                                              ; preds = %87, %93, %94, %101, %209
  %214 = phi i8 [ 1, %209 ], [ 0, %101 ], [ 0, %94 ], [ 0, %93 ], [ 0, %87 ]
  %215 = phi %"struct.std::__1::__hash_node_base"* [ %210, %209 ], [ %55, %101 ], [ %55, %94 ], [ %55, %93 ], [ %55, %87 ]
  %216 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %215, 0
  %217 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %216, i8 %214, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %217
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

declare void @_ZN4tint12CloneContext18CloneableTransformC1Ev(%"struct.tint::CloneContext::CloneableTransform"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint12CloneContext18CloneableTransformD1Ev(%"struct.tint::CloneContext::CloneableTransform"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal %"class.tint::Cloneable"* @"_ZNSt3__110__function16__policy_invokerIFPN4tint9CloneableES4_EE11__call_implINS0_20__default_alloc_funcIZNS2_12CloneContext10ReplaceAllIZNS2_9transform7Renamer3RunEPKNS2_7ProgramERKNSB_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_S3_EE5valueES9_E4typeEOSL_EUlS4_E_S5_EEEES4_PKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.tint::Cloneable"*) #0 align 2 {
  %3 = alloca %"class.tint::Symbol", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.tint::Symbol", align 4
  %6 = alloca %"class.tint::Symbol", align 4
  %7 = alloca %"class.tint::Source", align 8
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.428"**
  %9 = load %"class.std::__1::__function::__default_alloc_func.428"*, %"class.std::__1::__function::__default_alloc_func.428"** %8, align 8
  %10 = icmp eq %"class.tint::Cloneable"* %1, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.tint::Cloneable", %"class.tint::Cloneable"* %1, i64 0, i32 0
  %13 = bitcast %"class.tint::Cloneable"* %1 to %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)***
  %14 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)**, %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)*** %13, align 8
  %15 = getelementptr inbounds %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)** %14, i64 2
  %16 = load %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)*, %"struct.tint::TypeInfo"* (%"class.tint::Castable.65"*)** %15, align 8
  %17 = tail call dereferenceable(16) %"struct.tint::TypeInfo"* %16(%"class.tint::Castable.65"* nonnull %12) #12
  %18 = tail call zeroext i1 @_ZNK4tint8TypeInfo2IsERKS0_(%"struct.tint::TypeInfo"* %17, %"struct.tint::TypeInfo"* nonnull dereferenceable(16) @_ZN4tint6detail10TypeInfoOfINS_3ast20IdentifierExpressionEE4infoE) #12
  %19 = bitcast %"class.tint::Cloneable"* %1 to %"class.tint::ast::IdentifierExpression"*
  %20 = select i1 %18, %"class.tint::ast::IdentifierExpression"* %19, %"class.tint::ast::IdentifierExpression"* null
  br label %21

21:                                               ; preds = %11, %2
  %22 = phi %"class.tint::ast::IdentifierExpression"* [ %20, %11 ], [ null, %2 ]
  %23 = bitcast %"class.tint::Symbol"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.428", %"class.std::__1::__function::__default_alloc_func.428"* %9, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::unordered_set"*, %"class.std::__1::unordered_set"** %24, align 8
  %26 = ptrtoint %"class.tint::ast::IdentifierExpression"* %22 to i64
  %27 = lshr i64 %26, 32
  %28 = shl i64 %26, 3
  %29 = and i64 %28, 4294967288
  %30 = add nuw nsw i64 %29, 8
  %31 = xor i64 %30, %27
  %32 = mul i64 %31, -7070675565921424023
  %33 = lshr i64 %32, 47
  %34 = xor i64 %32, %27
  %35 = xor i64 %34, %33
  %36 = mul i64 %35, -7070675565921424023
  %37 = lshr i64 %36, 47
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %153, label %43

43:                                               ; preds = %21
  %44 = tail call i64 @llvm.ctpop.i64(i64 %41) #12, !range !2
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = add i64 %41, -1
  %48 = and i64 %39, %47
  br label %53

49:                                               ; preds = %43
  %50 = icmp ult i64 %39, %41
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %39, %41
  br label %53

53:                                               ; preds = %51, %49, %46
  %54 = phi i64 [ %48, %46 ], [ %52, %51 ], [ %39, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.339"**, %"struct.std::__1::__hash_node_base.339"*** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %56, i64 %54
  %58 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.339"* %58, null
  br i1 %59, label %153, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %58, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.339"* %62, null
  br i1 %63, label %153, label %64

64:                                               ; preds = %60
  %65 = add i64 %41, -1
  br label %66

66:                                               ; preds = %87, %64
  %67 = phi %"struct.std::__1::__hash_node_base.339"* [ %62, %64 ], [ %89, %87 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.339"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %39, %70
  br i1 %71, label %82, label %72

72:                                               ; preds = %66
  br i1 %45, label %75, label %73

73:                                               ; preds = %72
  %74 = and i64 %70, %65
  br label %79

75:                                               ; preds = %72
  %76 = icmp ult i64 %70, %41
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = urem i64 %70, %41
  br label %79

79:                                               ; preds = %77, %75, %73
  %80 = phi i64 [ %74, %73 ], [ %78, %77 ], [ %70, %75 ]
  %81 = icmp eq i64 %80, %54
  br i1 %81, label %87, label %153

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %67, i64 2
  %84 = bitcast %"struct.std::__1::__hash_node_base.339"* %83 to %"class.tint::ast::IdentifierExpression"**
  %85 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %84, align 8
  %86 = icmp eq %"class.tint::ast::IdentifierExpression"* %85, %22
  br i1 %86, label %91, label %87

87:                                               ; preds = %82, %79
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.339", %"struct.std::__1::__hash_node_base.339"* %67, i64 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.339"*, %"struct.std::__1::__hash_node_base.339"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.339"* %89, null
  br i1 %90, label %153, label %66

91:                                               ; preds = %82
  %92 = bitcast %"class.tint::Symbol"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %93, align 4
  %94 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %3, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %94, align 4
  %95 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %22, i64 0, i32 1
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %3, %"class.tint::Symbol"* dereferenceable(8) %95) #12
  %96 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.428", %"class.std::__1::__function::__default_alloc_func.428"* %9, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 24, i1 false) #12
  %99 = load %"class.tint::Program"**, %"class.tint::Program"*** %98, align 8
  %100 = load %"class.tint::Program"*, %"class.tint::Program"** %99, align 8
  call void @_ZNK4tint7Program14AssertNotMovedEv(%"class.tint::Program"* %100) #12
  %101 = getelementptr inbounds %"class.tint::Program", %"class.tint::Program"* %100, i64 0, i32 7
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %5, %"class.tint::Symbol"* nonnull dereferenceable(8) %3) #12
  call void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.tint::SymbolTable"* %101, %"class.tint::Symbol"* nonnull %5) #12
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %5) #12
  %102 = bitcast %"class.tint::Symbol"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  %103 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %103, align 4
  %104 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %6, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %104, align 4
  %105 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.428", %"class.std::__1::__function::__default_alloc_func.428"* %9, i64 0, i32 0, i32 0, i32 2
  %106 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %105, align 8
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %106) #12
  %107 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %106, i64 0, i32 9
  call void @_ZN4tint11SymbolTable8RegisterERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* nonnull sret %6, %"class.tint::SymbolTable"* %107, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %108 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.428", %"class.std::__1::__function::__default_alloc_func.428"* %9, i64 0, i32 0, i32 0, i32 3
  %109 = load %"class.tint::CloneContext"*, %"class.tint::CloneContext"** %108, align 8
  %110 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %109, i64 0, i32 0
  %111 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %110, align 8
  %112 = bitcast %"class.tint::Source"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %114 = bitcast %"class.tint::Source"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 %114, i64 32, i1 false) #12
  %115 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %7, i64 0, i32 1
  %116 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1, !noalias !46
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %91
  %122 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %123 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 24, i1 false) #12
  br label %129

124:                                              ; preds = %91
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8, !noalias !46
  %127 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8, !noalias !46
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %115, i8* %126, i64 %128) #12
  br label %129

129:                                              ; preds = %124, %121
  %130 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %7, i64 0, i32 2
  %131 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %132 = bitcast %"class.tint::Source::FileContent"** %131 to i64*
  %133 = load i64, i64* %132, align 8, !noalias !46
  %134 = bitcast %"class.tint::Source::FileContent"** %130 to i64*
  store i64 %133, i64* %134, align 8, !alias.scope !46
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %111) #12
  %135 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %111, i64 0, i32 5
  %136 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %111, i64 0, i32 2
  %137 = call %"class.tint::ast::IdentifierExpression"* @_ZN4tint14BlockAllocatorINS_3ast4NodeEE6CreateINS1_20IdentifierExpressionEJRNS_9ProgramIDERKNS_6SourceERNS_6SymbolEEEEPT_DpOT0_(%"class.tint::BlockAllocator.45"* %135, %"class.tint::ProgramID"* dereferenceable(4) %136, %"class.tint::Source"* nonnull dereferenceable(64) %7, %"class.tint::Symbol"* nonnull dereferenceable(8) %6) #12
  %138 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %129
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %142, %129
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %112) #12
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  %146 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  %151 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %150, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br label %153

153:                                              ; preds = %79, %87, %21, %53, %60, %152
  %154 = phi %"class.tint::ast::IdentifierExpression"* [ %137, %152 ], [ null, %53 ], [ null, %21 ], [ null, %60 ], [ null, %87 ], [ null, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %155 = getelementptr inbounds %"class.tint::ast::IdentifierExpression", %"class.tint::ast::IdentifierExpression"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.tint::Cloneable"* %155
}

declare void @_ZN4tint11SymbolTable8RegisterERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.tint::Symbol"* sret, %"class.tint::SymbolTable"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.tint::ast::IdentifierExpression"* @_ZN4tint14BlockAllocatorINS_3ast4NodeEE6CreateINS1_20IdentifierExpressionEJRNS_9ProgramIDERKNS_6SourceERNS_6SymbolEEEEPT_DpOT0_(%"class.tint::BlockAllocator.45"*, %"class.tint::ProgramID"* dereferenceable(4), %"class.tint::Source"* dereferenceable(64), %"class.tint::Symbol"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.tint::Symbol", align 4
  %6 = alloca %"class.std::__1::unique_ptr.429", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.429"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.tint::Symbol"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 88) #13
  %11 = bitcast i8* %10 to %"class.tint::ast::IdentifierExpression"*
  %12 = getelementptr inbounds %"class.tint::ProgramID", %"class.tint::ProgramID"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %5, %"class.tint::Symbol"* dereferenceable(8) %3) #12
  call void @_ZN4tint3ast20IdentifierExpressionC1ENS_9ProgramIDERKNS_6SourceENS_6SymbolE(%"class.tint::ast::IdentifierExpression"* nonnull %11, i32 %13, %"class.tint::Source"* dereferenceable(64) %2, %"class.tint::Symbol"* nonnull %5) #12
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %14 = bitcast %"class.std::__1::unique_ptr.429"* %6 to i8**
  store i8* %10, i8** %14, align 8
  %15 = getelementptr inbounds %"class.tint::BlockAllocator.45", %"class.tint::BlockAllocator.45"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %15, align 8
  %17 = getelementptr inbounds %"class.tint::BlockAllocator.45", %"class.tint::BlockAllocator.45"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.48"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %4
  %21 = ptrtoint i8* %10 to i64
  store %"class.tint::ast::IdentifierExpression"* null, %"class.tint::ast::IdentifierExpression"** %8, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.48"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.48"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.48"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.tint::BlockAllocator.45", %"class.tint::BlockAllocator.45"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_20IdentifierExpressionENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.46"* %27, %"class.std::__1::unique_ptr.429"* nonnull dereferenceable(8) %6) #12
  br label %28

28:                                               ; preds = %20, %26
  %29 = load %"class.tint::ast::IdentifierExpression"*, %"class.tint::ast::IdentifierExpression"** %8, align 8
  store %"class.tint::ast::IdentifierExpression"* null, %"class.tint::ast::IdentifierExpression"** %8, align 8
  %30 = icmp eq %"class.tint::ast::IdentifierExpression"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.tint::ast::IdentifierExpression"* %29 to void (%"class.tint::ast::IdentifierExpression"*)***
  %33 = load void (%"class.tint::ast::IdentifierExpression"*)**, void (%"class.tint::ast::IdentifierExpression"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.tint::ast::IdentifierExpression"*)*, void (%"class.tint::ast::IdentifierExpression"*)** %33, i64 1
  %35 = load void (%"class.tint::ast::IdentifierExpression"*)*, void (%"class.tint::ast::IdentifierExpression"*)** %34, align 8
  call void %35(%"class.tint::ast::IdentifierExpression"* nonnull %29) #12
  br label %36

36:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.tint::ast::IdentifierExpression"* %11
}

declare void @_ZN4tint3ast20IdentifierExpressionC1ENS_9ProgramIDERKNS_6SourceENS_6SymbolE(%"class.tint::ast::IdentifierExpression"*, i32, %"class.tint::Source"* dereferenceable(64), %"class.tint::Symbol"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_20IdentifierExpressionENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.46"*, %"class.std::__1::unique_ptr.429"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.48"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.46"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.48"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.48"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.48"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.48"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.429"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.tint::ast::IdentifierExpression"* null, %"class.tint::ast::IdentifierExpression"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.48"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.48"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.48"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.48"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.tint::ast::Node"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.48"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.48"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.48"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.48"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !49

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.48"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.48"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.48"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.48"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.48"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.48"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.48"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.48"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.48"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.48"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.48"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.48"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.48"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.48"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.48"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.48"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.48"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.48"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.48"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.48"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.48"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.48"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.48"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.48"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.48"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.48"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.48"*
  %138 = icmp eq %"class.std::__1::unique_ptr.48"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.48"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.tint::ast::Node"*, %"class.tint::ast::Node"** %142, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %142, align 8
  %144 = icmp eq %"class.tint::ast::Node"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.tint::ast::Node"* %143 to void (%"class.tint::ast::Node"*)***
  %147 = load void (%"class.tint::ast::Node"*)**, void (%"class.tint::ast::Node"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %147, i64 1
  %149 = load void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %148, align 8
  tail call void %149(%"class.tint::ast::Node"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.48"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #13, !noalias !50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4tint12CloneContext18CloneableTransformENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.293"*, %"struct.tint::CloneContext::CloneableTransform"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.293", %"class.std::__1::vector.293"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.tint::CloneContext::CloneableTransform"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.293"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.293"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.293", %"class.std::__1::vector.293"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.tint::CloneContext::CloneableTransform"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.tint::CloneContext::CloneableTransform"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %33, i64 %32
  %36 = ptrtoint %"struct.tint::CloneContext::CloneableTransform"* %35 to i64
  tail call void @_ZN4tint12CloneContext18CloneableTransformC1ERKS1_(%"struct.tint::CloneContext::CloneableTransform"* %34, %"struct.tint::CloneContext::CloneableTransform"* dereferenceable(40) %1) #12
  %37 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %34, i64 1
  %38 = ptrtoint %"struct.tint::CloneContext::CloneableTransform"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.293", %"class.std::__1::vector.293"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %39, align 8
  %41 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %3, align 8
  %42 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.tint::CloneContext::CloneableTransform"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %47, i64 -1
  tail call void @_ZN4tint12CloneContext18CloneableTransformC1ERKS1_(%"struct.tint::CloneContext::CloneableTransform"* %48, %"struct.tint::CloneContext::CloneableTransform"* dereferenceable(40) %49) #12
  %50 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.tint::CloneContext::CloneableTransform"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.tint::CloneContext::CloneableTransform"*
  %60 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.tint::CloneContext::CloneableTransform"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.tint::CloneContext::CloneableTransform", %"struct.tint::CloneContext::CloneableTransform"* %62, i64 -1
  tail call void @_ZN4tint12CloneContext18CloneableTransformD1Ev(%"struct.tint::CloneContext::CloneableTransform"* %63) #12
  %64 = icmp eq %"struct.tint::CloneContext::CloneableTransform"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4tint12CloneContext18CloneableTransformC1ERKS1_(%"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"* dereferenceable(40)) unnamed_addr #2

declare void @_ZN4tint7ProgramC1EOS0_(%"class.tint::Program"*, %"class.tint::Program"* dereferenceable(304)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"*, %"struct.tint::TypeInfo"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.450"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.tint::TypeInfo"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"struct.tint::TypeInfo"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.218"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.218"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.218"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.218"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.218"* %65 to %"struct.tint::TypeInfo"**
  %67 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %66, align 8
  %68 = icmp eq %"struct.tint::TypeInfo"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !55
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !55
  %75 = load i64, i64* %74, align 8, !noalias !55
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !55
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !55
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !55
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.218"**
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %81, align 8, !noalias !55
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.218"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.218"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.218"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.218"* %124, %"struct.std::__1::__hash_node_base.218"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.218"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.218"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.218"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.218"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.218"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.218"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.218"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } undef, %"struct.std::__1::__hash_node_base.218"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.218"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.214"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.214"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.214"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.218"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.218"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.220", %"class.std::__1::__bucket_list_deallocator.220"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !58

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.218"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.218"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.218"* %36, %"struct.std::__1::__hash_node_base.218"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.218"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.218"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.218"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.218"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.218"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.218"* %101 to %"struct.tint::TypeInfo"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.218"* %82, %"struct.std::__1::__hash_node_base.218"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.218"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.218"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.218"* %110 to %"struct.tint::TypeInfo"**
  %112 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %102, align 8
  %113 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %111, align 8
  %114 = icmp eq %"struct.tint::TypeInfo"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.218"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.218"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.218"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.218"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.218"* %80, %"struct.std::__1::__hash_node_base.218"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.218"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.218"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.218"** null, %"struct.std::__1::__hash_node_base.218"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.218"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.218"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.220", %"class.std::__1::__bucket_list_deallocator.220"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!13 = !{i8 0, i8 2}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__112__hash_tableIPN4tint3ast20IdentifierExpressionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!22 = distinct !{!22, !15}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__128__invoke_void_return_wrapperIN4tint6SymbolELb0EE6__callIJRZNS1_9transform7Renamer3RunEPKNS1_7ProgramERKNS5_7DataMapEE3$_0S2_EEES2_DpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__128__invoke_void_return_wrapperIN4tint6SymbolELb0EE6__callIJRZNS1_9transform7Renamer3RunEPKNS1_7ProgramERKNS5_7DataMapEE3$_0S2_EEES2_DpOT_"}
!26 = distinct !{!26, !27, !"_ZNSt3__110__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS2_7ProgramERKNS3_7DataMapEE3$_0FNS2_6SymbolESC_EEclEOSC_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__110__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS2_7ProgramERKNS3_7DataMapEE3$_0FNS2_6SymbolESC_EEclEOSC_"}
!28 = !{!29, !24, !26}
!29 = distinct !{!29, !30, !"_ZNSt3__18__invokeIRZN4tint9transform7Renamer3RunEPKNS1_7ProgramERKNS2_7DataMapEE3$_0JNS1_6SymbolEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSD_DpOSE_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__18__invokeIRZN4tint9transform7Renamer3RunEPKNS1_7ProgramERKNS2_7DataMapEE3$_0JNS1_6SymbolEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSD_DpOSE_"}
!31 = !{!32, !29, !24, !26}
!32 = distinct !{!32, !33, !"_ZZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapEENK3$_0clENS_6SymbolE: argument 0"}
!33 = distinct !{!33, !"_ZZN4tint9transform7Renamer3RunEPKNS_7ProgramERKNS0_7DataMapEENK3$_0clENS_6SymbolE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN4tint14ProgramBuilder3SymEv: argument 0"}
!36 = distinct !{!36, !"_ZN4tint14ProgramBuilder3SymEv"}
!37 = !{!35, !32, !29, !24, !26}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRS7_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRS7_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISO_EEEEEEmOT_DpOT0_"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!44 = distinct !{!44, !45, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint9transform7Renamer3RunEPKNS4_7ProgramERKNS5_7DataMapEE3$_0FNS4_6SymbolESE_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE: argument 0"}
!48 = distinct !{!48, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE"}
!49 = distinct !{!49, !15}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!53 = distinct !{!53, !54, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN4tint12CloneContext10ReplaceAllIZNS4_9transform7Renamer3RunEPKNS4_7ProgramERKNS7_7DataMapEE3$_1EERNS_9enable_ifIXsr16ParamTypeIsPtrOfIT_NS4_9CloneableEEE5valueES5_E4typeEOSH_EUlPSI_E_FSN_SN_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSS_IJEEEEEENS6_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSL_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSS_IJEEEEEENS6_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSL_ISY_EEEEEEmOT_DpOT0_"}
!58 = distinct !{!58, !15}
