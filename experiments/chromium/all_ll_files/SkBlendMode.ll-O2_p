; ModuleID = '../../third_party/skia/src/core/SkBlendMode.cpp'
source_filename = "../../third_party/skia/src/core/SkBlendMode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.CoeffRec = type { i32, i32 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkRasterPipeline_ = type { %class.SkRasterPipeline, %class.SkSTArenaAlloc }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [256 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }

@_ZL7gCoeffs = internal unnamed_addr constant [15 x %struct.CoeffRec] [%struct.CoeffRec zeroinitializer, %struct.CoeffRec { i32 1, i32 0 }, %struct.CoeffRec { i32 0, i32 1 }, %struct.CoeffRec { i32 1, i32 7 }, %struct.CoeffRec { i32 9, i32 1 }, %struct.CoeffRec { i32 8, i32 0 }, %struct.CoeffRec { i32 0, i32 6 }, %struct.CoeffRec { i32 9, i32 0 }, %struct.CoeffRec { i32 0, i32 7 }, %struct.CoeffRec { i32 8, i32 7 }, %struct.CoeffRec { i32 9, i32 6 }, %struct.CoeffRec { i32 9, i32 7 }, %struct.CoeffRec { i32 1, i32 1 }, %struct.CoeffRec { i32 0, i32 2 }, %struct.CoeffRec { i32 1, i32 3 }], align 16
@switch.table._Z17SkBlendMode_Apply11SkBlendModeRK8SkRGBA4fIL11SkAlphaType2EES4_ = private unnamed_addr constant [25 x i32] [i32 100, i32 102, i32 98, i32 103, i32 99, i32 101, i32 97, i32 110, i32 108, i32 106, i32 109, i32 118, i32 113, i32 117, i32 112, i32 111, i32 116, i32 119, i32 114, i32 115, i32 107, i32 120, i32 121, i32 122, i32 123], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z34SkBlendMode_ShouldPreScaleCoverage11SkBlendModeb(i32, i1 zeroext) local_unnamed_addr #0 {
  switch i32 %0, label %5 [
    i32 2, label %6
    i32 4, label %6
    i32 12, label %6
    i32 8, label %3
    i32 9, label %3
    i32 3, label %3
    i32 11, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2
  %4 = xor i1 %1, true
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %2, %2, %5, %3
  %7 = phi i1 [ false, %5 ], [ %4, %3 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z35SkBlendMode_SupportsCoverageAsAlpha11SkBlendMode(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -2
  %3 = icmp ult i32 %2, 11
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i11
  %6 = lshr i11 -313, %5
  %7 = and i11 %6, 1
  %8 = icmp ne i11 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_Z19SkBlendMode_AsCoeff11SkBlendModeP16SkBlendModeCoeffS1_(i32, i32*, i32*) local_unnamed_addr #1 {
  %4 = icmp sgt i32 %0, 14
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32* %1, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = sext i32 %0 to i64
  %9 = getelementptr inbounds [15 x %struct.CoeffRec], [15 x %struct.CoeffRec]* @_ZL7gCoeffs, i64 0, i64 %8, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %1, align 4
  br label %11

11:                                               ; preds = %5, %7
  %12 = icmp eq i32* %2, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = sext i32 %0 to i64
  %15 = getelementptr inbounds [15 x %struct.CoeffRec], [15 x %struct.CoeffRec]* @_ZL7gCoeffs, i64 0, i64 %14, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %2, align 4
  br label %17

17:                                               ; preds = %13, %11, %3
  %18 = phi i1 [ false, %3 ], [ true, %11 ], [ true, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32, %class.SkRasterPipeline*) local_unnamed_addr #2 {
  switch i32 %0, label %30 [
    i32 0, label %3
    i32 1, label %32
    i32 2, label %4
    i32 28, label %29
    i32 4, label %5
    i32 5, label %6
    i32 6, label %7
    i32 7, label %8
    i32 8, label %9
    i32 9, label %10
    i32 10, label %11
    i32 11, label %12
    i32 12, label %13
    i32 13, label %14
    i32 14, label %15
    i32 15, label %16
    i32 16, label %17
    i32 17, label %18
    i32 18, label %19
    i32 19, label %20
    i32 20, label %21
    i32 21, label %22
    i32 22, label %23
    i32 23, label %24
    i32 24, label %25
    i32 25, label %26
    i32 26, label %27
    i32 27, label %28
  ]

3:                                                ; preds = %2
  br label %30

4:                                                ; preds = %2
  br label %30

5:                                                ; preds = %2
  br label %30

6:                                                ; preds = %2
  br label %30

7:                                                ; preds = %2
  br label %30

8:                                                ; preds = %2
  br label %30

9:                                                ; preds = %2
  br label %30

10:                                               ; preds = %2
  br label %30

11:                                               ; preds = %2
  br label %30

12:                                               ; preds = %2
  br label %30

13:                                               ; preds = %2
  br label %30

14:                                               ; preds = %2
  br label %30

15:                                               ; preds = %2
  br label %30

16:                                               ; preds = %2
  br label %30

17:                                               ; preds = %2
  br label %30

18:                                               ; preds = %2
  br label %30

19:                                               ; preds = %2
  br label %30

20:                                               ; preds = %2
  br label %30

21:                                               ; preds = %2
  br label %30

22:                                               ; preds = %2
  br label %30

23:                                               ; preds = %2
  br label %30

24:                                               ; preds = %2
  br label %30

25:                                               ; preds = %2
  br label %30

26:                                               ; preds = %2
  br label %30

27:                                               ; preds = %2
  br label %30

28:                                               ; preds = %2
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %2, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  %31 = phi i32 [ 123, %29 ], [ 122, %28 ], [ 121, %27 ], [ 120, %26 ], [ 107, %25 ], [ 115, %24 ], [ 114, %23 ], [ 119, %22 ], [ 116, %21 ], [ 111, %20 ], [ 112, %19 ], [ 117, %18 ], [ 113, %17 ], [ 118, %16 ], [ 109, %15 ], [ 106, %14 ], [ 108, %13 ], [ 110, %12 ], [ 97, %11 ], [ 101, %10 ], [ 99, %9 ], [ 103, %8 ], [ 98, %7 ], [ 102, %6 ], [ 100, %5 ], [ 2, %4 ], [ 105, %3 ], [ 104, %2 ]
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 %31, i8* null) #7
  br label %32

32:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_Z17SkBlendMode_Apply11SkBlendModeRK8SkRGBA4fIL11SkAlphaType2EES4_(i32, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRGBA4f* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 {
  %4 = alloca %class.SkRasterPipeline_, align 8
  %5 = alloca %struct.SkRGBA4f, align 4
  %6 = alloca %struct.SkRGBA4f, align 4
  %7 = alloca %struct.SkRGBA4f, align 8
  %8 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %9 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %10 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  switch i32 %0, label %37 [
    i32 0, label %71
    i32 1, label %11
    i32 2, label %17
    i32 3, label %23
  ]

11:                                               ; preds = %3
  %12 = bitcast %struct.SkRGBA4f* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 0, i32 2
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  br label %71

17:                                               ; preds = %3
  %18 = bitcast %struct.SkRGBA4f* %2 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %2, i64 0, i32 2
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  br label %71

23:                                               ; preds = %3
  %24 = bitcast %struct.SkRGBA4f* %1 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 1
  %26 = bitcast %struct.SkRGBA4f* %2 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 1
  %28 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fsub float 1.000000e+00, %29
  %31 = insertelement <4 x float> undef, float %30, i32 0
  %32 = shufflevector <4 x float> %31, <4 x float> undef, <4 x i32> zeroinitializer
  %33 = fmul <4 x float> %27, %32
  %34 = fadd <4 x float> %25, %33
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %36 = shufflevector <4 x float> %34, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  br label %71

37:                                               ; preds = %3
  %38 = bitcast %class.SkRasterPipeline_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %38) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 312, i1 false)
  %39 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %4, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %4, i64 0, i32 1, i32 0, i32 0, i64 256
  %41 = bitcast i8* %40 to %class.SkArenaAlloc*
  call void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %39, %class.SkArenaAlloc* %41) #7
  %42 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %41, i8* %42, i64 256, i64 256) #7
  %43 = bitcast %struct.SkRGBA4f* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %44, i64 16, i1 false)
  %45 = bitcast %struct.SkRGBA4f* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #7
  %46 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %46, i64 16, i1 false)
  %47 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #7
  %48 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %7, i64 0, i32 2
  %49 = bitcast %struct.SkRasterPipeline_MemoryCtx* %8 to i8*
  %50 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %51 = bitcast %struct.SkRasterPipeline_MemoryCtx* %8 to %struct.SkRGBA4f**
  store %struct.SkRGBA4f* %5, %struct.SkRGBA4f** %51, align 8
  %52 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %8, i64 0, i32 1
  store i32 0, i32* %52, align 8
  %53 = bitcast %struct.SkRasterPipeline_MemoryCtx* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false)
  %54 = bitcast %struct.SkRasterPipeline_MemoryCtx* %9 to %struct.SkRGBA4f**
  store %struct.SkRGBA4f* %6, %struct.SkRGBA4f** %54, align 8
  %55 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %9, i64 0, i32 1
  store i32 0, i32* %55, align 8
  %56 = bitcast %struct.SkRasterPipeline_MemoryCtx* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  %57 = bitcast %struct.SkRasterPipeline_MemoryCtx* %10 to %struct.SkRGBA4f**
  store %struct.SkRGBA4f* %7, %struct.SkRGBA4f** %57, align 8
  %58 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %10, i64 0, i32 1
  store i32 0, i32* %58, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %39, i32 47, i8* nonnull %53) #7
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %39, i32 1, i8* null) #7
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %39, i32 47, i8* nonnull %49) #7
  %59 = add i32 %0, -4
  %60 = icmp ult i32 %59, 25
  br i1 %60, label %61, label %65

61:                                               ; preds = %37
  %62 = sext i32 %59 to i64
  %63 = getelementptr inbounds [25 x i32], [25 x i32]* @switch.table._Z17SkBlendMode_Apply11SkBlendModeRK8SkRGBA4fIL11SkAlphaType2EES4_, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %61, %37
  %66 = phi i32 [ 104, %37 ], [ %64, %61 ]
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %39, i32 %66, i8* null) #7
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %39, i32 49, i8* nonnull %56) #7
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %39, i64 0, i64 0, i64 1, i64 1) #7
  %67 = bitcast %struct.SkRGBA4f* %7 to <2 x float>*
  %68 = load <2 x float>, <2 x float>* %67, align 8
  %69 = bitcast float* %48 to <2 x float>*
  %70 = load <2 x float>, <2 x float>* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %41) #7
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %38) #7
  br label %71

71:                                               ; preds = %3, %65, %23, %17, %11
  %72 = phi <2 x float> [ %68, %65 ], [ %35, %23 ], [ %19, %17 ], [ %13, %11 ], [ zeroinitializer, %3 ]
  %73 = phi <2 x float> [ %70, %65 ], [ %36, %23 ], [ %22, %17 ], [ %16, %11 ], [ zeroinitializer, %3 ]
  %74 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %72, 0
  %75 = insertvalue { <2 x float>, <2 x float> } %74, <2 x float> %73, 1
  ret { <2 x float>, <2 x float> } %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline*, i64, i64, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #6

declare void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #4

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
