; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_cidfont.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_cidfont.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::CIDTransform" = type { i16, i8, i8, i8, i8, i8, i8 }
%class.CPDF_CIDFont = type { %class.CPDF_Font, %"class.fxcrt::RetainPtr.105", %"class.fxcrt::UnownedPtr.138", %"class.fxcrt::RetainPtr.54", %"class.std::__1::unique_ptr.141", i8, i8, i8, i8, i8, i16, i16, i16, %"class.std::__1::vector.193", %"class.std::__1::vector.193", [256 x %struct.FX_RECT] }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.46", %"class.fxcrt::RetainPtr.54", %"class.fxcrt::RetainPtr.93", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.99", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.15", %"class.fxcrt::RetainPtr.19" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.45", i64 }
%"class.fxcrt::UnownedPtr.45" = type { i8* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.fxcrt::RetainPtr.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.58" }
%"class.fxcrt::RetainPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.CPDF_CMap* }
%class.CPDF_CMap = type { %"class.fxcrt::Retainable", i8, i8, i8, i8, i32, %"class.std::__1::vector.109", %"class.std::__1::vector.114", %"class.std::__1::vector.121", %"class.std::__1::vector.128", %"class.fxcrt::UnownedPtr.135" }
%"class.std::__1::vector.109" = type { i64*, i64, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"*, %"class.std::__1::__compressed_pair.116" }
%"struct.CPDF_CMap::CodeRange" = type { i64, [4 x i8], [4 x i8] }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.CPDF_CMap::CodeRange"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i16*, i16*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i16* }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"*, %"class.std::__1::__compressed_pair.130" }
%"struct.CPDF_CMap::CIDRange" = type { i32, i32, i16 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.CPDF_CMap::CIDRange"* }
%"class.fxcrt::UnownedPtr.135" = type { %struct.FXCMAP_CMap* }
%struct.FXCMAP_CMap = type { i8*, i16*, %struct.FXCMAP_DWordCIDMap*, i16, i16, i8, i8 }
%struct.FXCMAP_DWordCIDMap = type { i16, i16, i16, i16 }
%"class.fxcrt::UnownedPtr.138" = type { %class.CPDF_CID2UnicodeMap* }
%class.CPDF_CID2UnicodeMap = type { i8, %"class.pdfium::span.139" }
%"class.pdfium::span.139" = type { %"class.fxcrt::UnownedPtr.140", i64 }
%"class.fxcrt::UnownedPtr.140" = type { i16* }
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.64", %"class.fxcrt::RetainPtr.85" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.39", %"class.fxcrt::UnownedPtr.45" }
%"class.fxcrt::RetainPtr.64" = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.CFX_CTTGSUBTable* }
%class.CFX_CTTGSUBTable = type { %"class.std::__1::set.144", %"class.std::__1::vector.154", %"class.std::__1::vector.168", %"class.std::__1::vector.175" }
%"class.std::__1::set.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"class.std::__1::__compressed_pair.163" }
%"struct.CFX_CTTGSUBTable::TScriptRecord" = type { i32, i16, %"class.std::__1::vector.156" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"class.std::__1::__compressed_pair.158" }
%"struct.CFX_CTTGSUBTable::TLangSysRecord" = type { i32, i16, i16, %"class.std::__1::vector.121" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.CFX_CTTGSUBTable::TLangSysRecord"* }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.CFX_CTTGSUBTable::TScriptRecord"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"class.std::__1::__compressed_pair.170" }
%"struct.CFX_CTTGSUBTable::TFeatureRecord" = type { i32, i16, %"class.std::__1::vector.121" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.CFX_CTTGSUBTable::TFeatureRecord"* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"*, %"class.std::__1::__compressed_pair.185" }
%"struct.CFX_CTTGSUBTable::TLookup" = type { i16, i16, %"class.std::__1::vector.177" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.std::__1::unique_ptr.179"*, %"class.std::__1::unique_ptr.179"*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::unique_ptr.179" = type opaque
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::unique_ptr.179"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.CFX_CTTGSUBTable::TLookup"* }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { i32*, i32*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { i32* }
%class.CPDF_Document = type opaque
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.263" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.281", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.200" }
%"class.fxcrt::RetainPtr.200" = type { %"class.std::__1::unique_ptr.201" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.fxcrt::StringDataTemplate.204"* }
%"class.fxcrt::StringDataTemplate.204" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_FontGlobals = type { %class.CPDF_CMapManager, [6 x %"class.pdfium::span.236"], [6 x %"class.pdfium::span.139"], %"class.std::__1::map.237" }
%class.CPDF_CMapManager = type { %"class.std::__1::map.221", [6 x %"class.std::__1::unique_ptr.230"] }
%"class.std::__1::map.221" = type { %"class.std::__1::__tree.222" }
%"class.std::__1::__tree.222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.CPDF_CID2UnicodeMap* }
%"class.pdfium::span.236" = type { %"class.fxcrt::UnownedPtr.135", i64 }
%"class.std::__1::map.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.pdfium::span.248" = type { %"class.fxcrt::UnownedPtr.249", i64 }
%"class.fxcrt::UnownedPtr.249" = type { i8* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.248" }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.208", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"class.fxcrt::RetainPtr.210"*, %"class.fxcrt::RetainPtr.210"*, %"class.std::__1::__compressed_pair.216" }
%"class.fxcrt::RetainPtr.210" = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.fxcrt::RetainPtr.210"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_Glyph_Class_ = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.fxcrt::ByteString"* }
%class.CFX_PTemplate = type { i16, i16 }
%class.CPDF_Type1Font = type opaque
%class.CPDF_TrueTypeFont = type opaque
%class.CPDF_Type3Font = type opaque

@_ZTV12CPDF_CIDFont = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_CIDFont*)* @_ZN12CPDF_CIDFontD2Ev to i8*), i8* bitcast (void (%class.CPDF_CIDFont*)* @_ZN12CPDF_CIDFontD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType1FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font14IsTrueTypeFontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType3FontEv to i8*), i8* bitcast (i1 (%class.CPDF_CIDFont*)* @_ZNK12CPDF_CIDFont9IsCIDFontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_CIDFont*)* @_ZNK12CPDF_CIDFont9AsCIDFontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_CIDFont*)* @_ZN12CPDF_CIDFont9AsCIDFontEv to i8*), i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_Font15WillBeDestroyedEv to i8*), i8* bitcast (i1 (%class.CPDF_CIDFont*)* @_ZNK12CPDF_CIDFont13IsVertWritingEv to i8*), i8* bitcast (i1 (%class.CPDF_CIDFont*)* @_ZNK12CPDF_CIDFont19IsUnicodeCompatibleEv to i8*), i8* bitcast (i32 (%class.CPDF_CIDFont*, %"class.fxcrt::StringViewTemplate"*, i64*)* @_ZNK12CPDF_CIDFont11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm to i8*), i8* bitcast (i64 (%class.CPDF_CIDFont*, %"class.fxcrt::StringViewTemplate"*)* @_ZNK12CPDF_CIDFont9CountCharEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i32 (%class.CPDF_CIDFont*, i8*, i32)* @_ZNK12CPDF_CIDFont10AppendCharEPcj to i8*), i8* bitcast (i32 (%class.CPDF_CIDFont*, i32, i8*)* @_ZN12CPDF_CIDFont17GlyphFromCharCodeEjPb to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_CIDFont*, i32)* @_ZNK12CPDF_CIDFont19UnicodeFromCharCodeEj to i8*), i8* bitcast (i32 (%class.CPDF_CIDFont*, i32)* @_ZNK12CPDF_CIDFont19CharCodeFromUnicodeEw to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13HasFontWidthsEv to i8*), i8* bitcast (i32 (%class.CPDF_CIDFont*, i32)* @_ZN12CPDF_CIDFont13GetCharWidthFEj to i8*), i8* bitcast ({ i64, i64 } (%class.CPDF_CIDFont*, i32)* @_ZN12CPDF_CIDFont11GetCharBBoxEj to i8*), i8* bitcast (i1 (%class.CPDF_CIDFont*)* @_ZN12CPDF_CIDFont4LoadEv to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"TrueType\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"DescendantFonts\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"BaseFont\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"CourierStd\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"CourierStd-Bold\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"CourierStd-BoldOblique\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"CourierStd-Oblique\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"CIDFontType0\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"FontDescriptor\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"CIDSystemInfo\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"Ordering\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"DW\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"CIDToGIDMap\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Identity\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"W2\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"DW2\00", align 1
@_ZN12_GLOBAL__N_112g_CharsetCPsE = internal unnamed_addr constant [6 x i16] [i16 0, i16 936, i16 950, i16 932, i16 949, i16 1200], align 2
@.str.19 = private unnamed_addr constant [10 x i8] c"GBK-EUC-H\00", align 1
@_ZN12_GLOBAL__N_117g_Japan1_VertCIDsE = internal constant [154 x %"struct.(anonymous namespace)::CIDTransform"] [%"struct.(anonymous namespace)::CIDTransform" { i16 97, i8 -127, i8 0, i8 0, i8 127, i8 55, i8 0 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7887, i8 127, i8 0, i8 0, i8 127, i8 76, i8 89 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7888, i8 127, i8 0, i8 0, i8 127, i8 79, i8 94 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7889, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7890, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7891, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7892, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7893, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7894, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7895, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7896, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7897, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7898, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7899, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 104 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7900, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7901, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 104 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7902, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7903, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7904, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7905, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7906, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7907, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7908, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7909, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7910, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7911, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7912, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7913, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7914, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7915, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7916, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7917, i8 0, i8 -127, i8 127, i8 0, i8 17, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7918, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7919, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7920, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7921, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7922, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7923, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7924, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7925, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7926, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7927, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7928, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7929, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7930, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7931, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7932, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7933, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7934, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7935, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7936, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7937, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7938, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 7939, i8 127, i8 0, i8 0, i8 127, i8 18, i8 25 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8720, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8721, i8 0, i8 -127, i8 127, i8 0, i8 13, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8722, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8723, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8724, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8725, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8726, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8727, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8728, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8729, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8730, i8 0, i8 -127, i8 127, i8 0, i8 38, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8731, i8 0, i8 -127, i8 127, i8 0, i8 13, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8732, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8733, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8734, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8735, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8736, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8737, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8738, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8739, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8740, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8741, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8742, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8743, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8744, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8745, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8746, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8747, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8748, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8749, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8750, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8751, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8752, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8753, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8754, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8755, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8756, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8757, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8758, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8759, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8760, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8761, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8762, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8763, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8764, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8765, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8766, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8767, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8768, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8769, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8770, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8771, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8772, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8773, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8774, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8775, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8776, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8777, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8778, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8779, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8780, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8781, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8782, i8 0, i8 -127, i8 127, i8 0, i8 13, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8783, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8784, i8 0, i8 -127, i8 127, i8 0, i8 13, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8785, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8786, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8787, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8788, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8789, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8790, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8791, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8792, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8793, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8794, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8795, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8796, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8797, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8798, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8799, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8800, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8801, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8802, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8803, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8804, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8805, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8806, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8807, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8808, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8809, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8810, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 108 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8811, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8812, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8813, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8814, i8 0, i8 -127, i8 127, i8 0, i8 76, i8 102 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8815, i8 0, i8 -127, i8 127, i8 0, i8 13, i8 121 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8816, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8817, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 127 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8818, i8 0, i8 -127, i8 127, i8 0, i8 19, i8 114 }, %"struct.(anonymous namespace)::CIDTransform" { i16 8819, i8 0, i8 -127, i8 127, i8 0, i8 -38, i8 108 }], align 16
@switch.table._ZN12CPDF_CIDFont4LoadEv = private unnamed_addr constant [4 x i32] [i32 1734484000, i32 1651074869, i32 1936353651, i32 1785686113], align 4

@_ZN12CPDF_CIDFontC1EP13CPDF_DocumentP15CPDF_Dictionary = hidden unnamed_addr alias void (%class.CPDF_CIDFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*), void (%class.CPDF_CIDFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*)* @_ZN12CPDF_CIDFontC2EP13CPDF_DocumentP15CPDF_Dictionary
@_ZN12CPDF_CIDFontD1Ev = hidden unnamed_addr alias void (%class.CPDF_CIDFont*), void (%class.CPDF_CIDFont*)* @_ZN12CPDF_CIDFontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CIDFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_CIDFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0
  tail call void @_ZN9CPDF_FontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Font* %4, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #13
  %5 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV12CPDF_CIDFont, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 10
  %8 = bitcast %"class.fxcrt::RetainPtr.105"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 37, i1 false)
  store i16 1000, i16* %7, align 2
  %9 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 11
  store i16 880, i16* %9, align 8
  %10 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 12
  store i16 -1000, i16* %10, align 2
  %11 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13
  %12 = getelementptr %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 15, i64 0
  %13 = bitcast %struct.FX_RECT* %12 to i8*
  %14 = bitcast %"class.std::__1::vector.193"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -1, i64 4096, i1 false)
  ret void
}

declare void @_ZN9CPDF_FontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CIDFontD2Ev(%class.CPDF_CIDFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV12CPDF_CIDFont, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 14, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %class.CFX_CTTGSUBTable*, %class.CFX_CTTGSUBTable** %21, align 8
  store %class.CFX_CTTGSUBTable* null, %class.CFX_CTTGSUBTable** %21, align 8
  %23 = icmp eq %class.CFX_CTTGSUBTable* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN16CFX_CTTGSUBTableD1Ev(%class.CFX_CTTGSUBTable* nonnull %22) #13
  %25 = bitcast %class.CFX_CTTGSUBTable* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %27, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %27, align 8
  %29 = icmp eq %class.CPDF_StreamAcc* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %28, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %28, i64 0, i32 0
  %37 = bitcast %class.CPDF_StreamAcc* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #13
  br label %41

41:                                               ; preds = %26, %30, %35
  %42 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.CPDF_CMap*, %class.CPDF_CMap** %42, align 8
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %42, align 8
  %44 = icmp eq %class.CPDF_CMap* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %43, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %43, i64 0, i32 0
  %52 = bitcast %class.CPDF_CMap* %43 to void (%"class.fxcrt::Retainable"*)***
  %53 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, i64 1
  %55 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, align 8
  tail call void %55(%"class.fxcrt::Retainable"* nonnull %51) #13
  br label %56

56:                                               ; preds = %41, %45, %50
  %57 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0
  tail call void @_ZN9CPDF_FontD2Ev(%class.CPDF_Font* %57) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9CPDF_FontD2Ev(%class.CPDF_Font*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CIDFontD0Ev(%class.CPDF_CIDFont*) unnamed_addr #0 align 2 {
  tail call void @_ZN12CPDF_CIDFontD2Ev(%class.CPDF_CIDFont* %0) #13
  %2 = bitcast %class.CPDF_CIDFont* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12CPDF_CIDFont9IsCIDFontEv(%class.CPDF_CIDFont* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_CIDFont* @_ZNK12CPDF_CIDFont9AsCIDFontEv(%class.CPDF_CIDFont* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_CIDFont* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_CIDFont* @_ZN12CPDF_CIDFont9AsCIDFontEv(%class.CPDF_CIDFont* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_CIDFont* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK12CPDF_CIDFont15CIDFromCharCodeEj(%class.CPDF_CIDFont* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_CMap*, %class.CPDF_CMap** %3, align 8
  %5 = icmp eq %class.CPDF_CMap* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %4, i32 %1) #13
  br label %10

8:                                                ; preds = %2
  %9 = trunc i32 %1 to i16
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi i16 [ %7, %6 ], [ %9, %8 ]
  ret i16 %11
}

declare zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_CMap*, %class.CPDF_CMap** %2, align 8
  %4 = icmp eq %class.CPDF_CMap* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %3, i64 0, i32 2
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12CPDF_CIDFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* noalias sret, %class.CPDF_CIDFont*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.204"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.204"*), %"class.fxcrt::StringDataTemplate.204"** %6, align 8
  %7 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 0
  call void @_ZNK9CPDF_Font19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* nonnull sret %4, %class.CPDF_Font* %7, i32 %2) #13
  %8 = load %"class.fxcrt::StringDataTemplate.204"*, %"class.fxcrt::StringDataTemplate.204"** %6, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate.204"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.204", %"class.fxcrt::StringDataTemplate.204"* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #13
  br label %20

15:                                               ; preds = %3, %10
  %16 = call signext i32 @_ZNK12CPDF_CIDFont22GetUnicodeFromCharCodeEj(%class.CPDF_CIDFont* %1, i32 %2)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* %0, i32 signext %16) #13
  br label %20

19:                                               ; preds = %15
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  br label %20

20:                                               ; preds = %18, %19, %14
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare void @_ZNK9CPDF_Font19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* sret, %class.CPDF_Font*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden signext i32 @_ZNK12CPDF_CIDFont22GetUnicodeFromCharCodeEj(%class.CPDF_CIDFont* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_CMap*, %class.CPDF_CMap** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %17 [
    i32 5, label %65
    i32 7, label %65
    i32 6, label %7
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %9 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %8, align 8
  %10 = icmp eq %class.CPDF_CID2UnicodeMap* %9, null
  br i1 %10, label %65, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap* nonnull %9) #13
  br i1 %12, label %13, label %65

13:                                               ; preds = %11
  %14 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %8, align 8
  %15 = trunc i32 %1 to i16
  %16 = tail call signext i32 @_ZNK19CPDF_CID2UnicodeMap14UnicodeFromCIDEt(%class.CPDF_CID2UnicodeMap* %14, i16 zeroext %15) #13
  br label %65

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %19 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %18, align 8
  %20 = icmp eq %class.CPDF_CID2UnicodeMap* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap* nonnull %19) #13
  %23 = load %class.CPDF_CMap*, %class.CPDF_CMap** %3, align 8
  br i1 %22, label %24, label %38

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %23, i64 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %18, align 8
  %30 = icmp eq %class.CPDF_CMap* %23, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %23, i32 %1) #13
  br label %35

33:                                               ; preds = %28
  %34 = trunc i32 %1 to i16
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i16 [ %32, %31 ], [ %34, %33 ]
  %37 = tail call signext i32 @_ZNK19CPDF_CID2UnicodeMap14UnicodeFromCIDEt(%class.CPDF_CID2UnicodeMap* %29, i16 zeroext %36) #13
  br label %65

38:                                               ; preds = %21, %24, %17
  %39 = phi %class.CPDF_CMap* [ %23, %24 ], [ %4, %17 ], [ %23, %21 ]
  %40 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %39, i64 0, i32 10, i32 0
  %41 = load %struct.FXCMAP_CMap*, %struct.FXCMAP_CMap** %40, align 8
  %42 = icmp eq %struct.FXCMAP_CMap* %41, null
  br i1 %42, label %65, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %39, i64 0, i32 3
  %45 = load i8, i8* %44, align 2
  %46 = zext i8 %45 to i32
  %47 = add nsw i32 %46, -1
  %48 = icmp ult i32 %47, 4
  br i1 %48, label %49, label %65

49:                                               ; preds = %43
  %50 = tail call zeroext i16 @_Z15CIDFromCharCodePK11FXCMAP_CMapj(%struct.FXCMAP_CMap* nonnull %41, i32 %1) #13
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = tail call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #13
  %54 = zext i8 %45 to i64
  %55 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %53, i64 0, i32 2, i64 %54, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i16 %50 to i64
  %58 = icmp ugt i64 %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %53, i64 0, i32 2, i64 %54, i32 0, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 %57
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  br label %65

65:                                               ; preds = %7, %59, %52, %49, %43, %38, %11, %2, %2, %35, %13
  %66 = phi i32 [ %37, %35 ], [ %16, %13 ], [ %1, %2 ], [ %1, %2 ], [ 0, %11 ], [ 0, %7 ], [ 0, %38 ], [ 0, %43 ], [ 0, %49 ], [ %64, %59 ], [ 0, %52 ]
  ret i32 %66
}

declare void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"*, i32 signext) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

declare zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap*) local_unnamed_addr #1

declare signext i32 @_ZNK19CPDF_CID2UnicodeMap14UnicodeFromCIDEt(%class.CPDF_CID2UnicodeMap*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12CPDF_CIDFont19CharCodeFromUnicodeEw(%class.CPDF_CIDFont*, i32 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK9CPDF_Font19CharCodeFromUnicodeEw(%class.CPDF_Font* %3, i32 signext %1) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %69

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_CMap*, %class.CPDF_CMap** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %29 [
    i32 0, label %69
    i32 5, label %11
    i32 7, label %11
    i32 6, label %12
  ]

11:                                               ; preds = %6, %6
  br label %69

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %14 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %13, align 8
  %15 = icmp eq %class.CPDF_CID2UnicodeMap* %14, null
  br i1 %15, label %69, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap* nonnull %14) #13
  br i1 %17, label %18, label %69

18:                                               ; preds = %16, %21
  %19 = phi i32 [ %28, %21 ], [ 0, %16 ]
  %20 = icmp ult i32 %19, 65536
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %13, align 8
  %23 = trunc i32 %19 to i16
  %24 = tail call signext i32 @_ZNK19CPDF_CID2UnicodeMap14UnicodeFromCIDEt(%class.CPDF_CID2UnicodeMap* %22, i16 zeroext %23) #13
  %25 = icmp eq i32 %24, %1
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = add nuw nsw i32 %19, %27
  br i1 %25, label %69, label %18

29:                                               ; preds = %18, %6
  %30 = icmp slt i32 %1, 128
  br i1 %30, label %69, label %31

31:                                               ; preds = %29
  %32 = load %class.CPDF_CMap*, %class.CPDF_CMap** %7, align 8
  %33 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %32, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 6
  br i1 %35, label %69, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %32, i64 0, i32 10, i32 0
  %38 = load %struct.FXCMAP_CMap*, %struct.FXCMAP_CMap** %37, align 8
  %39 = icmp eq %struct.FXCMAP_CMap* %38, null
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %32, i64 0, i32 3
  %42 = load i8, i8* %41, align 2
  %43 = zext i8 %42 to i32
  %44 = add nsw i32 %43, -1
  %45 = icmp ult i32 %44, 4
  br i1 %45, label %46, label %69

46:                                               ; preds = %40
  %47 = tail call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #13
  %48 = zext i8 %42 to i64
  %49 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %47, i64 0, i32 2, i64 %48, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %47, i64 0, i32 2, i64 %48, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %46, %65
  %55 = phi i64 [ %67, %65 ], [ 0, %46 ]
  %56 = phi i32 [ %66, %65 ], [ 0, %46 ]
  %57 = getelementptr inbounds i16, i16* %50, i64 %55
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = trunc i32 %56 to i16
  %63 = tail call i32 @_Z15CharCodeFromCIDPK11FXCMAP_CMapt(%struct.FXCMAP_CMap* nonnull %38, i16 zeroext %62) #13
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %61, %54
  %66 = add i32 %56, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %52, %67
  br i1 %68, label %54, label %69

69:                                               ; preds = %21, %65, %61, %12, %46, %40, %36, %31, %29, %16, %6, %2, %11
  %70 = phi i32 [ %1, %11 ], [ %4, %2 ], [ %10, %6 ], [ 0, %16 ], [ 0, %12 ], [ %1, %29 ], [ 0, %31 ], [ 0, %36 ], [ 0, %40 ], [ 0, %46 ], [ %63, %61 ], [ 0, %65 ], [ %19, %21 ]
  ret i32 %70
}

declare i32 @_ZNK9CPDF_Font19CharCodeFromUnicodeEw(%class.CPDF_Font*, i32 signext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_CIDFont4LoadEv(%class.CPDF_CIDFont*) unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.pdfium::span.248"*
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.pdfium::span"*
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.105", align 8
  %16 = alloca %"class.fxcrt::ByteString", align 8
  %17 = alloca %"class.fxcrt::ByteString", align 8
  %18 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %19 = alloca %"class.fxcrt::ByteString", align 8
  %20 = alloca %"class.fxcrt::ByteString", align 8
  %21 = alloca %"class.fxcrt::ByteString", align 8
  %22 = alloca %"class.fxcrt::ByteString", align 8
  %23 = alloca %"class.fxcrt::ByteString", align 8
  %24 = alloca %"class.fxcrt::ByteString", align 8
  %25 = alloca %"class.fxcrt::ByteString", align 8
  %26 = alloca %"class.fxcrt::ByteString", align 8
  %27 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %29, align 8
  %31 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Dictionary* %30, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #13
  %32 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br i1 %32, label %33, label %34

33:                                               ; preds = %1
  call void @_ZN12CPDF_CIDFont10LoadGB2312Ev(%class.CPDF_CIDFont* %0)
  br label %406

34:                                               ; preds = %1
  %35 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %29, align 8
  %36 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #13
  %37 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %35, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %38 = icmp eq %class.CPDF_Array* %37, null
  br i1 %38, label %406, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %37, i64 0, i32 1
  %41 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %37, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast %"class.fxcrt::RetainPtr.210"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.208"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 8
  br i1 %47, label %48, label %406

48:                                               ; preds = %39
  %49 = call %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array* nonnull %37, i64 0) #13
  %50 = icmp eq %class.CPDF_Dictionary* %49, null
  br i1 %50, label %406, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #13
  %54 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 7
  %55 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %54, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  %56 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #13
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #13
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0)) #13
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #13
  br i1 %62, label %63, label %75

63:                                               ; preds = %61, %59, %57, %51
  %64 = bitcast %class.CPDF_CIDFont* %0 to i1 (%class.CPDF_Font*)***
  %65 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %65, i64 4
  %67 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %66, align 8
  %68 = call zeroext i1 %67(%class.CPDF_Font* %28) #13
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %71 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %70, align 8
  %72 = icmp eq %class.CPDF_StreamAcc* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 8
  store i8 1, i8* %74, align 1
  br label %75

75:                                               ; preds = %69, %63, %73, %61
  %76 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %29, align 8
  %77 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #13
  %78 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %76, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  %79 = icmp eq %class.CPDF_Object* %78, null
  br i1 %79, label %406, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %82 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %82, align 8
  %83 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %10, %class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  %84 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %85 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 5
  %86 = zext i1 %84 to i8
  store i8 %86, i8* %85, align 8
  %87 = bitcast %class.CPDF_Object* %78 to i1 (%class.CPDF_Object*)***
  %88 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %88, i64 17
  %90 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %89, align 8
  %91 = call zeroext i1 %90(%class.CPDF_Object* nonnull %78) #13
  br i1 %91, label %97, label %92

92:                                               ; preds = %80
  %93 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %87, align 8
  %94 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %93, i64 20
  %95 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %94, align 8
  %96 = call zeroext i1 %95(%class.CPDF_Object* nonnull %78) #13
  br i1 %96, label %97, label %404

97:                                               ; preds = %92, %80
  %98 = call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #13
  %99 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %98, i64 0, i32 0
  %100 = bitcast %class.CPDF_Object* %78 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %101 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %100, align 8
  %102 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %101, i64 36
  %103 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %102, align 8
  %104 = call %class.CPDF_Stream* %103(%class.CPDF_Object* nonnull %78) #13
  %105 = icmp eq %class.CPDF_Stream* %104, null
  br i1 %105, label %159, label %106

106:                                              ; preds = %97
  %107 = call i8* @_Znwm(i64 64) #14, !noalias !3
  %108 = bitcast i8* %107 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %108, %class.CPDF_Stream* nonnull %104) #13, !noalias !3
  %109 = getelementptr inbounds i8, i8* %107, i64 8
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !3
  %112 = add nsw i64 %111, 1
  store i64 %112, i64* %110, align 8, !noalias !3
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* nonnull %108) #13
  %113 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #13
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* nonnull sret %13, %class.CPDF_StreamAcc* nonnull %108) #13
  %114 = load <2 x i64>, <2 x i64>* %12, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #13
  %115 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115)
  %116 = call i8* @_Znwm(i64 128) #14, !noalias !6
  %117 = bitcast i8* %116 to %class.CPDF_CMap*
  store <2 x i64> %114, <2 x i64>* %2, align 16, !noalias !6
  call void @_ZN9CPDF_CMapC1EN6pdfium4spanIKhEE(%class.CPDF_CMap* nonnull %117, %"class.pdfium::span.248"* nonnull %3) #13, !noalias !6
  %118 = ptrtoint i8* %116 to i64
  %119 = getelementptr inbounds i8, i8* %116, i64 8
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115)
  %122 = add nsw i64 %121, 2
  store i64 %122, i64* %120, align 8
  %123 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1
  %124 = getelementptr inbounds %"class.fxcrt::RetainPtr.105", %"class.fxcrt::RetainPtr.105"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %class.CPDF_CMap*, %class.CPDF_CMap** %124, align 8
  %126 = bitcast %"class.fxcrt::RetainPtr.105"* %123 to i64*
  store i64 %118, i64* %126, align 8
  %127 = icmp eq %class.CPDF_CMap* %125, null
  br i1 %127, label %139, label %128

128:                                              ; preds = %106
  %129 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %125, i64 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = add nsw i64 %130, -1
  store i64 %131, i64* %129, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %128
  %134 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %125, i64 0, i32 0
  %135 = bitcast %class.CPDF_CMap* %125 to void (%"class.fxcrt::Retainable"*)***
  %136 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %136, i64 1
  %138 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %137, align 8
  call void %138(%"class.fxcrt::Retainable"* nonnull %134) #13
  br label %139

139:                                              ; preds = %106, %128, %133
  %140 = load i64, i64* %120, align 8
  %141 = add nsw i64 %140, -1
  store i64 %141, i64* %120, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  %144 = bitcast i8* %116 to %"class.fxcrt::Retainable"*
  %145 = bitcast i8* %116 to void (%"class.fxcrt::Retainable"*)***
  %146 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, i64 1
  %148 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, align 8
  call void %148(%"class.fxcrt::Retainable"* nonnull %144) #13
  br label %149

149:                                              ; preds = %143, %139
  %150 = load i64, i64* %110, align 8
  %151 = add nsw i64 %150, -1
  store i64 %151, i64* %110, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %201

153:                                              ; preds = %149
  %154 = bitcast i8* %107 to %"class.fxcrt::Retainable"*
  %155 = bitcast i8* %107 to void (%"class.fxcrt::Retainable"*)***
  %156 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %156, i64 1
  %158 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %157, align 8
  call void %158(%"class.fxcrt::Retainable"* nonnull %154) #13
  br label %201

159:                                              ; preds = %97
  %160 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #13
  %161 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %161, align 8
  %162 = bitcast %class.CPDF_Object* %78 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %163 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %163, i64 7
  %165 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %164, align 8
  call void %165(%"class.fxcrt::ByteString"* nonnull sret %14, %class.CPDF_Object* nonnull %78) #13
  %166 = bitcast %"class.fxcrt::RetainPtr.105"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #13
  call void @_ZN16CPDF_CMapManager17GetPredefinedCMapERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.105"* nonnull sret %15, %class.CPDF_CMapManager* %99, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #13
  %167 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1
  %168 = getelementptr inbounds %"class.fxcrt::RetainPtr.105", %"class.fxcrt::RetainPtr.105"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = bitcast %"class.fxcrt::RetainPtr.105"* %15 to i64*
  %170 = load i64, i64* %169, align 8
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %168, align 8
  %171 = getelementptr inbounds %"class.fxcrt::RetainPtr.105", %"class.fxcrt::RetainPtr.105"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load %class.CPDF_CMap*, %class.CPDF_CMap** %171, align 8
  %173 = bitcast %"class.fxcrt::RetainPtr.105"* %167 to i64*
  store i64 %170, i64* %173, align 8
  %174 = icmp eq %class.CPDF_CMap* %172, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %159
  %176 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %172, i64 0, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = add nsw i64 %177, -1
  store i64 %178, i64* %176, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %181, label %180

180:                                              ; preds = %159, %175
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %168, align 8
  br label %200

181:                                              ; preds = %175
  %182 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %172, i64 0, i32 0
  %183 = bitcast %class.CPDF_CMap* %172 to void (%"class.fxcrt::Retainable"*)***
  %184 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, i64 1
  %186 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, align 8
  call void %186(%"class.fxcrt::Retainable"* nonnull %182) #13
  %187 = load %class.CPDF_CMap*, %class.CPDF_CMap** %168, align 8
  %188 = bitcast %class.CPDF_CMap* %187 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %168, align 8
  %189 = icmp eq %class.CPDF_CMap* %187, null
  br i1 %189, label %200, label %190

190:                                              ; preds = %181
  %191 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %187, i64 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = add nsw i64 %192, -1
  store i64 %193, i64* %191, align 8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %200

195:                                              ; preds = %190
  %196 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %187, i64 0, i32 0
  %197 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %188, align 8
  %198 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, i64 1
  %199 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, align 8
  call void %199(%"class.fxcrt::Retainable"* nonnull %196) #13
  br label %200

200:                                              ; preds = %180, %181, %190, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  br label %201

201:                                              ; preds = %153, %149, %200
  %202 = bitcast %"class.fxcrt::ByteString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #13
  %203 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %16) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  %204 = icmp eq %class.CPDF_Dictionary* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %201
  call void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font* %28, %class.CPDF_Dictionary* nonnull %203) #13
  br label %206

206:                                              ; preds = %201, %205
  %207 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %class.CPDF_CMap*, %class.CPDF_CMap** %207, align 8
  %209 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %208, i64 0, i32 3
  %210 = load i8, i8* %209, align 2
  %211 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  store i8 %210, i8* %211, align 4
  %212 = icmp eq i8 %210, 0
  br i1 %212, label %213, label %236

213:                                              ; preds = %206
  %214 = bitcast %"class.fxcrt::ByteString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #13
  %215 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %17) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #13
  %216 = icmp eq %class.CPDF_Dictionary* %215, null
  br i1 %216, label %233, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.fxcrt::ByteString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #13
  %219 = bitcast %"class.fxcrt::ByteString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %19, %class.CPDF_Dictionary* nonnull %215, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %20) #13
  %220 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %220, align 8, !noalias !9
  %222 = icmp eq %"class.fxcrt::StringDataTemplate"* %221, null
  %223 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %221, i64 0, i32 3, i64 0
  %224 = select i1 %222, i8* null, i8* %223
  br i1 %222, label %228, label %225

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %221, i64 0, i32 1
  %227 = load i64, i64* %226, align 8, !noalias !9
  br label %228

228:                                              ; preds = %217, %225
  %229 = phi i64 [ %227, %225 ], [ 0, %217 ]
  %230 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %18, i64 0, i32 0, i32 0, i32 0
  store i8* %224, i8** %230, align 8, !alias.scope !9
  %231 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %18, i64 0, i32 0, i32 1
  store i64 %229, i64* %231, align 8, !alias.scope !9
  %232 = call zeroext i8 @_ZN15CPDF_CMapParser19CharsetFromOrderingEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nonnull %18) #13
  store i8 %232, i8* %211, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %19) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #13
  br label %233

233:                                              ; preds = %228, %213
  %234 = load i8, i8* %211, align 4
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %240, label %236

236:                                              ; preds = %206, %233
  %237 = phi i8 [ %234, %233 ], [ %210, %206 ]
  %238 = call %class.CPDF_CID2UnicodeMap* @_ZN16CPDF_CMapManager17GetCID2UnicodeMapE6CIDSet(%class.CPDF_CMapManager* %99, i8 zeroext %237) #13
  %239 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  store %class.CPDF_CID2UnicodeMap* %238, %class.CPDF_CID2UnicodeMap** %239, align 8
  br label %240

240:                                              ; preds = %233, %236
  %241 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3
  %242 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %243 = load %class.CFX_Face*, %class.CFX_Face** %242, align 8
  %244 = icmp eq %class.CFX_Face* %243, null
  br i1 %244, label %278, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %243, i64 0, i32 2, i32 0, i32 0, i32 0
  %247 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %246, align 8
  %248 = icmp eq %struct.FT_FaceRec_* %247, null
  br i1 %248, label %278, label %249

249:                                              ; preds = %245
  %250 = load i8, i8* %85, align 8, !range !2
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %249
  %253 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %247, i32 1970170211) #13
  br label %278

254:                                              ; preds = %249
  %255 = load %class.CPDF_CMap*, %class.CPDF_CMap** %207, align 8
  %256 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %255, i64 0, i32 5
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, -1
  %259 = icmp ult i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %254
  %261 = sext i32 %258 to i64
  %262 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN12CPDF_CIDFont4LoadEv, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  br label %264

264:                                              ; preds = %254, %260
  %265 = phi i32 [ %263, %260 ], [ 1970170211, %254 ]
  %266 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %247, i32 %265) #13
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %278, label %268

268:                                              ; preds = %264
  %269 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %247, i32 1970170211) #13
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %278, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %247, i64 0, i32 10
  %273 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %272, align 8
  %274 = icmp eq %struct.FT_CharMapRec_** %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %271
  %276 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %273, align 8
  %277 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* nonnull %247, %struct.FT_CharMapRec_* %276) #13
  br label %278

278:                                              ; preds = %240, %275, %271, %268, %264, %245, %252
  %279 = bitcast %"class.fxcrt::ByteString"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #13
  %280 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %21, i32 1000) #13
  %281 = trunc i32 %280 to i16
  %282 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 10
  store i16 %281, i16* %282, align 2
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #13
  %283 = bitcast %"class.fxcrt::ByteString"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %284 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %22) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #13
  %285 = icmp eq %class.CPDF_Array* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %278
  %287 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13
  call fastcc void @_ZN12_GLOBAL__N_116LoadMetricsArrayEPK10CPDF_ArrayPNSt3__16vectorIiNS3_9allocatorIiEEEEi(%class.CPDF_Array* nonnull %284, %"class.std::__1::vector.193"* %287, i32 1)
  br label %288

288:                                              ; preds = %278, %286
  %289 = bitcast %class.CPDF_CIDFont* %0 to i1 (%class.CPDF_Font*)***
  %290 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %289, align 8
  %291 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %290, i64 4
  %292 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %291, align 8
  %293 = call zeroext i1 %292(%class.CPDF_Font* %28) #13
  br i1 %293, label %324, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %296 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %295, align 8
  %297 = icmp eq %class.CPDF_StreamAcc* %296, null
  br i1 %297, label %298, label %324

298:                                              ; preds = %294
  %299 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 11
  %300 = load i32, i32* %299, align 8
  %301 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %300, i32 5) #13
  %302 = extractvalue { i32, i1 } %301, 1
  %303 = extractvalue { i32, i1 } %301, 0
  %304 = load i8, i8* %85, align 8, !range !2
  %305 = icmp eq i8 %304, 0
  %306 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 10
  %307 = load i32, i32* %306, align 4
  %308 = select i1 %302, i32 400, i32 %303, !prof !12
  %309 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 14
  %310 = load i32, i32* %309, align 4
  %311 = load i8, i8* %211, align 4
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [6 x i16], [6 x i16]* @_ZN12_GLOBAL__N_112g_CharsetCPsE, i64 0, i64 %312
  %314 = load i16, i16* %313, align 2
  %315 = zext i16 %314 to i32
  %316 = load %class.CPDF_CMap*, %class.CPDF_CMap** %207, align 8
  %317 = icmp eq %class.CPDF_CMap* %316, null
  br i1 %317, label %322, label %318

318:                                              ; preds = %298
  %319 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %316, i64 0, i32 2
  %320 = load i8, i8* %319, align 1, !range !2
  %321 = icmp ne i8 %320, 0
  br label %322

322:                                              ; preds = %298, %318
  %323 = phi i1 [ false, %298 ], [ %321, %318 ]
  call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %241, %"class.fxcrt::ByteString"* dereferenceable(8) %54, i1 zeroext %305, i32 %307, i32 %308, i32 %310, i32 %315, i1 zeroext %323) #13
  br label %324

324:                                              ; preds = %294, %288, %322
  %325 = bitcast %"class.fxcrt::ByteString"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #13
  %326 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %23) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %325) #13
  %327 = icmp eq %class.CPDF_Object* %326, null
  br i1 %327, label %380, label %328

328:                                              ; preds = %324
  %329 = bitcast %class.CPDF_Object* %326 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %330 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %329, align 8
  %331 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %330, i64 36
  %332 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %331, align 8
  %333 = call %class.CPDF_Stream* %332(%class.CPDF_Object* nonnull %326) #13
  %334 = icmp eq %class.CPDF_Stream* %333, null
  br i1 %334, label %361, label %335

335:                                              ; preds = %328
  %336 = call i8* @_Znwm(i64 64) #14, !noalias !13
  %337 = bitcast i8* %336 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %337, %class.CPDF_Stream* nonnull %333) #13, !noalias !13
  %338 = ptrtoint i8* %336 to i64
  %339 = getelementptr inbounds i8, i8* %336, i64 8
  %340 = bitcast i8* %339 to i64*
  %341 = load i64, i64* %340, align 8, !noalias !13
  %342 = add nsw i64 %341, 1
  store i64 %342, i64* %340, align 8, !noalias !13
  %343 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 3
  %344 = getelementptr inbounds %"class.fxcrt::RetainPtr.54", %"class.fxcrt::RetainPtr.54"* %343, i64 0, i32 0, i32 0, i32 0, i32 0
  %345 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %344, align 8
  %346 = bitcast %"class.fxcrt::RetainPtr.54"* %343 to i64*
  store i64 %338, i64* %346, align 8
  %347 = icmp eq %class.CPDF_StreamAcc* %345, null
  br i1 %347, label %359, label %348

348:                                              ; preds = %335
  %349 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %345, i64 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = add nsw i64 %350, -1
  store i64 %351, i64* %349, align 8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %359

353:                                              ; preds = %348
  %354 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %345, i64 0, i32 0
  %355 = bitcast %class.CPDF_StreamAcc* %345 to void (%"class.fxcrt::Retainable"*)***
  %356 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %356, i64 1
  %358 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %357, align 8
  call void %358(%"class.fxcrt::Retainable"* nonnull %354) #13
  br label %359

359:                                              ; preds = %353, %348, %335
  %360 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %344, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %360) #13
  br label %380

361:                                              ; preds = %328
  %362 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %363 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %362, align 8
  %364 = icmp eq %class.CPDF_StreamAcc* %363, null
  br i1 %364, label %380, label %365

365:                                              ; preds = %361
  %366 = bitcast %class.CPDF_Object* %326 to i1 (%class.CPDF_Object*)***
  %367 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %366, align 8
  %368 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %367, i64 17
  %369 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %368, align 8
  %370 = call zeroext i1 %369(%class.CPDF_Object* nonnull %326) #13
  br i1 %370, label %371, label %380

371:                                              ; preds = %365
  %372 = bitcast %"class.fxcrt::ByteString"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %372) #13
  %373 = bitcast %class.CPDF_Object* %326 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %374 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %373, align 8
  %375 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %374, i64 7
  %376 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %375, align 8
  call void %376(%"class.fxcrt::ByteString"* nonnull sret %24, %class.CPDF_Object* nonnull %326) #13
  %377 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %372) #13
  br i1 %377, label %378, label %380

378:                                              ; preds = %371
  %379 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 6
  store i8 1, i8* %379, align 1
  br label %380

380:                                              ; preds = %361, %365, %359, %378, %371, %324
  call void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font* %28) #13
  %381 = load %class.CPDF_CMap*, %class.CPDF_CMap** %207, align 8
  %382 = icmp eq %class.CPDF_CMap* %381, null
  br i1 %382, label %404, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %381, i64 0, i32 2
  %385 = load i8, i8* %384, align 1, !range !2
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %404, label %387

387:                                              ; preds = %383
  %388 = bitcast %"class.fxcrt::ByteString"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #13
  %389 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %25) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #13
  %390 = icmp eq %class.CPDF_Array* %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 14
  call fastcc void @_ZN12_GLOBAL__N_116LoadMetricsArrayEPK10CPDF_ArrayPNSt3__16vectorIiNS3_9allocatorIiEEEEi(%class.CPDF_Array* nonnull %389, %"class.std::__1::vector.193"* %392, i32 3)
  br label %393

393:                                              ; preds = %387, %391
  %394 = bitcast %"class.fxcrt::ByteString"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #13
  %395 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %26) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #13
  %396 = icmp eq %class.CPDF_Array* %395, null
  br i1 %396, label %404, label %397

397:                                              ; preds = %393
  %398 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %395, i64 0) #13
  %399 = trunc i32 %398 to i16
  %400 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 11
  store i16 %399, i16* %400, align 8
  %401 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %395, i64 1) #13
  %402 = trunc i32 %401 to i16
  %403 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 12
  store i16 %402, i16* %403, align 2
  br label %404

404:                                              ; preds = %383, %380, %393, %397, %92
  %405 = phi i1 [ false, %92 ], [ true, %397 ], [ true, %393 ], [ true, %383 ], [ true, %380 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  br label %406

406:                                              ; preds = %39, %34, %404, %75, %48, %33
  %407 = phi i1 [ true, %33 ], [ false, %39 ], [ false, %34 ], [ false, %48 ], [ %405, %404 ], [ false, %75 ]
  ret i1 %407
}

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CIDFont10LoadGB2312Ev(%class.CPDF_CIDFont*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.105", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %9, align 8
  %11 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %2, %class.CPDF_Dictionary* %10, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #13
  %12 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 7
  %13 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %12, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %14 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  store i8 1, i8* %14, align 4
  %15 = call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #13
  %16 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %15, i64 0, i32 0
  %17 = bitcast %"class.fxcrt::RetainPtr.105"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #13
  call void @_ZN16CPDF_CMapManager17GetPredefinedCMapERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.105"* nonnull sret %4, %class.CPDF_CMapManager* %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #13
  %19 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr.105", %"class.fxcrt::RetainPtr.105"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.fxcrt::RetainPtr.105"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %20, align 8
  %23 = getelementptr inbounds %"class.fxcrt::RetainPtr.105", %"class.fxcrt::RetainPtr.105"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_CMap*, %class.CPDF_CMap** %23, align 8
  %25 = bitcast %"class.fxcrt::RetainPtr.105"* %19 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %class.CPDF_CMap* %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %24, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %1, %27
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %20, align 8
  br label %52

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %24, i64 0, i32 0
  %35 = bitcast %class.CPDF_CMap* %24 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #13
  %39 = load %class.CPDF_CMap*, %class.CPDF_CMap** %20, align 8
  %40 = bitcast %class.CPDF_CMap* %39 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_CMap* null, %class.CPDF_CMap** %20, align 8
  %41 = icmp eq %class.CPDF_CMap* %39, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %39, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %39, i64 0, i32 0
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %40, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %48) #13
  br label %52

52:                                               ; preds = %32, %33, %42, %47
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %53 = load i8, i8* %14, align 4
  %54 = call %class.CPDF_CID2UnicodeMap* @_ZN16CPDF_CMapManager17GetCID2UnicodeMapE6CIDSet(%class.CPDF_CMapManager* %16, i8 zeroext %53) #13
  %55 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  store %class.CPDF_CID2UnicodeMap* %54, %class.CPDF_CID2UnicodeMap** %55, align 8
  %56 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %9, align 8
  %57 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #13
  %58 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %56, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %59 = icmp eq %class.CPDF_Dictionary* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %52
  call void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font* %8, %class.CPDF_Dictionary* nonnull %58) #13
  br label %61

61:                                               ; preds = %52, %60
  %62 = bitcast %class.CPDF_CIDFont* %0 to i1 (%class.CPDF_Font*)***
  %63 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %63, i64 4
  %65 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %64, align 8
  %66 = call zeroext i1 %65(%class.CPDF_Font* %8) #13
  br i1 %66, label %100, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %69 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %68, align 8
  %70 = icmp eq %class.CPDF_StreamAcc* %69, null
  br i1 %70, label %71, label %100

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 11
  %73 = load i32, i32* %72, align 8
  %74 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %73, i32 5) #13
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3
  %78 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 5
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 10
  %82 = load i32, i32* %81, align 4
  %83 = select i1 %75, i32 400, i32 %76, !prof !12
  %84 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 14
  %85 = load i32, i32* %84, align 4
  %86 = load i8, i8* %14, align 4
  %87 = zext i8 %86 to i64
  %88 = getelementptr inbounds [6 x i16], [6 x i16]* @_ZN12_GLOBAL__N_112g_CharsetCPsE, i64 0, i64 %87
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %92 = load %class.CPDF_CMap*, %class.CPDF_CMap** %91, align 8
  %93 = icmp eq %class.CPDF_CMap* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %71
  %95 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %92, i64 0, i32 2
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp ne i8 %96, 0
  br label %98

98:                                               ; preds = %71, %94
  %99 = phi i1 [ false, %71 ], [ %97, %94 ]
  call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %77, %"class.fxcrt::ByteString"* dereferenceable(8) %12, i1 zeroext %80, i32 %82, i32 %83, i32 %85, i32 %90, i1 zeroext %99) #13
  br label %100

100:                                              ; preds = %67, %61, %98
  call void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font* %8) #13
  %101 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 7
  store i8 1, i8* %101, align 2
  ret void
}

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #1

declare void @_ZN16CPDF_CMapManager17GetPredefinedCMapERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.105"* sret, %class.CPDF_CMapManager*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare zeroext i8 @_ZN15CPDF_CMapParser19CharsetFromOrderingEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

declare %class.CPDF_CID2UnicodeMap* @_ZN16CPDF_CMapManager17GetCID2UnicodeMapE6CIDSet(%class.CPDF_CMapManager*, i8 zeroext) local_unnamed_addr #1

declare i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_116LoadMetricsArrayEPK10CPDF_ArrayPNSt3__16vectorIiNS3_9allocatorIiEEEEi(%class.CPDF_Array*, %"class.std::__1::vector.193"*, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast %"class.fxcrt::RetainPtr.210"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.208"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %463, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast i32** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.193"* %1 to i64*
  %16 = bitcast i32** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %1, i64 0, i32 0, i32 0
  %18 = icmp sgt i32 %2, 0
  %19 = sext i32 %2 to i64
  %20 = zext i32 %2 to i64
  br label %21

21:                                               ; preds = %11, %452
  %22 = phi i64 [ 0, %11 ], [ %457, %452 ]
  %23 = phi i32 [ 0, %11 ], [ %456, %452 ]
  %24 = phi i32 [ 0, %11 ], [ %455, %452 ]
  %25 = phi i32 [ 0, %11 ], [ %454, %452 ]
  %26 = phi i32 [ 0, %11 ], [ %453, %452 ]
  %27 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %0, i64 %22) #13
  %28 = icmp eq %class.CPDF_Object* %27, null
  br i1 %28, label %452, label %29

29:                                               ; preds = %21
  %30 = bitcast %class.CPDF_Object* %27 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %31 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %30, align 8
  %32 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %31, i64 24
  %33 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %32, align 8
  %34 = tail call %class.CPDF_Array* %33(%class.CPDF_Object* nonnull %27) #13
  %35 = icmp eq %class.CPDF_Array* %34, null
  br i1 %35, label %250, label %36

36:                                               ; preds = %29
  %37 = icmp eq i32 %24, 1
  br i1 %37, label %38, label %463

38:                                               ; preds = %36
  %39 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %34, i64 0, i32 1
  %40 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %34, i64 0, i32 1, i32 0, i32 1
  %41 = bitcast %"class.fxcrt::RetainPtr.210"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.208"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, 2147483648
  br i1 %47, label %49, label %48, !prof !16

48:                                               ; preds = %38
  tail call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %38
  %50 = trunc i64 %46 to i32
  %51 = sub nuw nsw i32 2147483647, %50
  %52 = icmp sgt i32 %25, %51
  %53 = icmp eq i64 %42, %44
  %54 = or i1 %52, %53
  br i1 %54, label %452, label %55

55:                                               ; preds = %49, %176
  %56 = phi i64 [ %178, %176 ], [ 0, %49 ]
  %57 = phi i32 [ %177, %176 ], [ %25, %49 ]
  %58 = load i32*, i32** %12, align 8
  %59 = load i32*, i32** %13, align 8
  %60 = icmp eq i32* %58, %59
  %61 = ptrtoint i32* %59 to i64
  br i1 %60, label %65, label %62

62:                                               ; preds = %55
  store i32 %57, i32* %58, align 4
  %63 = getelementptr inbounds i32, i32* %58, i64 1
  %64 = ptrtoint i32* %63 to i64
  store i64 %64, i64* %14, align 8
  br label %118

65:                                               ; preds = %55
  %66 = ptrtoint i32* %58 to i64
  %67 = load i64, i64* %15, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 2
  %70 = add nsw i64 %69, 1
  %71 = icmp ugt i64 %70, 4611686018427387903
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #15
  unreachable

74:                                               ; preds = %65
  %75 = sub i64 %61, %67
  %76 = ashr exact i64 %75, 2
  %77 = icmp ult i64 %76, 2305843009213693951
  br i1 %77, label %78, label %86

78:                                               ; preds = %74
  %79 = ashr exact i64 %75, 1
  %80 = icmp ult i64 %79, %70
  %81 = select i1 %80, i64 %70, i64 %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %78
  %84 = icmp ugt i64 %81, 4611686018427387903
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  tail call void @abort() #15
  unreachable

86:                                               ; preds = %83, %74
  %87 = phi i64 [ %81, %83 ], [ 4611686018427387903, %74 ]
  %88 = shl i64 %87, 2
  %89 = tail call i8* @_Znwm(i64 %88) #14
  %90 = bitcast i8* %89 to i32*
  br label %91

91:                                               ; preds = %86, %78
  %92 = phi i64 [ %87, %86 ], [ 0, %78 ]
  %93 = phi i32* [ %90, %86 ], [ null, %78 ]
  %94 = getelementptr inbounds i32, i32* %93, i64 %69
  %95 = getelementptr inbounds i32, i32* %93, i64 %92
  %96 = ptrtoint i32* %95 to i64
  store i32 %57, i32* %94, align 4
  %97 = getelementptr inbounds i32, i32* %94, i64 1
  %98 = ptrtoint i32* %97 to i64
  %99 = load i32*, i32** %17, align 8
  %100 = load i64, i64* %14, align 8
  %101 = ptrtoint i32* %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 2
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds i32, i32* %94, i64 %104
  %106 = ptrtoint i32* %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %91
  %109 = bitcast i32* %105 to i8*
  %110 = bitcast i32* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 %102, i1 false) #13
  %111 = load i32*, i32** %17, align 8
  br label %112

112:                                              ; preds = %108, %91
  %113 = phi i32* [ %99, %91 ], [ %111, %108 ]
  store i64 %106, i64* %15, align 8
  store i64 %98, i64* %14, align 8
  store i64 %96, i64* %16, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = bitcast i32* %113 to i8*
  tail call void @_ZdlPv(i8* %116) #14
  %117 = load i32*, i32** %12, align 8
  br label %118

118:                                              ; preds = %62, %112, %115
  %119 = phi i32* [ %63, %62 ], [ %97, %112 ], [ %117, %115 ]
  %120 = load i32*, i32** %13, align 8
  %121 = icmp eq i32* %119, %120
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  store i32 %57, i32* %119, align 4
  %123 = getelementptr inbounds i32, i32* %119, i64 1
  %124 = ptrtoint i32* %123 to i64
  store i64 %124, i64* %14, align 8
  br label %175

125:                                              ; preds = %118
  %126 = ptrtoint i32* %120 to i64
  %127 = load i64, i64* %15, align 8
  %128 = sub i64 %126, %127
  %129 = ashr exact i64 %128, 2
  %130 = add nsw i64 %129, 1
  %131 = icmp ugt i64 %130, 4611686018427387903
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %133) #15
  unreachable

134:                                              ; preds = %125
  %135 = icmp ult i64 %129, 2305843009213693951
  br i1 %135, label %136, label %144

136:                                              ; preds = %134
  %137 = ashr exact i64 %128, 1
  %138 = icmp ult i64 %137, %130
  %139 = select i1 %138, i64 %130, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = icmp ugt i64 %139, 4611686018427387903
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  tail call void @abort() #15
  unreachable

144:                                              ; preds = %141, %134
  %145 = phi i64 [ %139, %141 ], [ 4611686018427387903, %134 ]
  %146 = shl i64 %145, 2
  %147 = tail call i8* @_Znwm(i64 %146) #14
  %148 = bitcast i8* %147 to i32*
  br label %149

149:                                              ; preds = %144, %136
  %150 = phi i64 [ %145, %144 ], [ 0, %136 ]
  %151 = phi i32* [ %148, %144 ], [ null, %136 ]
  %152 = getelementptr inbounds i32, i32* %151, i64 %129
  %153 = getelementptr inbounds i32, i32* %151, i64 %150
  %154 = ptrtoint i32* %153 to i64
  store i32 %57, i32* %152, align 4
  %155 = getelementptr inbounds i32, i32* %152, i64 1
  %156 = ptrtoint i32* %155 to i64
  %157 = load i32*, i32** %17, align 8
  %158 = load i64, i64* %14, align 8
  %159 = ptrtoint i32* %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 2
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds i32, i32* %152, i64 %162
  %164 = ptrtoint i32* %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %149
  %167 = bitcast i32* %163 to i8*
  %168 = bitcast i32* %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 %160, i1 false) #13
  %169 = load i32*, i32** %17, align 8
  br label %170

170:                                              ; preds = %166, %149
  %171 = phi i32* [ %157, %149 ], [ %169, %166 ]
  store i64 %164, i64* %15, align 8
  store i64 %156, i64* %14, align 8
  store i64 %154, i64* %16, align 8
  %172 = icmp eq i32* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = bitcast i32* %171 to i8*
  tail call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %122, %170, %173
  br i1 %18, label %184, label %176

176:                                              ; preds = %247, %175
  %177 = add nsw i32 %57, 1
  %178 = add i64 %56, %19
  %179 = load i64, i64* %41, align 8
  %180 = load i64, i64* %43, align 8
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 3
  %183 = icmp ult i64 %178, %182
  br i1 %183, label %55, label %452

184:                                              ; preds = %175, %247
  %185 = phi i64 [ %248, %247 ], [ 0, %175 ]
  %186 = add i64 %56, %185
  %187 = tail call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %34, i64 %186) #13
  %188 = load i32*, i32** %12, align 8
  %189 = load i32*, i32** %13, align 8
  %190 = icmp ult i32* %188, %189
  %191 = ptrtoint i32* %189 to i64
  br i1 %190, label %192, label %195

192:                                              ; preds = %184
  store i32 %187, i32* %188, align 4
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = ptrtoint i32* %193 to i64
  store i64 %194, i64* %14, align 8
  br label %247

195:                                              ; preds = %184
  %196 = ptrtoint i32* %188 to i64
  %197 = load i64, i64* %15, align 8
  %198 = sub i64 %196, %197
  %199 = ashr exact i64 %198, 2
  %200 = add nsw i64 %199, 1
  %201 = icmp ugt i64 %200, 4611686018427387903
  br i1 %201, label %202, label %204

202:                                              ; preds = %195
  %203 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %203) #15
  unreachable

204:                                              ; preds = %195
  %205 = sub i64 %191, %197
  %206 = ashr exact i64 %205, 2
  %207 = icmp ult i64 %206, 2305843009213693951
  br i1 %207, label %208, label %216

208:                                              ; preds = %204
  %209 = ashr exact i64 %205, 1
  %210 = icmp ult i64 %209, %200
  %211 = select i1 %210, i64 %200, i64 %209
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %221, label %213

213:                                              ; preds = %208
  %214 = icmp ugt i64 %211, 4611686018427387903
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  tail call void @abort() #15
  unreachable

216:                                              ; preds = %213, %204
  %217 = phi i64 [ %211, %213 ], [ 4611686018427387903, %204 ]
  %218 = shl i64 %217, 2
  %219 = tail call i8* @_Znwm(i64 %218) #14
  %220 = bitcast i8* %219 to i32*
  br label %221

221:                                              ; preds = %216, %208
  %222 = phi i64 [ %217, %216 ], [ 0, %208 ]
  %223 = phi i32* [ %220, %216 ], [ null, %208 ]
  %224 = getelementptr inbounds i32, i32* %223, i64 %199
  %225 = getelementptr inbounds i32, i32* %223, i64 %222
  %226 = ptrtoint i32* %225 to i64
  store i32 %187, i32* %224, align 4
  %227 = getelementptr inbounds i32, i32* %224, i64 1
  %228 = ptrtoint i32* %227 to i64
  %229 = load i32*, i32** %17, align 8
  %230 = load i64, i64* %14, align 8
  %231 = ptrtoint i32* %229 to i64
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 2
  %234 = sub nsw i64 0, %233
  %235 = getelementptr inbounds i32, i32* %224, i64 %234
  %236 = ptrtoint i32* %235 to i64
  %237 = icmp sgt i64 %232, 0
  br i1 %237, label %238, label %242

238:                                              ; preds = %221
  %239 = bitcast i32* %235 to i8*
  %240 = bitcast i32* %229 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 4 %240, i64 %232, i1 false) #13
  %241 = load i32*, i32** %17, align 8
  br label %242

242:                                              ; preds = %238, %221
  %243 = phi i32* [ %229, %221 ], [ %241, %238 ]
  store i64 %236, i64* %15, align 8
  store i64 %228, i64* %14, align 8
  store i64 %226, i64* %16, align 8
  %244 = icmp eq i32* %243, null
  br i1 %244, label %247, label %245

245:                                              ; preds = %242
  %246 = bitcast i32* %243 to i8*
  tail call void @_ZdlPv(i8* %246) #14
  br label %247

247:                                              ; preds = %192, %242, %245
  %248 = add nuw nsw i64 %185, 1
  %249 = icmp eq i64 %248, %20
  br i1 %249, label %176, label %184

250:                                              ; preds = %29
  switch i32 %24, label %263 [
    i32 0, label %251
    i32 1, label %257
  ]

251:                                              ; preds = %250
  %252 = bitcast %class.CPDF_Object* %27 to i32 (%class.CPDF_Object*)***
  %253 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %252, align 8
  %254 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %253, i64 10
  %255 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %254, align 8
  %256 = tail call i32 %255(%class.CPDF_Object* nonnull %27) #13
  br label %452

257:                                              ; preds = %250
  %258 = bitcast %class.CPDF_Object* %27 to i32 (%class.CPDF_Object*)***
  %259 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %258, align 8
  %260 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %259, i64 10
  %261 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %260, align 8
  %262 = tail call i32 %261(%class.CPDF_Object* nonnull %27) #13
  br label %452

263:                                              ; preds = %250
  %264 = icmp eq i32 %23, 0
  br i1 %264, label %265, label %383

265:                                              ; preds = %263
  %266 = load i32*, i32** %12, align 8
  %267 = load i32*, i32** %13, align 8
  %268 = icmp eq i32* %266, %267
  %269 = ptrtoint i32* %267 to i64
  br i1 %268, label %273, label %270

270:                                              ; preds = %265
  store i32 %25, i32* %266, align 4
  %271 = getelementptr inbounds i32, i32* %266, i64 1
  %272 = ptrtoint i32* %271 to i64
  store i64 %272, i64* %14, align 8
  br label %326

273:                                              ; preds = %265
  %274 = ptrtoint i32* %266 to i64
  %275 = load i64, i64* %15, align 8
  %276 = sub i64 %274, %275
  %277 = ashr exact i64 %276, 2
  %278 = add nsw i64 %277, 1
  %279 = icmp ugt i64 %278, 4611686018427387903
  br i1 %279, label %280, label %282

280:                                              ; preds = %273
  %281 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %281) #15
  unreachable

282:                                              ; preds = %273
  %283 = sub i64 %269, %275
  %284 = ashr exact i64 %283, 2
  %285 = icmp ult i64 %284, 2305843009213693951
  br i1 %285, label %286, label %294

286:                                              ; preds = %282
  %287 = ashr exact i64 %283, 1
  %288 = icmp ult i64 %287, %278
  %289 = select i1 %288, i64 %278, i64 %287
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %299, label %291

291:                                              ; preds = %286
  %292 = icmp ugt i64 %289, 4611686018427387903
  br i1 %292, label %293, label %294

293:                                              ; preds = %291
  tail call void @abort() #15
  unreachable

294:                                              ; preds = %291, %282
  %295 = phi i64 [ %289, %291 ], [ 4611686018427387903, %282 ]
  %296 = shl i64 %295, 2
  %297 = tail call i8* @_Znwm(i64 %296) #14
  %298 = bitcast i8* %297 to i32*
  br label %299

299:                                              ; preds = %294, %286
  %300 = phi i64 [ %295, %294 ], [ 0, %286 ]
  %301 = phi i32* [ %298, %294 ], [ null, %286 ]
  %302 = getelementptr inbounds i32, i32* %301, i64 %277
  %303 = getelementptr inbounds i32, i32* %301, i64 %300
  %304 = ptrtoint i32* %303 to i64
  store i32 %25, i32* %302, align 4
  %305 = getelementptr inbounds i32, i32* %302, i64 1
  %306 = ptrtoint i32* %305 to i64
  %307 = load i32*, i32** %17, align 8
  %308 = load i64, i64* %14, align 8
  %309 = ptrtoint i32* %307 to i64
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 2
  %312 = sub nsw i64 0, %311
  %313 = getelementptr inbounds i32, i32* %302, i64 %312
  %314 = ptrtoint i32* %313 to i64
  %315 = icmp sgt i64 %310, 0
  br i1 %315, label %316, label %320

316:                                              ; preds = %299
  %317 = bitcast i32* %313 to i8*
  %318 = bitcast i32* %307 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %317, i8* align 4 %318, i64 %310, i1 false) #13
  %319 = load i32*, i32** %17, align 8
  br label %320

320:                                              ; preds = %316, %299
  %321 = phi i32* [ %307, %299 ], [ %319, %316 ]
  store i64 %314, i64* %15, align 8
  store i64 %306, i64* %14, align 8
  store i64 %304, i64* %16, align 8
  %322 = icmp eq i32* %321, null
  br i1 %322, label %326, label %323

323:                                              ; preds = %320
  %324 = bitcast i32* %321 to i8*
  tail call void @_ZdlPv(i8* %324) #14
  %325 = load i32*, i32** %12, align 8
  br label %326

326:                                              ; preds = %270, %320, %323
  %327 = phi i32* [ %271, %270 ], [ %305, %320 ], [ %325, %323 ]
  %328 = load i32*, i32** %13, align 8
  %329 = icmp eq i32* %327, %328
  br i1 %329, label %333, label %330

330:                                              ; preds = %326
  store i32 %26, i32* %327, align 4
  %331 = getelementptr inbounds i32, i32* %327, i64 1
  %332 = ptrtoint i32* %331 to i64
  store i64 %332, i64* %14, align 8
  br label %383

333:                                              ; preds = %326
  %334 = ptrtoint i32* %328 to i64
  %335 = load i64, i64* %15, align 8
  %336 = sub i64 %334, %335
  %337 = ashr exact i64 %336, 2
  %338 = add nsw i64 %337, 1
  %339 = icmp ugt i64 %338, 4611686018427387903
  br i1 %339, label %340, label %342

340:                                              ; preds = %333
  %341 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %341) #15
  unreachable

342:                                              ; preds = %333
  %343 = icmp ult i64 %337, 2305843009213693951
  br i1 %343, label %344, label %352

344:                                              ; preds = %342
  %345 = ashr exact i64 %336, 1
  %346 = icmp ult i64 %345, %338
  %347 = select i1 %346, i64 %338, i64 %345
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %357, label %349

349:                                              ; preds = %344
  %350 = icmp ugt i64 %347, 4611686018427387903
  br i1 %350, label %351, label %352

351:                                              ; preds = %349
  tail call void @abort() #15
  unreachable

352:                                              ; preds = %349, %342
  %353 = phi i64 [ %347, %349 ], [ 4611686018427387903, %342 ]
  %354 = shl i64 %353, 2
  %355 = tail call i8* @_Znwm(i64 %354) #14
  %356 = bitcast i8* %355 to i32*
  br label %357

357:                                              ; preds = %352, %344
  %358 = phi i64 [ %353, %352 ], [ 0, %344 ]
  %359 = phi i32* [ %356, %352 ], [ null, %344 ]
  %360 = getelementptr inbounds i32, i32* %359, i64 %337
  %361 = getelementptr inbounds i32, i32* %359, i64 %358
  %362 = ptrtoint i32* %361 to i64
  store i32 %26, i32* %360, align 4
  %363 = getelementptr inbounds i32, i32* %360, i64 1
  %364 = ptrtoint i32* %363 to i64
  %365 = load i32*, i32** %17, align 8
  %366 = load i64, i64* %14, align 8
  %367 = ptrtoint i32* %365 to i64
  %368 = sub i64 %366, %367
  %369 = ashr exact i64 %368, 2
  %370 = sub nsw i64 0, %369
  %371 = getelementptr inbounds i32, i32* %360, i64 %370
  %372 = ptrtoint i32* %371 to i64
  %373 = icmp sgt i64 %368, 0
  br i1 %373, label %374, label %378

374:                                              ; preds = %357
  %375 = bitcast i32* %371 to i8*
  %376 = bitcast i32* %365 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %375, i8* align 4 %376, i64 %368, i1 false) #13
  %377 = load i32*, i32** %17, align 8
  br label %378

378:                                              ; preds = %374, %357
  %379 = phi i32* [ %365, %357 ], [ %377, %374 ]
  store i64 %372, i64* %15, align 8
  store i64 %364, i64* %14, align 8
  store i64 %362, i64* %16, align 8
  %380 = icmp eq i32* %379, null
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = bitcast i32* %379 to i8*
  tail call void @_ZdlPv(i8* %382) #14
  br label %383

383:                                              ; preds = %381, %378, %330, %263
  %384 = bitcast %class.CPDF_Object* %27 to i32 (%class.CPDF_Object*)***
  %385 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %384, align 8
  %386 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %385, i64 10
  %387 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %386, align 8
  %388 = tail call i32 %387(%class.CPDF_Object* nonnull %27) #13
  %389 = load i32*, i32** %12, align 8
  %390 = load i32*, i32** %13, align 8
  %391 = icmp ult i32* %389, %390
  %392 = ptrtoint i32* %390 to i64
  br i1 %391, label %393, label %396

393:                                              ; preds = %383
  store i32 %388, i32* %389, align 4
  %394 = getelementptr inbounds i32, i32* %389, i64 1
  %395 = ptrtoint i32* %394 to i64
  store i64 %395, i64* %14, align 8
  br label %448

396:                                              ; preds = %383
  %397 = ptrtoint i32* %389 to i64
  %398 = load i64, i64* %15, align 8
  %399 = sub i64 %397, %398
  %400 = ashr exact i64 %399, 2
  %401 = add nsw i64 %400, 1
  %402 = icmp ugt i64 %401, 4611686018427387903
  br i1 %402, label %403, label %405

403:                                              ; preds = %396
  %404 = bitcast %"class.std::__1::vector.193"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %404) #15
  unreachable

405:                                              ; preds = %396
  %406 = sub i64 %392, %398
  %407 = ashr exact i64 %406, 2
  %408 = icmp ult i64 %407, 2305843009213693951
  br i1 %408, label %409, label %417

409:                                              ; preds = %405
  %410 = ashr exact i64 %406, 1
  %411 = icmp ult i64 %410, %401
  %412 = select i1 %411, i64 %401, i64 %410
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %422, label %414

414:                                              ; preds = %409
  %415 = icmp ugt i64 %412, 4611686018427387903
  br i1 %415, label %416, label %417

416:                                              ; preds = %414
  tail call void @abort() #15
  unreachable

417:                                              ; preds = %414, %405
  %418 = phi i64 [ %412, %414 ], [ 4611686018427387903, %405 ]
  %419 = shl i64 %418, 2
  %420 = tail call i8* @_Znwm(i64 %419) #14
  %421 = bitcast i8* %420 to i32*
  br label %422

422:                                              ; preds = %417, %409
  %423 = phi i64 [ %418, %417 ], [ 0, %409 ]
  %424 = phi i32* [ %421, %417 ], [ null, %409 ]
  %425 = getelementptr inbounds i32, i32* %424, i64 %400
  %426 = getelementptr inbounds i32, i32* %424, i64 %423
  %427 = ptrtoint i32* %426 to i64
  store i32 %388, i32* %425, align 4
  %428 = getelementptr inbounds i32, i32* %425, i64 1
  %429 = ptrtoint i32* %428 to i64
  %430 = load i32*, i32** %17, align 8
  %431 = load i64, i64* %14, align 8
  %432 = ptrtoint i32* %430 to i64
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 2
  %435 = sub nsw i64 0, %434
  %436 = getelementptr inbounds i32, i32* %425, i64 %435
  %437 = ptrtoint i32* %436 to i64
  %438 = icmp sgt i64 %433, 0
  br i1 %438, label %439, label %443

439:                                              ; preds = %422
  %440 = bitcast i32* %436 to i8*
  %441 = bitcast i32* %430 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 %433, i1 false) #13
  %442 = load i32*, i32** %17, align 8
  br label %443

443:                                              ; preds = %439, %422
  %444 = phi i32* [ %430, %422 ], [ %442, %439 ]
  store i64 %437, i64* %15, align 8
  store i64 %429, i64* %14, align 8
  store i64 %427, i64* %16, align 8
  %445 = icmp eq i32* %444, null
  br i1 %445, label %448, label %446

446:                                              ; preds = %443
  %447 = bitcast i32* %444 to i8*
  tail call void @_ZdlPv(i8* %447) #14
  br label %448

448:                                              ; preds = %393, %443, %446
  %449 = add nsw i32 %23, 1
  %450 = icmp eq i32 %449, %2
  %451 = select i1 %450, i32 0, i32 %24
  br label %452

452:                                              ; preds = %176, %21, %49, %251, %448, %257
  %453 = phi i32 [ %26, %49 ], [ %26, %251 ], [ %262, %257 ], [ %26, %448 ], [ %26, %21 ], [ %26, %176 ]
  %454 = phi i32 [ %25, %49 ], [ %256, %251 ], [ %25, %257 ], [ %25, %448 ], [ %25, %21 ], [ %177, %176 ]
  %455 = phi i32 [ 0, %49 ], [ 1, %251 ], [ 2, %257 ], [ %451, %448 ], [ %24, %21 ], [ 0, %176 ]
  %456 = phi i32 [ %23, %49 ], [ %23, %251 ], [ 0, %257 ], [ %449, %448 ], [ %23, %21 ], [ %23, %176 ]
  %457 = add nuw i64 %22, 1
  %458 = load i64, i64* %6, align 8
  %459 = load i64, i64* %8, align 8
  %460 = sub i64 %458, %459
  %461 = ashr exact i64 %460, 3
  %462 = icmp ult i64 %457, %461
  br i1 %462, label %21, label %463

463:                                              ; preds = %452, %36, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CIDFont13LoadSubstFontEv(%class.CPDF_CIDFont*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %3, i32 5) #13
  %5 = extractvalue { i32, i1 } %4, 1
  %6 = extractvalue { i32, i1 } %4, 0
  %7 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 7
  %9 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 10
  %13 = load i32, i32* %12, align 4
  %14 = select i1 %5, i32 400, i32 %6, !prof !12
  %15 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 14
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds [6 x i16], [6 x i16]* @_ZN12_GLOBAL__N_112g_CharsetCPsE, i64 0, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_CMap*, %class.CPDF_CMap** %23, align 8
  %25 = icmp eq %class.CPDF_CMap* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %24, i64 0, i32 2
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp ne i8 %28, 0
  br label %30

30:                                               ; preds = %1, %26
  %31 = phi i1 [ false, %1 ], [ %29, %26 ]
  tail call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %7, %"class.fxcrt::ByteString"* dereferenceable(8) %8, i1 zeroext %11, i32 %13, i32 %14, i32 %16, i32 %22, i1 zeroext %31) #13
  ret void
}

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font*) local_unnamed_addr #1

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN12CPDF_CIDFont11GetCharBBoxEj(%class.CPDF_CIDFont*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %struct.FX_RECT, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.FT_GlyphRec_*, align 8
  %6 = alloca %struct.FT_BBox_, align 8
  %7 = alloca %class.CFX_Matrix, align 16
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %class.CFX_FloatRect*
  %10 = alloca %class.CFX_FloatRect, align 4
  %11 = icmp ult i32 %1, 256
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 15, i64 %13, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 15, i64 %13
  %19 = bitcast %struct.FX_RECT* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i32* %14 to i64*
  %22 = load i64, i64* %21, align 8
  br label %258

23:                                               ; preds = %12, %2
  %24 = bitcast %struct.FX_RECT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 0
  %26 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 1
  %27 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 2
  %28 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 0, i8* %4, align 1
  %29 = call i32 @_ZN12CPDF_CIDFont17GlyphFromCharCodeEjPb(%class.CPDF_CIDFont* %0, i32 %1, i8* nonnull %4)
  %30 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_Face*, %class.CFX_Face** %30, align 8
  %32 = icmp eq %class.CFX_Face* %31, null
  br i1 %32, label %156, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %31, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %34, align 8
  %36 = icmp eq %struct.FT_FaceRec_* %35, null
  br i1 %36, label %156, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 8192
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %120, label %42

42:                                               ; preds = %37
  %43 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %35, i32 %29, i32 512) #13
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %156

45:                                               ; preds = %42
  %46 = bitcast %struct.FT_GlyphRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  store %struct.FT_GlyphRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_GlyphRec_*), %struct.FT_GlyphRec_** %5, align 8
  %47 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 21
  %48 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %47, align 8
  %49 = call i32 @FT_Get_Glyph(%struct.FT_GlyphSlotRec_* %48, %struct.FT_GlyphRec_** nonnull %5) #13
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %119

51:                                               ; preds = %45
  %52 = bitcast %struct.FT_BBox_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #13
  %53 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %6, i64 0, i32 0
  %54 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %6, i64 0, i32 1
  %55 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %6, i64 0, i32 2
  %56 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %6, i64 0, i32 3
  %57 = bitcast %struct.FT_BBox_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false)
  %58 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %5, align 8
  call void @FT_Glyph_Get_CBox(%struct.FT_GlyphRec_* %58, i32 3, %struct.FT_BBox_* nonnull %6) #13
  %59 = load i64, i64* %53, align 8
  %60 = icmp sgt i64 %59, -2147483
  %61 = select i1 %60, i64 %59, i64 -2147483
  %62 = icmp slt i64 %61, 2147483
  %63 = select i1 %62, i64 %61, i64 2147483
  store i64 %63, i64* %53, align 8
  %64 = load i64, i64* %55, align 8
  %65 = icmp sgt i64 %64, -2147483
  %66 = select i1 %65, i64 %64, i64 -2147483
  %67 = icmp slt i64 %66, 2147483
  %68 = select i1 %67, i64 %66, i64 2147483
  store i64 %68, i64* %55, align 8
  %69 = load i64, i64* %54, align 8
  %70 = icmp sgt i64 %69, -2147483
  %71 = select i1 %70, i64 %69, i64 -2147483
  %72 = icmp slt i64 %71, 2147483
  %73 = select i1 %72, i64 %71, i64 2147483
  store i64 %73, i64* %54, align 8
  %74 = load i64, i64* %56, align 8
  %75 = icmp sgt i64 %74, -2147483
  %76 = select i1 %75, i64 %74, i64 -2147483
  %77 = icmp slt i64 %76, 2147483
  %78 = select i1 %77, i64 %76, i64 2147483
  store i64 %78, i64* %56, align 8
  %79 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 22
  %80 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %79, align 8
  %81 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %80, i64 0, i32 2, i32 0
  %82 = load i16, i16* %81, align 8
  %83 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %80, i64 0, i32 2, i32 1
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %82, 0
  %86 = icmp eq i16 %84, 0
  %87 = or i1 %85, %86
  br i1 %87, label %99, label %88

88:                                               ; preds = %51
  %89 = mul nsw i64 %63, 1000
  %90 = zext i16 %82 to i64
  %91 = sdiv i64 %89, %90
  %92 = mul nsw i64 %78, 1000
  %93 = zext i16 %84 to i64
  %94 = sdiv i64 %92, %93
  %95 = mul nsw i64 %68, 1000
  %96 = sdiv i64 %95, %90
  %97 = mul nsw i64 %73, 1000
  %98 = sdiv i64 %97, %93
  br label %99

99:                                               ; preds = %51, %88
  %100 = phi i64 [ %91, %88 ], [ %63, %51 ]
  %101 = phi i64 [ %94, %88 ], [ %78, %51 ]
  %102 = phi i64 [ %96, %88 ], [ %68, %51 ]
  %103 = phi i64 [ %98, %88 ], [ %73, %51 ]
  %104 = trunc i64 %100 to i32
  store i32 %104, i32* %25, align 8
  %105 = trunc i64 %101 to i32
  %106 = trunc i64 %102 to i32
  store i32 %106, i32* %27, align 8
  %107 = trunc i64 %103 to i32
  %108 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 14
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i32
  %111 = icmp sgt i32 %105, %110
  %112 = select i1 %111, i32 %110, i32 %105
  store i32 %112, i32* %26, align 4
  %113 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 15
  %114 = load i16, i16* %113, align 4
  %115 = sext i16 %114 to i32
  %116 = icmp slt i32 %107, %115
  %117 = select i1 %116, i32 %115, i32 %107
  store i32 %117, i32* %28, align 4
  %118 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %5, align 8
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %118) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #13
  br label %119

119:                                              ; preds = %45, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %156

120:                                              ; preds = %37
  %121 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %35, i32 %29, i32 1) #13
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %156

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %35, i64 0, i32 21
  %125 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %124, align 8
  %126 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %125, i64 0, i32 5, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = trunc i64 %127 to i32
  %129 = call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %128, %struct.FT_FaceRec_* nonnull %35) #13
  %130 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %124, align 8
  %131 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %130, i64 0, i32 5, i32 3
  %132 = load i64, i64* %131, align 8
  %133 = trunc i64 %132 to i32
  %134 = call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %133, %struct.FT_FaceRec_* nonnull %35) #13
  %135 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %124, align 8
  %136 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %135, i64 0, i32 5, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %135, i64 0, i32 5, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add nsw i64 %139, %137
  %141 = trunc i64 %140 to i32
  %142 = call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %141, %struct.FT_FaceRec_* nonnull %35) #13
  %143 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %124, align 8
  %144 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %143, i64 0, i32 5, i32 3
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %143, i64 0, i32 5, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = sub nsw i64 %145, %147
  %149 = trunc i64 %148 to i32
  %150 = call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %149, %struct.FT_FaceRec_* nonnull %35) #13
  store i32 %129, i32* %25, align 8
  store i32 %134, i32* %26, align 4
  store i32 %142, i32* %27, align 8
  store i32 %150, i32* %28, align 4
  %151 = icmp slt i32 %134, 2114445438
  br i1 %151, label %152, label %155

152:                                              ; preds = %123
  %153 = sdiv i32 %134, 64
  %154 = add nsw i32 %153, %134
  store i32 %154, i32* %26, align 4
  br label %156

155:                                              ; preds = %123
  store i32 2147483647, i32* %26, align 4
  br label %156

156:                                              ; preds = %23, %120, %155, %152, %119, %42, %33
  %157 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %158 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %157, align 8
  %159 = icmp eq %class.CPDF_StreamAcc* %158, null
  br i1 %159, label %160, label %248

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  %162 = load i8, i8* %161, align 4
  %163 = icmp eq i8 %162, 3
  br i1 %163, label %164, label %248

164:                                              ; preds = %160
  %165 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %166 = load %class.CPDF_CMap*, %class.CPDF_CMap** %165, align 8
  %167 = icmp eq %class.CPDF_CMap* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = trunc i32 %1 to i16
  br label %174

170:                                              ; preds = %164
  %171 = call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %166, i32 %1) #13
  %172 = load i8, i8* %161, align 4
  %173 = icmp eq i8 %172, 3
  br i1 %173, label %174, label %248

174:                                              ; preds = %168, %170
  %175 = phi i16 [ %169, %168 ], [ %171, %170 ]
  %176 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %157, align 8
  %177 = icmp eq %class.CPDF_StreamAcc* %176, null
  br i1 %177, label %178, label %248

178:                                              ; preds = %174, %178
  %179 = phi i64 [ %190, %178 ], [ 154, %174 ]
  %180 = phi %"struct.(anonymous namespace)::CIDTransform"* [ %189, %178 ], [ getelementptr inbounds ([154 x %"struct.(anonymous namespace)::CIDTransform"], [154 x %"struct.(anonymous namespace)::CIDTransform"]* @_ZN12_GLOBAL__N_117g_Japan1_VertCIDsE, i64 0, i64 0), %174 ]
  %181 = lshr i64 %179, 1
  %182 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %180, i64 %181
  %183 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %182, i64 0, i32 0
  %184 = load i16, i16* %183, align 2
  %185 = icmp ult i16 %184, %175
  %186 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %182, i64 1
  %187 = xor i64 %181, -1
  %188 = add i64 %179, %187
  %189 = select i1 %185, %"struct.(anonymous namespace)::CIDTransform"* %186, %"struct.(anonymous namespace)::CIDTransform"* %180
  %190 = select i1 %185, i64 %188, i64 %181
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %178

192:                                              ; preds = %178
  %193 = icmp ult %"struct.(anonymous namespace)::CIDTransform"* %189, getelementptr inbounds ([154 x %"struct.(anonymous namespace)::CIDTransform"], [154 x %"struct.(anonymous namespace)::CIDTransform"]* @_ZN12_GLOBAL__N_117g_Japan1_VertCIDsE, i64 1, i64 0)
  br i1 %193, label %194, label %248

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %189, i64 0, i32 0
  %196 = load i16, i16* %195, align 2
  %197 = icmp eq i16 %196, %175
  %198 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %189, i64 0, i32 1
  %199 = select i1 %197, i8* %198, i8* null
  %200 = icmp ne i8* %199, null
  %201 = load i8, i8* %4, align 1
  %202 = icmp eq i8 %201, 0
  %203 = and i1 %202, %200
  br i1 %203, label %204, label %248

204:                                              ; preds = %194
  %205 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #13
  %206 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 4
  %207 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 5
  %208 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %208, i8 -1, i64 24, i1 false)
  %209 = bitcast i8* %199 to <4 x i8>*
  %210 = load <4 x i8>, <4 x i8>* %209, align 1
  %211 = zext <4 x i8> %210 to <4 x i32>
  %212 = icmp sgt <4 x i8> %210, <i8 -1, i8 -1, i8 -1, i8 -1>
  %213 = add nsw <4 x i32> %211, <i32 -255, i32 -255, i32 -255, i32 -255>
  %214 = select <4 x i1> %212, <4 x i32> %211, <4 x i32> %213
  %215 = sitofp <4 x i32> %214 to <4 x float>
  %216 = fmul <4 x float> %215, <float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000>
  %217 = getelementptr inbounds i8, i8* %199, i64 4
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = icmp sgt i8 %218, -1
  %221 = add nsw i32 %219, -255
  %222 = select i1 %220, i32 %219, i32 %221
  %223 = sitofp i32 %222 to float
  %224 = fmul float %223, 0x3F80204080000000
  %225 = fmul float %224, 1.000000e+03
  %226 = getelementptr inbounds i8, i8* %199, i64 5
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = icmp sgt i8 %227, -1
  %230 = add nsw i32 %228, -255
  %231 = select i1 %229, i32 %228, i32 %230
  %232 = sitofp i32 %231 to float
  %233 = fmul float %232, 0x3F80204080000000
  %234 = fmul float %233, 1.000000e+03
  %235 = bitcast %class.CFX_Matrix* %7 to <4 x float>*
  store <4 x float> %216, <4 x float>* %235, align 16
  store float %225, float* %206, align 16
  store float %234, float* %207, align 4
  %236 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #13
  %237 = bitcast %class.CFX_FloatRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #13
  call void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect* nonnull %10, %struct.FX_RECT* nonnull dereferenceable(16) %3) #13
  %238 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #13
  %239 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %240 = extractvalue { <2 x float>, <2 x float> } %238, 0
  store <2 x float> %240, <2 x float>* %239, align 8
  %241 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %242 = extractvalue { <2 x float>, <2 x float> } %238, 1
  store <2 x float> %242, <2 x float>* %241, align 8
  %243 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %9) #13
  %244 = extractvalue { i64, i64 } %243, 0
  %245 = extractvalue { i64, i64 } %243, 1
  %246 = bitcast %struct.FX_RECT* %3 to i64*
  store i64 %244, i64* %246, align 8
  %247 = bitcast i32* %27 to i64*
  store i64 %245, i64* %247, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #13
  br label %248

248:                                              ; preds = %156, %170, %174, %192, %204, %194, %160
  br i1 %11, label %249, label %253

249:                                              ; preds = %248
  %250 = zext i32 %1 to i64
  %251 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 15, i64 %250
  %252 = bitcast %struct.FX_RECT* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* nonnull align 8 %24, i64 16, i1 false)
  br label %253

253:                                              ; preds = %249, %248
  %254 = bitcast %struct.FX_RECT* %3 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast i32* %27 to i64*
  %257 = load i64, i64* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %258

258:                                              ; preds = %253, %17
  %259 = phi i64 [ %20, %17 ], [ %255, %253 ]
  %260 = phi i64 [ %22, %17 ], [ %257, %253 ]
  %261 = insertvalue { i64, i64 } undef, i64 %259, 0
  %262 = insertvalue { i64, i64 } %261, i64 %260, 1
  ret { i64, i64 } %262
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_CIDFont17GlyphFromCharCodeEjPb(%class.CPDF_CIDFont*, i32, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.std::__1::vector.256", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = icmp eq i8* %2, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  store i8 0, i8* %2, align 1
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %10, align 8
  %12 = icmp eq %class.CPDF_StreamAcc* %11, null
  br i1 %12, label %13, label %207

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %14, align 8
  %16 = icmp eq %class.CPDF_StreamAcc* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %19 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %18, align 8
  %20 = icmp eq %class.CPDF_CID2UnicodeMap* %19, null
  br i1 %20, label %207, label %21

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_CMap*, %class.CPDF_CMap** %22, align 8
  %24 = icmp eq %class.CPDF_CMap* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %23, i32 %1) #13
  br label %29

27:                                               ; preds = %21
  %28 = trunc i32 %1 to i16
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i16 [ %26, %25 ], [ %28, %27 ]
  %31 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 6
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = zext i16 %30 to i32
  br label %308

36:                                               ; preds = %29
  %37 = icmp eq i16 %30, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %40 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %39, align 8
  %41 = icmp eq %class.CPDF_CID2UnicodeMap* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = tail call zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap* nonnull %40) #13
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %39, align 8
  %46 = tail call signext i32 @_ZNK19CPDF_CID2UnicodeMap14UnicodeFromCIDEt(%class.CPDF_CID2UnicodeMap* %45, i16 zeroext %30) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %65

48:                                               ; preds = %38, %36, %42, %44
  %49 = tail call signext i32 @_ZNK12CPDF_CIDFont22GetUnicodeFromCharCodeEj(%class.CPDF_CIDFont* %0, i32 %1)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %65

51:                                               ; preds = %48
  %52 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.204"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.204"*), %"class.fxcrt::StringDataTemplate.204"** %53, align 8
  call void @_ZNK12CPDF_CIDFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* nonnull sret %4, %class.CPDF_CIDFont* %0, i32 %1)
  %54 = load %"class.fxcrt::StringDataTemplate.204"*, %"class.fxcrt::StringDataTemplate.204"** %53, align 8
  %55 = icmp eq %"class.fxcrt::StringDataTemplate.204"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.204", %"class.fxcrt::StringDataTemplate.204"* %54, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.204", %"class.fxcrt::StringDataTemplate.204"* %54, i64 0, i32 3, i64 0
  %62 = load i32, i32* %61, align 4
  br label %63

63:                                               ; preds = %51, %60, %56
  %64 = phi i32 [ 0, %56 ], [ %62, %60 ], [ 0, %51 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %65

65:                                               ; preds = %44, %48, %63
  %66 = phi i32 [ %64, %63 ], [ %49, %48 ], [ %46, %44 ]
  %67 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %68 = load %class.CFX_Face*, %class.CFX_Face** %67, align 8
  %69 = icmp eq %class.CFX_Face* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %71, align 8
  br label %73

73:                                               ; preds = %65, %70
  %74 = phi %struct.FT_FaceRec_* [ %72, %70 ], [ null, %65 ]
  %75 = icmp eq i32 %66, 0
  br i1 %75, label %76, label %146

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 8
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = icmp eq i32 %1, 0
  %82 = select i1 %81, i32 -1, i32 %1
  br label %308

83:                                               ; preds = %76
  %84 = add i32 %1, 31
  %85 = call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %74, i32 3, i32 1) #13
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %74, i32 1, i32 0) #13
  %88 = select i1 %87, i32 2, i32 4
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi i32 [ 4, %83 ], [ %88, %86 ]
  %91 = select i1 %85, i32 1, i32 %90
  %92 = bitcast %"class.std::__1::vector.256"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #13
  %93 = call i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32 %91, %"class.std::__1::vector.256"* nonnull dereferenceable(24) %5, i32 %84) #13
  %94 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %5, i64 0, i32 0, i32 0
  %95 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %94, align 8
  %96 = icmp eq %"class.fxcrt::ByteString"* %95, null
  br i1 %96, label %111, label %97

97:                                               ; preds = %89
  %98 = bitcast %"class.fxcrt::ByteString"* %95 to i8*
  %99 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %5, i64 0, i32 0, i32 1
  %100 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %99, align 8
  %101 = icmp eq %"class.fxcrt::ByteString"* %100, %95
  br i1 %101, label %109, label %102

102:                                              ; preds = %97, %102
  %103 = phi %"class.fxcrt::ByteString"* [ %104, %102 ], [ %100, %97 ]
  %104 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %103, i64 -1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %104) #13
  %105 = icmp eq %"class.fxcrt::ByteString"* %104, %95
  br i1 %105, label %106, label %102

106:                                              ; preds = %102
  %107 = bitcast %"class.std::__1::vector.256"* %5 to i8**
  %108 = load i8*, i8** %107, align 8
  br label %109

109:                                              ; preds = %106, %97
  %110 = phi i8* [ %108, %106 ], [ %98, %97 ]
  store %"class.fxcrt::ByteString"* %95, %"class.fxcrt::ByteString"** %99, align 8
  call void @_ZdlPv(i8* %110) #14
  br label %111

111:                                              ; preds = %89, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  %112 = icmp eq i8* %93, null
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = icmp eq i32 %84, 0
  %115 = select i1 %114, i32 -1, i32 %84
  br label %308

116:                                              ; preds = %111
  %117 = call signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8* nonnull %93) #13
  %118 = trunc i32 %117 to i16
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %116
  %121 = icmp eq i32 %84, 0
  %122 = select i1 %121, i32 -1, i32 %84
  br label %308

123:                                              ; preds = %116
  switch i32 %91, label %132 [
    i32 4, label %124
    i32 1, label %128
  ]

124:                                              ; preds = %123
  %125 = and i32 %117, 65535
  %126 = zext i32 %125 to i64
  %127 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %74, i64 %126) #13
  br label %308

128:                                              ; preds = %123
  %129 = and i32 %117, 65535
  %130 = zext i32 %129 to i64
  %131 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %74, i64 %130) #13
  br label %141

132:                                              ; preds = %123
  %133 = and i32 %117, 65535
  %134 = call i32 @_Z22FT_CharCodeFromUnicodeiw(i32 1634889070, i32 signext %133) #13
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = zext i32 %134 to i64
  %138 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %74, i64 %137) #13
  br label %141

139:                                              ; preds = %132
  %140 = call i32 @FT_Get_Name_Index(%struct.FT_FaceRec_* %74, i8* nonnull %93) #13
  br label %141

141:                                              ; preds = %136, %139, %128
  %142 = phi i32 [ %131, %128 ], [ %138, %136 ], [ %140, %139 ]
  switch i32 %142, label %308 [
    i32 65535, label %143
    i32 0, label %143
  ]

143:                                              ; preds = %141, %141
  %144 = icmp eq i32 %84, 0
  %145 = select i1 %144, i32 -1, i32 %84
  br label %308

146:                                              ; preds = %73
  %147 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  %148 = load i8, i8* %147, align 4
  %149 = icmp eq i8 %148, 3
  br i1 %149, label %150, label %153

150:                                              ; preds = %146
  switch i32 %66, label %152 [
    i32 92, label %153
    i32 165, label %151
  ]

151:                                              ; preds = %150
  br label %153

152:                                              ; preds = %150
  br label %153

153:                                              ; preds = %150, %152, %151, %146
  %154 = phi i32 [ 92, %151 ], [ %66, %146 ], [ 47, %150 ], [ %66, %152 ]
  %155 = icmp eq %struct.FT_FaceRec_* %74, null
  br i1 %155, label %308, label %156

156:                                              ; preds = %153
  %157 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %74, i32 1970170211) #13
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %198, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %74, i64 0, i32 9
  %161 = load i32, i32* %160, align 8
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %198

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %74, i64 0, i32 10
  br label %165

165:                                              ; preds = %163, %181
  %166 = phi i64 [ 0, %163 ], [ %182, %181 ]
  %167 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %164, align 8
  %168 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %167, i64 %166
  %169 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %168, align 8
  %170 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = call i32 @_Z22FT_CharCodeFromUnicodeiw(i32 %171, i32 signext %1) #13
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %181, label %174

174:                                              ; preds = %165
  %175 = and i64 %166, 4294967295
  %176 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %164, align 8
  %177 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %176, i64 %175
  %178 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %177, align 8
  %179 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* nonnull %74, %struct.FT_CharMapRec_* %178) #13
  %180 = load i32, i32* %160, align 8
  br label %186

181:                                              ; preds = %165
  %182 = add nuw nsw i64 %166, 1
  %183 = load i32, i32* %160, align 8
  %184 = sext i32 %183 to i64
  %185 = icmp slt i64 %182, %184
  br i1 %185, label %165, label %186

186:                                              ; preds = %181, %174
  %187 = phi i32 [ %180, %174 ], [ %183, %181 ]
  %188 = phi i64 [ %166, %174 ], [ %182, %181 ]
  %189 = phi i32 [ %172, %174 ], [ %154, %181 ]
  %190 = trunc i64 %188 to i32
  %191 = icmp eq i32 %187, %190
  %192 = icmp ne i32 %190, 0
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %198

194:                                              ; preds = %186
  %195 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %164, align 8
  %196 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %195, align 8
  %197 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* nonnull %74, %struct.FT_CharMapRec_* %196) #13
  br label %198

198:                                              ; preds = %159, %186, %194, %156
  %199 = phi i32 [ %154, %156 ], [ %1, %194 ], [ %189, %186 ], [ %154, %159 ]
  %200 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %74, i64 0, i32 23
  %201 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %200, align 8
  %202 = icmp eq %struct.FT_CharMapRec_* %201, null
  br i1 %202, label %308, label %203

203:                                              ; preds = %198
  %204 = call i32 @_ZN12CPDF_CIDFont13GetGlyphIndexEjPb(%class.CPDF_CIDFont* %0, i32 %199, i8* %2)
  %205 = icmp eq i32 %204, 0
  %206 = select i1 %205, i32 -1, i32 %204
  br label %308

207:                                              ; preds = %17, %9
  %208 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %209 = load %class.CFX_Face*, %class.CFX_Face** %208, align 8
  %210 = icmp eq %class.CFX_Face* %209, null
  br i1 %210, label %308, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %209, i64 0, i32 2, i32 0, i32 0, i32 0
  %213 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %212, align 8
  %214 = icmp eq %struct.FT_FaceRec_* %213, null
  br i1 %214, label %308, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %217 = load %class.CPDF_CMap*, %class.CPDF_CMap** %216, align 8
  %218 = icmp eq %class.CPDF_CMap* %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = tail call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %217, i32 %1) #13
  br label %223

221:                                              ; preds = %215
  %222 = trunc i32 %1 to i16
  br label %223

223:                                              ; preds = %219, %221
  %224 = phi i16 [ %220, %219 ], [ %222, %221 ]
  %225 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %226 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %225, align 8
  %227 = icmp eq %class.CPDF_StreamAcc* %226, null
  br i1 %227, label %228, label %290

228:                                              ; preds = %223
  %229 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 5
  %230 = load i8, i8* %229, align 8, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %228
  %233 = zext i16 %224 to i32
  br label %308

234:                                              ; preds = %228
  %235 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %10, align 8
  %236 = icmp eq %class.CPDF_StreamAcc* %235, null
  %237 = load %class.CPDF_CMap*, %class.CPDF_CMap** %216, align 8
  br i1 %236, label %246, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %237, i64 0, i32 8, i32 0, i32 0
  %240 = load i16*, i16** %239, align 8
  %241 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %237, i64 0, i32 8, i32 0, i32 1
  %242 = load i16*, i16** %241, align 8
  %243 = icmp eq i16* %240, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %238
  %245 = zext i16 %224 to i32
  br label %308

246:                                              ; preds = %234, %238
  %247 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %237, i64 0, i32 5
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %261, label %250

250:                                              ; preds = %246
  %251 = load %class.CFX_Face*, %class.CFX_Face** %208, align 8
  %252 = icmp eq %class.CFX_Face* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %251, i64 0, i32 2, i32 0, i32 0, i32 0
  %255 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %254, align 8
  br label %256

256:                                              ; preds = %250, %253
  %257 = phi %struct.FT_FaceRec_* [ %255, %253 ], [ null, %250 ]
  %258 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %257, i64 0, i32 23
  %259 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %258, align 8
  %260 = icmp eq %struct.FT_CharMapRec_* %259, null
  br i1 %260, label %261, label %263

261:                                              ; preds = %256, %246
  %262 = zext i16 %224 to i32
  br label %308

263:                                              ; preds = %256
  br i1 %252, label %267, label %264

264:                                              ; preds = %263
  %265 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %251, i64 0, i32 2, i32 0, i32 0, i32 0
  %266 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %265, align 8
  br label %267

267:                                              ; preds = %263, %264
  %268 = phi %struct.FT_FaceRec_* [ %266, %264 ], [ null, %263 ]
  %269 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %268, i64 0, i32 23
  %270 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %269, align 8
  %271 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %270, i64 0, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = icmp eq i32 %272, 1970170211
  br i1 %273, label %274, label %287

274:                                              ; preds = %267
  %275 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #13
  %276 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.204"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.204"*), %"class.fxcrt::StringDataTemplate.204"** %276, align 8
  call void @_ZNK12CPDF_CIDFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* nonnull sret %6, %class.CPDF_CIDFont* %0, i32 %1)
  %277 = load %"class.fxcrt::StringDataTemplate.204"*, %"class.fxcrt::StringDataTemplate.204"** %276, align 8
  %278 = icmp eq %"class.fxcrt::StringDataTemplate.204"* %277, null
  br i1 %278, label %283, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.204", %"class.fxcrt::StringDataTemplate.204"* %277, i64 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %279, %274
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #13
  br label %308

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.204", %"class.fxcrt::StringDataTemplate.204"* %277, i64 0, i32 3, i64 0
  %286 = load i32, i32* %285, align 4
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #13
  br label %287

287:                                              ; preds = %284, %267
  %288 = phi i32 [ %286, %284 ], [ %1, %267 ]
  %289 = call i32 @_ZN12CPDF_CIDFont13GetGlyphIndexEjPb(%class.CPDF_CIDFont* %0, i32 %288, i8* %2)
  br label %308

290:                                              ; preds = %223
  %291 = zext i16 %224 to i32
  %292 = shl nuw nsw i32 %291, 1
  %293 = add nuw nsw i32 %292, 2
  %294 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* nonnull %226) #13
  %295 = icmp ugt i32 %293, %294
  br i1 %295, label %308, label %296

296:                                              ; preds = %290
  %297 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %225, align 8
  %298 = tail call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %297) #13
  %299 = zext i32 %292 to i64
  %300 = getelementptr inbounds i8, i8* %298, i64 %299
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = shl nuw nsw i32 %302, 8
  %304 = getelementptr inbounds i8, i8* %300, i64 1
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = or i32 %303, %306
  br label %308

308:                                              ; preds = %207, %283, %232, %244, %261, %287, %290, %296, %211, %34, %203, %198, %153, %113, %141, %143, %124, %120, %80
  %309 = phi i32 [ %35, %34 ], [ %82, %80 ], [ %115, %113 ], [ %127, %124 ], [ %145, %143 ], [ %122, %120 ], [ %142, %141 ], [ %154, %153 ], [ %206, %203 ], [ %199, %198 ], [ -1, %211 ], [ %233, %232 ], [ %245, %244 ], [ %262, %261 ], [ %289, %287 ], [ %307, %296 ], [ -1, %290 ], [ -1, %283 ], [ -1, %207 ]
  ret i32 %309
}

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #1

declare i32 @FT_Get_Glyph(%struct.FT_GlyphSlotRec_*, %struct.FT_GlyphRec_**) local_unnamed_addr #1

declare void @FT_Glyph_Get_CBox(%struct.FT_GlyphRec_*, i32, %struct.FT_BBox_*) local_unnamed_addr #1

declare void @FT_Done_Glyph(%struct.FT_GlyphRec_*) local_unnamed_addr #1

declare i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32, %struct.FT_FaceRec_*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK12CPDF_CIDFont15GetCIDTransformEt(%class.CPDF_CIDFont* nocapture readonly, i16 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 3
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %7, align 8
  %9 = icmp eq %class.CPDF_StreamAcc* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %6, %10
  %11 = phi i64 [ %22, %10 ], [ 154, %6 ]
  %12 = phi %"struct.(anonymous namespace)::CIDTransform"* [ %21, %10 ], [ getelementptr inbounds ([154 x %"struct.(anonymous namespace)::CIDTransform"], [154 x %"struct.(anonymous namespace)::CIDTransform"]* @_ZN12_GLOBAL__N_117g_Japan1_VertCIDsE, i64 0, i64 0), %6 ]
  %13 = lshr i64 %11, 1
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %12, i64 %13
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %14, i64 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp ult i16 %16, %1
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %14, i64 1
  %19 = xor i64 %13, -1
  %20 = add i64 %11, %19
  %21 = select i1 %17, %"struct.(anonymous namespace)::CIDTransform"* %18, %"struct.(anonymous namespace)::CIDTransform"* %12
  %22 = select i1 %17, i64 %20, i64 %13
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp ult %"struct.(anonymous namespace)::CIDTransform"* %21, getelementptr inbounds ([154 x %"struct.(anonymous namespace)::CIDTransform"], [154 x %"struct.(anonymous namespace)::CIDTransform"]* @_ZN12_GLOBAL__N_117g_Japan1_VertCIDsE, i64 1, i64 0)
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %21, i64 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, %1
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::CIDTransform", %"struct.(anonymous namespace)::CIDTransform"* %21, i64 0, i32 1
  %31 = select i1 %29, i8* %30, i8* null
  ret i8* %31

32:                                               ; preds = %6, %24, %2
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN12CPDF_CIDFont19CIDTransformToFloatEh(i8 zeroext) local_unnamed_addr #5 align 2 {
  %2 = zext i8 %0 to i32
  %3 = icmp sgt i8 %0, -1
  %4 = add nsw i32 %2, -255
  %5 = select i1 %3, i32 %2, i32 %4
  %6 = sitofp i32 %5 to float
  %7 = fmul float %6, 0x3F80204080000000
  ret float %7
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_CIDFont13GetCharWidthFEj(%class.CPDF_CIDFont* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = icmp ult i32 %1, 128
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 7
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = add nsw i32 %1, -32
  %10 = icmp ult i32 %9, 95
  %11 = select i1 %10, i32 500, i32 0
  br label %53

12:                                               ; preds = %4, %2
  %13 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_CMap*, %class.CPDF_CMap** %13, align 8
  %15 = icmp eq %class.CPDF_CMap* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nonnull %14, i32 %1) #13
  br label %20

18:                                               ; preds = %12
  %19 = trunc i32 %1 to i16
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i16 [ %17, %16 ], [ %19, %18 ]
  %22 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13
  %23 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 13, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.193"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 2
  %30 = inttoptr i64 %27 to i32*
  %31 = icmp eq i64 %28, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %20
  %33 = zext i16 %21 to i32
  br label %34

34:                                               ; preds = %32, %43
  %35 = phi i64 [ 0, %32 ], [ %44, %43 ]
  %36 = getelementptr inbounds i32, i32* %30, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %33
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, %33
  br i1 %42, label %43, label %46

43:                                               ; preds = %39, %34
  %44 = add i64 %35, 3
  %45 = icmp ult i64 %44, %29
  br i1 %45, label %34, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds i32, i32* %36, i64 2
  %48 = load i32, i32* %47, align 4
  br label %53

49:                                               ; preds = %43, %20
  %50 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 10
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  br label %53

53:                                               ; preds = %46, %49, %8
  %54 = phi i32 [ %11, %8 ], [ %52, %49 ], [ %48, %46 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i16 @_ZNK12CPDF_CIDFont12GetVertWidthEt(%class.CPDF_CIDFont* nocapture readonly, i16 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 14
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 14, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.193"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = udiv i64 %10, 5
  %12 = icmp ugt i64 %10, 4
  %13 = inttoptr i64 %8 to i32*
  br i1 %12, label %14, label %33

14:                                               ; preds = %2
  %15 = zext i16 %1 to i32
  br label %16

16:                                               ; preds = %14, %26
  %17 = phi i64 [ 0, %14 ], [ %27, %26 ]
  %18 = mul nuw i64 %17, 5
  %19 = getelementptr inbounds i32, i32* %13, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, %15
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds i32, i32* %19, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %15
  br i1 %25, label %26, label %29

26:                                               ; preds = %22, %16
  %27 = add nuw nsw i64 %17, 1
  %28 = icmp ult i64 %27, %11
  br i1 %28, label %16, label %33

29:                                               ; preds = %22
  %30 = getelementptr inbounds i32, i32* %19, i64 2
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  br label %36

33:                                               ; preds = %26, %2
  %34 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 12
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i16 [ %35, %33 ], [ %32, %29 ]
  ret i16 %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK12CPDF_CIDFont13GetVertOriginEt(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_CIDFont* nocapture readonly, i16 zeroext) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 14
  %5 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 14, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.193"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = udiv i64 %11, 5
  %13 = icmp ugt i64 %11, 4
  %14 = inttoptr i64 %9 to i32*
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = zext i16 %2 to i32
  br label %17

17:                                               ; preds = %15, %27
  %18 = phi i64 [ 0, %15 ], [ %28, %27 ]
  %19 = mul nuw i64 %18, 5
  %20 = getelementptr inbounds i32, i32* %14, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %16
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds i32, i32* %20, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, %16
  br i1 %26, label %27, label %30

27:                                               ; preds = %23, %17
  %28 = add nuw nsw i64 %18, 1
  %29 = icmp ult i64 %28, %12
  br i1 %29, label %17, label %36

30:                                               ; preds = %23
  %31 = getelementptr inbounds i32, i32* %20, i64 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i32, i32* %20, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = trunc i32 %34 to i16
  br label %72

36:                                               ; preds = %27, %3
  %37 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 10
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i32
  %40 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 13
  %41 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 13, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.193"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 2
  %48 = inttoptr i64 %45 to i32*
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %36
  %51 = zext i16 %2 to i32
  br label %52

52:                                               ; preds = %50, %64
  %53 = phi i64 [ 0, %50 ], [ %65, %64 ]
  %54 = getelementptr inbounds i32, i32* %48, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, %51
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds i32, i32* %54, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, %51
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds i32, i32* %54, i64 2
  %63 = load i32, i32* %62, align 4
  br label %67

64:                                               ; preds = %57, %52
  %65 = add i64 %53, 3
  %66 = icmp ult i64 %65, %47
  br i1 %66, label %52, label %67

67:                                               ; preds = %64, %36, %61
  %68 = phi i32 [ %63, %61 ], [ %39, %36 ], [ %39, %64 ]
  %69 = sdiv i32 %68, 2
  %70 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %1, i64 0, i32 11
  %71 = load i16, i16* %70, align 8
  br label %72

72:                                               ; preds = %30, %67
  %73 = phi i32 [ %32, %30 ], [ %69, %67 ]
  %74 = phi i16 [ %35, %30 ], [ %71, %67 ]
  %75 = trunc i32 %73 to i16
  %76 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store i16 %75, i16* %76, align 2
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store i16 %74, i16* %77, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_CIDFont13GetGlyphIndexEjPb(%class.CPDF_CIDFont* nocapture, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = icmp eq i8* %2, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i8 0, i8* %2, align 1
  br label %7

7:                                                ; preds = %3, %6
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %10 = icmp eq %class.CFX_Face* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %struct.FT_FaceRec_* [ %13, %11 ], [ null, %7 ]
  %16 = zext i32 %1 to i64
  %17 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %15, i64 %16) #13
  %18 = icmp eq i32 %1, 9474
  %19 = icmp eq i32 %17, 0
  %20 = or i1 %18, %19
  br i1 %20, label %82, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_CMap*, %class.CPDF_CMap** %22, align 8
  %24 = icmp eq %class.CPDF_CMap* %23, null
  br i1 %24, label %82, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %23, i64 0, i32 2
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %82, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.CFX_CTTGSUBTable*, %class.CFX_CTTGSUBTable** %31, align 8
  %33 = icmp eq %class.CFX_CTTGSUBTable* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = tail call i32 @_ZNK16CFX_CTTGSUBTable16GetVerticalGlyphEj(%class.CFX_CTTGSUBTable* nonnull %32, i32 %17) #13
  %36 = icmp eq i32 %35, 0
  %37 = or i1 %5, %36
  %38 = select i1 %36, i32 %17, i32 %35
  br i1 %37, label %82, label %39

39:                                               ; preds = %34
  store i8 1, i8* %2, align 1
  br label %82

40:                                               ; preds = %29
  %41 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  store i64 0, i64* %4, align 8
  %46 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* %15, i64 1196643650, i64 0, i8* null, i64* nonnull %4) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = load i64, i64* %4, align 8
  %50 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %49, i64 1) #13
  %51 = load i8*, i8** %41, align 8
  store i8* %50, i8** %41, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  call void @_Z7FX_FreePv(i8* nonnull %51) #13
  br label %54

54:                                               ; preds = %53, %48, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %55 = load i8*, i8** %41, align 8
  br label %56

56:                                               ; preds = %40, %54
  %57 = phi i8* [ %42, %40 ], [ %55, %54 ]
  %58 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* %15, i64 1196643650, i64 0, i8* %57, i64* null) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %82

60:                                               ; preds = %56
  %61 = load i8*, i8** %41, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %82, label %63

63:                                               ; preds = %60
  %64 = call i8* @_Znwm(i64 96) #14
  %65 = bitcast i8* %64 to %class.CFX_CTTGSUBTable*
  call void @_ZN16CFX_CTTGSUBTableC1EPKh(%class.CFX_CTTGSUBTable* nonnull %65, i8* nonnull %61) #13
  %66 = ptrtoint i8* %64 to i64
  %67 = load %class.CFX_CTTGSUBTable*, %class.CFX_CTTGSUBTable** %31, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.141"* %30 to i64*
  store i64 %66, i64* %68, align 8
  %69 = icmp eq %class.CFX_CTTGSUBTable* %67, null
  %70 = bitcast i8* %64 to %class.CFX_CTTGSUBTable*
  br i1 %69, label %75, label %71

71:                                               ; preds = %63
  call void @_ZN16CFX_CTTGSUBTableD1Ev(%class.CFX_CTTGSUBTable* nonnull %67) #13
  %72 = bitcast %class.CFX_CTTGSUBTable* %67 to i8*
  call void @_ZdlPv(i8* %72) #14
  %73 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %class.CFX_CTTGSUBTable*, %class.CFX_CTTGSUBTable** %73, align 8
  br label %75

75:                                               ; preds = %71, %63
  %76 = phi %class.CFX_CTTGSUBTable* [ %74, %71 ], [ %70, %63 ]
  %77 = call i32 @_ZNK16CFX_CTTGSUBTable16GetVerticalGlyphEj(%class.CFX_CTTGSUBTable* %76, i32 %17) #13
  %78 = icmp eq i32 %77, 0
  %79 = or i1 %5, %78
  %80 = select i1 %78, i32 %17, i32 %77
  br i1 %79, label %82, label %81

81:                                               ; preds = %75
  store i8 1, i8* %2, align 1
  br label %82

82:                                               ; preds = %25, %75, %34, %21, %81, %39, %60, %56, %14
  %83 = phi i32 [ %17, %14 ], [ %17, %25 ], [ %17, %60 ], [ %17, %56 ], [ %38, %34 ], [ %35, %39 ], [ %80, %75 ], [ %77, %81 ], [ %17, %21 ]
  ret i32 %83
}

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_CIDFont16GetVerticalGlyphEiPb(%class.CPDF_CIDFont* nocapture readonly, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %class.CFX_CTTGSUBTable*, %class.CFX_CTTGSUBTable** %4, align 8
  %6 = tail call i32 @_ZNK16CFX_CTTGSUBTable16GetVerticalGlyphEj(%class.CFX_CTTGSUBTable* %5, i32 %1) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = icmp eq i8* %2, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  store i8 1, i8* %2, align 1
  br label %11

11:                                               ; preds = %10, %8, %3
  %12 = phi i32 [ %1, %3 ], [ %6, %8 ], [ %6, %10 ]
  ret i32 %12
}

declare i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_*, i64, i64, i8*, i64*) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

declare i32 @_ZNK16CFX_CTTGSUBTable16GetVerticalGlyphEj(%class.CFX_CTTGSUBTable*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #1

declare i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32, %"class.std::__1::vector.256"* dereferenceable(24), i32) local_unnamed_addr #1

declare signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8*) local_unnamed_addr #1

declare i32 @_Z22FT_CharCodeFromUnicodeiw(i32, i32 signext) local_unnamed_addr #1

declare i32 @FT_Get_Name_Index(%struct.FT_FaceRec_*, i8*) local_unnamed_addr #1

declare i32 @FT_Set_Charmap(%struct.FT_FaceRec_*, %struct.FT_CharMapRec_*) local_unnamed_addr #1

declare i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12CPDF_CIDFont11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_CIDFont* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i64*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_CMap*, %class.CPDF_CMap** %5, align 8
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = call i32 @_ZNK9CPDF_CMap11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_CMap* %6, %"class.fxcrt::StringViewTemplate"* nonnull %4, i64* %2) #13
  ret i32 %9
}

declare i32 @_ZNK9CPDF_CMap11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_CMap*, %"class.fxcrt::StringViewTemplate"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12CPDF_CIDFont11GetCharSizeEj(%class.CPDF_CIDFont* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_CMap*, %class.CPDF_CMap** %3, align 8
  %5 = tail call i32 @_ZNK9CPDF_CMap11GetCharSizeEj(%class.CPDF_CMap* %4, i32 %1) #13
  ret i32 %5
}

declare i32 @_ZNK9CPDF_CMap11GetCharSizeEj(%class.CPDF_CMap*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK12CPDF_CIDFont9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CIDFont* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_CMap*, %class.CPDF_CMap** %4, align 8
  %6 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = call i64 @_ZNK9CPDF_CMap9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMap* %5, %"class.fxcrt::StringViewTemplate"* nonnull %3) #13
  ret i64 %8
}

declare i64 @_ZNK9CPDF_CMap9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMap*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12CPDF_CIDFont10AppendCharEPcj(%class.CPDF_CIDFont* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_CMap*, %class.CPDF_CMap** %4, align 8
  %6 = tail call i32 @_ZNK9CPDF_CMap10AppendCharEPcj(%class.CPDF_CMap* %5, i8* %1, i32 %2) #13
  ret i32 %6
}

declare i32 @_ZNK9CPDF_CMap10AppendCharEPcj(%class.CPDF_CMap*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12CPDF_CIDFont19IsUnicodeCompatibleEv(%class.CPDF_CIDFont* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 2, i32 0
  %3 = load %class.CPDF_CID2UnicodeMap*, %class.CPDF_CID2UnicodeMap** %2, align 8
  %4 = icmp eq %class.CPDF_CID2UnicodeMap* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK19CPDF_CID2UnicodeMap8IsLoadedEv(%class.CPDF_CID2UnicodeMap* nonnull %3) #13
  br i1 %6, label %7, label %13

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_CMap*, %class.CPDF_CMap** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %9, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %7, %1, %5
  %14 = getelementptr inbounds %class.CPDF_CIDFont, %class.CPDF_CIDFont* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_CMap*, %class.CPDF_CMap** %14, align 8
  %16 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %7, %13
  %20 = phi i1 [ %18, %13 ], [ true, %7 ]
  ret i1 %20
}

declare void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font11IsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font14IsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font11IsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZNK9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZN9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZNK9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZN9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZNK9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZN9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare void @_ZN9CPDF_Font15WillBeDestroyedEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font13HasFontWidthsEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i16 @_Z15CIDFromCharCodePK11FXCMAP_CMapj(%struct.FXCMAP_CMap*, i32) local_unnamed_addr #1

declare i32 @_Z15CharCodeFromCIDPK11FXCMAP_CMapt(%struct.FXCMAP_CMap*, i16 zeroext) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #12

; Function Attrs: nounwind
declare void @_ZN16CFX_CTTGSUBTableD1Ev(%class.CFX_CTTGSUBTable*) unnamed_addr #3

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #1

declare void @_ZN9CPDF_CMapC1EN6pdfium4spanIKhEE(%class.CPDF_CMap*, %"class.pdfium::span.248"*) unnamed_addr #1

declare void @_ZN16CFX_CTTGSUBTableC1EPKh(%class.CFX_CTTGSUBTable*, i8*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI9CPDF_CMapJRNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI9CPDF_CMapJRNS_4spanIKhEEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!16 = !{!"branch_weights", i32 2000, i32 1}
