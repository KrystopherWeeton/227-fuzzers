; ModuleID = '../../components/viz/common/quads/render_pass_internal.cc'
source_filename = "../../components/viz/common/quads/render_pass_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.10", i8, i8, i8, i8, %"class.std::__1::vector.15", %"class.viz::QuadList", %"class.cc::ListContainer.26" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.5" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.39, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.41", %"class.absl::optional.27", %"class.absl::optional.27" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr.39 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.40" }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.26" = type { %"class.cc::ListContainerHelper" }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.cc::ListContainerHelper::Iterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"class.cc::ListContainer<viz::SharedQuadState>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.27", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.32", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { i64 }
%"class.cc::ListContainer<viz::DrawQuad>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>

$_ZN2cc13ListContainerIN3viz15SharedQuadStateEED2Ev = comdat any

$_ZN2cc13ListContainerIN3viz8DrawQuadEED2Ev = comdat any

@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3viz18RenderPassInternalC1Ev = hidden unnamed_addr alias void (%"class.viz::RenderPassInternal"*), void (%"class.viz::RenderPassInternal"*)* @_ZN3viz18RenderPassInternalC2Ev
@_ZN3viz18RenderPassInternalC1Em = hidden unnamed_addr alias void (%"class.viz::RenderPassInternal"*, i64), void (%"class.viz::RenderPassInternal"*, i64)* @_ZN3viz18RenderPassInternalC2Em
@_ZN3viz18RenderPassInternalC1Emm = hidden unnamed_addr alias void (%"class.viz::RenderPassInternal"*, i64, i64), void (%"class.viz::RenderPassInternal"*, i64, i64)* @_ZN3viz18RenderPassInternalC2Emm
@_ZN3viz18RenderPassInternalD1Ev = hidden unnamed_addr alias void (%"class.viz::RenderPassInternal"*), void (%"class.viz::RenderPassInternal"*)* @_ZN3viz18RenderPassInternalD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz18RenderPassInternalC2Ev(%"class.viz::RenderPassInternal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Transform"* %2 to i8*
  %4 = bitcast %"class.viz::RenderPassInternal"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 32, i1 false) #5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #5
  %5 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 3
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %6) #5
  %7 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 4
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %7) #5
  %8 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon.14* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 52, i1 false) #5
  %11 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 6
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 7
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 8
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 9
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 10
  %16 = bitcast %"class.std::__1::vector.15"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #5
  %17 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 11
  tail call void @_ZN3viz8QuadListC1Em(%"class.viz::QuadList"* %17, i64 128) #5
  %18 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN2cc19ListContainerHelperC1Emmm(%"class.cc::ListContainerHelper"* %18, i64 8, i64 216, i64 32) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz18RenderPassInternalC2Emm(%"class.viz::RenderPassInternal"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2
  %5 = bitcast %"class.gfx::Transform"* %4 to i8*
  %6 = bitcast %"class.viz::RenderPassInternal"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 32, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #5
  %7 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2, i32 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 3
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %8) #5
  %9 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 4
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %9) #5
  %10 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.14* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 52, i1 false) #5
  %13 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 6
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 7
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 8
  store i8 0, i8* %15, align 2
  %16 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 9
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 10
  %18 = bitcast %"class.std::__1::vector.15"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #5
  %19 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 11
  tail call void @_ZN3viz8QuadListC1Em(%"class.viz::QuadList"* %19, i64 %2) #5
  %20 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN2cc19ListContainerHelperC1Emmm(%"class.cc::ListContainerHelper"* %20, i64 8, i64 216, i64 %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz18RenderPassInternalC2Em(%"class.viz::RenderPassInternal"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2
  %4 = bitcast %"class.gfx::Transform"* %3 to i8*
  %5 = bitcast %"class.viz::RenderPassInternal"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 32, i1 false) #5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #5
  %6 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 2, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 3
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %7) #5
  %8 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 4
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %8) #5
  %9 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.14* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 52, i1 false) #5
  %12 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 6
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 8
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 9
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 10
  %17 = bitcast %"class.std::__1::vector.15"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #5
  %18 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 11
  tail call void @_ZN3viz8QuadListC1Em(%"class.viz::QuadList"* %18, i64 128) #5
  %19 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN2cc19ListContainerHelperC1Emmm(%"class.cc::ListContainerHelper"* %19, i64 8, i64 216, i64 %1) #5
  ret void
}

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #1

declare void @_ZN3viz8QuadListC1Em(%"class.viz::QuadList"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz18RenderPassInternalD2Ev(%"class.viz::RenderPassInternal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12
  tail call void @_ZN2cc13ListContainerIN3viz15SharedQuadStateEED2Ev(%"class.cc::ListContainer.26"* %2) #5
  %3 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN2cc13ListContainerIN3viz8DrawQuadEED2Ev(%"class.cc::ListContainer"* %3) #5
  %4 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %10 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 10, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %6
  br i1 %12, label %26, label %13

13:                                               ; preds = %8, %21
  %14 = phi %"class.std::__1::unique_ptr"* [ %15, %21 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %16, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %16, align 8
  %18 = icmp eq %"class.viz::CopyOutputRequest"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %17) #5
  %20 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %17, i64 0, i32 0
  tail call void @_ZdlPv(i8* %20) #6
  br label %21

21:                                               ; preds = %19, %13
  %22 = icmp eq %"class.std::__1::unique_ptr"* %15, %6
  br i1 %22, label %23, label %13

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.15"* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %8
  %27 = phi i8* [ %25, %23 ], [ %9, %8 ]
  store %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"** %10, align 8
  tail call void @_ZdlPv(i8* %27) #6
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 4
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %29) #5
  %30 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 3
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %30) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ListContainerIN3viz15SharedQuadStateEED2Ev(%"class.cc::ListContainer.26"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %5 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %6 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %7 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.cc::ListContainerHelper::Iterator"* %4 to i8*
  %10 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5, !noalias !2
  %11 = getelementptr inbounds %"class.cc::ListContainer.26", %"class.cc::ListContainer.26"* %0, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %11) #5, !noalias !2
  %12 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %13) #5
  %14 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !2
  store i64 %15, i64* %8, align 8, !alias.scope !2
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5, !noalias !2
  %16 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %17 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #5, !noalias !5
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %11) #5, !noalias !5
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %19) #5
  %20 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %6, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !5
  store i64 %22, i64* %20, align 8, !alias.scope !5
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #5, !noalias !5
  %23 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %18) #5
  %24 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  br i1 %23, label %25, label %29

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast i8** %26 to %"class.viz::SharedQuadState"**
  %28 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %2 to i8*
  br label %31

29:                                               ; preds = %31, %1
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %5, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %30) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  call void @_ZN2cc19ListContainerHelperD1Ev(%"class.cc::ListContainerHelper"* %11) #5
  ret void

31:                                               ; preds = %25, %31
  %32 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %27, align 8
  call void @_ZN3viz15SharedQuadStateD1Ev(%"class.viz::SharedQuadState"* %32) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %2, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  %33 = load i64, i64* %8, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #5, !noalias !5
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %11) #5, !noalias !5
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %19) #5
  %35 = load i64, i64* %21, align 8, !noalias !5
  store i64 %35, i64* %20, align 8, !alias.scope !5
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #5, !noalias !5
  %36 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %18) #5
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  br i1 %36, label %31, label %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ListContainerIN3viz8DrawQuadEED2Ev(%"class.cc::ListContainer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %5 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %6 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %7 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.cc::ListContainerHelper::Iterator"* %4 to i8*
  %10 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5, !noalias !8
  %11 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %0, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %11) #5, !noalias !8
  %12 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %13) #5
  %14 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !8
  store i64 %15, i64* %8, align 8, !alias.scope !8
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5, !noalias !8
  %16 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %17 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #5, !noalias !11
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %11) #5, !noalias !11
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %19) #5
  %20 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !11
  store i64 %22, i64* %20, align 8, !alias.scope !11
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #5, !noalias !11
  %23 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %18) #5
  %24 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  br i1 %23, label %25, label %29

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast i8** %26 to %"class.viz::DrawQuad"**
  %28 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %2 to i8*
  br label %31

29:                                               ; preds = %31, %1
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %30) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  call void @_ZN2cc19ListContainerHelperD1Ev(%"class.cc::ListContainerHelper"* %11) #5
  ret void

31:                                               ; preds = %25, %31
  %32 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %27, align 8
  %33 = bitcast %"class.viz::DrawQuad"* %32 to void (%"class.viz::DrawQuad"*)***
  %34 = load void (%"class.viz::DrawQuad"*)**, void (%"class.viz::DrawQuad"*)*** %33, align 8
  %35 = load void (%"class.viz::DrawQuad"*)*, void (%"class.viz::DrawQuad"*)** %34, align 8
  call void %35(%"class.viz::DrawQuad"* %32) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %2, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  %36 = load i64, i64* %8, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #5, !noalias !11
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %11) #5, !noalias !11
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %19) #5
  %38 = load i64, i64* %21, align 8, !noalias !11
  store i64 %38, i64* %20, align 8, !alias.scope !11
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #5, !noalias !11
  %39 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %18) #5
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  br i1 %39, label %31, label %29
}

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12, i32 0
  %3 = tail call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %2, i64 8, i64 216) #5
  %4 = bitcast i8* %3 to %"class.viz::SharedQuadState"*
  tail call void @_ZN3viz15SharedQuadStateC1Ev(%"class.viz::SharedQuadState"* %4) #5
  ret %"class.viz::SharedQuadState"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz18RenderPassInternal33ReplaceExistingQuadWithSolidColorEN2cc13ListContainerINS_8DrawQuadEE8IteratorEj11SkBlendMode(%"class.viz::RenderPassInternal"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %7 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast i8** %7 to %"class.viz::DrawQuad"**
  %9 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %9, i64 0, i32 6
  %11 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %10, align 8
  %12 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %11, i64 0, i32 5
  %13 = load i8, i8* %12, align 4, !range !14
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %11, i64 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %3
  br i1 %18, label %27, label %19

19:                                               ; preds = %15, %4
  %20 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %0, i64 0, i32 12, i32 0
  %21 = tail call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %20, i64 8, i64 216) #5
  %22 = bitcast i8* %21 to %"class.viz::SharedQuadState"*
  tail call void @_ZN3viz15SharedQuadStateC1ERKS0_(%"class.viz::SharedQuadState"* %22, %"class.viz::SharedQuadState"* dereferenceable(216) %11) #5
  %23 = getelementptr inbounds i8, i8* %21, i64 172
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds i8, i8* %21, i64 180
  %25 = bitcast i8* %24 to i32*
  store i32 %3, i32* %25, align 4
  %26 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %8, align 8
  br label %27

27:                                               ; preds = %15, %19
  %28 = phi %"class.viz::DrawQuad"* [ %26, %19 ], [ %9, %15 ]
  %29 = phi %"class.viz::SharedQuadState"* [ %22, %19 ], [ %11, %15 ]
  %30 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %28, i64 0, i32 2
  %32 = bitcast %"class.gfx::Rect"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %32, i64 16, i1 false)
  %33 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %33, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %34) #5
  %35 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast i8** %38 to %"class.viz::DrawQuad"**
  %40 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %39, align 8
  %41 = bitcast %"class.viz::DrawQuad"* %40 to void (%"class.viz::DrawQuad"*)***
  %42 = load void (%"class.viz::DrawQuad"*)**, void (%"class.viz::DrawQuad"*)*** %41, align 8
  %43 = load void (%"class.viz::DrawQuad"*)*, void (%"class.viz::DrawQuad"*)** %42, align 8
  call void %43(%"class.viz::DrawQuad"* %40) #5
  %44 = bitcast i8** %38 to %"class.viz::SolidColorDrawQuad"**
  %45 = load %"class.viz::SolidColorDrawQuad"*, %"class.viz::SolidColorDrawQuad"** %44, align 8
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %45) #5
  call void @_ZN3viz18SolidColorDrawQuad6SetAllEPKNS_15SharedQuadStateERKN3gfx4RectES7_bjb(%"class.viz::SolidColorDrawQuad"* %45, %"class.viz::SharedQuadState"* %29, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, i1 zeroext false, i32 %2, i1 zeroext true) #5
  %46 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %46) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3viz18SolidColorDrawQuad6SetAllEPKNS_15SharedQuadStateERKN3gfx4RectES7_bjb(%"class.viz::SolidColorDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelperD1Ev(%"class.cc::ListContainerHelper"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #1

declare void @_ZN2cc19ListContainerHelperC1Emmm(%"class.cc::ListContainerHelper"*, i64, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3viz15SharedQuadStateD1Ev(%"class.viz::SharedQuadState"*) unnamed_addr #2

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #1

declare void @_ZN3viz15SharedQuadStateC1Ev(%"class.viz::SharedQuadState"*) unnamed_addr #1

declare void @_ZN3viz15SharedQuadStateC1ERKS0_(%"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"* dereferenceable(216)) unnamed_addr #1

declare void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!13 = distinct !{!13, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!14 = !{i8 0, i8 2}
