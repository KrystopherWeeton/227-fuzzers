; ModuleID = '../../third_party/skia/modules/skottie/src/effects/DisplacementMapEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/DisplacementMapEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.sk_sp.125 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.132 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.84", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.90", %"class.std::__1::vector.97", %"class.std::__1::vector.104", %"class.std::__1::unique_ptr.111", i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.83 }
%class.sk_sp.83 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.92" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.99" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.106" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" = type { float, float, float, float, float, float, float }
%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.58, i32, [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.62, [384 x i64], %class.sk_sp.63, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.64", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.70" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.62 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.63 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.76, %class.sk_sp.58, %class.sk_sp.58, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.76 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.58 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkPaint = type <{ %class.sk_sp.139, %class.sk_sp.58, %class.sk_sp.140, %class.sk_sp.76, %class.sk_sp.141, %struct.SkRGBA4f, float, float, %union.anon.142, [4 x i8] }>
%class.sk_sp.139 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.140 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.141 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.142 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %class.sk_sp.32*, %class.sk_sp.32*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.sk_sp.32* }
%class.sk_sp.61 = type { %"class.sksg::Node"* }
%"class.sksg::CustomRenderNode" = type { %"class.sksg::RenderNode.base", %"class.std::__1::vector.51" }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::DisplacementNode" = type { %"class.sksg::CustomRenderNode", %class.sk_sp.32, %struct.SkSize, %struct.SkSize, %class.sk_sp.58, %struct.SkV2, i32, i32, i32, i32 }
%struct.SkV2 = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.82, %class.SkString }
%class.sk_sp.82 = type { %class.SkRuntimeEffect* }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" }
%class.sk_sp.77 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.78", [7 x i8] }>
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl.80" }
%"struct.std::__1::__cxx_atomic_impl.80" = type { %"struct.std::__1::__cxx_atomic_base_impl.81" }
%"struct.std::__1::__cxx_atomic_base_impl.81" = type { i8 }
%class.SkRuntimeShaderBuilder = type { %class.SkRuntimeEffectBuilder }
%class.SkRuntimeEffectBuilder = type { %class.sk_sp.82, %class.sk_sp.117, %"class.std::__1::vector.118" }
%class.sk_sp.117 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %class.sk_sp.58*, %class.sk_sp.58*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.sk_sp.58* }
%class.SkBBHFactory = type { i32 (...)** }
%struct.SkPoint = type { float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.50 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.50 = type { %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* }
%"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", float, float, float, float, float, float }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE19writableUniformDataEv = comdat any

$_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_ = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"k\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_116DisplacementNodeE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*)* @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNodeD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*)* @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %struct.SkPoint*)* @_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onNodeAtERK7SkPoint to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"child\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"displ\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"selector_matrix\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"selector_offset\00", align 1
@__const._ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_.recorder = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.125 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.126" { %"class.std::__1::__compressed_pair.127" { %"struct.std::__1::__compressed_pair_elem.128" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.132 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.133" { %"class.std::__1::__compressed_pair.134" { %"struct.std::__1::__compressed_pair_elem.135" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect = internal unnamed_addr global %class.SkRuntimeEffect* null, align 8
@_ZGVZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect = internal global i64 0, align 8
@_ZN7skottie8internal12_GLOBAL__N_117gDisplacementSkSLE = internal constant [308 x i8] c"\0A    uniform shader child;\0A    uniform shader displ;\0A\0A    uniform half4x4 selector_matrix;\0A    uniform half4   selector_offset;\0A\0A    half4 main(float2 xy) {\0A        half4 d = sample(displ, xy);\0A\0A        d = selector_matrix*unpremul(d) + selector_offset;\0A\0A        return sample(child, xy + d.xy*d.zw);\0A    }\0A\00", align 16
@_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs = internal unnamed_addr constant [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"] [%"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01, float 0.000000e+00, float 1.000000e+00 }, %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs" { float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }], align 16
@__const._ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.local_ctx = private unnamed_addr constant %"class.sksg::RenderNode::ScopedRenderContext" <{ %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.76 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.58 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.58 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.58 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.shader_paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.139 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.58 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.140 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.76 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.141 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.142 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder27attachDisplacementMapEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.6, align 8
  %6 = alloca %"class.std::__1::vector.51", align 8
  %7 = alloca %class.sk_sp.61, align 8
  %8 = alloca i32, align 4
  %9 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #15, !noalias !2
  %10 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %9, i64 0, i32 0, i64 0
  %11 = load i8, i8* %10, align 8, !noalias !2
  %12 = and i8 %11, 7
  %13 = icmp eq i8 %12, 7
  br i1 %13, label %14, label %43

14:                                               ; preds = %4
  %15 = bitcast %"class.skjson::Value"* %9 to %"class.skjson::ObjectValue"*
  %16 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #15, !noalias !2
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15, !noalias !2
  store i32 -1431655766, i32* %8, align 4, !noalias !2
  %18 = call zeroext i1 @_ZN7skottie5ParseIiEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %16, i32* nonnull %8) #15, !noalias !2
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = load i32, i32* %8, align 4, !noalias !2
  br label %22

21:                                               ; preds = %14
  store i32 -1, i32* %8, align 4, !noalias !2
  br label %22

22:                                               ; preds = %21, %19
  %23 = phi i32 [ %20, %19 ], [ -1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #15, !noalias !2
  %24 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 1
  %25 = load %"class.skottie::internal::CompositionBuilder"*, %"class.skottie::internal::CompositionBuilder"** %24, align 8, !noalias !2
  %26 = call %"class.skottie::internal::LayerBuilder"* @_ZN7skottie8internal18CompositionBuilder12layerBuilderEi(%"class.skottie::internal::CompositionBuilder"* %25, i32 %23) #15, !noalias !2
  %27 = icmp eq %"class.skottie::internal::LayerBuilder"* %26, null
  br i1 %27, label %43, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.skottie::internal::LayerBuilder", %"class.skottie::internal::LayerBuilder"* %26, i64 0, i32 9, i32 0
  %30 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %29, align 8, !noalias !5
  %31 = icmp eq %"class.sksg::RenderNode"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic, !noalias !5
  br label %35

35:                                               ; preds = %32, %28
  %36 = ptrtoint %"class.sksg::RenderNode"* %30 to i64
  %37 = getelementptr inbounds %"class.skottie::internal::LayerBuilder", %"class.skottie::internal::LayerBuilder"* %26, i64 0, i32 6
  %38 = bitcast %"struct.skottie::internal::AnimationBuilder::LayerInfo"* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.skottie::internal::LayerBuilder", %"class.skottie::internal::LayerBuilder"* %26, i64 0, i32 6, i32 0, i32 1
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %4, %22, %35
  %44 = phi i64 [ %36, %35 ], [ 0, %22 ], [ 0, %4 ]
  %45 = phi i32 [ %39, %35 ], [ 0, %22 ], [ 0, %4 ]
  %46 = phi i32 [ %42, %35 ], [ 0, %22 ], [ 0, %4 ]
  %47 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %48 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %47, align 8
  %49 = icmp eq %"class.sksg::RenderNode"* %48, null
  br i1 %49, label %142, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  %53 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 2
  %54 = inttoptr i64 %44 to %"class.sksg::RenderNode"*
  %55 = icmp eq i64 %44, 0
  br i1 %55, label %155, label %56

56:                                               ; preds = %50
  %57 = call i8* @_Znwm(i64 128) #16, !noalias !8
  %58 = bitcast %"class.std::__1::vector.51"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #15, !noalias !8
  %59 = call i8* @_Znwm(i64 8) #16, !noalias !8
  %60 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %6, i64 0, i32 0, i32 1
  %61 = bitcast %class.sk_sp.32** %60 to i8**
  store i8* %59, i8** %61, align 8, !noalias !8
  %62 = bitcast %"class.std::__1::vector.51"* %6 to i8**
  store i8* %59, i8** %62, align 8, !noalias !8
  %63 = getelementptr inbounds i8, i8* %59, i64 8
  %64 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %class.sk_sp.32** %64 to i8**
  store i8* %63, i8** %65, align 8, !noalias !8
  %66 = bitcast i8* %59 to %"class.sksg::RenderNode"**
  %67 = atomicrmw add i32* %51, i32 1 monotonic, !noalias !8
  store %"class.sksg::RenderNode"* %48, %"class.sksg::RenderNode"** %66, align 8, !noalias !8
  %68 = bitcast i8* %57 to %"class.sksg::CustomRenderNode"*
  %69 = bitcast %class.sk_sp.32** %60 to i64*
  %70 = ptrtoint i8* %63 to i64
  store i64 %70, i64* %69, align 8, !noalias !8
  call void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"* nonnull %68, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %6) #15, !noalias !8
  %71 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %6, i64 0, i32 0, i32 0
  %72 = load %class.sk_sp.32*, %class.sk_sp.32** %71, align 8, !noalias !8
  %73 = icmp eq %class.sk_sp.32* %72, null
  br i1 %73, label %100, label %74

74:                                               ; preds = %56
  %75 = bitcast %class.sk_sp.32* %72 to i8*
  %76 = load %class.sk_sp.32*, %class.sk_sp.32** %60, align 8, !noalias !8
  %77 = icmp eq %class.sk_sp.32* %76, %72
  br i1 %77, label %98, label %78

78:                                               ; preds = %74, %94
  %79 = phi %class.sk_sp.32* [ %80, %94 ], [ %76, %74 ]
  %80 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %79, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %80, i64 0, i32 0
  %82 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %81, align 8, !noalias !8
  %83 = icmp eq %"class.sksg::RenderNode"* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %82, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel, !noalias !8
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %"class.sksg::RenderNode"* %82 to %class.SkRefCntBase*
  %90 = bitcast %"class.sksg::RenderNode"* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8, !noalias !8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8, !noalias !8
  call void %93(%class.SkRefCntBase* nonnull %89) #15, !noalias !8
  br label %94

94:                                               ; preds = %88, %84, %78
  %95 = icmp eq %class.sk_sp.32* %80, %72
  br i1 %95, label %96, label %78

96:                                               ; preds = %94
  %97 = load i8*, i8** %62, align 8, !noalias !8
  br label %98

98:                                               ; preds = %96, %74
  %99 = phi i8* [ %97, %96 ], [ %75, %74 ]
  store %class.sk_sp.32* %72, %class.sk_sp.32** %60, align 8, !noalias !8
  call void @_ZdlPv(i8* %99) #16, !noalias !8
  br label %100

100:                                              ; preds = %98, %56
  %101 = atomicrmw add i32* %51, i32 -1 acq_rel, !noalias !8
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %100
  %104 = bitcast %"class.sksg::RenderNode"* %48 to %class.SkRefCntBase*
  %105 = bitcast %"class.sksg::RenderNode"* %48 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8, !noalias !8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8, !noalias !8
  call void %108(%class.SkRefCntBase* nonnull %104) #15, !noalias !8
  br label %109

109:                                              ; preds = %103, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #15, !noalias !8
  %110 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_116DisplacementNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8, !noalias !8
  %111 = getelementptr inbounds i8, i8* %57, i64 72
  %112 = bitcast i8* %111 to i64*
  store i64 %44, i64* %112, align 8, !noalias !8
  %113 = getelementptr inbounds i8, i8* %57, i64 80
  %114 = bitcast i8* %113 to i32*
  store i32 %45, i32* %114, align 8
  %115 = getelementptr inbounds i8, i8* %57, i64 84
  %116 = bitcast i8* %115 to i32*
  store i32 %46, i32* %116, align 4
  %117 = getelementptr inbounds i8, i8* %57, i64 88
  %118 = bitcast %struct.SkSize* %53 to i64*
  %119 = bitcast i8* %117 to i64*
  %120 = load i64, i64* %118, align 4, !noalias !8
  store i64 %120, i64* %119, align 8, !noalias !8
  %121 = getelementptr inbounds i8, i8* %57, i64 96
  %122 = getelementptr inbounds i8, i8* %57, i64 112
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #15, !noalias !8
  %123 = bitcast i8* %122 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, <4 x i32>* %123, align 8, !noalias !8
  %124 = bitcast i8* %57 to %"class.sksg::Node"*
  %125 = bitcast %class.sk_sp.61* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #15, !noalias !8
  %126 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 1 monotonic, !noalias !8
  %128 = bitcast %class.sk_sp.61* %7 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %54, %"class.sksg::RenderNode"** %128, align 8, !noalias !8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* nonnull %124, %class.sk_sp.61* nonnull dereferenceable(8) %7) #15, !noalias !8
  %129 = getelementptr inbounds %class.sk_sp.61, %class.sk_sp.61* %7, i64 0, i32 0
  %130 = load %"class.sksg::Node"*, %"class.sksg::Node"** %129, align 8, !noalias !8
  %131 = icmp eq %"class.sksg::Node"* %130, null
  br i1 %131, label %168, label %132

132:                                              ; preds = %109
  %133 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %130, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel, !noalias !8
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %168

136:                                              ; preds = %132
  %137 = bitcast %"class.sksg::Node"* %130 to %class.SkRefCntBase*
  %138 = bitcast %"class.sksg::Node"* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8, !noalias !8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8, !noalias !8
  call void %141(%class.SkRefCntBase* nonnull %137) #15, !noalias !8
  br label %168

142:                                              ; preds = %43
  %143 = icmp eq i64 %44, 0
  br i1 %143, label %165, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %44 to %"class.sksg::RenderNode"*
  %146 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %145, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %165

149:                                              ; preds = %144
  %150 = inttoptr i64 %44 to %class.SkRefCntBase*
  %151 = inttoptr i64 %44 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  call void %154(%class.SkRefCntBase* nonnull %150) #15
  br label %165

155:                                              ; preds = %50
  %156 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = bitcast %"class.sksg::RenderNode"* %48 to %class.SkRefCntBase*
  %161 = bitcast %"class.sksg::RenderNode"* %48 to void (%class.SkRefCntBase*)***
  %162 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, i64 2
  %164 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, align 8
  call void %164(%class.SkRefCntBase* nonnull %160) #15
  br label %165

165:                                              ; preds = %149, %144, %142, %155, %159
  %166 = bitcast %class.sk_sp.32* %3 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %47, align 8
  br label %302

168:                                              ; preds = %136, %132, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #15, !noalias !8
  %169 = ptrtoint i8* %57 to i64
  %170 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %171 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %170, align 8
  %172 = call i8* @_Znwm(i64 80) #16, !noalias !11
  %173 = getelementptr inbounds i8, i8* %172, i64 8
  %174 = bitcast i8* %173 to i32*
  store i32 1, i32* %174, align 4, !noalias !11
  %175 = bitcast i8* %172 to i32 (...)***
  %176 = getelementptr inbounds i8, i8* %172, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 25, i1 false) #15, !noalias !11
  %177 = getelementptr inbounds i8, i8* %172, i64 48
  %178 = bitcast i8* %177 to i64*
  store i64 %169, i64* %178, align 8, !noalias !11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8, !noalias !11
  %179 = getelementptr inbounds i8, i8* %172, i64 56
  %180 = bitcast i8* %179 to float*
  %181 = getelementptr inbounds i8, i8* %172, i64 60
  %182 = bitcast i8* %181 to float*
  %183 = getelementptr inbounds i8, i8* %172, i64 64
  %184 = bitcast i8* %183 to float*
  %185 = getelementptr inbounds i8, i8* %172, i64 68
  %186 = bitcast i8* %185 to float*
  %187 = getelementptr inbounds i8, i8* %172, i64 72
  %188 = bitcast i8* %187 to float*
  %189 = getelementptr inbounds i8, i8* %172, i64 76
  %190 = bitcast i8* %189 to float*
  %191 = bitcast i8* %172 to %"class.skottie::internal::AnimatablePropertyContainer"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #15, !noalias !11
  %192 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #15, !noalias !11
  %193 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %192, i64 0, i32 0, i64 0
  %194 = load i8, i8* %193, align 8, !noalias !11
  %195 = and i8 %194, 7
  %196 = icmp eq i8 %195, 7
  %197 = bitcast %"class.skjson::Value"* %192 to %"class.skjson::ObjectValue"*
  %198 = select i1 %196, %"class.skjson::ObjectValue"* %197, %"class.skjson::ObjectValue"* null
  %199 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %198, float* %180) #15, !noalias !11
  %200 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #15, !noalias !11
  %201 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %200, i64 0, i32 0, i64 0
  %202 = load i8, i8* %201, align 8, !noalias !11
  %203 = and i8 %202, 7
  %204 = icmp eq i8 %203, 7
  %205 = bitcast %"class.skjson::Value"* %200 to %"class.skjson::ObjectValue"*
  %206 = select i1 %204, %"class.skjson::ObjectValue"* %205, %"class.skjson::ObjectValue"* null
  %207 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %206, float* %184) #15, !noalias !11
  %208 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #15, !noalias !11
  %209 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %208, i64 0, i32 0, i64 0
  %210 = load i8, i8* %209, align 8, !noalias !11
  %211 = and i8 %210, 7
  %212 = icmp eq i8 %211, 7
  %213 = bitcast %"class.skjson::Value"* %208 to %"class.skjson::ObjectValue"*
  %214 = select i1 %212, %"class.skjson::ObjectValue"* %213, %"class.skjson::ObjectValue"* null
  %215 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %214, float* %182) #15, !noalias !11
  %216 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 4) #15, !noalias !11
  %217 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %216, i64 0, i32 0, i64 0
  %218 = load i8, i8* %217, align 8, !noalias !11
  %219 = and i8 %218, 7
  %220 = icmp eq i8 %219, 7
  %221 = bitcast %"class.skjson::Value"* %216 to %"class.skjson::ObjectValue"*
  %222 = select i1 %220, %"class.skjson::ObjectValue"* %221, %"class.skjson::ObjectValue"* null
  %223 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %222, float* %186) #15, !noalias !11
  %224 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 5) #15, !noalias !11
  %225 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %224, i64 0, i32 0, i64 0
  %226 = load i8, i8* %225, align 8, !noalias !11
  %227 = and i8 %226, 7
  %228 = icmp eq i8 %227, 7
  %229 = bitcast %"class.skjson::Value"* %224 to %"class.skjson::ObjectValue"*
  %230 = select i1 %228, %"class.skjson::ObjectValue"* %229, %"class.skjson::ObjectValue"* null
  %231 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %230, float* %188) #15, !noalias !11
  %232 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 6) #15, !noalias !11
  %233 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %232, i64 0, i32 0, i64 0
  %234 = load i8, i8* %233, align 8, !noalias !11
  %235 = and i8 %234, 7
  %236 = icmp eq i8 %235, 7
  %237 = bitcast %"class.skjson::Value"* %232 to %"class.skjson::ObjectValue"*
  %238 = select i1 %236, %"class.skjson::ObjectValue"* %237, %"class.skjson::ObjectValue"* null
  %239 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %171, %"class.skjson::ObjectValue"* %238, float* %190) #15, !noalias !11
  %240 = ptrtoint i8* %172 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %191) #15, !noalias !11
  %241 = bitcast i8* %177 to %"class.skottie::internal::(anonymous namespace)::DisplacementNode"**
  %242 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %241, align 8, !noalias !16
  %243 = icmp eq %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %168
  %245 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 1 monotonic
  br label %247

247:                                              ; preds = %168, %244
  %248 = ptrtoint %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %242 to i64
  %249 = bitcast i8* %176 to %class.sk_sp.6**
  %250 = load %class.sk_sp.6*, %class.sk_sp.6** %249, align 8, !noalias !16
  %251 = getelementptr inbounds i8, i8* %172, i64 24
  %252 = bitcast i8* %251 to %class.sk_sp.6**
  %253 = load %class.sk_sp.6*, %class.sk_sp.6** %252, align 8, !noalias !16
  %254 = icmp eq %class.sk_sp.6* %250, %253
  br i1 %254, label %287, label %255

255:                                              ; preds = %247
  %256 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %171, i64 0, i32 11
  %257 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %256, align 8, !noalias !16
  %258 = bitcast %class.sk_sp.6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #15, !noalias !16
  %259 = bitcast %class.sk_sp.6* %5 to i64*
  store i64 %240, i64* %259, align 8, !noalias !16
  %260 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 1
  %261 = load %class.sk_sp.6*, %class.sk_sp.6** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 2, i32 0, i32 0
  %263 = load %class.sk_sp.6*, %class.sk_sp.6** %262, align 8
  %264 = icmp ult %class.sk_sp.6* %261, %263
  br i1 %264, label %265, label %271

265:                                              ; preds = %255
  %266 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %266, align 8, !noalias !16
  %267 = bitcast %class.sk_sp.6* %261 to i64*
  store i64 %240, i64* %267, align 8
  %268 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %261, i64 1
  %269 = ptrtoint %class.sk_sp.6* %268 to i64
  %270 = bitcast %class.sk_sp.6** %260 to i64*
  store i64 %269, i64* %270, align 8
  br label %272

271:                                              ; preds = %255
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %257, %class.sk_sp.6* nonnull dereferenceable(8) %5) #15
  br label %272

272:                                              ; preds = %271, %265
  %273 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %274 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %273, align 8, !noalias !16
  %275 = icmp eq %"class.skottie::internal::Animator"* %274, null
  br i1 %275, label %286, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %274, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %286

280:                                              ; preds = %276
  %281 = bitcast %"class.skottie::internal::Animator"* %274 to %class.SkRefCntBase*
  %282 = bitcast %"class.skottie::internal::Animator"* %274 to void (%class.SkRefCntBase*)***
  %283 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %282, align 8
  %284 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %283, i64 2
  %285 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %284, align 8
  call void %285(%class.SkRefCntBase* nonnull %281) #15
  br label %286

286:                                              ; preds = %280, %276, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #15, !noalias !16
  br label %302

287:                                              ; preds = %247
  %288 = bitcast i8* %172 to %"class.skottie::internal::Animator"*
  %289 = bitcast i8* %172 to i1 (%"class.skottie::internal::Animator"*, float)***
  %290 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %289, align 8, !noalias !16
  %291 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %290, i64 3
  %292 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %291, align 8
  %293 = call zeroext i1 %292(%"class.skottie::internal::Animator"* nonnull %288, float 0.000000e+00) #15
  %294 = atomicrmw add i32* %174, i32 -1 acq_rel, !noalias !16
  %295 = icmp eq i32 %294, 1
  br i1 %295, label %296, label %302

296:                                              ; preds = %287
  %297 = bitcast i8* %172 to %class.SkRefCntBase*
  %298 = bitcast i8* %172 to void (%class.SkRefCntBase*)***
  %299 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %298, align 8, !noalias !16
  %300 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %299, i64 2
  %301 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %300, align 8
  call void %301(%class.SkRefCntBase* nonnull %297) #15
  br label %302

302:                                              ; preds = %286, %287, %296, %165
  %303 = phi i64 [ %167, %165 ], [ %248, %296 ], [ %248, %287 ], [ %248, %286 ]
  %304 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %303, i64* %304, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #2

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

declare %"class.skottie::internal::LayerBuilder"* @_ZN7skottie8internal18CompositionBuilder12layerBuilderEi(%"class.skottie::internal::CompositionBuilder"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseIiEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"*, %"class.std::__1::vector.51"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.61* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNodeD2Ev(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.61, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_116DisplacementNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.61* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.61* %2 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %7, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.61* nonnull dereferenceable(8) %2) #15
  %14 = getelementptr inbounds %class.sk_sp.61, %class.sk_sp.61* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #15
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %28 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 4, i32 0
  %29 = load %class.SkShader*, %class.SkShader** %28, align 8
  %30 = icmp eq %class.SkShader* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkShader, %class.SkShader* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkShader* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkShader* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #15
  br label %41

41:                                               ; preds = %27, %31, %35
  %42 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %43 = icmp eq %"class.sksg::RenderNode"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.sksg::RenderNode"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.sksg::RenderNode"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #15
  br label %54

54:                                               ; preds = %41, %44, %48
  %55 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0
  call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %55) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNodeD0Ev(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNodeD2Ev(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0) #15
  %2 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"* nocapture, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %6 = alloca %"struct.SkRuntimeEffect::Result", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %struct.SkRect, align 4
  %9 = alloca %class.SkPictureRecorder, align 8
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %class.SkPictureRecorder, align 8
  %12 = alloca %class.sk_sp.77, align 8
  %13 = alloca %class.sk_sp.77, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %class.sk_sp.58, align 8
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = alloca %class.SkMatrix, align 16
  %18 = alloca %class.sk_sp.58, align 8
  %19 = alloca %class.SkRuntimeShaderBuilder, align 8
  %20 = alloca %class.sk_sp.82, align 8
  %21 = alloca %class.sk_sp.58, align 8
  %22 = bitcast %class.sk_sp.58* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = bitcast %class.sk_sp.82* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %25 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 8
  %27 = load i32, i32* %26, align 8, !noalias !17
  %28 = add i32 %27, -8
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %30, label %35

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 9
  %32 = load i32, i32* %31, align 4, !noalias !17
  %33 = add i32 %32, -8
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %45, label %35

35:                                               ; preds = %30, %3
  %36 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 5, i32 0
  %37 = load float, float* %36, align 8, !noalias !17
  %38 = tail call float @llvm.fabs.f32(float %37) #15
  %39 = fcmp ugt float %38, 0x3F30000000000000
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 5, i32 1
  %42 = load float, float* %41, align 4, !noalias !17
  %43 = tail call float @llvm.fabs.f32(float %42) #15
  %44 = fcmp ugt float %43, 0x3F30000000000000
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %30
  %46 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %21, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %46, align 8, !alias.scope !17
  br label %426

47:                                               ; preds = %40, %35
  %48 = bitcast %class.sk_sp.77* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15, !noalias !17
  %49 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %12, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %49, align 8, !noalias !17
  %50 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %51 = load %class.sk_sp.32*, %class.sk_sp.32** %50, align 8, !noalias !17
  %52 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %51, i64 0, i32 0
  %53 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %52, align 8, !noalias !20
  %54 = icmp eq %"class.sksg::RenderNode"* %53, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  store %class.SkPicture* null, %class.SkPicture** %49, align 8, !alias.scope !23, !noalias !17
  br label %64

56:                                               ; preds = %47
  %57 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #15, !noalias !20
  %58 = bitcast %"class.sksg::RenderNode"* %53 to %"class.sksg::Node"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -1, i64 16, i1 false) #15, !noalias !20
  %59 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* nonnull %58, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #15, !noalias !23
  %60 = bitcast %struct.SkRect* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %57, i8* align 4 %60, i64 16, i1 false) #15, !noalias !23
  %61 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %61) #15, !noalias !20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" }* @__const._ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_.recorder, i64 0, i32 0), i64 56, i1 false) #15, !noalias !23
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %11) #15, !noalias !23
  %62 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %52, align 8, !noalias !23
  %63 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %11, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkBBHFactory* null) #15, !noalias !23
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %62, %class.SkCanvas* %63, %"struct.sksg::RenderNode::RenderContext"* null) #15, !noalias !23
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.77* nonnull sret %12, %class.SkPictureRecorder* nonnull %11) #15
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %61) #15, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15, !noalias !20
  br label %64

64:                                               ; preds = %56, %55
  %65 = bitcast %class.sk_sp.77* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15, !noalias !17
  %66 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %13, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %66, align 8, !noalias !17
  %67 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 1, i32 0
  %68 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %67, align 8, !noalias !24
  %69 = icmp eq %"class.sksg::RenderNode"* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %64
  store %class.SkPicture* null, %class.SkPicture** %66, align 8, !alias.scope !27, !noalias !17
  br label %85

71:                                               ; preds = %64
  %72 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #15, !noalias !24
  %73 = bitcast %"class.sksg::RenderNode"* %68 to %"class.sksg::Node"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %72, i8 -1, i64 16, i1 false) #15, !noalias !24
  %74 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* nonnull %73, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #15, !noalias !24
  %75 = bitcast %struct.SkRect* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* align 4 %75, i64 16, i1 false) #15, !noalias !24
  %76 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %76) #15, !noalias !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %class.sk_sp.132, %"class.std::__1::unique_ptr.133" }* @__const._ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_.recorder, i64 0, i32 0), i64 56, i1 false) #15, !noalias !24
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %9) #15, !noalias !24
  %77 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %67, align 8, !noalias !24
  %78 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %8, %class.SkBBHFactory* null) #15, !noalias !24
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %77, %class.SkCanvas* %78, %"struct.sksg::RenderNode::RenderContext"* null) #15, !noalias !24
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.77* nonnull sret %13, %class.SkPictureRecorder* nonnull %9) #15, !noalias !17
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %9) #15, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %76) #15, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #15, !noalias !24
  %79 = load %class.SkPicture*, %class.SkPicture** %66, align 8, !noalias !17
  %80 = bitcast %class.SkPicture* %79 to %class.SkRefCntBase*
  %81 = load %class.SkPicture*, %class.SkPicture** %49, align 8, !noalias !17
  %82 = icmp ne %class.SkPicture* %81, null
  %83 = icmp ne %class.SkPicture* %79, null
  %84 = and i1 %83, %82
  br i1 %84, label %89, label %85

85:                                               ; preds = %71, %70
  %86 = phi %class.SkPicture* [ null, %70 ], [ %79, %71 ]
  %87 = phi %class.SkRefCntBase* [ null, %70 ], [ %80, %71 ]
  %88 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %21, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %88, align 8, !alias.scope !17
  br label %397

89:                                               ; preds = %71
  %90 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #15, !noalias !17
  %91 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 3, i32 0
  %92 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 3, i32 1
  %93 = bitcast float* %91 to i64*
  %94 = load i64, i64* %93, align 4, !noalias !17
  %95 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %95, align 8, !noalias !17
  %96 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %97 = bitcast <2 x float>* %96 to i64*
  store i64 %94, i64* %97, align 8, !noalias !17
  %98 = bitcast %class.sk_sp.58* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #15, !noalias !17
  %99 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %15, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %99, align 8, !noalias !17
  %100 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 6
  %101 = load i32, i32* %100, align 8, !noalias !17
  call void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.58* nonnull sret %15, %class.SkPicture* nonnull %81, i32 %101, i32 %101, i32 1, %class.SkMatrix* null, %struct.SkRect* nonnull %24) #15, !noalias !17
  %102 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #15, !noalias !17
  %103 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 2, i32 0
  %104 = bitcast float* %103 to <2 x float>*
  %105 = load <2 x float>, <2 x float>* %104, align 4, !noalias !17
  %106 = extractelement <2 x float> %105, i32 0
  %107 = extractelement <2 x float> %105, i32 1
  %108 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %108, align 8, !noalias !17
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %105, <2 x float>* %109, align 8, !noalias !17
  %110 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 7
  %111 = load i32, i32* %110, align 4, !noalias !17
  %112 = icmp eq i32 %111, 2
  %113 = zext i1 %112 to i32
  %114 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %114) #15, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %114, i8 -1, i64 36, i1 false) #15, !noalias !17
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  store i32 -1431655766, i32* %115, align 4, !noalias !17
  switch i32 %111, label %141 [
    i32 0, label %116
    i32 1, label %128
    i32 2, label %138
  ]

116:                                              ; preds = %89
  %117 = load float, float* %91, align 8, !noalias !28
  %118 = fsub float %117, %106
  %119 = fmul float %118, 5.000000e-01
  %120 = load float, float* %92, align 4, !noalias !28
  %121 = fsub float %120, %107
  %122 = fmul float %121, 5.000000e-01
  %123 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %123, align 16, !alias.scope !31, !noalias !17
  %124 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %125, align 16, !alias.scope !31, !noalias !17
  %126 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %126, align 16, !alias.scope !31, !noalias !17
  store i32 16, i32* %115, align 4, !alias.scope !31, !noalias !17
  %127 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %17, float %119, float %122) #15
  br label %142

128:                                              ; preds = %89
  %129 = load float, float* %91, align 8, !noalias !28
  %130 = fdiv float %129, %106
  %131 = load float, float* %92, align 4, !noalias !28
  %132 = fdiv float %131, %107
  %133 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %133, align 16, !alias.scope !34, !noalias !17
  %134 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %135 = bitcast float* %134 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %135, align 16, !alias.scope !34, !noalias !17
  %136 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %136, align 16, !alias.scope !34, !noalias !17
  store i32 16, i32* %115, align 4, !alias.scope !34, !noalias !17
  %137 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %17, float %130, float %132) #15
  br label %142

138:                                              ; preds = %89
  %139 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %140 = bitcast %class.SkMatrix* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %114, i8* align 4 %140, i64 40, i1 false) #15
  br label %142

141:                                              ; preds = %89
  call void @llvm.trap() #15
  unreachable

142:                                              ; preds = %138, %128, %116
  %143 = bitcast %class.sk_sp.58* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #15, !noalias !17
  %144 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %18, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %144, align 8, !noalias !17
  %145 = load %class.SkPicture*, %class.SkPicture** %66, align 8, !noalias !17
  call void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.58* nonnull sret %18, %class.SkPicture* %145, i32 %113, i32 %113, i32 1, %class.SkMatrix* nonnull %17, %struct.SkRect* nonnull %25) #15, !noalias !17
  %146 = bitcast %class.SkRuntimeShaderBuilder* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #15, !noalias !17
  %147 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %19, i64 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %class.SkString* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 40, i1 false) #15, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #15, !noalias !17
  %150 = load atomic i8, i8* bitcast (i64* @_ZGVZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect to i8*) acquire, align 8, !noalias !37
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %177, !prof !40

152:                                              ; preds = %142
  %153 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect) #15, !noalias !41
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %177, label %155

155:                                              ; preds = %152
  %156 = bitcast %"struct.SkRuntimeEffect::Result"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #15, !noalias !37
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([308 x i8], [308 x i8]* @_ZN7skottie8internal12_GLOBAL__N_117gDisplacementSkSLE, i64 0, i64 0)) #15, !noalias !41
  %157 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #15, !noalias !37
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %4, %class.SkString* nonnull dereferenceable(8) %7) #15, !noalias !42
  %158 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %158) #15, !noalias !45
  store i8 0, i8* %158, align 1, !noalias !45
  %159 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 1
  store i8 1, i8* %159, align 1, !noalias !45
  call void @_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret %6, %class.SkString* nonnull %4, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %5) #15, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %158) #15, !noalias !45
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #15, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #15, !noalias !37
  %160 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %6, i64 0, i32 0, i32 0
  %161 = bitcast %"struct.SkRuntimeEffect::Result"* %6 to i64*
  %162 = load i64, i64* %161, align 8, !noalias !37
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %160, align 8, !noalias !37
  %163 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %6, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %163) #15, !noalias !41
  %164 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %160, align 8, !noalias !37
  %165 = icmp eq %class.SkRuntimeEffect* %164, null
  br i1 %165, label %176, label %166

166:                                              ; preds = %155
  %167 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %164, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 -1 acq_rel, !noalias !41
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = bitcast %class.SkRuntimeEffect* %164 to %class.SkRefCntBase*
  %172 = bitcast %class.SkRuntimeEffect* %164 to void (%class.SkRefCntBase*)***
  %173 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %172, align 8, !noalias !41
  %174 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, i64 2
  %175 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, align 8, !noalias !41
  call void %175(%class.SkRefCntBase* nonnull %171) #15, !noalias !41
  br label %176

176:                                              ; preds = %170, %166, %155
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #15, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #15, !noalias !37
  store i64 %162, i64* bitcast (%class.SkRuntimeEffect** @_ZZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect to i64*), align 8, !noalias !41
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect) #15, !noalias !41
  br label %177

177:                                              ; preds = %176, %152, %142
  %178 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** @_ZZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEvE6effect, align 8, !noalias !37
  %179 = icmp eq %class.SkRuntimeEffect* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %178, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 1 monotonic, !noalias !46
  br label %183

183:                                              ; preds = %180, %177
  %184 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %20, i64 0, i32 0
  store %class.SkRuntimeEffect* %178, %class.SkRuntimeEffect** %184, align 8, !alias.scope !46, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #15, !noalias !17
  call void @_ZN22SkRuntimeShaderBuilderC1E5sk_spI15SkRuntimeEffectE(%class.SkRuntimeShaderBuilder* nonnull %19, %class.sk_sp.82* nonnull %20) #15, !noalias !17
  %185 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %184, align 8, !noalias !17
  %186 = icmp eq %class.SkRuntimeEffect* %185, null
  br i1 %186, label %197, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %185, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 -1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %197

191:                                              ; preds = %187
  %192 = bitcast %class.SkRuntimeEffect* %185 to %class.SkRefCntBase*
  %193 = bitcast %class.SkRuntimeEffect* %185 to void (%class.SkRefCntBase*)***
  %194 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %193, align 8
  %195 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %194, i64 2
  %196 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %195, align 8
  call void %196(%class.SkRefCntBase* nonnull %192) #15
  br label %197

197:                                              ; preds = %191, %187, %183
  %198 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %19, i64 0, i32 0
  %199 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %147, align 8, !noalias !49
  %200 = call %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect* %199, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #15, !noalias !49
  %201 = icmp eq %"struct.SkRuntimeEffect::Child"* %200, null
  br i1 %201, label %224, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %200, i64 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = load %class.sk_sp.58*, %class.sk_sp.58** %148, align 8, !noalias !17
  %207 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %206, i64 %205
  %208 = bitcast %class.sk_sp.58* %15 to i64*
  %209 = load i64, i64* %208, align 8, !noalias !17
  store %class.SkShader* null, %class.SkShader** %99, align 8, !noalias !17
  %210 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %207, i64 0, i32 0
  %211 = load %class.SkShader*, %class.SkShader** %210, align 8
  %212 = bitcast %class.sk_sp.58* %207 to i64*
  store i64 %209, i64* %212, align 8
  %213 = icmp eq %class.SkShader* %211, null
  br i1 %213, label %224, label %214

214:                                              ; preds = %202
  %215 = getelementptr inbounds %class.SkShader, %class.SkShader* %211, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = atomicrmw add i32* %215, i32 -1 acq_rel
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %224

218:                                              ; preds = %214
  %219 = bitcast %class.SkShader* %211 to %class.SkRefCntBase*
  %220 = bitcast %class.SkShader* %211 to void (%class.SkRefCntBase*)***
  %221 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %220, align 8
  %222 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, i64 2
  %223 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, align 8
  call void %223(%class.SkRefCntBase* nonnull %219) #15
  br label %224

224:                                              ; preds = %218, %214, %202, %197
  %225 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %147, align 8, !noalias !52
  %226 = call %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect* %225, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #15, !noalias !52
  %227 = icmp eq %"struct.SkRuntimeEffect::Child"* %226, null
  br i1 %227, label %250, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %226, i64 0, i32 2
  %230 = load i32, i32* %229, align 4
  %231 = sext i32 %230 to i64
  %232 = load %class.sk_sp.58*, %class.sk_sp.58** %148, align 8, !noalias !17
  %233 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %232, i64 %231
  %234 = bitcast %class.sk_sp.58* %18 to i64*
  %235 = load i64, i64* %234, align 8, !noalias !17
  store %class.SkShader* null, %class.SkShader** %144, align 8, !noalias !17
  %236 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %233, i64 0, i32 0
  %237 = load %class.SkShader*, %class.SkShader** %236, align 8
  %238 = bitcast %class.sk_sp.58* %233 to i64*
  store i64 %235, i64* %238, align 8
  %239 = icmp eq %class.SkShader* %237, null
  br i1 %239, label %250, label %240

240:                                              ; preds = %228
  %241 = getelementptr inbounds %class.SkShader, %class.SkShader* %237, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = atomicrmw add i32* %241, i32 -1 acq_rel
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %250

244:                                              ; preds = %240
  %245 = bitcast %class.SkShader* %237 to %class.SkRefCntBase*
  %246 = bitcast %class.SkShader* %237 to void (%class.SkRefCntBase*)***
  %247 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %246, align 8
  %248 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %247, i64 2
  %249 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %248, align 8
  call void %249(%class.SkRefCntBase* nonnull %245) #15
  br label %250

250:                                              ; preds = %244, %240, %228, %224
  %251 = load i32, i32* %26, align 8, !noalias !17
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 0
  %254 = load float, float* %253, align 4, !noalias !17
  %255 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 1
  %256 = load float, float* %255, align 4, !noalias !17
  %257 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 2
  %258 = load float, float* %257, align 4, !noalias !17
  %259 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 3
  %260 = load float, float* %259, align 4, !noalias !17
  %261 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 4
  %262 = load float, float* %261, align 4, !noalias !17
  %263 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 5
  %264 = bitcast float* %263 to i32*
  %265 = load i32, i32* %264, align 4, !noalias !17
  %266 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %252, i32 6
  %267 = bitcast float* %266 to i32*
  %268 = load i32, i32* %267, align 4, !noalias !17
  %269 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 9
  %270 = load i32, i32* %269, align 4, !noalias !17
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 0
  %273 = load float, float* %272, align 4, !noalias !17
  %274 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 1
  %275 = load float, float* %274, align 4, !noalias !17
  %276 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 2
  %277 = load float, float* %276, align 4, !noalias !17
  %278 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 3
  %279 = load float, float* %278, align 4, !noalias !17
  %280 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 4
  %281 = load float, float* %280, align 4, !noalias !17
  %282 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 5
  %283 = bitcast float* %282 to i32*
  %284 = load i32, i32* %283, align 4, !noalias !17
  %285 = getelementptr inbounds [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"], [11 x %"struct.skottie::internal::(anonymous namespace)::DisplacementNode::SelectorCoeffs"]* @_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode6CoeffsENS2_8SelectorEE7gCoeffs, i64 0, i64 %271, i32 6
  %286 = bitcast float* %285 to i32*
  %287 = load i32, i32* %286, align 4, !noalias !17
  %288 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 5
  %289 = bitcast %struct.SkV2* %288 to <2 x float>*
  %290 = load <2 x float>, <2 x float>* %289, align 8, !noalias !17
  %291 = extractelement <2 x float> %290, i32 0
  %292 = fmul float %291, 2.000000e+00
  %293 = extractelement <2 x float> %290, i32 1
  %294 = fmul float %293, 2.000000e+00
  %295 = fmul float %254, %292
  %296 = fmul float %273, %294
  %297 = fmul float %256, %292
  %298 = fmul float %275, %294
  %299 = fmul float %258, %292
  %300 = fmul float %277, %294
  %301 = fmul float %260, %292
  %302 = fmul float %279, %294
  %303 = fadd float %262, -5.000000e-01
  %304 = fmul float %303, %292
  %305 = fadd float %281, -5.000000e-01
  %306 = fmul float %305, %294
  %307 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %147, align 8, !noalias !17
  %308 = call %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect* %307, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #15, !noalias !17
  %309 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %308, null
  br i1 %309, label %349, label %310

310:                                              ; preds = %250
  %311 = call i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"* nonnull %308) #15
  %312 = icmp eq i64 %311, 64
  br i1 %312, label %313, label %349

313:                                              ; preds = %310
  %314 = call i8* @_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder* nonnull %198) #15
  %315 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %308, i64 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds i8, i8* %314, i64 %316
  %318 = bitcast i8* %317 to float*
  store float %295, float* %318, align 1
  %319 = getelementptr inbounds i8, i8* %317, i64 4
  %320 = bitcast i8* %319 to float*
  store float %296, float* %320, align 1
  %321 = getelementptr inbounds i8, i8* %317, i64 8
  %322 = bitcast i8* %321 to float*
  store float 0.000000e+00, float* %322, align 1
  %323 = getelementptr inbounds i8, i8* %317, i64 12
  %324 = bitcast i8* %323 to float*
  store float 0.000000e+00, float* %324, align 1
  %325 = getelementptr inbounds i8, i8* %317, i64 16
  %326 = bitcast i8* %325 to float*
  store float %297, float* %326, align 1
  %327 = getelementptr inbounds i8, i8* %317, i64 20
  %328 = bitcast i8* %327 to float*
  store float %298, float* %328, align 1
  %329 = getelementptr inbounds i8, i8* %317, i64 24
  %330 = bitcast i8* %329 to float*
  store float 0.000000e+00, float* %330, align 1
  %331 = getelementptr inbounds i8, i8* %317, i64 28
  %332 = bitcast i8* %331 to float*
  store float 0.000000e+00, float* %332, align 1
  %333 = getelementptr inbounds i8, i8* %317, i64 32
  %334 = bitcast i8* %333 to float*
  store float %299, float* %334, align 1
  %335 = getelementptr inbounds i8, i8* %317, i64 36
  %336 = bitcast i8* %335 to float*
  store float %300, float* %336, align 1
  %337 = getelementptr inbounds i8, i8* %317, i64 40
  %338 = bitcast i8* %337 to float*
  store float 0.000000e+00, float* %338, align 1
  %339 = getelementptr inbounds i8, i8* %317, i64 44
  %340 = bitcast i8* %339 to float*
  store float 0.000000e+00, float* %340, align 1
  %341 = getelementptr inbounds i8, i8* %317, i64 48
  %342 = bitcast i8* %341 to float*
  store float %301, float* %342, align 1
  %343 = getelementptr inbounds i8, i8* %317, i64 52
  %344 = bitcast i8* %343 to float*
  store float %302, float* %344, align 1
  %345 = getelementptr inbounds i8, i8* %317, i64 56
  %346 = bitcast i8* %345 to i32*
  store i32 %265, i32* %346, align 1
  %347 = getelementptr inbounds i8, i8* %317, i64 60
  %348 = bitcast i8* %347 to i32*
  store i32 %284, i32* %348, align 1
  br label %349

349:                                              ; preds = %313, %310, %250
  %350 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %147, align 8, !noalias !17
  %351 = call %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect* %350, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #15, !noalias !17
  %352 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %351, null
  br i1 %352, label %368, label %353

353:                                              ; preds = %349
  %354 = call i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"* nonnull %351) #15
  %355 = icmp eq i64 %354, 16
  br i1 %355, label %356, label %368

356:                                              ; preds = %353
  %357 = call i8* @_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder* nonnull %198) #15
  %358 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %351, i64 0, i32 1
  %359 = load i64, i64* %358, align 8
  %360 = getelementptr inbounds i8, i8* %357, i64 %359
  %361 = bitcast i8* %360 to float*
  store float %304, float* %361, align 1
  %362 = getelementptr inbounds i8, i8* %360, i64 4
  %363 = bitcast i8* %362 to float*
  store float %306, float* %363, align 1
  %364 = getelementptr inbounds i8, i8* %360, i64 8
  %365 = bitcast i8* %364 to i32*
  store i32 %268, i32* %365, align 1
  %366 = getelementptr inbounds i8, i8* %360, i64 12
  %367 = bitcast i8* %366 to i32*
  store i32 %287, i32* %367, align 1
  br label %368

368:                                              ; preds = %356, %353, %349
  call void @_ZN22SkRuntimeShaderBuilder10makeShaderEPK8SkMatrixb(%class.sk_sp.58* nonnull sret %21, %class.SkRuntimeShaderBuilder* nonnull %19, %class.SkMatrix* null, i1 zeroext false) #15
  call void @_ZN22SkRuntimeShaderBuilderD1Ev(%class.SkRuntimeShaderBuilder* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #15, !noalias !17
  %369 = load %class.SkShader*, %class.SkShader** %144, align 8, !noalias !17
  %370 = icmp eq %class.SkShader* %369, null
  br i1 %370, label %381, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %class.SkShader, %class.SkShader* %369, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = atomicrmw add i32* %372, i32 -1 acq_rel
  %374 = icmp eq i32 %373, 1
  br i1 %374, label %375, label %381

375:                                              ; preds = %371
  %376 = bitcast %class.SkShader* %369 to %class.SkRefCntBase*
  %377 = bitcast %class.SkShader* %369 to void (%class.SkRefCntBase*)***
  %378 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %377, align 8
  %379 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %378, i64 2
  %380 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %379, align 8
  call void %380(%class.SkRefCntBase* nonnull %376) #15
  br label %381

381:                                              ; preds = %375, %371, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #15, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %114) #15, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #15, !noalias !17
  %382 = load %class.SkShader*, %class.SkShader** %99, align 8, !noalias !17
  %383 = icmp eq %class.SkShader* %382, null
  br i1 %383, label %394, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds %class.SkShader, %class.SkShader* %382, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = atomicrmw add i32* %385, i32 -1 acq_rel
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %388, label %394

388:                                              ; preds = %384
  %389 = bitcast %class.SkShader* %382 to %class.SkRefCntBase*
  %390 = bitcast %class.SkShader* %382 to void (%class.SkRefCntBase*)***
  %391 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %390, align 8
  %392 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %391, i64 2
  %393 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %392, align 8
  call void %393(%class.SkRefCntBase* nonnull %389) #15
  br label %394

394:                                              ; preds = %388, %384, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #15, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #15, !noalias !17
  %395 = load %class.SkPicture*, %class.SkPicture** %66, align 8, !noalias !17
  %396 = bitcast %class.SkPicture* %395 to %class.SkRefCntBase*
  br label %397

397:                                              ; preds = %394, %85
  %398 = phi %class.SkRefCntBase* [ %396, %394 ], [ %87, %85 ]
  %399 = phi %class.SkPicture* [ %395, %394 ], [ %86, %85 ]
  %400 = icmp eq %class.SkPicture* %399, null
  br i1 %400, label %410, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %399, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = atomicrmw add i32* %402, i32 -1 acq_rel
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %410

405:                                              ; preds = %401
  %406 = bitcast %class.SkPicture* %399 to void (%class.SkRefCntBase*)***
  %407 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %406, align 8
  %408 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %407, i64 2
  %409 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %408, align 8
  call void %409(%class.SkRefCntBase* nonnull %398) #15
  br label %410

410:                                              ; preds = %405, %401, %397
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15, !noalias !17
  %411 = load %class.SkPicture*, %class.SkPicture** %49, align 8, !noalias !17
  %412 = icmp eq %class.SkPicture* %411, null
  br i1 %412, label %423, label %413

413:                                              ; preds = %410
  %414 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %411, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = atomicrmw add i32* %414, i32 -1 acq_rel
  %416 = icmp eq i32 %415, 1
  br i1 %416, label %417, label %423

417:                                              ; preds = %413
  %418 = bitcast %class.SkPicture* %411 to %class.SkRefCntBase*
  %419 = bitcast %class.SkPicture* %411 to void (%class.SkRefCntBase*)***
  %420 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %419, align 8
  %421 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %420, i64 2
  %422 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %421, align 8
  call void %422(%class.SkRefCntBase* nonnull %418) #15
  br label %423

423:                                              ; preds = %417, %413, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15, !noalias !17
  %424 = bitcast %class.sk_sp.58* %21 to i64*
  %425 = load i64, i64* %424, align 8
  br label %426

426:                                              ; preds = %45, %423
  %427 = phi i64 [ 0, %45 ], [ %425, %423 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  %428 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 4
  %429 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %21, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %429, align 8
  %430 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %428, i64 0, i32 0
  %431 = load %class.SkShader*, %class.SkShader** %430, align 8
  %432 = bitcast %class.sk_sp.58* %428 to i64*
  store i64 %427, i64* %432, align 8
  %433 = icmp eq %class.SkShader* %431, null
  br i1 %433, label %444, label %434

434:                                              ; preds = %426
  %435 = getelementptr inbounds %class.SkShader, %class.SkShader* %431, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = atomicrmw add i32* %435, i32 -1 acq_rel
  %437 = icmp eq i32 %436, 1
  br i1 %437, label %438, label %444

438:                                              ; preds = %434
  %439 = bitcast %class.SkShader* %431 to %class.SkRefCntBase*
  %440 = bitcast %class.SkShader* %431 to void (%class.SkRefCntBase*)***
  %441 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %440, align 8
  %442 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %441, i64 2
  %443 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %442, align 8
  call void %443(%class.SkRefCntBase* nonnull %439) #15
  br label %444

444:                                              ; preds = %426, %434, %438
  %445 = load %class.SkShader*, %class.SkShader** %429, align 8
  %446 = icmp eq %class.SkShader* %445, null
  br i1 %446, label %457, label %447

447:                                              ; preds = %444
  %448 = getelementptr inbounds %class.SkShader, %class.SkShader* %445, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = atomicrmw add i32* %448, i32 -1 acq_rel
  %450 = icmp eq i32 %449, 1
  br i1 %450, label %451, label %457

451:                                              ; preds = %447
  %452 = bitcast %class.SkShader* %445 to %class.SkRefCntBase*
  %453 = bitcast %class.SkShader* %445 to void (%class.SkRefCntBase*)***
  %454 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %453, align 8
  %455 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %454, i64 2
  %456 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %455, align 8
  call void %456(%class.SkRefCntBase* nonnull %452) #15
  br label %457

457:                                              ; preds = %444, %447, %451
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %458 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %459 = bitcast %class.sk_sp.32** %458 to %"class.sksg::Node"***
  %460 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %459, align 8
  %461 = load %"class.sksg::Node"*, %"class.sksg::Node"** %460, align 8
  %462 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %461, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #15
  %463 = bitcast %struct.SkRect* %462 to <2 x float>*
  %464 = load <2 x float>, <2 x float>* %463, align 4
  %465 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %462, i64 0, i32 2
  %466 = bitcast float* %465 to <2 x float>*
  %467 = load <2 x float>, <2 x float>* %466, align 4
  %468 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %464, 0
  %469 = insertvalue { <2 x float>, <2 x float> } %468, <2 x float> %467, 1
  ret { <2 x float>, <2 x float> } %469
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %5 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.sk_sp.58, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 4, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = icmp eq %class.SkShader* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %class.sk_sp.32*, %class.sk_sp.32** %13, align 8
  %15 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %14, i64 0, i32 0
  %16 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %15, align 8
  tail call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %16, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #15
  br label %44

17:                                               ; preds = %3
  %18 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %18) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.local_ctx to i8*), i64 136, i1 false)
  %19 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %19) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #15
  %20 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %21 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #15
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %6, %class.SkCanvas* %1) #15
  %22 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext12setIsolationERK6SkRectRK8SkMatrixb(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %struct.SkRect* dereferenceable(16) %20, %class.SkMatrix* nonnull dereferenceable(40) %6, i1 zeroext true) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136) %22)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %19) #15
  %23 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.shader_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #15
  %24 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %8, i64 0, i32 0
  %25 = load %class.SkShader*, %class.SkShader** %9, align 8
  %26 = icmp eq %class.SkShader* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %class.SkShader, %class.SkShader* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %17, %27
  store %class.SkShader* %25, %class.SkShader** %24, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %7, %class.sk_sp.58* nonnull %8) #15
  %31 = load %class.SkShader*, %class.SkShader** %24, align 8
  %32 = icmp eq %class.SkShader* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkShader, %class.SkShader* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkShader* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkShader* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #15
  br label %43

43:                                               ; preds = %30, %33, %37
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* dereferenceable(16) %20, %class.SkPaint* nonnull dereferenceable(72) %7) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %18) #15
  br label %44

44:                                               ; preds = %43, %12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.sksg::RenderNode"* @_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode8onNodeAtERK7SkPoint(%"class.skottie::internal::(anonymous namespace)::DisplacementNode"* nocapture readnone, %struct.SkPoint* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret %"class.sksg::RenderNode"* null
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.61* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"*) unnamed_addr #9

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.58* sret, %class.SkPicture*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN22SkRuntimeShaderBuilderC1E5sk_spI15SkRuntimeEffectE(%class.SkRuntimeShaderBuilder*, %class.sk_sp.82*) unnamed_addr #2

declare void @_ZN22SkRuntimeShaderBuilder10makeShaderEPK8SkMatrixb(%class.sk_sp.58* sret, %class.SkRuntimeShaderBuilder*, %class.SkMatrix*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkRuntimeShaderBuilderD1Ev(%class.SkRuntimeShaderBuilder*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #2

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #2

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.77* sret, %class.SkPictureRecorder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #9

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

declare void @_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect*, i8*) local_unnamed_addr #2

declare %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect*, i8*) local_unnamed_addr #2

declare i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp.117, align 8
  %3 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.sk_sp.117, %class.sk_sp.117* %3, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %38, label %9

9:                                                ; preds = %1
  %10 = bitcast %class.sk_sp.117* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = load %class.SkData*, %class.SkData** %4, align 8
  %12 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.117* nonnull sret %2, i8* %13, i64 %15) #15
  %16 = getelementptr inbounds %class.sk_sp.117, %class.sk_sp.117* %2, i64 0, i32 0
  %17 = bitcast %class.sk_sp.117* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkData* null, %class.SkData** %16, align 8
  %19 = load %class.SkData*, %class.SkData** %4, align 8
  %20 = bitcast %class.sk_sp.117* %3 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %class.SkData* %19, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %19) #15
  %27 = bitcast %class.SkData* %19 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %27) #15
  br label %28

28:                                               ; preds = %22, %26
  %29 = load %class.SkData*, %class.SkData** %16, align 8
  %30 = icmp eq %class.SkData* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkData, %class.SkData* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %29) #15
  %36 = bitcast %class.SkData* %29 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %36) #15
  br label %37

37:                                               ; preds = %9, %28, %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  br label %38

38:                                               ; preds = %37, %1
  %39 = load %class.SkData*, %class.SkData** %4, align 8
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %39, i64 0, i32 3
  %41 = load i8*, i8** %40, align 8
  ret i8* %41
}

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.117* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #9

declare void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #2

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext12setIsolationERK6SkRectRK8SkMatrixb(%"class.sksg::RenderNode::ScopedRenderContext"*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i1 zeroext) local_unnamed_addr #2

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"*, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %5 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %7 = bitcast %class.SkMatrix* %4 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 40, i1 false) #15
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %11 = bitcast %class.SkMatrix* %9 to i8*
  %12 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 40, i1 false) #15
  %13 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %13, align 8
  %14 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %15, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %16, align 8
  %17 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"struct.sksg::RenderNode::RenderContext"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  %24 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %3, i64 0, i32 0, i32 0
  %25 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %26 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.SkColorFilter* %25, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorFilter* %25 to %class.SkRefCntBase*
  %34 = bitcast %class.SkColorFilter* %25 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  tail call void %37(%class.SkRefCntBase* nonnull %33) #15
  br label %38

38:                                               ; preds = %32, %28, %2
  %39 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %40, i64 0, i32 0
  %42 = bitcast %class.sk_sp.58* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkShader* null, %class.SkShader** %41, align 8
  %44 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %39, i64 0, i32 0
  %45 = load %class.SkShader*, %class.SkShader** %44, align 8
  %46 = bitcast %class.sk_sp.58* %39 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkShader* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %45 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %45 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #15
  br label %58

58:                                               ; preds = %52, %48, %38
  %59 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %60 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %60, i64 0, i32 0
  %62 = bitcast %class.sk_sp.58* %60 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkShader* null, %class.SkShader** %61, align 8
  %64 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %59, i64 0, i32 0
  %65 = load %class.SkShader*, %class.SkShader** %64, align 8
  %66 = bitcast %class.sk_sp.58* %59 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %class.SkShader* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %74 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #15
  br label %78

78:                                               ; preds = %58, %68, %72
  %79 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 3
  %80 = bitcast %class.SkMatrix* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %80, i64 88, i1 false) #15
  %81 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 2
  %82 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %81, i64 0, i32 0
  %83 = bitcast %class.sk_sp.58* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkShader* null, %class.SkShader** %82, align 8
  %85 = load %class.SkShader*, %class.SkShader** %16, align 8
  %86 = bitcast %class.sk_sp.58* %15 to i64*
  store i64 %84, i64* %86, align 8
  %87 = icmp eq %class.SkShader* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  tail call void %97(%class.SkRefCntBase* nonnull %93) #15
  br label %98

98:                                               ; preds = %78, %88, %92
  %99 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  store i32 %100, i32* %101, align 8
  store i32 -1, i32* %99, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"*) unnamed_addr #9

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.58*) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #9

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"*) unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #16
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %2, align 8
  %4 = icmp eq %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %3, null
  br i1 %4, label %76, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 3
  %7 = bitcast float* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 8
  %9 = extractelement <2 x float> %8, i32 0
  %10 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %3, i64 0, i32 5
  %11 = getelementptr inbounds %struct.SkV2, %struct.SkV2* %10, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %12, %9
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = extractelement <2 x float> %8, i32 1
  %16 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %3, i64 0, i32 5, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %17, %15
  br i1 %18, label %23, label %19

19:                                               ; preds = %14, %5
  %20 = bitcast %struct.SkV2* %10 to <2 x float>*
  store <2 x float> %8, <2 x float>* %20, align 8
  %21 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* nonnull %21, i1 zeroext true) #15
  %22 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %2, align 8
  br label %23

23:                                               ; preds = %14, %19
  %24 = phi %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* [ %3, %14 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 6
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %26, 0.000000e+00
  %28 = select i1 %27, i32 1, i32 3
  %29 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %24, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, %28
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  store i32 %28, i32* %29, align 8
  %33 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %24 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %33, i1 zeroext true) #15
  %34 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %2, align 8
  br label %35

35:                                               ; preds = %23, %32
  %36 = phi %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* [ %24, %23 ], [ %34, %32 ]
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 5
  %38 = load float, float* %37, align 8
  %39 = fptoui float %38 to i32
  %40 = add i32 %39, -1
  %41 = icmp ult i32 %40, 2
  %42 = select i1 %41, i32 %40, i32 2
  %43 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %36, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %42
  br i1 %45, label %49, label %46

46:                                               ; preds = %35
  store i32 %42, i32* %43, align 4
  %47 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %36 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %47, i1 zeroext true) #15
  %48 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %2, align 8
  br label %49

49:                                               ; preds = %35, %46
  %50 = phi %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* [ %36, %35 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 1
  %52 = load float, float* %51, align 8
  %53 = fptoui float %52 to i32
  %54 = add i32 %53, -1
  %55 = icmp ult i32 %54, 10
  %56 = select i1 %55, i32 %54, i32 10
  %57 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %50, i64 0, i32 8
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, %56
  br i1 %59, label %63, label %60

60:                                               ; preds = %49
  store i32 %56, i32* %57, align 8
  %61 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %50 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %61, i1 zeroext true) #15
  %62 = load %"class.skottie::internal::(anonymous namespace)::DisplacementNode"*, %"class.skottie::internal::(anonymous namespace)::DisplacementNode"** %2, align 8
  br label %63

63:                                               ; preds = %49, %60
  %64 = phi %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* [ %50, %49 ], [ %62, %60 ]
  %65 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter", %"class.skottie::internal::(anonymous namespace)::DisplacementMapAdapter"* %0, i64 0, i32 2
  %66 = load float, float* %65, align 4
  %67 = fptoui float %66 to i32
  %68 = add i32 %67, -1
  %69 = icmp ult i32 %68, 10
  %70 = select i1 %69, i32 %68, i32 10
  %71 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DisplacementNode", %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %64, i64 0, i32 9
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %70
  br i1 %73, label %76, label %74

74:                                               ; preds = %63
  store i32 %70, i32* %71, align 4
  %75 = bitcast %"class.skottie::internal::(anonymous namespace)::DisplacementNode"* %64 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %75, i1 zeroext true) #15
  br label %76

76:                                               ; preds = %1, %74, %63
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #14 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !55

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #15
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #16
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nofree nounwind }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapter21GetDisplacementSourceERKN6skjson10ArrayValueEPKNS0_13EffectBuilderE: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal12_GLOBAL__N_122DisplacementMapAdapter21GetDisplacementSourceERKN6skjson10ArrayValueEPKNS0_13EffectBuilderE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNSt3__110make_tupleIJRK5sk_spIN4sksg10RenderNodeEERK6SkSizeEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSC_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__110make_tupleIJRK5sk_spIN4sksg10RenderNodeEERK6SkSizeEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSC_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode4MakeE5sk_spIN4sksg10RenderNodeEERK6SkSizeS6_S9_: argument 0"}
!10 = distinct !{!10, !"_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode4MakeE5sk_spIN4sksg10RenderNodeEERK6SkSizeS6_S9_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEE4MakeIJRKN6skjson10ArrayValueERKPKNS0_16AnimationBuilderE5sk_spIS4_EEEESG_IS3_EDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122DisplacementMapAdapterENS2_16DisplacementNodeEE4MakeIJRKN6skjson10ArrayValueERKPKNS0_16AnimationBuilderE5sk_spIS4_EEEESG_IS3_EDpOT_"}
!14 = distinct !{!14, !15, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_122DisplacementMapAdapterEJRKN6skjson10ArrayValueERKPKS1_5sk_spINS3_16DisplacementNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSJ_: argument 0"}
!15 = distinct !{!15, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_122DisplacementMapAdapterEJRKN6skjson10ArrayValueERKPKS1_5sk_spINS3_16DisplacementNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSJ_"}
!16 = !{!14}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrix: argument 0"}
!19 = distinct !{!19, !"_ZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrix"}
!20 = !{!21, !18}
!21 = distinct !{!21, !22, !"_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_: argument 0"}
!22 = distinct !{!22, !"_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_"}
!23 = !{!21}
!24 = !{!25, !18}
!25 = distinct !{!25, !26, !"_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_: argument 0"}
!26 = distinct !{!26, !"_ZZN7skottie8internal12_GLOBAL__N_116DisplacementNode17buildEffectShaderEPN4sksg22InvalidationControllerERK8SkMatrixENKUlRK5sk_spINS3_10RenderNodeEES5_S8_E_clESD_S5_S8_"}
!27 = !{!25}
!28 = !{!29, !18}
!29 = distinct !{!29, !30, !"_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode18displacementMatrixEv: argument 0"}
!30 = distinct !{!30, !"_ZNK7skottie8internal12_GLOBAL__N_116DisplacementNode18displacementMatrixEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!33 = distinct !{!33, !"_ZN8SkMatrix9TranslateEff"}
!34 = !{!35, !29}
!35 = distinct !{!35, !36, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!36 = distinct !{!36, !"_ZN8SkMatrix5ScaleEff"}
!37 = !{!38, !18}
!38 = distinct !{!38, !39, !"_ZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEv: argument 0"}
!39 = distinct !{!39, !"_ZN7skottie8internal12_GLOBAL__N_129displacement_effect_singletonEv"}
!40 = !{!"branch_weights", i32 1, i32 1048575}
!41 = !{!38}
!42 = !{!43, !38}
!43 = distinct !{!43, !44, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkString: argument 0"}
!44 = distinct !{!44, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkString"}
!45 = !{!43, !38, !18}
!46 = !{!47, !38}
!47 = distinct !{!47, !48, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!48 = distinct !{!48, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!49 = !{!50, !18}
!50 = distinct !{!50, !51, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE5childEPKc: argument 0"}
!51 = distinct !{!51, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE5childEPKc"}
!52 = !{!53, !18}
!53 = distinct !{!53, !54, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE5childEPKc: argument 0"}
!54 = distinct !{!54, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE5childEPKc"}
!55 = distinct !{!55, !56}
!56 = !{!"llvm.loop.unroll.disable"}
