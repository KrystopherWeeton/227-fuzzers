; ModuleID = '../../third_party/blink/renderer/modules/service_worker/message_from_service_worker.cc'
source_filename = "../../third_party/blink/renderer/modules/service_worker/message_from_service_worker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::MessageFromServiceWorker" = type { i32 (...)**, %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::TransferableMessage" }
%"struct.blink::WebServiceWorkerObjectInfo" = type { i64, i32, [4 x i8], %"class.blink::WebURL", %"class.blink::CrossVariantMojoAssociatedRemote", %"class.blink::CrossVariantMojoAssociatedReceiver" }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.blink::CrossVariantMojoAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"struct.blink::TransferableMessage" = type <{ %"struct.blink::CloneableMessage", %"class.std::__1::vector.36", %"class.std::__1::vector.36", %"class.std::__1::vector.44", %"class.std::__1::vector.77", %"class.mojo::InlinedStructPtr", i8, [7 x i8] }>
%"struct.blink::CloneableMessage" = type { %"class.base::span", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.absl::optional", i64, i64, i64, i8, %"class.absl::optional.23", %"class.std::__1::vector.28" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.12" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::mojom::SerializedBlob"* }
%"class.blink::mojom::SerializedBlob" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.mojo::PendingRemote" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.mojo::StructPtr"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.18" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.mojo::PendingRemote.30"*, %"class.mojo::PendingRemote.30"*, %"class.std::__1::__compressed_pair.31" }
%"class.mojo::PendingRemote.30" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.mojo::PendingRemote.30"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*, %"class.std::__1::__compressed_pair.39" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::MessagePortChannel"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.mojo::StructPtr.46"*, %"class.mojo::StructPtr.46"*, %"class.std::__1::__compressed_pair.72" }
%"class.mojo::StructPtr.46" = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::mojom::SerializedArrayBufferContents"* }
%"class.blink::mojom::SerializedArrayBufferContents" = type { %"class.mojo_base::BigBuffer" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.50", i64, %"class.absl::optional.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.60", %"class.std::__1::unique_ptr.61" }
%"class.mojo::ScopedHandleBase.60" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.mojo::StructPtr.46"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.87" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.86 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.79, i32, i32 }
%class.sk_sp.79 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.81" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.86 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.SkBitmap* }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::UserActivationSnapshot", i32 }
%"class.blink::mojom::UserActivationSnapshot" = type { i8, i8 }

@_ZTVN5blink24MessageFromServiceWorkerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.blink::MessageFromServiceWorker"*)* @_ZN5blink24MessageFromServiceWorkerD2Ev to i8*), i8* bitcast (void (%"struct.blink::MessageFromServiceWorker"*)* @_ZN5blink24MessageFromServiceWorkerD0Ev to i8*)] }, align 8

@_ZN5blink24MessageFromServiceWorkerC1ENS_26WebServiceWorkerObjectInfoENS_19TransferableMessageE = hidden unnamed_addr alias void (%"struct.blink::MessageFromServiceWorker"*, %"struct.blink::WebServiceWorkerObjectInfo"*, %"struct.blink::TransferableMessage"*), void (%"struct.blink::MessageFromServiceWorker"*, %"struct.blink::WebServiceWorkerObjectInfo"*, %"struct.blink::TransferableMessage"*)* @_ZN5blink24MessageFromServiceWorkerC2ENS_26WebServiceWorkerObjectInfoENS_19TransferableMessageE
@_ZN5blink24MessageFromServiceWorkerD1Ev = hidden unnamed_addr alias void (%"struct.blink::MessageFromServiceWorker"*), void (%"struct.blink::MessageFromServiceWorker"*)* @_ZN5blink24MessageFromServiceWorkerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MessageFromServiceWorkerC2ENS_26WebServiceWorkerObjectInfoENS_19TransferableMessageE(%"struct.blink::MessageFromServiceWorker"*, %"struct.blink::WebServiceWorkerObjectInfo"*, %"struct.blink::TransferableMessage"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink24MessageFromServiceWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1
  %6 = bitcast %"struct.blink::WebServiceWorkerObjectInfo"* %5 to i8*
  %7 = bitcast %"struct.blink::WebServiceWorkerObjectInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 12, i1 false) #5
  %8 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 0
  %9 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %8, %"class.blink::WebString"* dereferenceable(8) %9) #5
  %10 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 1
  %11 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 3, i32 1
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %10, %"struct.url::Parsed"* dereferenceable(80) %11) #5
  %12 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 2
  %13 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 3, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 4, i32 0
  %16 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 4, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 4, i32 1
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %18, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %19) #5
  %20 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 5, i32 0
  %21 = getelementptr inbounds %"struct.blink::WebServiceWorkerObjectInfo", %"struct.blink::WebServiceWorkerObjectInfo"* %1, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %20, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %21) #5
  %22 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 2
  tail call void @_ZN5blink19TransferableMessageC1EOS0_(%"struct.blink::TransferableMessage"* %22, %"struct.blink::TransferableMessage"* dereferenceable(344) %2) #5
  ret void
}

declare void @_ZN5blink19TransferableMessageC1EOS0_(%"struct.blink::TransferableMessage"*, %"struct.blink::TransferableMessage"* dereferenceable(344)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MessageFromServiceWorkerD2Ev(%"struct.blink::MessageFromServiceWorker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink24MessageFromServiceWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 2
  tail call void @_ZN5blink19TransferableMessageD1Ev(%"struct.blink::TransferableMessage"* %3) #5
  %4 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 5, i32 0
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %4) #5
  %5 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 4, i32 1
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %5) #5
  %6 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 1
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %6) #5
  %7 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %7) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink19TransferableMessageD1Ev(%"struct.blink::TransferableMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MessageFromServiceWorkerD0Ev(%"struct.blink::MessageFromServiceWorker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink24MessageFromServiceWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 2
  tail call void @_ZN5blink19TransferableMessageD1Ev(%"struct.blink::TransferableMessage"* %3) #5
  %4 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 5, i32 0
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %4) #5
  %5 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 4, i32 1
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %5) #5
  %6 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 1
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %6) #5
  %7 = getelementptr inbounds %"struct.blink::MessageFromServiceWorker", %"struct.blink::MessageFromServiceWorker"* %0, i64 0, i32 1, i32 3, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %7) #5
  %8 = bitcast %"struct.blink::MessageFromServiceWorker"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
