; ModuleID = '../../ui/gl/dual_gpu_state.cc'
source_filename = "../../ui/gl/dual_gpu_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::DualGPUState" = type { i32 (...)**, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gl::GLContext"**, %"class.gl::GLContext"**, %"class.std::__1::__compressed_pair" }
%"class.gl::GLContext" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gl::GLContext"** }
%"struct.std::__1::__split_buffer" = type { %"class.gl::GLContext"**, %"class.gl::GLContext"**, %"class.gl::GLContext"**, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIPN2gl9GLContextENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN2gl9GLContextERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZTVN2gl12DualGPUStateE = comdat any

@_ZTVN2gl12DualGPUStateE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN2gl12DualGPUStateD1Ev = hidden unnamed_addr alias void (%"class.gl::DualGPUState"*), void (%"class.gl::DualGPUState"*)* @_ZN2gl12DualGPUStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12DualGPUStateC2Ev(%"class.gl::DualGPUState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl12DualGPUStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::internal::flat_tree"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12DualGPUStateD2Ev(%"class.gl::DualGPUState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl12DualGPUStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %3, align 8
  %5 = icmp eq %"class.gl::GLContext"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.gl::GLContext"** %4 to i64
  %8 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.gl::GLContext"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.gl::GLContext"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12DualGPUState30RegisterHighPerformanceContextEPNS_9GLContextE(%"class.gl::DualGPUState"*, %"class.gl::GLContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gl::GLContext"*, align 8
  store %"class.gl::GLContext"* %1, %"class.gl::GLContext"** %3, align 8
  %4 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %5, align 8
  %7 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"class.gl::GLContext"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.gl::GLContext"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.gl::GLContext"**
  br i1 %12, label %29, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.gl::GLContext"** [ %6, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %26, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %17, i64 %19
  %21 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %20, align 8
  %22 = icmp ult %"class.gl::GLContext"* %21, %1
  %23 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %20, i64 1
  %24 = xor i64 %19, -1
  %25 = add i64 %18, %24
  %26 = select i1 %22, i64 %25, i64 %19
  %27 = select i1 %22, %"class.gl::GLContext"** %23, %"class.gl::GLContext"** %17
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %2
  %30 = phi %"class.gl::GLContext"** [ %6, %2 ], [ %27, %16 ]
  %31 = icmp eq %"class.gl::GLContext"** %30, %13
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %30, align 8
  %34 = icmp ugt %"class.gl::GLContext"* %33, %1
  br i1 %34, label %35, label %73

35:                                               ; preds = %32, %29
  %36 = bitcast %"class.gl::DualGPUState"* %0 to void (%"class.gl::DualGPUState"*)***
  %37 = load void (%"class.gl::DualGPUState"*)**, void (%"class.gl::DualGPUState"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gl::DualGPUState"*)*, void (%"class.gl::DualGPUState"*)** %37, i64 3
  %39 = load void (%"class.gl::DualGPUState"*)*, void (%"class.gl::DualGPUState"*)** %38, align 8
  tail call void %39(%"class.gl::DualGPUState"* %0) #6
  %40 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %5, align 8
  %41 = load i64, i64* %8, align 8
  %42 = ptrtoint %"class.gl::GLContext"** %40 to i64
  %43 = sub i64 %41, %42
  %44 = icmp eq i64 %43, 0
  %45 = inttoptr i64 %41 to %"class.gl::GLContext"**
  br i1 %44, label %61, label %46

46:                                               ; preds = %35
  %47 = ashr exact i64 %43, 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi %"class.gl::GLContext"** [ %40, %46 ], [ %59, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %58, %48 ]
  %51 = lshr i64 %50, 1
  %52 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %49, i64 %51
  %53 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %52, align 8
  %54 = icmp ult %"class.gl::GLContext"* %53, %1
  %55 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %52, i64 1
  %56 = xor i64 %51, -1
  %57 = add i64 %50, %56
  %58 = select i1 %54, i64 %57, i64 %51
  %59 = select i1 %54, %"class.gl::GLContext"** %55, %"class.gl::GLContext"** %49
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %48, %35
  %62 = phi %"class.gl::GLContext"** [ %40, %35 ], [ %59, %48 ]
  %63 = icmp eq %"class.gl::GLContext"** %62, %45
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %62, align 8
  %66 = icmp ugt %"class.gl::GLContext"* %65, %1
  br i1 %66, label %67, label %70

67:                                               ; preds = %64, %61
  %68 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0
  %69 = call %"class.gl::GLContext"** @_ZNSt3__16vectorIPN2gl9GLContextENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector"* %68, %"class.gl::GLContext"** %62, %"class.gl::GLContext"** nonnull dereferenceable(8) %3) #6
  br label %70

70:                                               ; preds = %64, %67
  %71 = load void (%"class.gl::DualGPUState"*)**, void (%"class.gl::DualGPUState"*)*** %36, align 8
  %72 = load void (%"class.gl::DualGPUState"*)*, void (%"class.gl::DualGPUState"*)** %71, align 8
  call void %72(%"class.gl::DualGPUState"* %0) #6
  br label %73

73:                                               ; preds = %32, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12DualGPUState28RemoveHighPerformanceContextEPNS_9GLContextE(%"class.gl::DualGPUState"*, %"class.gl::GLContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %3, align 8
  %5 = getelementptr inbounds %"class.gl::DualGPUState", %"class.gl::DualGPUState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.gl::GLContext"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.gl::GLContext"** %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.gl::GLContext"**
  br i1 %10, label %27, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.gl::GLContext"** [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %15, i64 %17
  %19 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %18, align 8
  %20 = icmp ult %"class.gl::GLContext"* %19, %1
  %21 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, %"class.gl::GLContext"** %21, %"class.gl::GLContext"** %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14, %2
  %28 = phi %"class.gl::GLContext"** [ %4, %2 ], [ %25, %14 ]
  %29 = icmp eq %"class.gl::GLContext"** %28, %11
  br i1 %29, label %85, label %30

30:                                               ; preds = %27
  %31 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, align 8
  %32 = icmp ugt %"class.gl::GLContext"* %31, %1
  br i1 %32, label %85, label %33

33:                                               ; preds = %30
  br i1 %10, label %51, label %34

34:                                               ; preds = %33
  %35 = ashr exact i64 %9, 3
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi %"class.gl::GLContext"** [ %4, %34 ], [ %47, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %46, %36 ]
  %39 = lshr i64 %38, 1
  %40 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %37, i64 %39
  %41 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %40, align 8
  %42 = icmp ult %"class.gl::GLContext"* %41, %1
  %43 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %40, i64 1
  %44 = xor i64 %39, -1
  %45 = add i64 %38, %44
  %46 = select i1 %42, i64 %45, i64 %39
  %47 = select i1 %42, %"class.gl::GLContext"** %43, %"class.gl::GLContext"** %37
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %36

49:                                               ; preds = %36
  %50 = ptrtoint %"class.gl::GLContext"** %47 to i64
  br label %51

51:                                               ; preds = %49, %33
  %52 = phi i64 [ %50, %49 ], [ %8, %33 ]
  %53 = phi %"class.gl::GLContext"** [ %47, %49 ], [ %4, %33 ]
  %54 = icmp eq %"class.gl::GLContext"** %53, %11
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %53, align 8
  %57 = icmp ugt %"class.gl::GLContext"* %56, %1
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %53, i64 1
  %60 = ptrtoint %"class.gl::GLContext"** %59 to i64
  br label %61

61:                                               ; preds = %58, %55, %51
  %62 = phi i64 [ %60, %58 ], [ %52, %51 ], [ %52, %55 ]
  %63 = inttoptr i64 %62 to %"class.gl::GLContext"**
  %64 = icmp eq %"class.gl::GLContext"** %53, %63
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = sub i64 %7, %62
  %67 = ashr exact i64 %66, 3
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.gl::GLContext"** %53 to i8*
  %71 = inttoptr i64 %62 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %66, i1 false) #6
  %72 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %3, align 8
  br label %73

73:                                               ; preds = %69, %65
  %74 = phi %"class.gl::GLContext"** [ %72, %69 ], [ %4, %65 ]
  %75 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %53, i64 %67
  store %"class.gl::GLContext"** %75, %"class.gl::GLContext"*** %5, align 8
  br label %76

76:                                               ; preds = %61, %73
  %77 = phi %"class.gl::GLContext"** [ %11, %61 ], [ %75, %73 ]
  %78 = phi %"class.gl::GLContext"** [ %4, %61 ], [ %74, %73 ]
  %79 = icmp eq %"class.gl::GLContext"** %78, %77
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = bitcast %"class.gl::DualGPUState"* %0 to void (%"class.gl::DualGPUState"*)***
  %82 = load void (%"class.gl::DualGPUState"*)**, void (%"class.gl::DualGPUState"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.gl::DualGPUState"*)*, void (%"class.gl::DualGPUState"*)** %82, i64 2
  %84 = load void (%"class.gl::DualGPUState"*)*, void (%"class.gl::DualGPUState"*)** %83, align 8
  tail call void %84(%"class.gl::DualGPUState"* %0) #6
  br label %85

85:                                               ; preds = %30, %27, %80, %76
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::GLContext"** @_ZNSt3__16vectorIPN2gl9GLContextENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector"*, %"class.gl::GLContext"**, %"class.gl::GLContext"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gl::GLContext"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %9, align 8
  %11 = icmp ult %"class.gl::GLContext"** %8, %10
  %12 = ptrtoint %"class.gl::GLContext"** %8 to i64
  %13 = ptrtoint %"class.gl::GLContext"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.gl::GLContext"** %8, %1
  %16 = bitcast %"class.gl::GLContext"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.gl::GLContext"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %1, i64 1
  %21 = ptrtoint %"class.gl::GLContext"** %20 to i64
  %22 = bitcast %"class.gl::GLContext"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %1, i64 1
  %25 = ptrtoint %"class.gl::GLContext"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %1, i64 %27
  %29 = bitcast %"class.gl::GLContext"*** %7 to i64*
  %30 = icmp ult %"class.gl::GLContext"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %32
  %34 = bitcast %"class.gl::GLContext"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.gl::GLContext"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.gl::GLContext"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %45
  %47 = bitcast %"class.gl::GLContext"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %1, i64 %55
  %57 = icmp ult %"class.gl::GLContext"** %8, %56
  %58 = icmp ult %"class.gl::GLContext"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %61
  %63 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %72
  %75 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %72
  %76 = bitcast %"class.gl::GLContext"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !2
  %78 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %75, i64 2
  %79 = bitcast %"class.gl::GLContext"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !2
  %81 = bitcast %"class.gl::GLContext"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !5, !noalias !2
  %82 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %74, i64 2
  %83 = bitcast %"class.gl::GLContext"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !5, !noalias !2
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %84
  %86 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %84
  %87 = bitcast %"class.gl::GLContext"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !2
  %89 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %86, i64 2
  %90 = bitcast %"class.gl::GLContext"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !2
  %92 = bitcast %"class.gl::GLContext"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !5, !noalias !2
  %93 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %85, i64 2
  %94 = bitcast %"class.gl::GLContext"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !5, !noalias !2
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %95
  %97 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %95
  %98 = bitcast %"class.gl::GLContext"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !2
  %100 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %97, i64 2
  %101 = bitcast %"class.gl::GLContext"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !2
  %103 = bitcast %"class.gl::GLContext"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !5, !noalias !2
  %104 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %96, i64 2
  %105 = bitcast %"class.gl::GLContext"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !5, !noalias !2
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %106
  %108 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %106
  %109 = bitcast %"class.gl::GLContext"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !2
  %111 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %108, i64 2
  %112 = bitcast %"class.gl::GLContext"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !2
  %114 = bitcast %"class.gl::GLContext"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !5, !noalias !2
  %115 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %107, i64 2
  %116 = bitcast %"class.gl::GLContext"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !5, !noalias !2
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !7

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %124
  %127 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %28, i64 %124
  %128 = bitcast %"class.gl::GLContext"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !2
  %130 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %127, i64 2
  %131 = bitcast %"class.gl::GLContext"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !2
  %133 = bitcast %"class.gl::GLContext"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !5, !noalias !2
  %134 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %126, i64 2
  %135 = bitcast %"class.gl::GLContext"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !5, !noalias !2
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !9

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.gl::GLContext"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.gl::GLContext"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, i64 %148
  %150 = bitcast %"class.gl::GLContext"** %149 to i8*
  %151 = bitcast %"class.gl::GLContext"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #6
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.gl::GLContext"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.gl::GLContext"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.gl::GLContext"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.gl::GLContext"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %154, i64 1
  %159 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %153, i64 1
  %160 = icmp ult %"class.gl::GLContext"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !11

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.gl::GLContext"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #6
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.gl::GLContext"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #8
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.gl::GLContext"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.gl::GLContext"** null, %"class.gl::GLContext"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator"** %170 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %164, %"class.std::__1::__compressed_pair"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.gl::GLContext"** null, %"class.gl::GLContext"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator"** %170 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %164, %"class.std::__1::__compressed_pair"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #8
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #7
  %206 = bitcast i8* %205 to %"class.gl::GLContext"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.gl::GLContext"** [ %206, %201 ], [ null, %190 ]
  store %"class.gl::GLContext"** %210, %"class.gl::GLContext"*** %166, align 8
  %211 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %210, i64 %208
  store %"class.gl::GLContext"** %211, %"class.gl::GLContext"*** %168, align 8
  store %"class.gl::GLContext"** %211, %"class.gl::GLContext"*** %167, align 8
  %212 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %210, i64 %209
  store %"class.gl::GLContext"** %212, %"class.gl::GLContext"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN2gl9GLContextERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.gl::GLContext"** dereferenceable(8) %2)
  %213 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %167, align 8
  %214 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %6, align 8
  %215 = ptrtoint %"class.gl::GLContext"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %213, i64 %218
  store %"class.gl::GLContext"** %219, %"class.gl::GLContext"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.gl::GLContext"** %219 to i8*
  %223 = bitcast %"class.gl::GLContext"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #6
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %7, align 8
  %226 = icmp eq %"class.gl::GLContext"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.gl::GLContext"** %225 to i64
  %229 = bitcast %"class.gl::GLContext"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.gl::GLContext"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %225, i64 -1
  %235 = ptrtoint %"class.gl::GLContext"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.gl::GLContext"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.gl::GLContext"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %243, i64 1
  %248 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %168, align 8
  %249 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %248, i64 1
  store %"class.gl::GLContext"** %249, %"class.gl::GLContext"*** %168, align 8
  %250 = bitcast %"class.gl::GLContext"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !12

253:                                              ; preds = %241
  %254 = bitcast %"class.gl::GLContext"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.gl::GLContext"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.gl::GLContext"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.gl::GLContext"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.gl::GLContext"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %262, i64 1
  %266 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %168, align 8
  %267 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %266, i64 1
  store %"class.gl::GLContext"** %267, %"class.gl::GLContext"*** %168, align 8
  %268 = bitcast %"class.gl::GLContext"** %267 to i64*
  %269 = bitcast %"class.gl::GLContext"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %262, i64 2
  %272 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %168, align 8
  %273 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %272, i64 1
  store %"class.gl::GLContext"** %273, %"class.gl::GLContext"*** %168, align 8
  %274 = bitcast %"class.gl::GLContext"** %273 to i64*
  %275 = bitcast %"class.gl::GLContext"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %262, i64 3
  %278 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %168, align 8
  %279 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %278, i64 1
  store %"class.gl::GLContext"** %279, %"class.gl::GLContext"*** %168, align 8
  %280 = bitcast %"class.gl::GLContext"** %279 to i64*
  %281 = bitcast %"class.gl::GLContext"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %262, i64 4
  %284 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %168, align 8
  %285 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %284, i64 1
  store %"class.gl::GLContext"** %285, %"class.gl::GLContext"*** %168, align 8
  %286 = icmp eq %"class.gl::GLContext"** %283, %225
  %287 = bitcast %"class.gl::GLContext"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.gl::GLContext"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.gl::GLContext"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.gl::GLContext"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.gl::GLContext"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.gl::GLContext"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.gl::GLContext"**
  %305 = inttoptr i64 %296 to %"class.gl::GLContext"**
  %306 = icmp eq %"class.gl::GLContext"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %305, i64 -1
  %309 = ptrtoint %"class.gl::GLContext"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.gl::GLContext"*, %"class.gl::GLContext"** %305, i64 %312
  store %"class.gl::GLContext"** %313, %"class.gl::GLContext"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #7
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #6
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.gl::GLContext"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.gl::GLContext"** %320
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2gl9GLContextERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.gl::GLContext"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %5, align 8
  %7 = icmp eq %"class.gl::GLContext"** %4, %6
  %8 = ptrtoint %"class.gl::GLContext"** %6 to i64
  %9 = bitcast %"class.gl::GLContext"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %13, align 8
  %15 = icmp ugt %"class.gl::GLContext"** %12, %14
  %16 = ptrtoint %"class.gl::GLContext"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.gl::GLContext"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %12, i64 %22
  %24 = ptrtoint %"class.gl::GLContext"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.gl::GLContext"** %23 to i8*
  %30 = bitcast %"class.gl::GLContext"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #6
  %31 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.gl::GLContext"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %23, i64 %26
  store %"class.gl::GLContext"** %34, %"class.gl::GLContext"*** %3, align 8
  %35 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %33, i64 %22
  store %"class.gl::GLContext"** %35, %"class.gl::GLContext"*** %11, align 8
  %36 = bitcast %"class.gl::GLContext"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.gl::GLContext"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #8
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #7
  %50 = bitcast i8* %49 to %"class.gl::GLContext"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %50, i64 %47
  %53 = ptrtoint %"class.gl::GLContext"** %52 to i64
  %54 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %50, i64 %43
  %55 = ptrtoint %"class.gl::GLContext"** %54 to i64
  %56 = ptrtoint %"class.gl::GLContext"** %12 to i64
  %57 = ptrtoint %"class.gl::GLContext"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.gl::GLContext"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.gl::GLContext"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.gl::GLContext"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %69, i64 1
  %77 = ptrtoint %"class.gl::GLContext"** %76 to i64
  %78 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !13

81:                                               ; preds = %68
  %82 = ptrtoint %"class.gl::GLContext"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.gl::GLContext"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.gl::GLContext"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.gl::GLContext"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.gl::GLContext"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.gl::GLContext"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 1
  %96 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 1
  %97 = bitcast %"class.gl::GLContext"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.gl::GLContext"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 2
  %101 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 2
  %102 = bitcast %"class.gl::GLContext"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.gl::GLContext"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 3
  %106 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 3
  %107 = bitcast %"class.gl::GLContext"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.gl::GLContext"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 4
  %111 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 4
  %112 = bitcast %"class.gl::GLContext"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.gl::GLContext"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 5
  %116 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 5
  %117 = bitcast %"class.gl::GLContext"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.gl::GLContext"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 6
  %121 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 6
  %122 = bitcast %"class.gl::GLContext"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.gl::GLContext"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 7
  %126 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 7
  %127 = bitcast %"class.gl::GLContext"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.gl::GLContext"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %89, i64 8
  %131 = ptrtoint %"class.gl::GLContext"** %130 to i64
  %132 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %91, i64 8
  %133 = icmp eq %"class.gl::GLContext"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.gl::GLContext"** %60 to i64
  %136 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.gl::GLContext"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.gl::GLContext"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.gl::GLContext"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.gl::GLContext"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.gl::GLContext"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #7
  %146 = bitcast %"class.gl::GLContext"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.gl::GLContext"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.gl::GLContext"**, %"class.gl::GLContext"*** %3, align 8
  %153 = getelementptr inbounds %"class.gl::GLContext"*, %"class.gl::GLContext"** %152, i64 1
  store %"class.gl::GLContext"** %153, %"class.gl::GLContext"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
