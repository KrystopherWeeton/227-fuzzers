; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLPrefixExpression.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLPrefixExpression.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::Operator" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Literal" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::Literal.58" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::PrefixExpression" = type { %"class.SkSL::Expression", %"class.SkSL::Operator", %"class.std::__1::unique_ptr" }
%"class.SkSL::Literal.62" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZN4SkSL7LiteralIfED0Ev = comdat any

$_ZNK4SkSL7LiteralIfE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIfE5cloneEv = comdat any

$_ZNK4SkSL10Expression21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL10Expression15compareConstantERKS0_ = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL10Expression24getConstantSubexpressionEi = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN4SkSL16PrefixExpressionD2Ev = comdat any

$_ZN4SkSL16PrefixExpressionD0Ev = comdat any

$_ZNK4SkSL16PrefixExpression11descriptionEv = comdat any

$_ZNK4SkSL16PrefixExpression11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL16PrefixExpression5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZTVN4SkSL7LiteralIfEE = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL16PrefixExpressionE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

@.str = private unnamed_addr constant [24 x i8] c"'+' cannot operate on '\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"'-' cannot operate on '\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"' cannot operate on '\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"operator '\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"' is not allowed\00", align 1
@.str.6 = private unnamed_addr constant [60 x i8] c"../../third_party/skia/src/sksl/ir/SkSLPrefixExpression.cpp\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"unsupported prefix operator\00", align 1
@_ZTVN4SkSL7LiteralIfEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIfED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.58"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.58"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.58"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.58"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.58"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal.58"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.58"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.58"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL16PrefixExpressionE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::PrefixExpression"*)* @_ZN4SkSL16PrefixExpressionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::PrefixExpression"*)* @_ZN4SkSL16PrefixExpressionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::PrefixExpression"*)* @_ZNK4SkSL16PrefixExpression11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::PrefixExpression"*, i32)* @_ZNK4SkSL16PrefixExpression11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::PrefixExpression"*)* @_ZNK4SkSL16PrefixExpression5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.62"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.62"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.62"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.62"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.62"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.62"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.62"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"false\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression7ConvertERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %1, i32* %32, align 4
  %33 = ptrtoint %"class.SkSL::Expression"* %2 to i64
  %34 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %35 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %35, i64 3
  %37 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %36, align 8
  %38 = tail call dereferenceable(184) %"class.SkSL::Type"* %37(%"class.SkSL::Expression"* %2) #7
  switch i32 %1, label %539 [
    i32 46, label %39
    i32 47, label %112
    i32 44, label %185
    i32 45, label %185
    i32 60, label %286
    i32 56, label %385
  ]

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 6
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  %42 = icmp eq %"class.SkSL::Type"* %41, null
  %43 = select i1 %42, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %41
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %43, i64 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %540, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %49 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #7
  %53 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #7
  %54 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8, !noalias !2
  %56 = icmp eq %"class.SkSL::Type"* %55, null
  %57 = select i1 %56, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %55
  %58 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %57, i64 0, i32 0, i32 1, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !2
  %60 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %57, i64 0, i32 0, i32 1, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !2
  %62 = icmp ugt i64 %61, -17
  br i1 %62, label %63, label %65

63:                                               ; preds = %47
  %64 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %64) #8
  unreachable

65:                                               ; preds = %47
  %66 = icmp ult i64 %61, 23
  br i1 %66, label %75, label %67

67:                                               ; preds = %65
  %68 = add nuw i64 %61, 16
  %69 = and i64 %68, -16
  %70 = tail call i8* @_Znwm(i64 %69) #9
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8, !alias.scope !2
  %72 = or i64 %69, -9223372036854775808
  %73 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %72, i64* %73, align 8, !alias.scope !2
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %74, align 8, !alias.scope !2
  br label %80

75:                                               ; preds = %65
  %76 = trunc i64 %61 to i8
  %77 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 %76, i8* %78, align 1, !alias.scope !2
  %79 = icmp eq i64 %61, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75, %67
  %81 = phi i8* [ %70, %67 ], [ %53, %75 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 %59, i64 %61, i1 false) #7
  br label %82

82:                                               ; preds = %75, %80
  %83 = phi i8* [ %53, %75 ], [ %81, %80 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 %61
  store i8 0, i8* %84, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %85 = bitcast %"class.SkSL::ErrorReporter"* %49 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %86 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %86, i64 2
  %88 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %87, align 8
  call void %88(%"class.SkSL::ErrorReporter"* %49, i32 %51, %"class.SkSL::String"* nonnull %5) #7
  %89 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %82
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #9
  br label %96

96:                                               ; preds = %82, %93
  %97 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #9
  br label %104

104:                                              ; preds = %96, %101
  %105 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %544

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %111) #9
  br label %544

112:                                              ; preds = %3
  %113 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 6
  %114 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %113, align 8
  %115 = icmp eq %"class.SkSL::Type"* %114, null
  %116 = select i1 %115, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %114
  %117 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %116, i64 0, i32 4
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %118, 3
  br i1 %119, label %540, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %122 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %121, align 8
  %123 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #7
  %126 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #7
  %127 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %128 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %127, align 8, !noalias !5
  %129 = icmp eq %"class.SkSL::Type"* %128, null
  %130 = select i1 %129, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %128
  %131 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %130, i64 0, i32 0, i32 1, i32 0
  %132 = load i8*, i8** %131, align 8, !noalias !5
  %133 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %130, i64 0, i32 0, i32 1, i32 1
  %134 = load i64, i64* %133, align 8, !noalias !5
  %135 = icmp ugt i64 %134, -17
  br i1 %135, label %136, label %138

136:                                              ; preds = %120
  %137 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %137) #8
  unreachable

138:                                              ; preds = %120
  %139 = icmp ult i64 %134, 23
  br i1 %139, label %148, label %140

140:                                              ; preds = %138
  %141 = add nuw i64 %134, 16
  %142 = and i64 %141, -16
  %143 = tail call i8* @_Znwm(i64 %142) #9
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %143, i8** %144, align 8, !alias.scope !5
  %145 = or i64 %142, -9223372036854775808
  %146 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %145, i64* %146, align 8, !alias.scope !5
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %134, i64* %147, align 8, !alias.scope !5
  br label %153

148:                                              ; preds = %138
  %149 = trunc i64 %134 to i8
  %150 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  store i8 %149, i8* %151, align 1, !alias.scope !5
  %152 = icmp eq i64 %134, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %148, %140
  %154 = phi i8* [ %143, %140 ], [ %126, %148 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %154, i8* align 1 %132, i64 %134, i1 false) #7
  br label %155

155:                                              ; preds = %148, %153
  %156 = phi i8* [ %126, %148 ], [ %154, %153 ]
  %157 = getelementptr inbounds i8, i8* %156, i64 %134
  store i8 0, i8* %157, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %10) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %158 = bitcast %"class.SkSL::ErrorReporter"* %122 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %159 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %159, i64 2
  %161 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %160, align 8
  call void %161(%"class.SkSL::ErrorReporter"* %122, i32 %124, %"class.SkSL::String"* nonnull %8) #7
  %162 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %155
  %167 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #9
  br label %169

169:                                              ; preds = %155, %166
  %170 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %176) #9
  br label %177

177:                                              ; preds = %169, %174
  %178 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %544

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #9
  br label %544

185:                                              ; preds = %3, %3
  %186 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 4
  %187 = load i32, i32* %186, align 4
  %188 = icmp ult i32 %187, 3
  %189 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %190 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %189, align 8
  br i1 %188, label %284, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #7
  %195 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #7
  %196 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #7
  %197 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #7
  %198 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  store i8 1, i8* %199, align 1
  store i8 39, i8* %197, align 8
  %200 = getelementptr inbounds i8, i8* %197, i64 1
  store i8 0, i8* %200, align 1
  %201 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* %201) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #7
  %202 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #7
  %203 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %204 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %203, align 8, !noalias !8
  %205 = icmp eq %"class.SkSL::Type"* %204, null
  %206 = select i1 %205, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %204
  %207 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %206, i64 0, i32 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8, !noalias !8
  %209 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %206, i64 0, i32 0, i32 1, i32 1
  %210 = load i64, i64* %209, align 8, !noalias !8
  %211 = icmp ugt i64 %210, -17
  br i1 %211, label %212, label %214

212:                                              ; preds = %191
  %213 = bitcast %"class.SkSL::String"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %213) #8
  unreachable

214:                                              ; preds = %191
  %215 = icmp ult i64 %210, 23
  br i1 %215, label %224, label %216

216:                                              ; preds = %214
  %217 = add nuw i64 %210, 16
  %218 = and i64 %217, -16
  %219 = call i8* @_Znwm(i64 %218) #9
  %220 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %219, i8** %220, align 8, !alias.scope !8
  %221 = or i64 %218, -9223372036854775808
  %222 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %221, i64* %222, align 8, !alias.scope !8
  %223 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %210, i64* %223, align 8, !alias.scope !8
  br label %229

224:                                              ; preds = %214
  %225 = trunc i64 %210 to i8
  %226 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  store i8 %225, i8* %227, align 1, !alias.scope !8
  %228 = icmp eq i64 %210, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %224, %216
  %230 = phi i8* [ %219, %216 ], [ %202, %224 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %230, i8* align 1 %208, i64 %210, i1 false) #7
  br label %231

231:                                              ; preds = %224, %229
  %232 = phi i8* [ %202, %224 ], [ %230, %229 ]
  %233 = getelementptr inbounds i8, i8* %232, i64 %210
  store i8 0, i8* %233, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, %"class.SkSL::String"* nonnull dereferenceable(24) %16) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %234 = bitcast %"class.SkSL::ErrorReporter"* %190 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %235 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %235, i64 2
  %237 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %236, align 8
  call void %237(%"class.SkSL::ErrorReporter"* %190, i32 %193, %"class.SkSL::String"* nonnull %11) #7
  %238 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %231
  %243 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %244) #9
  br label %245

245:                                              ; preds = %231, %242
  %246 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8
  call void @_ZdlPv(i8* %252) #9
  br label %253

253:                                              ; preds = %245, %250
  %254 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #9
  br label %261

261:                                              ; preds = %253, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #7
  %262 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  call void @_ZdlPv(i8* %268) #9
  br label %269

269:                                              ; preds = %261, %266
  %270 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  call void @_ZdlPv(i8* %276) #9
  br label %277

277:                                              ; preds = %269, %274
  %278 = load i8, i8* %199, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  call void @_ZdlPv(i8* %282) #9
  br label %283

283:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #7
  br label %544

284:                                              ; preds = %185
  %285 = tail call zeroext i1 @_ZN4SkSL8Analysis18MakeAssignmentExprEPNS_10ExpressionENS_15VariableRefKindEPNS_13ErrorReporterE(%"class.SkSL::Expression"* %2, i8 signext 2, %"class.SkSL::ErrorReporter"* %190) #7
  br i1 %285, label %540, label %547

286:                                              ; preds = %3
  %287 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 4
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, 3
  br i1 %289, label %540, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %292 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %291, align 8
  %293 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #7
  %296 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #7
  %297 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #7
  %298 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #7
  %299 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  store i8 1, i8* %300, align 1
  store i8 39, i8* %298, align 8
  %301 = getelementptr inbounds i8, i8* %298, i64 1
  store i8 0, i8* %301, align 1
  %302 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* %302) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #7
  %303 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #7
  %304 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %305 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %304, align 8, !noalias !11
  %306 = icmp eq %"class.SkSL::Type"* %305, null
  %307 = select i1 %306, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %305
  %308 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %307, i64 0, i32 0, i32 1, i32 0
  %309 = load i8*, i8** %308, align 8, !noalias !11
  %310 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %307, i64 0, i32 0, i32 1, i32 1
  %311 = load i64, i64* %310, align 8, !noalias !11
  %312 = icmp ugt i64 %311, -17
  br i1 %312, label %313, label %315

313:                                              ; preds = %290
  %314 = bitcast %"class.SkSL::String"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %314) #8
  unreachable

315:                                              ; preds = %290
  %316 = icmp ult i64 %311, 23
  br i1 %316, label %325, label %317

317:                                              ; preds = %315
  %318 = add nuw i64 %311, 16
  %319 = and i64 %318, -16
  %320 = call i8* @_Znwm(i64 %319) #9
  %321 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %320, i8** %321, align 8, !alias.scope !11
  %322 = or i64 %319, -9223372036854775808
  %323 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %322, i64* %323, align 8, !alias.scope !11
  %324 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %311, i64* %324, align 8, !alias.scope !11
  br label %330

325:                                              ; preds = %315
  %326 = trunc i64 %311 to i8
  %327 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %327, i64 0, i32 1, i32 0
  store i8 %326, i8* %328, align 1, !alias.scope !11
  %329 = icmp eq i64 %311, 0
  br i1 %329, label %332, label %330

330:                                              ; preds = %325, %317
  %331 = phi i8* [ %320, %317 ], [ %303, %325 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %331, i8* align 1 %309, i64 %311, i1 false) #7
  br label %332

332:                                              ; preds = %325, %330
  %333 = phi i8* [ %303, %325 ], [ %331, %330 ]
  %334 = getelementptr inbounds i8, i8* %333, i64 %311
  store i8 0, i8* %334, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::String"* nonnull %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %335 = bitcast %"class.SkSL::ErrorReporter"* %292 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %336 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %335, align 8
  %337 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %336, i64 2
  %338 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %337, align 8
  call void %338(%"class.SkSL::ErrorReporter"* %292, i32 %294, %"class.SkSL::String"* nonnull %17) #7
  %339 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %332
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #9
  br label %346

346:                                              ; preds = %332, %343
  %347 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #9
  br label %354

354:                                              ; preds = %346, %351
  %355 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %355, i64 0, i32 1, i32 0
  %357 = load i8, i8* %356, align 1
  %358 = icmp slt i8 %357, 0
  br i1 %358, label %359, label %362

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load i8*, i8** %360, align 8
  call void @_ZdlPv(i8* %361) #9
  br label %362

362:                                              ; preds = %354, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #7
  %363 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %363, i64 0, i32 1, i32 0
  %365 = load i8, i8* %364, align 1
  %366 = icmp slt i8 %365, 0
  br i1 %366, label %367, label %370

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load i8*, i8** %368, align 8
  call void @_ZdlPv(i8* %369) #9
  br label %370

370:                                              ; preds = %362, %367
  %371 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %370
  %376 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #9
  br label %378

378:                                              ; preds = %370, %375
  %379 = load i8, i8* %300, align 1
  %380 = icmp slt i8 %379, 0
  br i1 %380, label %381, label %384

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load i8*, i8** %382, align 8
  call void @_ZdlPv(i8* %383) #9
  br label %384

384:                                              ; preds = %378, %381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #7
  br label %544

385:                                              ; preds = %3
  %386 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %387 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %386, align 8
  %388 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %387, i64 0, i32 1, i32 19
  %389 = load i8, i8* %388, align 1, !range !14
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %432, label %391

391:                                              ; preds = %385
  %392 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %387, i64 0, i32 0
  %393 = load i8, i8* %392, align 8
  %394 = add i8 %393, -4
  %395 = icmp ult i8 %394, 3
  br i1 %395, label %396, label %432

396:                                              ; preds = %391
  %397 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %398 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %397, align 8
  %399 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %400 = load i32, i32* %399, align 8
  %401 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %401) #7
  %402 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %402) #7
  %403 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %403, i64 0, i32 1, i32 0
  store i8 10, i8* %404, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %402, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10, i1 false) #7
  %405 = getelementptr inbounds i8, i8* %402, i64 10
  store i8 0, i8* %405, align 2
  %406 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* %406) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  %407 = bitcast %"class.SkSL::ErrorReporter"* %398 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %408 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %408, i64 2
  %410 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %409, align 8
  call void %410(%"class.SkSL::ErrorReporter"* %398, i32 %400, %"class.SkSL::String"* nonnull %23) #7
  %411 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %418

415:                                              ; preds = %396
  %416 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  call void @_ZdlPv(i8* %417) #9
  br label %418

418:                                              ; preds = %396, %415
  %419 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %420 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %419, i64 0, i32 1, i32 0
  %421 = load i8, i8* %420, align 1
  %422 = icmp slt i8 %421, 0
  br i1 %422, label %423, label %426

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load i8*, i8** %424, align 8
  call void @_ZdlPv(i8* %425) #9
  br label %426

426:                                              ; preds = %418, %423
  %427 = load i8, i8* %404, align 1
  %428 = icmp slt i8 %427, 0
  br i1 %428, label %429, label %544

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = load i8*, i8** %430, align 8
  call void @_ZdlPv(i8* %431) #9
  br label %544

432:                                              ; preds = %385, %391
  %433 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 4
  %434 = load i32, i32* %433, align 4
  %435 = add i32 %434, -1
  %436 = icmp ult i32 %435, 2
  br i1 %436, label %532, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %439 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %438, align 8
  %440 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %441 = load i32, i32* %440, align 8
  %442 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #7
  %443 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %443) #7
  %444 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #7
  %445 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #7
  %446 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %447 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %446, i64 0, i32 1, i32 0
  store i8 1, i8* %447, align 1
  store i8 39, i8* %445, align 8
  %448 = getelementptr inbounds i8, i8* %445, i64 1
  store i8 0, i8* %448, align 1
  %449 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %29, %"class.SkSL::String"* nonnull %30, i8* %449) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #7
  %450 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #7
  %451 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %452 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %451, align 8, !noalias !15
  %453 = icmp eq %"class.SkSL::Type"* %452, null
  %454 = select i1 %453, %"class.SkSL::Type"* %38, %"class.SkSL::Type"* %452
  %455 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %454, i64 0, i32 0, i32 1, i32 0
  %456 = load i8*, i8** %455, align 8, !noalias !15
  %457 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %454, i64 0, i32 0, i32 1, i32 1
  %458 = load i64, i64* %457, align 8, !noalias !15
  %459 = icmp ugt i64 %458, -17
  br i1 %459, label %460, label %462

460:                                              ; preds = %437
  %461 = bitcast %"class.SkSL::String"* %31 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %461) #8
  unreachable

462:                                              ; preds = %437
  %463 = icmp ult i64 %458, 23
  br i1 %463, label %472, label %464

464:                                              ; preds = %462
  %465 = add nuw i64 %458, 16
  %466 = and i64 %465, -16
  %467 = call i8* @_Znwm(i64 %466) #9
  %468 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %467, i8** %468, align 8, !alias.scope !15
  %469 = or i64 %466, -9223372036854775808
  %470 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %469, i64* %470, align 8, !alias.scope !15
  %471 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %458, i64* %471, align 8, !alias.scope !15
  br label %477

472:                                              ; preds = %462
  %473 = trunc i64 %458 to i8
  %474 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %474, i64 0, i32 1, i32 0
  store i8 %473, i8* %475, align 1, !alias.scope !15
  %476 = icmp eq i64 %458, 0
  br i1 %476, label %479, label %477

477:                                              ; preds = %472, %464
  %478 = phi i8* [ %467, %464 ], [ %450, %472 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %478, i8* align 1 %456, i64 %458, i1 false) #7
  br label %479

479:                                              ; preds = %472, %477
  %480 = phi i8* [ %450, %472 ], [ %478, %477 ]
  %481 = getelementptr inbounds i8, i8* %480, i64 %458
  store i8 0, i8* %481, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #7
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::String"* nonnull %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %482 = bitcast %"class.SkSL::ErrorReporter"* %439 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %483 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %482, align 8
  %484 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %483, i64 2
  %485 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %484, align 8
  call void %485(%"class.SkSL::ErrorReporter"* %439, i32 %441, %"class.SkSL::String"* nonnull %26) #7
  %486 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %487 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %486, i64 0, i32 1, i32 0
  %488 = load i8, i8* %487, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %493

490:                                              ; preds = %479
  %491 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  call void @_ZdlPv(i8* %492) #9
  br label %493

493:                                              ; preds = %479, %490
  %494 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %495 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %494, i64 0, i32 1, i32 0
  %496 = load i8, i8* %495, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %501

498:                                              ; preds = %493
  %499 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load i8*, i8** %499, align 8
  call void @_ZdlPv(i8* %500) #9
  br label %501

501:                                              ; preds = %493, %498
  %502 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %503 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %502, i64 0, i32 1, i32 0
  %504 = load i8, i8* %503, align 1
  %505 = icmp slt i8 %504, 0
  br i1 %505, label %506, label %509

506:                                              ; preds = %501
  %507 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load i8*, i8** %507, align 8
  call void @_ZdlPv(i8* %508) #9
  br label %509

509:                                              ; preds = %501, %506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #7
  %510 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %511 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %510, i64 0, i32 1, i32 0
  %512 = load i8, i8* %511, align 1
  %513 = icmp slt i8 %512, 0
  br i1 %513, label %514, label %517

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load i8*, i8** %515, align 8
  call void @_ZdlPv(i8* %516) #9
  br label %517

517:                                              ; preds = %509, %514
  %518 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %519 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %518, i64 0, i32 1, i32 0
  %520 = load i8, i8* %519, align 1
  %521 = icmp slt i8 %520, 0
  br i1 %521, label %522, label %525

522:                                              ; preds = %517
  %523 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load i8*, i8** %523, align 8
  call void @_ZdlPv(i8* %524) #9
  br label %525

525:                                              ; preds = %517, %522
  %526 = load i8, i8* %447, align 1
  %527 = icmp slt i8 %526, 0
  br i1 %527, label %528, label %531

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load i8*, i8** %529, align 8
  call void @_ZdlPv(i8* %530) #9
  br label %531

531:                                              ; preds = %525, %528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %444) #7
  br label %544

532:                                              ; preds = %432
  %533 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 18
  %534 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %533, align 8
  %535 = icmp eq %"class.SkSL::Type"* %534, null
  br i1 %535, label %540, label %536

536:                                              ; preds = %532
  %537 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* nonnull %534, %"class.SkSL::Expression"* %2, %"class.SkSL::Context"* dereferenceable(744) %0) #7
  %538 = ptrtoint %"class.SkSL::Expression"* %537 to i64
  br label %540

539:                                              ; preds = %3
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0), i32 196, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #8
  unreachable

540:                                              ; preds = %532, %112, %39, %284, %286, %536
  %541 = phi i64 [ %538, %536 ], [ %33, %532 ], [ %33, %286 ], [ %33, %284 ], [ %33, %39 ], [ %33, %112 ]
  %542 = inttoptr i64 %541 to %"class.SkSL::Expression"*
  %543 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Expression"* %542)
  br label %554

544:                                              ; preds = %429, %426, %182, %177, %109, %104, %283, %384, %531
  %545 = phi i8* [ %443, %531 ], [ %296, %384 ], [ %195, %283 ], [ %53, %104 ], [ %53, %109 ], [ %126, %177 ], [ %126, %182 ], [ %402, %426 ], [ %402, %429 ]
  %546 = phi i8* [ %442, %531 ], [ %295, %384 ], [ %194, %283 ], [ %52, %104 ], [ %52, %109 ], [ %125, %177 ], [ %125, %182 ], [ %401, %426 ], [ %401, %429 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %545) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %546) #7
  br label %547

547:                                              ; preds = %544, %284
  %548 = icmp eq %"class.SkSL::Expression"* %2, null
  br i1 %548, label %554, label %549

549:                                              ; preds = %547
  %550 = bitcast %"class.SkSL::Expression"* %2 to void (%"class.SkSL::Expression"*)***
  %551 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %550, align 8
  %552 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %551, i64 1
  %553 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %552, align 8
  call void %553(%"class.SkSL::Expression"* nonnull %2) #7
  br label %554

554:                                              ; preds = %540, %547, %549
  %555 = phi %"class.SkSL::Expression"* [ %543, %540 ], [ null, %547 ], [ null, %549 ]
  ret %"class.SkSL::Expression"* %555
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4SkSL8Analysis18MakeAssignmentExprEPNS_10ExpressionENS_15VariableRefKindEPNS_13ErrorReporterE(%"class.SkSL::Expression"*, i8 signext, %"class.SkSL::ErrorReporter"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"*, %"class.SkSL::Expression"*, %"class.SkSL::Context"* dereferenceable(744)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.SkSL::Expression"* %2 to i64
  switch i32 %1, label %80 [
    i32 46, label %101
    i32 47, label %5
    i32 60, label %8
  ]

5:                                                ; preds = %3
  %6 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %2)
  %7 = ptrtoint %"class.SkSL::Expression"* %6 to i64
  br label %101

8:                                                ; preds = %3
  %9 = tail call %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder27GetConstantValueForVariableERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24) %2) #7
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %9, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %51 [
    i32 31, label %12
    i32 49, label %35
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %9, i64 1
  %16 = bitcast %"class.SkSL::Expression"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !14
  %18 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, i64 3
  %21 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.SkSL::Type"* %21(%"class.SkSL::Expression"* %2) #7
  %23 = ptrtoint %"class.SkSL::Type"* %22 to i64
  %24 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %25 = xor i8 %17, 1
  %26 = bitcast i8* %24 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 %14, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 31, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %24, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 %23, i64* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %33 = getelementptr inbounds i8, i8* %24, i64 24
  store i8 %25, i8* %33, align 8
  %34 = ptrtoint i8* %24 to i64
  br label %72

35:                                               ; preds = %8
  %36 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %37 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %37, i64 0, i32 1, i32 10
  %39 = load i8, i8* %38, align 4, !range !14
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %43 = bitcast %"class.SkSL::Expression"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 60
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1, i32 0, i32 1
  %48 = bitcast i32* %47 to %"class.SkSL::Expression"**
  %49 = bitcast i32* %47 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %48, align 8
  br label %72

51:                                               ; preds = %41, %35, %8
  %52 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #7
  %53 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %56 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %56, i64 3
  %58 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %57, align 8
  %59 = tail call dereferenceable(184) %"class.SkSL::Type"* %58(%"class.SkSL::Expression"* %2) #7
  %60 = bitcast i8* %52 to i32 (...)***
  %61 = getelementptr inbounds i8, i8* %52, i64 8
  %62 = bitcast i8* %61 to i32*
  store i32 %54, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %52, i64 12
  %64 = bitcast i8* %63 to i32*
  store i32 49, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %52, i64 16
  %66 = bitcast i8* %65 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %59, %"class.SkSL::Type"** %66, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %67 = getelementptr inbounds i8, i8* %52, i64 24
  %68 = bitcast i8* %67 to i32*
  store i32 60, i32* %68, align 8
  %69 = getelementptr inbounds i8, i8* %52, i64 32
  %70 = bitcast i8* %69 to i64*
  store i64 %4, i64* %70, align 8
  %71 = ptrtoint i8* %52 to i64
  br label %101

72:                                               ; preds = %46, %12
  %73 = phi i64 [ %50, %46 ], [ %34, %12 ]
  %74 = icmp eq %"class.SkSL::Expression"* %2, null
  br i1 %74, label %101, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.SkSL::Expression"* %2 to void (%"class.SkSL::Expression"*)***
  %77 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %77, i64 1
  %79 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %78, align 8
  tail call void %79(%"class.SkSL::Expression"* nonnull %2) #7
  br label %101

80:                                               ; preds = %3
  %81 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #7
  %82 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %85 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %85, i64 3
  %87 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %86, align 8
  %88 = tail call dereferenceable(184) %"class.SkSL::Type"* %87(%"class.SkSL::Expression"* %2) #7
  %89 = bitcast i8* %81 to i32 (...)***
  %90 = getelementptr inbounds i8, i8* %81, i64 8
  %91 = bitcast i8* %90 to i32*
  store i32 %83, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %81, i64 12
  %93 = bitcast i8* %92 to i32*
  store i32 49, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %81, i64 16
  %95 = bitcast i8* %94 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %88, %"class.SkSL::Type"** %95, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %96 = getelementptr inbounds i8, i8* %81, i64 24
  %97 = bitcast i8* %96 to i32*
  store i32 %1, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %98 to i64*
  store i64 %4, i64* %99, align 8
  %100 = ptrtoint i8* %81 to i64
  br label %101

101:                                              ; preds = %75, %72, %51, %5, %80, %3
  %102 = phi i64 [ %100, %80 ], [ %7, %5 ], [ %4, %3 ], [ %71, %51 ], [ %73, %72 ], [ %73, %75 ]
  %103 = inttoptr i64 %102 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %103
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*) unnamed_addr #0 {
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray, align 8
  %7 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder27GetConstantValueForVariableERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24) %1) #7
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %357 [
    i32 45, label %11
    i32 43, label %35
    i32 49, label %59
    i32 33, label %75
    i32 36, label %193
    i32 39, label %216
    i32 34, label %239
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 1
  %15 = bitcast %"class.SkSL::Expression"* %14 to float*
  %16 = load float, float* %15, align 8
  %17 = fsub float -0.000000e+00, %16
  %18 = bitcast %"class.SkSL::Expression"* %8 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, i64 3
  %21 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.SkSL::Type"* %21(%"class.SkSL::Expression"* %8) #7
  %23 = ptrtoint %"class.SkSL::Type"* %22 to i64
  %24 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %25 = bitcast i8* %24 to i32 (...)***
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %13, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 45, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %24, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %23, i64* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %32 = getelementptr inbounds i8, i8* %24, i64 24
  %33 = bitcast i8* %32 to float*
  store float %17, float* %33, align 8
  %34 = ptrtoint i8* %24 to i64
  br label %378

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 1
  %39 = bitcast %"class.SkSL::Expression"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 0, %40
  %42 = bitcast %"class.SkSL::Expression"* %8 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %43 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %43, i64 3
  %45 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %44, align 8
  %46 = tail call dereferenceable(184) %"class.SkSL::Type"* %45(%"class.SkSL::Expression"* %8) #7
  %47 = ptrtoint %"class.SkSL::Type"* %46 to i64
  %48 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %49 = bitcast i8* %48 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 %37, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 12
  %53 = bitcast i8* %52 to i32*
  store i32 43, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %48, i64 16
  %55 = bitcast i8* %54 to i64*
  store i64 %47, i64* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 24
  %57 = bitcast i8* %56 to i64*
  store i64 %41, i64* %57, align 8
  %58 = ptrtoint i8* %48 to i64
  br label %378

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %61 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %60, align 8
  %62 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %61, i64 0, i32 1, i32 10
  %63 = load i8, i8* %62, align 4, !range !14
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %357, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %67 = bitcast %"class.SkSL::Expression"* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 47
  br i1 %69, label %70, label %357

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %72 = bitcast i32* %71 to %"class.SkSL::Expression"**
  %73 = bitcast i32* %71 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %72, align 8
  br label %378

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %77 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %77, i64 0, i32 1, i32 10
  %79 = load i8, i8* %78, align 4, !range !14
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %357, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.SkSL::Expression"* %8 to i1 (%"class.SkSL::Expression"*)***
  %83 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %83, i64 4
  %85 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.SkSL::Expression"* %8) #7
  br i1 %86, label %87, label %357

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %92 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %93 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %94 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  %95 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %96 = bitcast i8* %95 to i64*
  %97 = bitcast i8* %93 to i8**
  store i8* %94, i8** %97, align 8
  store i64 17179869184, i64* %96, align 8
  %98 = bitcast i8* %93 to %class.SkTArray*
  %99 = getelementptr inbounds i32, i32* %92, i64 4
  %100 = bitcast i32* %99 to %class.SkTArray*
  %101 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %98, %class.SkTArray* dereferenceable(16) %100) #7
  %102 = bitcast i8* %93 to %"class.std::__1::unique_ptr"**
  %103 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %102, align 8, !noalias !18
  %104 = icmp eq %"class.std::__1::unique_ptr"* %103, null
  br i1 %104, label %128, label %105

105:                                              ; preds = %87
  %106 = load i64, i64* %96, align 8, !noalias !18
  %107 = lshr i64 %106, 1
  %108 = and i64 %107, 2147483647
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 %108
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %105, %125
  %112 = phi %"class.std::__1::unique_ptr"* [ %126, %125 ], [ %103, %105 ]
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  %115 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %113, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %113, align 8
  %116 = call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %115) #7
  %117 = ptrtoint %"class.SkSL::Expression"* %116 to i64
  %118 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %113, align 8
  store i64 %117, i64* %114, align 8
  %119 = icmp eq %"class.SkSL::Expression"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %111
  %121 = bitcast %"class.SkSL::Expression"* %118 to void (%"class.SkSL::Expression"*)***
  %122 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %122, i64 1
  %124 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %123, align 8
  call void %124(%"class.SkSL::Expression"* nonnull %118) #7
  br label %125

125:                                              ; preds = %111, %120
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %112, i64 1
  %127 = icmp eq %"class.std::__1::unique_ptr"* %126, %109
  br i1 %127, label %128, label %111

128:                                              ; preds = %125, %87, %105
  %129 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %130 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  %131 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %132 = bitcast i8* %131 to i64*
  %133 = bitcast i8* %129 to i8**
  store i8* %130, i8** %133, align 8, !alias.scope !18
  store i64 17179869184, i64* %132, align 8, !alias.scope !18
  %134 = bitcast i8* %129 to %class.SkTArray*
  %135 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %134, %class.SkTArray* dereferenceable(16) %98) #7
  %136 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %89, %"class.SkSL::Type"* dereferenceable(184) %91, %class.SkSTArray* nonnull %3) #7
  %137 = ptrtoint %"class.SkSL::Expression"* %136 to i64
  %138 = load i64, i64* %132, align 8
  %139 = and i64 %138, 4294967294
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %128
  %142 = bitcast i8* %129 to %"class.std::__1::unique_ptr"**
  br label %147

143:                                              ; preds = %158, %128
  %144 = phi i64 [ %138, %128 ], [ %160, %158 ]
  %145 = and i64 %144, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %166, label %164

147:                                              ; preds = %158, %141
  %148 = phi i64 [ 0, %141 ], [ %159, %158 ]
  %149 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %142, align 8
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %149, i64 %148, i32 0, i32 0, i32 0
  %151 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %150, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %150, align 8
  %152 = icmp eq %"class.SkSL::Expression"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %147
  %154 = bitcast %"class.SkSL::Expression"* %151 to void (%"class.SkSL::Expression"*)***
  %155 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %155, i64 1
  %157 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %156, align 8
  call void %157(%"class.SkSL::Expression"* nonnull %151) #7
  br label %158

158:                                              ; preds = %153, %147
  %159 = add nuw nsw i64 %148, 1
  %160 = load i64, i64* %132, align 8
  %161 = lshr i64 %160, 1
  %162 = and i64 %161, 2147483647
  %163 = icmp ult i64 %159, %162
  br i1 %163, label %147, label %143

164:                                              ; preds = %143
  %165 = load i8*, i8** %133, align 8
  call void @_Z7sk_freePv(i8* %165) #7
  br label %166

166:                                              ; preds = %143, %164
  %167 = load i64, i64* %96, align 8
  %168 = and i64 %167, 4294967294
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %185, %166
  %171 = phi i64 [ %167, %166 ], [ %187, %185 ]
  %172 = and i64 %171, 1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %378, label %191

174:                                              ; preds = %166, %185
  %175 = phi i64 [ %186, %185 ], [ 0, %166 ]
  %176 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %102, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %176, i64 %175, i32 0, i32 0, i32 0
  %178 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %177, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %177, align 8
  %179 = icmp eq %"class.SkSL::Expression"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = bitcast %"class.SkSL::Expression"* %178 to void (%"class.SkSL::Expression"*)***
  %182 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %182, i64 1
  %184 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %183, align 8
  call void %184(%"class.SkSL::Expression"* nonnull %178) #7
  br label %185

185:                                              ; preds = %180, %174
  %186 = add nuw nsw i64 %175, 1
  %187 = load i64, i64* %96, align 8
  %188 = lshr i64 %187, 1
  %189 = and i64 %188, 2147483647
  %190 = icmp ult i64 %186, %189
  br i1 %190, label %174, label %170

191:                                              ; preds = %170
  %192 = load i8*, i8** %97, align 8
  call void @_Z7sk_freePv(i8* %192) #7
  br label %378

193:                                              ; preds = %2
  %194 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %195 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %194, align 8
  %196 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %195, i64 0, i32 1, i32 10
  %197 = load i8, i8* %196, align 4, !range !14
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %357, label %199

199:                                              ; preds = %193
  %200 = bitcast %"class.SkSL::Expression"* %8 to i1 (%"class.SkSL::Expression"*)***
  %201 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %200, align 8
  %202 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %201, i64 4
  %203 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %202, align 8
  %204 = tail call zeroext i1 %203(%"class.SkSL::Expression"* %8) #7
  br i1 %204, label %205, label %357

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %209 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %208, align 8
  %210 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %211 = bitcast i32* %210 to %"class.SkSL::Expression"**
  %212 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %211, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %211, align 8
  %213 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %212)
  %214 = tail call %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %207, %"class.SkSL::Type"* dereferenceable(184) %209, %"class.SkSL::Expression"* %213) #7
  %215 = ptrtoint %"class.SkSL::Expression"* %214 to i64
  br label %378

216:                                              ; preds = %2
  %217 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %218 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %217, align 8
  %219 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %218, i64 0, i32 1, i32 10
  %220 = load i8, i8* %219, align 4, !range !14
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %357, label %222

222:                                              ; preds = %216
  %223 = bitcast %"class.SkSL::Expression"* %8 to i1 (%"class.SkSL::Expression"*)***
  %224 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %223, align 8
  %225 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %224, i64 4
  %226 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %225, align 8
  %227 = tail call zeroext i1 %226(%"class.SkSL::Expression"* %8) #7
  br i1 %227, label %228, label %357

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %232 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %231, align 8
  %233 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %234 = bitcast i32* %233 to %"class.SkSL::Expression"**
  %235 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %234, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %234, align 8
  %236 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %235)
  %237 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %230, %"class.SkSL::Type"* dereferenceable(184) %232, %"class.SkSL::Expression"* %236) #7
  %238 = ptrtoint %"class.SkSL::Expression"* %237 to i64
  br label %378

239:                                              ; preds = %2
  %240 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %241 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %240, align 8
  %242 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %241, i64 0, i32 1, i32 10
  %243 = load i8, i8* %242, align 4, !range !14
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %357, label %245

245:                                              ; preds = %239
  %246 = bitcast %"class.SkSL::Expression"* %8 to i1 (%"class.SkSL::Expression"*)***
  %247 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %246, align 8
  %248 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %247, i64 4
  %249 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %248, align 8
  %250 = tail call zeroext i1 %249(%"class.SkSL::Expression"* %8) #7
  br i1 %250, label %251, label %357

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %255 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %254, align 8
  %256 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %257 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 16
  %258 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 0
  %259 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 24
  %260 = bitcast i8* %259 to i64*
  %261 = bitcast i8* %257 to i8**
  store i8* %258, i8** %261, align 8
  store i64 17179869184, i64* %260, align 8
  %262 = bitcast i8* %257 to %class.SkTArray*
  %263 = getelementptr inbounds i32, i32* %256, i64 4
  %264 = bitcast i32* %263 to %class.SkTArray*
  %265 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %262, %class.SkTArray* dereferenceable(16) %264) #7
  %266 = bitcast i8* %257 to %"class.std::__1::unique_ptr"**
  %267 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %266, align 8, !noalias !21
  %268 = icmp eq %"class.std::__1::unique_ptr"* %267, null
  br i1 %268, label %292, label %269

269:                                              ; preds = %251
  %270 = load i64, i64* %260, align 8, !noalias !21
  %271 = lshr i64 %270, 1
  %272 = and i64 %271, 2147483647
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %267, i64 %272
  %274 = icmp eq i64 %272, 0
  br i1 %274, label %292, label %275

275:                                              ; preds = %269, %289
  %276 = phi %"class.std::__1::unique_ptr"* [ %290, %289 ], [ %267, %269 ]
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.std::__1::unique_ptr"* %276 to i64*
  %279 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %277, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %277, align 8
  %280 = call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL14negate_operandERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %279) #7
  %281 = ptrtoint %"class.SkSL::Expression"* %280 to i64
  %282 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %277, align 8
  store i64 %281, i64* %278, align 8
  %283 = icmp eq %"class.SkSL::Expression"* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %275
  %285 = bitcast %"class.SkSL::Expression"* %282 to void (%"class.SkSL::Expression"*)***
  %286 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %285, align 8
  %287 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %286, i64 1
  %288 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %287, align 8
  call void %288(%"class.SkSL::Expression"* nonnull %282) #7
  br label %289

289:                                              ; preds = %275, %284
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 1
  %291 = icmp eq %"class.std::__1::unique_ptr"* %290, %273
  br i1 %291, label %292, label %275

292:                                              ; preds = %289, %251, %269
  %293 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %294 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %295 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %296 = bitcast i8* %295 to i64*
  %297 = bitcast i8* %293 to i8**
  store i8* %294, i8** %297, align 8, !alias.scope !21
  store i64 17179869184, i64* %296, align 8, !alias.scope !21
  %298 = bitcast i8* %293 to %class.SkTArray*
  %299 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %298, %class.SkTArray* dereferenceable(16) %262) #7
  %300 = call %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %253, %"class.SkSL::Type"* dereferenceable(184) %255, %class.SkSTArray* nonnull %5) #7
  %301 = ptrtoint %"class.SkSL::Expression"* %300 to i64
  %302 = load i64, i64* %296, align 8
  %303 = and i64 %302, 4294967294
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %292
  %306 = bitcast i8* %293 to %"class.std::__1::unique_ptr"**
  br label %311

307:                                              ; preds = %322, %292
  %308 = phi i64 [ %302, %292 ], [ %324, %322 ]
  %309 = and i64 %308, 1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %330, label %328

311:                                              ; preds = %322, %305
  %312 = phi i64 [ 0, %305 ], [ %323, %322 ]
  %313 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %306, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %313, i64 %312, i32 0, i32 0, i32 0
  %315 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %314, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %314, align 8
  %316 = icmp eq %"class.SkSL::Expression"* %315, null
  br i1 %316, label %322, label %317

317:                                              ; preds = %311
  %318 = bitcast %"class.SkSL::Expression"* %315 to void (%"class.SkSL::Expression"*)***
  %319 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %319, i64 1
  %321 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %320, align 8
  call void %321(%"class.SkSL::Expression"* nonnull %315) #7
  br label %322

322:                                              ; preds = %317, %311
  %323 = add nuw nsw i64 %312, 1
  %324 = load i64, i64* %296, align 8
  %325 = lshr i64 %324, 1
  %326 = and i64 %325, 2147483647
  %327 = icmp ult i64 %323, %326
  br i1 %327, label %311, label %307

328:                                              ; preds = %307
  %329 = load i8*, i8** %297, align 8
  call void @_Z7sk_freePv(i8* %329) #7
  br label %330

330:                                              ; preds = %307, %328
  %331 = load i64, i64* %260, align 8
  %332 = and i64 %331, 4294967294
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %349, %330
  %335 = phi i64 [ %331, %330 ], [ %351, %349 ]
  %336 = and i64 %335, 1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %378, label %355

338:                                              ; preds = %330, %349
  %339 = phi i64 [ %350, %349 ], [ 0, %330 ]
  %340 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %266, align 8
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %340, i64 %339, i32 0, i32 0, i32 0
  %342 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %341, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %341, align 8
  %343 = icmp eq %"class.SkSL::Expression"* %342, null
  br i1 %343, label %349, label %344

344:                                              ; preds = %338
  %345 = bitcast %"class.SkSL::Expression"* %342 to void (%"class.SkSL::Expression"*)***
  %346 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %345, align 8
  %347 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %346, i64 1
  %348 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %347, align 8
  call void %348(%"class.SkSL::Expression"* nonnull %342) #7
  br label %349

349:                                              ; preds = %344, %338
  %350 = add nuw nsw i64 %339, 1
  %351 = load i64, i64* %260, align 8
  %352 = lshr i64 %351, 1
  %353 = and i64 %352, 2147483647
  %354 = icmp ult i64 %350, %353
  br i1 %354, label %338, label %334

355:                                              ; preds = %334
  %356 = load i8*, i8** %261, align 8
  call void @_Z7sk_freePv(i8* %356) #7
  br label %378

357:                                              ; preds = %65, %59, %75, %193, %216, %239, %2, %245, %222, %199, %81
  %358 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #7
  %359 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %360 = load i32, i32* %359, align 8
  %361 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %362 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %361, align 8
  %363 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %362, i64 3
  %364 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %363, align 8
  %365 = tail call dereferenceable(184) %"class.SkSL::Type"* %364(%"class.SkSL::Expression"* %1) #7
  %366 = bitcast i8* %358 to i32 (...)***
  %367 = getelementptr inbounds i8, i8* %358, i64 8
  %368 = bitcast i8* %367 to i32*
  store i32 %360, i32* %368, align 8
  %369 = getelementptr inbounds i8, i8* %358, i64 12
  %370 = bitcast i8* %369 to i32*
  store i32 49, i32* %370, align 4
  %371 = getelementptr inbounds i8, i8* %358, i64 16
  %372 = bitcast i8* %371 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %365, %"class.SkSL::Type"** %372, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %366, align 8
  %373 = getelementptr inbounds i8, i8* %358, i64 24
  %374 = bitcast i8* %373 to i32*
  store i32 47, i32* %374, align 8
  %375 = getelementptr inbounds i8, i8* %358, i64 32
  %376 = bitcast i8* %375 to i64*
  store i64 %7, i64* %376, align 8
  %377 = ptrtoint i8* %358 to i64
  br label %386

378:                                              ; preds = %355, %334, %191, %170, %70, %228, %205, %35, %11
  %379 = phi i64 [ %238, %228 ], [ %215, %205 ], [ %74, %70 ], [ %58, %35 ], [ %34, %11 ], [ %137, %170 ], [ %137, %191 ], [ %301, %334 ], [ %301, %355 ]
  %380 = icmp eq %"class.SkSL::Expression"* %1, null
  br i1 %380, label %386, label %381

381:                                              ; preds = %378
  %382 = bitcast %"class.SkSL::Expression"* %1 to void (%"class.SkSL::Expression"*)***
  %383 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %382, align 8
  %384 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %383, i64 1
  %385 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %384, align 8
  call void %385(%"class.SkSL::Expression"* nonnull %1) #7
  br label %386

386:                                              ; preds = %357, %378, %381
  %387 = phi i64 [ %377, %357 ], [ %379, %378 ], [ %379, %381 ]
  %388 = inttoptr i64 %387 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %388
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder27GetConstantValueForVariableERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

declare %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIfED0Ev(%"class.SkSL::Literal"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIfE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fpext float %4 to double
  tail call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret %0, double %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to float*
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #7
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #7
  %13 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %12, %"class.SkSL::Type"* dereferenceable(184) %1) #7
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i64 [ %14, %6 ], [ 0, %2 ]
  %18 = phi i8 [ %15, %6 ], [ 0, %2 ]
  %19 = insertvalue { i64, i8 } undef, i64 %17, 0
  %20 = insertvalue { i64, i8 } %19, i8 %18, 1
  ret { i64, i8 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %10 = load i32, i32* %2, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 45, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 8
  %20 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression21isCompileTimeConstantEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL10Expression15compareConstantERKS0_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #7
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #7
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL10Expression24getConstantSubexpressionEi(%"class.SkSL::Expression"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.SkSL::Expression"* null
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal.58"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.58"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.58"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal.58"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.58"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.58"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal.58"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal.58"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #7
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #7
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal.58"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal.58"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.58", %"class.SkSL::Literal.58"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #7
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #7
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #7
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #7
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16PrefixExpressionD2Ev(%"class.SkSL::PrefixExpression"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16PrefixExpressionD0Ev(%"class.SkSL::PrefixExpression"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::PrefixExpression"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16PrefixExpression11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::PrefixExpression"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::Operator", align 4
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::Operator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %3, i64 0, i32 0
  store i32 %7, i32* %8, align 4
  %9 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %3) #7
  %10 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %12, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Expression"* %12 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %13) #7
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret %0, i8* %9, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #7
  %18 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL16PrefixExpression11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::PrefixExpression"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 44
  br i1 %8, label %17, label %9

9:                                                ; preds = %4, %2
  %10 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = bitcast %"class.SkSL::Expression"* %11 to i1 (%"class.SkSL::Expression"*, i32)***
  %13 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %13, i64 7
  %15 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.SkSL::Expression"* %11, i32 %1) #7
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i1 [ %16, %9 ], [ true, %4 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL16PrefixExpression5cloneEv(%"class.SkSL::PrefixExpression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = bitcast %"class.SkSL::Expression"* %5 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %7 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %7, i64 10
  %9 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call %"class.SkSL::Expression"* %9(%"class.SkSL::Expression"* %5) #7
  %11 = ptrtoint %"class.SkSL::Expression"* %10 to i64
  %12 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #7
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %10, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %"class.SkSL::Expression"* %10 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %16, i64 3
  %18 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %17, align 8
  %19 = tail call dereferenceable(184) %"class.SkSL::Type"* %18(%"class.SkSL::Expression"* %10) #7
  %20 = bitcast i8* %12 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %12, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %14, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 49, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %12, i64 16
  %26 = bitcast i8* %25 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %19, %"class.SkSL::Type"** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16PrefixExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %27 = getelementptr inbounds i8, i8* %12, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 %3, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %11, i64* %30, align 8
  %31 = bitcast i8* %12 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.62"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.62"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.62"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !14
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #7
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.62"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.62"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !14
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !14
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.62"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.62"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.62"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !14
  %5 = getelementptr inbounds %"class.SkSL::Literal.62", %"class.SkSL::Literal.62"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #7
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4SkSL4Type11displayNameEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4SkSL4Type11displayNameEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4SkSL4Type11displayNameEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4SkSL4Type11displayNameEv"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4SkSL4Type11displayNameEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4SkSLL15negate_operandsERKNS_7ContextE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEELb0EE: argument 0"}
!20 = distinct !{!20, !"_ZN4SkSLL15negate_operandsERKNS_7ContextE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEELb0EE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4SkSLL15negate_operandsERKNS_7ContextE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEELb0EE: argument 0"}
!23 = distinct !{!23, !"_ZN4SkSLL15negate_operandsERKNS_7ContextE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEELb0EE"}
