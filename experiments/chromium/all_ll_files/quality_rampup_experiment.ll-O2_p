; ModuleID = '../../third_party/webrtc/rtc_base/experiments/quality_rampup_experiment.cc'
source_filename = "../../third_party/webrtc/rtc_base/experiments/quality_rampup_experiment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::QualityRampupExperiment" = type { %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialOptional.7", %"class.absl::optional.13", %"class.absl::optional.18" }
%"class.webrtc::FieldTrialOptional" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional", [4 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"class.webrtc::FieldTrialOptional.7" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional.8" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { double }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { i64 }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { i32 }
%"class.webrtc::WebRtcKeyValueConfig" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::FieldTrialBasedConfig" = type { %"class.webrtc::WebRtcKeyValueConfig" }

@.str = private unnamed_addr constant [11 x i8] c"min_pixels\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"min_duration_ms\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"max_bitrate_factor\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"WebRTC-Video-QualityRampupSettings\00", align 1
@_ZTVN6webrtc21FieldTrialBasedConfigE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN6webrtc18FieldTrialOptionalIiEE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN6webrtc18FieldTrialOptionalIdEE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN6webrtc23QualityRampupExperimentC1EPKNS_20WebRtcKeyValueConfigE = hidden unnamed_addr alias void (%"class.webrtc::QualityRampupExperiment"*, %"class.webrtc::WebRtcKeyValueConfig"*), void (%"class.webrtc::QualityRampupExperiment"*, %"class.webrtc::WebRtcKeyValueConfig"*)* @_ZN6webrtc23QualityRampupExperimentC2EPKNS_20WebRtcKeyValueConfigE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23QualityRampupExperimentC2EPKNS_20WebRtcKeyValueConfigE(%"class.webrtc::QualityRampupExperiment"*, %"class.webrtc::WebRtcKeyValueConfig"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca [3 x %"class.webrtc::FieldTrialParameterInterface"*], align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 10, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #5
  %14 = getelementptr inbounds i8, i8* %13, i64 10
  store i8 0, i8* %14, align 2
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = bitcast %"class.webrtc::QualityRampupExperiment"* %0 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %13, i64 24, i1 false) #5
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* %16, %"class.std::__1::basic_string"* nonnull %5) #5
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #6
  br label %24

24:                                               ; preds = %21, %2
  %25 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc18FieldTrialOptionalIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  %27 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 15, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15, i1 false) #5
  %31 = getelementptr inbounds i8, i8* %30, i64 15
  store i8 0, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %"class.webrtc::FieldTrialOptional"* %27 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %30, i64 24, i1 false) #5
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* %33, %"class.std::__1::basic_string"* nonnull %4) #5
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %24
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #6
  br label %41

41:                                               ; preds = %38, %24
  %42 = getelementptr inbounds %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialOptional"* %27, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc18FieldTrialOptionalIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %44 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2
  %45 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 18, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #5
  %48 = getelementptr inbounds i8, i8* %47, i64 18
  store i8 0, i8* %48, align 2
  %49 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49)
  %50 = bitcast %"class.webrtc::FieldTrialOptional.7"* %44 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #5
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* %50, %"class.std::__1::basic_string"* nonnull %3) #5
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #6
  br label %58

58:                                               ; preds = %55, %41
  %59 = getelementptr inbounds %"class.webrtc::FieldTrialOptional.7", %"class.webrtc::FieldTrialOptional.7"* %44, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc18FieldTrialOptionalIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49)
  %61 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 4
  %63 = bitcast [3 x %"class.webrtc::FieldTrialParameterInterface"*]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #5
  %64 = bitcast [3 x %"class.webrtc::FieldTrialParameterInterface"*]* %9 to %"class.webrtc::QualityRampupExperiment"**
  store %"class.webrtc::QualityRampupExperiment"* %0, %"class.webrtc::QualityRampupExperiment"** %64, align 8
  %65 = getelementptr inbounds [3 x %"class.webrtc::FieldTrialParameterInterface"*], [3 x %"class.webrtc::FieldTrialParameterInterface"*]* %9, i64 0, i64 1
  %66 = bitcast %"class.webrtc::FieldTrialParameterInterface"** %65 to %"class.webrtc::FieldTrialOptional"**
  store %"class.webrtc::FieldTrialOptional"* %27, %"class.webrtc::FieldTrialOptional"** %66, align 8
  %67 = getelementptr inbounds [3 x %"class.webrtc::FieldTrialParameterInterface"*], [3 x %"class.webrtc::FieldTrialParameterInterface"*]* %9, i64 0, i64 2
  %68 = bitcast %"class.webrtc::FieldTrialParameterInterface"** %67 to %"class.webrtc::FieldTrialOptional.7"**
  store %"class.webrtc::FieldTrialOptional.7"* %44, %"class.webrtc::FieldTrialOptional.7"** %68, align 8
  %69 = getelementptr inbounds [3 x %"class.webrtc::FieldTrialParameterInterface"*], [3 x %"class.webrtc::FieldTrialParameterInterface"*]* %9, i64 0, i64 0
  %70 = bitcast %"class.webrtc::WebRtcKeyValueConfig"* %1 to void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)***
  %71 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)**, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %71, i64 2
  %73 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %72, align 8
  call void %73(%"class.std::__1::basic_string"* nonnull sret %10, %"class.webrtc::WebRtcKeyValueConfig"* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i64 34) #5
  call void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"** nonnull %69, i64 3, %"class.std::__1::basic_string"* nonnull %10) #5
  %74 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #6
  br label %81

81:                                               ; preds = %58, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #5
  ret void
}

declare void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"**, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23QualityRampupExperiment13ParseSettingsEv(%"class.webrtc::QualityRampupExperiment"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.webrtc::FieldTrialBasedConfig", align 8
  %3 = bitcast %"class.webrtc::FieldTrialBasedConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.webrtc::FieldTrialBasedConfig", %"class.webrtc::FieldTrialBasedConfig"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc21FieldTrialBasedConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::FieldTrialBasedConfig", %"class.webrtc::FieldTrialBasedConfig"* %2, i64 0, i32 0
  call void @_ZN6webrtc23QualityRampupExperimentC2EPKNS_20WebRtcKeyValueConfigE(%"class.webrtc::QualityRampupExperiment"* %0, %"class.webrtc::WebRtcKeyValueConfig"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc23QualityRampupExperiment9MinPixelsEv(%"class.webrtc::QualityRampupExperiment"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.absl::optional"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc23QualityRampupExperiment13MinDurationMsEv(%"class.webrtc::QualityRampupExperiment"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1, i32 1
  %3 = bitcast %"class.absl::optional"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, double } @_ZNK6webrtc23QualityRampupExperiment16MaxBitrateFactorEv(%"class.webrtc::QualityRampupExperiment"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = load double, double* %4, align 8
  %6 = insertvalue { i8, double } undef, i8 %3, 0
  %7 = insertvalue { i8, double } %6, double %5, 1
  ret { i8, double } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23QualityRampupExperiment13SetMaxBitrateEij(%"class.webrtc::QualityRampupExperiment"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %1
  %12 = icmp eq i32 %2, 0
  %13 = or i1 %12, %11
  br i1 %13, label %29, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 0, i32* %4, align 4
  %17 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = select i1 %19, i32* %4, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, %2
  %24 = select i1 %23, i32 %2, i32 %22
  %25 = bitcast %"class.absl::optional.18"* %15 to i64*
  %26 = zext i32 %24 to i64
  %27 = shl nuw i64 %26, 32
  %28 = or i64 %27, 1
  store i64 %28, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  br label %29

29:                                               ; preds = %3, %8, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc23QualityRampupExperiment6BwHighElj(%"class.webrtc::QualityRampupExperiment"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %45, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %45, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = uitofp i32 %2 to double
  %17 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = uitofp i32 %18 to double
  %20 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load double, double* %22, align 8
  %24 = icmp eq i8 %21, 0
  %25 = select i1 %24, double 1.000000e+00, double %23
  %26 = fmul double %25, %19
  %27 = fcmp ogt double %26, %16
  %28 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br i1 %27, label %29, label %30

29:                                               ; preds = %15
  store i8 0, i8* %28, align 8
  br label %45

30:                                               ; preds = %15
  %31 = load i8, i8* %28, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %30
  store i8 1, i8* %28, align 8
  %37 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %37, align 8
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i64 [ %35, %33 ], [ %1, %36 ]
  %40 = sub nsw i64 %1, %39
  %41 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = icmp sge i64 %40, %43
  br label %45

45:                                               ; preds = %11, %7, %3, %38, %29
  %46 = phi i1 [ false, %29 ], [ %44, %38 ], [ false, %11 ], [ false, %7 ], [ false, %3 ]
  ret i1 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc23QualityRampupExperiment7EnabledEv(%"class.webrtc::QualityRampupExperiment"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::QualityRampupExperiment", %"class.webrtc::QualityRampupExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ true, %5 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"*, %"class.std::__1::basic_string"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
