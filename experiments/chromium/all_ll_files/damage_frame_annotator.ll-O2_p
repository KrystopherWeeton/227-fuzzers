; ModuleID = '../../components/viz/service/display/damage_frame_annotator.cc'
source_filename = "../../components/viz/service/display/damage_frame_annotator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::DamageFrameAnnotator" = type { %"class.viz::SurfaceAggregator::FrameAnnotator", %"class.std::__1::vector" }
%"class.viz::SurfaceAggregator::FrameAnnotator" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"class.std::__1::__compressed_pair" }
%"struct.viz::DamageFrameAnnotator::AnnotationData" = type { %"class.gfx::Rect", %"class.gfx::Transform", %"struct.viz::DamageFrameAnnotator::Highlight" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.viz::DamageFrameAnnotator::Highlight" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.viz::DamageFrameAnnotator::AnnotationData"* }
%"class.viz::AggregatedFrame" = type { %"class.absl::optional", %"class.std::__1::vector.1", i8, i8, i8, i8, %"class.std::__1::vector.15", %"class.std::__1::unique_ptr", %"class.std::__1::vector.25" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.10" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gfx::Rect"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.viz::AggregatedRenderPass"* }
%"class.viz::AggregatedRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", i8, i8, [6 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.44", i8, i8, i8, i8, %"class.std::__1::vector.49", %"class.viz::QuadList", %"class.cc::ListContainer.63" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.39" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.15", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.33, i32, %"class.absl::optional.34", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.33 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::unique_ptr.51"*, %"class.std::__1::unique_ptr.51"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.51"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.57" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.63" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.27"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::ListContainerHelper::Iterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.cc::ListContainer<viz::DrawQuad>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, [7 x i8], %union.anon.76 }
%union.anon.76 = type { %"class.viz::DebugBorderDrawQuad" }
%"class.viz::DebugBorderDrawQuad" = type { %"class.viz::DrawQuad.base", i32, i32, [4 x i8] }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.77", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.82", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.gfx::Rect" }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.87"] }
%"class.util::IdType.87" = type { %"class.base::StrongAlias.88" }
%"class.base::StrongAlias.88" = type { i32 }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>

$_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE = comdat any

@_ZTVN3viz20DamageFrameAnnotatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::DamageFrameAnnotator"*)* @_ZN3viz20DamageFrameAnnotatorD2Ev to i8*), i8* bitcast (void (%"class.viz::DamageFrameAnnotator"*)* @_ZN3viz20DamageFrameAnnotatorD0Ev to i8*), i8* bitcast (void (%"class.viz::DamageFrameAnnotator"*, %"class.viz::AggregatedFrame"*)* @_ZN3viz20DamageFrameAnnotator23AnnotateAggregatedFrameEPNS_15AggregatedFrameE to i8*)] }, align 8
@__const._ZN3viz20DamageFrameAnnotator23AnnotateAggregatedFrameEPNS_15AggregatedFrameE.transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZTVN3viz19DebugBorderDrawQuadE = external unnamed_addr constant { [5 x i8*] }, align 8

@_ZN3viz20DamageFrameAnnotatorC1Ev = hidden unnamed_addr alias void (%"class.viz::DamageFrameAnnotator"*), void (%"class.viz::DamageFrameAnnotator"*)* @_ZN3viz20DamageFrameAnnotatorC2Ev
@_ZN3viz20DamageFrameAnnotatorD1Ev = hidden unnamed_addr alias void (%"class.viz::DamageFrameAnnotator"*), void (%"class.viz::DamageFrameAnnotator"*)* @_ZN3viz20DamageFrameAnnotatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DamageFrameAnnotatorC2Ev(%"class.viz::DamageFrameAnnotator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz20DamageFrameAnnotatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DamageFrameAnnotatorD2Ev(%"class.viz::DamageFrameAnnotator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz20DamageFrameAnnotatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %3, align 8
  %5 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4 to i64
  %8 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DamageFrameAnnotatorD0Ev(%"class.viz::DamageFrameAnnotator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz20DamageFrameAnnotatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %3, align 8
  %5 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4 to i64
  %8 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.viz::DamageFrameAnnotator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DamageFrameAnnotator23AnnotateAggregatedFrameEPNS_15AggregatedFrameE(%"class.viz::DamageFrameAnnotator"*, %"class.viz::AggregatedFrame"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca [68 x i8], align 4
  %5 = getelementptr inbounds [68 x i8], [68 x i8]* %4, i64 0, i64 0
  %6 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %7, i64 -1, i32 0, i32 0, i32 0
  %9 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %8, align 8
  %10 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %10) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz20DamageFrameAnnotator23AnnotateAggregatedFrameEPNS_15AggregatedFrameE.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %9, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %3, float %14, float %17) #7
  %18 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5)
  %19 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %9, i64 0, i32 0, i32 1, i32 1
  %20 = bitcast %"class.gfx::Size"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* nonnull align 4 %10, i64 68, i1 false)
  %22 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %24, align 8
  %26 = icmp ult %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, %25
  %27 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %25 to i64
  br i1 %26, label %28, label %41

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 0, i32 0, i32 1
  %32 = bitcast %"class.gfx::Size"* %31 to i64*
  store i64 %21, i64* %32, align 4
  %33 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 0, i32 1
  %34 = bitcast %"class.gfx::Transform"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %5, i64 68, i1 false)
  %35 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 0, i32 2
  %36 = bitcast %"struct.viz::DamageFrameAnnotator::Highlight"* %35 to i64*
  store i64 19344064512, i64* %36, align 4
  %37 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23, i64 1
  %38 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %37 to i64
  %39 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %22 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector"* %18 to i64*
  br label %115

41:                                               ; preds = %2
  %42 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %23 to i64
  %43 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %22 to i64*
  %44 = bitcast %"class.std::__1::vector"* %18 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = sdiv exact i64 %46, 92
  %48 = add nsw i64 %47, 1
  %49 = icmp ugt i64 %48, 200508087757712517
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #9
  unreachable

52:                                               ; preds = %41
  %53 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %24 to i64*
  %54 = sub i64 %27, %45
  %55 = sdiv exact i64 %54, 92
  %56 = icmp ult i64 %55, 100254043878856258
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = shl nsw i64 %55, 1
  %59 = icmp ult i64 %58, %48
  %60 = select i1 %59, i64 %48, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %57, %52
  %63 = phi i64 [ %60, %57 ], [ 200508087757712517, %52 ]
  %64 = mul i64 %63, 92
  %65 = call i8* @_Znwm(i64 %64) #8
  %66 = bitcast i8* %65 to %"struct.viz::DamageFrameAnnotator::AnnotationData"*
  br label %67

67:                                               ; preds = %62, %57
  %68 = phi i64 [ %63, %62 ], [ 0, %57 ]
  %69 = phi %"struct.viz::DamageFrameAnnotator::AnnotationData"* [ %66, %62 ], [ null, %57 ]
  %70 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %47
  %71 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %68
  %72 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %71 to i64
  %73 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %70, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %47, i32 0, i32 0, i32 1
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %47, i32 0, i32 1
  %76 = bitcast %"class.gfx::Size"* %75 to i64*
  store i64 %21, i64* %76, align 4
  %77 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %47, i32 1
  %78 = bitcast %"class.gfx::Transform"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %5, i64 68, i1 false)
  %79 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %69, i64 %47, i32 2
  %80 = bitcast %"struct.viz::DamageFrameAnnotator::Highlight"* %79 to i64*
  store i64 19344064512, i64* %80, align 4
  %81 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %70, i64 1
  %82 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %84 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %83, align 8
  %85 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %22, align 8
  %86 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %85, %84
  br i1 %86, label %87, label %89

87:                                               ; preds = %67
  %88 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %84 to i64
  br label %108

89:                                               ; preds = %67, %89
  %90 = phi %"struct.viz::DamageFrameAnnotator::AnnotationData"* [ %92, %89 ], [ %70, %67 ]
  %91 = phi %"struct.viz::DamageFrameAnnotator::AnnotationData"* [ %93, %89 ], [ %85, %67 ]
  %92 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %90, i64 -1
  %93 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %91, i64 -1
  %94 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"* %92 to i8*
  %95 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 16, i1 false) #7
  %96 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %90, i64 -1, i32 1
  %97 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %91, i64 -1, i32 1
  %98 = bitcast %"class.gfx::Transform"* %96 to i8*
  %99 = bitcast %"class.gfx::Transform"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 68, i1 false) #7
  %100 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %90, i64 -1, i32 2
  %101 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %91, i64 -1, i32 2
  %102 = bitcast %"struct.viz::DamageFrameAnnotator::Highlight"* %101 to i64*
  %103 = bitcast %"struct.viz::DamageFrameAnnotator::Highlight"* %100 to i64*
  %104 = load i64, i64* %102, align 4
  store i64 %104, i64* %103, align 4
  %105 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %93, %84
  br i1 %105, label %106, label %89

106:                                              ; preds = %89
  %107 = load i64, i64* %44, align 8
  br label %108

108:                                              ; preds = %106, %87
  %109 = phi %"struct.viz::DamageFrameAnnotator::AnnotationData"* [ %70, %87 ], [ %92, %106 ]
  %110 = phi i64 [ %88, %87 ], [ %107, %106 ]
  %111 = ptrtoint %"struct.viz::DamageFrameAnnotator::AnnotationData"* %109 to i64
  store i64 %111, i64* %44, align 8
  store i64 %82, i64* %43, align 8
  store i64 %72, i64* %53, align 8
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = inttoptr i64 %110 to i8*
  call void @_ZdlPv(i8* %114) #8
  br label %115

115:                                              ; preds = %28, %108, %113
  %116 = phi i64* [ %39, %28 ], [ %43, %108 ], [ %43, %113 ]
  %117 = phi i64* [ %40, %28 ], [ %44, %108 ], [ %44, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5)
  call void @_ZN3viz20DamageFrameAnnotator22AnnotateRootRenderPassEPNS_20AggregatedRenderPassE(%"class.viz::DamageFrameAnnotator"* %0, %"class.viz::AggregatedRenderPass"* %9)
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %10) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DamageFrameAnnotator22AnnotateRootRenderPassEPNS_20AggregatedRenderPassE(%"class.viz::DamageFrameAnnotator"* nocapture readonly, %"class.viz::AggregatedRenderPass"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %5 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %6 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %7 = alloca %"class.absl::optional.72", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.gfx::Rect"*
  %10 = alloca %"class.gfx::MaskFilterInfo", align 4
  %11 = alloca %"class.absl::optional.77", align 4
  %12 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.viz::DamageFrameAnnotator", %"class.viz::DamageFrameAnnotator"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.viz::DamageFrameAnnotator::AnnotationData"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 92
  %20 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %1, i64 0, i32 0, i32 11, i32 0
  %24 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  %25 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #7, !noalias !2
  %26 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %23, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %26) #7, !noalias !2
  %27 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %27, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %28) #7
  %29 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !2
  store i64 %31, i64* %29, align 8, !alias.scope !2
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #7, !noalias !2
  %32 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = bitcast %union.anon.76* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 88, i1 false) #7
  call void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull sret %5, %"class.cc::ListContainer"* %23, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull %6, i64 %19, %"class.absl::optional.72"* nonnull %7)
  %35 = load i8, i8* %32, align 8, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %39 = bitcast %"class.viz::DebugBorderDrawQuad"* %38 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"* %39) #7
  store i8 0, i8* %32, align 8
  br label %40

40:                                               ; preds = %2, %37
  %41 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %41) #7
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %43 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %42, align 8
  %44 = load %"struct.viz::DamageFrameAnnotator::AnnotationData"*, %"struct.viz::DamageFrameAnnotator::AnnotationData"** %13, align 8
  %45 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %43, %44
  br i1 %45, label %60, label %46

46:                                               ; preds = %40
  %47 = bitcast { i64, i64 }* %8 to i8*
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %50 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %1, i64 0, i32 0, i32 12, i32 0
  %51 = bitcast %"class.gfx::MaskFilterInfo"* %10 to i8*
  %52 = getelementptr inbounds %"class.absl::optional.77", %"class.absl::optional.77"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.absl::optional.77", %"class.absl::optional.77"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = bitcast %"class.gfx::Rect"* %53 to i8*
  %55 = bitcast i8** %21 to %"class.viz::DebugBorderDrawQuad"**
  %56 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %4 to i8*
  %58 = bitcast { i64, i64 }* %8 to i8*
  %59 = bitcast %"class.gfx::MaskFilterInfo"* %10 to i8*
  br label %65

60:                                               ; preds = %65, %40
  %61 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %1, i64 0, i32 0, i32 1
  %62 = bitcast %"class.gfx::Rect"* %61 to i8*
  %63 = bitcast %"class.viz::AggregatedRenderPass"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 4 %63, i64 16, i1 false)
  %64 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %64) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #7
  ret void

65:                                               ; preds = %46, %65
  %66 = phi %"struct.viz::DamageFrameAnnotator::AnnotationData"* [ %43, %46 ], [ %81, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #7
  %67 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %66, i64 0, i32 1
  %68 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %66, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  %69 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %67, %"class.gfx::Rect"* dereferenceable(16) %68) #7
  %70 = extractvalue { i64, i64 } %69, 0
  store i64 %70, i64* %49, align 8
  %71 = extractvalue { i64, i64 } %69, 1
  store i64 %71, i64* %48, align 8
  %72 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %50, i64 8, i64 216) #7
  %73 = bitcast i8* %72 to %"class.viz::SharedQuadState"*
  call void @_ZN3viz15SharedQuadStateC1Ev(%"class.viz::SharedQuadState"* %73) #7
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %51) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %59, i8 0, i64 52, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %52) #7
  store i8 1, i8* %52, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 8 %47, i64 16, i1 false) #7
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %73, %"class.gfx::Transform"* dereferenceable(68) %67, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, %"class.gfx::MaskFilterInfo"* nonnull dereferenceable(52) %10, %"class.absl::optional.77"* nonnull dereferenceable(20) %11, i1 zeroext false, float 1.000000e+00, i32 3, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %51) #7
  %74 = load %"class.viz::DebugBorderDrawQuad"*, %"class.viz::DebugBorderDrawQuad"** %55, align 8
  %75 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %66, i64 0, i32 2, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %66, i64 0, i32 2, i32 1
  %78 = load i32, i32* %77, align 4
  call void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"* %74, %"class.viz::SharedQuadState"* %73, %"class.gfx::Rect"* dereferenceable(16) %68, %"class.gfx::Rect"* dereferenceable(16) %68, i32 %76, i32 %78) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %4, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %56) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #7
  %79 = load i64, i64* %22, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #7
  %81 = getelementptr inbounds %"struct.viz::DamageFrameAnnotator::AnnotationData", %"struct.viz::DamageFrameAnnotator::AnnotationData"* %66, i64 1
  %82 = icmp eq %"struct.viz::DamageFrameAnnotator::AnnotationData"* %81, %44
  br i1 %82, label %60, label %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* noalias sret, %"class.cc::ListContainer"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, i64, %"class.absl::optional.72"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0
  tail call void @_ZN2cc19ListContainerHelper36InsertBeforeAndInvalidateAllPointersEPNS0_8IteratorEm(%"class.cc::ListContainerHelper"* %7, %"class.cc::ListContainerHelper::Iterator"* %8, i64 %3) #7
  %9 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  %12 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 32, i1 false)
  tail call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %10, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %11) #7
  %13 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %9, align 8
  %15 = icmp eq i64 %3, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to %"class.viz::DebugBorderDrawQuad"**
  %20 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = bitcast %"class.viz::DebugBorderDrawQuad"* %20 to %"class.viz::DrawQuad"*
  %22 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %23 = bitcast i32* %22 to i64*
  %24 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  br label %25

25:                                               ; preds = %37, %16
  %26 = phi i64 [ 0, %16 ], [ %40, %37 ]
  %27 = load i8, i8* %17, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  %29 = load %"class.viz::DebugBorderDrawQuad"*, %"class.viz::DebugBorderDrawQuad"** %19, align 8
  br i1 %28, label %36, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.viz::DebugBorderDrawQuad"* %29 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"* %31, %"class.viz::DrawQuad"* dereferenceable(80) %21) #7
  %32 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz19DebugBorderDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %29, i64 0, i32 1
  %34 = bitcast i32* %33 to i64*
  %35 = load i64, i64* %23, align 4
  store i64 %35, i64* %34, align 4
  br label %37

36:                                               ; preds = %25
  call void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"* %29) #7
  br label %37

37:                                               ; preds = %36, %30
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7
  %38 = load i64, i64* %13, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %13, align 8
  %40 = add nuw i64 %26, 1
  %41 = icmp eq i64 %40, %3
  br i1 %41, label %42, label %25

42:                                               ; preds = %37, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #4

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::MaskFilterInfo"* dereferenceable(52), %"class.absl::optional.77"* dereferenceable(20), i1 zeroext, float, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #4

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper36InsertBeforeAndInvalidateAllPointersEPNS0_8IteratorEm(%"class.cc::ListContainerHelper"*, %"class.cc::ListContainerHelper::Iterator"*, i64) local_unnamed_addr #3

declare void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"*) unnamed_addr #3

declare void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"*, %"class.viz::DrawQuad"* dereferenceable(80)) unnamed_addr #3

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #3

declare void @_ZN3viz15SharedQuadStateC1Ev(%"class.viz::SharedQuadState"*) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!5 = !{i8 0, i8 2}
