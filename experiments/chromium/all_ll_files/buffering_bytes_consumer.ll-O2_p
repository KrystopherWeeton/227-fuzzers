; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/buffering_bytes_consumer.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/buffering_bytes_consumer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.169", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.205", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::Worklist.109"* }
%"class.blink::Worklist.109" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist.116"* }
%"class.blink::Worklist.116" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.63" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.137", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i64 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { float }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.146", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.155" }
%"class.WTF::Vector.155" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.169" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.95"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.102"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.209" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::BufferingBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::BytesConsumer::Client", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.WTF::Deque", i64, i32, i8, i8, %"class.blink::Member.13" }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::BytesConsumer"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<WTF::Vector<char, 0, WTF::PartitionAllocator>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<WTF::Vector<char, 0, WTF::PartitionAllocator>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::Vector"*, i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { i8*, i32, i32 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::BytesConsumer::Client"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.16" }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::String" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector.24", i64, %"class.WTF::Vector", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.15, i64, i64, %"class.absl::optional", %class.scoped_refptr.28 }
%class.scoped_refptr.15 = type { %"class.blink::BlobDataHandle"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.27" }
%"class.base::time_internal::TimeBase.27" = type { i64 }
%class.scoped_refptr.28 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.mojo::ScopedHandleBase.31" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.214", %"class.blink::FreeList", %"class.WTF::Vector.219" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.231 }
%union.anon.231 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.236", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.236" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::BufferingBytesConsumer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.238" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::WeakPtr" }
%"class.std::__1::__tuple_leaf.238" = type { %"class.blink::WeakPersistent" }

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E5clearEv = comdat any

$_ZNK5blink22BufferingBytesConsumer9DebugNameEv = comdat any

$_ZThn8_NK5blink22BufferingBytesConsumer9DebugNameEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEED0Ev = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE5FiredEv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_22BufferingBytesConsumerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_22BufferingBytesConsumerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_22BufferingBytesConsumerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_22BufferingBytesConsumerEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIcLj0ES0_EEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEEE = comdat any

@_ZTVN5blink22BufferingBytesConsumerE = hidden unnamed_addr constant { [17 x i8*], [7 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::BufferingBytesConsumer"*, i8**, i64*)* @_ZN5blink22BufferingBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::BufferingBytesConsumer"*, i64)* @_ZN5blink22BufferingBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::BufferingBytesConsumer"*, i32)* @_ZN5blink22BufferingBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink22BufferingBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::BufferingBytesConsumer"*)* @_ZNK5blink22BufferingBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BufferingBytesConsumer"*)* @_ZNK5blink22BufferingBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BufferingBytesConsumer"*)* @_ZNK5blink22BufferingBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumer13OnStateChangeEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZThn8_N5blink22BufferingBytesConsumerD1Ev to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZThn8_N5blink22BufferingBytesConsumerD0Ev to i8*), i8* bitcast (void (%"class.blink::BufferingBytesConsumer"*)* @_ZThn8_N5blink22BufferingBytesConsumer13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BufferingBytesConsumer"*)* @_ZThn8_NK5blink22BufferingBytesConsumer9DebugNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"BufferingBytesConsumer\00", align 1
@.str.1 = private unnamed_addr constant [83 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/buffering_bytes_consumer.cc\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*)* @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.7 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<char, 0, WTF::PartitionAllocator>]\00", align 1

@_ZN5blink22BufferingBytesConsumerC1EN4base7PassKeyIS0_EEPNS_13BytesConsumerE13scoped_refptrINS1_22SingleThreadTaskRunnerEENS1_9TimeDeltaE = hidden unnamed_addr alias void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::BytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, i64), void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::BytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, i64)* @_ZN5blink22BufferingBytesConsumerC2EN4base7PassKeyIS0_EEPNS_13BytesConsumerE13scoped_refptrINS1_22SingleThreadTaskRunnerEENS1_9TimeDeltaE
@_ZN5blink22BufferingBytesConsumerD1Ev = hidden unnamed_addr alias void (%"class.blink::BufferingBytesConsumer"*), void (%"class.blink::BufferingBytesConsumer"*)* @_ZN5blink22BufferingBytesConsumerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BufferingBytesConsumer"* @_ZN5blink22BufferingBytesConsumer15CreateWithDelayEPNS_13BytesConsumerE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::BytesConsumer"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 176) #10
  %4 = bitcast i8* %3 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZN5blink22BufferingBytesConsumerC2EN4base7PassKeyIS0_EEPNS_13BytesConsumerE13scoped_refptrINS1_22SingleThreadTaskRunnerEENS1_9TimeDeltaE(%"class.blink::BufferingBytesConsumer"* %4, %"class.blink::BytesConsumer"* %0, %"class.base::SingleThreadTaskRunner"* %1, i64 50000) #10
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  ret %"class.blink::BufferingBytesConsumer"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BufferingBytesConsumer"* @_ZN5blink22BufferingBytesConsumer6CreateEPNS_13BytesConsumerE(%"class.blink::BytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 176) #10
  %3 = bitcast i8* %2 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZN5blink22BufferingBytesConsumerC2EN4base7PassKeyIS0_EEPNS_13BytesConsumerE13scoped_refptrINS1_22SingleThreadTaskRunnerEENS1_9TimeDeltaE(%"class.blink::BufferingBytesConsumer"* %3, %"class.blink::BytesConsumer"* %0, %"class.base::SingleThreadTaskRunner"* null, i64 0) #10
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::BufferingBytesConsumer"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumerC2EN4base7PassKeyIS0_EEPNS_13BytesConsumerE13scoped_refptrINS1_22SingleThreadTaskRunnerEENS1_9TimeDeltaE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::BytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Location", align 8
  %6 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::BufferingBytesConsumer"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*] }, { [17 x i8*], [7 x i8*] }* @_ZTVN5blink22BufferingBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*] }, { [17 x i8*], [7 x i8*] }* @_ZTVN5blink22BufferingBytesConsumerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::BytesConsumer"* %1, %"class.blink::BytesConsumer"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %9, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %10, %"class.base::SingleThreadTaskRunner"* %2) #10
  %11 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  store %"class.blink::BufferingBytesConsumer"* %0, %"class.blink::BufferingBytesConsumer"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 2, i32 0
  store i64 ptrtoint (void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)* @_ZN5blink22BufferingBytesConsumer12OnTimerFiredEPNS_9TimerBaseE to i64), i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 2, i32 1
  %15 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.blink::BytesConsumer::Client"* null, %"class.blink::BytesConsumer::Client"** %16, align 8
  %17 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 46, i1 false)
  %18 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %19 = bitcast %"class.blink::BytesConsumer"* %18 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %20 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %20, i64 7
  %22 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %21, align 8
  tail call void %22(%"class.blink::BytesConsumer"* %18, %"class.blink::BytesConsumer::Client"* %6) #10
  %23 = icmp eq i64 %3, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %4
  %25 = load i32, i32* %15, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %28) #10
  store i32 1, i32* %15, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0) #10
  br label %31

29:                                               ; preds = %4
  %30 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 49) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %10, i64 %3, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #10
  br label %31

31:                                               ; preds = %29, %24, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer12OnTimerFiredEPNS_9TimerBaseE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %7) #10
  store i32 1, i32* %3, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0) #10
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer19MaybeStartBufferingEv(%"class.blink::BufferingBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %6) #10
  store i32 1, i32* %2, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0)
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumerD2Ev(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::BufferingBytesConsumer"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*] }, { [17 x i8*], [7 x i8*] }* @_ZTVN5blink22BufferingBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*] }, { [17 x i8*], [7 x i8*] }* @_ZTVN5blink22BufferingBytesConsumerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::Vector"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %82, label %14

14:                                               ; preds = %7
  %15 = icmp ugt i32 %10, %12
  %16 = zext i32 %12 to i64
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %16
  br i1 %15, label %35, label %18

18:                                               ; preds = %14
  %19 = zext i32 %10 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %19
  br label %21

21:                                               ; preds = %32, %18
  %22 = phi %"class.WTF::Vector"* [ %33, %32 ], [ %20, %18 ]
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %26
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %26
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #10
  store i8* null, i8** %23, align 8
  br label %32

32:                                               ; preds = %31, %21
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 1
  %34 = icmp eq %"class.WTF::Vector"* %33, %17
  br i1 %34, label %79, label %21

35:                                               ; preds = %14
  %36 = icmp eq i32 %12, 0
  br i1 %36, label %54, label %37

37:                                               ; preds = %35, %48
  %38 = phi %"class.WTF::Vector"* [ %49, %48 ], [ %5, %35 ]
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %48, label %42, !prof !2

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #10
  store i8* null, i8** %39, align 8
  br label %48

48:                                               ; preds = %47, %37
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 1
  %50 = icmp eq %"class.WTF::Vector"* %49, %17
  br i1 %50, label %51, label %37

51:                                               ; preds = %48
  %52 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %53 = load i32, i32* %9, align 8
  br label %54

54:                                               ; preds = %51, %35
  %55 = phi i32 [ %53, %51 ], [ %10, %35 ]
  %56 = phi %"class.WTF::Vector"* [ %52, %51 ], [ %5, %35 ]
  %57 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %56, i64 %59
  %61 = icmp eq i32 %55, %58
  br i1 %61, label %79, label %62

62:                                               ; preds = %54
  %63 = zext i32 %55 to i64
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %56, i64 %63
  br label %65

65:                                               ; preds = %76, %62
  %66 = phi %"class.WTF::Vector"* [ %77, %76 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %76, label %70, !prof !2

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %66, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %70
  store i32 0, i32* %71, align 4
  br label %75

75:                                               ; preds = %74, %70
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #10
  store i8* null, i8** %67, align 8
  br label %76

76:                                               ; preds = %75, %65
  %77 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %66, i64 1
  %78 = icmp eq %"class.WTF::Vector"* %77, %60
  br i1 %78, label %79, label %65

79:                                               ; preds = %32, %76, %54
  %80 = bitcast %"class.WTF::Deque"* %3 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %7
  %83 = phi i8* [ %81, %79 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #10
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %4, align 8
  br label %84

84:                                               ; preds = %1, %82
  %85 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %85) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22BufferingBytesConsumerD1Ev(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 -1, i32 9
  %3 = bitcast %"class.blink::Member.13"* %2 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZN5blink22BufferingBytesConsumerD2Ev(%"class.blink::BufferingBytesConsumer"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumerD0Ev(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink22BufferingBytesConsumerD2Ev(%"class.blink::BufferingBytesConsumer"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22BufferingBytesConsumerD0Ev(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 -1, i32 9
  %3 = bitcast %"class.blink::Member.13"* %2 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZN5blink22BufferingBytesConsumerD2Ev(%"class.blink::BufferingBytesConsumer"* %3) #10
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %97

8:                                                ; preds = %1
  %9 = bitcast i8** %2 to i8*
  %10 = bitcast i64* %3 to i8*
  %11 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.WTF::Vector"* %4 to i8*
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 1
  %18 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 2
  %19 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::Vector"* %4 to i64*
  br label %22

22:                                               ; preds = %8, %92
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  store i8* null, i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store i64 0, i64* %3, align 8
  %23 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %11, align 8
  %24 = bitcast %"class.blink::BytesConsumer"* %23 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %25 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %25, i64 2
  %27 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %26, align 8
  %28 = call i32 %27(%"class.blink::BytesConsumer"* %23, i8** nonnull %2, i64* nonnull %3) #10
  switch i32 %28, label %86 [
    i32 1, label %96
    i32 0, label %29
  ]

29:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #10
  %30 = load i64, i64* %3, align 8
  %31 = icmp ult i64 %30, 4294967296
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %29
  %34 = load i8*, i8** %2, align 8
  %35 = trunc i64 %30 to i32
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"* nonnull %4, i8* %34, i32 %35)
  %36 = load i32, i32* %17, align 8
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* %18, align 4
  br i1 %37, label %42, label %39

39:                                               ; preds = %33
  %40 = add i32 %38, 1
  %41 = icmp eq i32 %40, %36
  br i1 %41, label %50, label %52

42:                                               ; preds = %33
  %43 = icmp eq i32 %38, 0
  %44 = load i32, i32* %19, align 8
  br i1 %43, label %48, label %45

45:                                               ; preds = %42
  %46 = add i32 %44, -1
  %47 = icmp eq i32 %38, %46
  br i1 %47, label %50, label %52

48:                                               ; preds = %42
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48, %45, %39
  call void @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E14ExpandCapacityEv(%"class.WTF::Deque"* %16) #10
  %51 = load i32, i32* %18, align 4
  br label %52

52:                                               ; preds = %39, %45, %48, %50
  %53 = phi i32 [ %38, %39 ], [ %38, %45 ], [ 0, %48 ], [ %51, %50 ]
  %54 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %20, align 8
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %54, i64 %55
  %57 = load i32, i32* %19, align 8
  %58 = add i32 %57, -1
  %59 = icmp eq i32 %53, %58
  %60 = add i32 %53, 1
  %61 = select i1 %59, i32 0, i32 %60
  store i32 %61, i32* %18, align 4
  %62 = bitcast %"class.WTF::Vector"* %56 to i8*
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %54, i64 %55, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %54, i64 %55, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #10
  %65 = load i64, i64* %21, align 8
  %66 = bitcast %"class.WTF::Vector"* %56 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = load i32, i32* %63, align 4
  %68 = load i32, i32* %14, align 8
  store i32 %68, i32* %63, align 4
  store i32 %67, i32* %14, align 8
  %69 = load i32, i32* %64, align 4
  %70 = load i32, i32* %15, align 4
  store i32 %70, i32* %64, align 4
  store i32 %69, i32* %15, align 4
  %71 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %11, align 8
  %72 = load i64, i64* %3, align 8
  %73 = bitcast %"class.blink::BytesConsumer"* %71 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %74 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %74, i64 3
  %76 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %75, align 8
  %77 = call i32 %76(%"class.blink::BytesConsumer"* %71, i64 %72) #10
  %78 = load i8*, i8** %13, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !2

80:                                               ; preds = %52
  %81 = load i32, i32* %15, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %80
  store i32 0, i32* %15, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #10
  store i8* null, i8** %13, align 8
  br label %85

85:                                               ; preds = %52, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br label %86

86:                                               ; preds = %22, %85
  %87 = phi i32 [ %77, %85 ], [ %28, %22 ]
  switch i32 %87, label %90 [
    i32 2, label %88
    i32 0, label %92
  ]

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 7
  store i8 1, i8* %89, align 4
  br label %93

90:                                               ; preds = %86
  call void @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E5clearEv(%"class.WTF::Deque"* %16)
  %91 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 8
  store i8 1, i8* %91, align 1
  br label %93

92:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %22

93:                                               ; preds = %90, %88
  %94 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %95 = bitcast %"class.blink::Member.13"* %94 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  br label %96

96:                                               ; preds = %22, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %97

97:                                               ; preds = %96, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer13StopBufferingEv(%"class.blink::BufferingBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %2) #10
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  store i32 2, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22BufferingBytesConsumer9BeginReadEPPKcPm(%"class.blink::BufferingBytesConsumer"*, i8**, i64*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %8) #10
  store i32 1, i32* %4, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0) #10
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %49

16:                                               ; preds = %9
  %17 = load i32, i32* %4, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %27, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %20, align 8
  %22 = bitcast %"class.blink::BytesConsumer"* %21 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %23 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %23, i64 2
  %25 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::BytesConsumer"* %21, i8** %1, i64* %2) #10
  br label %62

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 8
  %29 = load i8, i8* %28, align 1, !range !4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %62

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 7
  %33 = load i8, i8* %32, align 4, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %37 = bitcast %"class.blink::Member.13"* %36 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  br label %62

38:                                               ; preds = %31
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0)
  %39 = load i8, i8* %28, align 1, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %62

41:                                               ; preds = %38
  %42 = load i32, i32* %11, align 8
  %43 = load i32, i32* %13, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = load i8, i8* %32, align 4, !range !4
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 1, i32 2
  br label %62

49:                                               ; preds = %41, %9
  %50 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Deque"* %10, i32 0) #10
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 5
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  store i8* %55, i8** %1, align 8
  %56 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Deque"* %10, i32 0) #10
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %56, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = load i64, i64* %53, align 8
  %61 = sub i64 %59, %60
  store i64 %61, i64* %2, align 8
  br label %62

62:                                               ; preds = %38, %27, %49, %45, %35, %19
  %63 = phi i32 [ %26, %19 ], [ 2, %35 ], [ %48, %45 ], [ 0, %49 ], [ 3, %27 ], [ 3, %38 ]
  ret i32 %63
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer11ClearClientEv(%"class.blink::BufferingBytesConsumer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %3 = bitcast %"class.blink::Member.13"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22BufferingBytesConsumer7EndReadEm(%"class.blink::BufferingBytesConsumer"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %74, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %14, align 8
  %16 = bitcast %"class.blink::BytesConsumer"* %15 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %17 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %17, i64 3
  %19 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::BytesConsumer"* %15, i64 %1) #10
  br label %74

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %1
  store i64 %24, i64* %22, align 8
  %25 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Deque"* %3, i32 0) #10
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp eq i64 %24, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = load i32, i32* %4, align 8
  br label %63

32:                                               ; preds = %21
  store i64 0, i64* %22, align 8
  %33 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %33, align 8
  %35 = load i32, i32* %4, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 %36
  %38 = add i32 %35, 1
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 %39
  br label %41

41:                                               ; preds = %52, %32
  %42 = phi %"class.WTF::Vector"* [ %53, %52 ], [ %37, %32 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %52, label %46, !prof !2

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %42, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %46
  store i32 0, i32* %47, align 4
  br label %51

51:                                               ; preds = %50, %46
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %44) #10
  store i8* null, i8** %43, align 8
  br label %52

52:                                               ; preds = %51, %41
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %42, i64 1
  %54 = icmp eq %"class.WTF::Vector"* %53, %40
  br i1 %54, label %55, label %41

55:                                               ; preds = %52
  %56 = load i32, i32* %4, align 8
  %57 = add i32 %56, 1
  %58 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, -1
  %61 = icmp eq i32 %56, %60
  %62 = select i1 %61, i32 0, i32 %57
  store i32 %62, i32* %4, align 8
  br label %63

63:                                               ; preds = %30, %55
  %64 = phi i32 [ %31, %30 ], [ %62, %55 ]
  %65 = load i32, i32* %6, align 4
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 7
  %69 = load i8, i8* %68, align 4, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %73 = bitcast %"class.blink::Member.13"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  br label %74

74:                                               ; preds = %63, %67, %9, %71, %13
  %75 = phi i32 [ %20, %13 ], [ 2, %71 ], [ 3, %9 ], [ 0, %67 ], [ 0, %63 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BlobDataHandle"* @_ZN5blink22BufferingBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::BufferingBytesConsumer"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)***
  %6 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)**, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %6, i64 4
  %8 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %7, align 8
  %9 = tail call %"class.blink::BlobDataHandle"* %8(%"class.blink::BytesConsumer"* %4, i32 %1) #10
  ret %"class.blink::BlobDataHandle"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZN5blink22BufferingBytesConsumer15DrainAsFormDataEv(%"class.blink::BufferingBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)**, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %5, i64 5
  %7 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.blink::EncodedFormData"* %7(%"class.blink::BytesConsumer"* %3) #10
  ret %"class.blink::EncodedFormData"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer15DrainAsDataPipeEv(%"class.mojo::ScopedHandleBase.31"* noalias sret, %"class.blink::BufferingBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %1, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %7, align 8
  %9 = bitcast %"class.blink::BytesConsumer"* %8 to void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)***
  %10 = load void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)**, void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)*, void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)** %10, i64 6
  %12 = load void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)*, void (%"class.mojo::ScopedHandleBase.31"*, %"class.blink::BytesConsumer"*)** %11, align 8
  tail call void %12(%"class.mojo::ScopedHandleBase.31"* sret %0, %"class.blink::BytesConsumer"* %8) #10
  br label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.mojo::ScopedHandleBase.31", %"class.mojo::ScopedHandleBase.31"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %14, align 4
  br label %15

15:                                               ; preds = %13, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::BufferingBytesConsumer"* nocapture, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %4 = ptrtoint %"class.blink::BytesConsumer::Client"* %1 to i64
  %5 = bitcast %"class.blink::Member.13"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::BytesConsumer::Client"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer6CancelEv(%"class.blink::BufferingBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %3 = bitcast %"class.blink::Member.13"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %4, align 8
  %6 = bitcast %"class.blink::BytesConsumer"* %5 to void (%"class.blink::BytesConsumer"*)***
  %7 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %7, i64 9
  %9 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %8, align 8
  tail call void %9(%"class.blink::BytesConsumer"* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink22BufferingBytesConsumer14GetPublicStateEv(%"class.blink::BufferingBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %10 = bitcast %"class.blink::BytesConsumer"* %9 to i32 (%"class.blink::BytesConsumer"*)***
  %11 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %11, i64 10
  %13 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::BytesConsumer"* %9) #10
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i32 [ %14, %7 ], [ 0, %1 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink22BufferingBytesConsumer8GetErrorEv(%"class.blink::BufferingBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)**, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %5, i64 11
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::BytesConsumer"* %3) #10
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::Member.13"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #10, !range !5
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #10
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3
  %86 = bitcast %"class.blink::HeapTaskRunnerTimer"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 3, i32 1
  %91 = bitcast %"class.blink::WeakMember"* %90 to i64*
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::WeakMember"* %90 to i8*
  %96 = inttoptr i64 %92 to i8*
  %97 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %98, i64 6
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %99, align 8
  tail call void %100(%"class.blink::Visitor"* %1, i8* nonnull %96, i8* %95, i8* %96, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_22BufferingBytesConsumerEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %101

101:                                              ; preds = %84, %89, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 -1, i32 9
  %4 = bitcast %"class.blink::Member.13"* %3 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BufferingBytesConsumer13OnStateChangeEv(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %2, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %0)
  %4 = icmp eq %"class.blink::BytesConsumer::Client"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::BytesConsumer::Client"* %3 to void (%"class.blink::BytesConsumer::Client"*)***
  %7 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %7, i64 3
  %9 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %8, align 8
  tail call void %9(%"class.blink::BytesConsumer::Client"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink22BufferingBytesConsumer13OnStateChangeEv(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %0, i64 -1, i32 9
  %3 = bitcast %"class.blink::Member.13"* %2 to %"class.blink::BufferingBytesConsumer"*
  %4 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 21, i32 0, i32 0
  %5 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %4, align 8
  tail call void @_ZN5blink22BufferingBytesConsumer10BufferDataEv(%"class.blink::BufferingBytesConsumer"* %3) #10
  %6 = icmp eq %"class.blink::BytesConsumer::Client"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::BytesConsumer::Client"* %5 to void (%"class.blink::BytesConsumer::Client"*)***
  %9 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %9, i64 3
  %11 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %10, align 8
  tail call void %11(%"class.blink::BytesConsumer::Client"* nonnull %5) #10
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #10
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #10
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !2

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #10
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !2

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #10
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #10
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #10
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #10
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %96, i8* %97) #10
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #10
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #10
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #10
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E5clearEv(%"class.WTF::Deque"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 %9
  br i1 %6, label %30, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %74, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 %14
  br label %16

16:                                               ; preds = %27, %13
  %17 = phi %"class.WTF::Vector"* [ %28, %27 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %27, label %21, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #10
  store i8* null, i8** %18, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 1
  %29 = icmp eq %"class.WTF::Vector"* %28, %10
  br i1 %29, label %74, label %16

30:                                               ; preds = %1
  %31 = icmp eq i32 %5, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %30, %43
  %33 = phi %"class.WTF::Vector"* [ %44, %43 ], [ %8, %30 ]
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %43, label %37, !prof !2

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %43

43:                                               ; preds = %42, %32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 1
  %45 = icmp eq %"class.WTF::Vector"* %44, %10
  br i1 %45, label %46, label %32

46:                                               ; preds = %43
  %47 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %48 = load i32, i32* %2, align 8
  br label %49

49:                                               ; preds = %46, %30
  %50 = phi i32 [ %48, %46 ], [ %3, %30 ]
  %51 = phi %"class.WTF::Vector"* [ %47, %46 ], [ %8, %30 ]
  %52 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 %54
  %56 = icmp eq i32 %50, %53
  br i1 %56, label %74, label %57

57:                                               ; preds = %49
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 %58
  br label %60

60:                                               ; preds = %71, %57
  %61 = phi %"class.WTF::Vector"* [ %72, %71 ], [ %59, %57 ]
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %71, label %65, !prof !2

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %61, i64 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %65
  store i32 0, i32* %66, align 4
  br label %70

70:                                               ; preds = %69, %65
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #10
  store i8* null, i8** %62, align 8
  br label %71

71:                                               ; preds = %70, %60
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %61, i64 1
  %73 = icmp eq %"class.WTF::Vector"* %72, %55
  br i1 %73, label %74, label %60

74:                                               ; preds = %27, %71, %11, %49
  store i32 0, i32* %2, align 8
  store i32 0, i32* %4, align 4
  %75 = bitcast %"class.WTF::Deque"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  %77 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink22BufferingBytesConsumer9DebugNameEv(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn8_NK5blink22BufferingBytesConsumer9DebugNameEv(%"class.blink::BufferingBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22) #10
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::BytesConsumer"*
  %3 = bitcast i8* %0 to void (%"class.blink::BytesConsumer"*)***
  %4 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %3, align 8
  %5 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %4, align 8
  tail call void %5(%"class.blink::BytesConsumer"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.18"*) local_unnamed_addr #2

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEED0Ev(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #10
  %3 = bitcast %"class.blink::HeapTaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE5FiredEv(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::BufferingBytesConsumer"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::BufferingBytesConsumer"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)*, void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::BufferingBytesConsumer"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::BufferingBytesConsumer"* %10, %"class.blink::TimerBase"* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE(%"class.base::OnceCallback"* noalias sret, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WeakPersistent", align 8
  %5 = bitcast %"class.blink::WeakPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::BufferingBytesConsumer"*, %"class.blink::BufferingBytesConsumer"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 0
  store %"class.blink::BufferingBytesConsumer"* %7, %"class.blink::BufferingBytesConsumer"** %9, align 8, !alias.scope !6
  %10 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !6
  %11 = ptrtoint %"class.blink::BufferingBytesConsumer"* %7 to i64
  switch i64 %11, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %3
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10, !noalias !6
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !3

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #10
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8, !noalias !6
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8, !noalias !6
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8, !noalias !6
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !3

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #10
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !6
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8, !noalias !6
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %8, %"class.blink::PersistentBase"** %36, align 8, !noalias !6
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !6
  br label %38

38:                                               ; preds = %3, %3, %31
  %39 = call i8* @_Znwm(i64 72) #11, !noalias !9
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_22BufferingBytesConsumerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_22BufferingBytesConsumerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !9
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.blink::BufferingBytesConsumer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ to i64), i64* %42, align 8, !noalias !9
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  %44 = bitcast i8* %43 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_22BufferingBytesConsumerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %44, %"class.base::WeakPtr"* dereferenceable(16) %2, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %4) #10, !noalias !9
  %45 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %39, i8** %45, align 8, !alias.scope !9
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #10
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !3

53:                                               ; preds = %48
  %54 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #10
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %67

67:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_22BufferingBytesConsumerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_(%"class.base::WeakPtr"*, %"class.blink::BufferingBytesConsumer"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::TimerBase"**
  %8 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  %9 = icmp ne %"class.blink::TimerBase"* %8, null
  %10 = icmp ne %"class.blink::BufferingBytesConsumer"* %1, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi %"class.blink::TimerBase"* [ %15, %14 ], [ null, %12 ]
  tail call void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"* %17) #10
  br label %18

18:                                               ; preds = %2, %16, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_22BufferingBytesConsumerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr"*, %"class.blink::BufferingBytesConsumer"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = load void (%"class.base::WeakPtr"*, %"class.blink::BufferingBytesConsumer"*)*, void (%"class.base::WeakPtr"*, %"class.blink::BufferingBytesConsumer"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #10
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to %"class.blink::BufferingBytesConsumer"**
  %16 = load %"class.blink::BufferingBytesConsumer"*, %"class.blink::BufferingBytesConsumer"** %15, align 8
  call void %7(%"class.base::WeakPtr"* nonnull %2, %"class.blink::BufferingBytesConsumer"* %16) #10
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_22BufferingBytesConsumerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %29 = bitcast void ()** %28 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %29) #10
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_22BufferingBytesConsumerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.base::WeakPtr"* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #10
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::__tuple_leaf.238", %"class.std::__1::__tuple_leaf.238"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::WeakPersistent"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::__tuple_leaf.238"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  switch i64 %12, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %3
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !3

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #10
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %10, %"class.blink::PersistentBase"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %14, align 8
  br label %41

41:                                               ; preds = %3, %3, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_22BufferingBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BufferingBytesConsumer"**
  %4 = load %"class.blink::BufferingBytesConsumer"*, %"class.blink::BufferingBytesConsumer"** %3, align 8
  %5 = icmp eq %"class.blink::BufferingBytesConsumer"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %4, i64 -1, i32 9
  %20 = bitcast %"class.blink::Member.13"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::BufferingBytesConsumer"* null, %"class.blink::BufferingBytesConsumer"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Deque"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %9
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, %11
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ %16, %13 ], [ %11, %2 ]
  %19 = sub i32 %18, %9
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %19, %1
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %7, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %19) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %24, i8* %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %7, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i32 119, %"class.logging::CheckOpResult"* nonnull %4) #10
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %33 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %8, align 8
  %36 = sub i32 %34, %35
  %37 = icmp ugt i32 %36, %1
  %38 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %38, align 8
  %40 = sub i32 0, %36
  %41 = select i1 %37, i32 %35, i32 %40
  %42 = add i32 %41, %1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %39, i64 %43
  ret %"class.WTF::Vector"* %44
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_22BufferingBytesConsumerEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BufferingBytesConsumer"**
  %4 = load %"class.blink::BufferingBytesConsumer"*, %"class.blink::BufferingBytesConsumer"** %3, align 8
  %5 = ptrtoint %"class.blink::BufferingBytesConsumer"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %4, i64 -1, i32 9
  %20 = bitcast %"class.blink::Member.13"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINS_6VectorIcLj0ENS_18PartitionAllocatorEEELj0ES2_E14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIcLj0ES0_EEEEmm(i64 %11) #10
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIcLj0ES0_EEEEmm(i64 %11) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.WTF::Vector"*
  br i1 %23, label %59, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %27
  %29 = icmp eq i32 %20, %22
  br i1 %29, label %134, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 %26
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %26
  br label %33

33:                                               ; preds = %30, %55
  %34 = phi %"class.WTF::Vector"* [ %57, %55 ], [ %32, %30 ]
  %35 = phi %"class.WTF::Vector"* [ %56, %55 ], [ %31, %30 ]
  %36 = bitcast %"class.WTF::Vector"* %35 to i8*
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast %"class.WTF::Vector"* %34 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::Vector"* %35 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %37, align 4
  %44 = load i32, i32* %42, align 4
  store i32 %44, i32* %37, align 4
  store i32 %43, i32* %42, align 4
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %38, align 4
  %47 = load i32, i32* %45, align 4
  store i32 %47, i32* %38, align 4
  store i32 %46, i32* %45, align 4
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51, !prof !2

51:                                               ; preds = %33
  %52 = icmp eq i32 %46, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %51
  store i32 0, i32* %45, align 4
  br label %54

54:                                               ; preds = %53, %51
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #10
  store i8* null, i8** %48, align 8
  br label %55

55:                                               ; preds = %54, %33
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 1
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 1
  %58 = icmp eq %"class.WTF::Vector"* %57, %28
  br i1 %58, label %134, label %33

59:                                               ; preds = %1
  %60 = zext i32 %22 to i64
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %60
  %62 = icmp eq i32 %22, 0
  br i1 %62, label %93, label %63

63:                                               ; preds = %59, %85
  %64 = phi %"class.WTF::Vector"* [ %87, %85 ], [ %5, %59 ]
  %65 = phi %"class.WTF::Vector"* [ %86, %85 ], [ %24, %59 ]
  %66 = bitcast %"class.WTF::Vector"* %65 to i8*
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %65, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %65, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast %"class.WTF::Vector"* %64 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #10
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.WTF::Vector"* %65 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 1
  %73 = load i32, i32* %67, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %67, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %68, align 4
  %77 = load i32, i32* %75, align 4
  store i32 %77, i32* %68, align 4
  store i32 %76, i32* %75, align 4
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %85, label %81, !prof !2

81:                                               ; preds = %63
  %82 = icmp eq i32 %76, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %81
  store i32 0, i32* %75, align 4
  br label %84

84:                                               ; preds = %83, %81
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #10
  store i8* null, i8** %78, align 8
  br label %85

85:                                               ; preds = %84, %63
  %86 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %65, i64 1
  %87 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 1
  %88 = icmp eq %"class.WTF::Vector"* %87, %61
  br i1 %88, label %89, label %63

89:                                               ; preds = %85
  %90 = load i32, i32* %2, align 8
  %91 = load i32, i32* %19, align 8
  %92 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  br label %93

93:                                               ; preds = %89, %59
  %94 = phi %"class.WTF::Vector"* [ %92, %89 ], [ %24, %59 ]
  %95 = phi i32 [ %91, %89 ], [ %20, %59 ]
  %96 = phi i32 [ %90, %89 ], [ %18, %59 ]
  %97 = sub i32 %95, %3
  %98 = add i32 %97, %96
  %99 = zext i32 %3 to i64
  %100 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %99
  %101 = icmp eq i32 %95, %3
  br i1 %101, label %133, label %102

102:                                              ; preds = %93
  %103 = zext i32 %98 to i64
  %104 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %94, i64 %103
  %105 = zext i32 %95 to i64
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 %105
  br label %107

107:                                              ; preds = %102, %129
  %108 = phi %"class.WTF::Vector"* [ %131, %129 ], [ %106, %102 ]
  %109 = phi %"class.WTF::Vector"* [ %130, %129 ], [ %104, %102 ]
  %110 = bitcast %"class.WTF::Vector"* %109 to i8*
  %111 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %109, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %109, i64 0, i32 0, i32 0, i32 2
  %113 = bitcast %"class.WTF::Vector"* %108 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #10
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.WTF::Vector"* %109 to i64*
  store atomic i64 0, i64* %113 monotonic, align 8
  store atomic i64 %114, i64* %115 monotonic, align 8
  %116 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %108, i64 0, i32 0, i32 0, i32 1
  %117 = load i32, i32* %111, align 4
  %118 = load i32, i32* %116, align 4
  store i32 %118, i32* %111, align 4
  store i32 %117, i32* %116, align 4
  %119 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %108, i64 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %112, align 4
  %121 = load i32, i32* %119, align 4
  store i32 %121, i32* %112, align 4
  store i32 %120, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %108, i64 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %129, label %125, !prof !2

125:                                              ; preds = %107
  %126 = icmp eq i32 %120, 0
  br i1 %126, label %128, label %127, !prof !3

127:                                              ; preds = %125
  store i32 0, i32* %119, align 4
  br label %128

128:                                              ; preds = %127, %125
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #10
  store i8* null, i8** %122, align 8
  br label %129

129:                                              ; preds = %128, %107
  %130 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %109, i64 1
  %131 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %108, i64 1
  %132 = icmp eq %"class.WTF::Vector"* %131, %100
  br i1 %132, label %133, label %107

133:                                              ; preds = %129, %93
  store i32 %98, i32* %19, align 8
  br label %134

134:                                              ; preds = %55, %25, %133
  %135 = bitcast %"class.WTF::Vector"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %135) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIcLj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{i32 24, i32 33}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink18WrapWeakPersistentINS_22BufferingBytesConsumerEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink18WrapWeakPersistentINS_22BufferingBytesConsumerEEENS_14WeakPersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_22BufferingBytesConsumerEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_22BufferingBytesConsumerEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_22BufferingBytesConsumerEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_22BufferingBytesConsumerEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_22BufferingBytesConsumerEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_22BufferingBytesConsumerEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_"}
