; ModuleID = '../../third_party/pdfium/fxbarcode/oned/BC_OnedCode39Writer.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/oned/BC_OnedCode39Writer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_OnedCode39Writer = type { %class.CBC_OneDimWriter.base, i8, [3 x i8] }
%class.CBC_OneDimWriter.base = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_PathData*, %class.CFX_PathData*, %"class.std::__1::__compressed_pair" }
%class.CFX_PathData = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_PathData* }
%class.CBC_OneDimWriter = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float, [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.1", i64 }
%"class.fxcrt::UnownedPtr.1" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.5" }
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.fxcrt::StringDataTemplate.9"* }
%"class.fxcrt::StringDataTemplate.9" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>
%class.CFX_RenderDevice = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }

@_ZTV20CBC_OnedCode39Writer = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_OnedCode39Writer*)* @_ZN20CBC_OnedCode39WriterD2Ev to i8*), i8* bitcast (void (%class.CBC_OnedCode39Writer*)* @_ZN20CBC_OnedCode39WriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_OnedCode39Writer*, i8)* @_ZN20CBC_OnedCode39Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_OnedCode39Writer*, i8)* @_ZN20CBC_OnedCode39Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer23SetErrorCorrectionLevelEi to i8*), i8* bitcast (i1 (%class.CBC_OnedCode39Writer*, %"class.fxcrt::StringViewTemplate"*, i8*, i32)* @_ZN20CBC_OnedCode39Writer12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi to i8*), i8* bitcast (i1 (%class.CBC_OnedCode39Writer*, %"class.fxcrt::StringViewTemplate"*)* @_ZN20CBC_OnedCode39Writer20CheckContentValidityEN5fxcrt18StringViewTemplateIwEE to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CBC_OnedCode39Writer*, %"class.fxcrt::StringViewTemplate"*)* @_ZN20CBC_OnedCode39Writer14FilterContentsEN5fxcrt18StringViewTemplateIwEE to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter16SetPrintChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter13SetDataLengthEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter15SetCalcChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, float)* @_ZN16CBC_OneDimWriter11SetFontSizeEf to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontStyleEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontColorEj to i8*), i8* bitcast (i8* (%class.CBC_OnedCode39Writer*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)* @_ZN20CBC_OnedCode39Writer14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i to i8*), i8* bitcast (i8* (%class.CBC_OnedCode39Writer*, %"class.fxcrt::ByteString"*, i32*)* @_ZN20CBC_OnedCode39Writer10EncodeImplERKN5fxcrt10ByteStringERi to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)* @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii to i8*)] }, align 8
@_ZN12_GLOBAL__N_119kOnedCode39AlphabetE = internal unnamed_addr constant [44 x i8] c"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. *$/+%", align 16
@_ZN12_GLOBAL__N_119kOnedCode39ChecksumE = internal unnamed_addr constant [43 x i8] c"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%", align 16
@_ZN12_GLOBAL__N_128kOnedCode39CharacterEncodingE = internal unnamed_addr constant [44 x i16] [i16 52, i16 289, i16 97, i16 352, i16 49, i16 304, i16 112, i16 37, i16 292, i16 100, i16 265, i16 73, i16 328, i16 25, i16 280, i16 88, i16 13, i16 268, i16 76, i16 28, i16 259, i16 67, i16 322, i16 19, i16 274, i16 82, i16 7, i16 262, i16 70, i16 22, i16 385, i16 193, i16 448, i16 145, i16 400, i16 208, i16 133, i16 388, i16 196, i16 148, i16 168, i16 162, i16 138, i16 42], align 16
@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN20CBC_OnedCode39WriterC1Ev = hidden unnamed_addr alias void (%class.CBC_OnedCode39Writer*), void (%class.CBC_OnedCode39Writer*)* @_ZN20CBC_OnedCode39WriterC2Ev
@_ZN20CBC_OnedCode39WriterD1Ev = hidden unnamed_addr alias void (%class.CBC_OnedCode39Writer*), void (%class.CBC_OnedCode39Writer*)* @_ZN20CBC_OnedCode39WriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39WriterC2Ev(%class.CBC_OnedCode39Writer*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  tail call void @_ZN16CBC_OneDimWriterC2Ev(%class.CBC_OneDimWriter* %2) #8
  %3 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV20CBC_OnedCode39Writer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 1
  store i8 3, i8* %4, align 4
  ret void
}

declare void @_ZN16CBC_OneDimWriterC2Ev(%class.CBC_OneDimWriter*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39WriterD2Ev(%class.CBC_OnedCode39Writer*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  tail call void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39WriterD0Ev(%class.CBC_OnedCode39Writer*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  tail call void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter* %2) #8
  %3 = bitcast %class.CBC_OnedCode39Writer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CBC_OnedCode39Writer20CheckContentValidityEN5fxcrt18StringViewTemplateIwEE(%class.CBC_OnedCode39Writer* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %5 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = call zeroext i1 @_ZN16CBC_OneDimWriter19HasValidContentSizeEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %3) #8
  br i1 %6, label %7, label %30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %30, label %17

14:                                               ; preds = %24, %29, %29, %29, %29, %29, %29, %29, %29
  %15 = getelementptr inbounds i32, i32* %18, i64 1
  %16 = icmp eq i32* %15, %12
  br i1 %16, label %30, label %17

17:                                               ; preds = %7, %14
  %18 = phi i32* [ %15, %14 ], [ %9, %7 ]
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 127
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = call i32 @iswdigit(i32 %19) #8
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i1 [ false, %17 ], [ %23, %21 ]
  %26 = add i32 %19, -65
  %27 = icmp ult i32 %26, 26
  %28 = or i1 %27, %25
  br i1 %28, label %14, label %29

29:                                               ; preds = %24
  switch i32 %19, label %30 [
    i32 47, label %14
    i32 46, label %14
    i32 45, label %14
    i32 43, label %14
    i32 42, label %14
    i32 36, label %14
    i32 32, label %14
    i32 37, label %14
  ]

30:                                               ; preds = %29, %14, %7, %2
  %31 = phi i1 [ false, %2 ], [ true, %7 ], [ false, %29 ], [ true, %14 ]
  ret i1 %31
}

declare zeroext i1 @_ZN16CBC_OneDimWriter19HasValidContentSizeEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39Writer14FilterContentsEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* noalias sret, %class.CBC_OnedCode39Writer* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %4, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* %0, i64 %6) #8
  %7 = load i64, i64* %5, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %47
  %12 = phi i64 [ %7, %9 ], [ %50, %47 ]
  %13 = phi i64 [ 0, %9 ], [ %49, %47 ]
  %14 = load i32*, i32** %10, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 42
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %18
  %21 = add i64 %12, -1
  %22 = icmp eq i64 %13, %21
  br i1 %22, label %47, label %27

23:                                               ; preds = %11
  %24 = icmp sgt i32 %16, 175
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = add nuw i64 %13, 1
  br label %47

27:                                               ; preds = %20, %23
  %28 = shl i32 %16, 24
  %29 = ashr exact i32 %28, 24
  %30 = add nsw i32 %29, -97
  %31 = icmp ult i32 %30, 26
  %32 = add i32 %28, -536870912
  %33 = select i1 %31, i32 %32, i32 %28
  %34 = ashr exact i32 %33, 24
  %35 = icmp ugt i32 %34, 127
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = tail call i32 @iswdigit(i32 %34) #8
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %36, %27
  %40 = phi i1 [ false, %27 ], [ %38, %36 ]
  %41 = add nsw i32 %34, -65
  %42 = icmp ult i32 %41, 26
  %43 = or i1 %42, %40
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  switch i32 %34, label %47 [
    i32 47, label %45
    i32 46, label %45
    i32 45, label %45
    i32 43, label %45
    i32 42, label %45
    i32 36, label %45
    i32 32, label %45
    i32 37, label %45
  ]

45:                                               ; preds = %39, %44, %44, %44, %44, %44, %44, %44, %44
  %46 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %34) #8
  br label %47

47:                                               ; preds = %44, %45, %18, %20, %25
  %48 = phi i64 [ %26, %25 ], [ %13, %20 ], [ 0, %18 ], [ %13, %45 ], [ %13, %44 ]
  %49 = add i64 %48, 1
  %50 = load i64, i64* %5, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %11, label %52

52:                                               ; preds = %47, %3
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39Writer18RenderTextContentsEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* noalias sret, %class.CBC_OnedCode39Writer* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %4, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %51, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %46
  %11 = phi i64 [ %6, %8 ], [ %49, %46 ]
  %12 = phi i64 [ 0, %8 ], [ %48, %46 ]
  %13 = load i32*, i32** %9, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %12
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 42
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %17
  %20 = add i64 %11, -1
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %46, label %26

22:                                               ; preds = %10
  %23 = icmp sgt i32 %15, 175
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = add nuw i64 %12, 1
  br label %46

26:                                               ; preds = %19, %22
  %27 = shl i32 %15, 24
  %28 = ashr exact i32 %27, 24
  %29 = add nsw i32 %28, -97
  %30 = icmp ult i32 %29, 26
  %31 = add i32 %27, -536870912
  %32 = select i1 %30, i32 %31, i32 %27
  %33 = ashr exact i32 %32, 24
  %34 = icmp ugt i32 %33, 127
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = tail call i32 @iswdigit(i32 %33) #8
  %37 = icmp ne i32 %36, 0
  br label %38

38:                                               ; preds = %35, %26
  %39 = phi i1 [ false, %26 ], [ %37, %35 ]
  %40 = add nsw i32 %33, -65
  %41 = icmp ult i32 %40, 26
  %42 = or i1 %41, %39
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  switch i32 %33, label %46 [
    i32 47, label %44
    i32 46, label %44
    i32 45, label %44
    i32 43, label %44
    i32 42, label %44
    i32 36, label %44
    i32 32, label %44
    i32 37, label %44
  ]

44:                                               ; preds = %38, %43, %43, %43, %43, %43, %43, %43, %43
  %45 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %15) #8
  br label %46

46:                                               ; preds = %43, %44, %17, %19, %24
  %47 = phi i64 [ %25, %24 ], [ %12, %19 ], [ 0, %17 ], [ %12, %44 ], [ %12, %43 ]
  %48 = add i64 %47, 1
  %49 = load i64, i64* %5, align 8
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %10, label %51

51:                                               ; preds = %46, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN20CBC_OnedCode39Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_OnedCode39Writer* nocapture, i8 zeroext) unnamed_addr #5 align 2 {
  %3 = icmp ugt i8 %1, 4
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 10
  store i8 %1, i8* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN20CBC_OnedCode39Writer18SetWideNarrowRatioEa(%class.CBC_OnedCode39Writer* nocapture, i8 signext) unnamed_addr #5 align 2 {
  %3 = and i8 %1, -2
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 1
  store i8 %1, i8* %6, align 4
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN20CBC_OnedCode39Writer14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OnedCode39Writer*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4), i32) unnamed_addr #0 align 2 {
  %7 = icmp eq i32 %2, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  %10 = tail call i8* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OneDimWriter* %9, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i32 1, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4, i32 %5) #8
  br label %11

11:                                               ; preds = %6, %8
  %12 = phi i8* [ %10, %8 ], [ null, %6 ]
  ret i8* %12
}

declare i8* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4), i32) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CBC_OnedCode39Writer10ToIntArrayEsPa(%class.CBC_OnedCode39Writer* nocapture readonly, i16 signext, i8* nocapture) local_unnamed_addr #6 align 2 {
  %4 = sext i16 %1 to i32
  %5 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 1
  %6 = and i32 %4, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = load i8, i8* %5, align 4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i8 [ %9, %8 ], [ 1, %3 ]
  store i8 %11, i8* %2, align 1
  %12 = and i32 %4, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = load i8, i8* %5, align 4
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi i8 [ %15, %14 ], [ 1, %10 ]
  %18 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %4, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = load i8, i8* %5, align 4
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8 [ %22, %21 ], [ 1, %16 ]
  %25 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %24, i8* %25, align 1
  %26 = and i32 %4, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = load i8, i8* %5, align 4
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8 [ %29, %28 ], [ 1, %23 ]
  %32 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %31, i8* %32, align 1
  %33 = and i32 %4, 16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = load i8, i8* %5, align 4
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8 [ %36, %35 ], [ 1, %30 ]
  %39 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 %38, i8* %39, align 1
  %40 = and i32 %4, 32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = load i8, i8* %5, align 4
  br label %44

44:                                               ; preds = %42, %37
  %45 = phi i8 [ %43, %42 ], [ 1, %37 ]
  %46 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %45, i8* %46, align 1
  %47 = and i32 %4, 64
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %5, align 4
  br label %51

51:                                               ; preds = %49, %44
  %52 = phi i8 [ %50, %49 ], [ 1, %44 ]
  %53 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 %52, i8* %53, align 1
  %54 = trunc i16 %1 to i8
  %55 = icmp sgt i8 %54, -1
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = load i8, i8* %5, align 4
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8 [ %57, %56 ], [ 1, %51 ]
  %60 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %59, i8* %60, align 1
  %61 = and i32 %4, 256
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = load i8, i8* %5, align 4
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi i8 [ %64, %63 ], [ 1, %58 ]
  %67 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %66, i8* %67, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZN20CBC_OnedCode39Writer12CalcCheckSumERKN5fxcrt10ByteStringE(%class.CBC_OnedCode39Writer* nocapture readnone, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.fxcrt::StringDataTemplate.9"*, %"class.fxcrt::StringDataTemplate.9"** %3, align 8
  %5 = icmp eq %"class.fxcrt::StringDataTemplate.9"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, 80
  br i1 %9, label %44, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %4, i64 0, i32 3, i64 %8
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %4, i64 0, i32 3, i64 0
  br label %15

15:                                               ; preds = %13, %24
  %16 = phi i8* [ %30, %24 ], [ %14, %13 ]
  %17 = phi i32 [ %29, %24 ], [ 0, %13 ]
  %18 = load i8, i8* %16, align 1
  br label %19

19:                                               ; preds = %56, %15
  %20 = phi i64 [ 0, %15 ], [ %57, %56 ]
  %21 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %20
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, %18
  br i1 %23, label %24, label %32

24:                                               ; preds = %51, %46, %32, %19
  %25 = phi i64 [ %20, %19 ], [ %33, %32 ], [ %47, %46 ], [ %52, %51 ]
  %26 = icmp eq i8 %18, 42
  %27 = trunc i64 %25 to i32
  %28 = select i1 %26, i32 0, i32 %27
  %29 = add i32 %28, %17
  %30 = getelementptr inbounds i8, i8* %16, i64 1
  %31 = icmp eq i8* %30, %11
  br i1 %31, label %37, label %15

32:                                               ; preds = %19
  %33 = or i64 %20, 1
  %34 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, %18
  br i1 %36, label %24, label %46

37:                                               ; preds = %24
  %38 = sext i32 %29 to i64
  %39 = urem i64 %38, 43
  br label %40

40:                                               ; preds = %2, %37, %10
  %41 = phi i64 [ 0, %10 ], [ %39, %37 ], [ 0, %2 ]
  %42 = getelementptr inbounds [43 x i8], [43 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39ChecksumE, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  br label %44

44:                                               ; preds = %56, %40, %6
  %45 = phi i8 [ 42, %6 ], [ %43, %40 ], [ 42, %56 ]
  ret i8 %45

46:                                               ; preds = %32
  %47 = or i64 %20, 2
  %48 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %47
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, %18
  br i1 %50, label %24, label %51

51:                                               ; preds = %46
  %52 = or i64 %20, 3
  %53 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, %18
  br i1 %55, label %24, label %56

56:                                               ; preds = %51
  %57 = add nuw nsw i64 %20, 4
  %58 = icmp eq i64 %57, 44
  br i1 %58, label %44, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN20CBC_OnedCode39Writer10EncodeImplERKN5fxcrt10ByteStringERi(%class.CBC_OnedCode39Writer*, %"class.fxcrt::ByteString"* dereferenceable(8), i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca [9 x i8], align 1
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca [1 x i8], align 1
  %7 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcrt::StringDataTemplate.9"*, %"class.fxcrt::StringDataTemplate.9"** %7, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate.9"* %8, null
  br i1 %9, label %44, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, 80
  br i1 %13, label %292, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %8, i64 0, i32 3, i64 %12
  %16 = icmp eq i64 %12, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %8, i64 0, i32 3, i64 0
  br label %19

19:                                               ; preds = %17, %28
  %20 = phi i8* [ %34, %28 ], [ %18, %17 ]
  %21 = phi i32 [ %33, %28 ], [ 0, %17 ]
  %22 = load i8, i8* %20, align 1
  br label %23

23:                                               ; preds = %304, %19
  %24 = phi i64 [ 0, %19 ], [ %305, %304 ]
  %25 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %24
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %26, %22
  br i1 %27, label %28, label %36

28:                                               ; preds = %299, %294, %36, %23
  %29 = phi i64 [ %24, %23 ], [ %37, %36 ], [ %295, %294 ], [ %300, %299 ]
  %30 = icmp eq i8 %22, 42
  %31 = trunc i64 %29 to i32
  %32 = select i1 %30, i32 0, i32 %31
  %33 = add i32 %32, %21
  %34 = getelementptr inbounds i8, i8* %20, i64 1
  %35 = icmp eq i8* %34, %15
  br i1 %35, label %41, label %19

36:                                               ; preds = %23
  %37 = or i64 %24, 1
  %38 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %22
  br i1 %40, label %28, label %294

41:                                               ; preds = %28
  %42 = sext i32 %33 to i64
  %43 = urem i64 %42, 43
  br label %44

44:                                               ; preds = %3, %14, %41
  %45 = phi i64 [ 0, %14 ], [ %43, %41 ], [ 0, %3 ]
  %46 = getelementptr inbounds [43 x i8], [43 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39ChecksumE, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %48) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 0, i64 9, i1 false)
  %49 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.9"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.9"*), %"class.fxcrt::StringDataTemplate.9"** %50, align 8
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #8
  %51 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  %52 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 2
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %44
  %56 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLEc(%"class.fxcrt::ByteString"* nonnull %5, i8 signext %47) #8
  br label %57

57:                                               ; preds = %44, %55
  %58 = load %"class.fxcrt::StringDataTemplate.9"*, %"class.fxcrt::StringDataTemplate.9"** %50, align 8
  %59 = icmp eq %"class.fxcrt::StringDataTemplate.9"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %58, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  br label %63

63:                                               ; preds = %57, %60
  %64 = phi i64 [ %62, %60 ], [ 0, %57 ]
  %65 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 14
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 1
  %67 = load i8, i8* %66, align 4
  %68 = sext i8 %67 to i32
  %69 = mul nsw i32 %68, 6
  %70 = trunc i64 %64 to i32
  %71 = add i32 %70, 13
  %72 = add i32 %71, %69
  %73 = icmp eq i64 %64, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %58, i64 0, i32 1
  %76 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 1
  %77 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 2
  %78 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 3
  %79 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 4
  %80 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 5
  %81 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 6
  %82 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 7
  %83 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 8
  br i1 %59, label %117, label %84

84:                                               ; preds = %74, %109
  %85 = phi i64 [ %110, %109 ], [ 0, %74 ]
  %86 = phi i32 [ %173, %109 ], [ %72, %74 ]
  %87 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %58, i64 0, i32 3, i64 %85
  br label %112

88:                                               ; preds = %109, %63
  %89 = phi i32 [ %72, %63 ], [ %173, %109 ]
  store i32 %89, i32* %2, align 4
  %90 = sext i32 %89 to i64
  %91 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %90, i64 1) #8
  store i8 1, i8* %48, align 1
  %92 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 1
  store i8 1, i8* %92, align 1
  %93 = load i8, i8* %66, align 4
  %94 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 2
  store i8 %93, i8* %94, align 1
  %95 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 3
  store i8 1, i8* %95, align 1
  %96 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 4
  store i8 %93, i8* %96, align 1
  %97 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 5
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 6
  store i8 1, i8* %98, align 1
  %99 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 7
  store i8 %93, i8* %99, align 1
  %100 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 8
  store i8 1, i8* %100, align 1
  %101 = call i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* %51, i8* %91, i32 0, i8* nonnull %48, i32 9, i1 zeroext true) #8
  %102 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #8
  store i8 1, i8* %102, align 1
  %103 = call i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* %51, i8* %91, i32 %101, i8* nonnull %102, i32 1, i1 zeroext false) #8
  %104 = add nsw i32 %103, %101
  %105 = load i64, i64* %65, align 8
  %106 = trunc i64 %105 to i32
  %107 = add i32 %106, -1
  %108 = icmp sgt i32 %107, -1
  br i1 %108, label %176, label %180

109:                                              ; preds = %172
  %110 = add nuw i64 %85, 1
  %111 = icmp eq i64 %110, %64
  br i1 %111, label %88, label %84

112:                                              ; preds = %172, %84
  %113 = phi i64 [ 0, %84 ], [ %174, %172 ]
  %114 = phi i32 [ %86, %84 ], [ %173, %172 ]
  %115 = load i64, i64* %75, align 8
  %116 = icmp ugt i64 %115, %85
  br i1 %116, label %118, label %117, !prof !3

117:                                              ; preds = %112, %74
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  unreachable

118:                                              ; preds = %112
  %119 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %113
  %120 = load i8, i8* %119, align 1
  %121 = load i8, i8* %87, align 1
  %122 = icmp eq i8 %120, %121
  br i1 %122, label %123, label %172

123:                                              ; preds = %118
  %124 = getelementptr inbounds [44 x i16], [44 x i16]* @_ZN12_GLOBAL__N_128kOnedCode39CharacterEncodingE, i64 0, i64 %113
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = select i1 %128, i8 1, i8 %67
  store i8 %129, i8* %48, align 1
  %130 = and i32 %126, 2
  %131 = icmp eq i32 %130, 0
  %132 = select i1 %131, i8 1, i8 %67
  store i8 %132, i8* %76, align 1
  %133 = and i32 %126, 4
  %134 = icmp eq i32 %133, 0
  %135 = select i1 %134, i8 1, i8 %67
  store i8 %135, i8* %77, align 1
  %136 = and i32 %126, 8
  %137 = icmp eq i32 %136, 0
  %138 = select i1 %137, i8 1, i8 %67
  store i8 %138, i8* %78, align 1
  %139 = and i32 %126, 16
  %140 = icmp eq i32 %139, 0
  %141 = select i1 %140, i8 1, i8 %67
  store i8 %141, i8* %79, align 1
  %142 = and i32 %126, 32
  %143 = icmp eq i32 %142, 0
  %144 = select i1 %143, i8 1, i8 %67
  store i8 %144, i8* %80, align 1
  %145 = and i32 %126, 64
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %146, i8 1, i8 %67
  store i8 %147, i8* %81, align 1
  %148 = trunc i16 %125 to i8
  %149 = icmp sgt i8 %148, -1
  %150 = select i1 %149, i8 1, i8 %67
  store i8 %150, i8* %82, align 1
  %151 = and i32 %126, 256
  %152 = icmp eq i32 %151, 0
  %153 = select i1 %152, i8 1, i8 %67
  store i8 %153, i8* %83, align 1
  %154 = sext i8 %129 to i32
  %155 = add nsw i32 %114, %154
  %156 = sext i8 %132 to i32
  %157 = add nsw i32 %155, %156
  %158 = sext i8 %135 to i32
  %159 = add nsw i32 %157, %158
  %160 = sext i8 %138 to i32
  %161 = add nsw i32 %159, %160
  %162 = sext i8 %141 to i32
  %163 = add nsw i32 %161, %162
  %164 = sext i8 %144 to i32
  %165 = add nsw i32 %163, %164
  %166 = sext i8 %147 to i32
  %167 = add nsw i32 %165, %166
  %168 = sext i8 %150 to i32
  %169 = add nsw i32 %167, %168
  %170 = sext i8 %153 to i32
  %171 = add nsw i32 %169, %170
  br label %172

172:                                              ; preds = %123, %118
  %173 = phi i32 [ %114, %118 ], [ %171, %123 ]
  %174 = add nuw nsw i64 %113, 1
  %175 = icmp eq i64 %174, 44
  br i1 %175, label %109, label %112

176:                                              ; preds = %88, %188
  %177 = phi i32 [ %191, %188 ], [ %107, %88 ]
  %178 = phi i32 [ %190, %188 ], [ %104, %88 ]
  %179 = sext i32 %177 to i64
  br label %193

180:                                              ; preds = %188, %88
  %181 = phi i32 [ %104, %88 ], [ %190, %188 ]
  store i8 1, i8* %48, align 1
  store i8 1, i8* %92, align 1
  %182 = load i8, i8* %66, align 4
  store i8 %182, i8* %94, align 1
  store i8 1, i8* %95, align 1
  store i8 %182, i8* %96, align 1
  store i8 1, i8* %97, align 1
  store i8 1, i8* %98, align 1
  store i8 %182, i8* %99, align 1
  store i8 1, i8* %100, align 1
  %183 = call i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* %51, i8* %91, i32 %181, i8* nonnull %48, i32 9, i1 zeroext true) #8
  %184 = icmp sgt i32 %89, 1
  br i1 %184, label %185, label %273

185:                                              ; preds = %180
  %186 = lshr i32 %89, 1
  %187 = zext i32 %186 to i64
  br label %274

188:                                              ; preds = %269
  %189 = call i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* %51, i8* %91, i32 %270, i8* nonnull %102, i32 1, i1 zeroext false) #8
  %190 = add nsw i32 %189, %270
  %191 = add i32 %177, -1
  %192 = icmp sgt i32 %191, -1
  br i1 %192, label %176, label %180

193:                                              ; preds = %269, %176
  %194 = phi i64 [ 0, %176 ], [ %271, %269 ]
  %195 = phi i32 [ %178, %176 ], [ %270, %269 ]
  %196 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %194
  %197 = load i8, i8* %196, align 1
  %198 = load %"class.fxcrt::StringDataTemplate.9"*, %"class.fxcrt::StringDataTemplate.9"** %50, align 8
  %199 = icmp eq %"class.fxcrt::StringDataTemplate.9"* %198, null
  br i1 %199, label %204, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %198, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp ugt i64 %202, %179
  br i1 %203, label %205, label %204, !prof !3

204:                                              ; preds = %200, %193
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  unreachable

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %198, i64 0, i32 3, i64 %179
  %207 = load i8, i8* %206, align 1
  %208 = icmp eq i8 %197, %207
  br i1 %208, label %209, label %269

209:                                              ; preds = %205
  %210 = getelementptr inbounds [44 x i16], [44 x i16]* @_ZN12_GLOBAL__N_128kOnedCode39CharacterEncodingE, i64 0, i64 %194
  %211 = load i16, i16* %210, align 2
  %212 = sext i16 %211 to i32
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %209
  %216 = load i8, i8* %66, align 4
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi i8 [ %216, %215 ], [ 1, %209 ]
  store i8 %218, i8* %48, align 1
  %219 = and i32 %212, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = load i8, i8* %66, align 4
  br label %223

223:                                              ; preds = %221, %217
  %224 = phi i8 [ %222, %221 ], [ 1, %217 ]
  store i8 %224, i8* %92, align 1
  %225 = and i32 %212, 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  %228 = load i8, i8* %66, align 4
  br label %229

229:                                              ; preds = %227, %223
  %230 = phi i8 [ %228, %227 ], [ 1, %223 ]
  store i8 %230, i8* %94, align 1
  %231 = and i32 %212, 8
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %235, label %233

233:                                              ; preds = %229
  %234 = load i8, i8* %66, align 4
  br label %235

235:                                              ; preds = %233, %229
  %236 = phi i8 [ %234, %233 ], [ 1, %229 ]
  store i8 %236, i8* %95, align 1
  %237 = and i32 %212, 16
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = load i8, i8* %66, align 4
  br label %241

241:                                              ; preds = %239, %235
  %242 = phi i8 [ %240, %239 ], [ 1, %235 ]
  store i8 %242, i8* %96, align 1
  %243 = and i32 %212, 32
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %241
  %246 = load i8, i8* %66, align 4
  br label %247

247:                                              ; preds = %245, %241
  %248 = phi i8 [ %246, %245 ], [ 1, %241 ]
  store i8 %248, i8* %97, align 1
  %249 = and i32 %212, 64
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = load i8, i8* %66, align 4
  br label %253

253:                                              ; preds = %251, %247
  %254 = phi i8 [ %252, %251 ], [ 1, %247 ]
  store i8 %254, i8* %98, align 1
  %255 = trunc i16 %211 to i8
  %256 = icmp sgt i8 %255, -1
  br i1 %256, label %259, label %257

257:                                              ; preds = %253
  %258 = load i8, i8* %66, align 4
  br label %259

259:                                              ; preds = %257, %253
  %260 = phi i8 [ %258, %257 ], [ 1, %253 ]
  store i8 %260, i8* %99, align 1
  %261 = and i32 %212, 256
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %265, label %263

263:                                              ; preds = %259
  %264 = load i8, i8* %66, align 4
  br label %265

265:                                              ; preds = %259, %263
  %266 = phi i8 [ %264, %263 ], [ 1, %259 ]
  store i8 %266, i8* %100, align 1
  %267 = call i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* %51, i8* %91, i32 %195, i8* nonnull %48, i32 9, i1 zeroext true) #8
  %268 = add nsw i32 %267, %195
  br label %269

269:                                              ; preds = %205, %265
  %270 = phi i32 [ %195, %205 ], [ %268, %265 ]
  %271 = add nuw nsw i64 %194, 1
  %272 = icmp eq i64 %271, 44
  br i1 %272, label %188, label %193

273:                                              ; preds = %274, %180
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %48) #8
  br label %292

274:                                              ; preds = %274, %185
  %275 = phi i64 [ 0, %185 ], [ %289, %274 ]
  %276 = phi i32 [ 0, %185 ], [ %290, %274 ]
  %277 = xor i32 %276, -1
  %278 = add i32 %89, %277
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* %91, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = getelementptr inbounds i8, i8* %91, i64 %275
  %283 = load i8, i8* %282, align 1
  %284 = xor i8 %283, %281
  store i8 %284, i8* %282, align 1
  %285 = load i8, i8* %280, align 1
  %286 = xor i8 %285, %284
  store i8 %286, i8* %280, align 1
  %287 = load i8, i8* %282, align 1
  %288 = xor i8 %287, %286
  store i8 %288, i8* %282, align 1
  %289 = add nuw nsw i64 %275, 1
  %290 = add nuw nsw i32 %276, 1
  %291 = icmp eq i64 %289, %187
  br i1 %291, label %273, label %274

292:                                              ; preds = %304, %10, %273
  %293 = phi i8* [ %91, %273 ], [ null, %10 ], [ null, %304 ]
  ret i8* %293

294:                                              ; preds = %36
  %295 = or i64 %24, 2
  %296 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %295
  %297 = load i8, i8* %296, align 2
  %298 = icmp eq i8 %297, %22
  br i1 %298, label %28, label %299

299:                                              ; preds = %294
  %300 = or i64 %24, 3
  %301 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, %22
  br i1 %303, label %28, label %304

304:                                              ; preds = %299
  %305 = add nuw nsw i64 %24, 4
  %306 = icmp eq i64 %305, 44
  br i1 %306, label %292, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLEc(%"class.fxcrt::ByteString"*, i8 signext) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

declare i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter*, i8*, i32, i8*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CBC_OnedCode39Writer15encodedContentsEN5fxcrt18StringViewTemplateIwEEPNS0_10WideStringE(%class.CBC_OnedCode39Writer* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #8
  %12 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %13 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %70, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.CBC_OnedCode39Writer, %class.CBC_OnedCode39Writer* %0, i64 0, i32 0, i32 1
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %70, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %22, align 8
  %23 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %11, i64 16, i1 false)
  call void @_ZN20CBC_OnedCode39Writer14FilterContentsEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %6, %class.CBC_OnedCode39Writer* undef, %"class.fxcrt::StringViewTemplate"* nonnull %7)
  %24 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.9"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.9"*), %"class.fxcrt::StringDataTemplate.9"** %25, align 8
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %8, %"class.fxcrt::WideString"* nonnull %6) #8
  %26 = load %"class.fxcrt::StringDataTemplate.9"*, %"class.fxcrt::StringDataTemplate.9"** %25, align 8
  %27 = icmp eq %"class.fxcrt::StringDataTemplate.9"* %26, null
  br i1 %27, label %62, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, 80
  br i1 %31, label %69, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %26, i64 0, i32 3, i64 %30
  %34 = icmp eq i64 %30, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.9", %"class.fxcrt::StringDataTemplate.9"* %26, i64 0, i32 3, i64 0
  br label %37

37:                                               ; preds = %35, %46
  %38 = phi i8* [ %52, %46 ], [ %36, %35 ]
  %39 = phi i32 [ %51, %46 ], [ 0, %35 ]
  %40 = load i8, i8* %38, align 1
  br label %41

41:                                               ; preds = %82, %37
  %42 = phi i64 [ 0, %37 ], [ %83, %82 ]
  %43 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %42
  %44 = load i8, i8* %43, align 4
  %45 = icmp eq i8 %44, %40
  br i1 %45, label %46, label %54

46:                                               ; preds = %77, %72, %54, %41
  %47 = phi i64 [ %42, %41 ], [ %55, %54 ], [ %73, %72 ], [ %78, %77 ]
  %48 = icmp eq i8 %40, 42
  %49 = trunc i64 %47 to i32
  %50 = select i1 %48, i32 0, i32 %49
  %51 = add i32 %50, %39
  %52 = getelementptr inbounds i8, i8* %38, i64 1
  %53 = icmp eq i8* %52, %33
  br i1 %53, label %59, label %37

54:                                               ; preds = %41
  %55 = or i64 %42, 1
  %56 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, %40
  br i1 %58, label %46, label %72

59:                                               ; preds = %46
  %60 = sext i32 %51 to i64
  %61 = urem i64 %60, 43
  br label %62

62:                                               ; preds = %20, %32, %59
  %63 = phi i64 [ 0, %32 ], [ %61, %59 ], [ 0, %20 ]
  %64 = getelementptr inbounds [43 x i8], [43 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39ChecksumE, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLEc(%"class.fxcrt::ByteString"* nonnull %8, i8 signext %65) #8
  %68 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %66) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %70

69:                                               ; preds = %82, %28
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %70

70:                                               ; preds = %3, %16, %62, %69
  %71 = phi i1 [ false, %69 ], [ true, %62 ], [ true, %16 ], [ true, %3 ]
  ret i1 %71

72:                                               ; preds = %54
  %73 = or i64 %42, 2
  %74 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %73
  %75 = load i8, i8* %74, align 2
  %76 = icmp eq i8 %75, %40
  br i1 %76, label %46, label %77

77:                                               ; preds = %72
  %78 = or i64 %42, 3
  %79 = getelementptr inbounds [44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_119kOnedCode39AlphabetE, i64 0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, %40
  br i1 %81, label %46, label %82

82:                                               ; preds = %77
  %83 = add nuw nsw i64 %42, 4
  %84 = icmp eq i64 %83, 44
  br i1 %84, label %69, label %41
}

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CBC_OnedCode39Writer12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OnedCode39Writer*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %9, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #8
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = call zeroext i1 @_ZN20CBC_OnedCode39Writer15encodedContentsEN5fxcrt18StringViewTemplateIwEEPNS0_10WideStringE(%class.CBC_OnedCode39Writer* %0, %"class.fxcrt::StringViewTemplate"* nonnull %6, %"class.fxcrt::WideString"* nonnull %5)
  br i1 %12, label %13, label %28

13:                                               ; preds = %4
  %14 = bitcast %class.CBC_OnedCode39Writer* %0 to %class.CBC_OneDimWriter*
  %15 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8, !noalias !6
  %16 = icmp eq %"class.fxcrt::StringDataTemplate"* %15, null
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 3
  %18 = select i1 %16, [1 x i32]* @.str, [1 x i32]* %17
  %19 = getelementptr inbounds [1 x i32], [1 x i32]* %18, i64 0, i64 0
  br i1 %16, label %23, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !6
  br label %23

23:                                               ; preds = %13, %20
  %24 = phi i64 [ %22, %20 ], [ 0, %13 ]
  %25 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %19, i32** %25, align 8, !alias.scope !6
  %26 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  store i64 %24, i64* %26, align 8, !alias.scope !6
  %27 = call zeroext i1 @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OneDimWriter* %14, %"class.fxcrt::StringViewTemplate"* nonnull %7, i8* %2, i32 %3) #8
  br label %28

28:                                               ; preds = %4, %23
  %29 = phi i1 [ %27, %23 ], [ false, %4 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret i1 %29
}

declare zeroext i1 @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer23SetErrorCorrectionLevelEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter16SetPrintChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter13SetDataLengthEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter15SetCalcChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter11SetFontSizeEf(%class.CBC_OneDimWriter*, float) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontStyleEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontColorEj(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare zeroext i1 @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2143835439}
!5 = !{i32 -2143835418}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
