; ModuleID = '../../third_party/ffmpeg/libavformat/matroska.c'
source_filename = "../../third_party/ffmpeg/libavformat/matroska.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.CodecTags = type { [22 x i8], i32 }
%struct.AVMetadataConv = type { i8*, i8* }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVDictionary = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVStereo3D = type { i32, i32, i32 }

@ff_mkv_codec_tags = hidden local_unnamed_addr constant [70 x %struct.CodecTags] [%struct.CodecTags { [22 x i8] c"A_AAC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86018 }, %struct.CodecTags { [22 x i8] c"A_AC3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86019 }, %struct.CodecTags { [22 x i8] c"A_ALAC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86032 }, %struct.CodecTags { [22 x i8] c"A_DTS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86020 }, %struct.CodecTags { [22 x i8] c"A_EAC3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86056 }, %struct.CodecTags { [22 x i8] c"A_FLAC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86028 }, %struct.CodecTags { [22 x i8] c"A_MLP\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86045 }, %struct.CodecTags { [22 x i8] c"A_MPEG/L2\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86016 }, %struct.CodecTags { [22 x i8] c"A_MPEG/L1\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86058 }, %struct.CodecTags { [22 x i8] c"A_MPEG/L3\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86017 }, %struct.CodecTags { [22 x i8] c"A_OPUS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86076 }, %struct.CodecTags { [22 x i8] c"A_OPUS/EXPERIMENTAL\00\00\00", i32 86076 }, %struct.CodecTags { [22 x i8] c"A_PCM/FLOAT/IEEE\00\00\00\00\00\00", i32 65557 }, %struct.CodecTags { [22 x i8] c"A_PCM/FLOAT/IEEE\00\00\00\00\00\00", i32 65559 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/BIG\00\00\00\00\00\00\00\00\00", i32 65537 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/BIG\00\00\00\00\00\00\00\00\00", i32 65549 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/BIG\00\00\00\00\00\00\00\00\00", i32 65545 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/LIT\00\00\00\00\00\00\00\00\00", i32 65536 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/LIT\00\00\00\00\00\00\00\00\00", i32 65548 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/LIT\00\00\00\00\00\00\00\00\00", i32 65544 }, %struct.CodecTags { [22 x i8] c"A_PCM/INT/LIT\00\00\00\00\00\00\00\00\00", i32 65541 }, %struct.CodecTags { [22 x i8] c"A_QUICKTIME/QDMC\00\00\00\00\00\00", i32 86066 }, %struct.CodecTags { [22 x i8] c"A_QUICKTIME/QDM2\00\00\00\00\00\00", i32 86035 }, %struct.CodecTags { [22 x i8] c"A_REAL/14_4\00\00\00\00\00\00\00\00\00\00\00", i32 77824 }, %struct.CodecTags { [22 x i8] c"A_REAL/28_8\00\00\00\00\00\00\00\00\00\00\00", i32 77825 }, %struct.CodecTags { [22 x i8] c"A_REAL/ATRC\00\00\00\00\00\00\00\00\00\00\00", i32 86047 }, %struct.CodecTags { [22 x i8] c"A_REAL/COOK\00\00\00\00\00\00\00\00\00\00\00", i32 86036 }, %struct.CodecTags { [22 x i8] c"A_REAL/SIPR\00\00\00\00\00\00\00\00\00\00\00", i32 86057 }, %struct.CodecTags { [22 x i8] c"A_TRUEHD\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86060 }, %struct.CodecTags { [22 x i8] c"A_TTA1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86038 }, %struct.CodecTags { [22 x i8] c"A_VORBIS\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86021 }, %struct.CodecTags { [22 x i8] c"A_WAVPACK4\00\00\00\00\00\00\00\00\00\00\00\00", i32 86041 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/SUBTITLES\00\00\00\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/CAPTIONS\00\00\00\00\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/METADATA\00\00\00\00\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"S_TEXT/UTF8\00\00\00\00\00\00\00\00\00\00\00", i32 96264 }, %struct.CodecTags { [22 x i8] c"S_TEXT/UTF8\00\00\00\00\00\00\00\00\00\00\00", i32 94210 }, %struct.CodecTags { [22 x i8] c"S_TEXT/ASCII\00\00\00\00\00\00\00\00\00\00", i32 94210 }, %struct.CodecTags { [22 x i8] c"S_TEXT/ASS\00\00\00\00\00\00\00\00\00\00\00\00", i32 96269 }, %struct.CodecTags { [22 x i8] c"S_TEXT/SSA\00\00\00\00\00\00\00\00\00\00\00\00", i32 96269 }, %struct.CodecTags { [22 x i8] c"S_ASS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 96269 }, %struct.CodecTags { [22 x i8] c"S_SSA\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 96269 }, %struct.CodecTags { [22 x i8] c"S_VOBSUB\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 94208 }, %struct.CodecTags { [22 x i8] c"S_DVBSUB\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 94209 }, %struct.CodecTags { [22 x i8] c"S_HDMV/PGS\00\00\00\00\00\00\00\00\00\00\00\00", i32 94214 }, %struct.CodecTags { [22 x i8] c"S_HDMV/TEXTST\00\00\00\00\00\00\00\00\00", i32 96270 }, %struct.CodecTags { [22 x i8] c"V_AV1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 32797 }, %struct.CodecTags { [22 x i8] c"V_DIRAC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 116 }, %struct.CodecTags { [22 x i8] c"V_FFV1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 33 }, %struct.CodecTags { [22 x i8] c"V_MJPEG\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.CodecTags { [22 x i8] c"V_MPEG1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 1 }, %struct.CodecTags { [22 x i8] c"V_MPEG2\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 2 }, %struct.CodecTags { [22 x i8] c"V_MPEG4/ISO/ASP\00\00\00\00\00\00\00", i32 12 }, %struct.CodecTags { [22 x i8] c"V_MPEG4/ISO/AP\00\00\00\00\00\00\00\00", i32 12 }, %struct.CodecTags { [22 x i8] c"V_MPEG4/ISO/SP\00\00\00\00\00\00\00\00", i32 12 }, %struct.CodecTags { [22 x i8] c"V_MPEG4/ISO/AVC\00\00\00\00\00\00\00", i32 27 }, %struct.CodecTags { [22 x i8] c"V_MPEGH/ISO/HEVC\00\00\00\00\00\00", i32 173 }, %struct.CodecTags { [22 x i8] c"V_MPEG4/MS/V3\00\00\00\00\00\00\00\00\00", i32 16 }, %struct.CodecTags { [22 x i8] c"V_PRORES\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 147 }, %struct.CodecTags { [22 x i8] c"V_REAL/RV10\00\00\00\00\00\00\00\00\00\00\00", i32 5 }, %struct.CodecTags { [22 x i8] c"V_REAL/RV20\00\00\00\00\00\00\00\00\00\00\00", i32 6 }, %struct.CodecTags { [22 x i8] c"V_REAL/RV30\00\00\00\00\00\00\00\00\00\00\00", i32 68 }, %struct.CodecTags { [22 x i8] c"V_REAL/RV40\00\00\00\00\00\00\00\00\00\00\00", i32 69 }, %struct.CodecTags { [22 x i8] c"V_SNOW\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 32780 }, %struct.CodecTags { [22 x i8] c"V_THEORA\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 30 }, %struct.CodecTags { [22 x i8] c"V_UNCOMPRESSED\00\00\00\00\00\00\00\00", i32 13 }, %struct.CodecTags { [22 x i8] c"V_VP8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 139 }, %struct.CodecTags { [22 x i8] c"V_VP9\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 167 }, %struct.CodecTags zeroinitializer], align 16
@ff_webm_codec_tags = hidden local_unnamed_addr constant [10 x %struct.CodecTags] [%struct.CodecTags { [22 x i8] c"V_VP8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 139 }, %struct.CodecTags { [22 x i8] c"V_VP9\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 167 }, %struct.CodecTags { [22 x i8] c"V_AV1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 32797 }, %struct.CodecTags { [22 x i8] c"A_VORBIS\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86021 }, %struct.CodecTags { [22 x i8] c"A_OPUS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 86076 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/SUBTITLES\00\00\00\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/CAPTIONS\00\00\00\00\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", i32 96265 }, %struct.CodecTags { [22 x i8] c"D_WEBVTT/METADATA\00\00\00\00\00", i32 96265 }, %struct.CodecTags zeroinitializer], align 16
@.str = private unnamed_addr constant [15 x i8] c"LEAD_PERFORMER\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"performer\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"PART_NUMBER\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"track\00", align 1
@ff_mkv_metadata_conv = hidden local_unnamed_addr constant [3 x %struct.AVMetadataConv] [%struct.AVMetadataConv { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVMetadataConv zeroinitializer], align 16
@.str.4 = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"left_right\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"bottom_top\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"top_bottom\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"checkerboard_rl\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"checkerboard_lr\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"row_interleaved_rl\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"row_interleaved_lr\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"col_interleaved_rl\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"col_interleaved_lr\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"anaglyph_cyan_red\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"right_left\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"anaglyph_green_magenta\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"block_lr\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"block_rl\00", align 1
@ff_matroska_video_stereo_mode = hidden local_unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0)], align 16
@.str.19 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@ff_matroska_video_stereo_plane = hidden local_unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0)], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_mkv_stereo3d_conv(%struct.AVStream*, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.AVStereo3D*, align 8
  %4 = bitcast %struct.AVStereo3D** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  %5 = tail call %struct.AVStereo3D* @av_stereo3d_alloc() #3
  store %struct.AVStereo3D* %5, %struct.AVStereo3D** %3, align 8
  %6 = icmp eq %struct.AVStereo3D* %5, null
  br i1 %6, label %60, label %7

7:                                                ; preds = %2
  switch i32 %1, label %54 [
    i32 0, label %50
    i32 11, label %8
    i32 1, label %13
    i32 2, label %15
    i32 3, label %20
    i32 4, label %22
    i32 5, label %27
    i32 6, label %29
    i32 7, label %34
    i32 8, label %36
    i32 9, label %41
    i32 14, label %43
    i32 13, label %48
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %13

13:                                               ; preds = %7, %8
  %14 = phi %struct.AVStereo3D* [ %5, %7 ], [ %12, %8 ]
  br label %50

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = or i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %20

20:                                               ; preds = %7, %15
  %21 = phi %struct.AVStereo3D* [ %5, %7 ], [ %19, %15 ]
  br label %50

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = or i32 %24, 1
  store i32 %25, i32* %23, align 4
  %26 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %27

27:                                               ; preds = %7, %22
  %28 = phi %struct.AVStereo3D* [ %5, %7 ], [ %26, %22 ]
  br label %50

29:                                               ; preds = %7
  %30 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %34

34:                                               ; preds = %7, %29
  %35 = phi %struct.AVStereo3D* [ %5, %7 ], [ %33, %29 ]
  br label %50

36:                                               ; preds = %7
  %37 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %41

41:                                               ; preds = %7, %36
  %42 = phi %struct.AVStereo3D* [ %5, %7 ], [ %40, %36 ]
  br label %50

43:                                               ; preds = %7
  %44 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %5, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = or i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = load %struct.AVStereo3D*, %struct.AVStereo3D** %3, align 8
  br label %48

48:                                               ; preds = %7, %43
  %49 = phi %struct.AVStereo3D* [ %5, %7 ], [ %47, %43 ]
  br label %50

50:                                               ; preds = %7, %13, %20, %27, %34, %41, %48
  %51 = phi %struct.AVStereo3D* [ %49, %48 ], [ %42, %41 ], [ %35, %34 ], [ %28, %27 ], [ %21, %20 ], [ %14, %13 ], [ %5, %7 ]
  %52 = phi i32 [ 3, %48 ], [ 7, %41 ], [ 6, %34 ], [ 4, %27 ], [ 2, %20 ], [ 1, %13 ], [ %1, %7 ]
  %53 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %51, i64 0, i32 0
  store i32 %52, i32* %53, align 4
  br label %54

54:                                               ; preds = %50, %7
  %55 = bitcast %struct.AVStereo3D** %3 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = tail call i32 @av_stream_add_side_data(%struct.AVStream* %0, i32 6, i8* %56, i64 12) #3
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  call void @av_freep(i8* nonnull %4) #3
  br label %60

60:                                               ; preds = %54, %2, %59
  %61 = phi i32 [ %57, %59 ], [ -12, %2 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret i32 %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.AVStereo3D* @av_stereo3d_alloc() local_unnamed_addr #2

declare i32 @av_stream_add_side_data(%struct.AVStream*, i32, i8*, i64) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
