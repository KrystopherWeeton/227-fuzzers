; ModuleID = '../../chrome/browser/history/chrome_history_backend_client.cc'
source_filename = "../../chrome/browser/history/chrome_history_backend_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ChromeHistoryBackendClient = type { %"class.history::HistoryBackendClient", %class.scoped_refptr }
%"class.history::HistoryBackendClient" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type { %"class.base::RefCountedThreadSafe", %class.scoped_refptr.1, %class.scoped_refptr.2, %"class.base::WaitableEvent" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%class.scoped_refptr.2 = type { %"class.bookmarks::HistoryBookmarkModel"* }
%"class.bookmarks::HistoryBookmarkModel" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.4, i8, [7 x i8] }>
%class.scoped_refptr.4 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.5", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"*, %"class.std::__1::__compressed_pair.24" }
%"struct.history::URLAndTitle" = type { %class.GURL, %"class.std::__1::basic_string.15" }
%"class.std::__1::basic_string.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.history::URLAndTitle"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"*, %"class.std::__1::__compressed_pair.31" }
%"struct.bookmarks::UrlAndTitle" = type { %class.GURL, %"class.std::__1::basic_string.15" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.bookmarks::UrlAndTitle"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.19 }
%struct.anon.19 = type { %"struct.std::__1::__padding.20", i8 }
%"struct.std::__1::__padding.20" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.10" = type { i8 }
%"class.content::ChildProcessSecurityPolicy" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTV26ChromeHistoryBackendClient = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ChromeHistoryBackendClient*)* @_ZN26ChromeHistoryBackendClientD2Ev to i8*), i8* bitcast (void (%class.ChromeHistoryBackendClient*)* @_ZN26ChromeHistoryBackendClientD0Ev to i8*), i8* bitcast (i1 (%class.ChromeHistoryBackendClient*, %class.GURL*)* @_ZN26ChromeHistoryBackendClient11IsPinnedURLERK4GURL to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %class.ChromeHistoryBackendClient*)* @_ZN26ChromeHistoryBackendClient13GetPinnedURLsEv to i8*), i8* bitcast (i1 (%class.ChromeHistoryBackendClient*, %class.GURL*)* @_ZN26ChromeHistoryBackendClient9IsWebSafeERK4GURL to i8*)] }, align 8

@_ZN26ChromeHistoryBackendClientC1E13scoped_refptrIN9bookmarks11ModelLoaderEE = hidden unnamed_addr alias void (%class.ChromeHistoryBackendClient*, %"class.bookmarks::ModelLoader"*), void (%class.ChromeHistoryBackendClient*, %"class.bookmarks::ModelLoader"*)* @_ZN26ChromeHistoryBackendClientC2E13scoped_refptrIN9bookmarks11ModelLoaderEE
@_ZN26ChromeHistoryBackendClientD1Ev = hidden unnamed_addr alias void (%class.ChromeHistoryBackendClient*), void (%class.ChromeHistoryBackendClient*)* @_ZN26ChromeHistoryBackendClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ChromeHistoryBackendClientC2E13scoped_refptrIN9bookmarks11ModelLoaderEE(%class.ChromeHistoryBackendClient* nocapture, %"class.bookmarks::ModelLoader"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.bookmarks::ModelLoader"* %1 to i64
  %4 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV26ChromeHistoryBackendClient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ChromeHistoryBackendClientD2Ev(%class.ChromeHistoryBackendClient* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV26ChromeHistoryBackendClient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 1, i32 0
  %4 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %3, align 8
  %5 = icmp eq %"class.bookmarks::ModelLoader"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.bookmarks::ModelLoader", %"class.bookmarks::ModelLoader"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN9bookmarks11ModelLoaderD1Ev(%"class.bookmarks::ModelLoader"* nonnull %4) #9
  %11 = bitcast %"class.bookmarks::ModelLoader"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ChromeHistoryBackendClientD0Ev(%class.ChromeHistoryBackendClient*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV26ChromeHistoryBackendClient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 1, i32 0
  %4 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %3, align 8
  %5 = icmp eq %"class.bookmarks::ModelLoader"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.bookmarks::ModelLoader", %"class.bookmarks::ModelLoader"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN9bookmarks11ModelLoaderD1Ev(%"class.bookmarks::ModelLoader"* nonnull %4) #9
  %11 = bitcast %"class.bookmarks::ModelLoader"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.ChromeHistoryBackendClient* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26ChromeHistoryBackendClient11IsPinnedURLERK4GURL(%class.ChromeHistoryBackendClient* nocapture readonly, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %0, i64 0, i32 1, i32 0
  %4 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %3, align 8
  %5 = icmp eq %"class.bookmarks::ModelLoader"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  tail call void @_ZN9bookmarks11ModelLoader15BlockTillLoadedEv(%"class.bookmarks::ModelLoader"* nonnull %4) #9
  %7 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %3, align 8
  %8 = getelementptr inbounds %"class.bookmarks::ModelLoader", %"class.bookmarks::ModelLoader"* %7, i64 0, i32 2, i32 0
  %9 = load %"class.bookmarks::HistoryBookmarkModel"*, %"class.bookmarks::HistoryBookmarkModel"** %8, align 8
  %10 = bitcast %"class.bookmarks::HistoryBookmarkModel"* %9 to i1 (%"class.bookmarks::HistoryBookmarkModel"*, %class.GURL*)***
  %11 = load i1 (%"class.bookmarks::HistoryBookmarkModel"*, %class.GURL*)**, i1 (%"class.bookmarks::HistoryBookmarkModel"*, %class.GURL*)*** %10, align 8
  %12 = load i1 (%"class.bookmarks::HistoryBookmarkModel"*, %class.GURL*)*, i1 (%"class.bookmarks::HistoryBookmarkModel"*, %class.GURL*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.bookmarks::HistoryBookmarkModel"* %9, %class.GURL* dereferenceable(120) %1) #9
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i1 [ %13, %6 ], [ false, %2 ]
  ret i1 %15
}

declare void @_ZN9bookmarks11ModelLoader15BlockTillLoadedEv(%"class.bookmarks::ModelLoader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ChromeHistoryBackendClient13GetPinnedURLsEv(%"class.std::__1::vector"* noalias sret, %class.ChromeHistoryBackendClient* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.29", align 8
  %4 = alloca %"struct.history::URLAndTitle", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %class.ChromeHistoryBackendClient, %class.ChromeHistoryBackendClient* %1, i64 0, i32 1, i32 0
  %9 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %8, align 8
  %10 = icmp eq %"class.bookmarks::ModelLoader"* %9, null
  br i1 %10, label %270, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::vector.29"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  tail call void @_ZN9bookmarks11ModelLoader15BlockTillLoadedEv(%"class.bookmarks::ModelLoader"* nonnull %9) #9
  %15 = load %"class.bookmarks::ModelLoader"*, %"class.bookmarks::ModelLoader"** %8, align 8
  %16 = getelementptr inbounds %"class.bookmarks::ModelLoader", %"class.bookmarks::ModelLoader"* %15, i64 0, i32 2, i32 0
  %17 = load %"class.bookmarks::HistoryBookmarkModel"*, %"class.bookmarks::HistoryBookmarkModel"** %16, align 8
  %18 = bitcast %"class.bookmarks::HistoryBookmarkModel"* %17 to void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)***
  %19 = load void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)**, void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)*, void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)** %19, i64 1
  %21 = load void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)*, void (%"class.bookmarks::HistoryBookmarkModel"*, %"class.std::__1::vector.29"*)** %20, align 8
  call void %21(%"class.bookmarks::HistoryBookmarkModel"* %17, %"class.std::__1::vector.29"* nonnull %3) #9
  %22 = bitcast %"struct.bookmarks::UrlAndTitle"** %14 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.29"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 144
  call void @_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* %0, i64 %27)
  %28 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %13, align 8
  %29 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %14, align 8
  %30 = icmp eq %"struct.bookmarks::UrlAndTitle"* %28, %29
  br i1 %30, label %45, label %31

31:                                               ; preds = %11
  %32 = bitcast %"struct.history::URLAndTitle"* %4 to i8*
  %33 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %4, i64 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.15"* %34 to i8*
  %36 = bitcast %"class.std::__1::basic_string.15"* %34 to i8**
  %37 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string.15"* %34 to i16*
  %40 = bitcast %"class.std::__1::basic_string.15"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = bitcast %"struct.history::URLAndTitle"** %5 to i64*
  br label %72

43:                                               ; preds = %267
  %44 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %13, align 8
  br label %45

45:                                               ; preds = %43, %11
  %46 = phi %"struct.bookmarks::UrlAndTitle"* [ %44, %43 ], [ %28, %11 ]
  %47 = icmp eq %"struct.bookmarks::UrlAndTitle"* %46, null
  br i1 %47, label %71, label %48

48:                                               ; preds = %45
  %49 = bitcast %"struct.bookmarks::UrlAndTitle"* %46 to i8*
  %50 = load %"struct.bookmarks::UrlAndTitle"*, %"struct.bookmarks::UrlAndTitle"** %14, align 8
  %51 = icmp eq %"struct.bookmarks::UrlAndTitle"* %50, %46
  br i1 %51, label %69, label %52

52:                                               ; preds = %48, %63
  %53 = phi %"struct.bookmarks::UrlAndTitle"* [ %54, %63 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %53, i64 -1, i32 1
  %56 = bitcast %"class.std::__1::basic_string.15"* %55 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = bitcast %"class.std::__1::basic_string.15"* %55 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %60, %52
  %64 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %54, i64 0, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %64) #9
  %65 = icmp eq %"struct.bookmarks::UrlAndTitle"* %54, %46
  br i1 %65, label %66, label %52

66:                                               ; preds = %63
  %67 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %48
  %70 = phi i8* [ %68, %66 ], [ %49, %48 ]
  store %"struct.bookmarks::UrlAndTitle"* %46, %"struct.bookmarks::UrlAndTitle"** %14, align 8
  call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %45, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br label %270

72:                                               ; preds = %31, %267
  %73 = phi %"struct.bookmarks::UrlAndTitle"* [ %28, %31 ], [ %268, %267 ]
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %32) #9
  %74 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %73, i64 0, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %33, %class.GURL* dereferenceable(120) %74) #9
  %75 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %73, i64 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string.15"* %75 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = bitcast %"class.std::__1::basic_string.15"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %81, i64 24, i1 false) #9
  br label %252

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %86, 11
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = trunc i64 %86 to i8
  store i8 %89, i8* %41, align 1
  br label %104

90:                                               ; preds = %82
  %91 = icmp ugt i64 %86, 9223372036854775791
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::basic_string.15"* %34 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %93) #11
  unreachable

94:                                               ; preds = %90
  %95 = add nuw nsw i64 %86, 8
  %96 = and i64 %95, -8
  %97 = icmp slt i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %94
  call void @abort() #11
  unreachable

99:                                               ; preds = %94
  %100 = shl i64 %96, 1
  %101 = call i8* @_Znwm(i64 %100) #10
  %102 = bitcast i8* %101 to i16*
  store i8* %101, i8** %36, align 8
  %103 = or i64 %96, -9223372036854775808
  store i64 %103, i64* %37, align 8
  store i64 %86, i64* %38, align 8
  br label %104

104:                                              ; preds = %99, %88
  %105 = phi i16* [ %39, %88 ], [ %102, %99 ]
  %106 = add nuw nsw i64 %86, 1
  %107 = add i64 %86, 1
  %108 = icmp ult i64 %107, 16
  br i1 %108, label %199, label %109

109:                                              ; preds = %104
  %110 = getelementptr i16, i16* %105, i64 1
  %111 = getelementptr i16, i16* %110, i64 %86
  %112 = getelementptr i16, i16* %84, i64 1
  %113 = getelementptr i16, i16* %112, i64 %86
  %114 = icmp ult i16* %105, %113
  %115 = icmp ult i16* %84, %111
  %116 = and i1 %114, %115
  br i1 %116, label %199, label %117

117:                                              ; preds = %109
  %118 = and i64 %107, -16
  %119 = sub i64 %106, %118
  %120 = getelementptr i16, i16* %84, i64 %118
  %121 = getelementptr i16, i16* %105, i64 %118
  %122 = add i64 %118, -16
  %123 = lshr exact i64 %122, 4
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 3
  %126 = icmp ult i64 %122, 48
  br i1 %126, label %178, label %127

127:                                              ; preds = %117
  %128 = sub nsw i64 %124, %125
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %175, %129 ]
  %131 = phi i64 [ %128, %127 ], [ %176, %129 ]
  %132 = getelementptr i16, i16* %84, i64 %130
  %133 = getelementptr i16, i16* %105, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !2
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !2
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !5, !noalias !2
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !5, !noalias !2
  %142 = or i64 %130, 16
  %143 = getelementptr i16, i16* %84, i64 %142
  %144 = getelementptr i16, i16* %105, i64 %142
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !2
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !2
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !5, !noalias !2
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !5, !noalias !2
  %153 = or i64 %130, 32
  %154 = getelementptr i16, i16* %84, i64 %153
  %155 = getelementptr i16, i16* %105, i64 %153
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !2
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !2
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !5, !noalias !2
  %162 = getelementptr i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !5, !noalias !2
  %164 = or i64 %130, 48
  %165 = getelementptr i16, i16* %84, i64 %164
  %166 = getelementptr i16, i16* %105, i64 %164
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !2
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !2
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !5, !noalias !2
  %173 = getelementptr i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !5, !noalias !2
  %175 = add i64 %130, 64
  %176 = add i64 %131, -4
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %129, !llvm.loop !7

178:                                              ; preds = %129, %117
  %179 = phi i64 [ 0, %117 ], [ %175, %129 ]
  %180 = icmp eq i64 %125, 0
  br i1 %180, label %197, label %181

181:                                              ; preds = %178, %181
  %182 = phi i64 [ %194, %181 ], [ %179, %178 ]
  %183 = phi i64 [ %195, %181 ], [ %125, %178 ]
  %184 = getelementptr i16, i16* %84, i64 %182
  %185 = getelementptr i16, i16* %105, i64 %182
  %186 = bitcast i16* %184 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !2
  %188 = getelementptr i16, i16* %184, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !2
  %191 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %191, align 2, !alias.scope !5, !noalias !2
  %192 = getelementptr i16, i16* %185, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %190, <8 x i16>* %193, align 2, !alias.scope !5, !noalias !2
  %194 = add i64 %182, 16
  %195 = add i64 %183, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %181, !llvm.loop !9

197:                                              ; preds = %181, %178
  %198 = icmp eq i64 %107, %118
  br i1 %198, label %252, label %199

199:                                              ; preds = %197, %109, %104
  %200 = phi i64 [ %106, %109 ], [ %106, %104 ], [ %119, %197 ]
  %201 = phi i16* [ %84, %109 ], [ %84, %104 ], [ %120, %197 ]
  %202 = phi i16* [ %105, %109 ], [ %105, %104 ], [ %121, %197 ]
  %203 = add i64 %200, -1
  %204 = and i64 %200, 7
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %199, %206
  %207 = phi i64 [ %212, %206 ], [ %200, %199 ]
  %208 = phi i16* [ %214, %206 ], [ %201, %199 ]
  %209 = phi i16* [ %213, %206 ], [ %202, %199 ]
  %210 = phi i64 [ %215, %206 ], [ %204, %199 ]
  %211 = load i16, i16* %208, align 2
  store i16 %211, i16* %209, align 2
  %212 = add i64 %207, -1
  %213 = getelementptr inbounds i16, i16* %209, i64 1
  %214 = getelementptr inbounds i16, i16* %208, i64 1
  %215 = add i64 %210, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %206, !llvm.loop !11

217:                                              ; preds = %206, %199
  %218 = phi i64 [ %200, %199 ], [ %212, %206 ]
  %219 = phi i16* [ %201, %199 ], [ %214, %206 ]
  %220 = phi i16* [ %202, %199 ], [ %213, %206 ]
  %221 = icmp ult i64 %203, 7
  br i1 %221, label %252, label %222

222:                                              ; preds = %217, %222
  %223 = phi i64 [ %248, %222 ], [ %218, %217 ]
  %224 = phi i16* [ %250, %222 ], [ %219, %217 ]
  %225 = phi i16* [ %249, %222 ], [ %220, %217 ]
  %226 = load i16, i16* %224, align 2
  store i16 %226, i16* %225, align 2
  %227 = getelementptr inbounds i16, i16* %225, i64 1
  %228 = getelementptr inbounds i16, i16* %224, i64 1
  %229 = load i16, i16* %228, align 2
  store i16 %229, i16* %227, align 2
  %230 = getelementptr inbounds i16, i16* %225, i64 2
  %231 = getelementptr inbounds i16, i16* %224, i64 2
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = getelementptr inbounds i16, i16* %225, i64 3
  %234 = getelementptr inbounds i16, i16* %224, i64 3
  %235 = load i16, i16* %234, align 2
  store i16 %235, i16* %233, align 2
  %236 = getelementptr inbounds i16, i16* %225, i64 4
  %237 = getelementptr inbounds i16, i16* %224, i64 4
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %225, i64 5
  %240 = getelementptr inbounds i16, i16* %224, i64 5
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %225, i64 6
  %243 = getelementptr inbounds i16, i16* %224, i64 6
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %225, i64 7
  %246 = getelementptr inbounds i16, i16* %224, i64 7
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = add i64 %223, -8
  %249 = getelementptr inbounds i16, i16* %225, i64 8
  %250 = getelementptr inbounds i16, i16* %224, i64 8
  %251 = icmp eq i64 %248, 0
  br i1 %251, label %252, label %222, !llvm.loop !12

252:                                              ; preds = %217, %222, %197, %80
  %253 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %5, align 8
  %254 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %6, align 8
  %255 = icmp ult %"struct.history::URLAndTitle"* %253, %254
  br i1 %255, label %256, label %262

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %253, i64 0, i32 0
  call void @_ZN4GURLC1EOS_(%class.GURL* %257, %class.GURL* nonnull dereferenceable(120) %33) #9
  %258 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %253, i64 0, i32 1
  %259 = bitcast %"class.std::__1::basic_string.15"* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %35, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #9
  %260 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %253, i64 1
  %261 = ptrtoint %"struct.history::URLAndTitle"* %260 to i64
  store i64 %261, i64* %42, align 8
  br label %267

262:                                              ; preds = %252
  call void @_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.history::URLAndTitle"* nonnull dereferenceable(144) %4) #9
  %263 = load i8, i8* %41, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %266) #10
  br label %267

267:                                              ; preds = %256, %262, %265
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %32) #9
  %268 = getelementptr inbounds %"struct.bookmarks::UrlAndTitle", %"struct.bookmarks::UrlAndTitle"* %73, i64 1
  %269 = icmp eq %"struct.bookmarks::UrlAndTitle"* %268, %29
  br i1 %269, label %43, label %72

270:                                              ; preds = %2, %71
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.history::URLAndTitle"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.history::URLAndTitle"*
  br i1 %10, label %12, label %71

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.history::URLAndTitle"** %13 to i64*
  %15 = icmp ugt i64 %1, 128102389400760775
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 144
  %21 = mul i64 %1, 144
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"struct.history::URLAndTitle"*
  %24 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %23, i64 %20
  %25 = ptrtoint %"struct.history::URLAndTitle"* %24 to i64
  %26 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %23, i64 %1
  %27 = ptrtoint %"struct.history::URLAndTitle"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.history::URLAndTitle"*
  %29 = icmp eq %"struct.history::URLAndTitle"* %28, %11
  br i1 %29, label %47, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.history::URLAndTitle"* [ %40, %30 ], [ %24, %17 ]
  %32 = phi %"struct.history::URLAndTitle"* [ %33, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %32, i64 -1
  %34 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %33, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %34, %class.GURL* dereferenceable(120) %35) #9
  %36 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %31, i64 -1, i32 1
  %37 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %32, i64 -1, i32 1
  %38 = bitcast %"class.std::__1::basic_string.15"* %36 to i8*
  %39 = bitcast %"class.std::__1::basic_string.15"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #9
  %40 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %31, i64 -1
  %41 = icmp eq %"struct.history::URLAndTitle"* %33, %11
  br i1 %41, label %42, label %30

42:                                               ; preds = %30
  %43 = ptrtoint %"struct.history::URLAndTitle"* %40 to i64
  %44 = load i64, i64* %6, align 8
  %45 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %13, align 8
  %46 = inttoptr i64 %44 to %"struct.history::URLAndTitle"*
  br label %47

47:                                               ; preds = %17, %42
  %48 = phi %"struct.history::URLAndTitle"* [ %46, %42 ], [ %28, %17 ]
  %49 = phi %"struct.history::URLAndTitle"* [ %45, %42 ], [ %11, %17 ]
  %50 = phi i64 [ %43, %42 ], [ %25, %17 ]
  %51 = phi i64 [ %44, %42 ], [ %18, %17 ]
  store i64 %50, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %52 = icmp eq %"struct.history::URLAndTitle"* %49, %48
  br i1 %52, label %67, label %53

53:                                               ; preds = %47, %64
  %54 = phi %"struct.history::URLAndTitle"* [ %55, %64 ], [ %49, %47 ]
  %55 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %54, i64 -1
  %56 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %54, i64 -1, i32 1
  %57 = bitcast %"class.std::__1::basic_string.15"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = bitcast %"class.std::__1::basic_string.15"* %56 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %61, %53
  %65 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %55, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %65) #9
  %66 = icmp eq %"struct.history::URLAndTitle"* %55, %48
  br i1 %66, label %67, label %53

67:                                               ; preds = %64, %47
  %68 = icmp eq i64 %51, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = inttoptr i64 %51 to i8*
  tail call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %69, %67, %2
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26ChromeHistoryBackendClient9IsWebSafeERK4GURL(%class.ChromeHistoryBackendClient* nocapture readnone, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator.10", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call %"class.content::ChildProcessSecurityPolicy"* @_ZN7content26ChildProcessSecurityPolicy11GetInstanceEv() #9
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 4, !noalias !13
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #9, !alias.scope !13
  br label %18

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %14 = load i32, i32* %13, align 4, !noalias !13
  %15 = sext i32 %14 to i64
  %16 = sext i32 %8 to i64
  %17 = getelementptr inbounds %"class.std::__1::allocator.10", %"class.std::__1::allocator.10"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #9, !noalias !13
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %12, i64 %15, i64 %16, %"class.std::__1::allocator.10"* nonnull dereferenceable(1) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #9, !noalias !13
  br label %18

18:                                               ; preds = %10, %11
  %19 = bitcast %"class.content::ChildProcessSecurityPolicy"* %5 to i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)***
  %20 = load i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)**, i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)*, i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)** %20, i64 4
  %22 = load i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)*, i1 (%"class.content::ChildProcessSecurityPolicy"*, %"class.std::__1::basic_string"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.content::ChildProcessSecurityPolicy"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %18, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret i1 %23
}

declare %"class.content::ChildProcessSecurityPolicy"* @_ZN7content26ChildProcessSecurityPolicy11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.10"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9bookmarks11ModelLoaderD1Ev(%"class.bookmarks::ModelLoader"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history11URLAndTitleENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.history::URLAndTitle"* dereferenceable(144)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.history::URLAndTitle"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 128102389400760775
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.history::URLAndTitle"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 144
  %20 = icmp ult i64 %19, 64051194700380387
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 128102389400760775, %14 ]
  %28 = mul i64 %27, 144
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.history::URLAndTitle"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.history::URLAndTitle"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %33, i64 %32
  %36 = ptrtoint %"struct.history::URLAndTitle"* %35 to i64
  %37 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %38) #9
  %39 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string.15"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string.15"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #9
  %43 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %34, i64 1
  %44 = ptrtoint %"struct.history::URLAndTitle"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %45, align 8
  %47 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %3, align 8
  %48 = icmp eq %"struct.history::URLAndTitle"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.history::URLAndTitle"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.history::URLAndTitle"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"struct.history::URLAndTitle"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %54, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %55, %class.GURL* dereferenceable(120) %56) #9
  %57 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %53, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string.15"* %57 to i8*
  %60 = bitcast %"class.std::__1::basic_string.15"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #9
  %61 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %52, i64 -1
  %62 = icmp eq %"struct.history::URLAndTitle"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.history::URLAndTitle"*, %"struct.history::URLAndTitle"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.history::URLAndTitle"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.history::URLAndTitle"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.history::URLAndTitle"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.history::URLAndTitle"*
  %72 = icmp eq %"struct.history::URLAndTitle"* %67, %71
  br i1 %72, label %87, label %73

73:                                               ; preds = %66, %84
  %74 = phi %"struct.history::URLAndTitle"* [ %75, %84 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %74, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string.15"* %76 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %77, i64 0, i32 1, i32 1
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = bitcast %"class.std::__1::basic_string.15"* %76 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %81, %73
  %85 = getelementptr inbounds %"struct.history::URLAndTitle", %"struct.history::URLAndTitle"* %75, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %85) #9
  %86 = icmp eq %"struct.history::URLAndTitle"* %75, %71
  br i1 %86, label %87, label %73

87:                                               ; preds = %84, %66
  %88 = icmp eq i64 %69, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %87, %89
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!15 = distinct !{!15, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!16 = distinct !{!16, !17, !"_ZNK4GURL6schemeEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4GURL6schemeEv"}
