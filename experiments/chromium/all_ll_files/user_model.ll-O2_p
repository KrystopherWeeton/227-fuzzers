; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/user_model.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/user_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>

$_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [18 x i8] c"is_gesture_active\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"pending_input_event_count\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"last_input_signal_time\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"last_gesture_start_time\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"last_continuous_gesture_time\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"last_gesture_expected_start_time\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"last_reset_time\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"is_gesture_expected\00", align 1

@_ZN5blink9scheduler9UserModelC1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::UserModel"*), void (%"class.blink::scheduler::UserModel"*)* @_ZN5blink9scheduler9UserModelC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler9UserModelC2Ev(%"class.blink::scheduler::UserModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 42, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler9UserModel28DidStartProcessingInputEventENS_5mojom9EventTypeEN4base9TimeTicksE(%"class.blink::scheduler::UserModel"* nocapture, i32, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %5, align 8
  switch i32 %1, label %13 [
    i32 28, label %6
    i32 16, label %6
    i32 11, label %6
  ]

6:                                                ; preds = %3, %3, %3
  %7 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %2, i64* %11, align 8
  br label %12

12:                                               ; preds = %6, %10
  store i8 1, i8* %7, align 8
  br label %13

13:                                               ; preds = %3, %12
  %14 = add i32 %1, -11
  %15 = icmp ult i32 %14, 8
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %2, i64* %17, align 8
  br label %18

18:                                               ; preds = %13, %16
  switch i32 %1, label %21 [
    i32 30, label %19
    i32 17, label %19
    i32 14, label %19
    i32 12, label %19
  ]

19:                                               ; preds = %18, %18, %18, %18
  %20 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  store i8 0, i8* %20, align 8
  br label %21

21:                                               ; preds = %18, %19
  %22 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 197, i32 0), align 16
  %23 = and i8 %22, 25
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %31, label %25, !prof !3

25:                                               ; preds = %21
  %26 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %4, align 4
  %30 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 197, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #12
  br label %31

31:                                               ; preds = %21, %25
  %32 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #12
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #12
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #12
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler9UserModel29DidFinishProcessingInputEventEN4base9TimeTicksE(%"class.blink::scheduler::UserModel"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = add nsw i32 %5, -1
  store i32 %8, i32* %4, align 8
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink9scheduler9UserModel21TimeLeftInUserGestureEN4base9TimeTicksE(%"class.blink::scheduler::UserModel"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %8, i64 100000) #12
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 9223372036854775807, i64 %13, !prof !4
  %15 = icmp slt i64 %14, %1
  %16 = sub nsw i64 %14, %1
  %17 = select i1 %15, i64 0, i64 %16
  ret i64 %17

18:                                               ; preds = %6, %2
  %19 = phi i64 [ 100000, %2 ], [ 0, %6 ]
  ret i64 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler9UserModel21IsGestureExpectedSoonEN4base9TimeTicksEPNS2_9TimeDeltaE(%"class.blink::scheduler::UserModel"* nocapture, i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 8
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %12, i64 300000) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 9223372036854775807, i64 %15, !prof !4
  %17 = icmp sgt i64 %16, %1
  br i1 %17, label %18, label %34

18:                                               ; preds = %10
  %19 = sub nsw i64 %16, %1
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  br label %33

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %23, i64 2000000) #12
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 9223372036854775807, i64 %28, !prof !4
  %30 = icmp sgt i64 %29, %1
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = sub nsw i64 %29, %1
  br label %34

33:                                               ; preds = %25, %18, %21
  store i8 0, i8* %4, align 1
  br label %39

34:                                               ; preds = %10, %31
  %35 = phi i64 [ %32, %31 ], [ 2000000, %10 ]
  %36 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  store i8 1, i8* %4, align 1
  br i1 %6, label %37, label %39

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %1, i64* %38, align 8
  br label %39

39:                                               ; preds = %34, %33, %37
  %40 = phi i1 [ false, %33 ], [ true, %34 ], [ true, %37 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler9UserModel25IsGestureExpectedSoonImplEN4base9TimeTicksEPNS2_9TimeDeltaE(%"class.blink::scheduler::UserModel"* nocapture readonly, i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 300000) #12
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 9223372036854775807, i64 %12, !prof !4
  %14 = icmp sgt i64 %13, %1
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = sub nsw i64 %13, %1
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  br label %33

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 2000000, i64* %19, align 8
  br label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %20
  %25 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 2000000) #12
  %26 = extractvalue { i64, i1 } %25, 1
  %27 = extractvalue { i64, i1 } %25, 0
  %28 = select i1 %26, i64 9223372036854775807, i64 %27, !prof !4
  %29 = icmp sgt i64 %28, %1
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = sub nsw i64 %28, %1
  %32 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %24, %20, %15, %30, %18
  %34 = phi i1 [ true, %18 ], [ true, %30 ], [ false, %24 ], [ false, %15 ], [ false, %20 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler9UserModel27IsGestureExpectedToContinueEN4base9TimeTicksEPNS2_9TimeDeltaE(%"class.blink::scheduler::UserModel"* nocapture readonly, i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 300000) #12
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 9223372036854775807, i64 %12, !prof !4
  %14 = icmp sgt i64 %13, %1
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = sub nsw i64 %13, %1
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %15, %7, %3
  %19 = phi i1 [ false, %3 ], [ true, %15 ], [ false, %7 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler9UserModel5ResetEN4base9TimeTicksE(%"class.blink::scheduler::UserModel"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  store i64 %1, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler9UserModel14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::UserModel"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedValue", align 8
  %19 = alloca %"class.perfetto::TracedDictionary", align 8
  %20 = bitcast %"class.perfetto::TracedDictionary"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = bitcast %"class.perfetto::TracedDictionary"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %19, %"class.perfetto::TracedValue"* %1) #12
  %22 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 0
  %23 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #12
  %24 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %23, i64 16, i1 false) #12
  %25 = load i32, i32* %22, align 4
  %26 = sext i32 %25 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %15, i64 %26) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  %27 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #12
  %28 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %27, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %13, i64 %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27)
  %31 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  %32 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %31, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %11, i64 %33) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  %35 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #12
  %36 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 4, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %35, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %9, i64 %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  %39 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #12
  %40 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 5, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %39, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %7, i64 %41) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %43 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #12
  %44 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 6, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %43, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %5, i64 %45) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43)
  %47 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 8
  %48 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #12
  %49 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %48, i64 16, i1 false) #12
  %50 = load i8, i8* %47, align 1, !range !2
  %51 = icmp ne i8 %50, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %3, i1 zeroext %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48)
  %52 = getelementptr inbounds %"class.blink::scheduler::UserModel", %"class.blink::scheduler::UserModel"* %0, i64 0, i32 7
  %53 = bitcast %"class.perfetto::TracedValue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %18, %"class.perfetto::TracedDictionary"* nonnull %19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #12
  %54 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %53, i64 16, i1 false) #12
  %55 = load i8, i8* %52, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %17, i1 zeroext %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  ret void
}

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #9

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #8

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #8

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #11

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #8

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #8

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #8

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
