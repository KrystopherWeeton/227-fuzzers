; ModuleID = '../../third_party/libzip/src/lib/zip_extra_field.c'
source_filename = "../../third_party/libzip/src/lib/zip_extra_field.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_buffer = type { i8, i8, i8*, i64, i64 }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

@_zip_ef_get_by_id.empty = internal constant [1 x i8] zeroinitializer, align 1
@.str = private unnamed_addr constant [4 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_extra_field* @_zip_ef_clone(%struct.zip_extra_field* readonly, %struct.zip_error*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %3, label %58, label %4

4:                                                ; preds = %2, %54
  %5 = phi %struct.zip_extra_field* [ %17, %54 ], [ null, %2 ]
  %6 = phi %struct.zip_extra_field* [ %50, %54 ], [ null, %2 ]
  %7 = phi %struct.zip_extra_field* [ %56, %54 ], [ %0, %2 ]
  %8 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %7, i64 0, i32 2
  %9 = load i16, i16* %8, align 4
  %10 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %7, i64 0, i32 3
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %7, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %7, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = tail call noalias i8* @malloc(i64 24) #8
  %17 = bitcast i8* %16 to %struct.zip_extra_field*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %4
  %20 = bitcast i8* %16 to %struct.zip_extra_field**
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %15, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 12
  %24 = bitcast i8* %23 to i16*
  store i16 %9, i16* %24, align 4
  %25 = getelementptr inbounds i8, i8* %16, i64 14
  %26 = bitcast i8* %25 to i16*
  store i16 %11, i16* %26, align 2
  %27 = icmp eq i16 %11, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = zext i16 %11 to i64
  %30 = tail call i8* @_zip_memdup(i8* %13, i64 %29, %struct.zip_error* null) #8
  %31 = getelementptr inbounds i8, i8* %16, i64 16
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = icmp eq i8* %30, null
  br i1 %33, label %34, label %48

34:                                               ; preds = %28
  tail call void @free(i8* nonnull %16) #8
  br label %38

35:                                               ; preds = %19
  %36 = getelementptr inbounds i8, i8* %16, i64 16
  %37 = bitcast i8* %36 to i8**
  store i8* null, i8** %37, align 8
  br label %48

38:                                               ; preds = %4, %34
  tail call void @zip_error_set(%struct.zip_error* %1, i32 14, i32 0) #8
  %39 = icmp eq %struct.zip_extra_field* %6, null
  br i1 %39, label %58, label %40

40:                                               ; preds = %38, %40
  %41 = phi %struct.zip_extra_field* [ %43, %40 ], [ %6, %38 ]
  %42 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %41, i64 0, i32 0
  %43 = load %struct.zip_extra_field*, %struct.zip_extra_field** %42, align 8
  %44 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %41, i64 0, i32 4
  %45 = load i8*, i8** %44, align 8
  tail call void @free(i8* %45) #8
  %46 = bitcast %struct.zip_extra_field* %41 to i8*
  tail call void @free(i8* %46) #8
  %47 = icmp eq %struct.zip_extra_field* %43, null
  br i1 %47, label %58, label %40

48:                                               ; preds = %35, %28
  %49 = icmp eq %struct.zip_extra_field* %6, null
  %50 = select i1 %49, %struct.zip_extra_field* %17, %struct.zip_extra_field* %6
  %51 = icmp eq %struct.zip_extra_field* %5, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %struct.zip_extra_field* %5 to i8**
  store i8* %16, i8** %53, align 8
  br label %54

54:                                               ; preds = %48, %52
  %55 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %7, i64 0, i32 0
  %56 = load %struct.zip_extra_field*, %struct.zip_extra_field** %55, align 8
  %57 = icmp eq %struct.zip_extra_field* %56, null
  br i1 %57, label %58, label %4

58:                                               ; preds = %54, %40, %2, %38
  %59 = phi %struct.zip_extra_field* [ null, %38 ], [ null, %2 ], [ null, %40 ], [ %50, %54 ]
  ret %struct.zip_extra_field* %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.zip_extra_field* @_zip_ef_new(i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #0 {
  %5 = tail call noalias i8* @malloc(i64 24) #8
  %6 = bitcast i8* %5 to %struct.zip_extra_field*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.zip_extra_field**
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 12
  %13 = bitcast i8* %12 to i16*
  store i16 %0, i16* %13, align 4
  %14 = getelementptr inbounds i8, i8* %5, i64 14
  %15 = bitcast i8* %14 to i16*
  store i16 %1, i16* %15, align 2
  %16 = icmp eq i16 %1, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %8
  %18 = zext i16 %1 to i64
  %19 = tail call i8* @_zip_memdup(i8* %2, i64 %18, %struct.zip_error* null) #8
  %20 = getelementptr inbounds i8, i8* %5, i64 16
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  tail call void @free(i8* nonnull %5) #8
  br label %27

24:                                               ; preds = %8
  %25 = getelementptr inbounds i8, i8* %5, i64 16
  %26 = bitcast i8* %25 to i8**
  store i8* null, i8** %26, align 8
  br label %27

27:                                               ; preds = %24, %17, %4, %23
  %28 = phi %struct.zip_extra_field* [ null, %23 ], [ null, %4 ], [ %6, %17 ], [ %6, %24 ]
  ret %struct.zip_extra_field* %28
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_ef_free(%struct.zip_extra_field*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1, %3
  %4 = phi %struct.zip_extra_field* [ %6, %3 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %4, i64 0, i32 0
  %6 = load %struct.zip_extra_field*, %struct.zip_extra_field** %5, align 8
  %7 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %4, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  tail call void @free(i8* %8) #8
  %9 = bitcast %struct.zip_extra_field* %4 to i8*
  tail call void @free(i8* %9) #8
  %10 = icmp eq %struct.zip_extra_field* %6, null
  br i1 %10, label %11, label %3

11:                                               ; preds = %3, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_extra_field* @_zip_ef_delete_by_id(%struct.zip_extra_field*, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %5, label %62, label %6

6:                                                ; preds = %4
  %7 = and i32 %3, 768
  %8 = icmp eq i16 %1, -1
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, -1
  %11 = xor i32 %7, -1
  br label %12

12:                                               ; preds = %6, %56
  %13 = phi i32 [ 0, %6 ], [ %57, %56 ]
  %14 = phi %struct.zip_extra_field* [ null, %6 ], [ %58, %56 ]
  %15 = phi %struct.zip_extra_field* [ %0, %6 ], [ %59, %56 ]
  %16 = phi %struct.zip_extra_field* [ %0, %6 ], [ %60, %56 ]
  %17 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %7, %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %50, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %16, i64 0, i32 2
  %23 = load i16, i16* %22, align 4
  %24 = icmp eq i16 %23, %1
  %25 = or i1 %8, %24
  br i1 %25, label %26, label %50

26:                                               ; preds = %21
  %27 = icmp eq i32 %13, %9
  %28 = or i1 %10, %27
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = and i32 %18, %11
  store i32 %30, i32* %17, align 8
  %31 = and i32 %30, 768
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %44

33:                                               ; preds = %29
  %34 = icmp eq %struct.zip_extra_field* %14, null
  %35 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %16, i64 0, i32 0
  %36 = load %struct.zip_extra_field*, %struct.zip_extra_field** %35, align 8
  br i1 %34, label %39, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %14, i64 0, i32 0
  store %struct.zip_extra_field* %36, %struct.zip_extra_field** %38, align 8
  br label %39

39:                                               ; preds = %37, %33
  %40 = phi %struct.zip_extra_field* [ %15, %37 ], [ %36, %33 ]
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %35, align 8
  %41 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %16, i64 0, i32 4
  %42 = load i8*, i8** %41, align 8
  tail call void @free(i8* %42) #8
  %43 = bitcast %struct.zip_extra_field* %16 to i8*
  tail call void @free(i8* %43) #8
  br i1 %10, label %48, label %44

44:                                               ; preds = %26, %29, %39
  %45 = phi %struct.zip_extra_field* [ %40, %39 ], [ %15, %29 ], [ %15, %26 ]
  %46 = add nsw i32 %13, 1
  %47 = icmp slt i32 %13, %9
  br i1 %47, label %50, label %62

48:                                               ; preds = %39
  %49 = icmp eq %struct.zip_extra_field* %14, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %44, %12, %21, %48
  %51 = phi i32 [ %13, %48 ], [ %13, %21 ], [ %13, %12 ], [ %46, %44 ]
  %52 = phi %struct.zip_extra_field* [ %14, %48 ], [ %16, %21 ], [ %16, %12 ], [ %16, %44 ]
  %53 = phi %struct.zip_extra_field* [ %40, %48 ], [ %15, %21 ], [ %15, %12 ], [ %45, %44 ]
  %54 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %52, i64 0, i32 0
  %55 = load %struct.zip_extra_field*, %struct.zip_extra_field** %54, align 8
  br label %56

56:                                               ; preds = %48, %50
  %57 = phi i32 [ %51, %50 ], [ %13, %48 ]
  %58 = phi %struct.zip_extra_field* [ %52, %50 ], [ null, %48 ]
  %59 = phi %struct.zip_extra_field* [ %53, %50 ], [ %40, %48 ]
  %60 = phi %struct.zip_extra_field* [ %55, %50 ], [ %40, %48 ]
  %61 = icmp eq %struct.zip_extra_field* %60, null
  br i1 %61, label %62, label %12

62:                                               ; preds = %56, %44, %4
  %63 = phi %struct.zip_extra_field* [ null, %4 ], [ %45, %44 ], [ %59, %56 ]
  ret %struct.zip_extra_field* %63
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_zip_ef_get_by_id(%struct.zip_extra_field* readonly, i16*, i16 zeroext, i16 zeroext, i32, %struct.zip_error*) local_unnamed_addr #0 {
  %7 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %6
  %9 = and i32 %4, 768
  %10 = zext i16 %3 to i32
  br label %11

11:                                               ; preds = %8, %38
  %12 = phi i32 [ 0, %8 ], [ %39, %38 ]
  %13 = phi %struct.zip_extra_field* [ %0, %8 ], [ %41, %38 ]
  %14 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 2
  %15 = load i16, i16* %14, align 4
  %16 = icmp eq i16 %15, %2
  br i1 %16, label %17, label %38

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %9, %19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %17
  %23 = icmp slt i32 %12, %10
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = add nsw i32 %12, 1
  br label %38

26:                                               ; preds = %22
  %27 = icmp eq i16* %1, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 3
  %30 = load i16, i16* %29, align 2
  store i16 %30, i16* %1, align 2
  br label %31

31:                                               ; preds = %26, %28
  %32 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 3
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8
  br label %44

38:                                               ; preds = %17, %11, %24
  %39 = phi i32 [ %25, %24 ], [ %12, %17 ], [ %12, %11 ]
  %40 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 0
  %41 = load %struct.zip_extra_field*, %struct.zip_extra_field** %40, align 8
  %42 = icmp eq %struct.zip_extra_field* %41, null
  br i1 %42, label %43, label %11

43:                                               ; preds = %38, %6
  tail call void @zip_error_set(%struct.zip_error* %5, i32 9, i32 0) #8
  br label %44

44:                                               ; preds = %31, %43, %35
  %45 = phi i8* [ %37, %35 ], [ null, %43 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @_zip_ef_get_by_id.empty, i64 0, i64 0), %31 ]
  ret i8* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_extra_field* @_zip_ef_merge(%struct.zip_extra_field*, %struct.zip_extra_field*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %3, label %58, label %4

4:                                                ; preds = %2, %4
  %5 = phi %struct.zip_extra_field* [ %7, %4 ], [ %0, %2 ]
  %6 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %5, i64 0, i32 0
  %7 = load %struct.zip_extra_field*, %struct.zip_extra_field** %6, align 8
  %8 = icmp eq %struct.zip_extra_field* %7, null
  br i1 %8, label %9, label %4

9:                                                ; preds = %4
  %10 = icmp eq %struct.zip_extra_field* %1, null
  br i1 %10, label %58, label %11

11:                                               ; preds = %9, %55
  %12 = phi %struct.zip_extra_field* [ %56, %55 ], [ %5, %9 ]
  %13 = phi %struct.zip_extra_field* [ %15, %55 ], [ %1, %9 ]
  %14 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 0
  %15 = load %struct.zip_extra_field*, %struct.zip_extra_field** %14, align 8
  %16 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 2
  %17 = load i16, i16* %16, align 4
  %18 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 3
  %19 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 4
  br label %20

20:                                               ; preds = %11, %39
  %21 = phi %struct.zip_extra_field* [ %0, %11 ], [ %41, %39 ]
  %22 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %21, i64 0, i32 2
  %23 = load i16, i16* %22, align 4
  %24 = icmp eq i16 %23, %17
  br i1 %24, label %25, label %39

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %21, i64 0, i32 3
  %27 = load i16, i16* %26, align 2
  %28 = load i16, i16* %18, align 2
  %29 = icmp eq i16 %27, %28
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = icmp eq i16 %27, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %21, i64 0, i32 4
  %34 = load i8*, i8** %33, align 8
  %35 = load i8*, i8** %19, align 8
  %36 = zext i16 %27 to i64
  %37 = tail call i32 @bcmp(i8* %34, i8* %35, i64 %36)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %20, %25, %32
  %40 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %21, i64 0, i32 0
  %41 = load %struct.zip_extra_field*, %struct.zip_extra_field** %40, align 8
  %42 = icmp eq %struct.zip_extra_field* %41, null
  br i1 %42, label %43, label %20

43:                                               ; preds = %39
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %14, align 8
  %44 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %12, i64 0, i32 0
  store %struct.zip_extra_field* %13, %struct.zip_extra_field** %44, align 8
  br label %55

45:                                               ; preds = %30, %32
  %46 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 768
  %49 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %21, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = or i32 %50, %48
  store i32 %51, i32* %49, align 8
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %14, align 8
  %52 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 4
  %53 = load i8*, i8** %52, align 8
  tail call void @free(i8* %53) #8
  %54 = bitcast %struct.zip_extra_field* %13 to i8*
  tail call void @free(i8* %54) #8
  br label %55

55:                                               ; preds = %45, %43
  %56 = phi %struct.zip_extra_field* [ %13, %43 ], [ %12, %45 ]
  %57 = icmp eq %struct.zip_extra_field* %15, null
  br i1 %57, label %58, label %11

58:                                               ; preds = %55, %9, %2
  %59 = phi %struct.zip_extra_field* [ %1, %2 ], [ %0, %9 ], [ %0, %55 ]
  ret %struct.zip_extra_field* %59
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i8* @_zip_memdup(i8*, i64, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_zip_ef_parse(i8*, i16 zeroext, i32, %struct.zip_extra_field**, %struct.zip_error*) local_unnamed_addr #0 {
  %6 = zext i16 %1 to i64
  %7 = tail call %struct.zip_buffer* @_zip_buffer_new(i8* %0, i64 %6) #8
  %8 = icmp eq %struct.zip_buffer* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %7) #8
  br i1 %10, label %12, label %72

11:                                               ; preds = %5
  tail call void @zip_error_set(%struct.zip_error* %4, i32 14, i32 0) #8
  br label %107

12:                                               ; preds = %9, %69
  %13 = phi %struct.zip_extra_field* [ %70, %69 ], [ null, %9 ]
  %14 = phi %struct.zip_extra_field* [ %35, %69 ], [ null, %9 ]
  %15 = tail call i64 @_zip_buffer_left(%struct.zip_buffer* nonnull %7) #8
  %16 = icmp ugt i64 %15, 3
  br i1 %16, label %17, label %72

17:                                               ; preds = %12
  %18 = tail call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %7) #8
  %19 = tail call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %7) #8
  %20 = zext i16 %19 to i64
  %21 = tail call i8* @_zip_buffer_get(%struct.zip_buffer* nonnull %7, i64 %20) #8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %33

23:                                               ; preds = %17
  tail call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #8
  tail call void @_zip_buffer_free(%struct.zip_buffer* nonnull %7) #8
  %24 = icmp eq %struct.zip_extra_field* %13, null
  br i1 %24, label %107, label %25

25:                                               ; preds = %23, %25
  %26 = phi %struct.zip_extra_field* [ %28, %25 ], [ %13, %23 ]
  %27 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %26, i64 0, i32 0
  %28 = load %struct.zip_extra_field*, %struct.zip_extra_field** %27, align 8
  %29 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %26, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8
  tail call void @free(i8* %30) #8
  %31 = bitcast %struct.zip_extra_field* %26 to i8*
  tail call void @free(i8* %31) #8
  %32 = icmp eq %struct.zip_extra_field* %28, null
  br i1 %32, label %107, label %25

33:                                               ; preds = %17
  %34 = tail call noalias i8* @malloc(i64 24) #8
  %35 = bitcast i8* %34 to %struct.zip_extra_field*
  %36 = icmp eq i8* %34, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %33
  %38 = bitcast i8* %34 to %struct.zip_extra_field**
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %38, align 8
  %39 = getelementptr inbounds i8, i8* %34, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %2, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 12
  %42 = bitcast i8* %41 to i16*
  store i16 %18, i16* %42, align 4
  %43 = getelementptr inbounds i8, i8* %34, i64 14
  %44 = bitcast i8* %43 to i16*
  store i16 %19, i16* %44, align 2
  %45 = icmp eq i16 %19, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %37
  %47 = tail call i8* @_zip_memdup(i8* nonnull %21, i64 %20, %struct.zip_error* null) #8
  %48 = getelementptr inbounds i8, i8* %34, i64 16
  %49 = bitcast i8* %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = icmp eq i8* %47, null
  br i1 %50, label %51, label %65

51:                                               ; preds = %46
  tail call void @free(i8* nonnull %34) #8
  br label %55

52:                                               ; preds = %37
  %53 = getelementptr inbounds i8, i8* %34, i64 16
  %54 = bitcast i8* %53 to i8**
  store i8* null, i8** %54, align 8
  br label %65

55:                                               ; preds = %33, %51
  tail call void @zip_error_set(%struct.zip_error* %4, i32 14, i32 0) #8
  tail call void @_zip_buffer_free(%struct.zip_buffer* nonnull %7) #8
  %56 = icmp eq %struct.zip_extra_field* %13, null
  br i1 %56, label %107, label %57

57:                                               ; preds = %55, %57
  %58 = phi %struct.zip_extra_field* [ %60, %57 ], [ %13, %55 ]
  %59 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %58, i64 0, i32 0
  %60 = load %struct.zip_extra_field*, %struct.zip_extra_field** %59, align 8
  %61 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %58, i64 0, i32 4
  %62 = load i8*, i8** %61, align 8
  tail call void @free(i8* %62) #8
  %63 = bitcast %struct.zip_extra_field* %58 to i8*
  tail call void @free(i8* %63) #8
  %64 = icmp eq %struct.zip_extra_field* %60, null
  br i1 %64, label %107, label %57

65:                                               ; preds = %52, %46
  %66 = icmp eq %struct.zip_extra_field* %13, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = bitcast %struct.zip_extra_field* %14 to i8**
  store i8* %34, i8** %68, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi %struct.zip_extra_field* [ %13, %67 ], [ %35, %65 ]
  %71 = tail call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %7) #8
  br i1 %71, label %12, label %72

72:                                               ; preds = %12, %69, %9
  %73 = phi %struct.zip_extra_field* [ null, %9 ], [ %70, %69 ], [ %13, %12 ]
  %74 = tail call zeroext i1 @_zip_buffer_eof(%struct.zip_buffer* nonnull %7) #8
  br i1 %74, label %94, label %75

75:                                               ; preds = %72
  %76 = tail call i64 @_zip_buffer_left(%struct.zip_buffer* nonnull %7) #8
  %77 = tail call i8* @_zip_buffer_get(%struct.zip_buffer* nonnull %7, i64 %76) #8
  %78 = icmp ugt i64 %76, 3
  %79 = icmp eq i8* %77, null
  %80 = or i1 %78, %79
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = tail call i32 @bcmp(i8* nonnull %77, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 %76)
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %75
  tail call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #8
  tail call void @_zip_buffer_free(%struct.zip_buffer* nonnull %7) #8
  %85 = icmp eq %struct.zip_extra_field* %73, null
  br i1 %85, label %107, label %86

86:                                               ; preds = %84, %86
  %87 = phi %struct.zip_extra_field* [ %89, %86 ], [ %73, %84 ]
  %88 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %87, i64 0, i32 0
  %89 = load %struct.zip_extra_field*, %struct.zip_extra_field** %88, align 8
  %90 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %87, i64 0, i32 4
  %91 = load i8*, i8** %90, align 8
  tail call void @free(i8* %91) #8
  %92 = bitcast %struct.zip_extra_field* %87 to i8*
  tail call void @free(i8* %92) #8
  %93 = icmp eq %struct.zip_extra_field* %89, null
  br i1 %93, label %107, label %86

94:                                               ; preds = %81, %72
  tail call void @_zip_buffer_free(%struct.zip_buffer* nonnull %7) #8
  %95 = icmp eq %struct.zip_extra_field** %3, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %94
  store %struct.zip_extra_field* %73, %struct.zip_extra_field** %3, align 8
  br label %107

97:                                               ; preds = %94
  %98 = icmp eq %struct.zip_extra_field* %73, null
  br i1 %98, label %107, label %99

99:                                               ; preds = %97, %99
  %100 = phi %struct.zip_extra_field* [ %102, %99 ], [ %73, %97 ]
  %101 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %100, i64 0, i32 0
  %102 = load %struct.zip_extra_field*, %struct.zip_extra_field** %101, align 8
  %103 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %100, i64 0, i32 4
  %104 = load i8*, i8** %103, align 8
  tail call void @free(i8* %104) #8
  %105 = bitcast %struct.zip_extra_field* %100 to i8*
  tail call void @free(i8* %105) #8
  %106 = icmp eq %struct.zip_extra_field* %102, null
  br i1 %106, label %107, label %99

107:                                              ; preds = %86, %99, %57, %25, %55, %23, %97, %84, %96, %11
  %108 = phi i1 [ false, %11 ], [ true, %96 ], [ false, %84 ], [ true, %97 ], [ false, %23 ], [ false, %55 ], [ false, %25 ], [ false, %57 ], [ true, %99 ], [ false, %86 ]
  ret i1 %108
}

declare %struct.zip_buffer* @_zip_buffer_new(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_zip_buffer_ok(%struct.zip_buffer*) local_unnamed_addr #2

declare i64 @_zip_buffer_left(%struct.zip_buffer*) local_unnamed_addr #2

declare zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer*) local_unnamed_addr #2

declare i8* @_zip_buffer_get(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare void @_zip_buffer_free(%struct.zip_buffer*) local_unnamed_addr #2

declare zeroext i1 @_zip_buffer_eof(%struct.zip_buffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_extra_field* @_zip_ef_remove_internal(%struct.zip_extra_field*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1, %23
  %4 = phi %struct.zip_extra_field* [ %26, %23 ], [ null, %1 ]
  %5 = phi %struct.zip_extra_field* [ %25, %23 ], [ %0, %1 ]
  %6 = phi %struct.zip_extra_field* [ %24, %23 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 4
  switch i16 %8, label %20 [
    i16 25461, label %9
    i16 28789, label %9
    i16 -26367, label %9
    i16 1, label %9
  ]

9:                                                ; preds = %3, %3, %3, %3
  %10 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %6, i64 0, i32 0
  %11 = load %struct.zip_extra_field*, %struct.zip_extra_field** %10, align 8
  %12 = icmp eq %struct.zip_extra_field* %5, %6
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %10, align 8
  %13 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %6, i64 0, i32 4
  %14 = load i8*, i8** %13, align 8
  tail call void @free(i8* %14) #8
  %15 = bitcast %struct.zip_extra_field* %6 to i8*
  tail call void @free(i8* %15) #8
  %16 = select i1 %12, %struct.zip_extra_field* %11, %struct.zip_extra_field* %5
  %17 = icmp eq %struct.zip_extra_field* %4, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %4, i64 0, i32 0
  store %struct.zip_extra_field* %11, %struct.zip_extra_field** %19, align 8
  br label %23

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %6, i64 0, i32 0
  %22 = load %struct.zip_extra_field*, %struct.zip_extra_field** %21, align 8
  br label %23

23:                                               ; preds = %18, %9, %20
  %24 = phi %struct.zip_extra_field* [ %22, %20 ], [ %11, %9 ], [ %11, %18 ]
  %25 = phi %struct.zip_extra_field* [ %5, %20 ], [ %16, %9 ], [ %16, %18 ]
  %26 = phi %struct.zip_extra_field* [ %6, %20 ], [ null, %9 ], [ %4, %18 ]
  %27 = icmp eq %struct.zip_extra_field* %24, null
  br i1 %27, label %28, label %3

28:                                               ; preds = %23, %1
  %29 = phi %struct.zip_extra_field* [ null, %1 ], [ %25, %23 ]
  ret %struct.zip_extra_field* %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_zip_ef_size(%struct.zip_extra_field* readonly, i32) local_unnamed_addr #5 {
  %3 = icmp eq %struct.zip_extra_field* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = and i32 %1, 768
  br label %6

6:                                                ; preds = %4, %18
  %7 = phi i16 [ 0, %4 ], [ %19, %18 ]
  %8 = phi %struct.zip_extra_field* [ %0, %4 ], [ %21, %18 ]
  %9 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %5, %10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = add i16 %7, 4
  %15 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %8, i64 0, i32 3
  %16 = load i16, i16* %15, align 2
  %17 = add i16 %14, %16
  br label %18

18:                                               ; preds = %6, %13
  %19 = phi i16 [ %17, %13 ], [ %7, %6 ]
  %20 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %8, i64 0, i32 0
  %21 = load %struct.zip_extra_field*, %struct.zip_extra_field** %20, align 8
  %22 = icmp eq %struct.zip_extra_field* %21, null
  br i1 %22, label %23, label %6

23:                                               ; preds = %18, %2
  %24 = phi i16 [ 0, %2 ], [ %19, %18 ]
  ret i16 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_ef_write(%struct.zip*, %struct.zip_extra_field* readonly, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 -1431655766, i32* %4, align 4
  %6 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %5, i64 4) #8
  %7 = icmp eq %struct.zip_buffer* %6, null
  br i1 %7, label %47, label %8

8:                                                ; preds = %3
  %9 = icmp eq %struct.zip_extra_field* %1, null
  br i1 %9, label %45, label %10

10:                                               ; preds = %8
  %11 = and i32 %2, 768
  br label %12

12:                                               ; preds = %10, %41
  %13 = phi %struct.zip_extra_field* [ %1, %10 ], [ %43, %41 ]
  %14 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %11, %15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %12
  %19 = call i32 @_zip_buffer_set_offset(%struct.zip_buffer* nonnull %6, i64 0) #8
  %20 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 2
  %21 = load i16, i16* %20, align 4
  %22 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %6, i16 zeroext %21) #8
  %23 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 3
  %24 = load i16, i16* %23, align 2
  %25 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %6, i16 zeroext %24) #8
  %26 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %6) #8
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %28, i32 20, i32 0) #8
  br label %45

29:                                               ; preds = %18
  %30 = call i32 @_zip_write(%struct.zip* %0, i8* nonnull %5, i64 4) #8
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = load i16, i16* %23, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8
  %38 = zext i16 %33 to i64
  %39 = call i32 @_zip_write(%struct.zip* %0, i8* %37, i64 %38) #8
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %32, %12, %35
  %42 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %13, i64 0, i32 0
  %43 = load %struct.zip_extra_field*, %struct.zip_extra_field** %42, align 8
  %44 = icmp eq %struct.zip_extra_field* %43, null
  br i1 %44, label %45, label %12

45:                                               ; preds = %41, %35, %29, %8, %27
  %46 = phi i32 [ -1, %27 ], [ 0, %8 ], [ 0, %41 ], [ -1, %35 ], [ -1, %29 ]
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %6) #8
  br label %47

47:                                               ; preds = %45, %3
  %48 = phi i32 [ -1, %3 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i32 %48
}

declare i32 @_zip_buffer_set_offset(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare i32 @_zip_buffer_put_16(%struct.zip_buffer*, i16 zeroext) local_unnamed_addr #2

declare i32 @_zip_write(%struct.zip*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_read_local_ef(%struct.zip*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.zip_extra_field*, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  %6 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 9
  store i32 -1431655766, i32* %3, align 4
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %10, i32 18, i32 0) #8
  br label %121

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %13 = load %struct.zip_entry*, %struct.zip_entry** %12, align 8
  %14 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %13, i64 %1, i32 0
  %15 = load %struct.zip_dirent*, %struct.zip_dirent** %14, align 8
  %16 = icmp eq %struct.zip_dirent* %15, null
  br i1 %16, label %121, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %15, i64 0, i32 1
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %121

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %15, i64 0, i32 18
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 26
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %27, i32 4, i32 27) #8
  br label %121

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 0
  %30 = load %struct.zip_source*, %struct.zip_source** %29, align 8
  %31 = tail call i32 @zip_source_seek(%struct.zip_source* %30, i64 %24, i32 0) #8
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %35 = load %struct.zip_source*, %struct.zip_source** %29, align 8
  tail call void @_zip_error_set_from_source(%struct.zip_error* %34, %struct.zip_source* %35) #8
  br label %121

36:                                               ; preds = %28
  %37 = load %struct.zip_source*, %struct.zip_source** %29, align 8
  %38 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %39 = call %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source* %37, i64 4, i8* nonnull %5, %struct.zip_error* %38) #8
  %40 = icmp eq %struct.zip_buffer* %39, null
  br i1 %40, label %121, label %41

41:                                               ; preds = %36
  %42 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %39) #8
  %43 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %39) #8
  %44 = call zeroext i1 @_zip_buffer_eof(%struct.zip_buffer* nonnull %39) #8
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %39) #8
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  call void @zip_error_set(%struct.zip_error* %38, i32 20, i32 0) #8
  br label %121

46:                                               ; preds = %41
  %47 = icmp eq i16 %43, 0
  br i1 %47, label %100, label %48

48:                                               ; preds = %46
  %49 = bitcast %struct.zip_extra_field** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  store %struct.zip_extra_field* inttoptr (i64 -6148914691236517206 to %struct.zip_extra_field*), %struct.zip_extra_field** %4, align 8
  %50 = load %struct.zip_source*, %struct.zip_source** %29, align 8
  %51 = zext i16 %42 to i64
  %52 = call i32 @zip_source_seek(%struct.zip_source* %50, i64 %51, i32 1) #8
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = tail call i32* @__errno_location() #9
  %56 = load i32, i32* %55, align 4
  call void @zip_error_set(%struct.zip_error* %38, i32 4, i32 %56) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %121

57:                                               ; preds = %48
  %58 = load %struct.zip_source*, %struct.zip_source** %29, align 8
  %59 = zext i16 %43 to i64
  %60 = call i8* @_zip_read_data(%struct.zip_buffer* null, %struct.zip_source* %58, i64 %59, i1 zeroext false, %struct.zip_error* %38) #8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %119, label %62

62:                                               ; preds = %57
  %63 = call zeroext i1 @_zip_ef_parse(i8* nonnull %60, i16 zeroext %43, i32 256, %struct.zip_extra_field** nonnull %4, %struct.zip_error* %38)
  call void @free(i8* nonnull %60) #8
  br i1 %63, label %64, label %120

64:                                               ; preds = %62
  %65 = load %struct.zip_extra_field*, %struct.zip_extra_field** %4, align 8
  %66 = icmp eq %struct.zip_extra_field* %65, null
  br i1 %66, label %99, label %67

67:                                               ; preds = %64, %87
  %68 = phi %struct.zip_extra_field* [ %90, %87 ], [ null, %64 ]
  %69 = phi %struct.zip_extra_field* [ %89, %87 ], [ %65, %64 ]
  %70 = phi %struct.zip_extra_field* [ %88, %87 ], [ %65, %64 ]
  %71 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %70, i64 0, i32 2
  %72 = load i16, i16* %71, align 4
  switch i16 %72, label %84 [
    i16 25461, label %73
    i16 28789, label %73
    i16 -26367, label %73
    i16 1, label %73
  ]

73:                                               ; preds = %67, %67, %67, %67
  %74 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %70, i64 0, i32 0
  %75 = load %struct.zip_extra_field*, %struct.zip_extra_field** %74, align 8
  %76 = icmp eq %struct.zip_extra_field* %69, %70
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %74, align 8
  %77 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %70, i64 0, i32 4
  %78 = load i8*, i8** %77, align 8
  call void @free(i8* %78) #8
  %79 = bitcast %struct.zip_extra_field* %70 to i8*
  call void @free(i8* %79) #8
  %80 = select i1 %76, %struct.zip_extra_field* %75, %struct.zip_extra_field* %69
  %81 = icmp eq %struct.zip_extra_field* %68, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %68, i64 0, i32 0
  store %struct.zip_extra_field* %75, %struct.zip_extra_field** %83, align 8
  br label %87

84:                                               ; preds = %67
  %85 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %70, i64 0, i32 0
  %86 = load %struct.zip_extra_field*, %struct.zip_extra_field** %85, align 8
  br label %87

87:                                               ; preds = %84, %82, %73
  %88 = phi %struct.zip_extra_field* [ %86, %84 ], [ %75, %73 ], [ %75, %82 ]
  %89 = phi %struct.zip_extra_field* [ %69, %84 ], [ %80, %73 ], [ %80, %82 ]
  %90 = phi %struct.zip_extra_field* [ %70, %84 ], [ null, %73 ], [ %68, %82 ]
  %91 = icmp eq %struct.zip_extra_field* %88, null
  br i1 %91, label %92, label %67

92:                                               ; preds = %87
  store %struct.zip_extra_field* %89, %struct.zip_extra_field** %4, align 8
  %93 = load %struct.zip_dirent*, %struct.zip_dirent** %14, align 8
  %94 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %93, i64 0, i32 13
  %95 = load %struct.zip_extra_field*, %struct.zip_extra_field** %94, align 8
  %96 = call %struct.zip_extra_field* @_zip_ef_merge(%struct.zip_extra_field* %95, %struct.zip_extra_field* %89)
  %97 = load %struct.zip_dirent*, %struct.zip_dirent** %14, align 8
  %98 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %97, i64 0, i32 13
  store %struct.zip_extra_field* %96, %struct.zip_extra_field** %98, align 8
  br label %99

99:                                               ; preds = %92, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %100

100:                                              ; preds = %99, %46
  %101 = load %struct.zip_dirent*, %struct.zip_dirent** %14, align 8
  %102 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %101, i64 0, i32 1
  store i8 1, i8* %102, align 4
  %103 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %13, i64 %1, i32 1
  %104 = load %struct.zip_dirent*, %struct.zip_dirent** %103, align 8
  %105 = icmp eq %struct.zip_dirent* %104, null
  br i1 %105, label %121, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %104, i64 0, i32 1
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %121

110:                                              ; preds = %106
  %111 = load %struct.zip_dirent*, %struct.zip_dirent** %14, align 8
  %112 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %111, i64 0, i32 13
  %113 = bitcast %struct.zip_extra_field** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %104, i64 0, i32 13
  %116 = bitcast %struct.zip_extra_field** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = load %struct.zip_dirent*, %struct.zip_dirent** %103, align 8
  %118 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %117, i64 0, i32 1
  store i8 1, i8* %118, align 4
  br label %121

119:                                              ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %121

120:                                              ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %121

121:                                              ; preds = %106, %110, %100, %120, %119, %54, %36, %11, %17, %45, %33, %26, %9
  %122 = phi i32 [ -1, %9 ], [ -1, %26 ], [ -1, %33 ], [ -1, %45 ], [ 0, %17 ], [ 0, %11 ], [ -1, %36 ], [ -1, %54 ], [ -1, %119 ], [ -1, %120 ], [ 0, %100 ], [ 0, %110 ], [ 0, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i32 %122
}

declare i32 @zip_source_seek(%struct.zip_source*, i64, i32) local_unnamed_addr #2

declare void @_zip_error_set_from_source(%struct.zip_error*, %struct.zip_source*) local_unnamed_addr #2

declare %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source*, i64, i8*, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare i8* @_zip_read_data(%struct.zip_buffer*, %struct.zip_source*, i64, i1 zeroext, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
