; ModuleID = '../../third_party/libzip/src/lib/zip_error.c'
source_filename = "../../third_party/libzip/src/lib/zip_error.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_error = type { i32, i32, i8* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

@_zip_nerr_str = external local_unnamed_addr constant i32, align 4
@_zip_err_type = external local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @zip_error_code_system(%struct.zip_error* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @zip_error_code_zip(%struct.zip_error* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @zip_error_fini(%struct.zip_error* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #8
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @zip_error_init(%struct.zip_error* nocapture) local_unnamed_addr #3 {
  %2 = bitcast %struct.zip_error* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @zip_error_init_with_code(%struct.zip_error* nocapture, i32) local_unnamed_addr #1 {
  %3 = bitcast %struct.zip_error* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #8
  %4 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = icmp sgt i32 %1, -1
  %6 = load i32, i32* @_zip_nerr_str, align 4
  %7 = icmp sgt i32 %6, %1
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds [0 x i32], [0 x i32]* @_zip_err_type, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = tail call i32* @__errno_location() #9
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %9, %2, %14
  %18 = phi i32 [ %16, %14 ], [ 0, %2 ], [ 0, %9 ]
  %19 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @zip_error_system_type(%struct.zip_error* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  %5 = load i32, i32* @_zip_nerr_str, align 4
  %6 = icmp slt i32 %3, %5
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* @_zip_err_type, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i32 [ %11, %8 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_zip_error_clear(%struct.zip_error*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.zip_error* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_zip_error_copy(%struct.zip_error*, %struct.zip_error* nocapture readonly) local_unnamed_addr #5 {
  %3 = icmp eq %struct.zip_error* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  br label %11

11:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_zip_error_get(%struct.zip_error* nocapture readonly, i32*, i32*) local_unnamed_addr #5 {
  %4 = icmp eq i32* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %1, align 4
  br label %8

8:                                                ; preds = %3, %5
  %9 = icmp eq i32* %2, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -1
  %14 = load i32, i32* @_zip_nerr_str, align 4
  %15 = icmp slt i32 %12, %14
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %10
  %18 = sext i32 %12 to i64
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* @_zip_err_type, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %17, %10, %22
  %26 = phi i32 [ %24, %22 ], [ 0, %10 ], [ 0, %17 ]
  store i32 %26, i32* %2, align 4
  br label %27

27:                                               ; preds = %25, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #3 {
  %4 = icmp eq %struct.zip_error* %0, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_error_set_from_source(%struct.zip_error*, %struct.zip_source*) local_unnamed_addr #1 {
  %3 = tail call %struct.zip_error* @zip_source_error(%struct.zip_source* %1) #8
  %4 = icmp eq %struct.zip_error* %0, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  store i32 %10, i32* %11, align 4
  br label %12

12:                                               ; preds = %2, %5
  ret void
}

declare %struct.zip_error* @zip_source_error(%struct.zip_source*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @zip_error_to_data(%struct.zip_error* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #5 {
  %4 = icmp ult i64 %2, 8
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %1 to i32*
  %7 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %struct.zip_error, %struct.zip_error* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds i8, i8* %1, i64 4
  %12 = bitcast i8* %11 to i32*
  store i32 %10, i32* %12, align 4
  br label %13

13:                                               ; preds = %3, %5
  %14 = phi i64 [ 8, %5 ], [ -1, %3 ]
  ret i64 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
