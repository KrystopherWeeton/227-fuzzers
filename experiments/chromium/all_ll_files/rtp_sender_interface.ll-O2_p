; ModuleID = '../../third_party/webrtc/api/rtp_sender_interface.cc'
source_filename = "../../third_party/webrtc/api/rtp_sender_interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::RtpSenderInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::FrameEncryptorInterface"* }
%"class.webrtc::FrameEncryptorInterface" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"*, %"class.std::__1::__compressed_pair.17" }
%"struct.webrtc::RtpEncodingParameters" = type <{ %"class.absl::optional", double, i32, %"class.absl::optional.0", %"class.absl::optional.0", [4 x i8], %"class.absl::optional.5", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.10", i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i32 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { double }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.webrtc::RtpEncodingParameters"* }
%"class.rtc::scoped_refptr.22" = type { %"class.webrtc::DtlsTransportInterface"* }
%"class.webrtc::DtlsTransportInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::scoped_refptr.23" = type { %"class.webrtc::FrameTransformerInterface"* }
%"class.webrtc::FrameTransformerInterface" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::vector.24" = type opaque

$_ZN3rtc17RefCountInterfaceD2Ev = comdat any

$_ZN6webrtc18RtpSenderInterfaceD0Ev = comdat any

$_ZN6webrtc18RtpSenderInterface10SetStreamsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE = comdat any

@_ZTVN6webrtc18RtpSenderInterfaceE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.rtc::RefCountInterface"*)* @_ZN3rtc17RefCountInterfaceD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtpSenderInterface"*)* @_ZN6webrtc18RtpSenderInterfaceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr.22"*, %"class.webrtc::RtpSenderInterface"*)* @_ZNK6webrtc18RtpSenderInterface14dtls_transportEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::RtpSenderInterface"*, %"class.std::__1::vector.24"*)* @_ZN6webrtc18RtpSenderInterface10SetStreamsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.webrtc::RtpSenderInterface"*)* @_ZNK6webrtc18RtpSenderInterface19init_send_encodingsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::RtpSenderInterface"*, %"class.rtc::scoped_refptr"*)* @_ZN6webrtc18RtpSenderInterface17SetFrameEncryptorEN3rtc13scoped_refptrINS_23FrameEncryptorInterfaceEEE to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr"*, %"class.webrtc::RtpSenderInterface"*)* @_ZNK6webrtc18RtpSenderInterface17GetFrameEncryptorEv to i8*), i8* bitcast (void (%"class.webrtc::RtpSenderInterface"*, %"class.rtc::scoped_refptr.23"*)* @_ZN6webrtc18RtpSenderInterface38SetEncoderToPacketizerFrameTransformerEN3rtc13scoped_refptrINS_25FrameTransformerInterfaceEEE to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc18RtpSenderInterface17SetFrameEncryptorEN3rtc13scoped_refptrINS_23FrameEncryptorInterfaceEEE(%"class.webrtc::RtpSenderInterface"* nocapture, %"class.rtc::scoped_refptr"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK6webrtc18RtpSenderInterface17GetFrameEncryptorEv(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"class.webrtc::RtpSenderInterface"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %0, i64 0, i32 0
  store %"class.webrtc::FrameEncryptorInterface"* null, %"class.webrtc::FrameEncryptorInterface"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc18RtpSenderInterface19init_send_encodingsEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.webrtc::RtpSenderInterface"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK6webrtc18RtpSenderInterface14dtls_transportEv(%"class.rtc::scoped_refptr.22"* noalias nocapture sret, %"class.webrtc::RtpSenderInterface"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr.22", %"class.rtc::scoped_refptr.22"* %0, i64 0, i32 0
  store %"class.webrtc::DtlsTransportInterface"* null, %"class.webrtc::DtlsTransportInterface"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc18RtpSenderInterface38SetEncoderToPacketizerFrameTransformerEN3rtc13scoped_refptrINS_25FrameTransformerInterfaceEEE(%"class.webrtc::RtpSenderInterface"* nocapture, %"class.rtc::scoped_refptr.23"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc17RefCountInterfaceD2Ev(%"class.rtc::RefCountInterface"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc18RtpSenderInterfaceD0Ev(%"class.webrtc::RtpSenderInterface"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc18RtpSenderInterface10SetStreamsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.webrtc::RtpSenderInterface"*, %"class.std::__1::vector.24"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
