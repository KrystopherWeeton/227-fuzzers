; ModuleID = '../../ui/accessibility/ax_table_info.cc'
source_filename = "../../ui/accessibility/ax_table_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair.26"*, %"struct.std::__1::pair.26"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.26" = type { i32, i32 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.26"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair.34"*, %"struct.std::__1::pair.34"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair.34"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair.42"*, %"struct.std::__1::pair.42"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair.42"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"*, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::pair.50" = type { i32, %"class.std::__1::vector.0" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::pair.50"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.std::__1::pair.58"*, %"struct.std::__1::pair.58"*, %"class.std::__1::__compressed_pair.59" }
%"struct.std::__1::pair.58" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::pair.58"* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.std::__1::pair.66"*, %"struct.std::__1::pair.66"*, %"class.std::__1::__compressed_pair.67" }
%"struct.std::__1::pair.66" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::pair.66"* }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.ui::AXTableInfo" = type { i64, i64, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.0", i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.0", %"class.std::__1::vector.10", %"class.std::__1::map.99", %"class.std::__1::map.99", %"class.std::__1::vector.10", i32, i32, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i8, %"class.std::__1::map.243" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::vector.0"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"*, %"class.std::__1::__compressed_pair.94" }
%"struct.ui::AXTableInfo::CellData" = type { %"class.ui::AXNode"*, i32, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.ui::AXTableInfo::CellData"* }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i64 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.ui::AXNode"** }
%"class.std::__1::map.243" = type { %"class.std::__1::__tree.244" }
%"class.std::__1::__tree.244" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.108", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string.145", %"struct.ui::AXTreeData", %"class.std::__1::map.155", %"class.std::__1::map.166", %"class.std::__1::map.177", %"class.std::__1::unordered_map.188", i32, [4 x i8], %"class.std::__1::unordered_map.212", i8, i8, %"class.std::__1::vector.236" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.114", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.122" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.117" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i8 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.142", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { float }
%"class.std::__1::basic_string.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.148 }
%union.anon.148 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.145", i8, [3 x i8], float, %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.154 }
%union.anon.154 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::map.177" = type { %"class.std::__1::__tree.178" }
%"class.std::__1::__tree.178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::unordered_map.188" = type { %"class.std::__1::__hash_table.189" }
%"class.std::__1::__hash_table.189" = type <{ %"class.std::__1::unique_ptr.190", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.208", [4 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::__hash_node_base.193"** }
%"struct.std::__1::__hash_node_base.193" = type { %"struct.std::__1::__hash_node_base.193"* }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::__bucket_list_deallocator.195" }
%"class.std::__1::__bucket_list_deallocator.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base.193" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::unordered_map.212" = type { %"class.std::__1::__hash_table.213" }
%"class.std::__1::__hash_table.213" = type <{ %"class.std::__1::unique_ptr.214", %"class.std::__1::__compressed_pair.224", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216", %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::__hash_node_base.217"** }
%"struct.std::__1::__hash_node_base.217" = type { %"struct.std::__1::__hash_node_base.217"* }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.std::__1::__bucket_list_deallocator.219" }
%"class.std::__1::__bucket_list_deallocator.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::__hash_node_base.217" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.238" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.ui::AXEventIntent"* }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.10", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.88" }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", %"struct.ui::AXRelativeBounds" }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::vector.10"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.288" }
%"struct.std::__1::pair.288" = type { i32, i64 }
%"class.std::__1::__tree_node.289" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.290" }
%"struct.std::__1::__value_type.290" = type { %"struct.std::__1::pair.261" }
%"struct.std::__1::pair.261" = type { i32, %"class.std::__1::map.262" }
%"class.std::__1::map.262" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.291" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.292" }
%"struct.std::__1::__value_type.292" = type { %"struct.std::__1::pair.271" }
%"struct.std::__1::pair.271" = type { i32, %"struct.ui::AXTableInfo::CellData" }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"*, %"class.std::__1::__compressed_pair.275" }
%"struct.ui::AXTreeObserver::Change" = type <{ %"class.ui::AXNode"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.ui::AXTreeObserver::Change"* }
%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.ui::AXTreeObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.149 }
%struct.anon.149 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.145", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNSt3__16vectorINS0_IPN2ui6AXNodeENS_9allocatorIS3_EEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZNSt3__16vectorIPN2ui6AXNodeENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_ = comdat any

@__const._ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm.data = private unnamed_addr constant { i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::vector.17" { %"class.std::__1::__vector_base.18" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.19" { %"struct.std::__1::__compressed_pair_elem.20" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } }, %"class.std::__1::vector.24" { %"class.std::__1::__vector_base.25" { %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*), %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*), %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*) } } } }, %"class.std::__1::vector.32" { %"class.std::__1::__vector_base.33" { %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*), %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*), %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*) } } } }, %"class.std::__1::vector.40" { %"class.std::__1::__vector_base.41" { %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*), %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*), %"class.std::__1::__compressed_pair.43" { %"struct.std::__1::__compressed_pair_elem.44" { %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*) } } } }, %"class.std::__1::vector.48" { %"class.std::__1::__vector_base.49" { %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*), %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*), %"class.std::__1::__compressed_pair.51" { %"struct.std::__1::__compressed_pair_elem.52" { %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*), %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*), %"class.std::__1::__compressed_pair.59" { %"struct.std::__1::__compressed_pair_elem.60" { %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*) } } } }, %"class.std::__1::vector.64" { %"class.std::__1::__vector_base.65" { %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*), %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*), %"class.std::__1::__compressed_pair.67" { %"struct.std::__1::__compressed_pair_elem.68" { %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*) } } } }, %"class.std::__1::vector.0" { %"class.std::__1::__vector_base.1" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.73" { %"class.gfx::Transform"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Transform"*) } } } } }, align 8
@.str = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN2ui11AXTableInfoC1EPNS_6AXTreeEPNS_6AXNodeE = hidden unnamed_addr alias void (%"class.ui::AXTableInfo"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*), void (%"class.ui::AXTableInfo"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui11AXTableInfoC2EPNS_6AXTreeEPNS_6AXNodeE
@_ZN2ui11AXTableInfoD1Ev = hidden unnamed_addr alias void (%"class.ui::AXTableInfo"*), void (%"class.ui::AXTableInfo"*)* @_ZN2ui11AXTableInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXTableInfo"* @_ZN2ui11AXTableInfo6CreateEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTree"*, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %4) #11
  br i1 %5, label %6, label %26

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 320) #12
  %8 = bitcast i8* %7 to %"class.ui::AXTableInfo"*
  %9 = getelementptr inbounds i8, i8* %7, i64 96
  %10 = getelementptr inbounds i8, i8* %7, i64 200
  %11 = getelementptr inbounds i8, i8* %7, i64 192
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 88, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #11
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 224
  %14 = getelementptr inbounds i8, i8* %7, i64 216
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 240
  %17 = getelementptr inbounds i8, i8* %7, i64 272
  %18 = bitcast i8* %17 to %"class.ui::AXTree"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  store %"class.ui::AXTree"* %0, %"class.ui::AXTree"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 280
  %20 = bitcast i8* %19 to %"class.ui::AXNode"**
  store %"class.ui::AXNode"* %1, %"class.ui::AXNode"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 288
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 304
  %23 = getelementptr inbounds i8, i8* %7, i64 296
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = tail call zeroext i1 @_ZN2ui11AXTableInfo6UpdateEv(%"class.ui::AXTableInfo"* nonnull %8)
  br label %26

26:                                               ; preds = %2, %6
  %27 = phi %"class.ui::AXTableInfo"* [ %8, %6 ], [ null, %2 ]
  ret %"class.ui::AXTableInfo"* %27
}

declare zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui11AXTableInfo6UpdateEv(%"class.ui::AXTableInfo"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.252", align 8
  %3 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  %4 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK2ui6AXNode7IsTableEv(%"class.ui::AXNode"* %4) #11
  br i1 %5, label %6, label %61

6:                                                ; preds = %1
  tail call void @_ZN2ui11AXTableInfo12ClearVectorsEv(%"class.ui::AXTableInfo"* %0)
  %7 = bitcast %"class.std::__1::vector.252"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %12 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12
  call fastcc void @_ZN2ui12_GLOBAL__N_120FindRowsAndThenCellsEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEEPNS4_IS7_NS5_IS7_EEEERi(%"class.ui::AXNode"* %11, %"class.std::__1::vector.10"* %12, %"class.std::__1::vector.252"* nonnull %2, i32* dereferenceable(4) %10)
  %13 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %13, i64 0, i32 7
  %15 = call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %14, i32 16) #11
  %16 = sext i32 %15 to i64
  %17 = icmp sgt i64 %16, 0
  %18 = select i1 %17, i64 %16, i64 0
  %19 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %21 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %20, i64 0, i32 7
  %22 = call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %21, i32 17) #11
  %23 = sext i32 %22 to i64
  %24 = icmp sgt i64 %23, 0
  %25 = select i1 %24, i64 %23, i64 0
  %26 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %28 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %27, i64 0, i32 7
  %29 = call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %28, i32 13) #11
  %30 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 13
  store i32 %29, i32* %30, align 8
  %31 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %32 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 7
  %33 = call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %32, i32 10) #11
  %34 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 14
  store i32 %33, i32* %34, align 4
  call void @_ZN2ui11AXTableInfo38BuildCellDataVectorFromRowAndCellNodesERKNSt3__16vectorIPNS_6AXNodeENS1_9allocatorIS4_EEEERKNS2_IS7_NS5_IS7_EEEE(%"class.ui::AXTableInfo"* %0, %"class.std::__1::vector.10"* dereferenceable(24) %12, %"class.std::__1::vector.252"* nonnull dereferenceable(24) %2)
  call void @_ZN2ui11AXTableInfo37BuildCellAndHeaderVectorsFromCellDataEv(%"class.ui::AXTableInfo"* %0)
  %35 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 17
  store i8 1, i8* %35, align 8
  %36 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %8, align 8
  %37 = icmp eq %"class.std::__1::vector.10"* %36, null
  br i1 %37, label %60, label %38

38:                                               ; preds = %6
  %39 = bitcast %"class.std::__1::vector.10"* %36 to i8*
  %40 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %9, align 8
  %41 = icmp eq %"class.std::__1::vector.10"* %40, %36
  br i1 %41, label %58, label %42

42:                                               ; preds = %38, %53
  %43 = phi %"class.std::__1::vector.10"* [ %44, %53 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %43, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %45, align 8
  %47 = icmp eq %"class.ui::AXNode"** %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = ptrtoint %"class.ui::AXNode"** %46 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %43, i64 -1, i32 0, i32 1
  %51 = bitcast %"class.ui::AXNode"*** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.ui::AXNode"** %46 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %48, %42
  %54 = icmp eq %"class.std::__1::vector.10"* %44, %36
  br i1 %54, label %55, label %42

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector.252"* %2 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %38
  %59 = phi i8* [ %57, %55 ], [ %39, %38 ]
  store %"class.std::__1::vector.10"* %36, %"class.std::__1::vector.10"** %9, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %6, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  br label %61

61:                                               ; preds = %1, %60
  %62 = phi i1 [ true, %60 ], [ false, %1 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2ui6AXNode7IsTableEv(%"class.ui::AXNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo12ClearVectorsEv(%"class.ui::AXTableInfo"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.0"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.0"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.0"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.0"* %3, %"class.std::__1::vector.0"** %4, align 8
  %21 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %21, align 8
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.0"* %24, %22
  br i1 %25, label %39, label %26

26:                                               ; preds = %20, %37
  %27 = phi %"class.std::__1::vector.0"* [ %28, %37 ], [ %24, %20 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %27, i64 -1
  %29 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %28, i64 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = ptrtoint i32* %30 to i64
  %34 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %27, i64 -1, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i32* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %32, %26
  %38 = icmp eq %"class.std::__1::vector.0"* %28, %22
  br i1 %38, label %39, label %26

39:                                               ; preds = %37, %20
  store %"class.std::__1::vector.0"* %22, %"class.std::__1::vector.0"** %23, align 8
  %40 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4
  %41 = bitcast %"class.std::__1::vector.0"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %45, align 8
  %47 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %48 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %47, align 8
  %49 = icmp eq %"class.std::__1::vector.0"* %48, %46
  br i1 %49, label %63, label %50

50:                                               ; preds = %39, %61
  %51 = phi %"class.std::__1::vector.0"* [ %52, %61 ], [ %48, %39 ]
  %52 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %51, i64 -1
  %53 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %52, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %51, i64 -1, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %50
  %62 = icmp eq %"class.std::__1::vector.0"* %52, %46
  br i1 %62, label %63, label %50

63:                                               ; preds = %61, %39
  store %"class.std::__1::vector.0"* %46, %"class.std::__1::vector.0"** %47, align 8
  %64 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8
  %65 = bitcast %"class.std::__1::vector.0"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7
  %70 = bitcast %"class.std::__1::vector.8"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %73 = bitcast %"struct.ui::AXTableInfo::CellData"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12
  %75 = bitcast %"class.std::__1::vector.10"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12, i32 0, i32 1
  %78 = bitcast %"class.ui::AXNode"*** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10
  %80 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %79, i64 0, i32 0
  %81 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %80, %"class.std::__1::__tree_node"* %83) #11
  %84 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %79, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %86, align 8
  %87 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11
  %88 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %87, i64 0, i32 0
  %89 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_node"**
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %90, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %88, %"class.std::__1::__tree_node"* %91) #11
  %92 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %87, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %94, align 8
  %95 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18
  %96 = getelementptr inbounds %"class.std::__1::map.243", %"class.std::__1::map.243"* %95, i64 0, i32 0
  %97 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_node.289"**
  %99 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %98, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"* %96, %"class.std::__1::__tree_node.289"* %99) #11
  %100 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::map.243", %"class.std::__1::map.243"* %95, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %97, %"class.std::__1::__tree_end_node"** %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %102, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_120FindRowsAndThenCellsEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEEPNS4_IS7_NS5_IS7_EEEERi(%"class.ui::AXNode"* nocapture readonly, %"class.std::__1::vector.10"*, %"class.std::__1::vector.252"*, i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.10", align 8
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %8, align 8
  %10 = icmp eq %"class.ui::AXNode"** %7, %9
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.ui::AXNode"*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.10"* %1 to i64*
  %16 = bitcast %"class.ui::AXNode"*** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::vector.10"* %5 to i8*
  %19 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::vector.10"* %5 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %5, i64 0, i32 0, i32 1
  %23 = bitcast %"class.ui::AXNode"*** %22 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.ui::AXNode"*** %24 to i64*
  %26 = bitcast %"class.std::__1::vector.10"** %19 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %5, i64 0, i32 0, i32 0
  br label %29

28:                                               ; preds = %133, %4
  ret void

29:                                               ; preds = %11, %133
  %30 = phi %"class.ui::AXNode"** [ %7, %11 ], [ %134, %133 ]
  %31 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %30, align 8
  %32 = ptrtoint %"class.ui::AXNode"* %31 to i64
  %33 = call zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"* %31) #11
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 7, i32 2
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %38 [
    i32 89, label %37
    i32 94, label %37
    i32 147, label %37
  ]

37:                                               ; preds = %34, %34, %34, %29
  call fastcc void @_ZN2ui12_GLOBAL__N_120FindRowsAndThenCellsEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEEPNS4_IS7_NS5_IS7_EEEERi(%"class.ui::AXNode"* %31, %"class.std::__1::vector.10"* %1, %"class.std::__1::vector.252"* %2, i32* dereferenceable(4) %3)
  br label %133

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %36) #11
  br i1 %39, label %40, label %127

40:                                               ; preds = %38
  %41 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %12, align 8
  %42 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %13, align 8
  %43 = icmp eq %"class.ui::AXNode"** %41, %42
  %44 = ptrtoint %"class.ui::AXNode"** %42 to i64
  br i1 %43, label %49, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.ui::AXNode"** %41 to i64*
  store i64 %32, i64* %46, align 8
  %47 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %41, i64 1
  %48 = ptrtoint %"class.ui::AXNode"** %47 to i64
  store i64 %48, i64* %14, align 8
  br label %102

49:                                               ; preds = %40
  %50 = ptrtoint %"class.ui::AXNode"** %41 to i64
  %51 = load i64, i64* %15, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 3
  %54 = add nsw i64 %53, 1
  %55 = icmp ugt i64 %54, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::vector.10"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #13
  unreachable

58:                                               ; preds = %49
  %59 = sub i64 %44, %51
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %60, 1152921504606846975
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = ashr exact i64 %59, 2
  %64 = icmp ult i64 %63, %54
  %65 = select i1 %64, i64 %54, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  call void @abort() #13
  unreachable

70:                                               ; preds = %67, %58
  %71 = phi i64 [ %65, %67 ], [ 2305843009213693951, %58 ]
  %72 = shl i64 %71, 3
  %73 = call i8* @_Znwm(i64 %72) #12
  %74 = bitcast i8* %73 to %"class.ui::AXNode"**
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"class.ui::AXNode"** [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %77, i64 %53
  %79 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %77, i64 %76
  %80 = ptrtoint %"class.ui::AXNode"** %79 to i64
  %81 = bitcast %"class.ui::AXNode"** %78 to i64*
  store i64 %32, i64* %81, align 8
  %82 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %78, i64 1
  %83 = ptrtoint %"class.ui::AXNode"** %82 to i64
  %84 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %17, align 8
  %85 = load i64, i64* %14, align 8
  %86 = ptrtoint %"class.ui::AXNode"** %84 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %78, i64 %89
  %91 = ptrtoint %"class.ui::AXNode"** %90 to i64
  %92 = icmp sgt i64 %87, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %75
  %94 = bitcast %"class.ui::AXNode"** %90 to i8*
  %95 = bitcast %"class.ui::AXNode"** %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 %87, i1 false) #11
  %96 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %17, align 8
  br label %97

97:                                               ; preds = %93, %75
  %98 = phi %"class.ui::AXNode"** [ %84, %75 ], [ %96, %93 ]
  store i64 %91, i64* %15, align 8
  store i64 %83, i64* %14, align 8
  store i64 %80, i64* %16, align 8
  %99 = icmp eq %"class.ui::AXNode"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.ui::AXNode"** %98 to i8*
  call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %45, %97, %100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #11
  %103 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %19, align 8
  %104 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %20, align 8
  %105 = icmp ult %"class.std::__1::vector.10"* %103, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = bitcast %"class.std::__1::vector.10"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #11
  %108 = load i64, i64* %21, align 8
  %109 = bitcast %"class.std::__1::vector.10"* %103 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load i64, i64* %23, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %103, i64 0, i32 0, i32 1
  %112 = bitcast %"class.ui::AXNode"*** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = load i64, i64* %25, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %103, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"class.ui::AXNode"*** %114 to i64*
  store i64 %113, i64* %115, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #11
  %116 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %103, i64 1
  %117 = ptrtoint %"class.std::__1::vector.10"* %116 to i64
  store i64 %117, i64* %26, align 8
  br label %124

118:                                              ; preds = %102
  call void @_ZNSt3__16vectorINS0_IPN2ui6AXNodeENS_9allocatorIS3_EEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.252"* %2, %"class.std::__1::vector.10"* nonnull dereferenceable(24) %5) #11
  %119 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %27, align 8
  %120 = icmp eq %"class.ui::AXNode"** %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.ui::AXNode"** %119 to i8*
  %123 = ptrtoint %"class.ui::AXNode"** %119 to i64
  store i64 %123, i64* %23, align 8
  call void @_ZdlPv(i8* %122) #12
  br label %124

124:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %125 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %19, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %125, i64 -1
  call fastcc void @_ZN2ui12_GLOBAL__N_114FindCellsInRowEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.ui::AXNode"* %31, %"class.std::__1::vector.10"* %126)
  br label %133

127:                                              ; preds = %38
  %128 = load i32, i32* %35, align 4
  %129 = icmp eq i32 %128, 12
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 7, i32 1
  %132 = load i32, i32* %131, align 8
  store i32 %132, i32* %3, align 4
  br label %133

133:                                              ; preds = %124, %130, %127, %37
  %134 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %30, i64 1
  %135 = icmp eq %"class.ui::AXNode"** %134, %9
  br i1 %135, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo38BuildCellDataVectorFromRowAndCellNodesERKNSt3__16vectorIPNS_6AXNodeENS1_9allocatorIS4_EEEERKNS2_IS7_NS5_IS7_EEEE(%"class.ui::AXTableInfo"*, %"class.std::__1::vector.10"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.252"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %2, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.10"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.252"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %54, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11
  %13 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %12, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::map.99"* %12 to i64*
  %19 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8
  %21 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8, i32 0, i32 1
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i32** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.0"* %20 to i64*
  %25 = bitcast i32** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %20, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10
  %28 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %30 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::map.99", %"class.std::__1::map.99"* %27, i64 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::map.99"* %27 to i64*
  %34 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18
  %36 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node.289"**
  %38 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 14
  %44 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %46 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.ui::AXTableInfo::CellData"** %45 to i64*
  %48 = bitcast %"class.std::__1::vector.8"* %44 to i64*
  %49 = bitcast %"struct.ui::AXTableInfo::CellData"** %46 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %44, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::map.243", %"class.std::__1::map.243"* %35, i64 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::map.243"* %35 to i64*
  br label %55

54:                                               ; preds = %200, %3
  ret void

55:                                               ; preds = %10, %200
  %56 = phi i64 [ %8, %10 ], [ %208, %200 ]
  %57 = phi i64 [ 0, %10 ], [ %202, %200 ]
  %58 = phi i64 [ 0, %10 ], [ %206, %200 ]
  %59 = phi i64 [ 1, %10 ], [ %203, %200 ]
  %60 = phi i64 [ 0, %10 ], [ %205, %200 ]
  %61 = inttoptr i64 %56 to %"class.std::__1::vector.10"*
  %62 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %11, align 8
  %63 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %62, i64 %58
  %64 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %63, align 8
  %65 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %64, i64 0, i32 7
  %66 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %65, i32 19) #11
  %67 = sext i32 %66 to i64
  %68 = icmp sgt i64 %67, 0
  %69 = select i1 %68, i64 %67, i64 0
  %70 = icmp ult i64 %60, %69
  %71 = select i1 %70, i64 %69, i64 %60
  %72 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %64, i64 0, i32 7, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %75, label %102, label %76

76:                                               ; preds = %55, %98
  %77 = phi %"class.std::__1::__tree_node"* [ %101, %98 ], [ %74, %55 ]
  %78 = phi %"class.std::__1::__tree_node_base"** [ %100, %98 ], [ %15, %55 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 1, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %73, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %98

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0
  br label %102

88:                                               ; preds = %76
  %89 = icmp slt i32 %80, %73
  br i1 %89, label %90, label %96

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 1
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0
  br label %102

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0
  br label %102

98:                                               ; preds = %90, %82
  %99 = phi %"class.std::__1::__tree_node_base"* [ %84, %82 ], [ %92, %90 ]
  %100 = phi %"class.std::__1::__tree_node_base"** [ %83, %82 ], [ %91, %90 ]
  %101 = bitcast %"class.std::__1::__tree_node_base"* %99 to %"class.std::__1::__tree_node"*
  br label %76

102:                                              ; preds = %55, %96, %94, %86
  %103 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %95, %94 ], [ %97, %96 ], [ %13, %55 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %83, %86 ], [ %91, %94 ], [ %78, %96 ], [ %16, %55 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node"* %106, null
  br i1 %107, label %108, label %131

108:                                              ; preds = %102
  %109 = tail call i8* @_Znwm(i64 48) #12, !noalias !2
  %110 = getelementptr inbounds i8, i8* %109, i64 32
  %111 = bitcast i8* %110 to i32*
  store i32 %73, i32* %111, align 8, !noalias !2
  %112 = getelementptr inbounds i8, i8* %109, i64 40
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8, !noalias !2
  %114 = bitcast i8* %109 to %"class.std::__1::__tree_node"*
  %115 = bitcast i8* %109 to %"class.std::__1::__tree_node_base"*
  %116 = getelementptr inbounds i8, i8* %109, i64 16
  %117 = bitcast i8* %116 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %103, %"class.std::__1::__tree_end_node"** %117, align 8
  %118 = bitcast %"class.std::__1::__tree_node_base"** %104 to i8**
  store i8* %109, i8** %118, align 8
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %108
  %124 = ptrtoint %"class.std::__1::__tree_node_base"* %121 to i64
  store i64 %124, i64* %18, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  br label %126

126:                                              ; preds = %123, %108
  %127 = phi %"class.std::__1::__tree_node_base"* [ %115, %108 ], [ %125, %123 ]
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %127) #11
  %129 = load i64, i64* %19, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %19, align 8
  br label %131

131:                                              ; preds = %102, %126
  %132 = phi %"class.std::__1::__tree_node"* [ %114, %126 ], [ %106, %102 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %132, i64 0, i32 1, i32 0, i32 1
  store i64 %71, i64* %133, align 8
  %134 = load i32, i32* %72, align 8
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %163, label %137

137:                                              ; preds = %131, %159
  %138 = phi %"class.std::__1::__tree_node"* [ %162, %159 ], [ %135, %131 ]
  %139 = phi %"class.std::__1::__tree_node_base"** [ %161, %159 ], [ %15, %131 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp slt i32 %134, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %159

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

149:                                              ; preds = %137
  %150 = icmp slt i32 %141, %134
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

159:                                              ; preds = %151, %143
  %160 = phi %"class.std::__1::__tree_node_base"* [ %145, %143 ], [ %153, %151 ]
  %161 = phi %"class.std::__1::__tree_node_base"** [ %144, %143 ], [ %152, %151 ]
  %162 = bitcast %"class.std::__1::__tree_node_base"* %160 to %"class.std::__1::__tree_node"*
  br label %137

163:                                              ; preds = %131, %157, %155, %147
  %164 = phi %"class.std::__1::__tree_end_node"* [ %148, %147 ], [ %156, %155 ], [ %158, %157 ], [ %13, %131 ]
  %165 = phi %"class.std::__1::__tree_node_base"** [ %144, %147 ], [ %152, %155 ], [ %139, %157 ], [ %16, %131 ]
  %166 = bitcast %"class.std::__1::__tree_node_base"** %165 to %"class.std::__1::__tree_node"**
  %167 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node"* %167, null
  br i1 %168, label %169, label %192

169:                                              ; preds = %163
  %170 = tail call i8* @_Znwm(i64 48) #12, !noalias !5
  %171 = getelementptr inbounds i8, i8* %170, i64 32
  %172 = bitcast i8* %171 to i32*
  store i32 %134, i32* %172, align 8, !noalias !5
  %173 = getelementptr inbounds i8, i8* %170, i64 40
  %174 = bitcast i8* %173 to i64*
  store i64 0, i64* %174, align 8, !noalias !5
  %175 = bitcast i8* %170 to %"class.std::__1::__tree_node"*
  %176 = bitcast i8* %170 to %"class.std::__1::__tree_node_base"*
  %177 = getelementptr inbounds i8, i8* %170, i64 16
  %178 = bitcast i8* %177 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %164, %"class.std::__1::__tree_end_node"** %178, align 8
  %179 = bitcast %"class.std::__1::__tree_node_base"** %165 to i8**
  store i8* %170, i8** %179, align 8
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %169
  %185 = ptrtoint %"class.std::__1::__tree_node_base"* %182 to i64
  store i64 %185, i64* %18, align 8
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  br label %187

187:                                              ; preds = %184, %169
  %188 = phi %"class.std::__1::__tree_node_base"* [ %176, %169 ], [ %186, %184 ]
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"* %188) #11
  %190 = load i64, i64* %19, align 8
  %191 = add i64 %190, 1
  store i64 %191, i64* %19, align 8
  br label %192

192:                                              ; preds = %163, %187
  %193 = phi %"class.std::__1::__tree_node"* [ %175, %187 ], [ %167, %163 ]
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %193, i64 0, i32 1, i32 0, i32 1
  %195 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 %58, i32 0, i32 0
  %196 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 %58, i32 0, i32 1
  %198 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %197, align 8
  %199 = icmp eq %"class.ui::AXNode"** %196, %198
  br i1 %199, label %200, label %212

200:                                              ; preds = %728, %192
  %201 = phi i64 [ %59, %192 ], [ %400, %728 ]
  %202 = phi i64 [ %57, %192 ], [ %282, %728 ]
  %203 = add i64 %201, 1
  %204 = load i64, i64* %194, align 8
  %205 = add i64 %204, 1
  %206 = add nuw i64 %58, 1
  %207 = load i64, i64* %5, align 8
  %208 = load i64, i64* %7, align 8
  %209 = sub i64 %207, %208
  %210 = sdiv exact i64 %209, 24
  %211 = icmp ult i64 %206, %210
  br i1 %211, label %55, label %54

212:                                              ; preds = %192, %728
  %213 = phi i64 [ %282, %728 ], [ %57, %192 ]
  %214 = phi i8 [ %403, %728 ], [ 1, %192 ]
  %215 = phi i64 [ %400, %728 ], [ %59, %192 ]
  %216 = phi i64 [ %644, %728 ], [ 1, %192 ]
  %217 = phi i64 [ %471, %728 ], [ 0, %192 ]
  %218 = phi %"class.ui::AXNode"** [ %729, %728 ], [ %196, %192 ]
  %219 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %218, align 8
  %220 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %219, i64 0, i32 7, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = load i32*, i32** %21, align 8
  %223 = load i32*, i32** %22, align 8
  %224 = icmp ult i32* %222, %223
  %225 = ptrtoint i32* %223 to i64
  br i1 %224, label %226, label %229

226:                                              ; preds = %212
  store i32 %221, i32* %222, align 4
  %227 = getelementptr inbounds i32, i32* %222, i64 1
  %228 = ptrtoint i32* %227 to i64
  store i64 %228, i64* %23, align 8
  br label %281

229:                                              ; preds = %212
  %230 = ptrtoint i32* %222 to i64
  %231 = load i64, i64* %24, align 8
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 2
  %234 = add nsw i64 %233, 1
  %235 = icmp ugt i64 %234, 4611686018427387903
  br i1 %235, label %236, label %238

236:                                              ; preds = %229
  %237 = bitcast %"class.std::__1::vector.0"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %237) #13
  unreachable

238:                                              ; preds = %229
  %239 = sub i64 %225, %231
  %240 = ashr exact i64 %239, 2
  %241 = icmp ult i64 %240, 2305843009213693951
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = ashr exact i64 %239, 1
  %244 = icmp ult i64 %243, %234
  %245 = select i1 %244, i64 %234, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 4611686018427387903
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  tail call void @abort() #13
  unreachable

250:                                              ; preds = %247, %238
  %251 = phi i64 [ %245, %247 ], [ 4611686018427387903, %238 ]
  %252 = shl i64 %251, 2
  %253 = tail call i8* @_Znwm(i64 %252) #12
  %254 = bitcast i8* %253 to i32*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi i32* [ %254, %250 ], [ null, %242 ]
  %258 = getelementptr inbounds i32, i32* %257, i64 %233
  %259 = getelementptr inbounds i32, i32* %257, i64 %256
  %260 = ptrtoint i32* %259 to i64
  store i32 %221, i32* %258, align 4
  %261 = getelementptr inbounds i32, i32* %258, i64 1
  %262 = ptrtoint i32* %261 to i64
  %263 = load i32*, i32** %26, align 8
  %264 = load i64, i64* %23, align 8
  %265 = ptrtoint i32* %263 to i64
  %266 = sub i64 %264, %265
  %267 = ashr exact i64 %266, 2
  %268 = sub nsw i64 0, %267
  %269 = getelementptr inbounds i32, i32* %258, i64 %268
  %270 = ptrtoint i32* %269 to i64
  %271 = icmp sgt i64 %266, 0
  br i1 %271, label %272, label %276

272:                                              ; preds = %255
  %273 = bitcast i32* %269 to i8*
  %274 = bitcast i32* %263 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %273, i8* align 4 %274, i64 %266, i1 false) #11
  %275 = load i32*, i32** %26, align 8
  br label %276

276:                                              ; preds = %272, %255
  %277 = phi i32* [ %263, %255 ], [ %275, %272 ]
  store i64 %270, i64* %24, align 8
  store i64 %262, i64* %23, align 8
  store i64 %260, i64* %25, align 8
  %278 = icmp eq i32* %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = bitcast i32* %277 to i8*
  tail call void @_ZdlPv(i8* %280) #12
  br label %281

281:                                              ; preds = %226, %276, %279
  %282 = add i64 %213, 1
  %283 = load i32, i32* %220, align 8
  %284 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %285 = icmp eq %"class.std::__1::__tree_node"* %284, null
  br i1 %285, label %312, label %286

286:                                              ; preds = %281, %308
  %287 = phi %"class.std::__1::__tree_node"* [ %311, %308 ], [ %284, %281 ]
  %288 = phi %"class.std::__1::__tree_node_base"** [ %310, %308 ], [ %30, %281 ]
  %289 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 1, i32 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = icmp slt i32 %283, %290
  br i1 %291, label %292, label %298

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 0, i32 0, i32 0
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  %295 = icmp eq %"class.std::__1::__tree_node_base"* %294, null
  br i1 %295, label %296, label %308

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 0, i32 0
  br label %312

298:                                              ; preds = %286
  %299 = icmp slt i32 %290, %283
  br i1 %299, label %300, label %306

300:                                              ; preds = %298
  %301 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 0, i32 1
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, null
  br i1 %303, label %304, label %308

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 0, i32 0
  br label %312

306:                                              ; preds = %298
  %307 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %287, i64 0, i32 0, i32 0
  br label %312

308:                                              ; preds = %300, %292
  %309 = phi %"class.std::__1::__tree_node_base"* [ %294, %292 ], [ %302, %300 ]
  %310 = phi %"class.std::__1::__tree_node_base"** [ %293, %292 ], [ %301, %300 ]
  %311 = bitcast %"class.std::__1::__tree_node_base"* %309 to %"class.std::__1::__tree_node"*
  br label %286

312:                                              ; preds = %281, %306, %304, %296
  %313 = phi %"class.std::__1::__tree_end_node"* [ %297, %296 ], [ %305, %304 ], [ %307, %306 ], [ %28, %281 ]
  %314 = phi %"class.std::__1::__tree_node_base"** [ %293, %296 ], [ %301, %304 ], [ %288, %306 ], [ %31, %281 ]
  %315 = bitcast %"class.std::__1::__tree_node_base"** %314 to %"class.std::__1::__tree_node"**
  %316 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node"* %316, null
  br i1 %317, label %318, label %341

318:                                              ; preds = %312
  %319 = tail call i8* @_Znwm(i64 48) #12, !noalias !8
  %320 = getelementptr inbounds i8, i8* %319, i64 32
  %321 = bitcast i8* %320 to i32*
  store i32 %283, i32* %321, align 8, !noalias !8
  %322 = getelementptr inbounds i8, i8* %319, i64 40
  %323 = bitcast i8* %322 to i64*
  store i64 0, i64* %323, align 8, !noalias !8
  %324 = bitcast i8* %319 to %"class.std::__1::__tree_node"*
  %325 = bitcast i8* %319 to %"class.std::__1::__tree_node_base"*
  %326 = getelementptr inbounds i8, i8* %319, i64 16
  %327 = bitcast i8* %326 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %319, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %313, %"class.std::__1::__tree_end_node"** %327, align 8
  %328 = bitcast %"class.std::__1::__tree_node_base"** %314 to i8**
  store i8* %319, i8** %328, align 8
  %329 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %330 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %329, i64 0, i32 0
  %331 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %330, align 8
  %332 = icmp eq %"class.std::__1::__tree_node_base"* %331, null
  br i1 %332, label %336, label %333

333:                                              ; preds = %318
  %334 = ptrtoint %"class.std::__1::__tree_node_base"* %331 to i64
  store i64 %334, i64* %33, align 8
  %335 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  br label %336

336:                                              ; preds = %333, %318
  %337 = phi %"class.std::__1::__tree_node_base"* [ %325, %318 ], [ %335, %333 ]
  %338 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %338, %"class.std::__1::__tree_node_base"* %337) #11
  %339 = load i64, i64* %34, align 8
  %340 = add i64 %339, 1
  store i64 %340, i64* %34, align 8
  br label %341

341:                                              ; preds = %312, %336
  %342 = phi %"class.std::__1::__tree_node"* [ %324, %336 ], [ %316, %312 ]
  %343 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %342, i64 0, i32 1, i32 0, i32 1
  store i64 %213, i64* %343, align 8
  %344 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %219, i64 0, i32 7
  %345 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 25) #11
  %346 = sext i32 %345 to i64
  %347 = icmp sgt i64 %346, 0
  %348 = select i1 %347, i64 %346, i64 0
  %349 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 26) #11
  %350 = sext i32 %349 to i64
  %351 = icmp sgt i64 %350, 0
  %352 = select i1 %351, i64 %350, i64 0
  %353 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 14) #11
  %354 = sext i32 %353 to i64
  %355 = icmp slt i32 %353, 1
  %356 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 23) #11
  %357 = sext i32 %356 to i64
  %358 = icmp sgt i64 %357, 0
  %359 = select i1 %358, i64 %357, i64 0
  %360 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 11) #11
  %361 = sext i32 %360 to i64
  %362 = icmp sgt i64 %361, 0
  %363 = select i1 %362, i64 %361, i64 0
  %364 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %344, i32 24) #11
  %365 = sext i32 %364 to i64
  %366 = icmp sgt i64 %365, 0
  %367 = select i1 %366, i64 %365, i64 0
  %368 = icmp ugt i64 %352, 1
  %369 = select i1 %368, i64 %352, i64 1
  %370 = icmp ugt i64 %367, 1
  %371 = select i1 %370, i64 %367, i64 1
  %372 = icmp ult i64 %359, %217
  %373 = select i1 %372, i64 %217, i64 %359
  %374 = and i8 %214, 1
  %375 = icmp eq i8 %374, 0
  %376 = load i64, i64* %194, align 8
  br i1 %375, label %399, label %377

377:                                              ; preds = %341
  %378 = icmp ugt i64 %348, %376
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  store i64 %348, i64* %194, align 8
  br label %380

380:                                              ; preds = %377, %379
  %381 = phi i64 [ %346, %379 ], [ %376, %377 ]
  br i1 %355, label %382, label %387

382:                                              ; preds = %380
  %383 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %65, i32 14) #11
  %384 = sext i32 %383 to i64
  %385 = icmp sgt i64 %384, 0
  %386 = select i1 %385, i64 %384, i64 0
  br label %387

387:                                              ; preds = %380, %382
  %388 = phi i64 [ %386, %382 ], [ %354, %380 ]
  %389 = icmp slt i32 %360, 1
  br i1 %389, label %390, label %395

390:                                              ; preds = %387
  %391 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %65, i32 11) #11
  %392 = sext i32 %391 to i64
  %393 = icmp sgt i64 %392, 0
  %394 = select i1 %393, i64 %392, i64 0
  br label %395

395:                                              ; preds = %387, %390
  %396 = phi i64 [ %394, %390 ], [ %361, %387 ]
  %397 = icmp ult i64 %388, %215
  %398 = select i1 %397, i64 %215, i64 %388
  br label %399

399:                                              ; preds = %341, %395
  %400 = phi i64 [ %398, %395 ], [ %215, %341 ]
  %401 = phi i64 [ %396, %395 ], [ %363, %341 ]
  %402 = phi i64 [ %381, %395 ], [ %376, %341 ]
  %403 = phi i8 [ 0, %395 ], [ %214, %341 ]
  %404 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %37, align 8
  %405 = icmp eq %"class.std::__1::__tree_node.289"* %404, null
  br i1 %405, label %467, label %406

406:                                              ; preds = %399
  %407 = load i64, i64* %194, align 8
  %408 = trunc i64 %407 to i32
  br label %409

409:                                              ; preds = %459, %406
  %410 = phi i64 [ %466, %459 ], [ %373, %406 ]
  br label %411

411:                                              ; preds = %409, %411
  %412 = phi %"class.std::__1::__tree_end_node"* [ %422, %411 ], [ %36, %409 ]
  %413 = phi %"class.std::__1::__tree_node.289"* [ %423, %411 ], [ %404, %409 ]
  %414 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %413, i64 0, i32 1, i32 0, i32 0
  %415 = load i32, i32* %414, align 4
  %416 = icmp slt i32 %415, %408
  %417 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %413, i64 0, i32 0, i32 1
  %418 = bitcast %"class.std::__1::__tree_node_base"** %417 to %"class.std::__1::__tree_node.289"**
  %419 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %413, i64 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::__tree_node.289"* %413 to %"class.std::__1::__tree_node.289"**
  %421 = select i1 %416, %"class.std::__1::__tree_node.289"** %418, %"class.std::__1::__tree_node.289"** %420
  %422 = select i1 %416, %"class.std::__1::__tree_end_node"* %412, %"class.std::__1::__tree_end_node"* %419
  %423 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %421, align 8
  %424 = icmp eq %"class.std::__1::__tree_node.289"* %423, null
  br i1 %424, label %425, label %411

425:                                              ; preds = %411
  %426 = icmp eq %"class.std::__1::__tree_end_node"* %422, %36
  br i1 %426, label %467, label %427

427:                                              ; preds = %425
  %428 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %422, i64 4
  %429 = bitcast %"class.std::__1::__tree_end_node"* %428 to i32*
  %430 = load i32, i32* %429, align 4
  %431 = icmp sgt i32 %430, %408
  br i1 %431, label %467, label %432

432:                                              ; preds = %427
  %433 = trunc i64 %410 to i32
  %434 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %422, i64 6
  %435 = bitcast %"class.std::__1::__tree_end_node"* %434 to %"class.std::__1::__tree_node.291"**
  %436 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %435, align 8
  %437 = icmp eq %"class.std::__1::__tree_node.291"* %436, null
  br i1 %437, label %467, label %438

438:                                              ; preds = %432, %438
  %439 = phi %"class.std::__1::__tree_end_node"* [ %449, %438 ], [ %434, %432 ]
  %440 = phi %"class.std::__1::__tree_node.291"* [ %450, %438 ], [ %436, %432 ]
  %441 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %440, i64 0, i32 1, i32 0, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = icmp slt i32 %442, %433
  %444 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %440, i64 0, i32 0, i32 1
  %445 = bitcast %"class.std::__1::__tree_node_base"** %444 to %"class.std::__1::__tree_node.291"**
  %446 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %440, i64 0, i32 0, i32 0
  %447 = bitcast %"class.std::__1::__tree_node.291"* %440 to %"class.std::__1::__tree_node.291"**
  %448 = select i1 %443, %"class.std::__1::__tree_node.291"** %445, %"class.std::__1::__tree_node.291"** %447
  %449 = select i1 %443, %"class.std::__1::__tree_end_node"* %439, %"class.std::__1::__tree_end_node"* %446
  %450 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %448, align 8
  %451 = icmp eq %"class.std::__1::__tree_node.291"* %450, null
  br i1 %451, label %452, label %438

452:                                              ; preds = %438
  %453 = icmp eq %"class.std::__1::__tree_end_node"* %449, %434
  br i1 %453, label %467, label %454

454:                                              ; preds = %452
  %455 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %449, i64 4
  %456 = bitcast %"class.std::__1::__tree_end_node"* %455 to i32*
  %457 = load i32, i32* %456, align 4
  %458 = icmp sgt i32 %457, %433
  br i1 %458, label %467, label %459

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %449, i64 7
  %461 = bitcast %"class.std::__1::__tree_end_node"* %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %449, i64 9
  %464 = bitcast %"class.std::__1::__tree_end_node"* %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = add i64 %465, %462
  br label %409

467:                                              ; preds = %425, %427, %432, %452, %454, %399
  %468 = phi i64 [ %373, %399 ], [ %410, %454 ], [ %410, %452 ], [ %410, %432 ], [ %410, %427 ], [ %410, %425 ]
  %469 = add i64 %402, %369
  %470 = icmp ult i64 %402, %469
  %471 = add i64 %468, %371
  br i1 %470, label %472, label %478

472:                                              ; preds = %467
  %473 = icmp ult i64 %468, %471
  br label %474

474:                                              ; preds = %472, %489
  %475 = phi i64 [ %402, %472 ], [ %490, %489 ]
  br i1 %473, label %476, label %489

476:                                              ; preds = %474
  %477 = trunc i64 %475 to i32
  br label %492

478:                                              ; preds = %489, %467
  %479 = icmp ult i64 %401, %216
  %480 = select i1 %479, i64 %216, i64 %401
  %481 = load i64, i64* %40, align 8
  %482 = icmp ult i64 %481, %469
  %483 = select i1 %482, i64 %469, i64 %481
  store i64 %483, i64* %40, align 8
  %484 = load i64, i64* %41, align 8
  %485 = icmp ult i64 %484, %471
  %486 = select i1 %485, i64 %471, i64 %484
  store i64 %486, i64* %41, align 8
  %487 = load i32, i32* %42, align 8
  %488 = icmp eq i32 %487, -1
  br i1 %488, label %641, label %635

489:                                              ; preds = %622, %474
  %490 = add nuw i64 %475, 1
  %491 = icmp ult i64 %490, %469
  br i1 %491, label %474, label %478

492:                                              ; preds = %476, %622
  %493 = phi i64 [ %468, %476 ], [ %633, %622 ]
  %494 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %37, align 8
  %495 = icmp eq %"class.std::__1::__tree_node.289"* %494, null
  br i1 %495, label %522, label %496

496:                                              ; preds = %492, %518
  %497 = phi %"class.std::__1::__tree_node.289"* [ %521, %518 ], [ %494, %492 ]
  %498 = phi %"class.std::__1::__tree_node_base"** [ %520, %518 ], [ %38, %492 ]
  %499 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 1, i32 0, i32 0
  %500 = load i32, i32* %499, align 4
  %501 = icmp sgt i32 %500, %477
  br i1 %501, label %502, label %508

502:                                              ; preds = %496
  %503 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 0, i32 0, i32 0
  %504 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %503, align 8
  %505 = icmp eq %"class.std::__1::__tree_node_base"* %504, null
  br i1 %505, label %506, label %518

506:                                              ; preds = %502
  %507 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 0, i32 0
  br label %522

508:                                              ; preds = %496
  %509 = icmp slt i32 %500, %477
  br i1 %509, label %510, label %516

510:                                              ; preds = %508
  %511 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 0, i32 1
  %512 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %511, align 8
  %513 = icmp eq %"class.std::__1::__tree_node_base"* %512, null
  br i1 %513, label %514, label %518

514:                                              ; preds = %510
  %515 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 0, i32 0
  br label %522

516:                                              ; preds = %508
  %517 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %497, i64 0, i32 0, i32 0
  br label %522

518:                                              ; preds = %510, %502
  %519 = phi %"class.std::__1::__tree_node_base"* [ %504, %502 ], [ %512, %510 ]
  %520 = phi %"class.std::__1::__tree_node_base"** [ %503, %502 ], [ %511, %510 ]
  %521 = bitcast %"class.std::__1::__tree_node_base"* %519 to %"class.std::__1::__tree_node.289"*
  br label %496

522:                                              ; preds = %492, %516, %514, %506
  %523 = phi %"class.std::__1::__tree_end_node"* [ %507, %506 ], [ %515, %514 ], [ %517, %516 ], [ %36, %492 ]
  %524 = phi %"class.std::__1::__tree_node_base"** [ %503, %506 ], [ %511, %514 ], [ %498, %516 ], [ %51, %492 ]
  %525 = bitcast %"class.std::__1::__tree_node_base"** %524 to %"class.std::__1::__tree_node.289"**
  %526 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %525, align 8
  %527 = icmp eq %"class.std::__1::__tree_node.289"* %526, null
  br i1 %527, label %528, label %552

528:                                              ; preds = %522
  %529 = tail call i8* @_Znwm(i64 64) #12, !noalias !11
  %530 = getelementptr inbounds i8, i8* %529, i64 32
  %531 = bitcast i8* %530 to i32*
  store i32 %477, i32* %531, align 8, !noalias !11
  %532 = getelementptr inbounds i8, i8* %529, i64 48
  %533 = getelementptr inbounds i8, i8* %529, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %532, i8 0, i64 16, i1 false) #11, !noalias !11
  %534 = bitcast i8* %533 to i8**
  store i8* %532, i8** %534, align 8, !noalias !11
  %535 = bitcast i8* %529 to %"class.std::__1::__tree_node.289"*
  %536 = bitcast i8* %529 to %"class.std::__1::__tree_node_base"*
  %537 = getelementptr inbounds i8, i8* %529, i64 16
  %538 = bitcast i8* %537 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %529, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %523, %"class.std::__1::__tree_end_node"** %538, align 8
  %539 = bitcast %"class.std::__1::__tree_node_base"** %524 to i8**
  store i8* %529, i8** %539, align 8
  %540 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %541 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %540, i64 0, i32 0
  %542 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %541, align 8
  %543 = icmp eq %"class.std::__1::__tree_node_base"* %542, null
  br i1 %543, label %547, label %544

544:                                              ; preds = %528
  %545 = ptrtoint %"class.std::__1::__tree_node_base"* %542 to i64
  store i64 %545, i64* %53, align 8
  %546 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %524, align 8
  br label %547

547:                                              ; preds = %544, %528
  %548 = phi %"class.std::__1::__tree_node_base"* [ %536, %528 ], [ %546, %544 ]
  %549 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %549, %"class.std::__1::__tree_node_base"* %548) #11
  %550 = load i64, i64* %39, align 8
  %551 = add i64 %550, 1
  store i64 %551, i64* %39, align 8
  br label %552

552:                                              ; preds = %522, %547
  %553 = phi %"class.std::__1::__tree_node.289"* [ %535, %547 ], [ %526, %522 ]
  %554 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %553, i64 0, i32 1, i32 0, i32 1
  %555 = trunc i64 %493 to i32
  %556 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %553, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %557 = bitcast %"class.std::__1::__tree_end_node"* %556 to %"class.std::__1::__tree_node.291"**
  %558 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %557, align 8
  %559 = icmp eq %"class.std::__1::__tree_node.291"* %558, null
  br i1 %559, label %588, label %560

560:                                              ; preds = %552
  %561 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %553, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %562

562:                                              ; preds = %584, %560
  %563 = phi %"class.std::__1::__tree_node.291"* [ %587, %584 ], [ %558, %560 ]
  %564 = phi %"class.std::__1::__tree_node_base"** [ %586, %584 ], [ %561, %560 ]
  %565 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 1, i32 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = icmp sgt i32 %566, %555
  br i1 %567, label %568, label %574

568:                                              ; preds = %562
  %569 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 0, i32 0, i32 0
  %570 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %569, align 8
  %571 = icmp eq %"class.std::__1::__tree_node_base"* %570, null
  br i1 %571, label %572, label %584

572:                                              ; preds = %568
  %573 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 0, i32 0
  br label %590

574:                                              ; preds = %562
  %575 = icmp slt i32 %566, %555
  br i1 %575, label %576, label %582

576:                                              ; preds = %574
  %577 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 0, i32 1
  %578 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %577, align 8
  %579 = icmp eq %"class.std::__1::__tree_node_base"* %578, null
  br i1 %579, label %580, label %584

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 0, i32 0
  br label %590

582:                                              ; preds = %574
  %583 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %563, i64 0, i32 0, i32 0
  br label %590

584:                                              ; preds = %576, %568
  %585 = phi %"class.std::__1::__tree_node_base"* [ %570, %568 ], [ %578, %576 ]
  %586 = phi %"class.std::__1::__tree_node_base"** [ %569, %568 ], [ %577, %576 ]
  %587 = bitcast %"class.std::__1::__tree_node_base"* %585 to %"class.std::__1::__tree_node.291"*
  br label %562

588:                                              ; preds = %552
  %589 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %556, i64 0, i32 0
  br label %590

590:                                              ; preds = %588, %582, %580, %572
  %591 = phi %"class.std::__1::__tree_end_node"* [ %556, %588 ], [ %573, %572 ], [ %581, %580 ], [ %583, %582 ]
  %592 = phi %"class.std::__1::__tree_node_base"** [ %589, %588 ], [ %569, %572 ], [ %577, %580 ], [ %564, %582 ]
  %593 = bitcast %"class.std::__1::__tree_node_base"** %592 to %"class.std::__1::__tree_node.291"**
  %594 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %593, align 8
  %595 = icmp eq %"class.std::__1::__tree_node.291"* %594, null
  br i1 %595, label %596, label %622

596:                                              ; preds = %590
  %597 = tail call i8* @_Znwm(i64 104) #12, !noalias !14
  %598 = getelementptr inbounds i8, i8* %597, i64 32
  %599 = bitcast i8* %598 to i32*
  store i32 %555, i32* %599, align 8, !noalias !14
  %600 = getelementptr inbounds i8, i8* %597, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %600, i8 0, i64 64, i1 false) #11, !noalias !14
  %601 = bitcast i8* %597 to %"class.std::__1::__tree_node.291"*
  %602 = bitcast i8* %597 to %"class.std::__1::__tree_node_base"*
  %603 = getelementptr inbounds i8, i8* %597, i64 16
  %604 = bitcast i8* %603 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %597, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %591, %"class.std::__1::__tree_end_node"** %604, align 8
  %605 = bitcast %"class.std::__1::__tree_node_base"** %592 to i8**
  store i8* %597, i8** %605, align 8
  %606 = getelementptr inbounds %"class.std::__1::map.262", %"class.std::__1::map.262"* %554, i64 0, i32 0, i32 0
  %607 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %606, align 8
  %608 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %607, i64 0, i32 0
  %609 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %608, align 8
  %610 = icmp eq %"class.std::__1::__tree_node_base"* %609, null
  br i1 %610, label %615, label %611

611:                                              ; preds = %596
  %612 = ptrtoint %"class.std::__1::__tree_node_base"* %609 to i64
  %613 = bitcast %"class.std::__1::map.262"* %554 to i64*
  store i64 %612, i64* %613, align 8
  %614 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %592, align 8
  br label %615

615:                                              ; preds = %611, %596
  %616 = phi %"class.std::__1::__tree_node_base"* [ %602, %596 ], [ %614, %611 ]
  %617 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %553, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %618 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %617, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %618, %"class.std::__1::__tree_node_base"* %616) #11
  %619 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %553, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %620 = load i64, i64* %619, align 8
  %621 = add i64 %620, 1
  store i64 %621, i64* %619, align 8
  br label %622

622:                                              ; preds = %590, %615
  %623 = phi %"class.std::__1::__tree_node.291"* [ %601, %615 ], [ %594, %590 ]
  %624 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.ui::AXNode"* %219, %"class.ui::AXNode"** %624, align 8
  %625 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 1
  %626 = bitcast i32* %625 to i64*
  store i64 -6148914691236517206, i64* %626, align 8
  %627 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 2
  store i64 %468, i64* %627, align 8
  %628 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 3
  store i64 %402, i64* %628, align 8
  %629 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 4
  store i64 %371, i64* %629, align 8
  %630 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 5
  store i64 %369, i64* %630, align 8
  %631 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 6
  store i64 %401, i64* %631, align 8
  %632 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %623, i64 0, i32 1, i32 0, i32 1, i32 7
  store i64 %400, i64* %632, align 8
  %633 = add nuw i64 %493, 1
  %634 = icmp ult i64 %633, %471
  br i1 %634, label %492, label %489

635:                                              ; preds = %478
  %636 = add i64 %400, %369
  %637 = trunc i64 %636 to i32
  %638 = add i32 %637, -1
  %639 = icmp slt i32 %487, %638
  %640 = select i1 %639, i32 %638, i32 %487
  store i32 %640, i32* %42, align 8
  br label %641

641:                                              ; preds = %478, %635
  %642 = load i32, i32* %43, align 4
  %643 = icmp eq i32 %642, -1
  %644 = add i64 %480, %371
  br i1 %643, label %650, label %645

645:                                              ; preds = %641
  %646 = trunc i64 %644 to i32
  %647 = add i32 %646, -1
  %648 = icmp slt i32 %642, %647
  %649 = select i1 %648, i32 %647, i32 %642
  store i32 %649, i32* %43, align 4
  br label %650

650:                                              ; preds = %641, %645
  %651 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %45, align 8
  %652 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %46, align 8
  %653 = icmp eq %"struct.ui::AXTableInfo::CellData"* %651, %652
  %654 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %652 to i64
  br i1 %653, label %667, label %655

655:                                              ; preds = %650
  %656 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 0
  store %"class.ui::AXNode"* %219, %"class.ui::AXNode"** %656, align 8
  %657 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 1
  %658 = bitcast i32* %657 to i64*
  store i64 -6148914691236517206, i64* %658, align 8
  %659 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 2
  store i64 %468, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 3
  store i64 %402, i64* %660, align 8
  %661 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 4
  store i64 %371, i64* %661, align 8
  %662 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 5
  store i64 %369, i64* %662, align 8
  %663 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 6
  store i64 %480, i64* %663, align 8
  %664 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 0, i32 7
  store i64 %400, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %651, i64 1
  %666 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %665 to i64
  store i64 %666, i64* %47, align 8
  br label %728

667:                                              ; preds = %650
  %668 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %651 to i64
  %669 = load i64, i64* %48, align 8
  %670 = sub i64 %668, %669
  %671 = ashr exact i64 %670, 6
  %672 = add nsw i64 %671, 1
  %673 = icmp ugt i64 %672, 288230376151711743
  br i1 %673, label %674, label %676

674:                                              ; preds = %667
  %675 = bitcast %"class.std::__1::vector.8"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %675) #13
  unreachable

676:                                              ; preds = %667
  %677 = sub i64 %654, %669
  %678 = ashr exact i64 %677, 6
  %679 = icmp ult i64 %678, 144115188075855871
  br i1 %679, label %680, label %688

680:                                              ; preds = %676
  %681 = ashr exact i64 %677, 5
  %682 = icmp ult i64 %681, %672
  %683 = select i1 %682, i64 %672, i64 %681
  %684 = icmp eq i64 %683, 0
  br i1 %684, label %693, label %685

685:                                              ; preds = %680
  %686 = icmp ugt i64 %683, 288230376151711743
  br i1 %686, label %687, label %688

687:                                              ; preds = %685
  tail call void @abort() #13
  unreachable

688:                                              ; preds = %685, %676
  %689 = phi i64 [ %683, %685 ], [ 288230376151711743, %676 ]
  %690 = shl i64 %689, 6
  %691 = tail call i8* @_Znwm(i64 %690) #12
  %692 = bitcast i8* %691 to %"struct.ui::AXTableInfo::CellData"*
  br label %693

693:                                              ; preds = %688, %680
  %694 = phi i64 [ %689, %688 ], [ 0, %680 ]
  %695 = phi %"struct.ui::AXTableInfo::CellData"* [ %692, %688 ], [ null, %680 ]
  %696 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671
  %697 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %694
  %698 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %697 to i64
  %699 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %696, i64 0, i32 0
  store %"class.ui::AXNode"* %219, %"class.ui::AXNode"** %699, align 8
  %700 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 1
  %701 = bitcast i32* %700 to i64*
  store i64 -6148914691236517206, i64* %701, align 8
  %702 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 2
  store i64 %468, i64* %702, align 8
  %703 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 3
  store i64 %402, i64* %703, align 8
  %704 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 4
  store i64 %371, i64* %704, align 8
  %705 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 5
  store i64 %369, i64* %705, align 8
  %706 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 6
  store i64 %480, i64* %706, align 8
  %707 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %695, i64 %671, i32 7
  store i64 %400, i64* %707, align 8
  %708 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %696, i64 1
  %709 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %708 to i64
  %710 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %50, align 8
  %711 = load i64, i64* %47, align 8
  %712 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %710 to i64
  %713 = sub i64 %711, %712
  %714 = ashr exact i64 %713, 6
  %715 = sub nsw i64 0, %714
  %716 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %696, i64 %715
  %717 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %716 to i64
  %718 = icmp sgt i64 %713, 0
  br i1 %718, label %719, label %723

719:                                              ; preds = %693
  %720 = bitcast %"struct.ui::AXTableInfo::CellData"* %716 to i8*
  %721 = bitcast %"struct.ui::AXTableInfo::CellData"* %710 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %720, i8* align 8 %721, i64 %713, i1 false) #11
  %722 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %50, align 8
  br label %723

723:                                              ; preds = %719, %693
  %724 = phi %"struct.ui::AXTableInfo::CellData"* [ %710, %693 ], [ %722, %719 ]
  store i64 %717, i64* %48, align 8
  store i64 %709, i64* %47, align 8
  store i64 %698, i64* %49, align 8
  %725 = icmp eq %"struct.ui::AXTableInfo::CellData"* %724, null
  br i1 %725, label %728, label %726

726:                                              ; preds = %723
  %727 = bitcast %"struct.ui::AXTableInfo::CellData"* %724 to i8*
  tail call void @_ZdlPv(i8* %727) #12
  br label %728

728:                                              ; preds = %655, %723, %726
  %729 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %218, i64 1
  %730 = icmp eq %"class.ui::AXNode"** %729, %198
  br i1 %730, label %200, label %212
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo37BuildCellAndHeaderVectorsFromCellDataEv(%"class.ui::AXTableInfo"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = bitcast %"class.std::__1::vector.0"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp ugt i64 %4, %11
  %13 = inttoptr i64 %9 to %"class.std::__1::vector.0"*
  %14 = inttoptr i64 %7 to %"class.std::__1::vector.0"*
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  %16 = sub i64 %4, %11
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"* %2, i64 %16) #11
  br label %36

17:                                               ; preds = %1
  %18 = icmp ult i64 %4, %11
  br i1 %18, label %19, label %36

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %4
  %21 = icmp eq %"class.std::__1::vector.0"* %20, %14
  br i1 %21, label %35, label %22

22:                                               ; preds = %19, %33
  %23 = phi %"class.std::__1::vector.0"* [ %24, %33 ], [ %14, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %24, i64 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = ptrtoint i32* %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %23, i64 -1, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast i32* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %28, %22
  %34 = icmp eq %"class.std::__1::vector.0"* %24, %20
  br i1 %34, label %35, label %22

35:                                               ; preds = %33, %19
  store %"class.std::__1::vector.0"* %20, %"class.std::__1::vector.0"** %5, align 8
  br label %36

36:                                               ; preds = %15, %17, %35
  %37 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2
  %38 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %41 = bitcast %"class.std::__1::vector.0"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %37 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp ugt i64 %39, %46
  %48 = inttoptr i64 %44 to %"class.std::__1::vector.0"*
  %49 = inttoptr i64 %42 to %"class.std::__1::vector.0"*
  br i1 %47, label %50, label %52

50:                                               ; preds = %36
  %51 = sub i64 %39, %46
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"* %37, i64 %51) #11
  br label %71

52:                                               ; preds = %36
  %53 = icmp ult i64 %39, %46
  br i1 %53, label %54, label %71

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %48, i64 %39
  %56 = icmp eq %"class.std::__1::vector.0"* %55, %49
  br i1 %56, label %70, label %57

57:                                               ; preds = %54, %68
  %58 = phi %"class.std::__1::vector.0"* [ %59, %68 ], [ %49, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %58, i64 -1
  %60 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %59, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = ptrtoint i32* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %58, i64 -1, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast i32* %61 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %63, %57
  %69 = icmp eq %"class.std::__1::vector.0"* %59, %55
  br i1 %69, label %70, label %57

70:                                               ; preds = %68, %54
  store %"class.std::__1::vector.0"* %55, %"class.std::__1::vector.0"** %40, align 8
  br label %71

71:                                               ; preds = %50, %52, %70
  %72 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6
  %73 = load i64, i64* %3, align 8
  %74 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %75 = bitcast %"class.std::__1::vector.0"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector"* %72 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = sdiv exact i64 %79, 24
  %81 = icmp ugt i64 %73, %80
  %82 = inttoptr i64 %78 to %"class.std::__1::vector.0"*
  %83 = inttoptr i64 %76 to %"class.std::__1::vector.0"*
  br i1 %81, label %84, label %86

84:                                               ; preds = %71
  %85 = sub i64 %73, %80
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"* %72, i64 %85) #11
  br label %105

86:                                               ; preds = %71
  %87 = icmp ult i64 %73, %80
  br i1 %87, label %88, label %105

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %82, i64 %73
  %90 = icmp eq %"class.std::__1::vector.0"* %89, %83
  br i1 %90, label %104, label %91

91:                                               ; preds = %88, %102
  %92 = phi %"class.std::__1::vector.0"* [ %93, %102 ], [ %83, %88 ]
  %93 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %93, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector.0"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %88
  store %"class.std::__1::vector.0"* %89, %"class.std::__1::vector.0"** %74, align 8
  br label %105

105:                                              ; preds = %84, %86, %104
  %106 = load i64, i64* %3, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %72, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_node.289"**
  %112 = load i64, i64* %38, align 8
  br label %137

113:                                              ; preds = %162, %105
  %114 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18
  %115 = getelementptr inbounds %"class.std::__1::map.243", %"class.std::__1::map.243"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.std::__1::__tree_node.289"**
  %118 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %117, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"* %115, %"class.std::__1::__tree_node.289"* %118) #11
  %119 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::map.243", %"class.std::__1::map.243"* %114, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %116, %"class.std::__1::__tree_end_node"** %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %121, align 8
  %122 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 0
  %123 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %122, align 8
  %124 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %125 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %124, align 8
  %126 = icmp eq %"struct.ui::AXTableInfo::CellData"* %123, %125
  br i1 %126, label %235, label %127

127:                                              ; preds = %113
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4
  %130 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %131 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast i32** %130 to i64*
  %133 = bitcast %"class.std::__1::vector.0"* %129 to i64*
  %134 = bitcast i32** %131 to i64*
  %135 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %129, i64 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 0
  br label %236

137:                                              ; preds = %108, %162
  %138 = phi i64 [ %112, %108 ], [ %163, %162 ]
  %139 = phi i64 [ 0, %108 ], [ %164, %162 ]
  %140 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %109, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %140, i64 %139
  %142 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %140, i64 %139, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector.0"* %141 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 2
  %149 = icmp ugt i64 %138, %148
  %150 = inttoptr i64 %146 to i32*
  br i1 %149, label %151, label %153

151:                                              ; preds = %137
  %152 = sub i64 %138, %148
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.0"* %141, i64 %152) #11
  br label %157

153:                                              ; preds = %137
  %154 = icmp ult i64 %138, %148
  br i1 %154, label %155, label %157

155:                                              ; preds = %153
  %156 = getelementptr inbounds i32, i32* %150, i64 %138
  store i32* %156, i32** %142, align 8
  br label %157

157:                                              ; preds = %151, %153, %155
  %158 = load i64, i64* %38, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = trunc i64 %139 to i32
  br label %167

162:                                              ; preds = %231, %157
  %163 = phi i64 [ 0, %157 ], [ %232, %231 ]
  %164 = add nuw i64 %139, 1
  %165 = load i64, i64* %3, align 8
  %166 = icmp ult i64 %164, %165
  br i1 %166, label %137, label %113

167:                                              ; preds = %160, %231
  %168 = phi i64 [ %158, %160 ], [ %232, %231 ]
  %169 = phi i64 [ 0, %160 ], [ %233, %231 ]
  %170 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %111, align 8
  %171 = icmp eq %"class.std::__1::__tree_node.289"* %170, null
  br i1 %171, label %231, label %172

172:                                              ; preds = %167, %172
  %173 = phi %"class.std::__1::__tree_end_node"* [ %183, %172 ], [ %110, %167 ]
  %174 = phi %"class.std::__1::__tree_node.289"* [ %184, %172 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %174, i64 0, i32 1, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp slt i32 %176, %161
  %178 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %174, i64 0, i32 0, i32 1
  %179 = bitcast %"class.std::__1::__tree_node_base"** %178 to %"class.std::__1::__tree_node.289"**
  %180 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %174, i64 0, i32 0, i32 0
  %181 = bitcast %"class.std::__1::__tree_node.289"* %174 to %"class.std::__1::__tree_node.289"**
  %182 = select i1 %177, %"class.std::__1::__tree_node.289"** %179, %"class.std::__1::__tree_node.289"** %181
  %183 = select i1 %177, %"class.std::__1::__tree_end_node"* %173, %"class.std::__1::__tree_end_node"* %180
  %184 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %182, align 8
  %185 = icmp eq %"class.std::__1::__tree_node.289"* %184, null
  br i1 %185, label %186, label %172

186:                                              ; preds = %172
  %187 = icmp eq %"class.std::__1::__tree_end_node"* %183, %110
  br i1 %187, label %231, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 4
  %190 = bitcast %"class.std::__1::__tree_end_node"* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, %161
  br i1 %192, label %231, label %193

193:                                              ; preds = %188
  %194 = trunc i64 %169 to i32
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 6
  %196 = bitcast %"class.std::__1::__tree_end_node"* %195 to %"class.std::__1::__tree_node.291"**
  %197 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node.291"* %197, null
  br i1 %198, label %231, label %199

199:                                              ; preds = %193, %199
  %200 = phi %"class.std::__1::__tree_end_node"* [ %210, %199 ], [ %195, %193 ]
  %201 = phi %"class.std::__1::__tree_node.291"* [ %211, %199 ], [ %197, %193 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %201, i64 0, i32 1, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %203, %194
  %205 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %201, i64 0, i32 0, i32 1
  %206 = bitcast %"class.std::__1::__tree_node_base"** %205 to %"class.std::__1::__tree_node.291"**
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %201, i64 0, i32 0, i32 0
  %208 = bitcast %"class.std::__1::__tree_node.291"* %201 to %"class.std::__1::__tree_node.291"**
  %209 = select i1 %204, %"class.std::__1::__tree_node.291"** %206, %"class.std::__1::__tree_node.291"** %208
  %210 = select i1 %204, %"class.std::__1::__tree_end_node"* %200, %"class.std::__1::__tree_end_node"* %207
  %211 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %209, align 8
  %212 = icmp eq %"class.std::__1::__tree_node.291"* %211, null
  br i1 %212, label %213, label %199

213:                                              ; preds = %199
  %214 = icmp eq %"class.std::__1::__tree_end_node"* %210, %195
  br i1 %214, label %231, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 4
  %217 = bitcast %"class.std::__1::__tree_end_node"* %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, %194
  br i1 %219, label %231, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 5
  %222 = bitcast %"class.std::__1::__tree_end_node"* %221 to %"class.ui::AXNode"**
  %223 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %222, align 8
  %224 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %223, i64 0, i32 7, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %109, align 8
  %227 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %226, i64 %139, i32 0, i32 0
  %228 = load i32*, i32** %227, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %169
  store i32 %225, i32* %229, align 4
  %230 = load i64, i64* %38, align 8
  br label %231

231:                                              ; preds = %215, %188, %213, %193, %186, %167, %220
  %232 = phi i64 [ %168, %215 ], [ %168, %188 ], [ %168, %213 ], [ %168, %193 ], [ %168, %186 ], [ %168, %167 ], [ %230, %220 ]
  %233 = add nuw i64 %169, 1
  %234 = icmp ult i64 %233, %232
  br i1 %234, label %167, label %162

235:                                              ; preds = %250, %113
  ret void

236:                                              ; preds = %127, %250
  %237 = phi %"struct.ui::AXTableInfo::CellData"* [ %123, %127 ], [ %251, %250 ]
  %238 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 0, i32 3
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 0, i32 5
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, %239
  %243 = icmp ult i64 %239, %242
  br i1 %243, label %244, label %250

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 0, i32 2
  %246 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 0, i32 4
  %247 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 0, i32 0
  %248 = load i64, i64* %245, align 8
  %249 = load i64, i64* %246, align 8
  br label %253

250:                                              ; preds = %259, %236
  %251 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %237, i64 1
  %252 = icmp eq %"struct.ui::AXTableInfo::CellData"* %251, %125
  br i1 %252, label %235, label %236

253:                                              ; preds = %244, %259
  %254 = phi i64 [ %249, %244 ], [ %260, %259 ]
  %255 = phi i64 [ %248, %244 ], [ %261, %259 ]
  %256 = phi i64 [ %239, %244 ], [ %262, %259 ]
  %257 = add i64 %254, %255
  %258 = icmp ult i64 %255, %257
  br i1 %258, label %267, label %259

259:                                              ; preds = %536, %253
  %260 = phi i64 [ %254, %253 ], [ %539, %536 ]
  %261 = phi i64 [ %255, %253 ], [ %538, %536 ]
  %262 = add nuw i64 %256, 1
  %263 = load i64, i64* %238, align 8
  %264 = load i64, i64* %240, align 8
  %265 = add i64 %264, %263
  %266 = icmp ult i64 %262, %265
  br i1 %266, label %253, label %250

267:                                              ; preds = %253, %536
  %268 = phi i64 [ %537, %536 ], [ %255, %253 ]
  %269 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %247, align 8
  %270 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %269, i64 0, i32 7, i32 2
  %271 = load i32, i32* %270, align 4
  switch i32 %271, label %536 [
    i32 20, label %272
    i32 148, label %404
  ]

272:                                              ; preds = %267
  %273 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %136, align 8
  %274 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %273, i64 %268
  %275 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %269, i64 0, i32 7, i32 1
  %276 = load i32, i32* %275, align 8
  %277 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %273, i64 %268, i32 0, i32 1
  %278 = load i32*, i32** %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %273, i64 %268, i32 0, i32 2, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = icmp ult i32* %278, %280
  %282 = ptrtoint i32* %280 to i64
  br i1 %281, label %283, label %287

283:                                              ; preds = %272
  store i32 %276, i32* %278, align 4
  %284 = getelementptr inbounds i32, i32* %278, i64 1
  %285 = ptrtoint i32* %284 to i64
  %286 = bitcast i32** %277 to i64*
  store i64 %285, i64* %286, align 8
  br label %343

287:                                              ; preds = %272
  %288 = ptrtoint i32* %278 to i64
  %289 = bitcast i32** %277 to i64*
  %290 = bitcast %"class.std::__1::vector.0"* %274 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %288, %291
  %293 = ashr exact i64 %292, 2
  %294 = add nsw i64 %293, 1
  %295 = icmp ugt i64 %294, 4611686018427387903
  br i1 %295, label %296, label %298

296:                                              ; preds = %287
  %297 = bitcast %"class.std::__1::vector.0"* %274 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %297) #13
  unreachable

298:                                              ; preds = %287
  %299 = bitcast i32** %279 to i64*
  %300 = sub i64 %282, %291
  %301 = ashr exact i64 %300, 2
  %302 = icmp ult i64 %301, 2305843009213693951
  br i1 %302, label %303, label %311

303:                                              ; preds = %298
  %304 = ashr exact i64 %300, 1
  %305 = icmp ult i64 %304, %294
  %306 = select i1 %305, i64 %294, i64 %304
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %316, label %308

308:                                              ; preds = %303
  %309 = icmp ugt i64 %306, 4611686018427387903
  br i1 %309, label %310, label %311

310:                                              ; preds = %308
  tail call void @abort() #13
  unreachable

311:                                              ; preds = %308, %298
  %312 = phi i64 [ %306, %308 ], [ 4611686018427387903, %298 ]
  %313 = shl i64 %312, 2
  %314 = tail call i8* @_Znwm(i64 %313) #12
  %315 = bitcast i8* %314 to i32*
  br label %316

316:                                              ; preds = %311, %303
  %317 = phi i64 [ %312, %311 ], [ 0, %303 ]
  %318 = phi i32* [ %315, %311 ], [ null, %303 ]
  %319 = getelementptr inbounds i32, i32* %318, i64 %293
  %320 = getelementptr inbounds i32, i32* %318, i64 %317
  %321 = ptrtoint i32* %320 to i64
  store i32 %276, i32* %319, align 4
  %322 = getelementptr inbounds i32, i32* %319, i64 1
  %323 = ptrtoint i32* %322 to i64
  %324 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %274, i64 0, i32 0, i32 0
  %325 = load i32*, i32** %324, align 8
  %326 = load i64, i64* %289, align 8
  %327 = ptrtoint i32* %325 to i64
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 2
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds i32, i32* %319, i64 %330
  %332 = ptrtoint i32* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %316
  %335 = bitcast i32* %331 to i8*
  %336 = bitcast i32* %325 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %328, i1 false) #11
  %337 = load i32*, i32** %324, align 8
  br label %338

338:                                              ; preds = %334, %316
  %339 = phi i32* [ %325, %316 ], [ %337, %334 ]
  store i64 %332, i64* %290, align 8
  store i64 %323, i64* %289, align 8
  store i64 %321, i64* %299, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = bitcast i32* %339 to i8*
  tail call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %283, %338, %341
  %344 = load i32, i32* %275, align 8
  %345 = load i32*, i32** %130, align 8
  %346 = load i32*, i32** %131, align 8
  %347 = icmp ult i32* %345, %346
  %348 = ptrtoint i32* %346 to i64
  br i1 %347, label %349, label %352

349:                                              ; preds = %343
  store i32 %344, i32* %345, align 4
  %350 = getelementptr inbounds i32, i32* %345, i64 1
  %351 = ptrtoint i32* %350 to i64
  store i64 %351, i64* %132, align 8
  br label %536

352:                                              ; preds = %343
  %353 = ptrtoint i32* %345 to i64
  %354 = load i64, i64* %133, align 8
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 2
  %357 = add nsw i64 %356, 1
  %358 = icmp ugt i64 %357, 4611686018427387903
  br i1 %358, label %359, label %361

359:                                              ; preds = %352
  %360 = bitcast %"class.std::__1::vector.0"* %129 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %360) #13
  unreachable

361:                                              ; preds = %352
  %362 = sub i64 %348, %354
  %363 = ashr exact i64 %362, 2
  %364 = icmp ult i64 %363, 2305843009213693951
  br i1 %364, label %365, label %373

365:                                              ; preds = %361
  %366 = ashr exact i64 %362, 1
  %367 = icmp ult i64 %366, %357
  %368 = select i1 %367, i64 %357, i64 %366
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %378, label %370

370:                                              ; preds = %365
  %371 = icmp ugt i64 %368, 4611686018427387903
  br i1 %371, label %372, label %373

372:                                              ; preds = %370
  tail call void @abort() #13
  unreachable

373:                                              ; preds = %370, %361
  %374 = phi i64 [ %368, %370 ], [ 4611686018427387903, %361 ]
  %375 = shl i64 %374, 2
  %376 = tail call i8* @_Znwm(i64 %375) #12
  %377 = bitcast i8* %376 to i32*
  br label %378

378:                                              ; preds = %373, %365
  %379 = phi i64 [ %374, %373 ], [ 0, %365 ]
  %380 = phi i32* [ %377, %373 ], [ null, %365 ]
  %381 = getelementptr inbounds i32, i32* %380, i64 %356
  %382 = getelementptr inbounds i32, i32* %380, i64 %379
  %383 = ptrtoint i32* %382 to i64
  store i32 %344, i32* %381, align 4
  %384 = getelementptr inbounds i32, i32* %381, i64 1
  %385 = ptrtoint i32* %384 to i64
  %386 = load i32*, i32** %135, align 8
  %387 = load i64, i64* %132, align 8
  %388 = ptrtoint i32* %386 to i64
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 2
  %391 = sub nsw i64 0, %390
  %392 = getelementptr inbounds i32, i32* %381, i64 %391
  %393 = ptrtoint i32* %392 to i64
  %394 = icmp sgt i64 %389, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %378
  %396 = bitcast i32* %392 to i8*
  %397 = bitcast i32* %386 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %396, i8* align 4 %397, i64 %389, i1 false) #11
  %398 = load i32*, i32** %135, align 8
  br label %399

399:                                              ; preds = %395, %378
  %400 = phi i32* [ %386, %378 ], [ %398, %395 ]
  store i64 %393, i64* %133, align 8
  store i64 %385, i64* %132, align 8
  store i64 %383, i64* %134, align 8
  %401 = icmp eq i32* %400, null
  br i1 %401, label %536, label %402

402:                                              ; preds = %399
  %403 = bitcast i32* %400 to i8*
  tail call void @_ZdlPv(i8* %403) #12
  br label %536

404:                                              ; preds = %267
  %405 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %128, align 8
  %406 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %405, i64 %256
  %407 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %269, i64 0, i32 7, i32 1
  %408 = load i32, i32* %407, align 8
  %409 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %405, i64 %256, i32 0, i32 1
  %410 = load i32*, i32** %409, align 8
  %411 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %405, i64 %256, i32 0, i32 2, i32 0, i32 0
  %412 = load i32*, i32** %411, align 8
  %413 = icmp ult i32* %410, %412
  %414 = ptrtoint i32* %412 to i64
  br i1 %413, label %415, label %419

415:                                              ; preds = %404
  store i32 %408, i32* %410, align 4
  %416 = getelementptr inbounds i32, i32* %410, i64 1
  %417 = ptrtoint i32* %416 to i64
  %418 = bitcast i32** %409 to i64*
  store i64 %417, i64* %418, align 8
  br label %475

419:                                              ; preds = %404
  %420 = ptrtoint i32* %410 to i64
  %421 = bitcast i32** %409 to i64*
  %422 = bitcast %"class.std::__1::vector.0"* %406 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = sub i64 %420, %423
  %425 = ashr exact i64 %424, 2
  %426 = add nsw i64 %425, 1
  %427 = icmp ugt i64 %426, 4611686018427387903
  br i1 %427, label %428, label %430

428:                                              ; preds = %419
  %429 = bitcast %"class.std::__1::vector.0"* %406 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %429) #13
  unreachable

430:                                              ; preds = %419
  %431 = bitcast i32** %411 to i64*
  %432 = sub i64 %414, %423
  %433 = ashr exact i64 %432, 2
  %434 = icmp ult i64 %433, 2305843009213693951
  br i1 %434, label %435, label %443

435:                                              ; preds = %430
  %436 = ashr exact i64 %432, 1
  %437 = icmp ult i64 %436, %426
  %438 = select i1 %437, i64 %426, i64 %436
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %448, label %440

440:                                              ; preds = %435
  %441 = icmp ugt i64 %438, 4611686018427387903
  br i1 %441, label %442, label %443

442:                                              ; preds = %440
  tail call void @abort() #13
  unreachable

443:                                              ; preds = %440, %430
  %444 = phi i64 [ %438, %440 ], [ 4611686018427387903, %430 ]
  %445 = shl i64 %444, 2
  %446 = tail call i8* @_Znwm(i64 %445) #12
  %447 = bitcast i8* %446 to i32*
  br label %448

448:                                              ; preds = %443, %435
  %449 = phi i64 [ %444, %443 ], [ 0, %435 ]
  %450 = phi i32* [ %447, %443 ], [ null, %435 ]
  %451 = getelementptr inbounds i32, i32* %450, i64 %425
  %452 = getelementptr inbounds i32, i32* %450, i64 %449
  %453 = ptrtoint i32* %452 to i64
  store i32 %408, i32* %451, align 4
  %454 = getelementptr inbounds i32, i32* %451, i64 1
  %455 = ptrtoint i32* %454 to i64
  %456 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %406, i64 0, i32 0, i32 0
  %457 = load i32*, i32** %456, align 8
  %458 = load i64, i64* %421, align 8
  %459 = ptrtoint i32* %457 to i64
  %460 = sub i64 %458, %459
  %461 = ashr exact i64 %460, 2
  %462 = sub nsw i64 0, %461
  %463 = getelementptr inbounds i32, i32* %451, i64 %462
  %464 = ptrtoint i32* %463 to i64
  %465 = icmp sgt i64 %460, 0
  br i1 %465, label %466, label %470

466:                                              ; preds = %448
  %467 = bitcast i32* %463 to i8*
  %468 = bitcast i32* %457 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %467, i8* align 4 %468, i64 %460, i1 false) #11
  %469 = load i32*, i32** %456, align 8
  br label %470

470:                                              ; preds = %466, %448
  %471 = phi i32* [ %457, %448 ], [ %469, %466 ]
  store i64 %464, i64* %422, align 8
  store i64 %455, i64* %421, align 8
  store i64 %453, i64* %431, align 8
  %472 = icmp eq i32* %471, null
  br i1 %472, label %475, label %473

473:                                              ; preds = %470
  %474 = bitcast i32* %471 to i8*
  tail call void @_ZdlPv(i8* %474) #12
  br label %475

475:                                              ; preds = %415, %470, %473
  %476 = load i32, i32* %407, align 8
  %477 = load i32*, i32** %130, align 8
  %478 = load i32*, i32** %131, align 8
  %479 = icmp ult i32* %477, %478
  %480 = ptrtoint i32* %478 to i64
  br i1 %479, label %481, label %484

481:                                              ; preds = %475
  store i32 %476, i32* %477, align 4
  %482 = getelementptr inbounds i32, i32* %477, i64 1
  %483 = ptrtoint i32* %482 to i64
  store i64 %483, i64* %132, align 8
  br label %536

484:                                              ; preds = %475
  %485 = ptrtoint i32* %477 to i64
  %486 = load i64, i64* %133, align 8
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 2
  %489 = add nsw i64 %488, 1
  %490 = icmp ugt i64 %489, 4611686018427387903
  br i1 %490, label %491, label %493

491:                                              ; preds = %484
  %492 = bitcast %"class.std::__1::vector.0"* %129 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %492) #13
  unreachable

493:                                              ; preds = %484
  %494 = sub i64 %480, %486
  %495 = ashr exact i64 %494, 2
  %496 = icmp ult i64 %495, 2305843009213693951
  br i1 %496, label %497, label %505

497:                                              ; preds = %493
  %498 = ashr exact i64 %494, 1
  %499 = icmp ult i64 %498, %489
  %500 = select i1 %499, i64 %489, i64 %498
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %510, label %502

502:                                              ; preds = %497
  %503 = icmp ugt i64 %500, 4611686018427387903
  br i1 %503, label %504, label %505

504:                                              ; preds = %502
  tail call void @abort() #13
  unreachable

505:                                              ; preds = %502, %493
  %506 = phi i64 [ %500, %502 ], [ 4611686018427387903, %493 ]
  %507 = shl i64 %506, 2
  %508 = tail call i8* @_Znwm(i64 %507) #12
  %509 = bitcast i8* %508 to i32*
  br label %510

510:                                              ; preds = %505, %497
  %511 = phi i64 [ %506, %505 ], [ 0, %497 ]
  %512 = phi i32* [ %509, %505 ], [ null, %497 ]
  %513 = getelementptr inbounds i32, i32* %512, i64 %488
  %514 = getelementptr inbounds i32, i32* %512, i64 %511
  %515 = ptrtoint i32* %514 to i64
  store i32 %476, i32* %513, align 4
  %516 = getelementptr inbounds i32, i32* %513, i64 1
  %517 = ptrtoint i32* %516 to i64
  %518 = load i32*, i32** %135, align 8
  %519 = load i64, i64* %132, align 8
  %520 = ptrtoint i32* %518 to i64
  %521 = sub i64 %519, %520
  %522 = ashr exact i64 %521, 2
  %523 = sub nsw i64 0, %522
  %524 = getelementptr inbounds i32, i32* %513, i64 %523
  %525 = ptrtoint i32* %524 to i64
  %526 = icmp sgt i64 %521, 0
  br i1 %526, label %527, label %531

527:                                              ; preds = %510
  %528 = bitcast i32* %524 to i8*
  %529 = bitcast i32* %518 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %528, i8* align 4 %529, i64 %521, i1 false) #11
  %530 = load i32*, i32** %135, align 8
  br label %531

531:                                              ; preds = %527, %510
  %532 = phi i32* [ %518, %510 ], [ %530, %527 ]
  store i64 %525, i64* %133, align 8
  store i64 %517, i64* %132, align 8
  store i64 %515, i64* %134, align 8
  %533 = icmp eq i32* %532, null
  br i1 %533, label %536, label %534

534:                                              ; preds = %531
  %535 = bitcast i32* %532 to i8*
  tail call void @_ZdlPv(i8* %535) #12
  br label %536

536:                                              ; preds = %267, %534, %531, %481, %402, %399, %349
  %537 = add nuw i64 %268, 1
  %538 = load i64, i64* %245, align 8
  %539 = load i64, i64* %246, align 8
  %540 = add i64 %539, %538
  %541 = icmp ult i64 %537, %540
  br i1 %541, label %267, label %259
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui11AXTableInfo10InvalidateEv(%"class.ui::AXTableInfo"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 17
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo19UpdateExtraMacNodesEv(%"class.ui::AXTableInfo"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.273", align 16
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"** %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = ptrtoint %"class.ui::AXNode"** %8 to i64
  %14 = ptrtoint %"class.ui::AXNode"** %10 to i64
  br label %20

15:                                               ; preds = %1
  tail call void @_ZN2ui11AXTableInfo18ClearExtraMacNodesEv(%"class.ui::AXTableInfo"* %0)
  %16 = bitcast %"class.ui::AXNode"*** %9 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.10"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %12, %15
  %21 = phi i64 [ %19, %15 ], [ %13, %12 ]
  %22 = phi i64 [ %17, %15 ], [ %14, %12 ]
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  %26 = sub i64 %22, %21
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %25, %27
  %29 = inttoptr i64 %21 to %"class.ui::AXNode"**
  br i1 %28, label %30, label %32

30:                                               ; preds = %20
  %31 = sub i64 %25, %27
  tail call void @_ZNSt3__16vectorIPN2ui6AXNodeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.10"* %6, i64 %31) #11
  br label %36

32:                                               ; preds = %20
  %33 = icmp ult i64 %25, %27
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %29, i64 %25
  store %"class.ui::AXNode"** %35, %"class.ui::AXNode"*** %9, align 8
  br label %36

36:                                               ; preds = %30, %32, %34
  %37 = bitcast %"class.std::__1::vector.273"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %2, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %2, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #11
  %41 = add i64 %24, 2
  %42 = bitcast %"struct.ui::AXTreeObserver::Change"** %40 to i64*
  %43 = bitcast %"class.std::__1::vector.273"* %2 to i64*
  %44 = icmp eq i64 %41, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %36
  %46 = icmp ugt i64 %41, 1152921504606846975
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %45
  %49 = shl i64 %41, 4
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.ui::AXTreeObserver::Change"*
  %52 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %51, i64 %41
  %53 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %52 to i64
  %54 = insertelement <2 x i8*> undef, i8* %50, i32 0
  %55 = shufflevector <2 x i8*> %54, <2 x i8*> undef, <2 x i32> zeroinitializer
  %56 = ptrtoint <2 x i8*> %55 to <2 x i64>
  %57 = bitcast %"class.std::__1::vector.273"* %2 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 16
  store i64 %53, i64* %42, align 16
  br label %58

58:                                               ; preds = %48, %36
  %59 = load i64, i64* %23, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  br label %132

63:                                               ; preds = %195, %58
  %64 = tail call %"class.ui::AXNode"* @_ZN2ui11AXTableInfo29CreateExtraMacTableHeaderNodeEv(%"class.ui::AXTableInfo"* %0)
  %65 = load i64, i64* %23, align 8
  %66 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %67 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 %65
  store %"class.ui::AXNode"* %64, %"class.ui::AXNode"** %67, align 8
  %68 = load i64, i64* %23, align 8
  %69 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %70 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %69, i64 %68
  %71 = bitcast %"class.ui::AXNode"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %39, align 8
  %74 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %40, align 16
  %75 = icmp ult %"struct.ui::AXTreeObserver::Change"* %73, %74
  %76 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %74 to i64
  br i1 %75, label %77, label %83

77:                                               ; preds = %63
  %78 = bitcast %"struct.ui::AXTreeObserver::Change"* %73 to i64*
  store i64 %72, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %73, i64 0, i32 1
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %73, i64 1
  %81 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %80 to i64
  %82 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  store i64 %81, i64* %82, align 8
  br label %129

83:                                               ; preds = %63
  %84 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %73 to i64
  %85 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  %86 = load i64, i64* %43, align 16
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 4
  %89 = add nsw i64 %88, 1
  %90 = icmp ugt i64 %89, 1152921504606846975
  br i1 %90, label %91, label %93

91:                                               ; preds = %83
  %92 = bitcast %"class.std::__1::vector.273"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %92) #13
  unreachable

93:                                               ; preds = %83
  %94 = sub i64 %76, %86
  %95 = ashr exact i64 %94, 4
  %96 = icmp ult i64 %95, 576460752303423487
  br i1 %96, label %97, label %105

97:                                               ; preds = %93
  %98 = ashr exact i64 %94, 3
  %99 = icmp ult i64 %98, %89
  %100 = select i1 %99, i64 %89, i64 %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = icmp ugt i64 %100, 1152921504606846975
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  tail call void @abort() #13
  unreachable

105:                                              ; preds = %102, %93
  %106 = phi i64 [ %100, %102 ], [ 1152921504606846975, %93 ]
  %107 = shl i64 %106, 4
  %108 = tail call i8* @_Znwm(i64 %107) #12
  %109 = bitcast i8* %108 to %"struct.ui::AXTreeObserver::Change"*
  br label %110

110:                                              ; preds = %105, %97
  %111 = phi i64 [ %106, %105 ], [ 0, %97 ]
  %112 = phi i8* [ %108, %105 ], [ null, %97 ]
  %113 = phi %"struct.ui::AXTreeObserver::Change"* [ %109, %105 ], [ null, %97 ]
  %114 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %113, i64 %88
  %115 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %113, i64 %111
  %116 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %115 to i64
  %117 = bitcast %"struct.ui::AXTreeObserver::Change"* %114 to i64*
  store i64 %72, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %113, i64 %88, i32 1
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %114, i64 1
  %120 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %119 to i64
  %121 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %113 to i64
  %122 = icmp sgt i64 %87, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %110
  %124 = inttoptr i64 %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %124, i64 %87, i1 false) #11
  br label %125

125:                                              ; preds = %123, %110
  store i64 %121, i64* %43, align 16
  store i64 %120, i64* %85, align 8
  store i64 %116, i64* %42, align 16
  %126 = icmp eq i64 %86, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %77, %125, %127
  %130 = load i64, i64* %23, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %199, label %328

132:                                              ; preds = %61, %195
  %133 = phi i64 [ 0, %61 ], [ %196, %195 ]
  %134 = tail call %"class.ui::AXNode"* @_ZN2ui11AXTableInfo24CreateExtraMacColumnNodeEm(%"class.ui::AXTableInfo"* %0, i64 %133)
  %135 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %136 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %135, i64 %133
  store %"class.ui::AXNode"* %134, %"class.ui::AXNode"** %136, align 8
  %137 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %138 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %137, i64 %133
  %139 = bitcast %"class.ui::AXNode"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %39, align 8
  %142 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %40, align 16
  %143 = icmp ult %"struct.ui::AXTreeObserver::Change"* %141, %142
  %144 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %142 to i64
  br i1 %143, label %145, label %150

145:                                              ; preds = %132
  %146 = bitcast %"struct.ui::AXTreeObserver::Change"* %141 to i64*
  store i64 %140, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %141, i64 0, i32 1
  store i32 0, i32* %147, align 8
  %148 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %141, i64 1
  %149 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %148 to i64
  store i64 %149, i64* %62, align 8
  br label %195

150:                                              ; preds = %132
  %151 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %141 to i64
  %152 = load i64, i64* %43, align 16
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 4
  %155 = add nsw i64 %154, 1
  %156 = icmp ugt i64 %155, 1152921504606846975
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::vector.273"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %158) #13
  unreachable

159:                                              ; preds = %150
  %160 = sub i64 %144, %152
  %161 = ashr exact i64 %160, 4
  %162 = icmp ult i64 %161, 576460752303423487
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  %164 = ashr exact i64 %160, 3
  %165 = icmp ult i64 %164, %155
  %166 = select i1 %165, i64 %155, i64 %164
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %176, label %168

168:                                              ; preds = %163
  %169 = icmp ugt i64 %166, 1152921504606846975
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  tail call void @abort() #13
  unreachable

171:                                              ; preds = %168, %159
  %172 = phi i64 [ %166, %168 ], [ 1152921504606846975, %159 ]
  %173 = shl i64 %172, 4
  %174 = tail call i8* @_Znwm(i64 %173) #12
  %175 = bitcast i8* %174 to %"struct.ui::AXTreeObserver::Change"*
  br label %176

176:                                              ; preds = %171, %163
  %177 = phi i64 [ %172, %171 ], [ 0, %163 ]
  %178 = phi i8* [ %174, %171 ], [ null, %163 ]
  %179 = phi %"struct.ui::AXTreeObserver::Change"* [ %175, %171 ], [ null, %163 ]
  %180 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %179, i64 %154
  %181 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %179, i64 %177
  %182 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %181 to i64
  %183 = bitcast %"struct.ui::AXTreeObserver::Change"* %180 to i64*
  store i64 %140, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %179, i64 %154, i32 1
  store i32 0, i32* %184, align 8
  %185 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %180, i64 1
  %186 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %185 to i64
  %187 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %179 to i64
  %188 = icmp sgt i64 %153, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %176
  %190 = inttoptr i64 %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %190, i64 %153, i1 false) #11
  br label %191

191:                                              ; preds = %189, %176
  store i64 %187, i64* %43, align 16
  store i64 %186, i64* %62, align 8
  store i64 %182, i64* %42, align 16
  %192 = icmp eq i64 %152, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = inttoptr i64 %152 to i8*
  tail call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %145, %191, %193
  %196 = add nuw i64 %133, 1
  %197 = load i64, i64* %23, align 8
  %198 = icmp ult i64 %196, %197
  br i1 %198, label %132, label %63

199:                                              ; preds = %328, %129
  %200 = phi i64 [ 0, %129 ], [ %331, %328 ]
  %201 = bitcast %"struct.ui::AXNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %201) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm.data to i8*), i64 264, i1 false)
  %202 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %203 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %202, i64 %200
  %204 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %203, align 8
  %205 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %204, i64 0, i32 7
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %3, %"struct.ui::AXNodeData"* dereferenceable(264) %205) #11
  %206 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 9, i32 0, i32 0
  %207 = load %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"** %206, align 8
  %208 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 9, i32 0, i32 1
  %209 = load %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"** %208, align 8
  %210 = icmp eq %"struct.std::__1::pair.50"* %209, %207
  br i1 %210, label %224, label %211

211:                                              ; preds = %199, %222
  %212 = phi %"struct.std::__1::pair.50"* [ %213, %222 ], [ %209, %199 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %212, i64 -1
  %214 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %212, i64 -1, i32 1, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %211
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %212, i64 -1, i32 1, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %217, %211
  %223 = icmp eq %"struct.std::__1::pair.50"* %213, %207
  br i1 %223, label %224, label %211

224:                                              ; preds = %222, %199
  store %"struct.std::__1::pair.50"* %207, %"struct.std::__1::pair.50"** %208, align 8
  %225 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* nonnull %3, i32 1, %"class.std::__1::vector.0"* dereferenceable(24) %225) #11
  %226 = load i64, i64* %23, align 8
  %227 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %228 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %227, i64 %226
  %229 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %228, align 8
  call void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"* %229, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %3) #11
  %230 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  %231 = bitcast %"class.ui::AXNode"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %39, align 8
  %234 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %40, align 16
  %235 = icmp ult %"struct.ui::AXTreeObserver::Change"* %233, %234
  %236 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %234 to i64
  br i1 %235, label %237, label %243

237:                                              ; preds = %224
  %238 = bitcast %"struct.ui::AXTreeObserver::Change"* %233 to i64*
  store i64 %232, i64* %238, align 8
  %239 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %233, i64 0, i32 1
  store i32 2, i32* %239, align 8
  %240 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %233, i64 1
  %241 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %240 to i64
  %242 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  store i64 %241, i64* %242, align 8
  br label %289

243:                                              ; preds = %224
  %244 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %233 to i64
  %245 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  %246 = load i64, i64* %43, align 16
  %247 = sub i64 %244, %246
  %248 = ashr exact i64 %247, 4
  %249 = add nsw i64 %248, 1
  %250 = icmp ugt i64 %249, 1152921504606846975
  br i1 %250, label %251, label %253

251:                                              ; preds = %243
  %252 = bitcast %"class.std::__1::vector.273"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %252) #13
  unreachable

253:                                              ; preds = %243
  %254 = sub i64 %236, %246
  %255 = ashr exact i64 %254, 4
  %256 = icmp ult i64 %255, 576460752303423487
  br i1 %256, label %257, label %265

257:                                              ; preds = %253
  %258 = ashr exact i64 %254, 3
  %259 = icmp ult i64 %258, %249
  %260 = select i1 %259, i64 %249, i64 %258
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %270, label %262

262:                                              ; preds = %257
  %263 = icmp ugt i64 %260, 1152921504606846975
  br i1 %263, label %264, label %265

264:                                              ; preds = %262
  call void @abort() #13
  unreachable

265:                                              ; preds = %262, %253
  %266 = phi i64 [ %260, %262 ], [ 1152921504606846975, %253 ]
  %267 = shl i64 %266, 4
  %268 = call i8* @_Znwm(i64 %267) #12
  %269 = bitcast i8* %268 to %"struct.ui::AXTreeObserver::Change"*
  br label %270

270:                                              ; preds = %265, %257
  %271 = phi i64 [ %266, %265 ], [ 0, %257 ]
  %272 = phi i8* [ %268, %265 ], [ null, %257 ]
  %273 = phi %"struct.ui::AXTreeObserver::Change"* [ %269, %265 ], [ null, %257 ]
  %274 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %273, i64 %248
  %275 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %273, i64 %271
  %276 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %275 to i64
  %277 = bitcast %"struct.ui::AXTreeObserver::Change"* %274 to i64*
  store i64 %232, i64* %277, align 8
  %278 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %273, i64 %248, i32 1
  store i32 2, i32* %278, align 8
  %279 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %274, i64 1
  %280 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %279 to i64
  %281 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %273 to i64
  %282 = icmp sgt i64 %247, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %270
  %284 = inttoptr i64 %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %284, i64 %247, i1 false) #11
  br label %285

285:                                              ; preds = %283, %270
  store i64 %281, i64* %43, align 16
  store i64 %280, i64* %245, align 8
  store i64 %276, i64* %42, align 16
  %286 = icmp eq i64 %246, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %285
  %288 = inttoptr i64 %246 to i8*
  call void @_ZdlPv(i8* %288) #12
  br label %289

289:                                              ; preds = %237, %285, %287
  %290 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %291 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %290, align 8
  %292 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %291, i64 0, i32 2
  %293 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %293) #11
  %294 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %295 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %296 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %292, i64 0, i32 0, i32 0, i32 0
  %298 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 -86, i64 40, i1 false)
  %299 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %297, align 8, !noalias !17
  %300 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %291, i64 0, i32 2, i32 0, i32 0, i32 1
  %301 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %300, align 8, !noalias !17
  %302 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %299, %301
  %303 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %303) #11
  br i1 %302, label %304, label %306

304:                                              ; preds = %289
  %305 = bitcast %"class.base::ObserverList"** %294 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 24, i1 false) #11, !alias.scope !17
  br label %320

306:                                              ; preds = %289
  store %"class.base::ObserverList"* %292, %"class.base::ObserverList"** %294, align 8, !alias.scope !17
  %307 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %291, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %303, %"class.base::internal::LinkNodeBase"* %307) #11
  store i64 0, i64* %295, align 8, !alias.scope !17
  %308 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %291, i64 0, i32 2, i32 3
  %309 = load i32, i32* %308, align 8, !noalias !17
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %318, label %311

311:                                              ; preds = %306
  %312 = bitcast %"class.base::internal::CheckedObserverAdapter"** %300 to i64*
  %313 = load i64, i64* %312, align 8, !noalias !17
  %314 = bitcast %"class.base::ObserverList"* %292 to i64*
  %315 = load i64, i64* %314, align 8, !noalias !17
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 4
  br label %318

318:                                              ; preds = %311, %306
  %319 = phi i64 [ %317, %311 ], [ -1, %306 ]
  store i64 %319, i64* %296, align 8, !alias.scope !17
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %320

320:                                              ; preds = %304, %318
  %321 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %321) #11
  %322 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %323 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %324 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %325 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %325) #11
  %327 = bitcast %"class.base::ObserverList"** %322 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %327, i8 0, i64 24, i1 false) #11, !alias.scope !20
  br label %333

328:                                              ; preds = %129, %328
  %329 = phi i64 [ %330, %328 ], [ 0, %129 ]
  tail call void @_ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm(%"class.ui::AXTableInfo"* %0, i64 %329)
  %330 = add nuw i64 %329, 1
  %331 = load i64, i64* %23, align 8
  %332 = icmp ult i64 %330, %331
  br i1 %332, label %328, label %199

333:                                              ; preds = %454, %320
  %334 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %294, align 8
  %335 = icmp eq %"class.base::ObserverList"* %334, null
  br i1 %335, label %351, label %336

336:                                              ; preds = %333
  %337 = load i64, i64* %295, align 8
  %338 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %334, i64 0, i32 0, i32 0, i32 1
  %339 = bitcast %"class.base::internal::CheckedObserverAdapter"** %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = bitcast %"class.base::ObserverList"* %334 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = sub i64 %340, %342
  %344 = ashr exact i64 %343, 4
  %345 = load i64, i64* %296, align 8
  %346 = icmp ult i64 %344, %345
  %347 = select i1 %346, i64 %344, i64 %345
  %348 = icmp eq i64 %337, %347
  br i1 %348, label %351, label %349

349:                                              ; preds = %336
  %350 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %322, align 8
  br label %367

351:                                              ; preds = %336, %333
  %352 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %322, align 8
  %353 = icmp eq %"class.base::ObserverList"* %352, null
  br i1 %353, label %402, label %354

354:                                              ; preds = %351
  %355 = load i64, i64* %323, align 8
  %356 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %352, i64 0, i32 0, i32 0, i32 1
  %357 = bitcast %"class.base::internal::CheckedObserverAdapter"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.base::ObserverList"* %352 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = sub i64 %358, %360
  %362 = ashr exact i64 %361, 4
  %363 = load i64, i64* %324, align 8
  %364 = icmp ult i64 %362, %363
  %365 = select i1 %364, i64 %362, i64 %363
  %366 = icmp eq i64 %355, %365
  br i1 %366, label %376, label %367

367:                                              ; preds = %354, %349
  %368 = phi %"class.base::ObserverList"* [ %350, %349 ], [ %352, %354 ]
  %369 = icmp eq %"class.base::ObserverList"* %334, %368
  %370 = load i64, i64* %295, align 8
  %371 = load i64, i64* %323, align 8
  %372 = icmp eq i64 %370, %371
  %373 = and i1 %369, %372
  br i1 %373, label %374, label %438

374:                                              ; preds = %367
  %375 = icmp eq %"class.base::ObserverList"* %334, null
  br i1 %375, label %402, label %376

376:                                              ; preds = %354, %374
  %377 = phi %"class.base::ObserverList"* [ %334, %374 ], [ %352, %354 ]
  %378 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 1
  %379 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 1, i32 0, i32 0, i32 1
  %380 = bitcast %"class.base::internal::LinkNodeBase"** %379 to %"class.base::LinkNode"**
  %381 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %380, align 8
  %382 = bitcast %"class.base::LinkedList"* %378 to %"class.base::LinkNode"**
  %383 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %382, align 8
  %384 = icmp eq %"class.base::LinkNode"* %381, %383
  br i1 %384, label %385, label %398

385:                                              ; preds = %376
  %386 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 0, i32 0, i32 0
  %387 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %386, align 8
  %388 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 0, i32 0, i32 1
  %389 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %388, align 8
  %390 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %387, %"class.base::internal::CheckedObserverAdapter"* %389) #11
  %391 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %388, align 8
  %392 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %390, %391
  br i1 %392, label %398, label %393

393:                                              ; preds = %385, %393
  %394 = phi %"class.base::internal::CheckedObserverAdapter"* [ %395, %393 ], [ %391, %385 ]
  %395 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %394, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %395) #11
  %396 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %395, %390
  br i1 %396, label %397, label %393

397:                                              ; preds = %393
  store %"class.base::internal::CheckedObserverAdapter"* %390, %"class.base::internal::CheckedObserverAdapter"** %388, align 8
  br label %398

398:                                              ; preds = %397, %385, %376
  %399 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %322, align 8
  %400 = icmp eq %"class.base::ObserverList"* %399, null
  br i1 %400, label %402, label %401

401:                                              ; preds = %398
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %322, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %325) #11
  br label %402

402:                                              ; preds = %351, %374, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %321) #11
  %403 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %294, align 8
  %404 = icmp eq %"class.base::ObserverList"* %403, null
  br i1 %404, label %430, label %405

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %403, i64 0, i32 1
  %407 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %403, i64 0, i32 1, i32 0, i32 0, i32 1
  %408 = bitcast %"class.base::internal::LinkNodeBase"** %407 to %"class.base::LinkNode"**
  %409 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %408, align 8
  %410 = bitcast %"class.base::LinkedList"* %406 to %"class.base::LinkNode"**
  %411 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %410, align 8
  %412 = icmp eq %"class.base::LinkNode"* %409, %411
  br i1 %412, label %413, label %426

413:                                              ; preds = %405
  %414 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %403, i64 0, i32 0, i32 0, i32 0
  %415 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %414, align 8
  %416 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %403, i64 0, i32 0, i32 0, i32 1
  %417 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %416, align 8
  %418 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %415, %"class.base::internal::CheckedObserverAdapter"* %417) #11
  %419 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %416, align 8
  %420 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %418, %419
  br i1 %420, label %426, label %421

421:                                              ; preds = %413, %421
  %422 = phi %"class.base::internal::CheckedObserverAdapter"* [ %423, %421 ], [ %419, %413 ]
  %423 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %422, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %423) #11
  %424 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %423, %418
  br i1 %424, label %425, label %421

425:                                              ; preds = %421
  store %"class.base::internal::CheckedObserverAdapter"* %418, %"class.base::internal::CheckedObserverAdapter"** %416, align 8
  br label %426

426:                                              ; preds = %425, %413, %405
  %427 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %294, align 8
  %428 = icmp eq %"class.base::ObserverList"* %427, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %426
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %294, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %303) #11
  br label %430

430:                                              ; preds = %402, %426, %429
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %293) #11
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %201) #11
  %431 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %38, align 16
  %432 = icmp eq %"struct.ui::AXTreeObserver::Change"* %431, null
  br i1 %432, label %437, label %433

433:                                              ; preds = %430
  %434 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %431 to i64
  %435 = bitcast %"struct.ui::AXTreeObserver::Change"** %39 to i64*
  store i64 %434, i64* %435, align 8
  %436 = bitcast %"struct.ui::AXTreeObserver::Change"* %431 to i8*
  call void @_ZdlPv(i8* %436) #12
  br label %437

437:                                              ; preds = %430, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  ret void

438:                                              ; preds = %367
  %439 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %334, i64 0, i32 0, i32 0, i32 0
  %440 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %439, align 8
  %441 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %440, i64 %370, i32 0, i32 0, i32 0
  %442 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %441) #11
  %443 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %440, i64 %370, i32 0, i32 0, i32 1
  %444 = bitcast i64* %443 to %"class.ui::AXTreeObserver"**
  %445 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %444, align 8
  %446 = select i1 %442, %"class.ui::AXTreeObserver"* %445, %"class.ui::AXTreeObserver"* null
  %447 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %290, align 8
  %448 = bitcast %"class.ui::AXTreeObserver"* %446 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)***
  %449 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*** %448, align 8
  %450 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)** %449, i64 22
  %451 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)** %450, align 8
  call void %451(%"class.ui::AXTreeObserver"* %446, %"class.ui::AXTree"* %447, i1 zeroext false, %"class.std::__1::vector.273"* nonnull dereferenceable(24) %2) #11
  %452 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %294, align 8
  %453 = icmp eq %"class.base::ObserverList"* %452, null
  br i1 %453, label %454, label %455

454:                                              ; preds = %438, %455
  br label %333

455:                                              ; preds = %438
  %456 = load i64, i64* %295, align 8
  %457 = add i64 %456, 1
  store i64 %457, i64* %295, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %454
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo18ClearExtraMacNodesEv(%"class.ui::AXTableInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"** %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = ptrtoint %"class.ui::AXNode"** %8 to i64
  br label %47

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %16 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  %17 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %20 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::ObserverList"** %17 to i8*
  %22 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  %23 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %26 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::ObserverList"** %23 to i8*
  %28 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  %29 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %32 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::ObserverList"** %29 to i8*
  %34 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  %35 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %38 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::ObserverList"** %35 to i8*
  %40 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  %41 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  %42 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  %43 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  br label %50

44:                                               ; preds = %323
  %45 = bitcast %"class.std::__1::vector.10"* %6 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %12, %44
  %48 = phi i64 [ %46, %44 ], [ %13, %12 ]
  %49 = bitcast %"class.ui::AXNode"*** %9 to i64*
  store i64 %48, i64* %49, align 8
  ret void

50:                                               ; preds = %14, %323
  %51 = phi %"class.ui::AXNode"** [ %8, %14 ], [ %324, %323 ]
  %52 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %51, align 8
  %53 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %15, align 8
  %54 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %53, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %55 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %54, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %55, align 8, !noalias !23
  %57 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %53, i64 0, i32 2, i32 0, i32 0, i32 1
  %58 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %57, align 8, !noalias !23
  %59 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %58
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br i1 %59, label %60, label %61

60:                                               ; preds = %50
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11, !alias.scope !23
  br label %75

61:                                               ; preds = %50
  store %"class.base::ObserverList"* %54, %"class.base::ObserverList"** %17, align 8, !alias.scope !23
  %62 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %53, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %62) #11
  store i64 0, i64* %18, align 8, !alias.scope !23
  %63 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %53, i64 0, i32 2, i32 3
  %64 = load i32, i32* %63, align 8, !noalias !23
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.base::internal::CheckedObserverAdapter"** %57 to i64*
  %68 = load i64, i64* %67, align 8, !noalias !23
  %69 = bitcast %"class.base::ObserverList"* %54 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !23
  %71 = sub i64 %68, %70
  %72 = ashr exact i64 %71, 4
  br label %73

73:                                               ; preds = %66, %61
  %74 = phi i64 [ %72, %66 ], [ -1, %61 ]
  store i64 %74, i64* %19, align 8, !alias.scope !23
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #11
  br label %75

75:                                               ; preds = %60, %73
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11, !alias.scope !26
  br label %76

76:                                               ; preds = %193, %75
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %78 = icmp eq %"class.base::ObserverList"* %77, null
  br i1 %78, label %94, label %79

79:                                               ; preds = %76
  %80 = load i64, i64* %18, align 8
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %77, i64 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.base::internal::CheckedObserverAdapter"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::ObserverList"* %77 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 4
  %88 = load i64, i64* %19, align 8
  %89 = icmp ult i64 %87, %88
  %90 = select i1 %89, i64 %87, i64 %88
  %91 = icmp eq i64 %80, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %79
  %93 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  br label %110

94:                                               ; preds = %79, %76
  %95 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %96 = icmp eq %"class.base::ObserverList"* %95, null
  br i1 %96, label %145, label %97

97:                                               ; preds = %94
  %98 = load i64, i64* %24, align 8
  %99 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %95, i64 0, i32 0, i32 0, i32 1
  %100 = bitcast %"class.base::internal::CheckedObserverAdapter"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::ObserverList"* %95 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = ashr exact i64 %104, 4
  %106 = load i64, i64* %25, align 8
  %107 = icmp ult i64 %105, %106
  %108 = select i1 %107, i64 %105, i64 %106
  %109 = icmp eq i64 %98, %108
  br i1 %109, label %119, label %110

110:                                              ; preds = %97, %92
  %111 = phi %"class.base::ObserverList"* [ %93, %92 ], [ %95, %97 ]
  %112 = icmp eq %"class.base::ObserverList"* %77, %111
  %113 = load i64, i64* %18, align 8
  %114 = load i64, i64* %24, align 8
  %115 = icmp eq i64 %113, %114
  %116 = and i1 %112, %115
  br i1 %116, label %117, label %177

117:                                              ; preds = %110
  %118 = icmp eq %"class.base::ObserverList"* %77, null
  br i1 %118, label %145, label %119

119:                                              ; preds = %97, %117
  %120 = phi %"class.base::ObserverList"* [ %77, %117 ], [ %95, %97 ]
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %120, i64 0, i32 1
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %120, i64 0, i32 1, i32 0, i32 0, i32 1
  %123 = bitcast %"class.base::internal::LinkNodeBase"** %122 to %"class.base::LinkNode"**
  %124 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %123, align 8
  %125 = bitcast %"class.base::LinkedList"* %121 to %"class.base::LinkNode"**
  %126 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %125, align 8
  %127 = icmp eq %"class.base::LinkNode"* %124, %126
  br i1 %127, label %128, label %141

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %120, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %129, align 8
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %120, i64 0, i32 0, i32 0, i32 1
  %132 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %131, align 8
  %133 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %130, %"class.base::internal::CheckedObserverAdapter"* %132) #11
  %134 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %131, align 8
  %135 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %133, %134
  br i1 %135, label %141, label %136

136:                                              ; preds = %128, %136
  %137 = phi %"class.base::internal::CheckedObserverAdapter"* [ %138, %136 ], [ %134, %128 ]
  %138 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %137, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %138) #11
  %139 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %138, %133
  br i1 %139, label %140, label %136

140:                                              ; preds = %136
  store %"class.base::internal::CheckedObserverAdapter"* %133, %"class.base::internal::CheckedObserverAdapter"** %131, align 8
  br label %141

141:                                              ; preds = %140, %128, %119
  %142 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %143 = icmp eq %"class.base::ObserverList"* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %23, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %26) #11
  br label %145

145:                                              ; preds = %94, %117, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  %146 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %147 = icmp eq %"class.base::ObserverList"* %146, null
  br i1 %147, label %173, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 1
  %150 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 1, i32 0, i32 0, i32 1
  %151 = bitcast %"class.base::internal::LinkNodeBase"** %150 to %"class.base::LinkNode"**
  %152 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %151, align 8
  %153 = bitcast %"class.base::LinkedList"* %149 to %"class.base::LinkNode"**
  %154 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %153, align 8
  %155 = icmp eq %"class.base::LinkNode"* %152, %154
  br i1 %155, label %156, label %169

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %157, align 8
  %159 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 0, i32 0, i32 1
  %160 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %159, align 8
  %161 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %158, %"class.base::internal::CheckedObserverAdapter"* %160) #11
  %162 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %159, align 8
  %163 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %161, %162
  br i1 %163, label %169, label %164

164:                                              ; preds = %156, %164
  %165 = phi %"class.base::internal::CheckedObserverAdapter"* [ %166, %164 ], [ %162, %156 ]
  %166 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %165, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %166) #11
  %167 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %166, %161
  br i1 %167, label %168, label %164

168:                                              ; preds = %164
  store %"class.base::internal::CheckedObserverAdapter"* %161, %"class.base::internal::CheckedObserverAdapter"** %159, align 8
  br label %169

169:                                              ; preds = %168, %156, %148
  %170 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %171 = icmp eq %"class.base::ObserverList"* %170, null
  br i1 %171, label %173, label %172

172:                                              ; preds = %169
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %17, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br label %173

173:                                              ; preds = %145, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  %174 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %52, i64 0, i32 7, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq %"class.ui::AXNode"* %52, null
  br i1 %176, label %202, label %197

177:                                              ; preds = %110
  %178 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %77, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %178, align 8
  %180 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %179, i64 %113, i32 0, i32 0, i32 0
  %181 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %180) #11
  %182 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %179, i64 %113, i32 0, i32 0, i32 1
  %183 = bitcast i64* %182 to %"class.ui::AXTreeObserver"**
  %184 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %183, align 8
  %185 = select i1 %181, %"class.ui::AXTreeObserver"* %184, %"class.ui::AXTreeObserver"* null
  %186 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %15, align 8
  %187 = bitcast %"class.ui::AXTreeObserver"* %185 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)***
  %188 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %188, i64 13
  %190 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %189, align 8
  call void %190(%"class.ui::AXTreeObserver"* %185, %"class.ui::AXTree"* %186, %"class.ui::AXNode"* %52) #11
  %191 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %192 = icmp eq %"class.base::ObserverList"* %191, null
  br i1 %192, label %193, label %194

193:                                              ; preds = %177, %194
  br label %76

194:                                              ; preds = %177
  %195 = load i64, i64* %18, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %18, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #11
  br label %193

197:                                              ; preds = %173
  %198 = bitcast %"class.ui::AXNode"* %52 to void (%"class.ui::AXNode"*)***
  %199 = load void (%"class.ui::AXNode"*)**, void (%"class.ui::AXNode"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.ui::AXNode"*)*, void (%"class.ui::AXNode"*)** %199, i64 1
  %201 = load void (%"class.ui::AXNode"*)*, void (%"class.ui::AXNode"*)** %200, align 8
  call void %201(%"class.ui::AXNode"* nonnull %52) #11
  br label %202

202:                                              ; preds = %197, %173
  %203 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %15, align 8
  %204 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %203, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #11
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 40, i1 false)
  %206 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %205, align 8, !noalias !29
  %207 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %203, i64 0, i32 2, i32 0, i32 0, i32 1
  %208 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %207, align 8, !noalias !29
  %209 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %206, %208
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %32) #11
  br i1 %209, label %210, label %211

210:                                              ; preds = %202
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11, !alias.scope !29
  br label %225

211:                                              ; preds = %202
  store %"class.base::ObserverList"* %204, %"class.base::ObserverList"** %29, align 8, !alias.scope !29
  %212 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %203, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %32, %"class.base::internal::LinkNodeBase"* %212) #11
  store i64 0, i64* %30, align 8, !alias.scope !29
  %213 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %203, i64 0, i32 2, i32 3
  %214 = load i32, i32* %213, align 8, !noalias !29
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %223, label %216

216:                                              ; preds = %211
  %217 = bitcast %"class.base::internal::CheckedObserverAdapter"** %207 to i64*
  %218 = load i64, i64* %217, align 8, !noalias !29
  %219 = bitcast %"class.base::ObserverList"* %204 to i64*
  %220 = load i64, i64* %219, align 8, !noalias !29
  %221 = sub i64 %218, %220
  %222 = ashr exact i64 %221, 4
  br label %223

223:                                              ; preds = %216, %211
  %224 = phi i64 [ %222, %216 ], [ -1, %211 ]
  store i64 %224, i64* %31, align 8, !alias.scope !29
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %225

225:                                              ; preds = %210, %223
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %38) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #11, !alias.scope !32
  br label %226

226:                                              ; preds = %342, %225
  %227 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %29, align 8
  %228 = icmp eq %"class.base::ObserverList"* %227, null
  br i1 %228, label %244, label %229

229:                                              ; preds = %226
  %230 = load i64, i64* %30, align 8
  %231 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %227, i64 0, i32 0, i32 0, i32 1
  %232 = bitcast %"class.base::internal::CheckedObserverAdapter"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.base::ObserverList"* %227 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = sub i64 %233, %235
  %237 = ashr exact i64 %236, 4
  %238 = load i64, i64* %31, align 8
  %239 = icmp ult i64 %237, %238
  %240 = select i1 %239, i64 %237, i64 %238
  %241 = icmp eq i64 %230, %240
  br i1 %241, label %244, label %242

242:                                              ; preds = %229
  %243 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  br label %260

244:                                              ; preds = %229, %226
  %245 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %246 = icmp eq %"class.base::ObserverList"* %245, null
  br i1 %246, label %295, label %247

247:                                              ; preds = %244
  %248 = load i64, i64* %36, align 8
  %249 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %245, i64 0, i32 0, i32 0, i32 1
  %250 = bitcast %"class.base::internal::CheckedObserverAdapter"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.base::ObserverList"* %245 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %251, %253
  %255 = ashr exact i64 %254, 4
  %256 = load i64, i64* %37, align 8
  %257 = icmp ult i64 %255, %256
  %258 = select i1 %257, i64 %255, i64 %256
  %259 = icmp eq i64 %248, %258
  br i1 %259, label %269, label %260

260:                                              ; preds = %247, %242
  %261 = phi %"class.base::ObserverList"* [ %243, %242 ], [ %245, %247 ]
  %262 = icmp eq %"class.base::ObserverList"* %227, %261
  %263 = load i64, i64* %30, align 8
  %264 = load i64, i64* %36, align 8
  %265 = icmp eq i64 %263, %264
  %266 = and i1 %262, %265
  br i1 %266, label %267, label %326

267:                                              ; preds = %260
  %268 = icmp eq %"class.base::ObserverList"* %227, null
  br i1 %268, label %295, label %269

269:                                              ; preds = %247, %267
  %270 = phi %"class.base::ObserverList"* [ %227, %267 ], [ %245, %247 ]
  %271 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %270, i64 0, i32 1
  %272 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %270, i64 0, i32 1, i32 0, i32 0, i32 1
  %273 = bitcast %"class.base::internal::LinkNodeBase"** %272 to %"class.base::LinkNode"**
  %274 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %273, align 8
  %275 = bitcast %"class.base::LinkedList"* %271 to %"class.base::LinkNode"**
  %276 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %275, align 8
  %277 = icmp eq %"class.base::LinkNode"* %274, %276
  br i1 %277, label %278, label %291

278:                                              ; preds = %269
  %279 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %270, i64 0, i32 0, i32 0, i32 0
  %280 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %279, align 8
  %281 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %270, i64 0, i32 0, i32 0, i32 1
  %282 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %281, align 8
  %283 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %280, %"class.base::internal::CheckedObserverAdapter"* %282) #11
  %284 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %281, align 8
  %285 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %283, %284
  br i1 %285, label %291, label %286

286:                                              ; preds = %278, %286
  %287 = phi %"class.base::internal::CheckedObserverAdapter"* [ %288, %286 ], [ %284, %278 ]
  %288 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %287, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %288) #11
  %289 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %288, %283
  br i1 %289, label %290, label %286

290:                                              ; preds = %286
  store %"class.base::internal::CheckedObserverAdapter"* %283, %"class.base::internal::CheckedObserverAdapter"** %281, align 8
  br label %291

291:                                              ; preds = %290, %278, %269
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %35, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %38) #11
  br label %295

295:                                              ; preds = %244, %267, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #11
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %29, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %323, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %296, i64 0, i32 1
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %296, i64 0, i32 1, i32 0, i32 0, i32 1
  %301 = bitcast %"class.base::internal::LinkNodeBase"** %300 to %"class.base::LinkNode"**
  %302 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %301, align 8
  %303 = bitcast %"class.base::LinkedList"* %299 to %"class.base::LinkNode"**
  %304 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %303, align 8
  %305 = icmp eq %"class.base::LinkNode"* %302, %304
  br i1 %305, label %306, label %319

306:                                              ; preds = %298
  %307 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %296, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %307, align 8
  %309 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %296, i64 0, i32 0, i32 0, i32 1
  %310 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %309, align 8
  %311 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %308, %"class.base::internal::CheckedObserverAdapter"* %310) #11
  %312 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %309, align 8
  %313 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %311, %312
  br i1 %313, label %319, label %314

314:                                              ; preds = %306, %314
  %315 = phi %"class.base::internal::CheckedObserverAdapter"* [ %316, %314 ], [ %312, %306 ]
  %316 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %315, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %316) #11
  %317 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %316, %311
  br i1 %317, label %318, label %314

318:                                              ; preds = %314
  store %"class.base::internal::CheckedObserverAdapter"* %311, %"class.base::internal::CheckedObserverAdapter"** %309, align 8
  br label %319

319:                                              ; preds = %318, %306, %298
  %320 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %29, align 8
  %321 = icmp eq %"class.base::ObserverList"* %320, null
  br i1 %321, label %323, label %322

322:                                              ; preds = %319
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %29, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %32) #11
  br label %323

323:                                              ; preds = %295, %319, %322
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #11
  %324 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %51, i64 1
  %325 = icmp eq %"class.ui::AXNode"** %324, %10
  br i1 %325, label %44, label %50

326:                                              ; preds = %260
  %327 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %227, i64 0, i32 0, i32 0, i32 0
  %328 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %327, align 8
  %329 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %328, i64 %263, i32 0, i32 0, i32 0
  %330 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %329) #11
  %331 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %328, i64 %263, i32 0, i32 0, i32 1
  %332 = bitcast i64* %331 to %"class.ui::AXTreeObserver"**
  %333 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %332, align 8
  %334 = select i1 %330, %"class.ui::AXTreeObserver"* %333, %"class.ui::AXTreeObserver"* null
  %335 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %15, align 8
  %336 = bitcast %"class.ui::AXTreeObserver"* %334 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)***
  %337 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)** %337, i64 18
  %339 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)** %338, align 8
  call void %339(%"class.ui::AXTreeObserver"* %334, %"class.ui::AXTree"* %335, i32 %175) #11
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %29, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %342, label %343

342:                                              ; preds = %326, %343
  br label %226

343:                                              ; preds = %326
  %344 = load i64, i64* %30, align 8
  %345 = add i64 %344, 1
  store i64 %345, i64* %30, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %342
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.ui::AXNode"* @_ZN2ui11AXTableInfo24CreateExtraMacColumnNodeEm(%"class.ui::AXTableInfo"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %7 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %6, align 8
  %8 = tail call i32 @_ZN2ui6AXTree29GetNextNegativeInternalNodeIdEv(%"class.ui::AXTree"* %7) #11
  %9 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 6
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.ui::AXNode"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.10"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = add i64 %18, %1
  %20 = tail call i64 @_ZNK2ui6AXNode22GetUnignoredChildCountEv(%"class.ui::AXNode"* %10) #11
  %21 = add i64 %20, %1
  %22 = tail call i8* @_Znwm(i64 456) #12
  %23 = bitcast i8* %22 to %"class.ui::AXNode"*
  %24 = bitcast %"class.ui::AXTree"** %6 to %"class.ui::AXNode::OwnerTree"**
  %25 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %24, align 8
  %26 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %27 = shl i64 %21, 32
  %28 = ashr exact i64 %27, 32
  tail call void @_ZN2ui6AXNodeC1EPNS0_9OwnerTreeEPS0_imm(%"class.ui::AXNode"* nonnull %23, %"class.ui::AXNode::OwnerTree"* %25, %"class.ui::AXNode"* %26, i32 %8, i64 %19, i64 %28) #11
  %29 = bitcast %"struct.ui::AXNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %29) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm.data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %3) #11
  %30 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 1
  store i32 %8, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 2
  store i32 19, i32* %31, align 4
  call void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"* nonnull %23, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %3) #11
  %32 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %6, align 8
  %33 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %32, i64 0, i32 2
  %34 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  %40 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %38, align 8, !noalias !35
  %41 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %32, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %41, align 8, !noalias !35
  %43 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %40, %42
  %44 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %44) #11
  br i1 %43, label %45, label %47

45:                                               ; preds = %2
  %46 = bitcast %"class.base::ObserverList"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11, !alias.scope !35
  br label %61

47:                                               ; preds = %2
  store %"class.base::ObserverList"* %33, %"class.base::ObserverList"** %35, align 8, !alias.scope !35
  %48 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %32, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %44, %"class.base::internal::LinkNodeBase"* %48) #11
  store i64 0, i64* %36, align 8, !alias.scope !35
  %49 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %32, i64 0, i32 2, i32 3
  %50 = load i32, i32* %49, align 8, !noalias !35
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.base::internal::CheckedObserverAdapter"** %41 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !35
  %55 = bitcast %"class.base::ObserverList"* %33 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !35
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 4
  br label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %58, %52 ], [ -1, %47 ]
  store i64 %60, i64* %37, align 8, !alias.scope !35
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %61

61:                                               ; preds = %45, %59
  %62 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %66 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #11
  %68 = bitcast %"class.base::ObserverList"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11, !alias.scope !38
  br label %69

69:                                               ; preds = %183, %61
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %36, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::CheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 4
  %81 = load i64, i64* %37, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %138, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %64, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::CheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 4
  %99 = load i64, i64* %65, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %36, align 8
  %107 = load i64, i64* %64, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %167

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %111, label %138, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %134

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  %126 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %123, %"class.base::internal::CheckedObserverAdapter"* %125) #11
  %127 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  %128 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %126, %127
  br i1 %128, label %134, label %129

129:                                              ; preds = %121, %129
  %130 = phi %"class.base::internal::CheckedObserverAdapter"* [ %131, %129 ], [ %127, %121 ]
  %131 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %130, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %131) #11
  %132 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %131, %126
  br i1 %132, label %133, label %129

133:                                              ; preds = %129
  store %"class.base::internal::CheckedObserverAdapter"* %126, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  br label %134

134:                                              ; preds = %133, %121, %112
  %135 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %136 = icmp eq %"class.base::ObserverList"* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %63, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #11
  br label %138

138:                                              ; preds = %87, %110, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #11
  %139 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %140 = icmp eq %"class.base::ObserverList"* %139, null
  br i1 %140, label %166, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %139, i64 0, i32 1
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %139, i64 0, i32 1, i32 0, i32 0, i32 1
  %144 = bitcast %"class.base::internal::LinkNodeBase"** %143 to %"class.base::LinkNode"**
  %145 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %144, align 8
  %146 = bitcast %"class.base::LinkedList"* %142 to %"class.base::LinkNode"**
  %147 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %146, align 8
  %148 = icmp eq %"class.base::LinkNode"* %145, %147
  br i1 %148, label %149, label %162

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %139, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %150, align 8
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %139, i64 0, i32 0, i32 0, i32 1
  %153 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %152, align 8
  %154 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %151, %"class.base::internal::CheckedObserverAdapter"* %153) #11
  %155 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %152, align 8
  %156 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %154, %155
  br i1 %156, label %162, label %157

157:                                              ; preds = %149, %157
  %158 = phi %"class.base::internal::CheckedObserverAdapter"* [ %159, %157 ], [ %155, %149 ]
  %159 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %158, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %159) #11
  %160 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %159, %154
  br i1 %160, label %161, label %157

161:                                              ; preds = %157
  store %"class.base::internal::CheckedObserverAdapter"* %154, %"class.base::internal::CheckedObserverAdapter"** %152, align 8
  br label %162

162:                                              ; preds = %161, %149, %141
  %163 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %164 = icmp eq %"class.base::ObserverList"* %163, null
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %35, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %44) #11
  br label %166

166:                                              ; preds = %138, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #11
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %29) #11
  ret %"class.ui::AXNode"* %23

167:                                              ; preds = %103
  %168 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %168, align 8
  %170 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %169, i64 %106, i32 0, i32 0, i32 0
  %171 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %170) #11
  %172 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %169, i64 %106, i32 0, i32 0, i32 1
  %173 = bitcast i64* %172 to %"class.ui::AXTreeObserver"**
  %174 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %173, align 8
  %175 = select i1 %171, %"class.ui::AXTreeObserver"* %174, %"class.ui::AXTreeObserver"* null
  %176 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %6, align 8
  %177 = bitcast %"class.ui::AXTreeObserver"* %175 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)***
  %178 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %178, i64 17
  %180 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %179, align 8
  call void %180(%"class.ui::AXTreeObserver"* %175, %"class.ui::AXTree"* %176, %"class.ui::AXNode"* nonnull %23) #11
  %181 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %182 = icmp eq %"class.base::ObserverList"* %181, null
  br i1 %182, label %183, label %184

183:                                              ; preds = %167, %184
  br label %69

184:                                              ; preds = %167
  %185 = load i64, i64* %36, align 8
  %186 = add i64 %185, 1
  store i64 %186, i64* %36, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %183
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.ui::AXNode"* @_ZN2ui11AXTableInfo29CreateExtraMacTableHeaderNodeEv(%"class.ui::AXTableInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %6 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %5, align 8
  %7 = tail call i32 @_ZN2ui6AXTree29GetNextNegativeInternalNodeIdEv(%"class.ui::AXTree"* %6) #11
  %8 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 6
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"class.ui::AXNode"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.10"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = add i64 %19, %9
  %21 = tail call i64 @_ZNK2ui6AXNode22GetUnignoredChildCountEv(%"class.ui::AXNode"* %11) #11
  %22 = add i64 %21, %9
  %23 = tail call i8* @_Znwm(i64 456) #12
  %24 = bitcast i8* %23 to %"class.ui::AXNode"*
  %25 = bitcast %"class.ui::AXTree"** %5 to %"class.ui::AXNode::OwnerTree"**
  %26 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %25, align 8
  %27 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %28 = shl i64 %22, 32
  %29 = ashr exact i64 %28, 32
  tail call void @_ZN2ui6AXNodeC1EPNS0_9OwnerTreeEPS0_imm(%"class.ui::AXNode"* nonnull %24, %"class.ui::AXNode::OwnerTree"* %26, %"class.ui::AXNode"* %27, i32 %7, i64 %20, i64 %29) #11
  %30 = bitcast %"struct.ui::AXNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm.data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %2) #11
  %31 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 1
  store i32 %7, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  store i32 169, i32* %32, align 4
  call void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"* nonnull %24, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %2) #11
  %33 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %5, align 8
  %34 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %33, i64 0, i32 2
  %35 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %39 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %41 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %39, align 8, !noalias !41
  %42 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %33, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8, !noalias !41
  %44 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %41, %43
  %45 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %45) #11
  br i1 %44, label %46, label %48

46:                                               ; preds = %1
  %47 = bitcast %"class.base::ObserverList"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #11, !alias.scope !41
  br label %62

48:                                               ; preds = %1
  store %"class.base::ObserverList"* %34, %"class.base::ObserverList"** %36, align 8, !alias.scope !41
  %49 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %33, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %45, %"class.base::internal::LinkNodeBase"* %49) #11
  store i64 0, i64* %37, align 8, !alias.scope !41
  %50 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %33, i64 0, i32 2, i32 3
  %51 = load i32, i32* %50, align 8, !noalias !41
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.base::internal::CheckedObserverAdapter"** %42 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !41
  %56 = bitcast %"class.base::ObserverList"* %34 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !41
  %58 = sub i64 %55, %57
  %59 = ashr exact i64 %58, 4
  br label %60

60:                                               ; preds = %53, %48
  %61 = phi i64 [ %59, %53 ], [ -1, %48 ]
  store i64 %61, i64* %38, align 8, !alias.scope !41
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #11
  br label %62

62:                                               ; preds = %46, %60
  %63 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #11
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11, !alias.scope !44
  br label %70

70:                                               ; preds = %184, %62
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %72 = icmp eq %"class.base::ObserverList"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %70
  %74 = load i64, i64* %37, align 8
  %75 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.base::internal::CheckedObserverAdapter"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.base::ObserverList"* %71 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 4
  %82 = load i64, i64* %38, align 8
  %83 = icmp ult i64 %81, %82
  %84 = select i1 %83, i64 %81, i64 %82
  %85 = icmp eq i64 %74, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %73
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %104

88:                                               ; preds = %73, %70
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %90 = icmp eq %"class.base::ObserverList"* %89, null
  br i1 %90, label %139, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %65, align 8
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %89, i64 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.base::internal::CheckedObserverAdapter"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::ObserverList"* %89 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 4
  %100 = load i64, i64* %66, align 8
  %101 = icmp ult i64 %99, %100
  %102 = select i1 %101, i64 %99, i64 %100
  %103 = icmp eq i64 %92, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %91, %86
  %105 = phi %"class.base::ObserverList"* [ %87, %86 ], [ %89, %91 ]
  %106 = icmp eq %"class.base::ObserverList"* %71, %105
  %107 = load i64, i64* %37, align 8
  %108 = load i64, i64* %65, align 8
  %109 = icmp eq i64 %107, %108
  %110 = and i1 %106, %109
  br i1 %110, label %111, label %168

111:                                              ; preds = %104
  %112 = icmp eq %"class.base::ObserverList"* %71, null
  br i1 %112, label %139, label %113

113:                                              ; preds = %91, %111
  %114 = phi %"class.base::ObserverList"* [ %71, %111 ], [ %89, %91 ]
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1, i32 0, i32 0, i32 1
  %117 = bitcast %"class.base::internal::LinkNodeBase"** %116 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = bitcast %"class.base::LinkedList"* %115 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = icmp eq %"class.base::LinkNode"* %118, %120
  br i1 %121, label %122, label %135

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %123, align 8
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 1
  %126 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %125, align 8
  %127 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %124, %"class.base::internal::CheckedObserverAdapter"* %126) #11
  %128 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %125, align 8
  %129 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %127, %128
  br i1 %129, label %135, label %130

130:                                              ; preds = %122, %130
  %131 = phi %"class.base::internal::CheckedObserverAdapter"* [ %132, %130 ], [ %128, %122 ]
  %132 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %131, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %132) #11
  %133 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %132, %127
  br i1 %133, label %134, label %130

134:                                              ; preds = %130
  store %"class.base::internal::CheckedObserverAdapter"* %127, %"class.base::internal::CheckedObserverAdapter"** %125, align 8
  br label %135

135:                                              ; preds = %134, %122, %113
  %136 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %137 = icmp eq %"class.base::ObserverList"* %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #11
  br label %139

139:                                              ; preds = %88, %111, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #11
  %140 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %141 = icmp eq %"class.base::ObserverList"* %140, null
  br i1 %141, label %167, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 1
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 1, i32 0, i32 0, i32 1
  %145 = bitcast %"class.base::internal::LinkNodeBase"** %144 to %"class.base::LinkNode"**
  %146 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %145, align 8
  %147 = bitcast %"class.base::LinkedList"* %143 to %"class.base::LinkNode"**
  %148 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %147, align 8
  %149 = icmp eq %"class.base::LinkNode"* %146, %148
  br i1 %149, label %150, label %163

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %151, align 8
  %153 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 0, i32 0, i32 1
  %154 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %153, align 8
  %155 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %152, %"class.base::internal::CheckedObserverAdapter"* %154) #11
  %156 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %153, align 8
  %157 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %155, %156
  br i1 %157, label %163, label %158

158:                                              ; preds = %150, %158
  %159 = phi %"class.base::internal::CheckedObserverAdapter"* [ %160, %158 ], [ %156, %150 ]
  %160 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %159, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %160) #11
  %161 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %160, %155
  br i1 %161, label %162, label %158

162:                                              ; preds = %158
  store %"class.base::internal::CheckedObserverAdapter"* %155, %"class.base::internal::CheckedObserverAdapter"** %153, align 8
  br label %163

163:                                              ; preds = %162, %150, %142
  %164 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %165 = icmp eq %"class.base::ObserverList"* %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %163
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %36, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %45) #11
  br label %167

167:                                              ; preds = %139, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %30) #11
  ret %"class.ui::AXNode"* %24

168:                                              ; preds = %104
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %169, align 8
  %171 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %170, i64 %107, i32 0, i32 0, i32 0
  %172 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %171) #11
  %173 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %170, i64 %107, i32 0, i32 0, i32 1
  %174 = bitcast i64* %173 to %"class.ui::AXTreeObserver"**
  %175 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %174, align 8
  %176 = select i1 %172, %"class.ui::AXTreeObserver"* %175, %"class.ui::AXTreeObserver"* null
  %177 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %5, align 8
  %178 = bitcast %"class.ui::AXTreeObserver"* %176 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)***
  %179 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %179, i64 17
  %181 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)** %180, align 8
  call void %181(%"class.ui::AXTreeObserver"* %176, %"class.ui::AXTree"* %177, %"class.ui::AXNode"* nonnull %24) #11
  %182 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %183 = icmp eq %"class.base::ObserverList"* %182, null
  br i1 %183, label %184, label %185

184:                                              ; preds = %168, %185
  br label %70

185:                                              ; preds = %168
  %186 = load i64, i64* %37, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %37, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #11
  br label %184
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm(%"class.ui::AXTableInfo"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = alloca %"class.std::__1::vector.0", align 8
  %5 = bitcast %"struct.ui::AXNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.0", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN2ui11AXTableInfo34UpdateExtraMacColumnNodeAttributesEm.data to i8*), i64 264, i1 false)
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %1
  %9 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %3, %"struct.ui::AXNodeData"* dereferenceable(264) %10) #11
  %11 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector.24"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 6, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.26"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = trunc i64 %1 to i32
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* nonnull %3, i32 21, i32 %16) #11
  %17 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %18, i64 %1, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %18, i64 %1, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %20, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = load i32, i32* %20, align 4
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* nonnull %3, i32 22, i32 %25) #11
  br label %26

26:                                               ; preds = %24, %2
  %27 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 9, i32 0, i32 0
  %28 = load %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"** %27, align 8
  %29 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 9, i32 0, i32 1
  %30 = load %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair.50"* %30, %28
  br i1 %31, label %45, label %32

32:                                               ; preds = %26, %43
  %33 = phi %"struct.std::__1::pair.50"* [ %34, %43 ], [ %30, %26 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %33, i64 -1
  %35 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %33, i64 -1, i32 1, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = ptrtoint i32* %36 to i64
  %40 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %33, i64 -1, i32 1, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast i32* %36 to i8*
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %38, %32
  %44 = icmp eq %"struct.std::__1::pair.50"* %34, %28
  br i1 %44, label %45, label %32

45:                                               ; preds = %43, %26
  store %"struct.std::__1::pair.50"* %28, %"struct.std::__1::pair.50"** %29, align 8
  %46 = bitcast %"class.std::__1::vector.0"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = bitcast i32** %48 to i64*
  %56 = bitcast %"class.std::__1::vector.0"* %4 to i64*
  %57 = bitcast i32** %49 to i64*
  br label %69

58:                                               ; preds = %131, %45
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* nonnull %3, i32 1, %"class.std::__1::vector.0"* nonnull dereferenceable(24) %4) #11
  %59 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %6, align 8
  %60 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %59, i64 %1
  %61 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %60, align 8
  call void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"* %61, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %3) #11
  %62 = load i32*, i32** %47, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %58
  %65 = ptrtoint i32* %62 to i64
  %66 = bitcast i32** %48 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast i32* %62 to i8*
  call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #11
  ret void

69:                                               ; preds = %53, %131
  %70 = phi i64 [ 0, %53 ], [ %132, %131 ]
  %71 = phi i32 [ 0, %53 ], [ %76, %131 ]
  %72 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %54, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %72, i64 %70, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  %78 = icmp eq i32 %76, %71
  %79 = or i1 %77, %78
  br i1 %79, label %131, label %80

80:                                               ; preds = %69
  %81 = load i32*, i32** %48, align 8
  %82 = load i32*, i32** %49, align 8
  %83 = icmp eq i32* %81, %82
  %84 = ptrtoint i32* %82 to i64
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  store i32 %76, i32* %81, align 4
  %86 = getelementptr inbounds i32, i32* %81, i64 1
  %87 = ptrtoint i32* %86 to i64
  store i64 %87, i64* %55, align 8
  br label %131

88:                                               ; preds = %80
  %89 = ptrtoint i32* %81 to i64
  %90 = load i64, i64* %56, align 8
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 4611686018427387903
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::vector.0"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %96) #13
  unreachable

97:                                               ; preds = %88
  %98 = sub i64 %84, %90
  %99 = ashr exact i64 %98, 2
  %100 = icmp ult i64 %99, 2305843009213693951
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = ashr exact i64 %98, 1
  %103 = icmp ult i64 %102, %93
  %104 = select i1 %103, i64 %93, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 4611686018427387903
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  call void @abort() #13
  unreachable

109:                                              ; preds = %106, %97
  %110 = phi i64 [ %104, %106 ], [ 4611686018427387903, %97 ]
  %111 = shl i64 %110, 2
  %112 = call i8* @_Znwm(i64 %111) #12
  %113 = bitcast i8* %112 to i32*
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi i8* [ %112, %109 ], [ null, %101 ]
  %117 = phi i32* [ %113, %109 ], [ null, %101 ]
  %118 = getelementptr inbounds i32, i32* %117, i64 %92
  %119 = getelementptr inbounds i32, i32* %117, i64 %115
  %120 = ptrtoint i32* %119 to i64
  store i32 %76, i32* %118, align 4
  %121 = getelementptr inbounds i32, i32* %118, i64 1
  %122 = ptrtoint i32* %121 to i64
  %123 = ptrtoint i32* %117 to i64
  %124 = icmp sgt i64 %91, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %114
  %126 = inttoptr i64 %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %126, i64 %91, i1 false) #11
  br label %127

127:                                              ; preds = %125, %114
  store i64 %123, i64* %56, align 8
  store i64 %122, i64* %55, align 8
  store i64 %120, i64* %57, align 8
  %128 = icmp eq i64 %90, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = inttoptr i64 %90 to i8*
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %129, %127, %85, %69
  %132 = add nuw i64 %70, 1
  %133 = load i64, i64* %50, align 8
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %69, label %58
}

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.0"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"*, %"struct.ui::AXNodeData"* dereferenceable(264)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #5

declare i32 @_ZN2ui6AXTree29GetNextNegativeInternalNodeIdEv(%"class.ui::AXTree"*) local_unnamed_addr #1

declare i64 @_ZNK2ui6AXNode22GetUnignoredChildCountEv(%"class.ui::AXNode"*) local_unnamed_addr #1

declare void @_ZN2ui6AXNodeC1EPNS0_9OwnerTreeEPS0_imm(%"class.ui::AXNode"*, %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*, i32, i64, i64) unnamed_addr #1

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

declare void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui11AXTableInfo8ToStringEv(%"class.std::__1::basic_string.145"* noalias sret, %"class.ui::AXTableInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.145", align 8
  %4 = alloca %"class.std::__1::basic_string.145", align 8
  %5 = alloca %"class.std::__1::basic_string.145", align 8
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string.145"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  br label %145

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %1, i64 0, i32 6, i32 0, i32 0
  %14 = load i64, i64* %12, align 8
  br label %15

15:                                               ; preds = %11, %45
  %16 = phi i64 [ %7, %11 ], [ %46, %45 ]
  %17 = phi i64 [ %14, %11 ], [ %47, %45 ]
  %18 = phi i64 [ 0, %11 ], [ %49, %45 ]
  %19 = phi i32 [ 0, %11 ], [ %48, %45 ]
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %45, label %51

21:                                               ; preds = %45
  %22 = bitcast %"class.std::__1::basic_string.145"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11
  %23 = icmp eq i64 %46, 0
  br i1 %23, label %145, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %1, i64 0, i32 6, i32 0, i32 0
  %27 = bitcast %"class.std::__1::basic_string.145"* %3 to i8*
  %28 = bitcast %"class.std::__1::basic_string.145"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.145"* %4 to i8*
  %33 = bitcast %"class.std::__1::basic_string.145"* %5 to i8*
  %34 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string.145"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string.145"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string.145", %"class.std::__1::basic_string.145"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %67

43:                                               ; preds = %51
  %44 = load i64, i64* %6, align 8
  br label %45

45:                                               ; preds = %43, %15
  %46 = phi i64 [ %16, %15 ], [ %44, %43 ]
  %47 = phi i64 [ 0, %15 ], [ %65, %43 ]
  %48 = phi i32 [ %19, %15 ], [ %63, %43 ]
  %49 = add nuw i64 %18, 1
  %50 = icmp ult i64 %49, %46
  br i1 %50, label %15, label %21

51:                                               ; preds = %15, %51
  %52 = phi i64 [ %64, %51 ], [ 0, %15 ]
  %53 = phi i32 [ %63, %51 ], [ %19, %15 ]
  %54 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %13, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %54, i64 %18, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %52
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to double
  %60 = tail call double @log10(double %59) #11
  %61 = fptosi double %60 to i32
  %62 = icmp slt i32 %53, %61
  %63 = select i1 %62, i32 %61, i32 %53
  %64 = add nuw i64 %52, 1
  %65 = load i64, i64* %12, align 8
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %51, label %43

67:                                               ; preds = %24, %72
  %68 = phi i64 [ 0, %24 ], [ %74, %72 ]
  %69 = call dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.145"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %70 = load i64, i64* %25, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %141, %67
  %73 = call dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.145"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %74 = add nuw i64 %68, 1
  %75 = load i64, i64* %6, align 8
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %67, label %145

77:                                               ; preds = %67, %141
  %78 = phi i64 [ %142, %141 ], [ 0, %67 ]
  %79 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %26, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %79, i64 %68, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %78
  %83 = load i32, i32* %82, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string.145"* nonnull sret %3, i32 %83) #11
  %84 = load i8, i8* %29, align 1
  %85 = icmp slt i8 %84, 0
  %86 = load i8*, i8** %30, align 8
  %87 = load i64, i64* %31, align 8
  %88 = zext i8 %84 to i64
  %89 = select i1 %85, i8* %86, i8* %27
  %90 = select i1 %85, i64 %87, i64 %88
  %91 = call dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.145"* %0, i8* %89, i64 %90) #11
  %92 = load i8, i8* %29, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %77
  %95 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %77, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %97 = icmp eq i32 %83, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %96
  %99 = sitofp i32 %83 to double
  %100 = call double @log10(double %99) #11
  %101 = fptosi double %100 to i32
  %102 = sub nsw i32 %48, %101
  br label %103

103:                                              ; preds = %96, %98
  %104 = phi i32 [ %102, %98 ], [ %48, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %105 = sext i32 %104 to i64
  %106 = icmp ugt i32 %104, -17
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = bitcast %"class.std::__1::basic_string.145"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %108) #13
  unreachable

109:                                              ; preds = %103
  %110 = icmp ult i32 %104, 23
  br i1 %110, label %116, label %111

111:                                              ; preds = %109
  %112 = add nuw nsw i64 %105, 16
  %113 = and i64 %112, -16
  %114 = call i8* @_Znwm(i64 %113) #12
  store i8* %114, i8** %34, align 8
  %115 = or i64 %113, -9223372036854775808
  store i64 %115, i64* %35, align 8
  store i64 %105, i64* %36, align 8
  br label %119

116:                                              ; preds = %109
  %117 = trunc i32 %104 to i8
  store i8 %117, i8* %38, align 1
  %118 = icmp eq i32 %104, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %116, %111
  %120 = phi i8* [ %114, %111 ], [ %33, %116 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %120, i8 32, i64 %105, i1 false) #11
  br label %121

121:                                              ; preds = %116, %119
  %122 = phi i8* [ %33, %116 ], [ %120, %119 ]
  %123 = getelementptr inbounds i8, i8* %122, i64 %105
  store i8 0, i8* %123, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string.145"* nonnull %5, i8 signext 124) #11, !noalias !47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %33, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #11, !noalias !47
  %124 = load i8, i8* %40, align 1
  %125 = icmp slt i8 %124, 0
  %126 = load i8*, i8** %41, align 8
  %127 = load i64, i64* %42, align 8
  %128 = zext i8 %124 to i64
  %129 = select i1 %125, i8* %126, i8* %32
  %130 = select i1 %125, i64 %127, i64 %128
  %131 = call dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.145"* %0, i8* %129, i64 %130) #11
  %132 = load i8, i8* %40, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %121
  %135 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %121, %134
  %137 = load i8, i8* %38, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  %142 = add nuw i64 %78, 1
  %143 = load i64, i64* %25, align 8
  %144 = icmp ult i64 %142, %143
  br i1 %144, label %77, label %72

145:                                              ; preds = %72, %9, %21
  ret void
}

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string.145"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfoC2EPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTableInfo"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.ui::AXTableInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 88, i1 false)
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 96, i1 false)
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %11 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node_base"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12
  %16 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %17 = bitcast %"class.std::__1::vector.10"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false)
  store %"class.ui::AXTree"* %1, %"class.ui::AXTree"** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  store %"class.ui::AXNode"* %2, %"class.ui::AXNode"** %18, align 8
  %19 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 17
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui11AXTableInfoD2Ev(%"class.ui::AXTableInfo"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.std::__1::vector.273", align 8
  %5 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 9, i32 0, i32 1
  %8 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %9 = icmp eq %"class.ui::AXNode"** %6, %8
  br i1 %9, label %189, label %10

10:                                               ; preds = %1
  tail call void @_ZN2ui11AXTableInfo18ClearExtraMacNodesEv(%"class.ui::AXTableInfo"* %0)
  %11 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 15
  %12 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %11, align 8
  %13 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %12, i64 0, i32 2
  %14 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %18 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 40, i1 false)
  %20 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %18, align 8, !noalias !50
  %21 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %12, i64 0, i32 2, i32 0, i32 0, i32 1
  %22 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %21, align 8, !noalias !50
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %20, %22
  %24 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %24) #11
  br i1 %23, label %25, label %27

25:                                               ; preds = %10
  %26 = bitcast %"class.base::ObserverList"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11, !alias.scope !50
  br label %41

27:                                               ; preds = %10
  store %"class.base::ObserverList"* %13, %"class.base::ObserverList"** %15, align 8, !alias.scope !50
  %28 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %12, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %24, %"class.base::internal::LinkNodeBase"* %28) #11
  store i64 0, i64* %16, align 8, !alias.scope !50
  %29 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %12, i64 0, i32 2, i32 3
  %30 = load i32, i32* %29, align 8, !noalias !50
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.base::internal::CheckedObserverAdapter"** %21 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !50
  %35 = bitcast %"class.base::ObserverList"* %13 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !50
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 4
  br label %39

39:                                               ; preds = %32, %27
  %40 = phi i64 [ %38, %32 ], [ -1, %27 ]
  store i64 %40, i64* %17, align 8, !alias.scope !50
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #11
  br label %41

41:                                               ; preds = %25, %39
  %42 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %45 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %46 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %46) #11
  %48 = bitcast %"class.base::ObserverList"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #11, !alias.scope !53
  %49 = bitcast %"class.std::__1::vector.273"* %4 to i8*
  %50 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 16
  %51 = bitcast %"class.ui::AXNode"** %50 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %4, i64 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::vector.273"* %4 to i8**
  %54 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"struct.ui::AXTreeObserver::Change"** %54 to i8**
  %56 = bitcast %"struct.ui::AXTreeObserver::Change"** %52 to i64*
  %57 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %4, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %185, %41
  %59 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %15, align 8
  %60 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %16, align 8
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %59, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.base::internal::CheckedObserverAdapter"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::ObserverList"* %59 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = ashr exact i64 %68, 4
  %70 = load i64, i64* %17, align 8
  %71 = icmp ult i64 %69, %70
  %72 = select i1 %71, i64 %69, i64 %70
  %73 = icmp eq i64 %62, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %61
  %75 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %43, align 8
  br label %92

76:                                               ; preds = %61, %58
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %43, align 8
  %78 = icmp eq %"class.base::ObserverList"* %77, null
  br i1 %78, label %127, label %79

79:                                               ; preds = %76
  %80 = load i64, i64* %44, align 8
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %77, i64 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.base::internal::CheckedObserverAdapter"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::ObserverList"* %77 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 4
  %88 = load i64, i64* %45, align 8
  %89 = icmp ult i64 %87, %88
  %90 = select i1 %89, i64 %87, i64 %88
  %91 = icmp eq i64 %80, %90
  br i1 %91, label %101, label %92

92:                                               ; preds = %79, %74
  %93 = phi %"class.base::ObserverList"* [ %75, %74 ], [ %77, %79 ]
  %94 = icmp eq %"class.base::ObserverList"* %59, %93
  %95 = load i64, i64* %16, align 8
  %96 = load i64, i64* %44, align 8
  %97 = icmp eq i64 %95, %96
  %98 = and i1 %94, %97
  br i1 %98, label %99, label %156

99:                                               ; preds = %92
  %100 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %100, label %127, label %101

101:                                              ; preds = %79, %99
  %102 = phi %"class.base::ObserverList"* [ %59, %99 ], [ %77, %79 ]
  %103 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 1
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 1, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::LinkNodeBase"** %104 to %"class.base::LinkNode"**
  %106 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %105, align 8
  %107 = bitcast %"class.base::LinkedList"* %103 to %"class.base::LinkNode"**
  %108 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %107, align 8
  %109 = icmp eq %"class.base::LinkNode"* %106, %108
  br i1 %109, label %110, label %123

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 1
  %114 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  %115 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %112, %"class.base::internal::CheckedObserverAdapter"* %114) #11
  %116 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  %117 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %115, %116
  br i1 %117, label %123, label %118

118:                                              ; preds = %110, %118
  %119 = phi %"class.base::internal::CheckedObserverAdapter"* [ %120, %118 ], [ %116, %110 ]
  %120 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %119, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %120) #11
  %121 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %120, %115
  br i1 %121, label %122, label %118

122:                                              ; preds = %118
  store %"class.base::internal::CheckedObserverAdapter"* %115, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  br label %123

123:                                              ; preds = %122, %110, %101
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %43, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %43, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %46) #11
  br label %127

127:                                              ; preds = %76, %99, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #11
  %128 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %15, align 8
  %129 = icmp eq %"class.base::ObserverList"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1
  %132 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1, i32 0, i32 0, i32 1
  %133 = bitcast %"class.base::internal::LinkNodeBase"** %132 to %"class.base::LinkNode"**
  %134 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %133, align 8
  %135 = bitcast %"class.base::LinkedList"* %131 to %"class.base::LinkNode"**
  %136 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %135, align 8
  %137 = icmp eq %"class.base::LinkNode"* %134, %136
  br i1 %137, label %138, label %151

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %139, align 8
  %141 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 1
  %142 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  %143 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %140, %"class.base::internal::CheckedObserverAdapter"* %142) #11
  %144 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  %145 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %143, %144
  br i1 %145, label %151, label %146

146:                                              ; preds = %138, %146
  %147 = phi %"class.base::internal::CheckedObserverAdapter"* [ %148, %146 ], [ %144, %138 ]
  %148 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %147, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %148) #11
  %149 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %148, %143
  br i1 %149, label %150, label %146

150:                                              ; preds = %146
  store %"class.base::internal::CheckedObserverAdapter"* %143, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  br label %151

151:                                              ; preds = %150, %138, %130
  %152 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %15, align 8
  %153 = icmp eq %"class.base::ObserverList"* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %15, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %24) #11
  br label %155

155:                                              ; preds = %127, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  br label %189

156:                                              ; preds = %92
  %157 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %59, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %157, align 8
  %159 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %158, i64 %95, i32 0, i32 0, i32 0
  %160 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %159) #11
  %161 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %158, i64 %95, i32 0, i32 0, i32 1
  %162 = bitcast i64* %161 to %"class.ui::AXTreeObserver"**
  %163 = load %"class.ui::AXTreeObserver"*, %"class.ui::AXTreeObserver"** %162, align 8
  %164 = select i1 %160, %"class.ui::AXTreeObserver"* %163, %"class.ui::AXTreeObserver"* null
  %165 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %166 = load i64, i64* %51, align 8
  %167 = call i8* @_Znwm(i64 16) #12
  store i8* %167, i8** %53, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 16
  store i8* %168, i8** %55, align 8
  %169 = bitcast i8* %167 to i64*
  store i64 %166, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %167, i64 8
  %171 = bitcast i8* %170 to i32*
  store i32 2, i32* %171, align 8
  %172 = ptrtoint i8* %168 to i64
  store i64 %172, i64* %56, align 8
  %173 = bitcast %"class.ui::AXTreeObserver"* %164 to void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)***
  %174 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)**, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)** %174, i64 22
  %176 = load void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)*, void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.273"*)** %175, align 8
  call void %176(%"class.ui::AXTreeObserver"* %164, %"class.ui::AXTree"* %165, i1 zeroext false, %"class.std::__1::vector.273"* nonnull dereferenceable(24) %4) #11
  %177 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %57, align 8
  %178 = icmp eq %"struct.ui::AXTreeObserver::Change"* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %156
  %180 = ptrtoint %"struct.ui::AXTreeObserver::Change"* %177 to i64
  store i64 %180, i64* %56, align 8
  %181 = bitcast %"struct.ui::AXTreeObserver::Change"* %177 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %156, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  %183 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %15, align 8
  %184 = icmp eq %"class.base::ObserverList"* %183, null
  br i1 %184, label %185, label %186

185:                                              ; preds = %182, %186
  br label %58

186:                                              ; preds = %182
  %187 = load i64, i64* %16, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %16, align 8
  call void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #11
  br label %185

189:                                              ; preds = %155, %1
  %190 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0
  %191 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %192 = bitcast %"class.std::__1::__tree_end_node"* %191 to %"class.std::__1::__tree_node.289"**
  %193 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %192, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"* %190, %"class.std::__1::__tree_node.289"* %193) #11
  %194 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12, i32 0, i32 0
  %195 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %194, align 8
  %196 = icmp eq %"class.ui::AXNode"** %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %189
  %198 = ptrtoint %"class.ui::AXNode"** %195 to i64
  %199 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 12, i32 0, i32 1
  %200 = bitcast %"class.ui::AXNode"*** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast %"class.ui::AXNode"** %195 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %189, %197
  %203 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0
  %204 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.std::__1::__tree_node"**
  %206 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %205, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %203, %"class.std::__1::__tree_node"* %206) #11
  %207 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0
  %208 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to %"class.std::__1::__tree_node"**
  %210 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %209, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %207, %"class.std::__1::__tree_node"* %210) #11
  %211 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %212 = icmp eq %"class.ui::AXNode"** %211, null
  br i1 %212, label %217, label %213

213:                                              ; preds = %202
  %214 = ptrtoint %"class.ui::AXNode"** %211 to i64
  %215 = bitcast %"class.ui::AXNode"*** %7 to i64*
  store i64 %214, i64* %215, align 8
  %216 = bitcast %"class.ui::AXNode"** %211 to i8*
  call void @_ZdlPv(i8* %216) #12
  br label %217

217:                                              ; preds = %202, %213
  %218 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = ptrtoint i32* %219 to i64
  %223 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 8, i32 0, i32 1
  %224 = bitcast i32** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = bitcast i32* %219 to i8*
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %217, %221
  %227 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 0
  %228 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %227, align 8
  %229 = icmp eq %"struct.ui::AXTableInfo::CellData"* %228, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %226
  %231 = ptrtoint %"struct.ui::AXTableInfo::CellData"* %228 to i64
  %232 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %233 = bitcast %"struct.ui::AXTableInfo::CellData"** %232 to i64*
  store i64 %231, i64* %233, align 8
  %234 = bitcast %"struct.ui::AXTableInfo::CellData"* %228 to i8*
  call void @_ZdlPv(i8* %234) #12
  br label %235

235:                                              ; preds = %226, %230
  %236 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %236, i64 0, i32 0, i32 0
  %238 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %237, align 8
  %239 = icmp eq %"class.std::__1::vector.0"* %238, null
  br i1 %239, label %263, label %240

240:                                              ; preds = %235
  %241 = bitcast %"class.std::__1::vector.0"* %238 to i8*
  %242 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %243 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %242, align 8
  %244 = icmp eq %"class.std::__1::vector.0"* %243, %238
  br i1 %244, label %261, label %245

245:                                              ; preds = %240, %256
  %246 = phi %"class.std::__1::vector.0"* [ %247, %256 ], [ %243, %240 ]
  %247 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %246, i64 -1
  %248 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %247, i64 0, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %245
  %252 = ptrtoint i32* %249 to i64
  %253 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %246, i64 -1, i32 0, i32 1
  %254 = bitcast i32** %253 to i64*
  store i64 %252, i64* %254, align 8
  %255 = bitcast i32* %249 to i8*
  call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %251, %245
  %257 = icmp eq %"class.std::__1::vector.0"* %247, %238
  br i1 %257, label %258, label %245

258:                                              ; preds = %256
  %259 = bitcast %"class.std::__1::vector"* %236 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %258, %240
  %262 = phi i8* [ %260, %258 ], [ %241, %240 ]
  store %"class.std::__1::vector.0"* %238, %"class.std::__1::vector.0"** %242, align 8
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %235, %261
  %264 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %265 = load i32*, i32** %264, align 8
  %266 = icmp eq i32* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %263
  %268 = ptrtoint i32* %265 to i64
  %269 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %270 = bitcast i32** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = bitcast i32* %265 to i8*
  call void @_ZdlPv(i8* %271) #12
  br label %272

272:                                              ; preds = %263, %267
  %273 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3
  %274 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %273, i64 0, i32 0, i32 0
  %275 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %274, align 8
  %276 = icmp eq %"class.std::__1::vector.0"* %275, null
  br i1 %276, label %300, label %277

277:                                              ; preds = %272
  %278 = bitcast %"class.std::__1::vector.0"* %275 to i8*
  %279 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %280 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %279, align 8
  %281 = icmp eq %"class.std::__1::vector.0"* %280, %275
  br i1 %281, label %298, label %282

282:                                              ; preds = %277, %293
  %283 = phi %"class.std::__1::vector.0"* [ %284, %293 ], [ %280, %277 ]
  %284 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %283, i64 -1
  %285 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %284, i64 0, i32 0, i32 0
  %286 = load i32*, i32** %285, align 8
  %287 = icmp eq i32* %286, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %282
  %289 = ptrtoint i32* %286 to i64
  %290 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %283, i64 -1, i32 0, i32 1
  %291 = bitcast i32** %290 to i64*
  store i64 %289, i64* %291, align 8
  %292 = bitcast i32* %286 to i8*
  call void @_ZdlPv(i8* %292) #12
  br label %293

293:                                              ; preds = %288, %282
  %294 = icmp eq %"class.std::__1::vector.0"* %284, %275
  br i1 %294, label %295, label %282

295:                                              ; preds = %293
  %296 = bitcast %"class.std::__1::vector"* %273 to i8**
  %297 = load i8*, i8** %296, align 8
  br label %298

298:                                              ; preds = %295, %277
  %299 = phi i8* [ %297, %295 ], [ %278, %277 ]
  store %"class.std::__1::vector.0"* %275, %"class.std::__1::vector.0"** %279, align 8
  call void @_ZdlPv(i8* %299) #12
  br label %300

300:                                              ; preds = %272, %298
  %301 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2
  %302 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %301, i64 0, i32 0, i32 0
  %303 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %302, align 8
  %304 = icmp eq %"class.std::__1::vector.0"* %303, null
  br i1 %304, label %328, label %305

305:                                              ; preds = %300
  %306 = bitcast %"class.std::__1::vector.0"* %303 to i8*
  %307 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %308 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %307, align 8
  %309 = icmp eq %"class.std::__1::vector.0"* %308, %303
  br i1 %309, label %326, label %310

310:                                              ; preds = %305, %321
  %311 = phi %"class.std::__1::vector.0"* [ %312, %321 ], [ %308, %305 ]
  %312 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %311, i64 -1
  %313 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %312, i64 0, i32 0, i32 0
  %314 = load i32*, i32** %313, align 8
  %315 = icmp eq i32* %314, null
  br i1 %315, label %321, label %316

316:                                              ; preds = %310
  %317 = ptrtoint i32* %314 to i64
  %318 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %311, i64 -1, i32 0, i32 1
  %319 = bitcast i32** %318 to i64*
  store i64 %317, i64* %319, align 8
  %320 = bitcast i32* %314 to i8*
  call void @_ZdlPv(i8* %320) #12
  br label %321

321:                                              ; preds = %316, %310
  %322 = icmp eq %"class.std::__1::vector.0"* %312, %303
  br i1 %322, label %323, label %310

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::vector"* %301 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %323, %305
  %327 = phi i8* [ %325, %323 ], [ %306, %305 ]
  store %"class.std::__1::vector.0"* %303, %"class.std::__1::vector.0"** %307, align 8
  call void @_ZdlPv(i8* %327) #12
  br label %328

328:                                              ; preds = %300, %326
  ret void
}

declare zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_114FindCellsInRowEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.ui::AXNode"* nocapture readonly, %"class.std::__1::vector.10"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %7 = icmp eq %"class.ui::AXNode"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.ui::AXNode"*** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.10"* %1 to i64*
  %13 = bitcast %"class.ui::AXNode"*** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %90, %2
  ret void

16:                                               ; preds = %8, %90
  %17 = phi %"class.ui::AXNode"** [ %4, %8 ], [ %91, %90 ]
  %18 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %17, align 8
  %19 = ptrtoint %"class.ui::AXNode"* %18 to i64
  %20 = tail call zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"* %18) #11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %18, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 89
  br i1 %24, label %25, label %26

25:                                               ; preds = %21, %16
  tail call fastcc void @_ZN2ui12_GLOBAL__N_114FindCellsInRowEPNS_6AXNodeEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.ui::AXNode"* %18, %"class.std::__1::vector.10"* %1)
  br label %90

26:                                               ; preds = %21
  %27 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %23) #11
  br i1 %27, label %28, label %90

28:                                               ; preds = %26
  %29 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %9, align 8
  %30 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %10, align 8
  %31 = icmp eq %"class.ui::AXNode"** %29, %30
  %32 = ptrtoint %"class.ui::AXNode"** %30 to i64
  br i1 %31, label %37, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.ui::AXNode"** %29 to i64*
  store i64 %19, i64* %34, align 8
  %35 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %29, i64 1
  %36 = ptrtoint %"class.ui::AXNode"** %35 to i64
  store i64 %36, i64* %11, align 8
  br label %90

37:                                               ; preds = %28
  %38 = ptrtoint %"class.ui::AXNode"** %29 to i64
  %39 = load i64, i64* %12, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 2305843009213693951
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.10"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #13
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %32, %39
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 1152921504606846975
  br i1 %49, label %50, label %58

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #13
  unreachable

58:                                               ; preds = %55, %46
  %59 = phi i64 [ %53, %55 ], [ 2305843009213693951, %46 ]
  %60 = shl i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #12
  %62 = bitcast i8* %61 to %"class.ui::AXNode"**
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi %"class.ui::AXNode"** [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %65, i64 %41
  %67 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %65, i64 %64
  %68 = ptrtoint %"class.ui::AXNode"** %67 to i64
  %69 = bitcast %"class.ui::AXNode"** %66 to i64*
  store i64 %19, i64* %69, align 8
  %70 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 1
  %71 = ptrtoint %"class.ui::AXNode"** %70 to i64
  %72 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %14, align 8
  %73 = load i64, i64* %11, align 8
  %74 = ptrtoint %"class.ui::AXNode"** %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 %77
  %79 = ptrtoint %"class.ui::AXNode"** %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %63
  %82 = bitcast %"class.ui::AXNode"** %78 to i8*
  %83 = bitcast %"class.ui::AXNode"** %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 %75, i1 false) #11
  %84 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %14, align 8
  br label %85

85:                                               ; preds = %81, %63
  %86 = phi %"class.ui::AXNode"** [ %72, %63 ], [ %84, %81 ]
  store i64 %79, i64* %12, align 8
  store i64 %71, i64* %11, align 8
  store i64 %68, i64* %13, align 8
  %87 = icmp eq %"class.ui::AXNode"** %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.ui::AXNode"** %86 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %85, %33, %26, %25
  %91 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %17, i64 1
  %92 = icmp eq %"class.ui::AXNode"** %91, %6
  br i1 %92, label %15, label %16
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IPN2ui6AXNodeENS_9allocatorIS3_EEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.252"*, %"class.std::__1::vector.10"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.10"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.252"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.252"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.10"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::vector.10"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.10"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.10"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.10"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = bitcast %"class.std::__1::vector.10"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.10"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.ui::AXNode"*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %33, i64 %9, i32 0, i32 1
  %45 = bitcast %"class.ui::AXNode"*** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.ui::AXNode"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.ui::AXNode"*** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.10"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11
  %52 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %34, i64 1
  %53 = ptrtoint %"class.std::__1::vector.10"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %54, align 8
  %56 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %3, align 8
  %57 = icmp eq %"class.std::__1::vector.10"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"class.std::__1::vector.10"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"class.std::__1::vector.10"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"class.std::__1::vector.10"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %62, i64 -1
  %65 = bitcast %"class.std::__1::vector.10"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #11
  %66 = bitcast %"class.std::__1::vector.10"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.10"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %62, i64 -1, i32 0, i32 1
  %70 = bitcast %"class.ui::AXNode"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 -1, i32 0, i32 1
  %73 = bitcast %"class.ui::AXNode"*** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"class.ui::AXNode"*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 -1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"class.ui::AXNode"*** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.std::__1::vector.10"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #11
  %80 = icmp eq %"class.std::__1::vector.10"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"class.std::__1::vector.10"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::vector.10"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::vector.10"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::vector.10"*
  %90 = icmp eq %"class.std::__1::vector.10"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"class.std::__1::vector.10"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %94, align 8
  %96 = icmp eq %"class.ui::AXNode"** %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint %"class.ui::AXNode"** %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast %"class.ui::AXNode"*** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.ui::AXNode"** %95 to i8*
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector.10"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

declare zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

declare i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.100"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"*, %"class.std::__1::__tree_node.289"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.289"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.289"* %1 to %"class.std::__1::__tree_node.289"**
  %6 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"* %0, %"class.std::__1::__tree_node.289"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.289"**
  %9 = load %"class.std::__1::__tree_node.289"*, %"class.std::__1::__tree_node.289"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.244"* %0, %"class.std::__1::__tree_node.289"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.289", %"class.std::__1::__tree_node.289"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.291"**
  %13 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.263"* %10, %"class.std::__1::__tree_node.291"* %13) #11
  %14 = bitcast %"class.std::__1::__tree_node.289"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void

15:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.263"*, %"class.std::__1::__tree_node.291"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.291"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.291"* %1 to %"class.std::__1::__tree_node.291"**
  %6 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.263"* %0, %"class.std::__1::__tree_node.291"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.291"**
  %9 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.263"* %0, %"class.std::__1::__tree_node.291"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.291"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !56
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !56
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !56
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.0"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::vector.0"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #11
  %27 = ptrtoint %"class.std::__1::vector.0"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %124

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"class.std::__1::vector.0"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::vector.0"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::vector.0"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::vector.0"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::vector.0"* %64 to i64
  %66 = icmp eq %"class.std::__1::vector.0"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::vector.0"* %58 to i64
  %69 = ptrtoint %"class.std::__1::vector.0"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %70, align 8
  %72 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  %73 = icmp eq %"class.std::__1::vector.0"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::vector.0"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::vector.0"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::vector.0"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1
  %81 = bitcast %"class.std::__1::vector.0"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #11
  %82 = bitcast %"class.std::__1::vector.0"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.0"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i32** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector.0"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  %96 = icmp eq %"class.std::__1::vector.0"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.std::__1::vector.0"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.std::__1::vector.0"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.std::__1::vector.0"*
  %106 = icmp eq %"class.std::__1::vector.0"* %102, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %101, %118
  %108 = phi %"class.std::__1::vector.0"* [ %109, %118 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %109, i64 0, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint i32* %111 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast i32* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::vector.0"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %122, %120, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.0"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2ui6AXNodeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.10"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.ui::AXNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.ui::AXNode"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.ui::AXNode"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %13, i64 %18
  %20 = bitcast %"class.ui::AXNode"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"class.ui::AXNode"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"class.ui::AXNode"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.ui::AXNode"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %57, i64 %33
  %59 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %57, i64 %56
  %60 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %58, i64 %1
  %61 = bitcast %"class.ui::AXNode"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint %"class.ui::AXNode"** %59 to i64
  %64 = ptrtoint %"class.ui::AXNode"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.ui::AXNode"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %58, i64 %71
  %73 = ptrtoint %"class.ui::AXNode"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.ui::AXNode"** %72 to i8*
  %77 = bitcast %"class.ui::AXNode"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #11
  %78 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.ui::AXNode"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.ui::AXNode"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.ui::AXNode"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXTreeObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #11
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #11
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #11
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui14AXTreeObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #11
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #11
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #11
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #11
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #11
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #11
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #5

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @log10(double) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.145"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.145"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.145"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string.145"*, i8 signext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIimEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeIiNS_3mapIiN2ui11AXTableInfo8CellDataENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEEEEENS_19__map_value_compareIiSE_S7_Lb1EEENS8_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIiN2ui11AXTableInfo8CellDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!46 = distinct !{!46, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!55 = distinct !{!55, !"_ZNK4base12ObserverListIN2ui14AXTreeObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!56 = !{i8 0, i8 2}
