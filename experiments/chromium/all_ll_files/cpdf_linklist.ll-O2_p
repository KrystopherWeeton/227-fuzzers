; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_linklist.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_linklist.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_LinkList = type { %"class.CPDF_Document::LinkListIface", %"class.std::__1::map" }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.226" }
%"struct.std::__1::pair.226" = type { i32, %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.221" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.11" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.6" }
%"class.fxcrt::RetainPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.258", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { float }
%"class.std::__1::map.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.fxcrt::RetainPtr"* }
%class.CPDF_Link = type { %"class.fxcrt::RetainPtr" }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.24", %"class.std::__1::map.35", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.174", %"class.std::__1::unique_ptr.181", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.197" }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.193" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.187"**, %"class.std::__1::unique_ptr.187"**, %"class.std::__1::unique_ptr.187"**, %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.std::__1::unique_ptr.187"** }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_STemplate = type { float, float }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.64", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::vector.160", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.168" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map.55", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.71", %"class.fxcrt::UnownedPtr.77", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.78", i64, %"class.fxcrt::RetainPtr.93", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.105", %"class.std::__1::map.111", %"class.std::__1::set.120", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.77" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr", %"class.std::__1::map.81" }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.99" }
%"class.fxcrt::RetainPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.111" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.120" = type { %"class.std::__1::__tree.121" }
%"class.std::__1::__tree.121" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.131" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { i32*, i32*, %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.167" }
%"class.fxcrt::UnownedPtr.167" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%class.CFX_PTemplate = type { float, float }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.227", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"class.fxcrt::RetainPtr.229"*, %"class.fxcrt::RetainPtr.229"*, %"class.std::__1::__compressed_pair.235" }
%"class.fxcrt::RetainPtr.229" = type { %"class.std::__1::unique_ptr.230" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.fxcrt::RetainPtr.229"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJPS3_EEEvDpOT_ = comdat any

@_ZTV13CPDF_LinkList = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_LinkList*)* @_ZN13CPDF_LinkListD2Ev to i8*), i8* bitcast (void (%class.CPDF_LinkList*)* @_ZN13CPDF_LinkListD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Annots\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Link\00", align 1

@_ZN13CPDF_LinkListC1Ev = hidden unnamed_addr alias void (%class.CPDF_LinkList*), void (%class.CPDF_LinkList*)* @_ZN13CPDF_LinkListC2Ev
@_ZN13CPDF_LinkListD1Ev = hidden unnamed_addr alias void (%class.CPDF_LinkList*), void (%class.CPDF_LinkList*)* @_ZN13CPDF_LinkListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDF_LinkListC2Ev(%class.CPDF_LinkList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV13CPDF_LinkList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDF_LinkListD2Ev(%class.CPDF_LinkList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV13CPDF_LinkList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDF_LinkListD0Ev(%class.CPDF_LinkList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV13CPDF_LinkList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = bitcast %class.CPDF_LinkList* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDF_LinkList14GetLinkAtPointEP9CPDF_PageRK13CFX_PTemplateIfEPi(%class.CPDF_Link* noalias sret, %class.CPDF_LinkList*, %class.CPDF_Page* nocapture readonly, %class.CFX_PTemplate* dereferenceable(8), i32*) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.CFX_FloatRect*
  %8 = tail call %"class.std::__1::vector.219"* @_ZN13CPDF_LinkList12GetPageLinksEP9CPDF_Page(%class.CPDF_LinkList* %1, %class.CPDF_Page* %2)
  %9 = icmp eq %"class.std::__1::vector.219"* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @_ZN9CPDF_LinkC1Ev(%class.CPDF_Link* %0) #9
  br label %49

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %8, i64 0, i32 0, i32 1
  %13 = bitcast %"class.fxcrt::RetainPtr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.219"* %8 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %48, label %19

19:                                               ; preds = %11
  %20 = inttoptr i64 %16 to %"class.fxcrt::RetainPtr"*
  %21 = ashr exact i64 %17, 3
  %22 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %8, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.CPDF_Link, %class.CPDF_Link* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  br label %27

27:                                               ; preds = %46, %19
  %28 = phi %"class.fxcrt::RetainPtr"* [ %20, %19 ], [ %47, %46 ]
  %29 = phi i64 [ %21, %19 ], [ %30, %46 ]
  %30 = add i64 %29, -1
  %31 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %28, i64 %30, i32 0, i32 0, i32 0, i32 0
  %32 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %31, align 8
  %33 = icmp eq %class.CPDF_Dictionary* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %23, align 8
  call void @_ZN9CPDF_LinkC1EP15CPDF_Dictionary(%class.CPDF_Link* %0, %class.CPDF_Dictionary* nonnull %32) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %35 = call { <2 x float>, <2 x float> } @_ZN9CPDF_Link7GetRectEv(%class.CPDF_Link* %0) #9
  %36 = extractvalue { <2 x float>, <2 x float> } %35, 0
  store <2 x float> %36, <2 x float>* %25, align 8
  %37 = extractvalue { <2 x float>, <2 x float> } %35, 1
  store <2 x float> %37, <2 x float>* %26, align 8
  %38 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %7, %class.CFX_PTemplate* dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = icmp eq i32* %4, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %39
  %42 = trunc i64 %30 to i32
  store i32 %42, i32* %4, align 4
  br label %49

43:                                               ; preds = %34
  call void @_ZN9CPDF_LinkD1Ev(%class.CPDF_Link* %0) #9
  br label %44

44:                                               ; preds = %43, %27
  %45 = icmp eq i64 %30, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %22, align 8
  br label %27

48:                                               ; preds = %44, %11
  call void @_ZN9CPDF_LinkC1Ev(%class.CPDF_Link* %0) #9
  br label %49

49:                                               ; preds = %41, %39, %48, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.219"* @_ZN13CPDF_LinkList12GetPageLinksEP9CPDF_Page(%class.CPDF_LinkList*, %class.CPDF_Page* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %class.CPDF_Dictionary*, align 8
  %7 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %8, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %159, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %70, label %18

18:                                               ; preds = %12, %18
  %19 = phi %"class.std::__1::__tree_end_node"* [ %29, %18 ], [ %14, %12 ]
  %20 = phi %"class.std::__1::__tree_node"* [ %30, %18 ], [ %16, %12 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, %10
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__tree_node_base"** %24 to %"class.std::__1::__tree_node"**
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node"**
  %28 = select i1 %23, %"class.std::__1::__tree_node"** %25, %"class.std::__1::__tree_node"** %27
  %29 = select i1 %23, %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"* %26
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %29, %14
  br i1 %33, label %42, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 4
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %10, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 5
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::vector.219"*
  br label %159

42:                                               ; preds = %32, %34
  %43 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %66, %42
  %45 = phi %"class.std::__1::__tree_node"* [ %69, %66 ], [ %16, %42 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %68, %66 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %10, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

56:                                               ; preds = %44
  %57 = icmp ult i32 %48, %10
  br i1 %57, label %58, label %64

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

66:                                               ; preds = %58, %50
  %67 = phi %"class.std::__1::__tree_node_base"* [ %52, %50 ], [ %60, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %59, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"* %67 to %"class.std::__1::__tree_node"*
  br label %44

70:                                               ; preds = %12
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  br label %72

72:                                               ; preds = %70, %64, %62, %54
  %73 = phi %"class.std::__1::__tree_end_node"* [ %14, %70 ], [ %55, %54 ], [ %63, %62 ], [ %65, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %71, %70 ], [ %51, %54 ], [ %59, %62 ], [ %46, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"** %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %105

78:                                               ; preds = %72
  %79 = tail call i8* @_Znwm(i64 64) #10, !noalias !2
  %80 = getelementptr inbounds i8, i8* %79, i64 32
  %81 = bitcast i8* %80 to i32*
  store i32 %10, i32* %81, align 8, !noalias !2
  %82 = getelementptr inbounds i8, i8* %79, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #9, !noalias !2
  %83 = bitcast i8* %79 to %"class.std::__1::__tree_node"*
  %84 = bitcast i8* %79 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds i8, i8* %79, i64 16
  %86 = bitcast i8* %85 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %86, align 8
  %87 = bitcast %"class.std::__1::__tree_node_base"** %74 to i8**
  store i8* %79, i8** %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %78
  %94 = ptrtoint %"class.std::__1::__tree_node_base"* %91 to i64
  %95 = bitcast %"class.std::__1::map"* %13 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  br label %97

97:                                               ; preds = %93, %78
  %98 = phi %"class.std::__1::__tree_node_base"* [ %84, %78 ], [ %96, %93 ]
  %99 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %100, %"class.std::__1::__tree_node_base"* %98) #9
  %101 = getelementptr inbounds %class.CPDF_LinkList, %class.CPDF_LinkList* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %104 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %7, align 8
  br label %105

105:                                              ; preds = %72, %97
  %106 = phi %class.CPDF_Dictionary* [ %8, %72 ], [ %104, %97 ]
  %107 = phi %"class.std::__1::__tree_node"* [ %76, %72 ], [ %83, %97 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #9
  %110 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %106, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  %111 = icmp eq %class.CPDF_Array* %110, null
  br i1 %111, label %159, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %110, i64 0, i32 1
  %114 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %110, i64 0, i32 1, i32 0, i32 1
  %115 = bitcast %"class.fxcrt::RetainPtr.229"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::vector.227"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %159, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  %122 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  %123 = bitcast %class.CPDF_Dictionary** %6 to i8*
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"class.fxcrt::RetainPtr"** %124 to i64*
  br label %127

127:                                              ; preds = %120, %152
  %128 = phi i64 [ 0, %120 ], [ %153, %152 ]
  %129 = call %class.CPDF_Dictionary* @_ZN10CPDF_Array9GetDictAtEm(%class.CPDF_Array* nonnull %110, i64 %128) #9
  %130 = icmp eq %class.CPDF_Dictionary* %129, null
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #9
  br label %135

132:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Dictionary* nonnull %129, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  %133 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #9
  %134 = select i1 %133, %class.CPDF_Dictionary* %129, %class.CPDF_Dictionary* null
  br label %135

135:                                              ; preds = %132, %131
  %136 = phi %class.CPDF_Dictionary* [ null, %131 ], [ %134, %132 ]
  store %class.CPDF_Dictionary* %136, %class.CPDF_Dictionary** %6, align 8
  %137 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %124, align 8
  %138 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %125, align 8
  %139 = icmp ult %"class.fxcrt::RetainPtr"* %137, %138
  br i1 %139, label %140, label %151

140:                                              ; preds = %135
  %141 = ptrtoint %class.CPDF_Dictionary* %136 to i64
  %142 = bitcast %"class.fxcrt::RetainPtr"* %137 to i64*
  store i64 %141, i64* %142, align 8
  %143 = icmp eq %class.CPDF_Dictionary* %136, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %136, i64 0, i32 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = add nsw i64 %146, 1
  store i64 %147, i64* %145, align 8
  br label %148

148:                                              ; preds = %144, %140
  %149 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %137, i64 1
  %150 = ptrtoint %"class.fxcrt::RetainPtr"* %149 to i64
  store i64 %150, i64* %126, align 8
  br label %152

151:                                              ; preds = %135
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJPS3_EEEvDpOT_(%"class.std::__1::vector.219"* %108, %class.CPDF_Dictionary** nonnull dereferenceable(8) %6) #9
  br label %152

152:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #9
  %153 = add nuw i64 %128, 1
  %154 = load i64, i64* %115, align 8
  %155 = load i64, i64* %117, align 8
  %156 = sub i64 %154, %155
  %157 = ashr exact i64 %156, 3
  %158 = icmp ult i64 %153, %157
  br i1 %158, label %127, label %159

159:                                              ; preds = %152, %112, %39, %105, %2
  %160 = phi %"class.std::__1::vector.219"* [ null, %2 ], [ %41, %39 ], [ %108, %105 ], [ %108, %112 ], [ %108, %152 ]
  ret %"class.std::__1::vector.219"* %160
}

declare void @_ZN9CPDF_LinkC1Ev(%class.CPDF_Link*) unnamed_addr #3

declare void @_ZN9CPDF_LinkC1EP15CPDF_Dictionary(%class.CPDF_Link*, %class.CPDF_Dictionary*) unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN9CPDF_Link7GetRectEv(%class.CPDF_Link*) local_unnamed_addr #3

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN9CPDF_LinkD1Ev(%class.CPDF_Link*) unnamed_addr #4

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

declare %class.CPDF_Dictionary* @_ZN10CPDF_Array9GetDictAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %11, align 8
  %13 = icmp eq %"class.fxcrt::RetainPtr"* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.fxcrt::RetainPtr"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %17 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %16, align 8
  %18 = icmp eq %"class.fxcrt::RetainPtr"* %17, %12
  br i1 %18, label %41, label %19

19:                                               ; preds = %14, %36
  %20 = phi %"class.fxcrt::RetainPtr"* [ %21, %36 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %20, i64 -1
  %22 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %22, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %22, align 8
  %24 = icmp eq %class.CPDF_Dictionary* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0
  %32 = bitcast %class.CPDF_Dictionary* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #9
  br label %36

36:                                               ; preds = %30, %25, %19
  %37 = icmp eq %"class.fxcrt::RetainPtr"* %21, %12
  br i1 %37, label %38, label %19

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector.219"* %10 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %14
  %42 = phi i8* [ %40, %38 ], [ %15, %14 ]
  store %"class.fxcrt::RetainPtr"* %12, %"class.fxcrt::RetainPtr"** %16, align 8
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %4, %41
  %44 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJPS3_EEEvDpOT_(%"class.std::__1::vector.219"*, %class.CPDF_Dictionary** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.fxcrt::RetainPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.219"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.219"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.fxcrt::RetainPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.fxcrt::RetainPtr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.fxcrt::RetainPtr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %35
  %39 = ptrtoint %"class.fxcrt::RetainPtr"* %38 to i64
  %40 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %1, align 8
  %41 = ptrtoint %class.CPDF_Dictionary* %40 to i64
  %42 = bitcast %"class.fxcrt::RetainPtr"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = icmp eq %class.CPDF_Dictionary* %40, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %40, i64 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %46, 1
  store i64 %47, i64* %45, align 8
  br label %48

48:                                               ; preds = %34, %44
  %49 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 1
  %50 = ptrtoint %"class.fxcrt::RetainPtr"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %51, align 8
  %53 = ptrtoint %"class.fxcrt::RetainPtr"* %52 to i64
  %54 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %3, align 8
  %55 = icmp eq %"class.fxcrt::RetainPtr"* %54, %52
  br i1 %55, label %221, label %56

56:                                               ; preds = %48
  %57 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 -1, i32 0, i32 0, i32 0, i32 0
  %58 = ptrtoint %class.CPDF_Dictionary** %57 to i64
  %59 = sub i64 %58, %53
  %60 = lshr i64 %59, 3
  %61 = add nuw nsw i64 %60, 1
  %62 = icmp ult i64 %61, 4
  br i1 %62, label %167, label %63

63:                                               ; preds = %56
  %64 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 -1, i32 0, i32 0, i32 0, i32 0
  %65 = ptrtoint %class.CPDF_Dictionary** %64 to i64
  %66 = sub i64 %65, %53
  %67 = lshr i64 %66, 3
  %68 = xor i64 %67, -1
  %69 = add nsw i64 %9, %68
  %70 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %69
  %71 = xor i64 %67, -1
  %72 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 %71
  %73 = icmp ult %"class.fxcrt::RetainPtr"* %70, %54
  %74 = icmp ult %"class.fxcrt::RetainPtr"* %72, %37
  %75 = and i1 %73, %74
  br i1 %75, label %167, label %76

76:                                               ; preds = %63
  %77 = and i64 %61, 4611686018427387900
  %78 = sub nsw i64 0, %77
  %79 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 %78
  %80 = sub nsw i64 0, %77
  %81 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 %80
  %82 = add nsw i64 %77, -4
  %83 = lshr exact i64 %82, 2
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %82, 0
  br i1 %86, label %141, label %87

87:                                               ; preds = %76
  %88 = sub nuw nsw i64 %84, %85
  %89 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %90 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 -1
  %91 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %92 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 -1
  br label %93

93:                                               ; preds = %93, %87
  %94 = phi i64 [ 0, %87 ], [ %136, %93 ]
  %95 = phi i64 [ %88, %87 ], [ %137, %93 ]
  %96 = sub i64 0, %94
  %97 = sub i64 0, %94
  %98 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %89, i64 %96
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %90, i64 %97
  %100 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %98, i64 -1
  %101 = bitcast %"class.fxcrt::RetainPtr"* %100 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %101, align 8, !alias.scope !6, !noalias !9
  %102 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %98, i64 -2
  %103 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %102, i64 -1
  %104 = bitcast %"class.fxcrt::RetainPtr"* %103 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %104, align 8, !alias.scope !6, !noalias !9
  %105 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %99, i64 -1
  %106 = bitcast %"class.fxcrt::RetainPtr"* %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !9
  %108 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %99, i64 -2
  %109 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %108, i64 -1
  %110 = bitcast %"class.fxcrt::RetainPtr"* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !9
  %112 = bitcast %"class.fxcrt::RetainPtr"* %100 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %112, align 8, !alias.scope !6, !noalias !9
  %113 = bitcast %"class.fxcrt::RetainPtr"* %103 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %113, align 8, !alias.scope !6, !noalias !9
  %114 = bitcast %"class.fxcrt::RetainPtr"* %105 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %114, align 8, !alias.scope !9
  %115 = bitcast %"class.fxcrt::RetainPtr"* %109 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %115, align 8, !alias.scope !9
  %116 = sub nuw nsw i64 -4, %94
  %117 = sub nuw nsw i64 -4, %94
  %118 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %91, i64 %116
  %119 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %92, i64 %117
  %120 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %118, i64 -1
  %121 = bitcast %"class.fxcrt::RetainPtr"* %120 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %121, align 8, !alias.scope !6, !noalias !9
  %122 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %118, i64 -2
  %123 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %122, i64 -1
  %124 = bitcast %"class.fxcrt::RetainPtr"* %123 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %124, align 8, !alias.scope !6, !noalias !9
  %125 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %119, i64 -1
  %126 = bitcast %"class.fxcrt::RetainPtr"* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !9
  %128 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %119, i64 -2
  %129 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %128, i64 -1
  %130 = bitcast %"class.fxcrt::RetainPtr"* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !9
  %132 = bitcast %"class.fxcrt::RetainPtr"* %120 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %132, align 8, !alias.scope !6, !noalias !9
  %133 = bitcast %"class.fxcrt::RetainPtr"* %123 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %133, align 8, !alias.scope !6, !noalias !9
  %134 = bitcast %"class.fxcrt::RetainPtr"* %125 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %134, align 8, !alias.scope !9
  %135 = bitcast %"class.fxcrt::RetainPtr"* %129 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %135, align 8, !alias.scope !9
  %136 = add i64 %94, 8
  %137 = add i64 %95, -2
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %93, !llvm.loop !11

139:                                              ; preds = %93
  %140 = sub nuw nsw i64 -8, %94
  br label %141

141:                                              ; preds = %139, %76
  %142 = phi i64 [ 0, %76 ], [ %140, %139 ]
  %143 = icmp eq i64 %85, 0
  br i1 %143, label %165, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %146 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %54, i64 -1
  %147 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %145, i64 %142
  %148 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %146, i64 %142
  %149 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %147, i64 -1
  %150 = bitcast %"class.fxcrt::RetainPtr"* %149 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %150, align 8, !alias.scope !6, !noalias !9
  %151 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %147, i64 -2
  %152 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %151, i64 -1
  %153 = bitcast %"class.fxcrt::RetainPtr"* %152 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %153, align 8, !alias.scope !6, !noalias !9
  %154 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %148, i64 -1
  %155 = bitcast %"class.fxcrt::RetainPtr"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !9
  %157 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %148, i64 -2
  %158 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %157, i64 -1
  %159 = bitcast %"class.fxcrt::RetainPtr"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !9
  %161 = bitcast %"class.fxcrt::RetainPtr"* %149 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %161, align 8, !alias.scope !6, !noalias !9
  %162 = bitcast %"class.fxcrt::RetainPtr"* %152 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %162, align 8, !alias.scope !6, !noalias !9
  %163 = bitcast %"class.fxcrt::RetainPtr"* %154 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %163, align 8, !alias.scope !9
  %164 = bitcast %"class.fxcrt::RetainPtr"* %158 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %164, align 8, !alias.scope !9
  br label %165

165:                                              ; preds = %141, %144
  %166 = icmp eq i64 %61, %77
  br i1 %166, label %217, label %167

167:                                              ; preds = %165, %63, %56
  %168 = phi %"class.fxcrt::RetainPtr"* [ %37, %63 ], [ %37, %56 ], [ %79, %165 ]
  %169 = phi %"class.fxcrt::RetainPtr"* [ %54, %63 ], [ %54, %56 ], [ %81, %165 ]
  %170 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %169, i64 -1, i32 0, i32 0, i32 0, i32 0
  %171 = ptrtoint %class.CPDF_Dictionary** %170 to i64
  %172 = sub i64 %171, %53
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %167, %177
  %178 = phi %"class.fxcrt::RetainPtr"* [ %181, %177 ], [ %168, %167 ]
  %179 = phi %"class.fxcrt::RetainPtr"* [ %182, %177 ], [ %169, %167 ]
  %180 = phi i64 [ %186, %177 ], [ %175, %167 ]
  %181 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %178, i64 -1
  %182 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %179, i64 -1
  %183 = bitcast %"class.fxcrt::RetainPtr"* %181 to i64*
  store i64 0, i64* %183, align 8
  %184 = bitcast %"class.fxcrt::RetainPtr"* %182 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  store i64 0, i64* %184, align 8
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !13

188:                                              ; preds = %177, %167
  %189 = phi %"class.fxcrt::RetainPtr"* [ undef, %167 ], [ %181, %177 ]
  %190 = phi %"class.fxcrt::RetainPtr"* [ %168, %167 ], [ %181, %177 ]
  %191 = phi %"class.fxcrt::RetainPtr"* [ %169, %167 ], [ %182, %177 ]
  %192 = icmp ult i64 %172, 24
  br i1 %192, label %217, label %193

193:                                              ; preds = %188, %193
  %194 = phi %"class.fxcrt::RetainPtr"* [ %211, %193 ], [ %190, %188 ]
  %195 = phi %"class.fxcrt::RetainPtr"* [ %212, %193 ], [ %191, %188 ]
  %196 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %194, i64 -1
  %197 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %195, i64 -1
  %198 = bitcast %"class.fxcrt::RetainPtr"* %196 to i64*
  store i64 0, i64* %198, align 8
  %199 = bitcast %"class.fxcrt::RetainPtr"* %197 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  store i64 0, i64* %199, align 8
  %201 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %194, i64 -2
  %202 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %195, i64 -2
  %203 = bitcast %"class.fxcrt::RetainPtr"* %201 to i64*
  store i64 0, i64* %203, align 8
  %204 = bitcast %"class.fxcrt::RetainPtr"* %202 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %203, align 8
  store i64 0, i64* %204, align 8
  %206 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %194, i64 -3
  %207 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %195, i64 -3
  %208 = bitcast %"class.fxcrt::RetainPtr"* %206 to i64*
  store i64 0, i64* %208, align 8
  %209 = bitcast %"class.fxcrt::RetainPtr"* %207 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  store i64 0, i64* %209, align 8
  %211 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %194, i64 -4
  %212 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %195, i64 -4
  %213 = bitcast %"class.fxcrt::RetainPtr"* %211 to i64*
  store i64 0, i64* %213, align 8
  %214 = bitcast %"class.fxcrt::RetainPtr"* %212 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  store i64 0, i64* %214, align 8
  %216 = icmp eq %"class.fxcrt::RetainPtr"* %212, %52
  br i1 %216, label %217, label %193, !llvm.loop !15

217:                                              ; preds = %188, %193, %165
  %218 = phi %"class.fxcrt::RetainPtr"* [ %79, %165 ], [ %189, %188 ], [ %211, %193 ]
  %219 = load i64, i64* %6, align 8
  %220 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %3, align 8
  br label %221

221:                                              ; preds = %48, %217
  %222 = phi %"class.fxcrt::RetainPtr"* [ %220, %217 ], [ %52, %48 ]
  %223 = phi %"class.fxcrt::RetainPtr"* [ %218, %217 ], [ %37, %48 ]
  %224 = phi i64 [ %219, %217 ], [ %53, %48 ]
  %225 = ptrtoint %"class.fxcrt::RetainPtr"* %223 to i64
  store i64 %225, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %226 = inttoptr i64 %224 to %"class.fxcrt::RetainPtr"*
  %227 = icmp eq %"class.fxcrt::RetainPtr"* %222, %226
  br i1 %227, label %247, label %228

228:                                              ; preds = %221, %245
  %229 = phi %"class.fxcrt::RetainPtr"* [ %230, %245 ], [ %222, %221 ]
  %230 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %229, i64 -1
  %231 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %230, i64 0, i32 0, i32 0, i32 0, i32 0
  %232 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %231, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %231, align 8
  %233 = icmp eq %class.CPDF_Dictionary* %232, null
  br i1 %233, label %245, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %232, i64 0, i32 0, i32 0, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = add nsw i64 %236, -1
  store i64 %237, i64* %235, align 8
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %245

239:                                              ; preds = %234
  %240 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %232, i64 0, i32 0, i32 0
  %241 = bitcast %class.CPDF_Dictionary* %232 to void (%"class.fxcrt::Retainable"*)***
  %242 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %242, i64 1
  %244 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %243, align 8
  tail call void %244(%"class.fxcrt::Retainable"* nonnull %240) #9
  br label %245

245:                                              ; preds = %239, %234, %228
  %246 = icmp eq %"class.fxcrt::RetainPtr"* %230, %226
  br i1 %246, label %247, label %228

247:                                              ; preds = %245, %221
  %248 = icmp eq i64 %224, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %247
  %250 = inttoptr i64 %224 to i8*
  tail call void @_ZdlPv(i8* %250) #10
  br label %251

251:                                              ; preds = %247, %249
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN5fxcrt9RetainPtrI15CPDF_DictionaryEENS_9allocatorIS6_EEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12}
