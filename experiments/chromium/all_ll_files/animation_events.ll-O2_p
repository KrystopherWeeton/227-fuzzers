; ModuleID = '../../cc/animation/animation_events.cc'
source_filename = "../../cc/animation/animation_events.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::AnimationEvent" = type { i32, %"struct.cc::AnimationEvent::UniqueKeyframeModelId", i32, i32, %"class.base::TimeTicks", i8, %"class.base::TimeTicks", %"class.std::__1::unique_ptr", %"class.absl::optional" }
%"struct.cc::AnimationEvent::UniqueKeyframeModelId" = type { i32, i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::AnimationCurve"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.cc::AnimationEvents" = type <{ %"class.cc::MutatorEvents", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.cc::AnimationEvent"* }

@_ZTVN2cc15AnimationEventsE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::AnimationEvents"*)* @_ZN2cc15AnimationEventsD2Ev to i8*), i8* bitcast (void (%"class.cc::AnimationEvents"*)* @_ZN2cc15AnimationEventsD0Ev to i8*), i8* bitcast (i1 (%"class.cc::AnimationEvents"*)* @_ZNK2cc15AnimationEvents7IsEmptyEv to i8*)] }, align 8

@_ZN2cc14AnimationEventC1ENS0_4TypeENS0_21UniqueKeyframeModelIdEiiN4base9TimeTicksE = hidden unnamed_addr alias void (%"struct.cc::AnimationEvent"*, i32, i64, i32, i32, i32, i64), void (%"struct.cc::AnimationEvent"*, i32, i64, i32, i32, i32, i64)* @_ZN2cc14AnimationEventC2ENS0_4TypeENS0_21UniqueKeyframeModelIdEiiN4base9TimeTicksE
@_ZN2cc14AnimationEventC1EiiN4absl8optionalIN4base9TimeDeltaEEE = hidden unnamed_addr alias void (%"struct.cc::AnimationEvent"*, i32, i32, i8, i64), void (%"struct.cc::AnimationEvent"*, i32, i32, i8, i64)* @_ZN2cc14AnimationEventC2EiiN4absl8optionalIN4base9TimeDeltaEEE
@_ZN2cc14AnimationEventC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"*), void (%"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"*)* @_ZN2cc14AnimationEventC2ERKS0_
@_ZN2cc14AnimationEventD1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationEvent"*), void (%"struct.cc::AnimationEvent"*)* @_ZN2cc14AnimationEventD2Ev
@_ZN2cc15AnimationEventsC1Ev = hidden unnamed_addr alias void (%"class.cc::AnimationEvents"*), void (%"class.cc::AnimationEvents"*)* @_ZN2cc15AnimationEventsC2Ev
@_ZN2cc15AnimationEventsD1Ev = hidden unnamed_addr alias void (%"class.cc::AnimationEvents"*), void (%"class.cc::AnimationEvents"*)* @_ZN2cc15AnimationEventsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14AnimationEventC2ENS0_4TypeENS0_21UniqueKeyframeModelIdEiiN4base9TimeTicksE(%"struct.cc::AnimationEvent"* nocapture, i32, i64, i32, i32, i32, i64) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1
  %10 = bitcast %"struct.cc::AnimationEvent::UniqueKeyframeModelId"* %9 to i64*
  store i64 %2, i64* %10, align 4
  %11 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 3
  store i32 %5, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %6, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 5
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %17 = bitcast i64* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14AnimationEventC2EiiN4absl8optionalIN4base9TimeDeltaEEE(%"struct.cc::AnimationEvent"* nocapture, i32, i32, i8, i64) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 0
  store i32 4, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1, i32 2
  %10 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 21, i1 false)
  %13 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  store i8 %3, i8* %11, align 8
  %14 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %4, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14AnimationEventC2ERKS0_(%"struct.cc::AnimationEvent"* nocapture, %"struct.cc::AnimationEvent"* nocapture readonly dereferenceable(72)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 0
  %8 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 17, i1 false)
  %9 = load i32, i32* %7, align 8
  %10 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 0
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1
  %13 = bitcast %"struct.cc::AnimationEvent::UniqueKeyframeModelId"* %12 to i8*
  %14 = bitcast %"struct.cc::AnimationEvent::UniqueKeyframeModelId"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 2
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 4, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %3, align 8
  %23 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 5
  store i8 %24, i8* %25, align 8
  %26 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 6, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  %28 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %28, align 8
  %30 = icmp eq %"class.gfx::AnimationCurve"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  %33 = bitcast %"class.gfx::AnimationCurve"* %29 to %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)***
  %34 = load %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)**, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)** %34, i64 5
  %36 = load %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)** %35, align 8
  %37 = tail call %"class.gfx::AnimationCurve"* %36(%"class.gfx::AnimationCurve"* nonnull %29) #5
  %38 = ptrtoint %"class.gfx::AnimationCurve"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %39, align 8
  store i64 %38, i64* %32, align 8
  %41 = icmp eq %"class.gfx::AnimationCurve"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %31
  %43 = bitcast %"class.gfx::AnimationCurve"* %40 to void (%"class.gfx::AnimationCurve"*)***
  %44 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %44, i64 1
  %46 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %45, align 8
  tail call void %46(%"class.gfx::AnimationCurve"* nonnull %40) #5
  br label %47

47:                                               ; preds = %2, %31, %42
  %48 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %48, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.cc::AnimationEvent"* @_ZN2cc14AnimationEventaSERKS0_(%"struct.cc::AnimationEvent"* returned, %"struct.cc::AnimationEvent"* nocapture readonly dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 1
  %8 = bitcast %"struct.cc::AnimationEvent::UniqueKeyframeModelId"* %7 to i8*
  %9 = bitcast %"struct.cc::AnimationEvent::UniqueKeyframeModelId"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false)
  %10 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 2
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 4, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 5
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 5
  store i8 %20, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 6, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %26 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %25, align 8
  %27 = icmp eq %"class.gfx::AnimationCurve"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %2
  %29 = bitcast %"class.gfx::AnimationCurve"* %26 to %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)***
  %30 = load %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)**, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)** %30, i64 5
  %32 = load %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::AnimationCurve"*)** %31, align 8
  %33 = tail call %"class.gfx::AnimationCurve"* %32(%"class.gfx::AnimationCurve"* nonnull %26) #5
  %34 = ptrtoint %"class.gfx::AnimationCurve"* %33 to i64
  %35 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 7
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.gfx::AnimationCurve"* %37, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %28
  %41 = bitcast %"class.gfx::AnimationCurve"* %37 to void (%"class.gfx::AnimationCurve"*)***
  %42 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %42, i64 1
  %44 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %43, align 8
  tail call void %44(%"class.gfx::AnimationCurve"* nonnull %37) #5
  br label %45

45:                                               ; preds = %2, %28, %40
  %46 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false)
  ret %"struct.cc::AnimationEvent"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14AnimationEventD2Ev(%"struct.cc::AnimationEvent"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %2, align 8
  store %"class.gfx::AnimationCurve"* null, %"class.gfx::AnimationCurve"** %2, align 8
  %4 = icmp eq %"class.gfx::AnimationCurve"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gfx::AnimationCurve"* %3 to void (%"class.gfx::AnimationCurve"*)***
  %7 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %7, i64 1
  %9 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %8, align 8
  tail call void %9(%"class.gfx::AnimationCurve"* nonnull %3) #5
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15AnimationEventsC2Ev(%"class.cc::AnimationEvents"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15AnimationEventsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15AnimationEventsD2Ev(%"class.cc::AnimationEvents"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15AnimationEventsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %4, align 8
  %6 = icmp eq %"struct.cc::AnimationEvent"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::AnimationEvent"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %9, align 8
  %11 = icmp eq %"struct.cc::AnimationEvent"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.cc::AnimationEvent"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %13, i64 -1, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %15, align 8
  store %"class.gfx::AnimationCurve"* null, %"class.gfx::AnimationCurve"** %15, align 8
  %17 = icmp eq %"class.gfx::AnimationCurve"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.gfx::AnimationCurve"* %16 to void (%"class.gfx::AnimationCurve"*)***
  %20 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %20, i64 1
  %22 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %21, align 8
  tail call void %22(%"class.gfx::AnimationCurve"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.cc::AnimationEvent"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.cc::AnimationEvent"* %5, %"struct.cc::AnimationEvent"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15AnimationEventsD0Ev(%"class.cc::AnimationEvents"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15AnimationEventsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %4, align 8
  %6 = icmp eq %"struct.cc::AnimationEvent"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::AnimationEvent"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %9, align 8
  %11 = icmp eq %"struct.cc::AnimationEvent"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.cc::AnimationEvent"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %13, i64 -1, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %15, align 8
  store %"class.gfx::AnimationCurve"* null, %"class.gfx::AnimationCurve"** %15, align 8
  %17 = icmp eq %"class.gfx::AnimationCurve"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.gfx::AnimationCurve"* %16 to void (%"class.gfx::AnimationCurve"*)***
  %20 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %20, i64 1
  %22 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %21, align 8
  tail call void %22(%"class.gfx::AnimationCurve"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.cc::AnimationEvent"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.cc::AnimationEvent"* %5, %"struct.cc::AnimationEvent"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.cc::AnimationEvents"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc15AnimationEvents7IsEmptyEv(%"class.cc::AnimationEvents"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %4, align 8
  %6 = icmp eq %"struct.cc::AnimationEvent"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc14AnimationEvent38ShouldDispatchToKeyframeEffectAndModelEv(%"struct.cc::AnimationEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 4
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
