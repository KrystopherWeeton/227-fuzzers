; ModuleID = '../../chrome/browser/crash_upload_list/crash_upload_list.cc'
source_filename = "../../chrome/browser/crash_upload_list/crash_upload_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.UploadList = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::SequenceCheckerDoNothing", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.std::__1::vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"*, %"class.std::__1::__compressed_pair.13" }
%"struct.UploadList::UploadInfo" = type { %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"class.base::Time", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string.4" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.UploadList::UploadInfo"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.21" }
%class.scoped_refptr = type { %class.UploadList* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.scoped_refptr* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.TextLogUploadList = type { %class.UploadList, %"class.base::FilePath" }
%class.CrashUploadListCrashpad = type { %class.UploadList }
%class.CombiningUploadList = type { %class.UploadList, %"class.std::__1::vector.19" }

@_ZN15CrashUploadList20kReporterLogFilenameE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.UploadList* @_Z21CreateCrashUploadListv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::vector.19", align 8
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca [2 x %class.scoped_refptr], align 8
  %5 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %2) #7
  %7 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 1003, %"class.base::FilePath"* nonnull %2) #7
  %8 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN15CrashUploadList20kReporterLogFilenameE, i64 0, i64 0)) #7
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %3, %"class.base::FilePath"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN15CrashUploadList20kReporterLogFilenameE, i64 0, i64 0), i64 %10) #7
  %11 = call i8* @_Znwm(i64 80) #8
  %12 = bitcast i8* %11 to %class.TextLogUploadList*
  call void @_ZN17TextLogUploadListC1ERKN4base8FilePathE(%class.TextLogUploadList* nonnull %12, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #7
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = ptrtoint i8* %11 to i64
  %17 = call zeroext i1 @_ZN14crash_reporter17IsCrashpadEnabledEv() #7
  br i1 %17, label %18, label %97

18:                                               ; preds = %0
  %19 = bitcast [2 x %class.scoped_refptr]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = call i8* @_Znwm(i64 56) #8
  %21 = bitcast i8* %20 to %class.CrashUploadListCrashpad*
  call void @_ZN23CrashUploadListCrashpadC1Ev(%class.CrashUploadListCrashpad* nonnull %21) #7
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = ptrtoint i8* %20 to i64
  %26 = bitcast [2 x %class.scoped_refptr]* %4 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds [2 x %class.scoped_refptr], [2 x %class.scoped_refptr]* %4, i64 0, i64 1
  %28 = bitcast %class.scoped_refptr* %27 to i64*
  store i64 %16, i64* %28, align 8
  %29 = call i8* @_Znwm(i64 16) #8
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %29 to i8**
  store i8* %20, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %20, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = getelementptr inbounds [2 x %class.scoped_refptr], [2 x %class.scoped_refptr]* %4, i64 0, i64 1, i32 0
  %36 = load %class.UploadList*, %class.UploadList** %35, align 8
  %37 = getelementptr inbounds i8, i8* %29, i64 8
  %38 = bitcast i8* %37 to %class.UploadList**
  store %class.UploadList* %36, %class.UploadList** %38, align 8
  %39 = icmp eq %class.UploadList* %36, null
  br i1 %39, label %40, label %125

40:                                               ; preds = %18
  %41 = getelementptr inbounds i8, i8* %29, i64 16
  %42 = ptrtoint i8* %29 to i64
  %43 = ptrtoint i8* %30 to i64
  br label %56

44:                                               ; preds = %125
  %45 = getelementptr inbounds %class.UploadList, %class.UploadList* %129, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %50 to %class.UploadList*
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %50 to void (%class.UploadList*)***
  %53 = load void (%class.UploadList*)**, void (%class.UploadList*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.UploadList*)*, void (%class.UploadList*)** %53, i64 1
  %55 = load void (%class.UploadList*)*, void (%class.UploadList*)** %54, align 8
  call void %55(%class.UploadList* nonnull %51) #7
  br label %56

56:                                               ; preds = %40, %125, %44, %49
  %57 = phi i64 [ %43, %40 ], [ %132, %125 ], [ %132, %44 ], [ %132, %49 ]
  %58 = phi i64 [ %42, %40 ], [ %131, %125 ], [ %131, %44 ], [ %131, %49 ]
  %59 = phi i8* [ %41, %40 ], [ %130, %125 ], [ %130, %44 ], [ %130, %49 ]
  %60 = getelementptr inbounds [2 x %class.scoped_refptr], [2 x %class.scoped_refptr]* %4, i64 0, i64 0, i32 0
  %61 = load %class.UploadList*, %class.UploadList** %60, align 8
  %62 = icmp eq %class.UploadList* %61, null
  br i1 %62, label %112, label %100

63:                                               ; preds = %112
  %64 = bitcast %class.scoped_refptr* %123 to i8*
  %65 = load %class.scoped_refptr*, %class.scoped_refptr** %118, align 8
  %66 = icmp eq %class.scoped_refptr* %65, %123
  br i1 %66, label %90, label %67

67:                                               ; preds = %63, %85
  %68 = phi %class.scoped_refptr* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 -1
  %70 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %69, i64 0, i32 0
  %71 = load %class.UploadList*, %class.UploadList** %70, align 8
  %72 = icmp eq %class.UploadList* %71, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.UploadList, %class.UploadList* %71, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %79 to %class.UploadList*
  %81 = bitcast %"class.base::RefCountedThreadSafe"* %79 to void (%class.UploadList*)***
  %82 = load void (%class.UploadList*)**, void (%class.UploadList*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.UploadList*)*, void (%class.UploadList*)** %82, i64 1
  %84 = load void (%class.UploadList*)*, void (%class.UploadList*)** %83, align 8
  call void %84(%class.UploadList* nonnull %80) #7
  br label %85

85:                                               ; preds = %78, %73, %67
  %86 = icmp eq %class.scoped_refptr* %69, %123
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = bitcast %"class.std::__1::vector.19"* %1 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %63
  %91 = phi i8* [ %89, %87 ], [ %64, %63 ]
  store %class.scoped_refptr* %123, %class.scoped_refptr** %118, align 8
  call void @_ZdlPv(i8* %91) #8
  br label %92

92:                                               ; preds = %112, %90
  %93 = getelementptr inbounds i8, i8* %115, i64 8
  %94 = bitcast i8* %93 to i32*
  %95 = atomicrmw add i32* %94, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  %96 = ptrtoint i8* %115 to i64
  br label %97

97:                                               ; preds = %92, %0
  %98 = phi i64 [ %16, %0 ], [ %96, %92 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  %99 = inttoptr i64 %98 to %class.UploadList*
  ret %class.UploadList* %99

100:                                              ; preds = %56
  %101 = getelementptr inbounds %class.UploadList, %class.UploadList* %61, i64 0, i32 1
  %102 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw sub i32* %102, i32 1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %112

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %101, i64 -2
  %107 = bitcast %"class.base::RefCountedThreadSafe"* %106 to %class.UploadList*
  %108 = bitcast %"class.base::RefCountedThreadSafe"* %106 to void (%class.UploadList*)***
  %109 = load void (%class.UploadList*)**, void (%class.UploadList*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.UploadList*)*, void (%class.UploadList*)** %109, i64 1
  %111 = load void (%class.UploadList*)*, void (%class.UploadList*)** %110, align 8
  call void %111(%class.UploadList* nonnull %107) #7
  br label %112

112:                                              ; preds = %105, %100, %56
  %113 = ptrtoint i8* %59 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  %114 = bitcast %"class.std::__1::vector.19"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  %115 = call i8* @_Znwm(i64 80) #8
  %116 = bitcast i8* %115 to %class.CombiningUploadList*
  %117 = bitcast %"class.std::__1::vector.19"* %1 to i64*
  store i64 %58, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 1
  %119 = bitcast %class.scoped_refptr** %118 to i64*
  store i64 %113, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast %class.scoped_refptr** %120 to i64*
  store i64 %57, i64* %121, align 8
  call void @_ZN19CombiningUploadListC1ENSt3__16vectorI13scoped_refptrI10UploadListENS0_9allocatorIS4_EEEE(%class.CombiningUploadList* nonnull %116, %"class.std::__1::vector.19"* nonnull %1) #7
  %122 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 0
  %123 = load %class.scoped_refptr*, %class.scoped_refptr** %122, align 8
  %124 = icmp eq %class.scoped_refptr* %123, null
  br i1 %124, label %92, label %63

125:                                              ; preds = %18
  %126 = getelementptr inbounds %class.UploadList, %class.UploadList* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 1 monotonic
  %128 = getelementptr inbounds [2 x %class.scoped_refptr], [2 x %class.scoped_refptr]* %4, i64 0, i64 1, i32 0
  %129 = load %class.UploadList*, %class.UploadList** %128, align 8
  %130 = getelementptr inbounds i8, i8* %29, i64 16
  %131 = ptrtoint i8* %29 to i64
  %132 = ptrtoint i8* %30 to i64
  %133 = icmp eq %class.UploadList* %129, null
  br i1 %133, label %56, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32, %"class.base::FilePath"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN14crash_reporter17IsCrashpadEnabledEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN17TextLogUploadListC1ERKN4base8FilePathE(%class.TextLogUploadList*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN23CrashUploadListCrashpadC1Ev(%class.CrashUploadListCrashpad*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN19CombiningUploadListC1ENSt3__16vectorI13scoped_refptrI10UploadListENS0_9allocatorIS4_EEEE(%class.CombiningUploadList*, %"class.std::__1::vector.19"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
