; ModuleID = '../../third_party/blink/renderer/platform/fonts/skia/skia_text_metrics.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/skia/skia_text_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkPaint = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [512 x i8] }
%"class.WTF::VectorBufferBase" = type { i16*, i32, i32 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9", [1024 x i8] }
%"class.WTF::VectorBufferBase.9" = type { float*, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF12VectorBufferIfLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf = comdat any

$_ZN3WTF12VectorBufferItLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPt = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm = comdat any

$_ZN3WTF6VectorItLj256ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj256ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/fonts/skia/skia_text_metrics.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"extents\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned short]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPi(%class.SkFont* dereferenceable(24), i32, i32*) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca float, align 4
  %6 = alloca i16, align 2
  %7 = icmp eq i32* %2, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #7
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %11

11:                                               ; preds = %3, %8
  %12 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %13 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13) #7
  %14 = trunc i32 %1 to i16
  store i16 %14, i16* %6, align 2
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* nonnull %6, i32 1, float* nonnull %5, %struct.SkRect* null, %class.SkPaint* null) #7
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 4
  %17 = and i8 %16, 4
  %18 = icmp eq i8 %17, 0
  %19 = load float, float* %5, align 4
  br i1 %18, label %20, label %29

20:                                               ; preds = %11
  %21 = fadd float %19, 5.000000e-01
  %22 = call float @llvm.floor.f32(float %21)
  %23 = fcmp olt float %22, 0x41DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0x41DFFFFFE0000000
  %25 = fcmp ogt float %24, 0xC1DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0xC1DFFFFFE0000000
  %27 = fptosi float %26 to i32
  %28 = sitofp i32 %27 to float
  store float %28, float* %5, align 4
  br label %29

29:                                               ; preds = %11, %20
  %30 = phi float [ %28, %20 ], [ %19, %11 ]
  %31 = fmul float %30, 6.553600e+04
  %32 = fpext float %31 to double
  %33 = fcmp ult double %32, 0x41DFFFFFFFC00000
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = fcmp ugt float %31, 0xC1E0000000000000
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = fptosi float %31 to i32
  br label %38

38:                                               ; preds = %29, %34, %36
  %39 = phi i32 [ %37, %36 ], [ 2147483647, %29 ], [ -2147483648, %34 ]
  store i32 %39, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float) local_unnamed_addr #5 {
  %2 = fmul float %0, 6.553600e+04
  %3 = fpext float %2 to double
  %4 = fcmp ult double %3, 0x41DFFFFFFFC00000
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = fcmp ugt float %2, 0xC1E0000000000000
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = fptosi float %2 to i32
  br label %9

9:                                                ; preds = %1, %5, %7
  %10 = phi i32 [ %8, %7 ], [ 2147483647, %1 ], [ -2147483648, %5 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPKjjPij(%class.SkFont* dereferenceable(24), i32, i32* nocapture readonly, i32, i32* nocapture, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::Vector.7", align 8
  %9 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 528, i1 false)
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.WTF::Vector"* %7 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %12, align 8
  %13 = icmp ugt i32 %1, 256
  %14 = zext i32 %1 to i64
  br i1 %13, label %15, label %24

15:                                               ; preds = %6
  %16 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64 %14) #7
  %17 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv, i64 0, i64 0)) #7
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 1
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %12, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 %1, i32* %22, align 4
  %23 = shl nuw nsw i64 %14, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %23, i1 false) #7
  br label %28

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 %1, i32* %25, align 4
  %26 = shl nuw nsw i64 %14, 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 %26, i1 false) #7
  %27 = icmp eq i32 %1, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %15, %24
  %29 = phi i32* [ %22, %15 ], [ %25, %24 ]
  %30 = zext i32 %3 to i64
  br label %59

31:                                               ; preds = %59, %24
  %32 = phi i1 [ true, %24 ], [ false, %59 ]
  %33 = phi i32* [ %25, %24 ], [ %29, %59 ]
  %34 = bitcast %"class.WTF::Vector.7"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %34) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 1040, i1 false)
  %35 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %8, i64 0, i32 0, i32 1, i64 0
  %36 = bitcast %"class.WTF::Vector.7"* %8 to i8**
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %8, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %37, align 8
  br i1 %13, label %38, label %45

38:                                               ; preds = %31
  %39 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %14) #7
  %40 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #7
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"class.WTF::Vector.7"* %8 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = lshr i64 %39, 2
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %37, align 8
  br label %45

45:                                               ; preds = %31, %38
  %46 = phi i8* [ %40, %38 ], [ %35, %31 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %8, i64 0, i32 0, i32 0, i32 2
  store i32 %1, i32* %47, align 4
  %48 = shl nuw nsw i64 %14, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 %48, i1 false) #7
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %8, i64 0, i32 0, i32 0, i32 0
  %52 = load float*, float** %51, align 8
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* %50, i32 %1, float* %52, %struct.SkRect* null, %class.SkPaint* null) #7
  %53 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %54 = load i8, i8* %53, align 4
  %55 = and i8 %54, 4
  %56 = icmp eq i8 %55, 0
  %57 = icmp ne i32 %1, 0
  %58 = and i1 %56, %57
  br i1 %58, label %70, label %85

59:                                               ; preds = %59, %28
  %60 = phi i32 [ 0, %28 ], [ %65, %59 ]
  %61 = phi i32* [ %2, %28 ], [ %68, %59 ]
  %62 = load i32, i32* %61, align 4
  %63 = trunc i32 %62 to i16
  %64 = call dereferenceable(2) i16* @_ZN3WTF6VectorItLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %7, i32 %60) #7
  store i16 %63, i16* %64, align 2
  %65 = add nuw i32 %60, 1
  %66 = bitcast i32* %61 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 %30
  %68 = bitcast i8* %67 to i32*
  %69 = icmp eq i32 %65, %1
  br i1 %69, label %31, label %59

70:                                               ; preds = %45, %70
  %71 = phi i32 [ %83, %70 ], [ 0, %45 ]
  %72 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"* nonnull %8, i32 %71) #7
  %73 = load float, float* %72, align 4
  %74 = fadd float %73, 5.000000e-01
  %75 = call float @llvm.floor.f32(float %74)
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = sitofp i32 %80 to float
  %82 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"* nonnull %8, i32 %71) #7
  store float %81, float* %82, align 4
  %83 = add nuw i32 %71, 1
  %84 = icmp eq i32 %83, %1
  br i1 %84, label %85, label %70

85:                                               ; preds = %70, %45
  br i1 %32, label %88, label %86

86:                                               ; preds = %85
  %87 = zext i32 %5 to i64
  br label %109

88:                                               ; preds = %121, %85
  %89 = load i32, i32* %47, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %88
  store i32 0, i32* %47, align 4
  br label %92

92:                                               ; preds = %91, %88
  %93 = load float*, float** %51, align 8
  %94 = bitcast i8* %35 to float*
  %95 = icmp eq float* %93, %94
  br i1 %95, label %98, label %96, !prof !3

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %8, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIfLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.8"* nonnull %97, float* %93) #7
  br label %98

98:                                               ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %34) #7
  %99 = load i32, i32* %33, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101, !prof !2

101:                                              ; preds = %98
  store i32 0, i32* %33, align 4
  br label %102

102:                                              ; preds = %101, %98
  %103 = load i16*, i16** %49, align 8
  %104 = bitcast i8* %10 to i16*
  %105 = icmp eq i16* %103, %104
  br i1 %105, label %108, label %106, !prof !3

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferItLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPt(%"class.WTF::VectorBuffer"* nonnull %107, i16* %103) #7
  br label %108

108:                                              ; preds = %102, %106
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %9) #7
  ret void

109:                                              ; preds = %121, %86
  %110 = phi i32 [ 0, %86 ], [ %123, %121 ]
  %111 = phi i32* [ %4, %86 ], [ %126, %121 ]
  %112 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"* nonnull %8, i32 %110) #7
  %113 = load float, float* %112, align 4
  %114 = fmul float %113, 6.553600e+04
  %115 = fpext float %114 to double
  %116 = fcmp ult double %115, 0x41DFFFFFFFC00000
  br i1 %116, label %117, label %121

117:                                              ; preds = %109
  %118 = fcmp ugt float %114, 0xC1E0000000000000
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = fptosi float %114 to i32
  br label %121

121:                                              ; preds = %109, %117, %119
  %122 = phi i32 [ %120, %119 ], [ 2147483647, %109 ], [ -2147483648, %117 ]
  store i32 %122, i32* %111, align 4
  %123 = add nuw i32 %110, 1
  %124 = bitcast i32* %111 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 %87
  %126 = bitcast i8* %125 to i32*
  %127 = icmp eq i32 %123, %1
  br i1 %127, label %88, label %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32SkFontGetGlyphExtentsForHarfBuzzERK6SkFontjP18hb_glyph_extents_t(%class.SkFont* dereferenceable(24), i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca <4 x float>, align 16
  %6 = bitcast <4 x float>* %5 to %struct.SkRect*
  %7 = alloca i16, align 2
  %8 = icmp eq %struct.hb_glyph_extents_t* %2, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #7
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds <4 x float>, <4 x float>* %5, i64 0, i64 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %18 = bitcast i16* %7 to i8*
  %19 = bitcast <4 x float>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #7
  %20 = trunc i32 %1 to i16
  store i16 %20, i16* %7, align 2
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* nonnull %7, i32 1, float* null, %struct.SkRect* nonnull %6, %class.SkPaint* null) #7
  %21 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 4
  %24 = icmp eq i8 %23, 0
  %25 = load float, float* %14, align 16
  br i1 %24, label %26, label %45

26:                                               ; preds = %12
  %27 = call float @llvm.floor.f32(float %25) #7
  %28 = load float, float* %15, align 4
  %29 = call float @llvm.floor.f32(float %28) #7
  %30 = load float, float* %16, align 8
  %31 = call float @llvm.ceil.f32(float %30) #7
  %32 = load float, float* %17, align 4
  %33 = call float @llvm.ceil.f32(float %32) #7
  %34 = insertelement <4 x float> undef, float %27, i32 0
  %35 = insertelement <4 x float> %34, float %29, i32 1
  %36 = insertelement <4 x float> %35, float %31, i32 2
  %37 = insertelement <4 x float> %36, float %33, i32 3
  %38 = fcmp olt <4 x float> %37, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %39 = select <4 x i1> %38, <4 x float> %37, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %40 = fcmp ogt <4 x float> %39, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %41 = select <4 x i1> %40, <4 x float> %39, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %42 = fptosi <4 x float> %41 to <4 x i32>
  %43 = sitofp <4 x i32> %42 to <4 x float>
  store <4 x float> %43, <4 x float>* %5, align 16
  %44 = extractelement <4 x float> %43, i32 0
  br label %45

45:                                               ; preds = %12, %26
  %46 = phi float [ %44, %26 ], [ %25, %12 ]
  %47 = fmul float %46, 6.553600e+04
  %48 = fpext float %47 to double
  %49 = fcmp ult double %48, 0x41DFFFFFFFC00000
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = fcmp ugt float %47, 0xC1E0000000000000
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = fptosi float %47 to i32
  br label %54

54:                                               ; preds = %45, %50, %52
  %55 = phi i32 [ %53, %52 ], [ 2147483647, %45 ], [ -2147483648, %50 ]
  %56 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 0
  store i32 %55, i32* %56, align 4
  %57 = load float, float* %15, align 4
  %58 = fmul float %57, -6.553600e+04
  %59 = fpext float %58 to double
  %60 = fcmp ult double %59, 0x41DFFFFFFFC00000
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = fcmp ugt float %58, 0xC1E0000000000000
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = fptosi float %58 to i32
  br label %65

65:                                               ; preds = %54, %61, %63
  %66 = phi i32 [ %64, %63 ], [ 2147483647, %54 ], [ -2147483648, %61 ]
  %67 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 1
  store i32 %66, i32* %67, align 4
  %68 = load float, float* %16, align 8
  %69 = fsub float %68, %46
  %70 = fmul float %69, 6.553600e+04
  %71 = fpext float %70 to double
  %72 = fcmp ult double %71, 0x41DFFFFFFFC00000
  br i1 %72, label %73, label %77

73:                                               ; preds = %65
  %74 = fcmp ugt float %70, 0xC1E0000000000000
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = fptosi float %70 to i32
  br label %77

77:                                               ; preds = %65, %73, %75
  %78 = phi i32 [ %76, %75 ], [ 2147483647, %65 ], [ -2147483648, %73 ]
  %79 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 2
  store i32 %78, i32* %79, align 4
  %80 = load float, float* %17, align 4
  %81 = fsub float %80, %57
  %82 = fmul float %81, -6.553600e+04
  %83 = fpext float %82 to double
  %84 = fcmp ult double %83, 0x41DFFFFFFFC00000
  br i1 %84, label %85, label %89

85:                                               ; preds = %77
  %86 = fcmp ugt float %82, 0xC1E0000000000000
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = fptosi float %82 to i32
  br label %89

89:                                               ; preds = %77, %85, %87
  %90 = phi i32 [ %88, %87 ], [ 2147483647, %77 ], [ -2147483648, %85 ]
  %91 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 3
  store i32 %90, i32* %91, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SkFontGetBoundsForGlyphERK6SkFonttP6SkRect(%class.SkFont* dereferenceable(24), i16 zeroext, %struct.SkRect*) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* nonnull %4, i32 1, float* null, %struct.SkRect* %2, %class.SkPaint* null) #7
  %5 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = call float @llvm.floor.f32(float %11) #7
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = call float @llvm.floor.f32(float %14) #7
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = call float @llvm.ceil.f32(float %17) #7
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = call float @llvm.ceil.f32(float %20) #7
  %22 = insertelement <4 x float> undef, float %12, i32 0
  %23 = insertelement <4 x float> %22, float %15, i32 1
  %24 = insertelement <4 x float> %23, float %18, i32 2
  %25 = insertelement <4 x float> %24, float %21, i32 3
  %26 = fcmp olt <4 x float> %25, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %27 = select <4 x i1> %26, <4 x float> %25, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %28 = fcmp ogt <4 x float> %27, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %29 = select <4 x i1> %28, <4 x float> %27, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %30 = fptosi <4 x float> %29 to <4 x i32>
  %31 = sitofp <4 x i32> %30 to <4 x float>
  %32 = bitcast %struct.SkRect* %2 to <4 x float>*
  store <4 x float> %31, <4 x float>* %32, align 4
  br label %33

33:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SkFontGetBoundsForGlyphsERK6SkFontRKN3WTF6VectorItLj256ENS3_18PartitionAllocatorEEEP6SkRect(%class.SkFont* dereferenceable(24), %"class.WTF::Vector"* nocapture readonly dereferenceable(528), %struct.SkRect*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* %5, i32 %7, float* null, %struct.SkRect* %2, %class.SkPaint* null) #7
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 4
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  %12 = load i32, i32* %6, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %44

15:                                               ; preds = %3, %15
  %16 = phi i64 [ %40, %15 ], [ 0, %3 ]
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 %16, i32 0
  %18 = load float, float* %17, align 4
  %19 = tail call float @llvm.floor.f32(float %18) #7
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 %16, i32 1
  %21 = load float, float* %20, align 4
  %22 = tail call float @llvm.floor.f32(float %21) #7
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 %16, i32 2
  %24 = load float, float* %23, align 4
  %25 = tail call float @llvm.ceil.f32(float %24) #7
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 %16, i32 3
  %27 = load float, float* %26, align 4
  %28 = tail call float @llvm.ceil.f32(float %27) #7
  %29 = insertelement <4 x float> undef, float %19, i32 0
  %30 = insertelement <4 x float> %29, float %22, i32 1
  %31 = insertelement <4 x float> %30, float %25, i32 2
  %32 = insertelement <4 x float> %31, float %28, i32 3
  %33 = fcmp olt <4 x float> %32, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %34 = select <4 x i1> %33, <4 x float> %32, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %35 = fcmp ogt <4 x float> %34, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %36 = select <4 x i1> %35, <4 x float> %34, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %37 = fptosi <4 x float> %36 to <4 x i32>
  %38 = sitofp <4 x i32> %37 to <4 x float>
  %39 = bitcast float* %17 to <4 x float>*
  store <4 x float> %38, <4 x float>* %39, align 4
  %40 = add nuw nsw i64 %16, 1
  %41 = load i32, i32* %6, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %15, label %44

44:                                               ; preds = %15, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24), i16 zeroext) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca float, align 4
  store i16 %1, i16* %3, align 2
  %5 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %0, i16* nonnull %3, i32 1, float* nonnull %4, %struct.SkRect* null, %class.SkPaint* null) #7
  %6 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 4
  %9 = icmp eq i8 %8, 0
  %10 = load float, float* %4, align 4
  br i1 %9, label %11, label %20

11:                                               ; preds = %2
  %12 = fadd float %10, 5.000000e-01
  %13 = call float @llvm.floor.f32(float %12)
  %14 = fcmp olt float %13, 0x41DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0x41DFFFFFE0000000
  %16 = fcmp ogt float %15, 0xC1DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0xC1DFFFFFE0000000
  %18 = fptosi float %17 to i32
  %19 = sitofp i32 %18 to float
  store float %19, float* %4, align 4
  br label %20

20:                                               ; preds = %2, %11
  %21 = phi float [ %19, %11 ], [ %10, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  ret float %21
}

declare void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont*, i16*, i32, float*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIfLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.8"*, float*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast float* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #7
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferItLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPt(%"class.WTF::VectorBuffer"*, i16*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #7
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2) i16* @_ZN3WTF6VectorItLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  ret i16* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZN3WTF6VectorIfLj256ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
