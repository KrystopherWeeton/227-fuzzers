; ModuleID = '../../components/performance_manager/graph/graph_impl_operations.cc'
source_filename = "../../components/performance_manager/graph/graph_impl_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::flat_tree.350" = type { %"class.std::__1::vector.351" }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"**, %"class.std::__1::__compressed_pair.353" }
%"class.performance_manager::PageNodeImpl" = type { %"class.performance_manager::PublicNodeImpl.324", %"class.performance_manager::TypedNodeBase.325", %"class.performance_manager::WebContentsProxy", %"class.base::internal::flat_tree.296", i64, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i8, %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges", i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"*, i32, %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.333", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.334", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.335", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.336", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.337", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.338", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.339", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.340", %"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.312", %"class.performance_manager::InternalNodeAttachedDataStorage", %"class.performance_manager::InternalNodeAttachedDataStorage.346", %"class.base::WeakPtr.347", %"class.base::WeakPtrFactory.348" }
%"class.performance_manager::PublicNodeImpl.324" = type { %"class.performance_manager::PageNode" }
%"class.performance_manager::PageNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::Node" = type { i32 (...)** }
%"class.performance_manager::TypedNodeBase.325" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::NodeBase" = type { i32 (...)**, i8, %"class.performance_manager::GraphImpl"* }
%"class.performance_manager::GraphImpl" = type <{ %"class.performance_manager::Graph", %"class.std::__1::unique_ptr", %"class.std::__1::unordered_set", %"class.std::__1::map", %"class.std::__1::map.26", %"class.ukm::UkmRecorder"*, %"class.std::__1::vector", %"class.std::__1::vector.42", %"class.std::__1::vector.49", %"class.std::__1::vector.56", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.performance_manager::OwnedObjects", %"class.std::__1::unique_ptr.85", %"class.std::__1::map.91", %"class.performance_manager::RegisteredObjects", i64, %"class.performance_manager::NodeBase"*, i32, [4 x i8] }>
%"class.performance_manager::Graph" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.performance_manager::SystemNodeImpl"* }
%"class.performance_manager::SystemNodeImpl" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.performance_manager::GraphObserver"**, %"class.performance_manager::GraphObserver"**, %"class.std::__1::__compressed_pair.37" }
%"class.performance_manager::GraphObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.performance_manager::GraphObserver"** }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.performance_manager::FrameNodeObserver"**, %"class.performance_manager::FrameNodeObserver"**, %"class.std::__1::__compressed_pair.44" }
%"class.performance_manager::FrameNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.performance_manager::FrameNodeObserver"** }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.performance_manager::PageNodeObserver"**, %"class.performance_manager::PageNodeObserver"**, %"class.std::__1::__compressed_pair.51" }
%"class.performance_manager::PageNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.performance_manager::PageNodeObserver"** }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.performance_manager::ProcessNodeObserver"**, %"class.performance_manager::ProcessNodeObserver"**, %"class.std::__1::__compressed_pair.58" }
%"class.performance_manager::ProcessNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.performance_manager::ProcessNodeObserver"** }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.performance_manager::SystemNodeObserver"**, %"class.performance_manager::SystemNodeObserver"**, %"class.std::__1::__compressed_pair.65" }
%"class.performance_manager::SystemNodeObserver" = type opaque
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.performance_manager::SystemNodeObserver"** }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"**, %"class.std::__1::__compressed_pair.72" }
%"class.performance_manager::WorkerNodeObserver" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.performance_manager::WorkerNodeObserver"** }
%"class.performance_manager::OwnedObjects" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.performance_manager::GraphOwned"* }
%"class.performance_manager::GraphOwned" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::unique_ptr.79"* }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.performance_manager::NodeDataDescriberRegistry"* }
%"class.performance_manager::NodeDataDescriberRegistry" = type opaque
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.performance_manager::RegisteredObjects" = type { %"class.base::internal::flat_tree.102" }
%"class.base::internal::flat_tree.102" = type { %"class.std::__1::vector.103" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.performance_manager::GraphRegistered"**, %"class.performance_manager::GraphRegistered"**, %"class.std::__1::__compressed_pair.105" }
%"class.performance_manager::GraphRegistered" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.performance_manager::GraphRegistered"** }
%"class.performance_manager::WebContentsProxy" = type { %"class.base::WeakPtr.326" }
%"class.base::WeakPtr.326" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.131", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.132" }
%"struct.std::__1::atomic.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__cxx_atomic_impl.135" }
%"struct.std::__1::__cxx_atomic_impl.135" = type { %"struct.std::__1::__cxx_atomic_base_impl.136" }
%"struct.std::__1::__cxx_atomic_base_impl.136" = type { i8 }
%"class.base::internal::flat_tree.296" = type { %"class.std::__1::vector.297" }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"**, %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.performance_manager::FrameNodeImpl"** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges" = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.327" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.performance_manager::FrameNodeImpl" = type { %"class.performance_manager::PublicNodeImpl.320", %"class.performance_manager::TypedNodeBase.321", %"class.performance_manager::mojom::DocumentCoordinationUnit", %"class.mojo::Receiver.322", %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"*, i32, i32, %"class.util::TokenType", i32, i32, %"class.performance_manager::RenderFrameHostProxy", %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.350", %"class.base::internal::flat_tree.350", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.358", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.359", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.360", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.361", %"struct.performance_manager::FrameNodeImpl::DocumentProperties", %"class.base::internal::flat_tree.304", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.364", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.365", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.366", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.372", %"class.std::__1::unique_ptr.312", %"class.base::WeakPtr.373", %"class.base::WeakPtrFactory.374" }
%"class.performance_manager::PublicNodeImpl.320" = type { %"class.performance_manager::FrameNode" }
%"class.performance_manager::FrameNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::TypedNodeBase.321" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::mojom::DocumentCoordinationUnit" = type { i32 (...)** }
%"class.mojo::Receiver.322" = type { %"class.mojo::internal::BindingState.323" }
%"class.mojo::internal::BindingState.323" = type { %"class.mojo::internal::BindingStateBase", %"class.performance_manager::mojom::DocumentCoordinationUnitStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.239", %"class.base::WeakPtrFactory.289" }
%class.scoped_refptr = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.111, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.202", %"class.absl::optional.207", %"class.absl::optional.154", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.230", i8, [7 x i8], %class.scoped_refptr.111, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.130 }
%class.scoped_refptr.130 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.111, %"class.std::__1::unique_ptr.139", %"class.absl::optional", %"struct.std::__1::atomic.150", i8, i8, i8, i8, i32, i32, %"class.absl::optional.154", %"class.std::__1::unique_ptr.159", i8, i64, %class.scoped_refptr.191, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.201" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.138", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.138" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.111, i8, %"class.mojo::ScopedHandleBase.142", %class.scoped_refptr.143, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.144" }
%"class.mojo::ScopedHandleBase.142" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.143 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.144" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.149", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.149" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i8 }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.162", i8, i64, %class.scoped_refptr.163, %class.scoped_refptr.187 }
%"class.base::RepeatingCallback.162" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.163 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.165", %"class.std::__1::map.176", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.187 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.191 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.192", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.194", %"struct.std::__1::atomic.194", %"struct.std::__1::atomic.194", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.375", [4 x i8], %"class.base::RepeatingCallback.242", %class.scoped_refptr.111, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.376", [4 x i8] }>
%"class.base::RefCountedThreadSafe.375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.242" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__atomic_base.378" }
%"struct.std::__1::__atomic_base.378" = type { %"struct.std::__1::__cxx_atomic_impl.379" }
%"struct.std::__1::__cxx_atomic_impl.379" = type { %"struct.std::__1::__cxx_atomic_base_impl.380" }
%"struct.std::__1::__cxx_atomic_base_impl.380" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.201" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.absl::optional.202" = type { %"class.absl::optional_internal::optional_data.203" }
%"class.absl::optional_internal::optional_data.203" = type { %"class.absl::optional_internal::optional_data_base.204" }
%"class.absl::optional_internal::optional_data_base.204" = type { %"class.absl::optional_internal::optional_data_dtor_base.205" }
%"class.absl::optional_internal::optional_data_dtor_base.205" = type { i8, %union.anon.206 }
%union.anon.206 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.207" = type { %"class.absl::optional_internal::optional_data.208" }
%"class.absl::optional_internal::optional_data.208" = type { %"class.absl::optional_internal::optional_data_base.209" }
%"class.absl::optional_internal::optional_data_base.209" = type { %"class.absl::optional_internal::optional_data_dtor_base.210" }
%"class.absl::optional_internal::optional_data_dtor_base.210" = type { i8, [7 x i8], %union.anon.211 }
%union.anon.211 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.216 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.216 = type { %"class.std::__1::map.218" }
%"class.std::__1::map.218" = type { %"class.std::__1::__tree.219" }
%"class.std::__1::__tree.219" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.229"*, i64 }
%"class.std::__1::unique_ptr.229" = type opaque
%"class.std::__1::map.230" = type { %"class.std::__1::__tree.231" }
%"class.std::__1::__tree.231" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.111 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.112" }>
%"class.base::RefCountedThreadSafe.112" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.242", %"class.base::OnceCallback.243", %"class.absl::optional.244", %"class.absl::optional.249", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.256", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.264", %"class.std::__1::map.275", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.284", i8, %class.scoped_refptr.111, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.285" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.243" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, %union.anon.248 }
%union.anon.248 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.111, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.254" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.254" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.259", %class.scoped_refptr.260 }
%"class.base::RepeatingCallback.259" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.260 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.264" = type { %"class.std::__1::__tree.265" }
%"class.std::__1::__tree.265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.275" = type { %"class.std::__1::__tree.276" }
%"class.std::__1::__tree.276" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::OnceCallback.284" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.285" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.performance_manager::mojom::DocumentCoordinationUnitStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.performance_manager::mojom::DocumentCoordinationUnit"* }
%"class.util::TokenType" = type { %"class.base::StrongAlias.349" }
%"class.base::StrongAlias.349" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.performance_manager::RenderFrameHostProxy" = type { %"struct.content::GlobalFrameRoutingId" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.358" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.359" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.360" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.361" = type { i8 }
%"struct.performance_manager::FrameNodeImpl::DocumentProperties" = type <{ %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", i8, %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.362", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.363", [5 x i8] }>
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { %class.GURL }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.362" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.363" = type { i8 }
%"class.base::internal::flat_tree.304" = type { %"class.std::__1::vector.305" }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"**, %"class.std::__1::__compressed_pair.307" }
%"class.performance_manager::WorkerNodeImpl" = type opaque
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.performance_manager::WorkerNodeImpl"** }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.364" = type { %"class.performance_manager::execution_context_priority::PriorityAndReason" }
%"class.performance_manager::execution_context_priority::PriorityAndReason" = type { i8, i8* }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.365" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.366" = type { %"class.absl::optional.367" }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.372" = type { i32 }
%"class.base::WeakPtr.373" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.374" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.333" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.334" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.335" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.336" = type { i64 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.337" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.338" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.339" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChanges.340" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::PageNodeImpl, performance_manager::PageNode, performance_manager::PageNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { %"class.absl::optional.341" }
%"class.absl::optional.341" = type { %"class.absl::optional_internal::optional_data.342" }
%"class.absl::optional_internal::optional_data.342" = type { %"class.absl::optional_internal::optional_data_base.343" }
%"class.absl::optional_internal::optional_data_base.343" = type { %"class.absl::optional_internal::optional_data_dtor_base.344" }
%"class.absl::optional_internal::optional_data_dtor_base.344" = type { i8, %union.anon.345 }
%union.anon.345 = type { %"class.performance_manager::voting::Vote" }
%"class.performance_manager::voting::Vote" = type { i32, i8* }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.performance_manager::NodeAttachedData"* }
%"class.performance_manager::NodeAttachedData" = type { i32 (...)** }
%"class.performance_manager::InternalNodeAttachedDataStorage" = type { %"class.performance_manager::NodeAttachedData"*, [16 x i8] }
%"class.performance_manager::InternalNodeAttachedDataStorage.346" = type <{ %"class.performance_manager::NodeAttachedData"*, [20 x i8], [4 x i8] }>
%"class.base::WeakPtr.347" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.348" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.performance_manager::PageNodeImpl"** }
%"class.performance_manager::ProcessNodeImpl" = type { %"class.performance_manager::PublicNodeImpl", %"class.performance_manager::TypedNodeBase", %"class.performance_manager::mojom::ProcessCoordinationUnit", %"class.mojo::Receiver", i64, i64, i32, %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesAlways", %"class.base::Time", %"class.absl::optional.291", i32, %"class.performance_manager::RenderProcessHostProxy", %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChanges", %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.304", %"class.performance_manager::InternalNodeAttachedDataStorage", %"class.std::__1::unique_ptr.312", %"class.base::WeakPtr.318", %"class.base::WeakPtrFactory.319" }
%"class.performance_manager::PublicNodeImpl" = type { %"class.performance_manager::ProcessNode" }
%"class.performance_manager::ProcessNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::TypedNodeBase" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::mojom::ProcessCoordinationUnit" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.performance_manager::mojom::ProcessCoordinationUnitStub" }
%"class.performance_manager::mojom::ProcessCoordinationUnitStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.performance_manager::mojom::ProcessCoordinationUnit"* }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesAlways" = type { %"class.base::Process" }
%"class.base::Process" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.290" }
%"class.base::time_internal::TimeBase.290" = type { i64 }
%"class.absl::optional.291" = type { %"class.absl::optional_internal::optional_data.292" }
%"class.absl::optional_internal::optional_data.292" = type { %"class.absl::optional_internal::optional_data_base.293" }
%"class.absl::optional_internal::optional_data_base.293" = type { %"class.absl::optional_internal::optional_data_dtor_base.294" }
%"class.absl::optional_internal::optional_data_dtor_base.294" = type { i8, %union.anon.295 }
%union.anon.295 = type { i32 }
%"class.performance_manager::RenderProcessHostProxy" = type { %"class.performance_manager::RenderProcessHostId" }
%"class.performance_manager::RenderProcessHostId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChanges" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { i8 }
%"class.base::WeakPtr.318" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::flat_tree.383" = type { %"class.std::__1::vector.384" }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"**, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.performance_manager::ProcessNodeImpl"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"**, %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.std::__1::allocator.356"* }
%"class.std::__1::allocator.356" = type { i8 }
%"struct.std::__1::__split_buffer.411" = type { %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"**, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.387", %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.std::__1::allocator.389"* }
%"class.std::__1::allocator.389" = type { i8 }

$_ZNSt3__16vectorIPN19performance_manager12PageNodeImplENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN19performance_manager12PageNodeImplERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPN19performance_manager15ProcessNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN19performance_manager15ProcessNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager19GraphImplOperations22GetAssociatedPageNodesEPKNS_15ProcessNodeImplE(%"class.base::internal::flat_tree.350"* noalias sret, %"class.performance_manager::ProcessNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::PageNodeImpl"*, align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.350", %"class.base::internal::flat_tree.350"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::internal::flat_tree.350"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #7
  %6 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager15ProcessNodeImpl11frame_nodesEv(%"class.performance_manager::ProcessNodeImpl"* %1) #7
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %9, align 8
  %11 = icmp eq %"class.performance_manager::FrameNodeImpl"** %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.350", %"class.base::internal::flat_tree.350"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.performance_manager::PageNodeImpl"** %3 to i8*
  %15 = bitcast %"class.performance_manager::PageNodeImpl"*** %13 to i64*
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.350", %"class.base::internal::flat_tree.350"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %51, %2
  ret void

18:                                               ; preds = %12, %51
  %19 = phi %"class.performance_manager::FrameNodeImpl"** [ %8, %12 ], [ %52, %51 ]
  %20 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %21 = call %"class.performance_manager::PageNodeImpl"* @_ZNK19performance_manager13FrameNodeImpl9page_nodeEv(%"class.performance_manager::FrameNodeImpl"* %20) #7
  store %"class.performance_manager::PageNodeImpl"* %21, %"class.performance_manager::PageNodeImpl"** %3, align 8
  %22 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %4, align 8
  %23 = load i64, i64* %15, align 8
  %24 = ptrtoint %"class.performance_manager::PageNodeImpl"** %22 to i64
  %25 = sub i64 %23, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %23 to %"class.performance_manager::PageNodeImpl"**
  br i1 %26, label %43, label %28

28:                                               ; preds = %18
  %29 = ashr exact i64 %25, 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi %"class.performance_manager::PageNodeImpl"** [ %22, %28 ], [ %41, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %40, %30 ]
  %33 = lshr i64 %32, 1
  %34 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %31, i64 %33
  %35 = load %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %34, align 8
  %36 = icmp ult %"class.performance_manager::PageNodeImpl"* %35, %21
  %37 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %34, i64 1
  %38 = xor i64 %33, -1
  %39 = add i64 %32, %38
  %40 = select i1 %36, i64 %39, i64 %33
  %41 = select i1 %36, %"class.performance_manager::PageNodeImpl"** %37, %"class.performance_manager::PageNodeImpl"** %31
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %30

43:                                               ; preds = %30, %18
  %44 = phi %"class.performance_manager::PageNodeImpl"** [ %22, %18 ], [ %41, %30 ]
  %45 = icmp eq %"class.performance_manager::PageNodeImpl"** %44, %27
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = load %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %44, align 8
  %48 = icmp ult %"class.performance_manager::PageNodeImpl"* %21, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %46, %43
  %50 = call %"class.performance_manager::PageNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager12PageNodeImplENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.351"* %16, %"class.performance_manager::PageNodeImpl"** %44, %"class.performance_manager::PageNodeImpl"** nonnull dereferenceable(8) %3) #7
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %52 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %19, i64 1
  %53 = icmp eq %"class.performance_manager::FrameNodeImpl"** %52, %10
  br i1 %53, label %17, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager15ProcessNodeImpl11frame_nodesEv(%"class.performance_manager::ProcessNodeImpl"*) local_unnamed_addr #2

declare %"class.performance_manager::PageNodeImpl"* @_ZNK19performance_manager13FrameNodeImpl9page_nodeEv(%"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager19GraphImplOperations25GetAssociatedProcessNodesEPKNS_12PageNodeImplE(%"class.base::internal::flat_tree.383"* noalias sret, %"class.performance_manager::PageNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::internal::flat_tree.383"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  %4 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager12PageNodeImpl16main_frame_nodesEv(%"class.performance_manager::PageNodeImpl"* %1) #7
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %9 = icmp eq %"class.performance_manager::FrameNodeImpl"** %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.performance_manager::FrameNodeImpl"** [ %13, %10 ], [ %6, %2 ]
  %12 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %11, align 8
  tail call fastcc void @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations25GetAssociatedProcessNodesEPKNS_12PageNodeImplEE3$_0EEbPNS_13FrameNodeImplET_b"(%"class.performance_manager::FrameNodeImpl"* %12, %"class.base::internal::flat_tree.383"* %0) #7
  %13 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %11, i64 1
  %14 = icmp eq %"class.performance_manager::FrameNodeImpl"** %13, %8
  br i1 %14, label %15, label %10

15:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager19GraphImplOperations13GetFrameNodesEPKNS_12PageNodeImplE(%"class.std::__1::vector.297"* noalias sret, %"class.performance_manager::PageNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.297", %"class.std::__1::vector.297"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.297", %"class.std::__1::vector.297"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.performance_manager::FrameNodeImpl"*** %4 to i64*
  %6 = bitcast %"class.std::__1::vector.297"* %0 to i64*
  %7 = bitcast %"class.performance_manager::FrameNodeImpl"*** %3 to i64*
  %8 = tail call i8* @_Znwm(i64 160) #8
  %9 = ptrtoint i8* %8 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 160
  %11 = ptrtoint i8* %10 to i64
  %12 = ptrtoint i8* %8 to i64
  store i64 %12, i64* %6, align 8
  store i64 %9, i64* %7, align 8
  store i64 %11, i64* %5, align 8
  %13 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager12PageNodeImpl16main_frame_nodesEv(%"class.performance_manager::PageNodeImpl"* %1) #7
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %16, align 8
  %18 = icmp eq %"class.performance_manager::FrameNodeImpl"** %15, %17
  br i1 %18, label %170, label %19

19:                                               ; preds = %2
  %20 = bitcast i8* %10 to %"class.performance_manager::FrameNodeImpl"**
  %21 = bitcast i8* %8 to %"class.performance_manager::FrameNodeImpl"**
  %22 = bitcast %"class.performance_manager::FrameNodeImpl"*** %3 to i64*
  br label %27

23:                                               ; preds = %85
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %6, align 8
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %170, label %92

27:                                               ; preds = %88, %19
  %28 = phi i64 [ %9, %19 ], [ %91, %88 ]
  %29 = phi %"class.performance_manager::FrameNodeImpl"** [ %20, %19 ], [ %90, %88 ]
  %30 = phi %"class.performance_manager::FrameNodeImpl"** [ %21, %19 ], [ %89, %88 ]
  %31 = phi %"class.performance_manager::FrameNodeImpl"** [ %15, %19 ], [ %86, %88 ]
  %32 = bitcast %"class.performance_manager::FrameNodeImpl"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq %"class.performance_manager::FrameNodeImpl"** %30, %29
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.performance_manager::FrameNodeImpl"** %30 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %30, i64 1
  %38 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %37 to i64
  store i64 %38, i64* %22, align 8
  br label %85

39:                                               ; preds = %27
  %40 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %29 to i64
  %41 = load i64, i64* %6, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 2305843009213693951
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::vector.297"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #9
  unreachable

48:                                               ; preds = %39
  %49 = icmp ult i64 %43, 1152921504606846975
  br i1 %49, label %50, label %58

50:                                               ; preds = %48
  %51 = ashr exact i64 %42, 2
  %52 = icmp ult i64 %51, %44
  %53 = select i1 %52, i64 %44, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #9
  unreachable

58:                                               ; preds = %55, %48
  %59 = phi i64 [ %53, %55 ], [ 2305843009213693951, %48 ]
  %60 = shl i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #8
  %62 = bitcast i8* %61 to %"class.performance_manager::FrameNodeImpl"**
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi %"class.performance_manager::FrameNodeImpl"** [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %65, i64 %43
  %67 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %65, i64 %64
  %68 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %67 to i64
  %69 = bitcast %"class.performance_manager::FrameNodeImpl"** %66 to i64*
  store i64 %33, i64* %69, align 8
  %70 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %66, i64 1
  %71 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %70 to i64
  %72 = sub i64 %28, %41
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %66, i64 %74
  %76 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %63
  %79 = bitcast %"class.performance_manager::FrameNodeImpl"** %75 to i8*
  %80 = inttoptr i64 %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #7
  br label %81

81:                                               ; preds = %78, %63
  store i64 %76, i64* %6, align 8
  store i64 %71, i64* %22, align 8
  store i64 %68, i64* %5, align 8
  %82 = icmp eq i64 %41, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %41 to i8*
  tail call void @_ZdlPv(i8* %84) #8
  br label %85

85:                                               ; preds = %35, %81, %83
  %86 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %31, i64 1
  %87 = icmp eq %"class.performance_manager::FrameNodeImpl"** %86, %17
  br i1 %87, label %23, label %88

88:                                               ; preds = %85
  %89 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  %90 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %4, align 8
  %91 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %89 to i64
  br label %27

92:                                               ; preds = %23, %104
  %93 = phi i64 [ %107, %104 ], [ %25, %23 ]
  %94 = phi i64 [ %105, %104 ], [ 0, %23 ]
  %95 = inttoptr i64 %93 to %"class.performance_manager::FrameNodeImpl"**
  %96 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %95, i64 %94
  %97 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %96, align 8
  %98 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager13FrameNodeImpl17child_frame_nodesEv(%"class.performance_manager::FrameNodeImpl"* %97) #7
  %99 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %99, align 8
  %101 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %98, i64 0, i32 0, i32 0, i32 1
  %102 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %101, align 8
  %103 = icmp eq %"class.performance_manager::FrameNodeImpl"** %100, %102
  br i1 %103, label %104, label %111

104:                                              ; preds = %167, %92
  %105 = add nuw i64 %94, 1
  %106 = load i64, i64* %22, align 8
  %107 = load i64, i64* %6, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp ult i64 %105, %109
  br i1 %110, label %92, label %170

111:                                              ; preds = %92, %167
  %112 = phi %"class.performance_manager::FrameNodeImpl"** [ %168, %167 ], [ %100, %92 ]
  %113 = bitcast %"class.performance_manager::FrameNodeImpl"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  %116 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %4, align 8
  %117 = icmp eq %"class.performance_manager::FrameNodeImpl"** %115, %116
  %118 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %116 to i64
  br i1 %117, label %123, label %119

119:                                              ; preds = %111
  %120 = bitcast %"class.performance_manager::FrameNodeImpl"** %115 to i64*
  store i64 %114, i64* %120, align 8
  %121 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %115, i64 1
  %122 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %121 to i64
  store i64 %122, i64* %22, align 8
  br label %167

123:                                              ; preds = %111
  %124 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %115 to i64
  %125 = load i64, i64* %6, align 8
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 2305843009213693951
  br i1 %129, label %130, label %132

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.297"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %131) #9
  unreachable

132:                                              ; preds = %123
  %133 = sub i64 %118, %125
  %134 = ashr exact i64 %133, 3
  %135 = icmp ult i64 %134, 1152921504606846975
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = ashr exact i64 %133, 2
  %138 = icmp ult i64 %137, %128
  %139 = select i1 %138, i64 %128, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = icmp ugt i64 %139, 2305843009213693951
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  tail call void @abort() #9
  unreachable

144:                                              ; preds = %141, %132
  %145 = phi i64 [ %139, %141 ], [ 2305843009213693951, %132 ]
  %146 = shl i64 %145, 3
  %147 = tail call i8* @_Znwm(i64 %146) #8
  %148 = bitcast i8* %147 to %"class.performance_manager::FrameNodeImpl"**
  br label %149

149:                                              ; preds = %144, %136
  %150 = phi i64 [ %145, %144 ], [ 0, %136 ]
  %151 = phi i8* [ %147, %144 ], [ null, %136 ]
  %152 = phi %"class.performance_manager::FrameNodeImpl"** [ %148, %144 ], [ null, %136 ]
  %153 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %152, i64 %127
  %154 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %152, i64 %150
  %155 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %154 to i64
  %156 = bitcast %"class.performance_manager::FrameNodeImpl"** %153 to i64*
  store i64 %114, i64* %156, align 8
  %157 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %153, i64 1
  %158 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %157 to i64
  %159 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %152 to i64
  %160 = icmp sgt i64 %126, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %149
  %162 = inttoptr i64 %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %162, i64 %126, i1 false) #7
  br label %163

163:                                              ; preds = %161, %149
  store i64 %159, i64* %6, align 8
  store i64 %158, i64* %22, align 8
  store i64 %155, i64* %5, align 8
  %164 = icmp eq i64 %125, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %166) #8
  br label %167

167:                                              ; preds = %119, %163, %165
  %168 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %112, i64 1
  %169 = icmp eq %"class.performance_manager::FrameNodeImpl"** %168, %102
  br i1 %169, label %104, label %111

170:                                              ; preds = %104, %2, %23
  ret void
}

declare dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager12PageNodeImpl16main_frame_nodesEv(%"class.performance_manager::PageNodeImpl"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager13FrameNodeImpl17child_frame_nodesEv(%"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19performance_manager19GraphImplOperations8HasFrameEPKNS_12PageNodeImplEPNS_13FrameNodeImplE(%"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  store i8 0, i8* %3, align 1
  %4 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager12PageNodeImpl16main_frame_nodesEv(%"class.performance_manager::PageNodeImpl"* %0) #7
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %9 = icmp eq %"class.performance_manager::FrameNodeImpl"** %6, %8
  br i1 %9, label %21, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.performance_manager::FrameNodeImpl"** [ %14, %10 ], [ %6, %2 ]
  %12 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %11, align 8
  %13 = call fastcc zeroext i1 @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations8HasFrameEPKNS_12PageNodeImplEPNS_13FrameNodeImplEE3$_1EEbS7_T_b"(%"class.performance_manager::FrameNodeImpl"* %12, i8* nonnull %3, %"class.performance_manager::FrameNodeImpl"* %1) #7
  %14 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %11, i64 1
  %15 = xor i1 %13, true
  %16 = icmp eq %"class.performance_manager::FrameNodeImpl"** %14, %8
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %10

18:                                               ; preds = %10
  %19 = load i8, i8* %3, align 1, !range !2
  %20 = icmp ne i8 %19, 0
  br label %21

21:                                               ; preds = %18, %2
  %22 = phi i1 [ %20, %18 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  ret i1 %22
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::PageNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager12PageNodeImplENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.351"*, %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::PageNodeImpl"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::PageNodeImpl"** %8, %10
  %12 = ptrtoint %"class.performance_manager::PageNodeImpl"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::PageNodeImpl"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::PageNodeImpl"** %8, %1
  %16 = bitcast %"class.performance_manager::PageNodeImpl"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::PageNodeImpl"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::PageNodeImpl"** %20 to i64
  %22 = bitcast %"class.performance_manager::PageNodeImpl"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::PageNodeImpl"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::PageNodeImpl"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::PageNodeImpl"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::PageNodeImpl"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::PageNodeImpl"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::PageNodeImpl"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::PageNodeImpl"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::PageNodeImpl"** %8, %56
  %58 = icmp ult %"class.performance_manager::PageNodeImpl"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::PageNodeImpl"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !3
  %78 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %75, i64 2
  %79 = bitcast %"class.performance_manager::PageNodeImpl"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !3
  %81 = bitcast %"class.performance_manager::PageNodeImpl"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !6, !noalias !3
  %82 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %74, i64 2
  %83 = bitcast %"class.performance_manager::PageNodeImpl"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !6, !noalias !3
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::PageNodeImpl"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !3
  %89 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %86, i64 2
  %90 = bitcast %"class.performance_manager::PageNodeImpl"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !3
  %92 = bitcast %"class.performance_manager::PageNodeImpl"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !6, !noalias !3
  %93 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %85, i64 2
  %94 = bitcast %"class.performance_manager::PageNodeImpl"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !6, !noalias !3
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::PageNodeImpl"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !3
  %100 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %97, i64 2
  %101 = bitcast %"class.performance_manager::PageNodeImpl"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !3
  %103 = bitcast %"class.performance_manager::PageNodeImpl"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !6, !noalias !3
  %104 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %96, i64 2
  %105 = bitcast %"class.performance_manager::PageNodeImpl"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !6, !noalias !3
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::PageNodeImpl"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !3
  %111 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %108, i64 2
  %112 = bitcast %"class.performance_manager::PageNodeImpl"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !3
  %114 = bitcast %"class.performance_manager::PageNodeImpl"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !6, !noalias !3
  %115 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %107, i64 2
  %116 = bitcast %"class.performance_manager::PageNodeImpl"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !6, !noalias !3
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !8

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::PageNodeImpl"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !3
  %130 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %127, i64 2
  %131 = bitcast %"class.performance_manager::PageNodeImpl"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !3
  %133 = bitcast %"class.performance_manager::PageNodeImpl"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !6, !noalias !3
  %134 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %126, i64 2
  %135 = bitcast %"class.performance_manager::PageNodeImpl"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !6, !noalias !3
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !10

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::PageNodeImpl"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::PageNodeImpl"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::PageNodeImpl"** %149 to i8*
  %151 = bitcast %"class.performance_manager::PageNodeImpl"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #7
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::PageNodeImpl"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::PageNodeImpl"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::PageNodeImpl"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::PageNodeImpl"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::PageNodeImpl"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !12

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::PageNodeImpl"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #7
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::PageNodeImpl"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.351"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.351"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #9
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::PageNodeImpl"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::PageNodeImpl"** null, %"class.performance_manager::PageNodeImpl"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.356"** %170 to %"class.std::__1::__compressed_pair.353"**
  store %"class.std::__1::__compressed_pair.353"* %164, %"class.std::__1::__compressed_pair.353"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::PageNodeImpl"** null, %"class.performance_manager::PageNodeImpl"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.356"** %170 to %"class.std::__1::__compressed_pair.353"**
  store %"class.std::__1::__compressed_pair.353"* %164, %"class.std::__1::__compressed_pair.353"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #9
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #8
  %206 = bitcast i8* %205 to %"class.performance_manager::PageNodeImpl"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::PageNodeImpl"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::PageNodeImpl"** %210, %"class.performance_manager::PageNodeImpl"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %210, i64 %208
  store %"class.performance_manager::PageNodeImpl"** %211, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  store %"class.performance_manager::PageNodeImpl"** %211, %"class.performance_manager::PageNodeImpl"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %210, i64 %209
  store %"class.performance_manager::PageNodeImpl"** %212, %"class.performance_manager::PageNodeImpl"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN19performance_manager12PageNodeImplERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.performance_manager::PageNodeImpl"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %167, align 8
  %214 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::PageNodeImpl"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %213, i64 %218
  store %"class.performance_manager::PageNodeImpl"** %219, %"class.performance_manager::PageNodeImpl"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::PageNodeImpl"** %219 to i8*
  %223 = bitcast %"class.performance_manager::PageNodeImpl"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #7
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::PageNodeImpl"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::PageNodeImpl"** %225 to i64
  %229 = bitcast %"class.performance_manager::PageNodeImpl"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::PageNodeImpl"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::PageNodeImpl"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::PageNodeImpl"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::PageNodeImpl"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %243, i64 1
  %248 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %248, i64 1
  store %"class.performance_manager::PageNodeImpl"** %249, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %250 = bitcast %"class.performance_manager::PageNodeImpl"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !13

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::PageNodeImpl"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::PageNodeImpl"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::PageNodeImpl"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::PageNodeImpl"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::PageNodeImpl"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %262, i64 1
  %266 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %266, i64 1
  store %"class.performance_manager::PageNodeImpl"** %267, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %268 = bitcast %"class.performance_manager::PageNodeImpl"** %267 to i64*
  %269 = bitcast %"class.performance_manager::PageNodeImpl"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %262, i64 2
  %272 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %272, i64 1
  store %"class.performance_manager::PageNodeImpl"** %273, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %274 = bitcast %"class.performance_manager::PageNodeImpl"** %273 to i64*
  %275 = bitcast %"class.performance_manager::PageNodeImpl"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %262, i64 3
  %278 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %278, i64 1
  store %"class.performance_manager::PageNodeImpl"** %279, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %280 = bitcast %"class.performance_manager::PageNodeImpl"** %279 to i64*
  %281 = bitcast %"class.performance_manager::PageNodeImpl"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %262, i64 4
  %284 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %284, i64 1
  store %"class.performance_manager::PageNodeImpl"** %285, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::PageNodeImpl"** %283, %225
  %287 = bitcast %"class.performance_manager::PageNodeImpl"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::PageNodeImpl"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::PageNodeImpl"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::PageNodeImpl"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::PageNodeImpl"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::PageNodeImpl"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::PageNodeImpl"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::PageNodeImpl"**
  %306 = icmp eq %"class.performance_manager::PageNodeImpl"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::PageNodeImpl"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %305, i64 %312
  store %"class.performance_manager::PageNodeImpl"** %313, %"class.performance_manager::PageNodeImpl"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #8
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #7
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::PageNodeImpl"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::PageNodeImpl"** %320
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN19performance_manager12PageNodeImplERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.performance_manager::PageNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::PageNodeImpl"** %4, %6
  %8 = ptrtoint %"class.performance_manager::PageNodeImpl"** %6 to i64
  %9 = bitcast %"class.performance_manager::PageNodeImpl"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::PageNodeImpl"** %12, %14
  %16 = ptrtoint %"class.performance_manager::PageNodeImpl"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::PageNodeImpl"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::PageNodeImpl"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::PageNodeImpl"** %23 to i8*
  %30 = bitcast %"class.performance_manager::PageNodeImpl"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #7
  %31 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::PageNodeImpl"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %23, i64 %26
  store %"class.performance_manager::PageNodeImpl"** %34, %"class.performance_manager::PageNodeImpl"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %33, i64 %22
  store %"class.performance_manager::PageNodeImpl"** %35, %"class.performance_manager::PageNodeImpl"*** %11, align 8
  %36 = bitcast %"class.performance_manager::PageNodeImpl"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::PageNodeImpl"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #9
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #8
  %50 = bitcast i8* %49 to %"class.performance_manager::PageNodeImpl"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::PageNodeImpl"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::PageNodeImpl"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::PageNodeImpl"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::PageNodeImpl"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::PageNodeImpl"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::PageNodeImpl"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::PageNodeImpl"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::PageNodeImpl"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !14

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::PageNodeImpl"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::PageNodeImpl"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::PageNodeImpl"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::PageNodeImpl"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::PageNodeImpl"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::PageNodeImpl"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 1
  %97 = bitcast %"class.performance_manager::PageNodeImpl"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::PageNodeImpl"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 2
  %102 = bitcast %"class.performance_manager::PageNodeImpl"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::PageNodeImpl"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 3
  %107 = bitcast %"class.performance_manager::PageNodeImpl"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::PageNodeImpl"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 4
  %112 = bitcast %"class.performance_manager::PageNodeImpl"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::PageNodeImpl"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 5
  %117 = bitcast %"class.performance_manager::PageNodeImpl"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::PageNodeImpl"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 6
  %122 = bitcast %"class.performance_manager::PageNodeImpl"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::PageNodeImpl"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 7
  %127 = bitcast %"class.performance_manager::PageNodeImpl"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::PageNodeImpl"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::PageNodeImpl"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::PageNodeImpl"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::PageNodeImpl"** %60 to i64
  %136 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::PageNodeImpl"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::PageNodeImpl"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::PageNodeImpl"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::PageNodeImpl"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::PageNodeImpl"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #8
  %146 = bitcast %"class.performance_manager::PageNodeImpl"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::PageNodeImpl"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::PageNodeImpl"** %152, i64 1
  store %"class.performance_manager::PageNodeImpl"** %153, %"class.performance_manager::PageNodeImpl"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations25GetAssociatedProcessNodesEPKNS_12PageNodeImplEE3$_0EEbPNS_13FrameNodeImplET_b"(%"class.performance_manager::FrameNodeImpl"*, %"class.base::internal::flat_tree.383"*) unnamed_addr #0 {
  %3 = alloca %"class.performance_manager::ProcessNodeImpl"*, align 8
  %4 = bitcast %"class.performance_manager::ProcessNodeImpl"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = tail call %"class.performance_manager::ProcessNodeImpl"* @_ZNK19performance_manager13FrameNodeImpl12process_nodeEv(%"class.performance_manager::FrameNodeImpl"* %0) #7
  store %"class.performance_manager::ProcessNodeImpl"* %5, %"class.performance_manager::ProcessNodeImpl"** %3, align 8
  %6 = icmp eq %"class.performance_manager::ProcessNodeImpl"* %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::flat_tree.383", %"class.base::internal::flat_tree.383"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::flat_tree.383", %"class.base::internal::flat_tree.383"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"class.performance_manager::ProcessNodeImpl"**
  br i1 %15, label %32, label %17

17:                                               ; preds = %7
  %18 = ashr exact i64 %14, 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"class.performance_manager::ProcessNodeImpl"** [ %9, %17 ], [ %30, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %29, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %20, i64 %22
  %24 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %23, align 8
  %25 = icmp ult %"class.performance_manager::ProcessNodeImpl"* %24, %5
  %26 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %23, i64 1
  %27 = xor i64 %22, -1
  %28 = add i64 %21, %27
  %29 = select i1 %25, i64 %28, i64 %22
  %30 = select i1 %25, %"class.performance_manager::ProcessNodeImpl"** %26, %"class.performance_manager::ProcessNodeImpl"** %20
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %19

32:                                               ; preds = %19, %7
  %33 = phi %"class.performance_manager::ProcessNodeImpl"** [ %9, %7 ], [ %30, %19 ]
  %34 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %33, %16
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %33, align 8
  %37 = icmp ult %"class.performance_manager::ProcessNodeImpl"* %5, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %35, %32
  %39 = getelementptr inbounds %"class.base::internal::flat_tree.383", %"class.base::internal::flat_tree.383"* %1, i64 0, i32 0
  %40 = call %"class.performance_manager::ProcessNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager15ProcessNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.384"* %39, %"class.performance_manager::ProcessNodeImpl"** %33, %"class.performance_manager::ProcessNodeImpl"** nonnull dereferenceable(8) %3) #7
  br label %41

41:                                               ; preds = %2, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %42 = call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager13FrameNodeImpl17child_frame_nodesEv(%"class.performance_manager::FrameNodeImpl"* %0) #7
  %43 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %43, align 8
  %45 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %42, i64 0, i32 0, i32 0, i32 1
  %46 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %45, align 8
  %47 = icmp eq %"class.performance_manager::FrameNodeImpl"** %44, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %41, %48
  %49 = phi %"class.performance_manager::FrameNodeImpl"** [ %51, %48 ], [ %44, %41 ]
  %50 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %49, align 8
  call fastcc void @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations25GetAssociatedProcessNodesEPKNS_12PageNodeImplEE3$_0EEbPNS_13FrameNodeImplET_b"(%"class.performance_manager::FrameNodeImpl"* %50, %"class.base::internal::flat_tree.383"* %1)
  %51 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %49, i64 1
  %52 = icmp eq %"class.performance_manager::FrameNodeImpl"** %51, %46
  br i1 %52, label %53, label %48

53:                                               ; preds = %48, %41
  ret void
}

declare %"class.performance_manager::ProcessNodeImpl"* @_ZNK19performance_manager13FrameNodeImpl12process_nodeEv(%"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::ProcessNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager15ProcessNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.384"*, %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.411", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::ProcessNodeImpl"** %8, %10
  %12 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %8, %1
  %16 = bitcast %"class.performance_manager::ProcessNodeImpl"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::ProcessNodeImpl"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %20 to i64
  %22 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::ProcessNodeImpl"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::ProcessNodeImpl"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::ProcessNodeImpl"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::ProcessNodeImpl"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::ProcessNodeImpl"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::ProcessNodeImpl"** %8, %56
  %58 = icmp ult %"class.performance_manager::ProcessNodeImpl"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::ProcessNodeImpl"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !15
  %78 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %75, i64 2
  %79 = bitcast %"class.performance_manager::ProcessNodeImpl"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !15
  %81 = bitcast %"class.performance_manager::ProcessNodeImpl"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !18, !noalias !15
  %82 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %74, i64 2
  %83 = bitcast %"class.performance_manager::ProcessNodeImpl"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !18, !noalias !15
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::ProcessNodeImpl"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !15
  %89 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %86, i64 2
  %90 = bitcast %"class.performance_manager::ProcessNodeImpl"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !15
  %92 = bitcast %"class.performance_manager::ProcessNodeImpl"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !18, !noalias !15
  %93 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %85, i64 2
  %94 = bitcast %"class.performance_manager::ProcessNodeImpl"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !18, !noalias !15
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::ProcessNodeImpl"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !15
  %100 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %97, i64 2
  %101 = bitcast %"class.performance_manager::ProcessNodeImpl"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !15
  %103 = bitcast %"class.performance_manager::ProcessNodeImpl"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !18, !noalias !15
  %104 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %96, i64 2
  %105 = bitcast %"class.performance_manager::ProcessNodeImpl"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !18, !noalias !15
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::ProcessNodeImpl"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !15
  %111 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %108, i64 2
  %112 = bitcast %"class.performance_manager::ProcessNodeImpl"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !15
  %114 = bitcast %"class.performance_manager::ProcessNodeImpl"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !18, !noalias !15
  %115 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %107, i64 2
  %116 = bitcast %"class.performance_manager::ProcessNodeImpl"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !18, !noalias !15
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !20

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::ProcessNodeImpl"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !15
  %130 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %127, i64 2
  %131 = bitcast %"class.performance_manager::ProcessNodeImpl"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !15
  %133 = bitcast %"class.performance_manager::ProcessNodeImpl"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !18, !noalias !15
  %134 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %126, i64 2
  %135 = bitcast %"class.performance_manager::ProcessNodeImpl"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !18, !noalias !15
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !21

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::ProcessNodeImpl"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::ProcessNodeImpl"** %149 to i8*
  %151 = bitcast %"class.performance_manager::ProcessNodeImpl"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #7
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::ProcessNodeImpl"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::ProcessNodeImpl"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::ProcessNodeImpl"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::ProcessNodeImpl"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::ProcessNodeImpl"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !22

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::ProcessNodeImpl"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #7
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.384"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.384"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #9
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::ProcessNodeImpl"** null, %"class.performance_manager::ProcessNodeImpl"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.389"** %170 to %"class.std::__1::__compressed_pair.386"**
  store %"class.std::__1::__compressed_pair.386"* %164, %"class.std::__1::__compressed_pair.386"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::ProcessNodeImpl"** null, %"class.performance_manager::ProcessNodeImpl"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.389"** %170 to %"class.std::__1::__compressed_pair.386"**
  store %"class.std::__1::__compressed_pair.386"* %164, %"class.std::__1::__compressed_pair.386"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #9
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #8
  %206 = bitcast i8* %205 to %"class.performance_manager::ProcessNodeImpl"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::ProcessNodeImpl"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::ProcessNodeImpl"** %210, %"class.performance_manager::ProcessNodeImpl"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %210, i64 %208
  store %"class.performance_manager::ProcessNodeImpl"** %211, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  store %"class.performance_manager::ProcessNodeImpl"** %211, %"class.performance_manager::ProcessNodeImpl"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %210, i64 %209
  store %"class.performance_manager::ProcessNodeImpl"** %212, %"class.performance_manager::ProcessNodeImpl"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN19performance_manager15ProcessNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.411"* nonnull %5, %"class.performance_manager::ProcessNodeImpl"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %167, align 8
  %214 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %213, i64 %218
  store %"class.performance_manager::ProcessNodeImpl"** %219, %"class.performance_manager::ProcessNodeImpl"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::ProcessNodeImpl"** %219 to i8*
  %223 = bitcast %"class.performance_manager::ProcessNodeImpl"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #7
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %225 to i64
  %229 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::ProcessNodeImpl"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::ProcessNodeImpl"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %243, i64 1
  %248 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %248, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %249, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %250 = bitcast %"class.performance_manager::ProcessNodeImpl"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !23

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::ProcessNodeImpl"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::ProcessNodeImpl"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::ProcessNodeImpl"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::ProcessNodeImpl"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::ProcessNodeImpl"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %262, i64 1
  %266 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %266, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %267, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %268 = bitcast %"class.performance_manager::ProcessNodeImpl"** %267 to i64*
  %269 = bitcast %"class.performance_manager::ProcessNodeImpl"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %262, i64 2
  %272 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %272, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %273, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %274 = bitcast %"class.performance_manager::ProcessNodeImpl"** %273 to i64*
  %275 = bitcast %"class.performance_manager::ProcessNodeImpl"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %262, i64 3
  %278 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %278, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %279, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %280 = bitcast %"class.performance_manager::ProcessNodeImpl"** %279 to i64*
  %281 = bitcast %"class.performance_manager::ProcessNodeImpl"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %262, i64 4
  %284 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %284, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %285, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %283, %225
  %287 = bitcast %"class.performance_manager::ProcessNodeImpl"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::ProcessNodeImpl"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::ProcessNodeImpl"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::ProcessNodeImpl"**
  %306 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %305, i64 %312
  store %"class.performance_manager::ProcessNodeImpl"** %313, %"class.performance_manager::ProcessNodeImpl"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #8
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #7
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::ProcessNodeImpl"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::ProcessNodeImpl"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN19performance_manager15ProcessNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.411"*, %"class.performance_manager::ProcessNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %4, %6
  %8 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %6 to i64
  %9 = bitcast %"class.performance_manager::ProcessNodeImpl"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::ProcessNodeImpl"** %12, %14
  %16 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::ProcessNodeImpl"** %23 to i8*
  %30 = bitcast %"class.performance_manager::ProcessNodeImpl"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #7
  %31 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::ProcessNodeImpl"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %23, i64 %26
  store %"class.performance_manager::ProcessNodeImpl"** %34, %"class.performance_manager::ProcessNodeImpl"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %33, i64 %22
  store %"class.performance_manager::ProcessNodeImpl"** %35, %"class.performance_manager::ProcessNodeImpl"*** %11, align 8
  %36 = bitcast %"class.performance_manager::ProcessNodeImpl"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.411"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #9
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #8
  %50 = bitcast i8* %49 to %"class.performance_manager::ProcessNodeImpl"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::ProcessNodeImpl"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::ProcessNodeImpl"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::ProcessNodeImpl"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !24

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::ProcessNodeImpl"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::ProcessNodeImpl"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::ProcessNodeImpl"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::ProcessNodeImpl"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::ProcessNodeImpl"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 1
  %97 = bitcast %"class.performance_manager::ProcessNodeImpl"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::ProcessNodeImpl"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 2
  %102 = bitcast %"class.performance_manager::ProcessNodeImpl"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::ProcessNodeImpl"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 3
  %107 = bitcast %"class.performance_manager::ProcessNodeImpl"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::ProcessNodeImpl"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 4
  %112 = bitcast %"class.performance_manager::ProcessNodeImpl"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::ProcessNodeImpl"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 5
  %117 = bitcast %"class.performance_manager::ProcessNodeImpl"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::ProcessNodeImpl"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 6
  %122 = bitcast %"class.performance_manager::ProcessNodeImpl"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::ProcessNodeImpl"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 7
  %127 = bitcast %"class.performance_manager::ProcessNodeImpl"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::ProcessNodeImpl"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::ProcessNodeImpl"** %60 to i64
  %136 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::ProcessNodeImpl"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::ProcessNodeImpl"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::ProcessNodeImpl"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #8
  %146 = bitcast %"class.performance_manager::ProcessNodeImpl"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::ProcessNodeImpl"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::ProcessNodeImpl"**, %"class.performance_manager::ProcessNodeImpl"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %152, i64 1
  store %"class.performance_manager::ProcessNodeImpl"** %153, %"class.performance_manager::ProcessNodeImpl"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations8HasFrameEPKNS_12PageNodeImplEPNS_13FrameNodeImplEE3$_1EEbS7_T_b"(%"class.performance_manager::FrameNodeImpl"*, i8*, %"class.performance_manager::FrameNodeImpl"*) unnamed_addr #0 {
  %4 = icmp eq %"class.performance_manager::FrameNodeImpl"* %2, %0
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = tail call dereferenceable(24) %"class.base::internal::flat_tree.296"* @_ZNK19performance_manager13FrameNodeImpl17child_frame_nodesEv(%"class.performance_manager::FrameNodeImpl"* %0) #7
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.296", %"class.base::internal::flat_tree.296"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %9, align 8
  %11 = icmp eq %"class.performance_manager::FrameNodeImpl"** %8, %10
  br i1 %11, label %19, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.performance_manager::FrameNodeImpl"** %18, %10
  br i1 %13, label %19, label %14

14:                                               ; preds = %5, %12
  %15 = phi %"class.performance_manager::FrameNodeImpl"** [ %18, %12 ], [ %8, %5 ]
  %16 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %15, align 8
  %17 = tail call fastcc zeroext i1 @"_ZN19performance_manager8internal21VisitFrameAndChildrenIZNS_19GraphImplOperations8HasFrameEPKNS_12PageNodeImplEPNS_13FrameNodeImplEE3$_1EEbS7_T_b"(%"class.performance_manager::FrameNodeImpl"* %16, i8* %1, %"class.performance_manager::FrameNodeImpl"* %2)
  %18 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %15, i64 1
  br i1 %17, label %12, label %19

19:                                               ; preds = %14, %12, %5
  %20 = phi i1 [ true, %5 ], [ true, %12 ], [ false, %14 ]
  ret i1 %20

21:                                               ; preds = %3
  store i8 1, i8* %1, align 1
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !9}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = distinct !{!23, !11}
!24 = distinct !{!24, !11}
