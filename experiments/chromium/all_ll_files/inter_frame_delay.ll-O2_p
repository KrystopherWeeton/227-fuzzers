; ModuleID = '../../third_party/webrtc/modules/video_coding/inter_frame_delay.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/inter_frame_delay.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::VCMInterFrameDelay" = type { i64, i32, i32, i64, i64 }

@_ZN6webrtc18VCMInterFrameDelayC1El = hidden unnamed_addr alias void (%"class.webrtc::VCMInterFrameDelay"*, i64), void (%"class.webrtc::VCMInterFrameDelay"*, i64)* @_ZN6webrtc18VCMInterFrameDelayC2El

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18VCMInterFrameDelayC2El(%"class.webrtc::VCMInterFrameDelay"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 1
  %5 = bitcast i32* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18VCMInterFrameDelay5ResetEl(%"class.webrtc::VCMInterFrameDelay"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 1
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc18VCMInterFrameDelay14CalculateDelayEjPll(%"class.webrtc::VCMInterFrameDelay"* nocapture, i32, i64* nocapture, i64) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  store i64 %3, i64* %5, align 8
  %9 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 4
  store i64 0, i64* %2, align 8
  br label %48

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = sub i32 %1, %14
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  %20 = add nsw i32 %12, 1
  store i32 %20, i32* %11, align 8
  br label %26

21:                                               ; preds = %10
  %22 = sub i32 %14, %1
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = add nsw i32 %12, -1
  store i32 %25, i32* %11, align 8
  br label %26

26:                                               ; preds = %16, %19, %21, %24
  %27 = phi i32 [ %12, %16 ], [ %20, %19 ], [ %12, %21 ], [ %25, %24 ]
  %28 = sub nsw i32 %27, %12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  br i1 %15, label %33, label %34

31:                                               ; preds = %26
  %32 = icmp slt i32 %28, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %31, %30
  store i64 0, i64* %2, align 8
  br label %48

34:                                               ; preds = %30, %31
  %35 = zext i32 %1 to i64
  %36 = sext i32 %28 to i64
  %37 = shl nsw i64 %36, 32
  %38 = or i64 %37, %35
  %39 = zext i32 %14 to i64
  %40 = sub nsw i64 %38, %39
  %41 = sitofp i64 %40 to double
  %42 = fdiv double %41, 9.000000e+01
  %43 = fadd double %42, 5.000000e-01
  %44 = fptosi double %43 to i64
  %45 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 4
  store i64 %44, i64* %45, align 8
  %46 = sub i64 %3, %6
  %47 = sub i64 %46, %44
  store i64 %47, i64* %2, align 8
  store i32 %1, i32* %13, align 4
  store i64 %3, i64* %5, align 8
  br label %48

48:                                               ; preds = %33, %34, %8
  %49 = phi i1 [ true, %8 ], [ false, %33 ], [ true, %34 ]
  ret i1 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc18VCMInterFrameDelay19CheckForWrapAroundsEj(%"class.webrtc::VCMInterFrameDelay"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = sub i32 %1, %4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %20

13:                                               ; preds = %2
  %14 = sub i32 %4, %1
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.webrtc::VCMInterFrameDelay", %"class.webrtc::VCMInterFrameDelay"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %13, %16, %6, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
