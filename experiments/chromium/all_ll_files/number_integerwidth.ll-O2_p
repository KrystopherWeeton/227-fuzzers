; ModuleID = '../../third_party/icu/source/i18n/number_integerwidth.cpp'
source_filename = "../../third_party/icu/source/i18n/number_integerwidth.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::number::IntegerWidth" = type <{ %union.anon, i8, [3 x i8] }>
%union.anon = type { i32, [4 x i8] }
%struct.anon = type { i16, i16, i8 }
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon.0, i8, i8, [6 x i8] }>
%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i8*, i32 }

@_ZN6icu_696number12IntegerWidthC1Essb = hidden unnamed_addr alias void (%"class.icu_69::number::IntegerWidth"*, i16, i16, i1), void (%"class.icu_69::number::IntegerWidth"*, i16, i16, i1)* @_ZN6icu_696number12IntegerWidthC2Essb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number12IntegerWidthC2Essb(%"class.icu_69::number::IntegerWidth"* nocapture, i16 signext, i16 signext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.icu_69::number::IntegerWidth", %"class.icu_69::number::IntegerWidth"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to %struct.anon*
  %8 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i16*
  store i16 %1, i16* %8, align 4
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %7, i64 0, i32 1
  store i16 %2, i16* %9, align 2
  %10 = getelementptr inbounds %"class.icu_69::number::IntegerWidth", %"class.icu_69::number::IntegerWidth"* %0, i64 0, i32 0, i32 1, i64 0
  store i8 %5, i8* %10, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i8 } @_ZN6icu_696number12IntegerWidth10zeroFillToEi(i32) local_unnamed_addr #1 align 2 {
  %2 = icmp ult i32 %0, 1000
  %3 = xor i1 %2, true
  %4 = zext i1 %3 to i8
  %5 = or i32 %0, -65536
  %6 = select i1 %2, i32 %5, i32 65810
  %7 = zext i32 %6 to i64
  %8 = insertvalue { i64, i8 } undef, i64 %7, 0
  %9 = insertvalue { i64, i8 } %8, i8 %4, 1
  ret { i64, i8 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN6icu_696number12IntegerWidth10truncateAtEi(%"class.icu_69::number::IntegerWidth"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::IntegerWidth", %"class.icu_69::number::IntegerWidth"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %8 to i16
  %11 = lshr i32 %9, 16
  %12 = and i64 %8, -1099511627776
  %13 = and i64 %8, 1095216660480
  br label %27

14:                                               ; preds = %2
  %15 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i16*
  %16 = load i16, i16* %15, align 4
  %17 = icmp ugt i32 %1, 999
  %18 = sext i16 %16 to i32
  %19 = icmp sgt i32 %18, %1
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = icmp eq i32 %1, -1
  %23 = select i1 %22, i32 65535, i32 1
  %24 = select i1 %22, i16 %16, i16 274
  %25 = xor i1 %22, true
  %26 = zext i1 %25 to i8
  br label %27

27:                                               ; preds = %14, %21, %6
  %28 = phi i32 [ %11, %6 ], [ %23, %21 ], [ %1, %14 ]
  %29 = phi i16 [ %10, %6 ], [ %24, %21 ], [ %16, %14 ]
  %30 = phi i64 [ %12, %6 ], [ 0, %21 ], [ 0, %14 ]
  %31 = phi i64 [ %13, %6 ], [ 0, %21 ], [ 0, %14 ]
  %32 = phi i8 [ 1, %6 ], [ %26, %21 ], [ 0, %14 ]
  %33 = shl i32 %28, 16
  %34 = zext i16 %29 to i32
  %35 = or i32 %33, %34
  %36 = or i64 %31, %30
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  %39 = insertvalue { i64, i8 } undef, i64 %38, 0
  %40 = insertvalue { i64, i8 } %39, i8 %32, 1
  ret { i64, i8 } %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number12IntegerWidth5applyERNS0_4impl15DecimalQuantityER10UErrorCode(%"class.icu_69::number::IntegerWidth"* nocapture readonly, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), i32* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %35

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::number::IntegerWidth", %"class.icu_69::number::IntegerWidth"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 1, i32* %2, align 4
  br label %35

11:                                               ; preds = %6
  %12 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to %struct.anon*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %12, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = icmp eq i16 %14, -1
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  %18 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i16*
  %19 = load i16, i16* %18, align 4
  %20 = sext i16 %19 to i32
  tail call void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %20) #5
  br label %35

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.icu_69::number::IntegerWidth", %"class.icu_69::number::IntegerWidth"* %0, i64 0, i32 0, i32 1, i64 0
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #5
  %27 = icmp sgt i32 %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 1, i32* %2, align 4
  br label %29

29:                                               ; preds = %21, %28, %25
  %30 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i16*
  %31 = load i16, i16* %30, align 4
  %32 = sext i16 %31 to i32
  tail call void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %32) #5
  %33 = load i16, i16* %13, align 2
  %34 = sext i16 %33 to i32
  tail call void @_ZN6icu_696number4impl15DecimalQuantity15applyMaxIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %34) #5
  br label %35

35:                                               ; preds = %3, %17, %29, %10
  ret void
}

declare void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #3

declare i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #3

declare void @_ZN6icu_696number4impl15DecimalQuantity15applyMaxIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number12IntegerWidtheqERKS1_(%"class.icu_69::number::IntegerWidth"* nocapture readonly, %"class.icu_69::number::IntegerWidth"* nocapture readonly dereferenceable(12)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to i16*
  %4 = load i16, i16* %3, align 4
  %5 = bitcast %"class.icu_69::number::IntegerWidth"* %1 to i16*
  %6 = load i16, i16* %5, align 4
  %7 = icmp eq i16 %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = bitcast %"class.icu_69::number::IntegerWidth"* %1 to %struct.anon*
  %10 = bitcast %"class.icu_69::number::IntegerWidth"* %0 to %struct.anon*
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %10, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %12, %14
  br label %16

16:                                               ; preds = %8, %2
  %17 = phi i1 [ false, %2 ], [ %15, %8 ]
  ret i1 %17
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
