; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-font.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-font.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_atomic_ptr_t.209 = type { %struct.hb_font_funcs_t* }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon.200, %struct.anon.201, %"union.hb_font_funcs_t::get_t" }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.anon.200 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.201 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.202 }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.193 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.21, %struct.hb_face_lazy_loader_t.24, %struct.hb_table_lazy_loader_t.30, %struct.hb_face_lazy_loader_t.33, %struct.hb_face_lazy_loader_t.41, %struct.hb_table_lazy_loader_t.45, %struct.hb_face_lazy_loader_t.48, %struct.hb_table_lazy_loader_t.52, %struct.hb_face_lazy_loader_t.55, %struct.hb_face_lazy_loader_t.60, %struct.hb_face_lazy_loader_t.67, %struct.hb_face_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.114, %struct.hb_table_lazy_loader_t.117, %struct.hb_table_lazy_loader_t.120, %struct.hb_face_lazy_loader_t.123, %struct.hb_table_lazy_loader_t.127, %struct.hb_table_lazy_loader_t.130, %struct.hb_face_lazy_loader_t.133, %struct.hb_face_lazy_loader_t.137, %struct.hb_face_lazy_loader_t.141, %struct.hb_table_lazy_loader_t.145, %struct.hb_table_lazy_loader_t.148, %struct.hb_table_lazy_loader_t.151, %struct.hb_table_lazy_loader_t.154, %struct.hb_table_lazy_loader_t.157, %struct.hb_table_lazy_loader_t.160, %struct.hb_table_lazy_loader_t.163, %struct.hb_table_lazy_loader_t.166, %struct.hb_table_lazy_loader_t.169, %struct.hb_table_lazy_loader_t.172, %struct.hb_face_lazy_loader_t.175, %struct.hb_face_lazy_loader_t.181, %struct.hb_face_lazy_loader_t.186, %struct.hb_table_lazy_loader_t.190 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type { %"struct.OT::cmap::accelerator_t" }
%"struct.OT::cmap::accelerator_t" = type { %struct.hb_nonnull_ptr_t, %struct.hb_nonnull_ptr_t.19, i1 (i8*, i32, i32*)*, i8*, %"struct.OT::CmapSubtableFormat4::accelerator_t", %struct.hb_blob_ptr_t }
%struct.hb_nonnull_ptr_t = type { %"struct.OT::CmapSubtable"* }
%"struct.OT::CmapSubtable" = type { %union.anon }
%union.anon = type { %"struct.OT::CmapSubtableFormat0" }
%"struct.OT::CmapSubtableFormat0" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", [256 x %"struct.OT::IntType.6"] }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [2 x i8] }
%"struct.OT::IntType.6" = type { %struct.BEInt.7 }
%struct.BEInt.7 = type { i8 }
%struct.hb_nonnull_ptr_t.19 = type { %"struct.OT::CmapSubtableFormat14"* }
%"struct.OT::CmapSubtableFormat14" = type { %"struct.OT::IntType", %"struct.OT::IntType.9", %"struct.OT::SortedArrayOf.14" }
%"struct.OT::IntType.9" = type { %struct.BEInt.10 }
%struct.BEInt.10 = type { [4 x i8] }
%"struct.OT::SortedArrayOf.14" = type { %"struct.OT::ArrayOf.15" }
%"struct.OT::ArrayOf.15" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::VariationSelectorRecord"] }
%"struct.OT::VariationSelectorRecord" = type { %"struct.OT::IntType.16", %"struct.OT::OffsetTo", %"struct.OT::OffsetTo.18" }
%"struct.OT::IntType.16" = type { %struct.BEInt.17 }
%struct.BEInt.17 = type { [3 x i8] }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType.9" }
%"struct.OT::OffsetTo.18" = type { %"struct.OT::Offset" }
%"struct.OT::CmapSubtableFormat4::accelerator_t" = type { %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, i32, i32 }
%struct.hb_blob_ptr_t = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_nonnull_ptr_t.20 = type { %struct.hb_blob_t* }
%struct.hb_table_lazy_loader_t.21 = type { %struct.hb_lazy_loader_t.22 }
%struct.hb_lazy_loader_t.22 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.27 }
%struct.hb_atomic_ptr_t.27 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type { %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t" }
%"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t" = type { i32, i32, i32, %struct.hb_blob_ptr_t.28, %struct.hb_blob_ptr_t.29 }
%struct.hb_blob_ptr_t.28 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_blob_ptr_t.29 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_table_lazy_loader_t.30 = type { %struct.hb_lazy_loader_t.31 }
%struct.hb_lazy_loader_t.31 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.33 = type { %struct.hb_lazy_loader_t.34 }
%struct.hb_lazy_loader_t.34 = type { %struct.hb_atomic_ptr_t.36 }
%struct.hb_atomic_ptr_t.36 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type { %"struct.OT::post::accelerator_t" }
%"struct.OT::post::accelerator_t" = type { %struct.hb_blob_ptr_t.37, i32, %"struct.OT::ArrayOf.38"*, %struct.hb_vector_t.39, i8*, %struct.hb_atomic_ptr_t.40 }
%struct.hb_blob_ptr_t.37 = type { %struct.hb_nonnull_ptr_t.20 }
%"struct.OT::ArrayOf.38" = type { %"struct.OT::IntType", [1 x %"struct.OT::IntType"] }
%struct.hb_vector_t.39 = type { i32, i32, i32* }
%struct.hb_atomic_ptr_t.40 = type { i16* }
%struct.hb_face_lazy_loader_t.41 = type { %struct.hb_lazy_loader_t.42 }
%struct.hb_lazy_loader_t.42 = type { %struct.hb_atomic_ptr_t.44 }
%struct.hb_atomic_ptr_t.44 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.45 = type { %struct.hb_lazy_loader_t.46 }
%struct.hb_lazy_loader_t.46 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.48 = type { %struct.hb_lazy_loader_t.49 }
%struct.hb_lazy_loader_t.49 = type { %struct.hb_atomic_ptr_t.51 }
%struct.hb_atomic_ptr_t.51 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.52 = type { %struct.hb_lazy_loader_t.53 }
%struct.hb_lazy_loader_t.53 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.55 = type { %struct.hb_lazy_loader_t.56 }
%struct.hb_lazy_loader_t.56 = type { %struct.hb_atomic_ptr_t.58 }
%struct.hb_atomic_ptr_t.58 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type { %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t" }
%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t" = type { i32, i32, i32, %struct.hb_blob_ptr_t.59, %struct.hb_blob_ptr_t.29 }
%struct.hb_blob_ptr_t.59 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_face_lazy_loader_t.60 = type { %struct.hb_lazy_loader_t.61 }
%struct.hb_lazy_loader_t.61 = type { %struct.hb_atomic_ptr_t.63 }
%struct.hb_atomic_ptr_t.63 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type { %"struct.OT::glyf::accelerator_t" }
%"struct.OT::glyf::accelerator_t" = type { %"struct.OT::gvar_accelerator_t"*, %"struct.OT::hmtx_accelerator_t"*, %"struct.OT::vmtx_accelerator_t"*, i8, i32, %struct.hb_blob_ptr_t.65, %struct.hb_blob_ptr_t.66, %struct.hb_face_t* }
%"struct.OT::gvar_accelerator_t" = type { %"struct.OT::gvar::accelerator_t" }
%"struct.OT::gvar::accelerator_t" = type { %struct.hb_blob_ptr_t.64 }
%struct.hb_blob_ptr_t.64 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_blob_ptr_t.65 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_blob_ptr_t.66 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_face_lazy_loader_t.67 = type { %struct.hb_lazy_loader_t.68 }
%struct.hb_lazy_loader_t.68 = type { %struct.hb_atomic_ptr_t.70 }
%struct.hb_atomic_ptr_t.70 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type { %"struct.OT::cff1::accelerator_t" }
%"struct.OT::cff1::accelerator_t" = type { %"struct.OT::cff1::accelerator_templ_t.base", %struct.hb_sorted_vector_t }
%"struct.OT::cff1::accelerator_templ_t.base" = type <{ %struct.hb_blob_t*, %struct.hb_sanitize_context_t, %"struct.CFF::Encoding"*, %"struct.CFF::Charset"*, %"struct.CFF::CFFIndex"*, %"struct.CFF::CFF1IndexOf"*, %"struct.CFF::CFF1StringIndex"*, %"struct.CFF::Subrs"*, %"struct.CFF::CFFIndex"*, %"struct.CFF::CFF1FDArray"*, %"struct.CFF::CFF1FDSelect"*, i32, [4 x i8], %"struct.CFF::cff1_top_dict_values_t", %struct.hb_vector_t.81, %struct.hb_vector_t.85, i32 }>
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.CFF::Encoding" = type { %"struct.OT::IntType.6", %union.anon.71 }
%union.anon.71 = type { %"struct.CFF::Encoding1" }
%"struct.CFF::Encoding1" = type { %"struct.OT::ArrayOf.73" }
%"struct.OT::ArrayOf.73" = type { %"struct.OT::IntType.6", [1 x %"struct.CFF::Encoding1_Range"] }
%"struct.CFF::Encoding1_Range" = type { %"struct.OT::IntType.6", %"struct.OT::IntType.6" }
%"struct.CFF::Charset" = type { %"struct.OT::IntType.6", %union.anon.74 }
%union.anon.74 = type { %"struct.CFF::Charset1_2.75" }
%"struct.CFF::Charset1_2.75" = type { [1 x %"struct.CFF::Charset_Range.76"] }
%"struct.CFF::Charset_Range.76" = type { %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.CFF::CFF1IndexOf" = type { %"struct.CFF::CFFIndexOf" }
%"struct.CFF::CFFIndexOf" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::CFFIndex" = type { %"struct.OT::IntType", %"struct.OT::IntType.6", [1 x %"struct.OT::IntType.6"] }
%"struct.CFF::CFF1StringIndex" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::Subrs" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::CFF1FDArray" = type { %"struct.CFF::FDArray" }
%"struct.CFF::FDArray" = type { %"struct.CFF::CFFIndexOf.77" }
%"struct.CFF::CFFIndexOf.77" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::CFF1FDSelect" = type { %"struct.CFF::FDSelect" }
%"struct.CFF::FDSelect" = type { %"struct.OT::IntType.6", %union.anon.78 }
%union.anon.78 = type { %"struct.CFF::FDSelect3_4" }
%"struct.CFF::FDSelect3_4" = type { %"struct.OT::ArrayOf.79" }
%"struct.OT::ArrayOf.79" = type { %"struct.OT::IntType", [1 x %"struct.CFF::FDSelect3_4_Range"] }
%"struct.CFF::FDSelect3_4_Range" = type { %"struct.OT::IntType", %"struct.OT::IntType.6" }
%"struct.CFF::cff1_top_dict_values_t" = type { %"struct.CFF::top_dict_values_t", %"struct.CFF::name_dict_values_t", i32, i32, i32, i32, i32, i32, %"struct.CFF::table_info_t" }
%"struct.CFF::top_dict_values_t" = type { %"struct.CFF::dict_values_t", i32, i32 }
%"struct.CFF::dict_values_t" = type { %"struct.CFF::parsed_values_t" }
%"struct.CFF::parsed_values_t" = type { i32, %struct.hb_vector_t.80 }
%struct.hb_vector_t.80 = type { i32, i32, %"struct.CFF::cff1_top_dict_val_t"* }
%"struct.CFF::cff1_top_dict_val_t" = type <{ %"struct.CFF::op_str_t", i32, [4 x i8] }>
%"struct.CFF::op_str_t" = type { i32, %"struct.CFF::byte_str_t" }
%"struct.CFF::byte_str_t" = type { %struct.hb_array_t }
%struct.hb_array_t = type { i8*, i32, i32 }
%"struct.CFF::name_dict_values_t" = type { [11 x i32] }
%"struct.CFF::table_info_t" = type { i32, i32, i32 }
%struct.hb_vector_t.81 = type { i32, i32, %"struct.CFF::cff1_font_dict_values_t"* }
%"struct.CFF::cff1_font_dict_values_t" = type { %"struct.CFF::dict_values_t.82", %"struct.CFF::table_info_t", i32 }
%"struct.CFF::dict_values_t.82" = type { %"struct.CFF::parsed_values_t.83" }
%"struct.CFF::parsed_values_t.83" = type { i32, %struct.hb_vector_t.84 }
%struct.hb_vector_t.84 = type { i32, i32, %"struct.CFF::op_str_t"* }
%struct.hb_vector_t.85 = type { i32, i32, %"struct.CFF::cff1_private_dict_values_base_t"* }
%"struct.CFF::cff1_private_dict_values_base_t" = type { %"struct.CFF::dict_values_t.86", i32, %"struct.CFF::Subrs"* }
%"struct.CFF::dict_values_t.86" = type { %"struct.CFF::parsed_values_t.87" }
%"struct.CFF::parsed_values_t.87" = type { i32, %struct.hb_vector_t.88 }
%struct.hb_vector_t.88 = type { i32, i32, %"struct.CFF::dict_val_t"* }
%"struct.CFF::dict_val_t" = type { %"struct.CFF::op_str_t", %"struct.CFF::number_t" }
%"struct.CFF::number_t" = type { double }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.89 }
%struct.hb_vector_t.89 = type { i32, i32, %"struct.OT::cff1::accelerator_t::gname_t"* }
%"struct.OT::cff1::accelerator_t::gname_t" = type <{ %struct.hb_array_t.90, i16, [6 x i8] }>
%struct.hb_array_t.90 = type { i8*, i32, i32 }
%struct.hb_face_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.99 }
%struct.hb_atomic_ptr_t.99 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type { %"struct.OT::cff2::accelerator_t.base", [4 x i8] }
%"struct.OT::cff2::accelerator_t.base" = type { %"struct.OT::cff2::accelerator_templ_t.base" }
%"struct.OT::cff2::accelerator_templ_t.base" = type <{ %struct.hb_blob_t*, %struct.hb_sanitize_context_t, %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::Subrs.101"*, %"struct.CFF::CFF2VariationStore"*, %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFF2FDArray"*, %"struct.CFF::CFF2FDSelect"*, i32, [4 x i8], %struct.hb_vector_t.112, %struct.hb_vector_t.113, i32 }>
%"struct.CFF::cff2_top_dict_values_t" = type { %"struct.CFF::top_dict_values_t.100", i32, i32 }
%"struct.CFF::top_dict_values_t.100" = type { %"struct.CFF::dict_values_t.82", i32, i32 }
%"struct.CFF::Subrs.101" = type { %"struct.CFF::CFFIndex.102" }
%"struct.CFF::CFFIndex.102" = type { %"struct.OT::IntType.9", %"struct.OT::IntType.6", [1 x %"struct.OT::IntType.6"] }
%"struct.CFF::CFF2VariationStore" = type { %"struct.OT::IntType", %"struct.OT::VariationStore" }
%"struct.OT::VariationStore" = type { %"struct.OT::IntType", %"struct.OT::OffsetTo.103", %"struct.OT::ArrayOf.104" }
%"struct.OT::OffsetTo.103" = type { %"struct.OT::Offset" }
%"struct.OT::ArrayOf.104" = type { %"struct.OT::IntType", [1 x %"struct.OT::OffsetTo.105"] }
%"struct.OT::OffsetTo.105" = type { %"struct.OT::Offset" }
%"struct.CFF::CFF2FDArray" = type { %"struct.CFF::FDArray.106" }
%"struct.CFF::FDArray.106" = type { %"struct.CFF::CFFIndexOf.107" }
%"struct.CFF::CFFIndexOf.107" = type { %"struct.CFF::CFFIndex.102" }
%"struct.CFF::CFF2FDSelect" = type { %"struct.OT::IntType.6", %union.anon.108 }
%union.anon.108 = type { %"struct.CFF::FDSelect3_4.109" }
%"struct.CFF::FDSelect3_4.109" = type { %"struct.OT::ArrayOf.110" }
%"struct.OT::ArrayOf.110" = type { %"struct.OT::IntType.9", [1 x %"struct.CFF::FDSelect3_4_Range.111"] }
%"struct.CFF::FDSelect3_4_Range.111" = type { %"struct.OT::IntType.9", %"struct.OT::IntType" }
%struct.hb_vector_t.112 = type { i32, i32, %"struct.CFF::cff2_font_dict_values_t"* }
%"struct.CFF::cff2_font_dict_values_t" = type <{ %"struct.CFF::dict_values_t.82", %"struct.CFF::table_info_t", [4 x i8] }>
%struct.hb_vector_t.113 = type { i32, i32, %"struct.CFF::cff2_private_dict_values_base_t"* }
%"struct.CFF::cff2_private_dict_values_base_t" = type <{ %"struct.CFF::dict_values_t.86", i32, [4 x i8], %"struct.CFF::Subrs.101"*, i32, [4 x i8] }>
%struct.hb_table_lazy_loader_t.114 = type { %struct.hb_lazy_loader_t.115 }
%struct.hb_lazy_loader_t.115 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.117 = type { %struct.hb_lazy_loader_t.118 }
%struct.hb_lazy_loader_t.118 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.120 = type { %struct.hb_lazy_loader_t.121 }
%struct.hb_lazy_loader_t.121 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.126 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.OT::gvar_accelerator_t"* }
%struct.hb_table_lazy_loader_t.127 = type { %struct.hb_lazy_loader_t.128 }
%struct.hb_lazy_loader_t.128 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.130 = type { %struct.hb_lazy_loader_t.131 }
%struct.hb_lazy_loader_t.131 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.133 = type { %struct.hb_lazy_loader_t.134 }
%struct.hb_lazy_loader_t.134 = type { %struct.hb_atomic_ptr_t.136 }
%struct.hb_atomic_ptr_t.136 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.137 = type { %struct.hb_lazy_loader_t.138 }
%struct.hb_lazy_loader_t.138 = type { %struct.hb_atomic_ptr_t.140 }
%struct.hb_atomic_ptr_t.140 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.141 = type { %struct.hb_lazy_loader_t.142 }
%struct.hb_lazy_loader_t.142 = type { %struct.hb_atomic_ptr_t.144 }
%struct.hb_atomic_ptr_t.144 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.145 = type { %struct.hb_lazy_loader_t.146 }
%struct.hb_lazy_loader_t.146 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.148 = type { %struct.hb_lazy_loader_t.149 }
%struct.hb_lazy_loader_t.149 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.151 = type { %struct.hb_lazy_loader_t.152 }
%struct.hb_lazy_loader_t.152 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.154 = type { %struct.hb_lazy_loader_t.155 }
%struct.hb_lazy_loader_t.155 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.157 = type { %struct.hb_lazy_loader_t.158 }
%struct.hb_lazy_loader_t.158 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.160 = type { %struct.hb_lazy_loader_t.161 }
%struct.hb_lazy_loader_t.161 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.163 = type { %struct.hb_lazy_loader_t.164 }
%struct.hb_lazy_loader_t.164 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.166 = type { %struct.hb_lazy_loader_t.167 }
%struct.hb_lazy_loader_t.167 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.169 = type { %struct.hb_lazy_loader_t.170 }
%struct.hb_lazy_loader_t.170 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.172 = type { %struct.hb_lazy_loader_t.173 }
%struct.hb_lazy_loader_t.173 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.175 = type { %struct.hb_lazy_loader_t.176 }
%struct.hb_lazy_loader_t.176 = type { %struct.hb_atomic_ptr_t.178 }
%struct.hb_atomic_ptr_t.178 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type { %"struct.OT::CBDT::accelerator_t.base", [4 x i8] }
%"struct.OT::CBDT::accelerator_t.base" = type <{ %struct.hb_blob_ptr_t.179, %struct.hb_blob_ptr_t.180, i32 }>
%struct.hb_blob_ptr_t.179 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_blob_ptr_t.180 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_face_lazy_loader_t.181 = type { %struct.hb_lazy_loader_t.182 }
%struct.hb_lazy_loader_t.182 = type { %struct.hb_atomic_ptr_t.184 }
%struct.hb_atomic_ptr_t.184 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type { %"struct.OT::sbix::accelerator_t.base", [4 x i8] }
%"struct.OT::sbix::accelerator_t.base" = type <{ %struct.hb_blob_ptr_t.185, i32 }>
%struct.hb_blob_ptr_t.185 = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_face_lazy_loader_t.186 = type { %struct.hb_lazy_loader_t.187 }
%struct.hb_lazy_loader_t.187 = type { %struct.hb_atomic_ptr_t.189 }
%struct.hb_atomic_ptr_t.189 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.190 = type { %struct.hb_lazy_loader_t.191 }
%struct.hb_lazy_loader_t.191 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.193 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon, %struct.anon.194, %struct.anon.195 }
%struct.anon = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.194 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.195 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t.196, [2 x %struct.hb_vector_t.198], [2 x %struct.hb_vector_t.199] }
%struct.hb_sorted_vector_t.196 = type { %struct.hb_vector_t.197 }
%struct.hb_vector_t.197 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.198 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.199 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.39 }
%struct.hb_shaper_object_dataset_t.202 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.203 }
%struct.hb_shaper_lazy_loader_t.203 = type { %struct.hb_lazy_loader_t.204 }
%struct.hb_lazy_loader_t.204 = type { %struct.hb_atomic_ptr_t.206 }
%struct.hb_atomic_ptr_t.206 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%union.cff1_std_strings_msgstr_t = type { %struct.anon.351 }
%struct.anon.351 = type { [8 x i8], [6 x i8], [7 x i8], [9 x i8], [11 x i8], [7 x i8], [8 x i8], [10 x i8], [11 x i8], [10 x i8], [11 x i8], [9 x i8], [5 x i8], [6 x i8], [7 x i8], [7 x i8], [6 x i8], [5 x i8], [4 x i8], [4 x i8], [6 x i8], [5 x i8], [5 x i8], [4 x i8], [6 x i8], [6 x i8], [5 x i8], [6 x i8], [10 x i8], [5 x i8], [6 x i8], [8 x i8], [9 x i8], [3 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [12 x i8], [10 x i8], [13 x i8], [12 x i8], [11 x i8], [10 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [10 x i8], [4 x i8], [11 x i8], [11 x i8], [11 x i8], [5 x i8], [9 x i8], [9 x i8], [4 x i8], [7 x i8], [8 x i8], [9 x i8], [12 x i8], [13 x i8], [14 x i8], [14 x i8], [15 x i8], [3 x i8], [3 x i8], [7 x i8], [7 x i8], [10 x i8], [15 x i8], [10 x i8], [7 x i8], [15 x i8], [13 x i8], [14 x i8], [15 x i8], [9 x i8], [12 x i8], [13 x i8], [6 x i8], [6 x i8], [11 x i8], [6 x i8], [7 x i8], [6 x i8], [10 x i8], [9 x i8], [5 x i8], [8 x i8], [13 x i8], [7 x i8], [6 x i8], [7 x i8], [3 x i8], [12 x i8], [7 x i8], [7 x i8], [3 x i8], [13 x i8], [3 x i8], [9 x i8], [7 x i8], [7 x i8], [3 x i8], [11 x i8], [12 x i8], [11 x i8], [3 x i8], [10 x i8], [4 x i8], [8 x i8], [10 x i8], [6 x i8], [11 x i8], [7 x i8], [10 x i8], [7 x i8], [6 x i8], [14 x i8], [12 x i8], [11 x i8], [6 x i8], [4 x i8], [9 x i8], [14 x i8], [10 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [6 x i8], [7 x i8], [9 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [6 x i8], [7 x i8], [9 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [10 x i8], [7 x i8], [12 x i8], [18 x i8], [15 x i8], [15 x i8], [15 x i8], [11 x i8], [18 x i8], [19 x i8], [15 x i8], [15 x i8], [13 x i8], [12 x i8], [12 x i8], [14 x i8], [13 x i8], [13 x i8], [12 x i8], [14 x i8], [14 x i8], [13 x i8], [14 x i8], [20 x i8], [15 x i8], [14 x i8], [10 x i8], [10 x i8], [13 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], [3 x i8], [4 x i8], [4 x i8], [18 x i8], [19 x i8], [16 x i8], [15 x i8], [11 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [14 x i8], [10 x i8], [7 x i8], [11 x i8], [16 x i8], [13 x i8], [12 x i8], [12 x i8], [12 x i8], [14 x i8], [11 x i8], [11 x i8], [15 x i8], [12 x i8], [11 x i8], [15 x i8], [12 x i8], [10 x i8], [13 x i8], [18 x i8], [10 x i8], [13 x i8], [12 x i8], [13 x i8], [9 x i8], [10 x i8], [13 x i8], [13 x i8], [13 x i8], [12 x i8], [14 x i8], [14 x i8], [13 x i8], [13 x i8], [12 x i8], [12 x i8], [14 x i8], [13 x i8], [13 x i8], [12 x i8], [14 x i8], [14 x i8], [13 x i8], [13 x i8], [15 x i8], [15 x i8], [14 x i8], [12 x i8], [12 x i8], [17 x i8], [12 x i8], [15 x i8], [11 x i8], [8 x i8], [14 x i8], [12 x i8], [12 x i8], [17 x i8], [15 x i8], [12 x i8], [12 x i8], [17 x i8], [15 x i8], [9 x i8], [12 x i8], [12 x i8], [12 x i8], [17 x i8], [12 x i8], [15 x i8], [8 x i8], [12 x i8], [12 x i8], [12 x i8], [17 x i8], [15 x i8], [12 x i8], [11 x i8], [15 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [6 x i8], [5 x i8], [5 x i8], [6 x i8], [7 x i8], [8 x i8], [6 x i8], [9 x i8] }
%union.format1_names_msgstr_t = type { %struct.anon.374 }
%struct.anon.374 = type { [8 x i8], [6 x i8], [17 x i8], [6 x i8], [7 x i8], [9 x i8], [11 x i8], [7 x i8], [8 x i8], [10 x i8], [12 x i8], [10 x i8], [11 x i8], [9 x i8], [5 x i8], [6 x i8], [7 x i8], [7 x i8], [6 x i8], [5 x i8], [4 x i8], [4 x i8], [6 x i8], [5 x i8], [5 x i8], [4 x i8], [6 x i8], [6 x i8], [5 x i8], [6 x i8], [10 x i8], [5 x i8], [6 x i8], [8 x i8], [9 x i8], [3 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [12 x i8], [10 x i8], [13 x i8], [12 x i8], [11 x i8], [6 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [10 x i8], [4 x i8], [11 x i8], [11 x i8], [10 x i8], [6 x i8], [9 x i8], [7 x i8], [7 x i8], [10 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [6 x i8], [9 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [5 x i8], [9 x i8], [8 x i8], [7 x i8], [10 x i8], [11 x i8], [11 x i8], [10 x i8], [10 x i8], [6 x i8], [9 x i8], [9 x i8], [3 x i8], [7 x i8], [9 x i8], [10 x i8], [10 x i8], [13 x i8], [4 x i8], [3 x i8], [12 x i8], [10 x i8], [8 x i8], [3 x i8], [9 x i8], [12 x i8], [13 x i8], [6 x i8], [3 x i8], [7 x i8], [13 x i8], [11 x i8], [11 x i8], [8 x i8], [7 x i8], [12 x i8], [6 x i8], [14 x i8], [15 x i8], [9 x i8], [17 x i8], [7 x i8], [7 x i8], [7 x i8], [3 x i8], [3 x i8], [7 x i8], [7 x i8], [13 x i8], [14 x i8], [10 x i8], [11 x i8], [7 x i8], [8 x i8], [10 x i8], [10 x i8], [9 x i8], [9 x i8], [14 x i8], [15 x i8], [3 x i8], [3 x i8], [10 x i8], [15 x i8], [15 x i8], [13 x i8], [12 x i8], [12 x i8], [12 x i8], [7 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [7 x i8], [12 x i8], [6 x i8], [7 x i8], [7 x i8], [12 x i8], [7 x i8], [9 x i8], [11 x i8], [6 x i8], [7 x i8], [6 x i8], [10 x i8], [5 x i8], [8 x i8], [13 x i8], [7 x i8], [6 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [10 x i8], [4 x i8], [4 x i8], [7 x i8], [7 x i8], [6 x i8], [6 x i8], [6 x i8], [9 x i8], [12 x i8], [12 x i8], [14 x i8], [8 x i8], [11 x i8], [14 x i8], [6 x i8], [7 x i8], [7 x i8], [11 x i8], [9 x i8], [9 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8] }
%"struct.OT::contour_point_t" = type { i8, float, float, i8 }
%"struct.OT::glyf::accelerator_t::points_aggregator_t" = type { %struct.hb_font_t*, %struct.hb_glyph_extents_t*, %"struct.OT::contour_point_t"*, %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t" }
%"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t" = type { float, float, float, float }
%"struct.OT::hmtxvmtx.291" = type { %"struct.OT::UnsizedArrayOf.283" }
%"struct.OT::UnsizedArrayOf.283" = type { [1 x %"struct.OT::LongMetric"] }
%"struct.OT::LongMetric" = type { %"struct.OT::IntType", %"struct.OT::IntType.281" }
%"struct.OT::IntType.281" = type { %struct.BEInt.282 }
%struct.BEInt.282 = type { [2 x i8] }
%"struct.OT::hmtxvmtx" = type { %"struct.OT::UnsizedArrayOf.283" }
%"struct.OT::gvar" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::OffsetTo.303", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::OffsetTo.305", %"struct.OT::UnsizedArrayOf.287" }
%"struct.OT::FixedVersion" = type { %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::OffsetTo.303" = type { %"struct.OT::Offset.304" }
%"struct.OT::Offset.304" = type { %"struct.OT::IntType.9" }
%"struct.OT::OffsetTo.305" = type { %"struct.OT::Offset" }
%"struct.OT::UnsizedArrayOf.287" = type { [1 x %"struct.OT::IntType.6"] }
%"struct.OT::VORG" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType.281", %"struct.OT::SortedArrayOf.292" }
%"struct.OT::SortedArrayOf.292" = type { %"struct.OT::ArrayOf.293" }
%"struct.OT::ArrayOf.293" = type { %"struct.OT::IntType", [1 x %"struct.OT::VertOriginMetric"] }
%"struct.OT::VertOriginMetric" = type { %"struct.OT::HBGlyphID", %"struct.OT::IntType.281" }
%"struct.OT::HBGlyphID" = type { %"struct.OT::IntType" }
%"struct.OT::sbix::accelerator_t" = type <{ %struct.hb_blob_ptr_t.185, i32, [4 x i8] }>
%"struct.OT::cff2::accelerator_templ_t" = type <{ %struct.hb_blob_t*, %struct.hb_sanitize_context_t, %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::Subrs.101"*, %"struct.CFF::CFF2VariationStore"*, %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFF2FDArray"*, %"struct.CFF::CFF2FDSelect"*, i32, [4 x i8], %struct.hb_vector_t.112, %struct.hb_vector_t.113, i32, [4 x i8] }>
%"struct.OT::cff2::accelerator_t" = type { %"struct.OT::cff2::accelerator_templ_t.base", [4 x i8] }
%"struct.OT::CBDT::accelerator_t" = type <{ %struct.hb_blob_ptr_t.179, %struct.hb_blob_ptr_t.180, i32, [4 x i8] }>
%"struct.OT::cff1::accelerator_templ_t" = type <{ %struct.hb_blob_t*, %struct.hb_sanitize_context_t, %"struct.CFF::Encoding"*, %"struct.CFF::Charset"*, %"struct.CFF::CFFIndex"*, %"struct.CFF::CFF1IndexOf"*, %"struct.CFF::CFF1StringIndex"*, %"struct.CFF::Subrs"*, %"struct.CFF::CFFIndex"*, %"struct.CFF::CFF1FDArray"*, %"struct.CFF::CFF1FDSelect"*, i32, [4 x i8], %"struct.CFF::cff1_top_dict_values_t", %struct.hb_vector_t.81, %struct.hb_vector_t.85, i32, [4 x i8] }>
%"struct.OT::cmap" = type { %"struct.OT::IntType", %"struct.OT::SortedArrayOf.210" }
%"struct.OT::SortedArrayOf.210" = type { %"struct.OT::ArrayOf.211" }
%"struct.OT::ArrayOf.211" = type { %"struct.OT::IntType", [1 x %"struct.OT::EncodingRecord"] }
%"struct.OT::EncodingRecord" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::OffsetTo.212" }
%"struct.OT::OffsetTo.212" = type { %"struct.OT::Offset" }
%"struct.OT::CmapSubtableFormat4" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::UnsizedArrayOf" }
%"struct.OT::UnsizedArrayOf" = type { [1 x %"struct.OT::IntType"] }
%"struct.OT::CmapSubtableLongSegmented" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::SortedArrayOf" }
%"struct.OT::SortedArrayOf" = type { %"struct.OT::ArrayOf.12" }
%"struct.OT::ArrayOf.12" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::CmapSubtableLongGroup"] }
%"struct.OT::CmapSubtableLongGroup" = type { %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9" }
%"struct.OT::CmapSubtableTrimmed" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::ArrayOf" }
%"struct.OT::ArrayOf" = type { %"struct.OT::IntType", [1 x %"struct.OT::HBGlyphID"] }
%"struct.OT::CmapSubtableTrimmed.8" = type { %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::ArrayOf.11" }
%"struct.OT::ArrayOf.11" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::HBGlyphID"] }
%struct.CustomRange = type { %"struct.OT::IntType" }
%"struct.OT::DefaultUVS" = type { %"struct.OT::SortedArrayOf.232" }
%"struct.OT::SortedArrayOf.232" = type { %"struct.OT::ArrayOf.233" }
%"struct.OT::ArrayOf.233" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::UnicodeValueRange"] }
%"struct.OT::UnicodeValueRange" = type { %"struct.OT::IntType.16", %"struct.OT::IntType.6" }
%"struct.OT::NonDefaultUVS" = type { %"struct.OT::SortedArrayOf.234" }
%"struct.OT::SortedArrayOf.234" = type { %"struct.OT::ArrayOf.235" }
%"struct.OT::ArrayOf.235" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::UVSMapping"] }
%"struct.OT::UVSMapping" = type { %"struct.OT::IntType.16", %"struct.OT::HBGlyphID" }
%"struct.OT::HVARVVAR" = type { %"struct.OT::FixedVersion", %"struct.OT::OffsetTo.284", %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285" }
%"struct.OT::OffsetTo.284" = type { %"struct.OT::Offset" }
%"struct.OT::OffsetTo.285" = type { %"struct.OT::Offset" }
%"struct.OT::hhea" = type { %"struct.OT::_hea" }
%"struct.OT::_hea" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType" }
%"struct.OT::VarData" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::ArrayOf.38" }
%"struct.OT::DeltaSetIndexMap" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::UnsizedArrayOf.287" }
%"struct.OT::VarRegionList" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::UnsizedArrayOf.286" }
%"struct.OT::UnsizedArrayOf.286" = type { [1 x %"struct.OT::VarRegionAxis"] }
%"struct.OT::VarRegionAxis" = type { %"struct.OT::F2DOT14", %"struct.OT::F2DOT14", %"struct.OT::F2DOT14" }
%"struct.OT::F2DOT14" = type { %"struct.OT::IntType.281" }
%"struct.OT::IntType.288" = type { %struct.BEInt.289 }
%struct.BEInt.289 = type { i8 }
%"struct.OT::vhea" = type { %"struct.OT::_hea.290" }
%"struct.OT::_hea.290" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType" }
%"struct.OT::glyf::Glyph" = type <{ %struct.hb_array_t.90, i32, [4 x i8], %"struct.OT::glyf::Glyph::GlyphHeader"*, i32, [4 x i8] }>
%"struct.OT::glyf::Glyph::GlyphHeader" = type { %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281" }
%"struct.OT::contour_point_vector_t" = type { %struct.hb_vector_t.306 }
%struct.hb_vector_t.306 = type { i32, i32, %"struct.OT::contour_point_t"* }
%"struct.OT::glyf::Glyph::SimpleGlyph" = type { %"struct.OT::glyf::Glyph::GlyphHeader"*, %struct.hb_array_t.90 }
%"struct.OT::loca" = type { %"struct.OT::UnsizedArrayOf.287" }
%"struct.OT::glyf" = type { %"struct.OT::UnsizedArrayOf.287" }
%struct.hb_array_t.313 = type { %"struct.OT::contour_point_t"*, i32, i32 }
%"struct.OT::glyf::CompositeGlyphChain" = type { %"struct.OT::IntType", %"struct.OT::HBGlyphID" }
%"struct.OT::GlyphVariationData::tuple_iterator_t" = type { %"struct.OT::GlyphVariationData"*, i32, i32, i32, %struct.hb_array_t.90, %"struct.OT::TupleVariationHeader"* }
%"struct.OT::GlyphVariationData" = type { %"struct.OT::GlyphVariationData::TupleVarCount", %"struct.OT::OffsetTo.321" }
%"struct.OT::GlyphVariationData::TupleVarCount" = type { %"struct.OT::IntType" }
%"struct.OT::OffsetTo.321" = type { %"struct.OT::Offset.322" }
%"struct.OT::Offset.322" = type { %"struct.OT::IntType" }
%"struct.OT::TupleVariationHeader" = type { %"struct.OT::IntType", %"struct.OT::TupleVariationHeader::TuppleIndex" }
%"struct.OT::TupleVariationHeader::TuppleIndex" = type { %"struct.OT::IntType" }
%struct.hb_vector_t.336 = type { i32, i32, i32* }
%"struct.OT::CBLC" = type { %"struct.OT::FixedVersion", %"struct.OT::ArrayOf.363" }
%"struct.OT::ArrayOf.363" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::BitmapSizeTable"] }
%"struct.OT::BitmapSizeTable" = type { %"struct.OT::OffsetTo.364", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::SBitLineMetrics", %"struct.OT::SBitLineMetrics", %"struct.OT::HBGlyphID", %"struct.OT::HBGlyphID", %"struct.OT::IntType.6", %"struct.OT::IntType.6", %"struct.OT::IntType.6", %"struct.OT::IntType.288" }
%"struct.OT::OffsetTo.364" = type { %"struct.OT::Offset.304" }
%"struct.OT::SBitLineMetrics" = type { %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.6", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288", %"struct.OT::IntType.288" }
%"struct.OT::IndexSubtableArray" = type { %"struct.OT::UnsizedArrayOf.365" }
%"struct.OT::UnsizedArrayOf.365" = type { [1 x %"struct.OT::IndexSubtableRecord"] }
%"struct.OT::IndexSubtableRecord" = type { %"struct.OT::HBGlyphID", %"struct.OT::HBGlyphID", %"struct.OT::OffsetTo.366" }
%"struct.OT::OffsetTo.366" = type { %"struct.OT::Offset" }
%"struct.OT::IndexSubtable" = type { %union.anon.367 }
%union.anon.367 = type { %"struct.OT::IndexSubtableFormat1" }
%"struct.OT::IndexSubtableFormat1" = type { %"struct.OT::IndexSubtableFormat1Or3" }
%"struct.OT::IndexSubtableFormat1Or3" = type { %"struct.OT::IndexSubtableHeader", %"struct.OT::UnsizedArrayOf.368" }
%"struct.OT::IndexSubtableHeader" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType.9" }
%"struct.OT::UnsizedArrayOf.368" = type { [1 x %"struct.OT::Offset"] }
%"struct.OT::IndexSubtableFormat1Or3.369" = type { %"struct.OT::IndexSubtableHeader", %"struct.OT::UnsizedArrayOf.370" }
%"struct.OT::UnsizedArrayOf.370" = type { [1 x %"struct.OT::Offset.322"] }
%"struct.OT::CBDT" = type { %"struct.OT::FixedVersion", %"struct.OT::UnsizedArrayOf.287" }
%"struct.OT::sbix" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::ArrayOf.337" }
%"struct.OT::ArrayOf.337" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::OffsetTo.338"] }
%"struct.OT::OffsetTo.338" = type { %"struct.OT::Offset" }
%"struct.OT::SBIXStrike" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::UnsizedArrayOf.339" }
%"struct.OT::UnsizedArrayOf.339" = type { [1 x %"struct.OT::OffsetTo.340"] }
%"struct.OT::OffsetTo.340" = type { %"struct.OT::Offset" }
%"struct.OT::sbix::accelerator_t::PNGHeader" = type { [8 x %"struct.OT::IntType.6"], %struct.anon.341 }
%struct.anon.341 = type { %struct.anon.342, %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.6", %"struct.OT::IntType.6", %"struct.OT::IntType.6", %"struct.OT::IntType.6", %"struct.OT::IntType.6" }
%struct.anon.342 = type { %"struct.OT::IntType.9", %"struct.OT::Tag" }
%"struct.OT::Tag" = type { %"struct.OT::IntType.9" }
%"struct.OT::SBIXGlyph" = type { %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::Tag", %"struct.OT::UnsizedArrayOf.287" }
%"struct.CFF::dict_interpreter_t" = type { %"struct.CFF::interpreter_t" }
%"struct.CFF::interpreter_t" = type { %"struct.CFF::cff1_top_dict_interp_env_t" }
%"struct.CFF::cff1_top_dict_interp_env_t" = type { %"struct.CFF::interp_env_t.base", i32, i32, [4 x i8] }
%"struct.CFF::interp_env_t.base" = type <{ %"struct.CFF::byte_str_ref_t", %"struct.CFF::arg_stack_t", i8 }>
%"struct.CFF::byte_str_ref_t" = type <{ %"struct.CFF::byte_str_t", i32, i8, [3 x i8] }>
%"struct.CFF::arg_stack_t" = type { %"struct.CFF::cff_stack_t" }
%"struct.CFF::cff_stack_t" = type { i8, i32, %struct.hb_vector_t.346 }
%struct.hb_vector_t.346 = type { i32, i32, %"struct.CFF::number_t"* }
%"struct.CFF::dict_interpreter_t.347" = type { %"struct.CFF::interpreter_t.348" }
%"struct.CFF::interpreter_t.348" = type { %"struct.CFF::interp_env_t" }
%"struct.CFF::interp_env_t" = type <{ %"struct.CFF::byte_str_ref_t", %"struct.CFF::arg_stack_t", i8, [7 x i8] }>
%"struct.CFF::dict_interpreter_t.349" = type { %"struct.CFF::interpreter_t.348" }
%"struct.OT::cff1" = type { %"struct.OT::FixedVersion.343", %"struct.OT::OffsetTo.344", %"struct.OT::IntType.6" }
%"struct.OT::FixedVersion.343" = type { %"struct.OT::IntType.6", %"struct.OT::IntType.6" }
%"struct.OT::OffsetTo.344" = type { %"struct.OT::Offset.345" }
%"struct.OT::Offset.345" = type { %"struct.OT::IntType.6" }
%"struct.CFF::FDSelect0" = type { [1 x %"struct.OT::IntType.6"] }
%"struct.CFF::Charset0" = type { [1 x %"struct.OT::IntType"] }
%"struct.CFF::Charset1_2" = type { [1 x %"struct.CFF::Charset_Range"] }
%"struct.CFF::Charset_Range" = type { %"struct.OT::IntType", %"struct.OT::IntType.6" }
%"struct.OT::ArrayOf.72" = type { %"struct.OT::IntType.6", [1 x %"struct.OT::IntType.6"] }
%"struct.CFF::CFF1SuppEncData" = type { %"struct.OT::ArrayOf.350" }
%"struct.OT::ArrayOf.350" = type { %"struct.OT::IntType.6", [1 x %"struct.CFF::SuppEncoding"] }
%"struct.CFF::SuppEncoding" = type { %"struct.OT::IntType.6", %"struct.OT::IntType" }
%"struct.CFF::dict_interpreter_t.359" = type { %"struct.CFF::interpreter_t.348" }
%"struct.CFF::dict_interpreter_t.360" = type { %"struct.CFF::interpreter_t.348" }
%"struct.CFF::dict_interpreter_t.361" = type { %"struct.CFF::interpreter_t.362" }
%"struct.CFF::interpreter_t.362" = type { %"struct.CFF::cff2_priv_dict_interp_env_t" }
%"struct.CFF::cff2_priv_dict_interp_env_t" = type <{ %"struct.CFF::interp_env_t.base", [3 x i8], i32, i8, [7 x i8] }>
%"struct.OT::cff2" = type { %"struct.OT::FixedVersion.343", %"struct.OT::OffsetTo.358", %"struct.OT::IntType" }
%"struct.OT::OffsetTo.358" = type { %"struct.OT::Offset.345" }
%"struct.CFF::UnsizedByteStr" = type { %"struct.OT::UnsizedArrayOf.287" }
%"struct.OT::post" = type { %"struct.OT::FixedVersion", %"struct.OT::HBFixed", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::postV2Tail" }
%"struct.OT::HBFixed" = type { %"struct.OT::IntType.372" }
%"struct.OT::IntType.372" = type { %struct.BEInt.373 }
%struct.BEInt.373 = type { [4 x i8] }
%"struct.OT::postV2Tail" = type { %"struct.OT::ArrayOf.38" }
%"struct.OT::head" = type { %"struct.OT::FixedVersion", %"struct.OT::FixedVersion", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::LONGDATETIME", %"struct.OT::LONGDATETIME", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType.281", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType.281", %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::LONGDATETIME" = type { %"struct.OT::IntType.372", %"struct.OT::IntType.9" }

$_ZNK2OT4glyf13accelerator_t20get_side_bearing_varEP9hb_font_tjb = comdat any

$_ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb = comdat any

$_ZN30hb_ot_font_funcs_lazy_loader_t6createEv = comdat any

$_ZN2OT4cmap13accelerator_t4initEP9hb_face_t = comdat any

$_ZNK2OT4cmap18find_best_subtableEPb = comdat any

$_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj = comdat any

$_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj = comdat any

$_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj = comdat any

$_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT12CmapSubtable9get_glyphEjPj = comdat any

$_ZNK2OT19CmapSubtableFormat49get_glyphEjPj = comdat any

$_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj = comdat any

$_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj = comdat any

$_ZNK2OT23VariationSelectorRecord9get_glyphEjPjPKv = comdat any

$_ZNK2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t11get_advanceEjP9hb_font_t = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18hmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj4EE9hb_face_tLj4ES1_E10get_storedEv = comdat any

$_ZN2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t4initEP9hb_face_tj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4hheaE22hb_table_lazy_loader_tIS1_Lj3EE9hb_face_tLj3E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4hheaEEEP9hb_blob_tS4_ = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT8HVARVVAREEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT8OffsetToINS_14VariationStoreENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_13VarRegionListENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT7ArrayOfINS_8OffsetToINS_7VarDataENS_7IntTypeIjLj4EEELb1EEENS3_ItLj2EEEE8sanitizeIJPKNS_14VariationStoreEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT7VarData8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT8HVARVVAR15get_advance_varEjP9hb_font_t = comdat any

$_ZNK2OT7VarData9get_deltaEjPKijRKNS_13VarRegionListE = comdat any

$_ZNK2OT13VarRegionList8evaluateEjPKij = comdat any

$_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t11get_advanceEjP9hb_font_t = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18vmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj11EE9hb_face_tLj11ES1_E10get_storedEv = comdat any

$_ZN2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t4initEP9hb_face_tj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4vheaE22hb_table_lazy_loader_tIS1_Lj10EE9hb_face_tLj10E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4vheaEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4glyf13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t = comdat any

$_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t16get_side_bearingEP9hb_font_tj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4VORGE22hb_table_lazy_loader_tIS1_Lj15EE9hb_face_tLj15E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4VORGEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_ = comdat any

$_ZNK2OT4glyf13accelerator_t13glyph_for_gidEjb = comdat any

$_ZNK2OT4glyf5Glyph10get_pointsEP9hb_font_tRKNS0_13accelerator_tERNS_22contour_point_vector_tEbj = comdat any

$_ZNK2OT4glyf5Glyph11SimpleGlyph18get_contour_pointsERNS_22contour_point_vector_tEb = comdat any

$_ZNK2OT4gvar13accelerator_t22apply_deltas_to_pointsEjP9hb_font_t10hb_array_tINS_15contour_point_tEE = comdat any

$_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE = comdat any

$_ZNK2OT4glyf19CompositeGlyphChain16transform_pointsERNS_22contour_point_vector_tE = comdat any

$_ZN2OT18GlyphVariationData18get_tuple_iteratorE10hb_array_tIKcEjR11hb_vector_tIjEPNS0_16tuple_iterator_tE = comdat any

$_ZNK2OT20TupleVariationHeader16calculate_scalarEPKij10hb_array_tIKNS_7F2DOT14EE = comdat any

$_ZN2OT18GlyphVariationData13unpack_pointsERPKNS_7IntTypeIhLj1EEER11hb_vector_tIjERK10hb_array_tIKcE = comdat any

$_ZN2OT18GlyphVariationData13unpack_deltasERPKNS_7IntTypeIhLj1EEER11hb_vector_tIiERK10hb_array_tIKcE = comdat any

$_ZN2OT4glyf13accelerator_t19points_aggregator_t16contour_bounds_t11get_extentsEP9hb_font_tP18hb_glyph_extents_t = comdat any

$_ZNK2OT4glyf5Glyph11SimpleGlyph12trim_paddingEv = comdat any

$_ZNK2OT4glyf5Glyph11GlyphHeader11get_extentsEP9hb_font_tRKNS0_13accelerator_tEjP18hb_glyph_extents_t = comdat any

$_ZNK2OT8HVARVVAR20get_side_bearing_varEjPKij = comdat any

$_ZNK2OT4CBDT13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4sbixEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfINS_8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_4sbixEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT4sbix13accelerator_t15get_png_extentsEP9hb_font_tjP18hb_glyph_extents_t = comdat any

$_ZNK2OT4sbix13accelerator_t13choose_strikeEP9hb_font_t = comdat any

$_ZNK2OT10SBIXStrike14get_glyph_blobEjP9hb_blob_tjPiS3_jPj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18cff1_accelerator_tE21hb_face_lazy_loader_tIS1_Lj13EE9hb_face_tLj13ES1_E10get_storedEv = comdat any

$_ZN2OT4cff113accelerator_t4initEP9hb_face_t = comdat any

$_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t = comdat any

$_ZNK2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE12glyph_to_sidEj = comdat any

$_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEEixEj = comdat any

$_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv = comdat any

$_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZN3CFF18dict_interpreter_tINS_21cff1_top_dict_opset_tENS_22cff1_top_dict_values_tENS_26cff1_top_dict_interp_env_tEE9interpretERS2_ = comdat any

$_ZNK3CFF7Charset8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK3CFF8Encoding8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZN3CFF18dict_interpreter_tINS_22cff1_font_dict_opset_tENS_23cff1_font_dict_values_tENS_12interp_env_tINS_8number_tEEEE9interpretERS2_ = comdat any

$_ZN3CFF18dict_interpreter_tINS_25cff1_private_dict_opset_tENS_31cff1_private_dict_values_base_tINS_10dict_val_tEEENS_12interp_env_tINS_8number_tEEEE9interpretERS4_ = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff1EEEP9hb_blob_tS4_ = comdat any

$_ZN3CFF21cff1_top_dict_opset_t10process_opEjRNS_26cff1_top_dict_interp_env_tERNS_22cff1_top_dict_values_tE = comdat any

$_ZN3CFF15parsed_values_tINS_19cff1_top_dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_ = comdat any

$_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE = comdat any

$_ZN3CFF12dict_opset_t9parse_bcdERNS_14byte_str_ref_tE = comdat any

$_ZN3CFF7opset_tINS_8number_tEE10process_opEjRNS_12interp_env_tIS1_EE = comdat any

$_ZNK3CFF11FDSelect3_4IN2OT7IntTypeItLj2EEENS2_IhLj1EEEE8sanitizeEP21hb_sanitize_context_tj = comdat any

$_ZN3CFF22cff1_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff1_font_dict_values_tE = comdat any

$_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE = comdat any

$_ZN3CFF25cff1_private_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_31cff1_private_dict_values_base_tINS_10dict_val_tEEE = comdat any

$_ZN3CFF15parsed_values_tINS_10dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_ = comdat any

$_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t = comdat any

$_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv = comdat any

$_ZNK3CFF18CFF2VariationStore8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZN3CFF18dict_interpreter_tINS_25cff2_private_dict_opset_tENS_31cff2_private_dict_values_base_tINS_10dict_val_tEEENS_27cff2_priv_dict_interp_env_tEE9interpretERS4_ = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff2EEEP9hb_blob_tS4_ = comdat any

$_ZN3CFF21cff2_top_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_22cff2_top_dict_values_tE = comdat any

$_ZNK3CFF11FDSelect3_4IN2OT7IntTypeIjLj4EEENS2_ItLj2EEEE8sanitizeEP21hb_sanitize_context_tj = comdat any

$_ZNK2OT7ArrayOfIN3CFF17FDSelect3_4_RangeINS_7IntTypeIjLj4EEENS3_ItLj2EEEEES4_E8sanitizeIJDnRjEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj = comdat any

$_ZN3CFF22cff2_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff2_font_dict_values_tE = comdat any

$_ZN3CFF25cff2_private_dict_opset_t10process_opEjRNS_27cff2_priv_dict_interp_env_tERNS_31cff2_private_dict_values_base_tINS_10dict_val_tEEE = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18CBDT_accelerator_tE21hb_face_lazy_loader_tIS1_Lj34EE9hb_face_tLj34ES1_E10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBLCEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfINS_15BitmapSizeTableENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4CBLCEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_18IndexSubtableArrayENS_7IntTypeIjLj4EEELb0EE8sanitizeIJRKS3_EEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT19IndexSubtableRecord8sanitizeEP21hb_sanitize_context_tPKv = comdat any

$_ZNK2OT13IndexSubtable8sanitizeEP21hb_sanitize_context_tj = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBDTEEEP9hb_blob_tS4_ = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18post_accelerator_tE21hb_face_lazy_loader_tIS1_Lj6EE9hb_face_tLj6ES1_E10get_storedEv = comdat any

$_ZN2OT4post13accelerator_t4initEP9hb_face_t = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4postEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4post8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT4post13accelerator_t19get_glyph_from_nameEPKciPj = comdat any

$_ZNK2OT4cff113accelerator_t19get_glyph_from_nameEPKciPj = comdat any

$_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv = comdat any

$_ZNK3CFF7Charset9get_glyphEjj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv = comdat any

$_ZN2OT4glyf13accelerator_t4initEP9hb_face_t = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_ = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18gvar_accelerator_tE21hb_face_lazy_loader_tIS1_Lj18EE9hb_face_tLj18ES1_E3getEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4gvarEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4gvar16sanitize_shallowEP21hb_sanitize_context_t = comdat any

@_ZL15static_ot_funcs = internal global { %struct.hb_atomic_ptr_t.209 } zeroinitializer, align 8
@_hb_NullPool = external hidden constant [48 x i64], align 16
@_hb_Null_OT_CmapSubtableLongGroup = external hidden local_unnamed_addr constant [12 x i8], align 1
@_hb_CrapPool = external hidden global [48 x i64], align 16
@.str.17 = private unnamed_addr constant [17 x i8] c"0123456789.EE?-?\00", align 1
@_ZL23cff1_std_strings_msgstr = internal constant %union.cff1_std_strings_msgstr_t { %struct.anon.351 { [8 x i8] c".notdef\00", [6 x i8] c"space\00", [7 x i8] c"exclam\00", [9 x i8] c"quotedbl\00", [11 x i8] c"numbersign\00", [7 x i8] c"dollar\00", [8 x i8] c"percent\00", [10 x i8] c"ampersand\00", [11 x i8] c"quoteright\00", [10 x i8] c"parenleft\00", [11 x i8] c"parenright\00", [9 x i8] c"asterisk\00", [5 x i8] c"plus\00", [6 x i8] c"comma\00", [7 x i8] c"hyphen\00", [7 x i8] c"period\00", [6 x i8] c"slash\00", [5 x i8] c"zero\00", [4 x i8] c"one\00", [4 x i8] c"two\00", [6 x i8] c"three\00", [5 x i8] c"four\00", [5 x i8] c"five\00", [4 x i8] c"six\00", [6 x i8] c"seven\00", [6 x i8] c"eight\00", [5 x i8] c"nine\00", [6 x i8] c"colon\00", [10 x i8] c"semicolon\00", [5 x i8] c"less\00", [6 x i8] c"equal\00", [8 x i8] c"greater\00", [9 x i8] c"question\00", [3 x i8] c"at\00", [2 x i8] c"A\00", [2 x i8] c"B\00", [2 x i8] c"C\00", [2 x i8] c"D\00", [2 x i8] c"E\00", [2 x i8] c"F\00", [2 x i8] c"G\00", [2 x i8] c"H\00", [2 x i8] c"I\00", [2 x i8] c"J\00", [2 x i8] c"K\00", [2 x i8] c"L\00", [2 x i8] c"M\00", [2 x i8] c"N\00", [2 x i8] c"O\00", [2 x i8] c"P\00", [2 x i8] c"Q\00", [2 x i8] c"R\00", [2 x i8] c"S\00", [2 x i8] c"T\00", [2 x i8] c"U\00", [2 x i8] c"V\00", [2 x i8] c"W\00", [2 x i8] c"X\00", [2 x i8] c"Y\00", [2 x i8] c"Z\00", [12 x i8] c"bracketleft\00", [10 x i8] c"backslash\00", [13 x i8] c"bracketright\00", [12 x i8] c"asciicircum\00", [11 x i8] c"underscore\00", [10 x i8] c"quoteleft\00", [2 x i8] c"a\00", [2 x i8] c"b\00", [2 x i8] c"c\00", [2 x i8] c"d\00", [2 x i8] c"e\00", [2 x i8] c"f\00", [2 x i8] c"g\00", [2 x i8] c"h\00", [2 x i8] c"i\00", [2 x i8] c"j\00", [2 x i8] c"k\00", [2 x i8] c"l\00", [2 x i8] c"m\00", [2 x i8] c"n\00", [2 x i8] c"o\00", [2 x i8] c"p\00", [2 x i8] c"q\00", [2 x i8] c"r\00", [2 x i8] c"s\00", [2 x i8] c"t\00", [2 x i8] c"u\00", [2 x i8] c"v\00", [2 x i8] c"w\00", [2 x i8] c"x\00", [2 x i8] c"y\00", [2 x i8] c"z\00", [10 x i8] c"braceleft\00", [4 x i8] c"bar\00", [11 x i8] c"braceright\00", [11 x i8] c"asciitilde\00", [11 x i8] c"exclamdown\00", [5 x i8] c"cent\00", [9 x i8] c"sterling\00", [9 x i8] c"fraction\00", [4 x i8] c"yen\00", [7 x i8] c"florin\00", [8 x i8] c"section\00", [9 x i8] c"currency\00", [12 x i8] c"quotesingle\00", [13 x i8] c"quotedblleft\00", [14 x i8] c"guillemotleft\00", [14 x i8] c"guilsinglleft\00", [15 x i8] c"guilsinglright\00", [3 x i8] c"fi\00", [3 x i8] c"fl\00", [7 x i8] c"endash\00", [7 x i8] c"dagger\00", [10 x i8] c"daggerdbl\00", [15 x i8] c"periodcentered\00", [10 x i8] c"paragraph\00", [7 x i8] c"bullet\00", [15 x i8] c"quotesinglbase\00", [13 x i8] c"quotedblbase\00", [14 x i8] c"quotedblright\00", [15 x i8] c"guillemotright\00", [9 x i8] c"ellipsis\00", [12 x i8] c"perthousand\00", [13 x i8] c"questiondown\00", [6 x i8] c"grave\00", [6 x i8] c"acute\00", [11 x i8] c"circumflex\00", [6 x i8] c"tilde\00", [7 x i8] c"macron\00", [6 x i8] c"breve\00", [10 x i8] c"dotaccent\00", [9 x i8] c"dieresis\00", [5 x i8] c"ring\00", [8 x i8] c"cedilla\00", [13 x i8] c"hungarumlaut\00", [7 x i8] c"ogonek\00", [6 x i8] c"caron\00", [7 x i8] c"emdash\00", [3 x i8] c"AE\00", [12 x i8] c"ordfeminine\00", [7 x i8] c"Lslash\00", [7 x i8] c"Oslash\00", [3 x i8] c"OE\00", [13 x i8] c"ordmasculine\00", [3 x i8] c"ae\00", [9 x i8] c"dotlessi\00", [7 x i8] c"lslash\00", [7 x i8] c"oslash\00", [3 x i8] c"oe\00", [11 x i8] c"germandbls\00", [12 x i8] c"onesuperior\00", [11 x i8] c"logicalnot\00", [3 x i8] c"mu\00", [10 x i8] c"trademark\00", [4 x i8] c"Eth\00", [8 x i8] c"onehalf\00", [10 x i8] c"plusminus\00", [6 x i8] c"Thorn\00", [11 x i8] c"onequarter\00", [7 x i8] c"divide\00", [10 x i8] c"brokenbar\00", [7 x i8] c"degree\00", [6 x i8] c"thorn\00", [14 x i8] c"threequarters\00", [12 x i8] c"twosuperior\00", [11 x i8] c"registered\00", [6 x i8] c"minus\00", [4 x i8] c"eth\00", [9 x i8] c"multiply\00", [14 x i8] c"threesuperior\00", [10 x i8] c"copyright\00", [7 x i8] c"Aacute\00", [12 x i8] c"Acircumflex\00", [10 x i8] c"Adieresis\00", [7 x i8] c"Agrave\00", [6 x i8] c"Aring\00", [7 x i8] c"Atilde\00", [9 x i8] c"Ccedilla\00", [7 x i8] c"Eacute\00", [12 x i8] c"Ecircumflex\00", [10 x i8] c"Edieresis\00", [7 x i8] c"Egrave\00", [7 x i8] c"Iacute\00", [12 x i8] c"Icircumflex\00", [10 x i8] c"Idieresis\00", [7 x i8] c"Igrave\00", [7 x i8] c"Ntilde\00", [7 x i8] c"Oacute\00", [12 x i8] c"Ocircumflex\00", [10 x i8] c"Odieresis\00", [7 x i8] c"Ograve\00", [7 x i8] c"Otilde\00", [7 x i8] c"Scaron\00", [7 x i8] c"Uacute\00", [12 x i8] c"Ucircumflex\00", [10 x i8] c"Udieresis\00", [7 x i8] c"Ugrave\00", [7 x i8] c"Yacute\00", [10 x i8] c"Ydieresis\00", [7 x i8] c"Zcaron\00", [7 x i8] c"aacute\00", [12 x i8] c"acircumflex\00", [10 x i8] c"adieresis\00", [7 x i8] c"agrave\00", [6 x i8] c"aring\00", [7 x i8] c"atilde\00", [9 x i8] c"ccedilla\00", [7 x i8] c"eacute\00", [12 x i8] c"ecircumflex\00", [10 x i8] c"edieresis\00", [7 x i8] c"egrave\00", [7 x i8] c"iacute\00", [12 x i8] c"icircumflex\00", [10 x i8] c"idieresis\00", [7 x i8] c"igrave\00", [7 x i8] c"ntilde\00", [7 x i8] c"oacute\00", [12 x i8] c"ocircumflex\00", [10 x i8] c"odieresis\00", [7 x i8] c"ograve\00", [7 x i8] c"otilde\00", [7 x i8] c"scaron\00", [7 x i8] c"uacute\00", [12 x i8] c"ucircumflex\00", [10 x i8] c"udieresis\00", [7 x i8] c"ugrave\00", [7 x i8] c"yacute\00", [10 x i8] c"ydieresis\00", [7 x i8] c"zcaron\00", [12 x i8] c"exclamsmall\00", [18 x i8] c"Hungarumlautsmall\00", [15 x i8] c"dollaroldstyle\00", [15 x i8] c"dollarsuperior\00", [15 x i8] c"ampersandsmall\00", [11 x i8] c"Acutesmall\00", [18 x i8] c"parenleftsuperior\00", [19 x i8] c"parenrightsuperior\00", [15 x i8] c"twodotenleader\00", [15 x i8] c"onedotenleader\00", [13 x i8] c"zerooldstyle\00", [12 x i8] c"oneoldstyle\00", [12 x i8] c"twooldstyle\00", [14 x i8] c"threeoldstyle\00", [13 x i8] c"fouroldstyle\00", [13 x i8] c"fiveoldstyle\00", [12 x i8] c"sixoldstyle\00", [14 x i8] c"sevenoldstyle\00", [14 x i8] c"eightoldstyle\00", [13 x i8] c"nineoldstyle\00", [14 x i8] c"commasuperior\00", [20 x i8] c"threequartersemdash\00", [15 x i8] c"periodsuperior\00", [14 x i8] c"questionsmall\00", [10 x i8] c"asuperior\00", [10 x i8] c"bsuperior\00", [13 x i8] c"centsuperior\00", [10 x i8] c"dsuperior\00", [10 x i8] c"esuperior\00", [10 x i8] c"isuperior\00", [10 x i8] c"lsuperior\00", [10 x i8] c"msuperior\00", [10 x i8] c"nsuperior\00", [10 x i8] c"osuperior\00", [10 x i8] c"rsuperior\00", [10 x i8] c"ssuperior\00", [10 x i8] c"tsuperior\00", [3 x i8] c"ff\00", [4 x i8] c"ffi\00", [4 x i8] c"ffl\00", [18 x i8] c"parenleftinferior\00", [19 x i8] c"parenrightinferior\00", [16 x i8] c"Circumflexsmall\00", [15 x i8] c"hyphensuperior\00", [11 x i8] c"Gravesmall\00", [7 x i8] c"Asmall\00", [7 x i8] c"Bsmall\00", [7 x i8] c"Csmall\00", [7 x i8] c"Dsmall\00", [7 x i8] c"Esmall\00", [7 x i8] c"Fsmall\00", [7 x i8] c"Gsmall\00", [7 x i8] c"Hsmall\00", [7 x i8] c"Ismall\00", [7 x i8] c"Jsmall\00", [7 x i8] c"Ksmall\00", [7 x i8] c"Lsmall\00", [7 x i8] c"Msmall\00", [7 x i8] c"Nsmall\00", [7 x i8] c"Osmall\00", [7 x i8] c"Psmall\00", [7 x i8] c"Qsmall\00", [7 x i8] c"Rsmall\00", [7 x i8] c"Ssmall\00", [7 x i8] c"Tsmall\00", [7 x i8] c"Usmall\00", [7 x i8] c"Vsmall\00", [7 x i8] c"Wsmall\00", [7 x i8] c"Xsmall\00", [7 x i8] c"Ysmall\00", [7 x i8] c"Zsmall\00", [14 x i8] c"colonmonetary\00", [10 x i8] c"onefitted\00", [7 x i8] c"rupiah\00", [11 x i8] c"Tildesmall\00", [16 x i8] c"exclamdownsmall\00", [13 x i8] c"centoldstyle\00", [12 x i8] c"Lslashsmall\00", [12 x i8] c"Scaronsmall\00", [12 x i8] c"Zcaronsmall\00", [14 x i8] c"Dieresissmall\00", [11 x i8] c"Brevesmall\00", [11 x i8] c"Caronsmall\00", [15 x i8] c"Dotaccentsmall\00", [12 x i8] c"Macronsmall\00", [11 x i8] c"figuredash\00", [15 x i8] c"hypheninferior\00", [12 x i8] c"Ogoneksmall\00", [10 x i8] c"Ringsmall\00", [13 x i8] c"Cedillasmall\00", [18 x i8] c"questiondownsmall\00", [10 x i8] c"oneeighth\00", [13 x i8] c"threeeighths\00", [12 x i8] c"fiveeighths\00", [13 x i8] c"seveneighths\00", [9 x i8] c"onethird\00", [10 x i8] c"twothirds\00", [13 x i8] c"zerosuperior\00", [13 x i8] c"foursuperior\00", [13 x i8] c"fivesuperior\00", [12 x i8] c"sixsuperior\00", [14 x i8] c"sevensuperior\00", [14 x i8] c"eightsuperior\00", [13 x i8] c"ninesuperior\00", [13 x i8] c"zeroinferior\00", [12 x i8] c"oneinferior\00", [12 x i8] c"twoinferior\00", [14 x i8] c"threeinferior\00", [13 x i8] c"fourinferior\00", [13 x i8] c"fiveinferior\00", [12 x i8] c"sixinferior\00", [14 x i8] c"seveninferior\00", [14 x i8] c"eightinferior\00", [13 x i8] c"nineinferior\00", [13 x i8] c"centinferior\00", [15 x i8] c"dollarinferior\00", [15 x i8] c"periodinferior\00", [14 x i8] c"commainferior\00", [12 x i8] c"Agravesmall\00", [12 x i8] c"Aacutesmall\00", [17 x i8] c"Acircumflexsmall\00", [12 x i8] c"Atildesmall\00", [15 x i8] c"Adieresissmall\00", [11 x i8] c"Aringsmall\00", [8 x i8] c"AEsmall\00", [14 x i8] c"Ccedillasmall\00", [12 x i8] c"Egravesmall\00", [12 x i8] c"Eacutesmall\00", [17 x i8] c"Ecircumflexsmall\00", [15 x i8] c"Edieresissmall\00", [12 x i8] c"Igravesmall\00", [12 x i8] c"Iacutesmall\00", [17 x i8] c"Icircumflexsmall\00", [15 x i8] c"Idieresissmall\00", [9 x i8] c"Ethsmall\00", [12 x i8] c"Ntildesmall\00", [12 x i8] c"Ogravesmall\00", [12 x i8] c"Oacutesmall\00", [17 x i8] c"Ocircumflexsmall\00", [12 x i8] c"Otildesmall\00", [15 x i8] c"Odieresissmall\00", [8 x i8] c"OEsmall\00", [12 x i8] c"Oslashsmall\00", [12 x i8] c"Ugravesmall\00", [12 x i8] c"Uacutesmall\00", [17 x i8] c"Ucircumflexsmall\00", [15 x i8] c"Udieresissmall\00", [12 x i8] c"Yacutesmall\00", [11 x i8] c"Thornsmall\00", [15 x i8] c"Ydieresissmall\00", [8 x i8] c"001.000\00", [8 x i8] c"001.001\00", [8 x i8] c"001.002\00", [8 x i8] c"001.003\00", [6 x i8] c"Black\00", [5 x i8] c"Bold\00", [5 x i8] c"Book\00", [6 x i8] c"Light\00", [7 x i8] c"Medium\00", [8 x i8] c"Regular\00", [6 x i8] c"Roman\00", [9 x i8] c"Semibold\00" } }, align 1
@_ZL23cff1_std_strings_msgidx = internal unnamed_addr constant [392 x i32] [i32 0, i32 8, i32 14, i32 21, i32 30, i32 41, i32 48, i32 56, i32 66, i32 77, i32 87, i32 98, i32 107, i32 112, i32 118, i32 125, i32 132, i32 138, i32 143, i32 147, i32 151, i32 157, i32 162, i32 167, i32 171, i32 177, i32 183, i32 188, i32 194, i32 204, i32 209, i32 215, i32 223, i32 232, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 249, i32 251, i32 253, i32 255, i32 257, i32 259, i32 261, i32 263, i32 265, i32 267, i32 269, i32 271, i32 273, i32 275, i32 277, i32 279, i32 281, i32 283, i32 285, i32 287, i32 299, i32 309, i32 322, i32 334, i32 345, i32 355, i32 357, i32 359, i32 361, i32 363, i32 365, i32 367, i32 369, i32 371, i32 373, i32 375, i32 377, i32 379, i32 381, i32 383, i32 385, i32 387, i32 389, i32 391, i32 393, i32 395, i32 397, i32 399, i32 401, i32 403, i32 405, i32 407, i32 417, i32 421, i32 432, i32 443, i32 454, i32 459, i32 468, i32 477, i32 481, i32 488, i32 496, i32 505, i32 517, i32 530, i32 544, i32 558, i32 573, i32 576, i32 579, i32 586, i32 593, i32 603, i32 618, i32 628, i32 635, i32 650, i32 663, i32 677, i32 692, i32 701, i32 713, i32 726, i32 732, i32 738, i32 749, i32 755, i32 762, i32 768, i32 778, i32 787, i32 792, i32 800, i32 813, i32 820, i32 826, i32 833, i32 836, i32 848, i32 855, i32 862, i32 865, i32 878, i32 881, i32 890, i32 897, i32 904, i32 907, i32 918, i32 930, i32 941, i32 944, i32 954, i32 958, i32 966, i32 976, i32 982, i32 993, i32 1000, i32 1010, i32 1017, i32 1023, i32 1037, i32 1049, i32 1060, i32 1066, i32 1070, i32 1079, i32 1093, i32 1103, i32 1110, i32 1122, i32 1132, i32 1139, i32 1145, i32 1152, i32 1161, i32 1168, i32 1180, i32 1190, i32 1197, i32 1204, i32 1216, i32 1226, i32 1233, i32 1240, i32 1247, i32 1259, i32 1269, i32 1276, i32 1283, i32 1290, i32 1297, i32 1309, i32 1319, i32 1326, i32 1333, i32 1343, i32 1350, i32 1357, i32 1369, i32 1379, i32 1386, i32 1392, i32 1399, i32 1408, i32 1415, i32 1427, i32 1437, i32 1444, i32 1451, i32 1463, i32 1473, i32 1480, i32 1487, i32 1494, i32 1506, i32 1516, i32 1523, i32 1530, i32 1537, i32 1544, i32 1556, i32 1566, i32 1573, i32 1580, i32 1590, i32 1597, i32 1609, i32 1627, i32 1642, i32 1657, i32 1672, i32 1683, i32 1701, i32 1720, i32 1735, i32 1750, i32 1763, i32 1775, i32 1787, i32 1801, i32 1814, i32 1827, i32 1839, i32 1853, i32 1867, i32 1880, i32 1894, i32 1914, i32 1929, i32 1943, i32 1953, i32 1963, i32 1976, i32 1986, i32 1996, i32 2006, i32 2016, i32 2026, i32 2036, i32 2046, i32 2056, i32 2066, i32 2076, i32 2079, i32 2083, i32 2087, i32 2105, i32 2124, i32 2140, i32 2155, i32 2166, i32 2173, i32 2180, i32 2187, i32 2194, i32 2201, i32 2208, i32 2215, i32 2222, i32 2229, i32 2236, i32 2243, i32 2250, i32 2257, i32 2264, i32 2271, i32 2278, i32 2285, i32 2292, i32 2299, i32 2306, i32 2313, i32 2320, i32 2327, i32 2334, i32 2341, i32 2348, i32 2362, i32 2372, i32 2379, i32 2390, i32 2406, i32 2419, i32 2431, i32 2443, i32 2455, i32 2469, i32 2480, i32 2491, i32 2506, i32 2518, i32 2529, i32 2544, i32 2556, i32 2566, i32 2579, i32 2597, i32 2607, i32 2620, i32 2632, i32 2645, i32 2654, i32 2664, i32 2677, i32 2690, i32 2703, i32 2715, i32 2729, i32 2743, i32 2756, i32 2769, i32 2781, i32 2793, i32 2807, i32 2820, i32 2833, i32 2845, i32 2859, i32 2873, i32 2886, i32 2899, i32 2914, i32 2929, i32 2943, i32 2955, i32 2967, i32 2984, i32 2996, i32 3011, i32 3022, i32 3030, i32 3044, i32 3056, i32 3068, i32 3085, i32 3100, i32 3112, i32 3124, i32 3141, i32 3156, i32 3165, i32 3177, i32 3189, i32 3201, i32 3218, i32 3230, i32 3245, i32 3253, i32 3265, i32 3277, i32 3289, i32 3306, i32 3321, i32 3333, i32 3344, i32 3359, i32 3367, i32 3375, i32 3383, i32 3391, i32 3397, i32 3402, i32 3407, i32 3413, i32 3420, i32 3428, i32 3434, i32 3443], align 16
@_ZL20format1_names_msgstr = internal constant %union.format1_names_msgstr_t { %struct.anon.374 { [8 x i8] c".notdef\00", [6 x i8] c".null\00", [17 x i8] c"nonmarkingreturn\00", [6 x i8] c"space\00", [7 x i8] c"exclam\00", [9 x i8] c"quotedbl\00", [11 x i8] c"numbersign\00", [7 x i8] c"dollar\00", [8 x i8] c"percent\00", [10 x i8] c"ampersand\00", [12 x i8] c"quotesingle\00", [10 x i8] c"parenleft\00", [11 x i8] c"parenright\00", [9 x i8] c"asterisk\00", [5 x i8] c"plus\00", [6 x i8] c"comma\00", [7 x i8] c"hyphen\00", [7 x i8] c"period\00", [6 x i8] c"slash\00", [5 x i8] c"zero\00", [4 x i8] c"one\00", [4 x i8] c"two\00", [6 x i8] c"three\00", [5 x i8] c"four\00", [5 x i8] c"five\00", [4 x i8] c"six\00", [6 x i8] c"seven\00", [6 x i8] c"eight\00", [5 x i8] c"nine\00", [6 x i8] c"colon\00", [10 x i8] c"semicolon\00", [5 x i8] c"less\00", [6 x i8] c"equal\00", [8 x i8] c"greater\00", [9 x i8] c"question\00", [3 x i8] c"at\00", [2 x i8] c"A\00", [2 x i8] c"B\00", [2 x i8] c"C\00", [2 x i8] c"D\00", [2 x i8] c"E\00", [2 x i8] c"F\00", [2 x i8] c"G\00", [2 x i8] c"H\00", [2 x i8] c"I\00", [2 x i8] c"J\00", [2 x i8] c"K\00", [2 x i8] c"L\00", [2 x i8] c"M\00", [2 x i8] c"N\00", [2 x i8] c"O\00", [2 x i8] c"P\00", [2 x i8] c"Q\00", [2 x i8] c"R\00", [2 x i8] c"S\00", [2 x i8] c"T\00", [2 x i8] c"U\00", [2 x i8] c"V\00", [2 x i8] c"W\00", [2 x i8] c"X\00", [2 x i8] c"Y\00", [2 x i8] c"Z\00", [12 x i8] c"bracketleft\00", [10 x i8] c"backslash\00", [13 x i8] c"bracketright\00", [12 x i8] c"asciicircum\00", [11 x i8] c"underscore\00", [6 x i8] c"grave\00", [2 x i8] c"a\00", [2 x i8] c"b\00", [2 x i8] c"c\00", [2 x i8] c"d\00", [2 x i8] c"e\00", [2 x i8] c"f\00", [2 x i8] c"g\00", [2 x i8] c"h\00", [2 x i8] c"i\00", [2 x i8] c"j\00", [2 x i8] c"k\00", [2 x i8] c"l\00", [2 x i8] c"m\00", [2 x i8] c"n\00", [2 x i8] c"o\00", [2 x i8] c"p\00", [2 x i8] c"q\00", [2 x i8] c"r\00", [2 x i8] c"s\00", [2 x i8] c"t\00", [2 x i8] c"u\00", [2 x i8] c"v\00", [2 x i8] c"w\00", [2 x i8] c"x\00", [2 x i8] c"y\00", [2 x i8] c"z\00", [10 x i8] c"braceleft\00", [4 x i8] c"bar\00", [11 x i8] c"braceright\00", [11 x i8] c"asciitilde\00", [10 x i8] c"Adieresis\00", [6 x i8] c"Aring\00", [9 x i8] c"Ccedilla\00", [7 x i8] c"Eacute\00", [7 x i8] c"Ntilde\00", [10 x i8] c"Odieresis\00", [10 x i8] c"Udieresis\00", [7 x i8] c"aacute\00", [7 x i8] c"agrave\00", [12 x i8] c"acircumflex\00", [10 x i8] c"adieresis\00", [7 x i8] c"atilde\00", [6 x i8] c"aring\00", [9 x i8] c"ccedilla\00", [7 x i8] c"eacute\00", [7 x i8] c"egrave\00", [12 x i8] c"ecircumflex\00", [10 x i8] c"edieresis\00", [7 x i8] c"iacute\00", [7 x i8] c"igrave\00", [12 x i8] c"icircumflex\00", [10 x i8] c"idieresis\00", [7 x i8] c"ntilde\00", [7 x i8] c"oacute\00", [7 x i8] c"ograve\00", [12 x i8] c"ocircumflex\00", [10 x i8] c"odieresis\00", [7 x i8] c"otilde\00", [7 x i8] c"uacute\00", [7 x i8] c"ugrave\00", [12 x i8] c"ucircumflex\00", [10 x i8] c"udieresis\00", [7 x i8] c"dagger\00", [7 x i8] c"degree\00", [5 x i8] c"cent\00", [9 x i8] c"sterling\00", [8 x i8] c"section\00", [7 x i8] c"bullet\00", [10 x i8] c"paragraph\00", [11 x i8] c"germandbls\00", [11 x i8] c"registered\00", [10 x i8] c"copyright\00", [10 x i8] c"trademark\00", [6 x i8] c"acute\00", [9 x i8] c"dieresis\00", [9 x i8] c"notequal\00", [3 x i8] c"AE\00", [7 x i8] c"Oslash\00", [9 x i8] c"infinity\00", [10 x i8] c"plusminus\00", [10 x i8] c"lessequal\00", [13 x i8] c"greaterequal\00", [4 x i8] c"yen\00", [3 x i8] c"mu\00", [12 x i8] c"partialdiff\00", [10 x i8] c"summation\00", [8 x i8] c"product\00", [3 x i8] c"pi\00", [9 x i8] c"integral\00", [12 x i8] c"ordfeminine\00", [13 x i8] c"ordmasculine\00", [6 x i8] c"Omega\00", [3 x i8] c"ae\00", [7 x i8] c"oslash\00", [13 x i8] c"questiondown\00", [11 x i8] c"exclamdown\00", [11 x i8] c"logicalnot\00", [8 x i8] c"radical\00", [7 x i8] c"florin\00", [12 x i8] c"approxequal\00", [6 x i8] c"Delta\00", [14 x i8] c"guillemotleft\00", [15 x i8] c"guillemotright\00", [9 x i8] c"ellipsis\00", [17 x i8] c"nonbreakingspace\00", [7 x i8] c"Agrave\00", [7 x i8] c"Atilde\00", [7 x i8] c"Otilde\00", [3 x i8] c"OE\00", [3 x i8] c"oe\00", [7 x i8] c"endash\00", [7 x i8] c"emdash\00", [13 x i8] c"quotedblleft\00", [14 x i8] c"quotedblright\00", [10 x i8] c"quoteleft\00", [11 x i8] c"quoteright\00", [7 x i8] c"divide\00", [8 x i8] c"lozenge\00", [10 x i8] c"ydieresis\00", [10 x i8] c"Ydieresis\00", [9 x i8] c"fraction\00", [9 x i8] c"currency\00", [14 x i8] c"guilsinglleft\00", [15 x i8] c"guilsinglright\00", [3 x i8] c"fi\00", [3 x i8] c"fl\00", [10 x i8] c"daggerdbl\00", [15 x i8] c"periodcentered\00", [15 x i8] c"quotesinglbase\00", [13 x i8] c"quotedblbase\00", [12 x i8] c"perthousand\00", [12 x i8] c"Acircumflex\00", [12 x i8] c"Ecircumflex\00", [7 x i8] c"Aacute\00", [10 x i8] c"Edieresis\00", [7 x i8] c"Egrave\00", [7 x i8] c"Iacute\00", [12 x i8] c"Icircumflex\00", [10 x i8] c"Idieresis\00", [7 x i8] c"Igrave\00", [7 x i8] c"Oacute\00", [12 x i8] c"Ocircumflex\00", [6 x i8] c"apple\00", [7 x i8] c"Ograve\00", [7 x i8] c"Uacute\00", [12 x i8] c"Ucircumflex\00", [7 x i8] c"Ugrave\00", [9 x i8] c"dotlessi\00", [11 x i8] c"circumflex\00", [6 x i8] c"tilde\00", [7 x i8] c"macron\00", [6 x i8] c"breve\00", [10 x i8] c"dotaccent\00", [5 x i8] c"ring\00", [8 x i8] c"cedilla\00", [13 x i8] c"hungarumlaut\00", [7 x i8] c"ogonek\00", [6 x i8] c"caron\00", [7 x i8] c"Lslash\00", [7 x i8] c"lslash\00", [7 x i8] c"Scaron\00", [7 x i8] c"scaron\00", [7 x i8] c"Zcaron\00", [7 x i8] c"zcaron\00", [10 x i8] c"brokenbar\00", [4 x i8] c"Eth\00", [4 x i8] c"eth\00", [7 x i8] c"Yacute\00", [7 x i8] c"yacute\00", [6 x i8] c"Thorn\00", [6 x i8] c"thorn\00", [6 x i8] c"minus\00", [9 x i8] c"multiply\00", [12 x i8] c"onesuperior\00", [12 x i8] c"twosuperior\00", [14 x i8] c"threesuperior\00", [8 x i8] c"onehalf\00", [11 x i8] c"onequarter\00", [14 x i8] c"threequarters\00", [6 x i8] c"franc\00", [7 x i8] c"Gbreve\00", [7 x i8] c"gbreve\00", [11 x i8] c"Idotaccent\00", [9 x i8] c"Scedilla\00", [9 x i8] c"scedilla\00", [7 x i8] c"Cacute\00", [7 x i8] c"cacute\00", [7 x i8] c"Ccaron\00", [7 x i8] c"ccaron\00", [7 x i8] c"dcroat\00" } }, align 1
@_ZL20format1_names_msgidx = internal unnamed_addr constant [259 x i32] [i32 0, i32 8, i32 14, i32 31, i32 37, i32 44, i32 53, i32 64, i32 71, i32 79, i32 89, i32 101, i32 111, i32 122, i32 131, i32 136, i32 142, i32 149, i32 156, i32 162, i32 167, i32 171, i32 175, i32 181, i32 186, i32 191, i32 195, i32 201, i32 207, i32 212, i32 218, i32 228, i32 233, i32 239, i32 247, i32 256, i32 259, i32 261, i32 263, i32 265, i32 267, i32 269, i32 271, i32 273, i32 275, i32 277, i32 279, i32 281, i32 283, i32 285, i32 287, i32 289, i32 291, i32 293, i32 295, i32 297, i32 299, i32 301, i32 303, i32 305, i32 307, i32 309, i32 311, i32 323, i32 333, i32 346, i32 358, i32 369, i32 375, i32 377, i32 379, i32 381, i32 383, i32 385, i32 387, i32 389, i32 391, i32 393, i32 395, i32 397, i32 399, i32 401, i32 403, i32 405, i32 407, i32 409, i32 411, i32 413, i32 415, i32 417, i32 419, i32 421, i32 423, i32 425, i32 427, i32 437, i32 441, i32 452, i32 463, i32 473, i32 479, i32 488, i32 495, i32 502, i32 512, i32 522, i32 529, i32 536, i32 548, i32 558, i32 565, i32 571, i32 580, i32 587, i32 594, i32 606, i32 616, i32 623, i32 630, i32 642, i32 652, i32 659, i32 666, i32 673, i32 685, i32 695, i32 702, i32 709, i32 716, i32 728, i32 738, i32 745, i32 752, i32 757, i32 766, i32 774, i32 781, i32 791, i32 802, i32 813, i32 823, i32 833, i32 839, i32 848, i32 857, i32 860, i32 867, i32 876, i32 886, i32 896, i32 909, i32 913, i32 916, i32 928, i32 938, i32 946, i32 949, i32 958, i32 970, i32 983, i32 989, i32 992, i32 999, i32 1012, i32 1023, i32 1034, i32 1042, i32 1049, i32 1061, i32 1067, i32 1081, i32 1096, i32 1105, i32 1122, i32 1129, i32 1136, i32 1143, i32 1146, i32 1149, i32 1156, i32 1163, i32 1176, i32 1190, i32 1200, i32 1211, i32 1218, i32 1226, i32 1236, i32 1246, i32 1255, i32 1264, i32 1278, i32 1293, i32 1296, i32 1299, i32 1309, i32 1324, i32 1339, i32 1352, i32 1364, i32 1376, i32 1388, i32 1395, i32 1405, i32 1412, i32 1419, i32 1431, i32 1441, i32 1448, i32 1455, i32 1467, i32 1473, i32 1480, i32 1487, i32 1499, i32 1506, i32 1515, i32 1526, i32 1532, i32 1539, i32 1545, i32 1555, i32 1560, i32 1568, i32 1581, i32 1588, i32 1594, i32 1601, i32 1608, i32 1615, i32 1622, i32 1629, i32 1636, i32 1646, i32 1650, i32 1654, i32 1661, i32 1668, i32 1674, i32 1680, i32 1686, i32 1695, i32 1707, i32 1719, i32 1733, i32 1741, i32 1752, i32 1766, i32 1772, i32 1779, i32 1786, i32 1797, i32 1806, i32 1815, i32 1822, i32 1829, i32 1836, i32 1843, i32 1850], align 16
@__const._ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb.phantoms = private unnamed_addr constant [4 x { i8, [3 x i8], float, float, i8, [3 x i8] }] [{ i8, [3 x i8], float, float, i8, [3 x i8] } { i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i8, [3 x i8], float, float, i8, [3 x i8] } { i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i8, [3 x i8], float, float, i8, [3 x i8] } { i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i8, [3 x i8], float, float, i8, [3 x i8] } { i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_font_set_funcs(%struct.hb_font_t*) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* bitcast ({ %struct.hb_atomic_ptr_t.209 }* @_ZL15static_ot_funcs to i64*) acquire, align 8
  %3 = inttoptr i64 %2 to %struct.hb_font_funcs_t*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %26, !prof !2

5:                                                ; preds = %1, %21
  %6 = tail call %struct.hb_font_funcs_t* @_ZN30hb_ot_font_funcs_lazy_loader_t6createEv() #10
  %7 = icmp eq %struct.hb_font_funcs_t* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %5
  %9 = tail call %struct.hb_font_funcs_t* @hb_font_funcs_get_empty() #10
  br label %10

10:                                               ; preds = %8, %5
  %11 = phi %struct.hb_font_funcs_t* [ %9, %8 ], [ %6, %5 ]
  %12 = ptrtoint %struct.hb_font_funcs_t* %11 to i64
  %13 = cmpxchg weak i64* bitcast ({ %struct.hb_atomic_ptr_t.209 }* @_ZL15static_ot_funcs to i64*), i64 0, i64 %12 acq_rel monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %26, label %15, !prof !3

15:                                               ; preds = %10
  %16 = icmp eq %struct.hb_font_funcs_t* %11, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = tail call %struct.hb_font_funcs_t* @hb_font_funcs_get_empty() #10
  %19 = icmp eq %struct.hb_font_funcs_t* %18, %11
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @hb_font_funcs_destroy(%struct.hb_font_funcs_t* nonnull %11) #10
  br label %21

21:                                               ; preds = %20, %17, %15
  %22 = load atomic i64, i64* bitcast ({ %struct.hb_atomic_ptr_t.209 }* @_ZL15static_ot_funcs to i64*) acquire, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %5, label %24, !prof !2

24:                                               ; preds = %21
  %25 = inttoptr i64 %22 to %struct.hb_font_funcs_t*
  br label %26

26:                                               ; preds = %10, %1, %24
  %27 = phi %struct.hb_font_funcs_t* [ %25, %24 ], [ %3, %1 ], [ %11, %10 ]
  %28 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 2
  %29 = load %struct.hb_face_t*, %struct.hb_face_t** %28, align 8
  %30 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %29, i64 0, i32 8
  %31 = bitcast %struct.hb_ot_face_t* %30 to i8*
  tail call void @hb_font_set_funcs(%struct.hb_font_t* %0, %struct.hb_font_funcs_t* %27, i8* %31, void (i8*)* null) #10
  ret void
}

declare void @hb_font_set_funcs(%struct.hb_font_t*, %struct.hb_font_funcs_t*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z26_glyf_get_side_bearing_varP9hb_font_tjb(%struct.hb_font_t*, i32, i1 zeroext) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 2
  %5 = load %struct.hb_face_t*, %struct.hb_face_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %5, i64 0, i32 8, i32 12, i32 0
  %7 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %6) #10
  %8 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZNK2OT4glyf13accelerator_t20get_side_bearing_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"* %8, %struct.hb_font_t* %0, i32 %1, i1 zeroext %2)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4glyf13accelerator_t20get_side_bearing_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"*, %struct.hb_font_t*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %struct.hb_glyph_extents_t, align 4
  %6 = alloca [4 x %"struct.OT::contour_point_t"], align 16
  %7 = alloca %"struct.OT::glyf::accelerator_t::points_aggregator_t", align 8
  %8 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %2
  br i1 %10, label %11, label %127, !prof !3

11:                                               ; preds = %4
  %12 = bitcast %struct.hb_glyph_extents_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %5, i64 0, i32 1
  %14 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %6, i64 0, i64 0, i32 0
  %15 = bitcast %struct.hb_glyph_extents_t* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* align 16 getelementptr inbounds ([4 x { i8, [3 x i8], float, float, i8, [3 x i8] }], [4 x { i8, [3 x i8], float, float, i8, [3 x i8] }]* @__const._ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb.phantoms, i64 0, i64 0, i32 0), i64 64, i1 false)
  %16 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %6, i64 0, i64 0
  %17 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %7, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %7, i64 0, i32 0
  store %struct.hb_font_t* %1, %struct.hb_font_t** %18, align 8
  %19 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %7, i64 0, i32 1
  store %struct.hb_glyph_extents_t* %5, %struct.hb_glyph_extents_t** %19, align 8
  %20 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %7, i64 0, i32 2
  store %"struct.OT::contour_point_t"* %16, %"struct.OT::contour_point_t"** %20, align 8
  %21 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <4 x float>* %21, align 8
  %22 = call zeroext i1 @_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_(%"struct.OT::glyf::accelerator_t"* %0, %struct.hb_font_t* %1, i32 %2, %"struct.OT::glyf::accelerator_t::points_aggregator_t"* nonnull byval(%"struct.OT::glyf::accelerator_t::points_aggregator_t") align 8 %7)
  br i1 %22, label %110, label %23, !prof !3

23:                                               ; preds = %11
  br i1 %3, label %24, label %67

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 2
  %26 = bitcast %"struct.OT::vmtx_accelerator_t"** %25 to %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"**
  %27 = load %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"** %26, align 8
  %28 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, %2
  br i1 %30, label %31, label %45

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %27, i64 0, i32 3, i32 0, i32 0
  %33 = load %struct.hb_blob_t*, %struct.hb_blob_t** %32, align 8
  %34 = icmp eq %struct.hb_blob_t* %33, null
  %35 = select i1 %34, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %33
  %36 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %35, i64 0, i32 1
  %37 = bitcast i8** %36 to %"struct.OT::hmtxvmtx.291"**
  %38 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %37, align 8
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %38, i64 0, i32 0, i32 0, i64 %39, i32 1
  %41 = bitcast %"struct.OT::IntType.281"* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = call i16 @llvm.bswap.i16(i16 %42) #10
  %44 = sext i16 %43 to i32
  br label %125

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %27, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp ugt i32 %47, %2
  br i1 %48, label %49, label %125, !prof !3

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %27, i64 0, i32 3, i32 0, i32 0
  %51 = load %struct.hb_blob_t*, %struct.hb_blob_t** %50, align 8
  %52 = icmp eq %struct.hb_blob_t* %51, null
  %53 = select i1 %52, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %51
  %54 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %53, i64 0, i32 1
  %55 = bitcast i8** %54 to %"struct.OT::hmtxvmtx.291"**
  %56 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %55, align 8
  %57 = zext i32 %29 to i64
  %58 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %56, i64 0, i32 0, i32 0, i64 %57
  %59 = bitcast %"struct.OT::LongMetric"* %58 to %"struct.OT::IntType.281"*
  %60 = sub i32 %2, %29
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %59, i64 %61
  %63 = bitcast %"struct.OT::IntType.281"* %62 to i16*
  %64 = load i16, i16* %63, align 1
  %65 = call i16 @llvm.bswap.i16(i16 %64) #10
  %66 = sext i16 %65 to i32
  br label %125

67:                                               ; preds = %23
  %68 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 1
  %69 = bitcast %"struct.OT::hmtx_accelerator_t"** %68 to %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"**
  %70 = load %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"** %69, align 8
  %71 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp ugt i32 %72, %2
  br i1 %73, label %74, label %88

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %70, i64 0, i32 3, i32 0, i32 0
  %76 = load %struct.hb_blob_t*, %struct.hb_blob_t** %75, align 8
  %77 = icmp eq %struct.hb_blob_t* %76, null
  %78 = select i1 %77, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %76
  %79 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %78, i64 0, i32 1
  %80 = bitcast i8** %79 to %"struct.OT::hmtxvmtx"**
  %81 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %80, align 8
  %82 = zext i32 %2 to i64
  %83 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %81, i64 0, i32 0, i32 0, i64 %82, i32 1
  %84 = bitcast %"struct.OT::IntType.281"* %83 to i16*
  %85 = load i16, i16* %84, align 1
  %86 = call i16 @llvm.bswap.i16(i16 %85) #10
  %87 = sext i16 %86 to i32
  br label %125

88:                                               ; preds = %67
  %89 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %70, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp ugt i32 %90, %2
  br i1 %91, label %92, label %125, !prof !3

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %70, i64 0, i32 3, i32 0, i32 0
  %94 = load %struct.hb_blob_t*, %struct.hb_blob_t** %93, align 8
  %95 = icmp eq %struct.hb_blob_t* %94, null
  %96 = select i1 %95, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %94
  %97 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %96, i64 0, i32 1
  %98 = bitcast i8** %97 to %"struct.OT::hmtxvmtx"**
  %99 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %98, align 8
  %100 = zext i32 %72 to i64
  %101 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %99, i64 0, i32 0, i32 0, i64 %100
  %102 = bitcast %"struct.OT::LongMetric"* %101 to %"struct.OT::IntType.281"*
  %103 = sub i32 %2, %72
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %102, i64 %104
  %106 = bitcast %"struct.OT::IntType.281"* %105 to i16*
  %107 = load i16, i16* %106, align 1
  %108 = call i16 @llvm.bswap.i16(i16 %107) #10
  %109 = sext i16 %108 to i32
  br label %125

110:                                              ; preds = %11
  br i1 %3, label %111, label %118

111:                                              ; preds = %110
  %112 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %6, i64 0, i64 2, i32 2
  %113 = load float, float* %112, align 8
  %114 = call float @llvm.ceil.f32(float %113)
  %115 = load i32, i32* %13, align 4
  %116 = sitofp i32 %115 to float
  %117 = fsub float %114, %116
  br label %122

118:                                              ; preds = %110
  %119 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %6, i64 0, i64 0, i32 1
  %120 = load float, float* %119, align 4
  %121 = call float @llvm.floor.f32(float %120)
  br label %122

122:                                              ; preds = %118, %111
  %123 = phi float [ %117, %111 ], [ %121, %118 ]
  %124 = fptosi float %123 to i32
  br label %125

125:                                              ; preds = %92, %88, %74, %49, %45, %31, %122
  %126 = phi i32 [ %124, %122 ], [ %44, %31 ], [ %66, %49 ], [ 0, %45 ], [ %87, %74 ], [ %109, %92 ], [ 0, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br label %127

127:                                              ; preds = %4, %125
  %128 = phi i32 [ %126, %125 ], [ 0, %4 ]
  ret i32 %128
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z21_glyf_get_advance_varP9hb_font_tjb(%struct.hb_font_t*, i32, i1 zeroext) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 2
  %5 = load %struct.hb_face_t*, %struct.hb_face_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %5, i64 0, i32 8, i32 12, i32 0
  %7 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %6) #10
  %8 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"* %8, %struct.hb_font_t* %0, i32 %1, i1 zeroext %2)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"*, %struct.hb_font_t*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [4 x %"struct.OT::contour_point_t"], align 16
  %6 = alloca %"struct.OT::glyf::accelerator_t::points_aggregator_t", align 8
  %7 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %10, label %128, !prof !3

10:                                               ; preds = %4
  %11 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %11, i8* align 16 getelementptr inbounds ([4 x { i8, [3 x i8], float, float, i8, [3 x i8] }], [4 x { i8, [3 x i8], float, float, i8, [3 x i8] }]* @__const._ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb.phantoms, i64 0, i64 0, i32 0), i64 64, i1 false)
  %12 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 10
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"struct.OT::glyf::accelerator_t"* %0 to %"struct.OT::gvar::accelerator_t"**
  %15 = load %"struct.OT::gvar::accelerator_t"*, %"struct.OT::gvar::accelerator_t"** %14, align 8
  %16 = getelementptr inbounds %"struct.OT::gvar::accelerator_t", %"struct.OT::gvar::accelerator_t"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %struct.hb_blob_t*, %struct.hb_blob_t** %16, align 8
  %18 = icmp eq %struct.hb_blob_t* %17, null
  %19 = select i1 %18, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %17
  %20 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 1
  %21 = bitcast i8** %20 to %"struct.OT::gvar"**
  %22 = load %"struct.OT::gvar"*, %"struct.OT::gvar"** %21, align 8
  %23 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %24, 20
  %26 = select i1 %25, %"struct.OT::gvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar"*), %"struct.OT::gvar"* %22
  %27 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %26, i64 0, i32 1
  %28 = bitcast %"struct.OT::IntType"* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #10
  %31 = zext i16 %30 to i32
  %32 = icmp eq i32 %13, %31
  br i1 %32, label %33, label %41, !prof !3

33:                                               ; preds = %10
  %34 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 0
  %35 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 3, i32 0
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <4 x float>* %36, align 8
  %37 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 0
  store %struct.hb_font_t* %1, %struct.hb_font_t** %37, align 8
  %38 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 1
  store %struct.hb_glyph_extents_t* null, %struct.hb_glyph_extents_t** %38, align 8
  %39 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 2
  store %"struct.OT::contour_point_t"* %34, %"struct.OT::contour_point_t"** %39, align 8
  %40 = call zeroext i1 @_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_(%"struct.OT::glyf::accelerator_t"* %0, %struct.hb_font_t* %1, i32 %2, %"struct.OT::glyf::accelerator_t::points_aggregator_t"* nonnull byval(%"struct.OT::glyf::accelerator_t::points_aggregator_t") align 8 %6)
  br i1 %40, label %104, label %41, !prof !3

41:                                               ; preds = %33, %10
  br i1 %3, label %42, label %73

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 2
  %44 = bitcast %"struct.OT::vmtx_accelerator_t"** %43 to %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"**
  %45 = load %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"** %44, align 8
  %46 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp ugt i32 %47, %2
  br i1 %48, label %54, label %49, !prof !3

49:                                               ; preds = %42
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %51, label %126

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %45, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  br label %126

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %45, i64 0, i32 3, i32 0, i32 0
  %56 = load %struct.hb_blob_t*, %struct.hb_blob_t** %55, align 8
  %57 = icmp eq %struct.hb_blob_t* %56, null
  %58 = select i1 %57, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %56
  %59 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %58, i64 0, i32 1
  %60 = bitcast i8** %59 to %"struct.OT::hmtxvmtx.291"**
  %61 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %60, align 8
  %62 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %45, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, -1
  %65 = icmp ult i32 %64, %2
  %66 = select i1 %65, i32 %64, i32 %2
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %61, i64 0, i32 0, i32 0, i64 %67, i32 0
  %69 = bitcast %"struct.OT::IntType"* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = call i16 @llvm.bswap.i16(i16 %70) #10
  %72 = zext i16 %71 to i32
  br label %126

73:                                               ; preds = %41
  %74 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 1
  %75 = bitcast %"struct.OT::hmtx_accelerator_t"** %74 to %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"**
  %76 = load %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"** %75, align 8
  %77 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp ugt i32 %78, %2
  br i1 %79, label %85, label %80, !prof !3

80:                                               ; preds = %73
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %82, label %126

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %76, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  br label %126

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %76, i64 0, i32 3, i32 0, i32 0
  %87 = load %struct.hb_blob_t*, %struct.hb_blob_t** %86, align 8
  %88 = icmp eq %struct.hb_blob_t* %87, null
  %89 = select i1 %88, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %87
  %90 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %89, i64 0, i32 1
  %91 = bitcast i8** %90 to %"struct.OT::hmtxvmtx"**
  %92 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %91, align 8
  %93 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %76, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, -1
  %96 = icmp ult i32 %95, %2
  %97 = select i1 %96, i32 %95, i32 %2
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %92, i64 0, i32 0, i32 0, i64 %98, i32 0
  %100 = bitcast %"struct.OT::IntType"* %99 to i16*
  %101 = load i16, i16* %100, align 1
  %102 = call i16 @llvm.bswap.i16(i16 %101) #10
  %103 = zext i16 %102 to i32
  br label %126

104:                                              ; preds = %33
  br i1 %3, label %105, label %111

105:                                              ; preds = %104
  %106 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 2, i32 2
  %107 = load float, float* %106, align 8
  %108 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 3, i32 2
  %109 = load float, float* %108, align 8
  %110 = fsub float %107, %109
  br label %117

111:                                              ; preds = %104
  %112 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 1, i32 1
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = fsub float %113, %115
  br label %117

117:                                              ; preds = %111, %105
  %118 = phi float [ %110, %105 ], [ %116, %111 ]
  %119 = fadd float %118, 5.000000e-01
  %120 = call float @llvm.floor.f32(float %119) #10
  %121 = fcmp oge float %120, 0.000000e+00
  %122 = select i1 %121, float %120, float 0.000000e+00
  %123 = fcmp ole float %122, 0x41E0000000000000
  %124 = select i1 %123, float %122, float 0x41E0000000000000
  %125 = fptoui float %124 to i32
  br label %126

126:                                              ; preds = %85, %82, %80, %54, %51, %49, %117
  %127 = phi i32 [ %125, %117 ], [ %53, %51 ], [ %72, %54 ], [ 0, %49 ], [ %84, %82 ], [ %103, %85 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #10
  br label %128

128:                                              ; preds = %4, %126
  %129 = phi i32 [ %127, %126 ], [ 0, %4 ]
  ret i32 %129
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.hb_font_funcs_t* @hb_font_funcs_get_empty() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_font_funcs_t* @_ZN30hb_ot_font_funcs_lazy_loader_t6createEv() local_unnamed_addr #0 comdat align 2 {
  %1 = tail call %struct.hb_font_funcs_t* @hb_font_funcs_create() #10
  tail call void @hb_font_funcs_set_font_h_extents_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)* nonnull @_ZL24hb_ot_get_font_h_extentsP9hb_font_tPvP17hb_font_extents_tS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_font_v_extents_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)* nonnull @_ZL24hb_ot_get_font_v_extentsP9hb_font_tPvP17hb_font_extents_tS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_nominal_glyph_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)* nonnull @_ZL23hb_ot_get_nominal_glyphP9hb_font_tPvjPjS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_nominal_glyphs_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)* nonnull @_ZL24hb_ot_get_nominal_glyphsP9hb_font_tPvjPKjjPjjS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_variation_glyph_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)* nonnull @_ZL25hb_ot_get_variation_glyphP9hb_font_tPvjjPjS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_h_advances_func(%struct.hb_font_funcs_t* %1, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)* nonnull @_ZL26hb_ot_get_glyph_h_advancesP9hb_font_tPvjPKjjPijS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_v_advances_func(%struct.hb_font_funcs_t* %1, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)* nonnull @_ZL26hb_ot_get_glyph_v_advancesP9hb_font_tPvjPKjjPijS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_v_origin_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)* nonnull @_ZL24hb_ot_get_glyph_v_originP9hb_font_tPvjPiS2_S1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_extents_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)* nonnull @_ZL23hb_ot_get_glyph_extentsP9hb_font_tPvjP18hb_glyph_extents_tS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_name_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)* nonnull @_ZL20hb_ot_get_glyph_nameP9hb_font_tPvjPcjS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_set_glyph_from_name_func(%struct.hb_font_funcs_t* %1, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* nonnull @_ZL25hb_ot_get_glyph_from_nameP9hb_font_tPvPKciPjS1_, i8* null, void (i8*)* null) #10
  tail call void @hb_font_funcs_make_immutable(%struct.hb_font_funcs_t* %1) #10
  ret %struct.hb_font_funcs_t* %1
}

declare %struct.hb_font_funcs_t* @hb_font_funcs_create() local_unnamed_addr #1

declare void @hb_font_funcs_set_font_h_extents_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL24hb_ot_get_font_h_extentsP9hb_font_tPvP17hb_font_extents_tS1_(%struct.hb_font_t*, i8* nocapture readnone, %struct.hb_font_extents_t*, i8* nocapture readnone) #0 {
  %5 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 0
  %6 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1751216995, i32* %5) #10
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 1
  %9 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1751413603, i32* %8) #10
  br i1 %9, label %10, label %14

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 2
  %12 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1751934832, i32* %11) #10
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %10, %7, %4
  %15 = phi i32 [ 0, %7 ], [ 0, %4 ], [ %13, %10 ]
  ret i32 %15
}

declare void @hb_font_funcs_set_font_v_extents_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL24hb_ot_get_font_v_extentsP9hb_font_tPvP17hb_font_extents_tS1_(%struct.hb_font_t*, i8* nocapture readnone, %struct.hb_font_extents_t*, i8* nocapture readnone) #0 {
  %5 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 0
  %6 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1986098019, i32* %5) #10
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 1
  %9 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1986294627, i32* %8) #10
  br i1 %9, label %10, label %14

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %2, i64 0, i32 2
  %12 = tail call zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t* %0, i32 1986815856, i32* %11) #10
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %10, %7, %4
  %15 = phi i32 [ 0, %7 ], [ 0, %4 ], [ %13, %10 ]
  ret i32 %15
}

declare void @hb_font_funcs_set_nominal_glyph_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL23hb_ot_get_nominal_glyphP9hb_font_tPvjPjS1_(%struct.hb_font_t* nocapture readnone, i8* nocapture, i32, i32*, i8* nocapture readnone) #0 {
  %6 = getelementptr inbounds i8, i8* %1, i64 16
  %7 = bitcast i8* %1 to %struct.hb_face_t**
  %8 = bitcast i8* %6 to i64*
  %9 = load atomic i64, i64* %8 acquire, align 8
  %10 = inttoptr i64 %9 to %"struct.OT::cmap_accelerator_t"*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %40, !prof !2

12:                                               ; preds = %5, %35
  %13 = load %struct.hb_face_t*, %struct.hb_face_t** %7, align 8
  %14 = icmp eq %struct.hb_face_t* %13, null
  br i1 %14, label %40, label %15, !prof !2

15:                                               ; preds = %12
  %16 = tail call noalias i8* @calloc(i64 1, i64 88) #10
  %17 = bitcast i8* %16 to %"struct.OT::cmap_accelerator_t"*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %21, label %19, !prof !2

19:                                               ; preds = %15
  %20 = bitcast i8* %16 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %20, %struct.hb_face_t* nonnull %13) #10
  br label %21

21:                                               ; preds = %19, %15
  %22 = select i1 %18, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %17, !prof !2
  %23 = ptrtoint %"struct.OT::cmap_accelerator_t"* %22 to i64
  %24 = cmpxchg weak i64* %8, i64 0, i64 %23 acq_rel monotonic
  %25 = extractvalue { i64, i1 } %24, 1
  br i1 %25, label %40, label %26, !prof !3

26:                                               ; preds = %21
  %27 = icmp eq %"struct.OT::cmap_accelerator_t"* %22, null
  %28 = or i1 %18, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %22, i64 0, i32 0, i32 5, i32 0, i32 0
  %31 = load %struct.hb_blob_t*, %struct.hb_blob_t** %30, align 8
  %32 = icmp eq %struct.hb_blob_t* %31, null
  %33 = select i1 %32, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %33) #10
  %34 = bitcast %"struct.OT::cmap_accelerator_t"* %22 to i8*
  tail call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %29, %26
  %36 = load atomic i64, i64* %8 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %12, label %38, !prof !2

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.OT::cmap_accelerator_t"*
  br label %40

40:                                               ; preds = %12, %21, %5, %38
  %41 = phi %"struct.OT::cmap_accelerator_t"* [ %39, %38 ], [ %10, %5 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %12 ], [ %22, %21 ]
  %42 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %41, i64 0, i32 0, i32 2
  %43 = load i1 (i8*, i32, i32*)*, i1 (i8*, i32, i32*)** %42, align 8
  %44 = icmp eq i1 (i8*, i32, i32*)* %43, null
  br i1 %44, label %50, label %45, !prof !2

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %41, i64 0, i32 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 %43(i8* %47, i32 %2, i32* %3) #10
  %49 = zext i1 %48 to i32
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi i32 [ %49, %45 ], [ 0, %40 ]
  ret i32 %51
}

declare void @hb_font_funcs_set_nominal_glyphs_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL24hb_ot_get_nominal_glyphsP9hb_font_tPvjPKjjPjjS1_(%struct.hb_font_t* nocapture readnone, i8* nocapture, i32, i32* nocapture readonly, i32, i32*, i32, i8* nocapture readnone) #0 {
  %9 = getelementptr inbounds i8, i8* %1, i64 16
  %10 = bitcast i8* %1 to %struct.hb_face_t**
  %11 = bitcast i8* %9 to i64*
  %12 = load atomic i64, i64* %11 acquire, align 8
  %13 = inttoptr i64 %12 to %"struct.OT::cmap_accelerator_t"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %43, !prof !2

15:                                               ; preds = %8, %38
  %16 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %17 = icmp eq %struct.hb_face_t* %16, null
  br i1 %17, label %43, label %18, !prof !2

18:                                               ; preds = %15
  %19 = tail call noalias i8* @calloc(i64 1, i64 88) #10
  %20 = bitcast i8* %19 to %"struct.OT::cmap_accelerator_t"*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %24, label %22, !prof !2

22:                                               ; preds = %18
  %23 = bitcast i8* %19 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %23, %struct.hb_face_t* nonnull %16) #10
  br label %24

24:                                               ; preds = %22, %18
  %25 = select i1 %21, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %20, !prof !2
  %26 = ptrtoint %"struct.OT::cmap_accelerator_t"* %25 to i64
  %27 = cmpxchg weak i64* %11, i64 0, i64 %26 acq_rel monotonic
  %28 = extractvalue { i64, i1 } %27, 1
  br i1 %28, label %43, label %29, !prof !3

29:                                               ; preds = %24
  %30 = icmp eq %"struct.OT::cmap_accelerator_t"* %25, null
  %31 = or i1 %21, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %25, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = load %struct.hb_blob_t*, %struct.hb_blob_t** %33, align 8
  %35 = icmp eq %struct.hb_blob_t* %34, null
  %36 = select i1 %35, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %34
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %36) #10
  %37 = bitcast %"struct.OT::cmap_accelerator_t"* %25 to i8*
  tail call void @free(i8* %37) #10
  br label %38

38:                                               ; preds = %32, %29
  %39 = load atomic i64, i64* %11 acquire, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %15, label %41, !prof !2

41:                                               ; preds = %38
  %42 = inttoptr i64 %39 to %"struct.OT::cmap_accelerator_t"*
  br label %43

43:                                               ; preds = %15, %24, %8, %41
  %44 = phi %"struct.OT::cmap_accelerator_t"* [ %42, %41 ], [ %13, %8 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %15 ], [ %25, %24 ]
  %45 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %44, i64 0, i32 0, i32 2
  %46 = load i1 (i8*, i32, i32*)*, i1 (i8*, i32, i32*)** %45, align 8
  %47 = icmp eq i1 (i8*, i32, i32*)* %46, null
  br i1 %47, label %70, label %48, !prof !2

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %44, i64 0, i32 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i32 %2, 0
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = zext i32 %4 to i64
  %54 = zext i32 %6 to i64
  br label %55

55:                                               ; preds = %61, %52
  %56 = phi i32 [ 0, %52 ], [ %68, %61 ]
  %57 = phi i32* [ %5, %52 ], [ %67, %61 ]
  %58 = phi i32* [ %3, %52 ], [ %64, %61 ]
  %59 = load i32, i32* %58, align 4
  %60 = tail call zeroext i1 %46(i8* %50, i32 %59, i32* %57) #10
  br i1 %60, label %61, label %70

61:                                               ; preds = %55
  %62 = bitcast i32* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %53
  %64 = bitcast i8* %63 to i32*
  %65 = bitcast i32* %57 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %54
  %67 = bitcast i8* %66 to i32*
  %68 = add nuw i32 %56, 1
  %69 = icmp eq i32 %68, %2
  br i1 %69, label %70, label %55

70:                                               ; preds = %55, %61, %43, %48
  %71 = phi i32 [ 0, %43 ], [ 0, %48 ], [ %56, %55 ], [ %2, %61 ]
  ret i32 %71
}

declare void @hb_font_funcs_set_variation_glyph_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL25hb_ot_get_variation_glyphP9hb_font_tPvjjPjS1_(%struct.hb_font_t* nocapture readnone, i8* nocapture, i32, i32, i32*, i8* nocapture readnone) #0 {
  %7 = getelementptr inbounds i8, i8* %1, i64 16
  %8 = bitcast i8* %1 to %struct.hb_face_t**
  %9 = bitcast i8* %7 to i64*
  %10 = load atomic i64, i64* %9 acquire, align 8
  %11 = inttoptr i64 %10 to %"struct.OT::cmap_accelerator_t"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %41, !prof !2

13:                                               ; preds = %6, %36
  %14 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %15 = icmp eq %struct.hb_face_t* %14, null
  br i1 %15, label %41, label %16, !prof !2

16:                                               ; preds = %13
  %17 = tail call noalias i8* @calloc(i64 1, i64 88) #10
  %18 = bitcast i8* %17 to %"struct.OT::cmap_accelerator_t"*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %22, label %20, !prof !2

20:                                               ; preds = %16
  %21 = bitcast i8* %17 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %21, %struct.hb_face_t* nonnull %14) #10
  br label %22

22:                                               ; preds = %20, %16
  %23 = select i1 %19, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %18, !prof !2
  %24 = ptrtoint %"struct.OT::cmap_accelerator_t"* %23 to i64
  %25 = cmpxchg weak i64* %9, i64 0, i64 %24 acq_rel monotonic
  %26 = extractvalue { i64, i1 } %25, 1
  br i1 %26, label %41, label %27, !prof !3

27:                                               ; preds = %22
  %28 = icmp eq %"struct.OT::cmap_accelerator_t"* %23, null
  %29 = or i1 %19, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %23, i64 0, i32 0, i32 5, i32 0, i32 0
  %32 = load %struct.hb_blob_t*, %struct.hb_blob_t** %31, align 8
  %33 = icmp eq %struct.hb_blob_t* %32, null
  %34 = select i1 %33, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %32
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %34) #10
  %35 = bitcast %"struct.OT::cmap_accelerator_t"* %23 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %30, %27
  %37 = load atomic i64, i64* %9 acquire, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %13, label %39, !prof !2

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.OT::cmap_accelerator_t"*
  br label %41

41:                                               ; preds = %13, %22, %6, %39
  %42 = phi %"struct.OT::cmap_accelerator_t"* [ %40, %39 ], [ %11, %6 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %13 ], [ %23, %22 ]
  %43 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %42, i64 0, i32 0, i32 1, i32 0
  %44 = load %"struct.OT::CmapSubtableFormat14"*, %"struct.OT::CmapSubtableFormat14"** %43, align 8
  %45 = icmp eq %"struct.OT::CmapSubtableFormat14"* %44, null
  %46 = select i1 %45, %"struct.OT::CmapSubtableFormat14"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtableFormat14"*), %"struct.OT::CmapSubtableFormat14"* %44
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 %49, 24
  %51 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 16
  %55 = or i32 %54, %50
  %56 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  %60 = or i32 %55, %59
  %61 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %60, %63
  %65 = icmp slt i32 %64, 1
  br i1 %65, label %102, label %66

66:                                               ; preds = %41
  %67 = add nsw i32 %64, -1
  br label %68

68:                                               ; preds = %95, %66
  %69 = phi i32 [ %67, %66 ], [ %97, %95 ]
  %70 = phi i32 [ 0, %66 ], [ %96, %95 ]
  %71 = add i32 %70, %69
  %72 = lshr i32 %71, 1
  %73 = zext i32 %72 to i64
  %74 = mul nuw nsw i64 %73, 11
  %75 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 16
  %79 = getelementptr inbounds i8, i8* %75, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 8
  %83 = or i32 %82, %78
  %84 = getelementptr inbounds i8, i8* %75, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = or i32 %83, %86
  %88 = icmp ugt i32 %87, %3
  br i1 %88, label %89, label %91

89:                                               ; preds = %68
  %90 = add nsw i32 %72, -1
  br label %95

91:                                               ; preds = %68
  %92 = icmp eq i32 %87, %3
  br i1 %92, label %99, label %93

93:                                               ; preds = %91
  %94 = add nuw nsw i32 %72, 1
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi i32 [ %70, %89 ], [ %94, %93 ]
  %97 = phi i32 [ %90, %89 ], [ %69, %93 ]
  %98 = icmp sgt i32 %96, %97
  br i1 %98, label %102, label %68

99:                                               ; preds = %91
  %100 = zext i32 %72 to i64
  %101 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 2, i32 0, i32 1, i64 %100
  br label %102

102:                                              ; preds = %95, %99, %41
  %103 = phi %"struct.OT::VariationSelectorRecord"* [ %101, %99 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationSelectorRecord"*), %41 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationSelectorRecord"*), %95 ]
  %104 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %46, i64 0, i32 0, i32 0, i32 0, i64 0
  %105 = tail call i32 @_ZNK2OT23VariationSelectorRecord9get_glyphEjPjPKv(%"struct.OT::VariationSelectorRecord"* %103, i32 %2, i32* %4, i8* %104) #10
  switch i32 %105, label %107 [
    i32 0, label %116
    i32 1, label %106
  ]

106:                                              ; preds = %102
  br label %116

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %42, i64 0, i32 0, i32 2
  %109 = load i1 (i8*, i32, i32*)*, i1 (i8*, i32, i32*)** %108, align 8
  %110 = icmp eq i1 (i8*, i32, i32*)* %109, null
  br i1 %110, label %116, label %111, !prof !2

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %42, i64 0, i32 0, i32 3
  %113 = load i8*, i8** %112, align 8
  %114 = tail call zeroext i1 %109(i8* %113, i32 %2, i32* %4) #10
  %115 = zext i1 %114 to i32
  br label %116

116:                                              ; preds = %102, %106, %107, %111
  %117 = phi i32 [ 1, %106 ], [ %105, %102 ], [ %115, %111 ], [ 0, %107 ]
  ret i32 %117
}

declare void @hb_font_funcs_set_glyph_h_advances_func(%struct.hb_font_funcs_t*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL26hb_ot_get_glyph_h_advancesP9hb_font_tPvjPKjjPijS1_(%struct.hb_font_t*, i8*, i32, i32* nocapture readonly, i32, i32* nocapture, i32, i8* nocapture readnone) #0 {
  %9 = getelementptr inbounds i8, i8* %1, i64 32
  %10 = bitcast i8* %9 to %struct.hb_lazy_loader_t.25*
  %11 = tail call %"struct.OT::hmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18hmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj4EE9hb_face_tLj4ES1_E10get_storedEv(%struct.hb_lazy_loader_t.25* %10) #10
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.OT::hmtx_accelerator_t", %"struct.OT::hmtx_accelerator_t"* %11, i64 0, i32 0
  %15 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 5
  %16 = zext i32 %4 to i64
  %17 = zext i32 %6 to i64
  br label %19

18:                                               ; preds = %19, %8
  ret void

19:                                               ; preds = %19, %13
  %20 = phi i32 [ 0, %13 ], [ %38, %19 ]
  %21 = phi i32* [ %3, %13 ], [ %34, %19 ]
  %22 = phi i32* [ %5, %13 ], [ %37, %19 ]
  %23 = load i32, i32* %21, align 4
  %24 = tail call i32 @_ZNK2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t11get_advanceEjP9hb_font_t(%"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %14, i32 %23, %struct.hb_font_t* %0)
  %25 = zext i32 %24 to i64
  %26 = load i64, i64* %15, align 8
  %27 = shl i64 %25, 48
  %28 = ashr exact i64 %27, 48
  %29 = mul nsw i64 %28, %26
  %30 = lshr i64 %29, 16
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %22, align 4
  %32 = bitcast i32* %21 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %16
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i32* %22 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %17
  %37 = bitcast i8* %36 to i32*
  %38 = add nuw i32 %20, 1
  %39 = icmp eq i32 %38, %2
  br i1 %39, label %18, label %19
}

declare void @hb_font_funcs_set_glyph_v_advances_func(%struct.hb_font_funcs_t*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL26hb_ot_get_glyph_v_advancesP9hb_font_tPvjPKjjPijS1_(%struct.hb_font_t*, i8*, i32, i32* nocapture readonly, i32, i32* nocapture, i32, i8* nocapture readnone) #0 {
  %9 = getelementptr inbounds i8, i8* %1, i64 88
  %10 = bitcast i8* %9 to %struct.hb_lazy_loader_t.56*
  %11 = tail call %"struct.OT::vmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18vmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj11EE9hb_face_tLj11ES1_E10get_storedEv(%struct.hb_lazy_loader_t.56* %10) #10
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.OT::vmtx_accelerator_t", %"struct.OT::vmtx_accelerator_t"* %11, i64 0, i32 0
  %15 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 6
  %16 = zext i32 %4 to i64
  %17 = zext i32 %6 to i64
  br label %19

18:                                               ; preds = %19, %8
  ret void

19:                                               ; preds = %19, %13
  %20 = phi i32 [ 0, %13 ], [ %39, %19 ]
  %21 = phi i32* [ %3, %13 ], [ %35, %19 ]
  %22 = phi i32* [ %5, %13 ], [ %38, %19 ]
  %23 = load i32, i32* %21, align 4
  %24 = tail call i32 @_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t11get_advanceEjP9hb_font_t(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %14, i32 %23, %struct.hb_font_t* %0)
  %25 = zext i32 %24 to i64
  %26 = load i64, i64* %15, align 8
  %27 = shl i64 %25, 48
  %28 = sub i64 0, %27
  %29 = ashr exact i64 %28, 48
  %30 = mul nsw i64 %29, %26
  %31 = lshr i64 %30, 16
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %22, align 4
  %33 = bitcast i32* %21 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %16
  %35 = bitcast i8* %34 to i32*
  %36 = bitcast i32* %22 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %17
  %38 = bitcast i8* %37 to i32*
  %39 = add nuw i32 %20, 1
  %40 = icmp eq i32 %39, %2
  br i1 %40, label %18, label %19
}

declare void @hb_font_funcs_set_glyph_v_origin_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL24hb_ot_get_glyph_v_originP9hb_font_tPvjPiS2_S1_(%struct.hb_font_t*, i8*, i32, i32* nocapture, i32* nocapture, i8* nocapture readnone) #0 {
  %7 = alloca %struct.hb_glyph_extents_t, align 4
  %8 = alloca %struct.hb_font_extents_t, align 4
  %9 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 13
  %10 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %9, align 8
  %11 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %10, i64 0, i32 3, i32 0, i32 5
  %12 = load i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)** %11, align 8
  %13 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 14
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %10, i64 0, i32 1, i32 5
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 %12(%struct.hb_font_t* %0, i8* %14, i32 %2, i8* %16) #10
  %18 = sdiv i32 %17, 2
  store i32 %18, i32* %3, align 4
  %19 = getelementptr inbounds i8, i8* %1, i64 120
  %20 = bitcast i8* %19 to %struct.hb_lazy_loader_t.115*
  %21 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4VORGE22hb_table_lazy_loader_tIS1_Lj15EE9hb_face_tLj15E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.115* %20) #10
  %22 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %21, i64 0, i32 1
  %23 = bitcast i8** %22 to %"struct.OT::VORG"**
  %24 = load %"struct.OT::VORG"*, %"struct.OT::VORG"** %23, align 8
  %25 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %21, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %26, 8
  %28 = select i1 %27, %"struct.OT::VORG"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VORG"*), %"struct.OT::VORG"* %24
  %29 = bitcast %"struct.OT::VORG"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = zext i16 %31 to i32
  %33 = shl nuw i32 %32, 16
  %34 = getelementptr inbounds %"struct.OT::VORG", %"struct.OT::VORG"* %28, i64 0, i32 0, i32 1
  %35 = bitcast %"struct.OT::IntType"* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #10
  %38 = zext i16 %37 to i32
  %39 = or i32 %33, %38
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %92, label %41

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"struct.OT::VORG", %"struct.OT::VORG"* %28, i64 0, i32 2
  %43 = bitcast %"struct.OT::SortedArrayOf.292"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %41
  %47 = tail call i16 @llvm.bswap.i16(i16 %44) #10
  %48 = zext i16 %47 to i32
  %49 = add nsw i32 %48, -1
  br label %50

50:                                               ; preds = %69, %46
  %51 = phi i32 [ %49, %46 ], [ %71, %69 ]
  %52 = phi i32 [ 0, %46 ], [ %70, %69 ]
  %53 = add i32 %52, %51
  %54 = lshr i32 %53, 1
  %55 = zext i32 %54 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = getelementptr inbounds %"struct.OT::VORG", %"struct.OT::VORG"* %28, i64 0, i32 2, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %56
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 1
  %60 = tail call i16 @llvm.bswap.i16(i16 %59) #10
  %61 = zext i16 %60 to i32
  %62 = icmp ugt i32 %61, %2
  br i1 %62, label %63, label %65

63:                                               ; preds = %50
  %64 = add nsw i32 %54, -1
  br label %69

65:                                               ; preds = %50
  %66 = icmp eq i32 %61, %2
  br i1 %66, label %75, label %67

67:                                               ; preds = %65
  %68 = add nuw nsw i32 %54, 1
  br label %69

69:                                               ; preds = %67, %63
  %70 = phi i32 [ %52, %63 ], [ %68, %67 ]
  %71 = phi i32 [ %64, %63 ], [ %51, %67 ]
  %72 = icmp sgt i32 %70, %71
  br i1 %72, label %73, label %50

73:                                               ; preds = %69, %41
  %74 = getelementptr inbounds %"struct.OT::VORG", %"struct.OT::VORG"* %28, i64 0, i32 1
  br label %81

75:                                               ; preds = %65
  %76 = zext i32 %54 to i64
  %77 = icmp ult i32 %54, %48
  %78 = getelementptr inbounds %"struct.OT::VORG", %"struct.OT::VORG"* %28, i64 0, i32 2, i32 0, i32 1, i64 %76
  %79 = select i1 %77, %"struct.OT::VertOriginMetric"* %78, %"struct.OT::VertOriginMetric"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VertOriginMetric"*), !prof !3
  %80 = getelementptr inbounds %"struct.OT::VertOriginMetric", %"struct.OT::VertOriginMetric"* %79, i64 0, i32 1
  br label %81

81:                                               ; preds = %73, %75
  %82 = phi %"struct.OT::IntType.281"* [ %74, %73 ], [ %80, %75 ]
  %83 = bitcast %"struct.OT::IntType.281"* %82 to i16*
  %84 = load i16, i16* %83, align 1
  %85 = tail call i16 @llvm.bswap.i16(i16 %84) #10
  %86 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 6
  %87 = load i64, i64* %86, align 8
  %88 = sext i16 %85 to i64
  %89 = mul nsw i64 %87, %88
  %90 = lshr i64 %89, 16
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %4, align 4
  br label %142

92:                                               ; preds = %6
  %93 = bitcast %struct.hb_glyph_extents_t* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 0, i64 16, i1 false)
  %94 = getelementptr inbounds i8, i8* %1, i64 96
  %95 = bitcast i8* %94 to %struct.hb_lazy_loader_t.61*
  %96 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %95) #10
  %97 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %96, i64 0, i32 0
  %98 = call zeroext i1 @_ZNK2OT4glyf13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::glyf::accelerator_t"* %97, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* nonnull %7)
  br i1 %98, label %99, label %116

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %1, i64 88
  %101 = bitcast i8* %100 to %struct.hb_lazy_loader_t.56*
  %102 = call %"struct.OT::vmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18vmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj11EE9hb_face_tLj11ES1_E10get_storedEv(%struct.hb_lazy_loader_t.56* %101) #10
  %103 = getelementptr inbounds %"struct.OT::vmtx_accelerator_t", %"struct.OT::vmtx_accelerator_t"* %102, i64 0, i32 0
  %104 = call i32 @_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t16get_side_bearingEP9hb_font_tj(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %103, %struct.hb_font_t* %0, i32 %2)
  %105 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %7, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %104 to i64
  %108 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 6
  %109 = load i64, i64* %108, align 8
  %110 = shl i64 %107, 48
  %111 = ashr exact i64 %110, 48
  %112 = mul nsw i64 %111, %109
  %113 = lshr i64 %112, 16
  %114 = trunc i64 %113 to i32
  %115 = add nsw i32 %106, %114
  store i32 %115, i32* %4, align 4
  br label %141

116:                                              ; preds = %92
  %117 = bitcast %struct.hb_font_extents_t* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %117) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 0, i64 48, i1 false) #10
  %118 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %9, align 8
  %119 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %118, i64 0, i32 3, i32 0, i32 0
  %120 = load i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)** %119, align 8
  %121 = load i8*, i8** %13, align 8
  %122 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %118, i64 0, i32 1, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 %120(%struct.hb_font_t* %0, i8* %121, %struct.hb_font_extents_t* nonnull %8, i8* %123) #10
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %8, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br label %139

129:                                              ; preds = %116
  %130 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %0, i64 0, i32 4
  %131 = load i32, i32* %130, align 4
  %132 = sitofp i32 %131 to double
  %133 = fmul double %132, 8.000000e-01
  %134 = fptosi double %133 to i32
  %135 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %8, i64 0, i32 0
  store i32 %134, i32* %135, align 4
  %136 = sub nsw i32 %134, %131
  %137 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %8, i64 0, i32 1
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %struct.hb_font_extents_t, %struct.hb_font_extents_t* %8, i64 0, i32 2
  store i32 0, i32* %138, align 4
  br label %139

139:                                              ; preds = %126, %129
  %140 = phi i32 [ %128, %126 ], [ %134, %129 ]
  store i32 %140, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %117) #10
  br label %141

141:                                              ; preds = %139, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  br label %142

142:                                              ; preds = %141, %81
  ret i32 1
}

declare void @hb_font_funcs_set_glyph_extents_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL23hb_ot_get_glyph_extentsP9hb_font_tPvjP18hb_glyph_extents_tS1_(%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8* nocapture readnone) #0 {
  %6 = alloca %struct.hb_sanitize_context_t, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 280
  %8 = bitcast i8* %1 to %struct.hb_face_t**
  %9 = bitcast i8* %7 to i64*
  %10 = load atomic i64, i64* %9 acquire, align 8
  %11 = inttoptr i64 %10 to %"struct.OT::sbix_accelerator_t"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %60, !prof !2

13:                                               ; preds = %5
  %14 = bitcast %struct.hb_sanitize_context_t* %6 to i8*
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 2
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 8
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 9
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 10
  %20 = bitcast i8** %16 to i8*
  %21 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %6, i64 0, i32 11
  br label %22

22:                                               ; preds = %13, %55
  %23 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %24 = icmp eq %struct.hb_face_t* %23, null
  br i1 %24, label %60, label %25, !prof !2

25:                                               ; preds = %22
  %26 = call noalias i8* @calloc(i64 1, i64 16) #10
  %27 = bitcast i8* %26 to %"struct.OT::sbix_accelerator_t"*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %43, label %29, !prof !2

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  store i32 0, i32* %15, align 8
  store i32 0, i32* %17, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %18, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false) #10
  %30 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %23) #10
  store i32 %30, i32* %19, align 8
  store i8 1, i8* %21, align 4
  %31 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %23, i32 1935829368) #10
  %32 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4sbixEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %6, %struct.hb_blob_t* %31) #10
  %33 = bitcast i8* %26 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %32, %struct.hb_blob_t** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  %34 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %23, i64 0, i32 6, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %29
  %38 = call i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t* nonnull %23) #10
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i32 [ %38, %37 ], [ %35, %29 ]
  %41 = getelementptr inbounds i8, i8* %26, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 8
  br label %43

43:                                               ; preds = %25, %39
  %44 = select i1 %28, %"struct.OT::sbix_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::sbix_accelerator_t"*), %"struct.OT::sbix_accelerator_t"* %27, !prof !2
  %45 = ptrtoint %"struct.OT::sbix_accelerator_t"* %44 to i64
  %46 = cmpxchg weak i64* %9, i64 0, i64 %45 acq_rel monotonic
  %47 = extractvalue { i64, i1 } %46, 1
  br i1 %47, label %60, label %48, !prof !3

48:                                               ; preds = %43
  br i1 %28, label %55, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"struct.OT::sbix_accelerator_t", %"struct.OT::sbix_accelerator_t"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %struct.hb_blob_t*, %struct.hb_blob_t** %50, align 8
  %52 = icmp eq %struct.hb_blob_t* %51, null
  %53 = select i1 %52, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %51
  call void @hb_blob_destroy(%struct.hb_blob_t* %53) #10
  %54 = bitcast %"struct.OT::sbix_accelerator_t"* %44 to i8*
  call void @free(i8* %54) #10
  br label %55

55:                                               ; preds = %49, %48
  %56 = load atomic i64, i64* %9 acquire, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %22, label %58, !prof !2

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %"struct.OT::sbix_accelerator_t"*
  br label %60

60:                                               ; preds = %22, %43, %5, %58
  %61 = phi %"struct.OT::sbix_accelerator_t"* [ %59, %58 ], [ %11, %5 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::sbix_accelerator_t"*), %22 ], [ %44, %43 ]
  %62 = bitcast %"struct.OT::sbix_accelerator_t"* %61 to %"struct.OT::sbix::accelerator_t"*
  %63 = call zeroext i1 @_ZNK2OT4sbix13accelerator_t15get_png_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::sbix::accelerator_t"* %62, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* %3) #10
  br i1 %63, label %118, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds i8, i8* %1, i64 96
  %66 = bitcast i8* %65 to %struct.hb_lazy_loader_t.61*
  %67 = call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %66) #10
  %68 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %67, i64 0, i32 0
  %69 = call zeroext i1 @_ZNK2OT4glyf13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::glyf::accelerator_t"* %68, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* %3)
  br i1 %69, label %118, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %1, i64 104
  %72 = bitcast i8* %71 to %struct.hb_lazy_loader_t.68*
  %73 = call %"struct.OT::cff1_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18cff1_accelerator_tE21hb_face_lazy_loader_tIS1_Lj13EE9hb_face_tLj13ES1_E10get_storedEv(%struct.hb_lazy_loader_t.68* %72) #10
  %74 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %73, i64 0, i32 0
  %75 = call zeroext i1 @_ZNK2OT4cff113accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::cff1::accelerator_t"* %74, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* %3) #10
  br i1 %75, label %118, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %1, i64 112
  %78 = bitcast i8* %77 to i64*
  %79 = load atomic i64, i64* %78 acquire, align 8
  %80 = inttoptr i64 %79 to %"struct.OT::cff2_accelerator_t"*
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %82, label %107, !prof !2

82:                                               ; preds = %76, %102
  %83 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %84 = icmp eq %struct.hb_face_t* %83, null
  br i1 %84, label %107, label %85, !prof !2

85:                                               ; preds = %82
  %86 = call noalias i8* @calloc(i64 1, i64 192) #10
  %87 = bitcast i8* %86 to %"struct.OT::cff2_accelerator_t"*
  %88 = icmp eq i8* %86, null
  br i1 %88, label %91, label %89, !prof !2

89:                                               ; preds = %85
  %90 = bitcast i8* %86 to %"struct.OT::cff2::accelerator_templ_t"*
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t(%"struct.OT::cff2::accelerator_templ_t"* nonnull %90, %struct.hb_face_t* nonnull %83) #10
  br label %91

91:                                               ; preds = %89, %85
  %92 = select i1 %88, %"struct.OT::cff2_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff2_accelerator_t"*), %"struct.OT::cff2_accelerator_t"* %87, !prof !2
  %93 = ptrtoint %"struct.OT::cff2_accelerator_t"* %92 to i64
  %94 = cmpxchg weak i64* %78, i64 0, i64 %93 acq_rel monotonic
  %95 = extractvalue { i64, i1 } %94, 1
  br i1 %95, label %107, label %96, !prof !3

96:                                               ; preds = %91
  %97 = icmp eq %"struct.OT::cff2_accelerator_t"* %92, null
  %98 = or i1 %88, %97
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = bitcast %"struct.OT::cff2_accelerator_t"* %92 to %"struct.OT::cff2::accelerator_templ_t"*
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %100) #10
  %101 = bitcast %"struct.OT::cff2_accelerator_t"* %92 to i8*
  call void @free(i8* %101) #10
  br label %102

102:                                              ; preds = %99, %96
  %103 = load atomic i64, i64* %78 acquire, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %82, label %105, !prof !2

105:                                              ; preds = %102
  %106 = inttoptr i64 %103 to %"struct.OT::cff2_accelerator_t"*
  br label %107

107:                                              ; preds = %82, %91, %76, %105
  %108 = phi %"struct.OT::cff2_accelerator_t"* [ %106, %105 ], [ %80, %76 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff2_accelerator_t"*), %82 ], [ %92, %91 ]
  %109 = bitcast %"struct.OT::cff2_accelerator_t"* %108 to %"struct.OT::cff2::accelerator_t"*
  %110 = call zeroext i1 @_ZNK2OT4cff213accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::cff2::accelerator_t"* %109, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* %3) #10
  br i1 %110, label %118, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %1, i64 272
  %113 = bitcast i8* %112 to %struct.hb_lazy_loader_t.176*
  %114 = call %"struct.OT::CBDT_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18CBDT_accelerator_tE21hb_face_lazy_loader_tIS1_Lj34EE9hb_face_tLj34ES1_E10get_storedEv(%struct.hb_lazy_loader_t.176* %113) #10
  %115 = bitcast %"struct.OT::CBDT_accelerator_t"* %114 to %"struct.OT::CBDT::accelerator_t"*
  %116 = call zeroext i1 @_ZNK2OT4CBDT13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::CBDT::accelerator_t"* %115, %struct.hb_font_t* %0, i32 %2, %struct.hb_glyph_extents_t* %3)
  %117 = zext i1 %116 to i32
  br label %118

118:                                              ; preds = %111, %107, %70, %64, %60
  %119 = phi i32 [ 1, %60 ], [ 1, %64 ], [ 1, %70 ], [ 1, %107 ], [ %117, %111 ]
  ret i32 %119
}

declare void @hb_font_funcs_set_glyph_name_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL20hb_ot_get_glyph_nameP9hb_font_tPvjPcjS1_(%struct.hb_font_t* nocapture readnone, i8*, i32, i8*, i32, i8* nocapture readnone) #0 {
  %7 = getelementptr inbounds i8, i8* %1, i64 48
  %8 = bitcast i8* %7 to %struct.hb_lazy_loader_t.34*
  %9 = tail call %"struct.OT::post_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18post_accelerator_tE21hb_face_lazy_loader_tIS1_Lj6EE9hb_face_tLj6ES1_E10get_storedEv(%struct.hb_lazy_loader_t.34* %8) #10
  %10 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %85 [
    i32 65536, label %12
    i32 131072, label %26
  ]

12:                                               ; preds = %6
  %13 = icmp ugt i32 %2, 257
  br i1 %13, label %85, label %14

14:                                               ; preds = %12
  %15 = zext i32 %2 to i64
  %16 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %18
  %20 = add nuw nsw i32 %2, 1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %17, -1
  %25 = add i32 %23, %24
  br label %72

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0, i32 2
  %28 = load %"struct.OT::ArrayOf.38"*, %"struct.OT::ArrayOf.38"** %27, align 8
  %29 = bitcast %"struct.OT::ArrayOf.38"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = zext i16 %31 to i32
  %33 = icmp ugt i32 %32, %2
  br i1 %33, label %34, label %85

34:                                               ; preds = %26
  %35 = zext i32 %2 to i64
  %36 = getelementptr inbounds %"struct.OT::ArrayOf.38", %"struct.OT::ArrayOf.38"* %28, i64 0, i32 1, i64 %35
  %37 = bitcast %"struct.OT::IntType"* %36 to i16*
  %38 = load i16, i16* %37, align 1
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #10
  %40 = zext i16 %39 to i32
  %41 = icmp ult i16 %39, 258
  br i1 %41, label %42, label %54

42:                                               ; preds = %34
  %43 = zext i16 %39 to i64
  %44 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %46
  %48 = add nuw nsw i32 %40, 1
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = xor i32 %45, -1
  %53 = add i32 %51, %52
  br label %72

54:                                               ; preds = %34
  %55 = add nsw i32 %40, -258
  %56 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0, i32 3, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  br i1 %58, label %59, label %85

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0, i32 3, i32 2
  %61 = load i32*, i32** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0, i32 4
  %66 = load i8*, i8** %65, align 8
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %68, i64 1
  %71 = zext i8 %69 to i32
  br label %72

72:                                               ; preds = %14, %42, %59
  %73 = phi i8* [ %47, %42 ], [ %70, %59 ], [ %19, %14 ]
  %74 = phi i32 [ %53, %42 ], [ %71, %59 ], [ %25, %14 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %72
  %77 = icmp eq i32 %4, 0
  br i1 %77, label %136, label %78

78:                                               ; preds = %76
  %79 = add i32 %4, -1
  %80 = icmp ugt i32 %79, %74
  %81 = select i1 %80, i32 %74, i32 %79
  %82 = zext i32 %81 to i64
  %83 = tail call i8* @strncpy(i8* %3, i8* %73, i64 %82) #10
  %84 = getelementptr inbounds i8, i8* %3, i64 %82
  store i8 0, i8* %84, align 1
  br label %136

85:                                               ; preds = %54, %26, %6, %12, %72
  %86 = getelementptr inbounds i8, i8* %1, i64 104
  %87 = bitcast i8* %86 to %struct.hb_lazy_loader_t.68*
  %88 = tail call %"struct.OT::cff1_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18cff1_accelerator_tE21hb_face_lazy_loader_tIS1_Lj13EE9hb_face_tLj13ES1_E10get_storedEv(%struct.hb_lazy_loader_t.68* %87) #10
  %89 = icmp eq i8* %3, null
  br i1 %89, label %136, label %90

90:                                               ; preds = %85
  %91 = bitcast %"struct.OT::cff1_accelerator_t"* %88 to %"struct.OT::cff1::accelerator_templ_t"*
  %92 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %88, i64 0, i32 0, i32 0, i32 0
  %93 = load %struct.hb_blob_t*, %struct.hb_blob_t** %92, align 8
  %94 = icmp eq %struct.hb_blob_t* %93, null
  br i1 %94, label %136, label %95, !prof !2

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %88, i64 0, i32 0, i32 0, i32 13, i32 1, i32 0, i64 9
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %99, label %136

99:                                               ; preds = %95
  %100 = tail call i32 @_ZNK2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE12glyph_to_sidEj(%"struct.OT::cff1::accelerator_templ_t"* %91, i32 %2) #10
  %101 = icmp ult i32 %100, 391
  br i1 %101, label %102, label %115

102:                                              ; preds = %99
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds [392 x i32], [392 x i32]* @_ZL23cff1_std_strings_msgidx, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %union.cff1_std_strings_msgstr_t, %union.cff1_std_strings_msgstr_t* @_ZL23cff1_std_strings_msgstr, i64 0, i32 0, i32 0, i64 %106
  %108 = add nuw nsw i32 %100, 1
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [392 x i32], [392 x i32]* @_ZL23cff1_std_strings_msgidx, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = xor i32 %105, -1
  %113 = add i32 %111, %112
  %114 = zext i32 %113 to i64
  br label %123

115:                                              ; preds = %99
  %116 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %88, i64 0, i32 0, i32 0, i32 6
  %117 = bitcast %"struct.CFF::CFF1StringIndex"** %116 to %"struct.CFF::CFFIndex"**
  %118 = load %"struct.CFF::CFFIndex"*, %"struct.CFF::CFFIndex"** %117, align 8
  %119 = add i32 %100, -391
  %120 = tail call { i8*, i64 } @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEEixEj(%"struct.CFF::CFFIndex"* %118, i32 %119) #10
  %121 = extractvalue { i8*, i64 } %120, 0
  %122 = extractvalue { i8*, i64 } %120, 1
  br label %123

123:                                              ; preds = %115, %102
  %124 = phi i64 [ %122, %115 ], [ %114, %102 ]
  %125 = phi i8* [ %121, %115 ], [ %107, %102 ]
  %126 = and i64 %124, 4294967295
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %123
  %129 = add i32 %4, -1
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %126, %130
  %132 = select i1 %131, i64 %126, i64 %130
  %133 = and i64 %132, 4294967295
  %134 = tail call i8* @strncpy(i8* nonnull %3, i8* %125, i64 %133) #10
  %135 = getelementptr inbounds i8, i8* %3, i64 %133
  store i8 0, i8* %135, align 1
  br label %136

136:                                              ; preds = %123, %95, %90, %76, %78, %128, %85
  %137 = phi i32 [ 1, %128 ], [ 1, %85 ], [ 1, %78 ], [ 1, %76 ], [ 0, %90 ], [ 0, %95 ], [ 0, %123 ]
  ret i32 %137
}

declare void @hb_font_funcs_set_glyph_from_name_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL25hb_ot_get_glyph_from_nameP9hb_font_tPvPKciPjS1_(%struct.hb_font_t* nocapture readnone, i8*, i8*, i32, i32*, i8* nocapture readnone) #0 {
  %7 = getelementptr inbounds i8, i8* %1, i64 48
  %8 = bitcast i8* %7 to %struct.hb_lazy_loader_t.34*
  %9 = tail call %"struct.OT::post_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18post_accelerator_tE21hb_face_lazy_loader_tIS1_Lj6EE9hb_face_tLj6ES1_E10get_storedEv(%struct.hb_lazy_loader_t.34* %8) #10
  %10 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %9, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK2OT4post13accelerator_t19get_glyph_from_nameEPKciPj(%"struct.OT::post::accelerator_t"* %10, i8* %2, i32 %3, i32* %4)
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %1, i64 104
  %14 = bitcast i8* %13 to %struct.hb_lazy_loader_t.68*
  %15 = tail call %"struct.OT::cff1_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18cff1_accelerator_tE21hb_face_lazy_loader_tIS1_Lj13EE9hb_face_tLj13ES1_E10get_storedEv(%struct.hb_lazy_loader_t.68* %14) #10
  %16 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK2OT4cff113accelerator_t19get_glyph_from_nameEPKciPj(%"struct.OT::cff1::accelerator_t"* %16, i8* %2, i32 %3, i32* %4)
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %12, %6
  %20 = phi i32 [ 1, %6 ], [ %18, %12 ]
  ret i32 %20
}

declare void @hb_font_funcs_make_immutable(%struct.hb_font_funcs_t*) local_unnamed_addr #1

declare hidden zeroext i1 @_Z34_hb_ot_metrics_get_position_commonP9hb_font_t19hb_ot_metrics_tag_tPi(%struct.hb_font_t*, i32, i32*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = alloca i8, align 1
  %5 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %9, align 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %11 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #10
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  %13 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  store i32 %13, i32* %10, align 8
  store i8 1, i8* %12, align 4
  %14 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1668112752) #10
  %15 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %14) #10
  %16 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 5, i32 0, i32 0
  store %struct.hb_blob_t* %15, %struct.hb_blob_t** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %17 = icmp eq %struct.hb_blob_t* %15, null
  %18 = select i1 %17, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %15
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %18, i64 0, i32 1
  %20 = bitcast i8** %19 to %"struct.OT::cmap"**
  %21 = load %"struct.OT::cmap"*, %"struct.OT::cmap"** %20, align 8
  %22 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %18, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp ult i32 %23, 4
  %25 = select i1 %24, %"struct.OT::cmap"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap"*), %"struct.OT::cmap"* %21
  %26 = call %"struct.OT::CmapSubtable"* @_ZNK2OT4cmap18find_best_subtableEPb(%"struct.OT::cmap"* %25, i8* nonnull %4)
  %27 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 0, i32 0
  store %"struct.OT::CmapSubtable"* %26, %"struct.OT::CmapSubtable"** %27, align 8
  %28 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 1, i32 0
  store %"struct.OT::CmapSubtableFormat14"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtableFormat14"*), %"struct.OT::CmapSubtableFormat14"** %28, align 8
  %29 = load %struct.hb_blob_t*, %struct.hb_blob_t** %16, align 8
  %30 = icmp eq %struct.hb_blob_t* %29, null
  %31 = select i1 %30, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %29
  %32 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %31, i64 0, i32 1
  %33 = bitcast i8** %32 to %"struct.OT::cmap"**
  %34 = load %"struct.OT::cmap"*, %"struct.OT::cmap"** %33, align 8
  %35 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %31, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %36, 4
  %38 = select i1 %37, %"struct.OT::cmap"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap"*), %"struct.OT::cmap"* %34
  %39 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %38, i64 0, i32 1
  %40 = bitcast %"struct.OT::SortedArrayOf.210"* %39 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %77, label %43

43:                                               ; preds = %2
  %44 = call i16 @llvm.bswap.i16(i16 %41) #10
  %45 = zext i16 %44 to i32
  %46 = add nsw i32 %45, -1
  br label %47

47:                                               ; preds = %70, %43
  %48 = phi i32 [ %46, %43 ], [ %72, %70 ]
  %49 = phi i32 [ 0, %43 ], [ %71, %70 ]
  %50 = add i32 %49, %48
  %51 = lshr i32 %50, 1
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 3
  %54 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %38, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %53
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 1
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %47
  %59 = getelementptr inbounds i8, i8* %54, i64 2
  %60 = bitcast i8* %59 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = call i16 @llvm.bswap.i16(i16 %61) #10
  %63 = icmp ugt i16 %62, 5
  br i1 %63, label %64, label %66

64:                                               ; preds = %47, %58
  %65 = add nsw i32 %51, -1
  br label %70

66:                                               ; preds = %58
  %67 = icmp eq i16 %61, 1280
  br i1 %67, label %74, label %68

68:                                               ; preds = %66
  %69 = add nuw nsw i32 %51, 1
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %49, %64 ], [ %69, %68 ]
  %72 = phi i32 [ %65, %64 ], [ %48, %68 ]
  %73 = icmp sgt i32 %71, %72
  br i1 %73, label %77, label %47

74:                                               ; preds = %66
  %75 = zext i32 %51 to i64
  %76 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %38, i64 0, i32 1, i32 0, i32 1, i64 %75
  br label %77

77:                                               ; preds = %70, %74, %2
  %78 = phi %"struct.OT::EncodingRecord"* [ %76, %74 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %2 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %70 ]
  %79 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw i32 %81, 24
  %83 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = or i32 %86, %82
  %88 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 8
  %92 = or i32 %87, %91
  %93 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = or i32 %92, %95
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %117, label %98

98:                                               ; preds = %77
  %99 = zext i8 %80 to i64
  %100 = shl nuw nsw i64 %99, 24
  %101 = zext i8 %84 to i64
  %102 = shl nuw nsw i64 %101, 16
  %103 = or i64 %102, %100
  %104 = zext i8 %89 to i64
  %105 = shl nuw nsw i64 %104, 8
  %106 = or i64 %103, %105
  %107 = zext i8 %94 to i64
  %108 = or i64 %106, %107
  %109 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %38, i64 0, i32 0, i32 0, i32 0, i64 %108
  %110 = icmp eq i8* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %98
  %112 = bitcast i8* %109 to i16*
  %113 = load i16, i16* %112, align 1
  %114 = icmp eq i16 %113, 3584
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = bitcast %"struct.OT::CmapSubtableFormat14"** %28 to i8**
  store i8* %109, i8** %116, align 8
  br label %117

117:                                              ; preds = %77, %98, %115, %111
  %118 = icmp eq %"struct.OT::CmapSubtable"* %26, null
  %119 = select i1 %118, %"struct.OT::CmapSubtable"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtable"*), %"struct.OT::CmapSubtable"* %26
  %120 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %121 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 3
  store i8* %120, i8** %121, align 8
  %122 = load i8, i8* %4, align 1, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %162, !prof !3

124:                                              ; preds = %117
  %125 = bitcast %"struct.OT::CmapSubtable"* %119 to i16*
  %126 = load i16, i16* %125, align 1
  %127 = call i16 @llvm.bswap.i16(i16 %126) #10
  switch i16 %127, label %162 [
    i16 12, label %128
    i16 4, label %129
  ]

128:                                              ; preds = %124
  br label %162

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4
  %131 = bitcast %"struct.OT::CmapSubtable"* %119 to %"struct.OT::CmapSubtableFormat4"*
  %132 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %119, i64 0, i32 0, i32 0, i32 3
  %133 = bitcast [256 x %"struct.OT::IntType.6"]* %132 to i16*
  %134 = load i16, i16* %133, align 1
  %135 = call i16 @llvm.bswap.i16(i16 %134) #10
  %136 = lshr i16 %135, 1
  %137 = zext i16 %136 to i32
  %138 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 5
  store i32 %137, i32* %138, align 8
  %139 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %119, i64 0, i32 0, i32 0, i32 3, i64 8
  %140 = bitcast %"struct.OT::CmapSubtableFormat4::accelerator_t"* %130 to %"struct.OT::IntType.6"**
  store %"struct.OT::IntType.6"* %139, %"struct.OT::IntType.6"** %140, align 8
  %141 = zext i16 %136 to i64
  %142 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %131, i64 0, i32 7, i32 0, i64 %141
  %143 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %142, i64 1
  %144 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 1
  store %"struct.OT::IntType"* %143, %"struct.OT::IntType"** %144, align 8
  %145 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %143, i64 %141
  %146 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 2
  store %"struct.OT::IntType"* %145, %"struct.OT::IntType"** %146, align 8
  %147 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %145, i64 %141
  %148 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 3
  store %"struct.OT::IntType"* %147, %"struct.OT::IntType"** %148, align 8
  %149 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %147, i64 %141
  %150 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 4
  store %"struct.OT::IntType"* %149, %"struct.OT::IntType"** %150, align 8
  %151 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %119, i64 0, i32 0, i32 0, i32 1
  %152 = bitcast %"struct.OT::IntType"* %151 to i16*
  %153 = load i16, i16* %152, align 1
  %154 = call i16 @llvm.bswap.i16(i16 %153) #10
  %155 = zext i16 %154 to i32
  %156 = shl nuw nsw i32 %137, 3
  %157 = sub nuw nsw i32 -16, %156
  %158 = add nsw i32 %157, %155
  %159 = lshr i32 %158, 1
  %160 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 6
  store i32 %159, i32* %160, align 4
  %161 = bitcast i8** %121 to %"struct.OT::CmapSubtableFormat4::accelerator_t"**
  store %"struct.OT::CmapSubtableFormat4::accelerator_t"* %130, %"struct.OT::CmapSubtableFormat4::accelerator_t"** %161, align 8
  br label %162

162:                                              ; preds = %124, %117, %128, %129
  %163 = phi i1 (i8*, i32, i32*)* [ @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj, %128 ], [ @_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj, %129 ], [ @_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj, %117 ], [ @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj, %124 ]
  %164 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 2
  store i1 (i8*, i32, i32*)* %163, i1 (i8*, i32, i32*)** %164, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::CmapSubtable"* @_ZNK2OT4cmap18find_best_subtableEPb(%"struct.OT::cmap"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %5

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1
  %7 = bitcast %"struct.OT::SortedArrayOf.210"* %6 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %5
  %11 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %12 = zext i16 %11 to i32
  %13 = add nsw i32 %12, -1
  br label %14

14:                                               ; preds = %41, %10
  %15 = phi i32 [ %13, %10 ], [ %43, %41 ]
  %16 = phi i32 [ 0, %10 ], [ %42, %41 ]
  %17 = add i32 %16, %15
  %18 = lshr i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #10
  %25 = icmp ugt i16 %24, 3
  %26 = icmp ne i16 %23, 768
  %27 = or i1 %26, %25
  br i1 %27, label %34, label %28

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %21, i64 2
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = icmp eq i16 %31, 0
  %33 = icmp ne i16 %31, 0
  br i1 %32, label %37, label %35

34:                                               ; preds = %14
  br i1 %25, label %35, label %37

35:                                               ; preds = %28, %34
  %36 = add nsw i32 %18, -1
  br label %41

37:                                               ; preds = %28, %34
  %38 = phi i1 [ %26, %34 ], [ %33, %28 ]
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = add nuw nsw i32 %18, 1
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi i32 [ %16, %35 ], [ %40, %39 ]
  %43 = phi i32 [ %36, %35 ], [ %15, %39 ]
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %48, label %14

45:                                               ; preds = %37
  %46 = zext i32 %18 to i64
  %47 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %46
  br label %48

48:                                               ; preds = %41, %45, %5
  %49 = phi %"struct.OT::EncodingRecord"* [ %47, %45 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %5 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %41 ]
  %50 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %48
  %70 = zext i8 %51 to i64
  %71 = shl nuw nsw i64 %70, 24
  %72 = zext i8 %55 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %71
  %75 = zext i8 %60 to i64
  %76 = shl nuw nsw i64 %75, 8
  %77 = or i64 %74, %76
  %78 = zext i8 %65 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %79
  %81 = bitcast i8* %80 to %"struct.OT::CmapSubtable"*
  %82 = icmp eq i8* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  br i1 %3, label %84, label %645

84:                                               ; preds = %83
  store i8 1, i8* %1, align 1
  br label %645

85:                                               ; preds = %48, %69
  br i1 %9, label %125, label %86

86:                                               ; preds = %85
  %87 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %88 = zext i16 %87 to i32
  %89 = add nsw i32 %88, -1
  br label %90

90:                                               ; preds = %118, %86
  %91 = phi i32 [ %89, %86 ], [ %120, %118 ]
  %92 = phi i32 [ 0, %86 ], [ %119, %118 ]
  %93 = add i32 %92, %91
  %94 = lshr i32 %93, 1
  %95 = zext i32 %94 to i64
  %96 = shl nuw nsw i64 %95, 3
  %97 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %96
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #10
  %101 = icmp ugt i16 %100, 3
  %102 = icmp ne i16 %99, 768
  %103 = or i1 %102, %101
  br i1 %103, label %111, label %104

104:                                              ; preds = %90
  %105 = getelementptr inbounds i8, i8* %97, i64 2
  %106 = bitcast i8* %105 to i16*
  %107 = load i16, i16* %106, align 1
  %108 = tail call i16 @llvm.bswap.i16(i16 %107) #10
  %109 = icmp ugt i16 %108, 10
  %110 = icmp ne i16 %107, 2560
  br i1 %109, label %112, label %114

111:                                              ; preds = %90
  br i1 %101, label %112, label %114

112:                                              ; preds = %111, %104
  %113 = add nsw i32 %94, -1
  br label %118

114:                                              ; preds = %111, %104
  %115 = phi i1 [ %102, %111 ], [ %110, %104 ]
  br i1 %115, label %116, label %122

116:                                              ; preds = %114
  %117 = add nuw nsw i32 %94, 1
  br label %118

118:                                              ; preds = %116, %112
  %119 = phi i32 [ %92, %112 ], [ %117, %116 ]
  %120 = phi i32 [ %113, %112 ], [ %91, %116 ]
  %121 = icmp sgt i32 %119, %120
  br i1 %121, label %125, label %90

122:                                              ; preds = %114
  %123 = zext i32 %94 to i64
  %124 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %123
  br label %125

125:                                              ; preds = %118, %122, %85
  %126 = phi %"struct.OT::EncodingRecord"* [ %124, %122 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %85 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %118 ]
  %127 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl nuw i32 %129, 24
  %131 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw nsw i32 %138, 8
  %140 = or i32 %135, %139
  %141 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = or i32 %140, %143
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %160, label %146

146:                                              ; preds = %125
  %147 = zext i8 %128 to i64
  %148 = shl nuw nsw i64 %147, 24
  %149 = zext i8 %132 to i64
  %150 = shl nuw nsw i64 %149, 16
  %151 = or i64 %150, %148
  %152 = zext i8 %137 to i64
  %153 = shl nuw nsw i64 %152, 8
  %154 = or i64 %151, %153
  %155 = zext i8 %142 to i64
  %156 = or i64 %154, %155
  %157 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to %"struct.OT::CmapSubtable"*
  %159 = icmp eq i8* %157, null
  br i1 %159, label %160, label %645

160:                                              ; preds = %125, %146
  br i1 %9, label %195, label %161

161:                                              ; preds = %160
  %162 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %163, -1
  br label %165

165:                                              ; preds = %188, %161
  %166 = phi i32 [ %164, %161 ], [ %190, %188 ]
  %167 = phi i32 [ 0, %161 ], [ %189, %188 ]
  %168 = add i32 %167, %166
  %169 = lshr i32 %168, 1
  %170 = zext i32 %169 to i64
  %171 = shl nuw nsw i64 %170, 3
  %172 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %171
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 1
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %165
  %177 = getelementptr inbounds i8, i8* %172, i64 2
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 1
  %180 = tail call i16 @llvm.bswap.i16(i16 %179) #10
  %181 = icmp ugt i16 %180, 6
  br i1 %181, label %182, label %184

182:                                              ; preds = %165, %176
  %183 = add nsw i32 %169, -1
  br label %188

184:                                              ; preds = %176
  %185 = icmp eq i16 %179, 1536
  br i1 %185, label %192, label %186

186:                                              ; preds = %184
  %187 = add nuw nsw i32 %169, 1
  br label %188

188:                                              ; preds = %186, %182
  %189 = phi i32 [ %167, %182 ], [ %187, %186 ]
  %190 = phi i32 [ %183, %182 ], [ %166, %186 ]
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %195, label %165

192:                                              ; preds = %184
  %193 = zext i32 %169 to i64
  %194 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %193
  br label %195

195:                                              ; preds = %188, %192, %160
  %196 = phi %"struct.OT::EncodingRecord"* [ %194, %192 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %160 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %188 ]
  %197 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = shl nuw i32 %199, 24
  %201 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl nuw nsw i32 %203, 16
  %205 = or i32 %204, %200
  %206 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %205, %209
  %211 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = or i32 %210, %213
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %230, label %216

216:                                              ; preds = %195
  %217 = zext i8 %198 to i64
  %218 = shl nuw nsw i64 %217, 24
  %219 = zext i8 %202 to i64
  %220 = shl nuw nsw i64 %219, 16
  %221 = or i64 %220, %218
  %222 = zext i8 %207 to i64
  %223 = shl nuw nsw i64 %222, 8
  %224 = or i64 %221, %223
  %225 = zext i8 %212 to i64
  %226 = or i64 %224, %225
  %227 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %226
  %228 = bitcast i8* %227 to %"struct.OT::CmapSubtable"*
  %229 = icmp eq i8* %227, null
  br i1 %229, label %230, label %645

230:                                              ; preds = %195, %216
  br i1 %9, label %265, label %231

231:                                              ; preds = %230
  %232 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %233 = zext i16 %232 to i32
  %234 = add nsw i32 %233, -1
  br label %235

235:                                              ; preds = %258, %231
  %236 = phi i32 [ %234, %231 ], [ %260, %258 ]
  %237 = phi i32 [ 0, %231 ], [ %259, %258 ]
  %238 = add i32 %237, %236
  %239 = lshr i32 %238, 1
  %240 = zext i32 %239 to i64
  %241 = shl nuw nsw i64 %240, 3
  %242 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %241
  %243 = bitcast i8* %242 to i16*
  %244 = load i16, i16* %243, align 1
  %245 = icmp eq i16 %244, 0
  br i1 %245, label %246, label %252

246:                                              ; preds = %235
  %247 = getelementptr inbounds i8, i8* %242, i64 2
  %248 = bitcast i8* %247 to i16*
  %249 = load i16, i16* %248, align 1
  %250 = tail call i16 @llvm.bswap.i16(i16 %249) #10
  %251 = icmp ugt i16 %250, 4
  br i1 %251, label %252, label %254

252:                                              ; preds = %235, %246
  %253 = add nsw i32 %239, -1
  br label %258

254:                                              ; preds = %246
  %255 = icmp eq i16 %249, 1024
  br i1 %255, label %262, label %256

256:                                              ; preds = %254
  %257 = add nuw nsw i32 %239, 1
  br label %258

258:                                              ; preds = %256, %252
  %259 = phi i32 [ %237, %252 ], [ %257, %256 ]
  %260 = phi i32 [ %253, %252 ], [ %236, %256 ]
  %261 = icmp sgt i32 %259, %260
  br i1 %261, label %265, label %235

262:                                              ; preds = %254
  %263 = zext i32 %239 to i64
  %264 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %263
  br label %265

265:                                              ; preds = %258, %262, %230
  %266 = phi %"struct.OT::EncodingRecord"* [ %264, %262 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %230 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %258 ]
  %267 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw i32 %269, 24
  %271 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 16
  %275 = or i32 %274, %270
  %276 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = shl nuw nsw i32 %278, 8
  %280 = or i32 %275, %279
  %281 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %280, %283
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %300, label %286

286:                                              ; preds = %265
  %287 = zext i8 %268 to i64
  %288 = shl nuw nsw i64 %287, 24
  %289 = zext i8 %272 to i64
  %290 = shl nuw nsw i64 %289, 16
  %291 = or i64 %290, %288
  %292 = zext i8 %277 to i64
  %293 = shl nuw nsw i64 %292, 8
  %294 = or i64 %291, %293
  %295 = zext i8 %282 to i64
  %296 = or i64 %294, %295
  %297 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %296
  %298 = bitcast i8* %297 to %"struct.OT::CmapSubtable"*
  %299 = icmp eq i8* %297, null
  br i1 %299, label %300, label %645

300:                                              ; preds = %265, %286
  br i1 %9, label %340, label %301

301:                                              ; preds = %300
  %302 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %303 = zext i16 %302 to i32
  %304 = add nsw i32 %303, -1
  br label %305

305:                                              ; preds = %333, %301
  %306 = phi i32 [ %304, %301 ], [ %335, %333 ]
  %307 = phi i32 [ 0, %301 ], [ %334, %333 ]
  %308 = add i32 %307, %306
  %309 = lshr i32 %308, 1
  %310 = zext i32 %309 to i64
  %311 = shl nuw nsw i64 %310, 3
  %312 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %311
  %313 = bitcast i8* %312 to i16*
  %314 = load i16, i16* %313, align 1
  %315 = tail call i16 @llvm.bswap.i16(i16 %314) #10
  %316 = icmp ugt i16 %315, 3
  %317 = icmp ne i16 %314, 768
  %318 = or i1 %317, %316
  br i1 %318, label %326, label %319

319:                                              ; preds = %305
  %320 = getelementptr inbounds i8, i8* %312, i64 2
  %321 = bitcast i8* %320 to i16*
  %322 = load i16, i16* %321, align 1
  %323 = tail call i16 @llvm.bswap.i16(i16 %322) #10
  %324 = icmp ugt i16 %323, 1
  %325 = icmp ne i16 %322, 256
  br i1 %324, label %327, label %329

326:                                              ; preds = %305
  br i1 %316, label %327, label %329

327:                                              ; preds = %326, %319
  %328 = add nsw i32 %309, -1
  br label %333

329:                                              ; preds = %326, %319
  %330 = phi i1 [ %317, %326 ], [ %325, %319 ]
  br i1 %330, label %331, label %337

331:                                              ; preds = %329
  %332 = add nuw nsw i32 %309, 1
  br label %333

333:                                              ; preds = %331, %327
  %334 = phi i32 [ %307, %327 ], [ %332, %331 ]
  %335 = phi i32 [ %328, %327 ], [ %306, %331 ]
  %336 = icmp sgt i32 %334, %335
  br i1 %336, label %340, label %305

337:                                              ; preds = %329
  %338 = zext i32 %309 to i64
  %339 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %338
  br label %340

340:                                              ; preds = %333, %337, %300
  %341 = phi %"struct.OT::EncodingRecord"* [ %339, %337 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %300 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %333 ]
  %342 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = shl nuw i32 %344, 24
  %346 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = shl nuw nsw i32 %348, 16
  %350 = or i32 %349, %345
  %351 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = shl nuw nsw i32 %353, 8
  %355 = or i32 %350, %354
  %356 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = or i32 %355, %358
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %375, label %361

361:                                              ; preds = %340
  %362 = zext i8 %343 to i64
  %363 = shl nuw nsw i64 %362, 24
  %364 = zext i8 %347 to i64
  %365 = shl nuw nsw i64 %364, 16
  %366 = or i64 %365, %363
  %367 = zext i8 %352 to i64
  %368 = shl nuw nsw i64 %367, 8
  %369 = or i64 %366, %368
  %370 = zext i8 %357 to i64
  %371 = or i64 %369, %370
  %372 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %371
  %373 = bitcast i8* %372 to %"struct.OT::CmapSubtable"*
  %374 = icmp eq i8* %372, null
  br i1 %374, label %375, label %645

375:                                              ; preds = %340, %361
  br i1 %9, label %410, label %376

376:                                              ; preds = %375
  %377 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %378 = zext i16 %377 to i32
  %379 = add nsw i32 %378, -1
  br label %380

380:                                              ; preds = %403, %376
  %381 = phi i32 [ %379, %376 ], [ %405, %403 ]
  %382 = phi i32 [ 0, %376 ], [ %404, %403 ]
  %383 = add i32 %382, %381
  %384 = lshr i32 %383, 1
  %385 = zext i32 %384 to i64
  %386 = shl nuw nsw i64 %385, 3
  %387 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %386
  %388 = bitcast i8* %387 to i16*
  %389 = load i16, i16* %388, align 1
  %390 = icmp eq i16 %389, 0
  br i1 %390, label %391, label %397

391:                                              ; preds = %380
  %392 = getelementptr inbounds i8, i8* %387, i64 2
  %393 = bitcast i8* %392 to i16*
  %394 = load i16, i16* %393, align 1
  %395 = tail call i16 @llvm.bswap.i16(i16 %394) #10
  %396 = icmp ugt i16 %395, 3
  br i1 %396, label %397, label %399

397:                                              ; preds = %380, %391
  %398 = add nsw i32 %384, -1
  br label %403

399:                                              ; preds = %391
  %400 = icmp eq i16 %394, 768
  br i1 %400, label %407, label %401

401:                                              ; preds = %399
  %402 = add nuw nsw i32 %384, 1
  br label %403

403:                                              ; preds = %401, %397
  %404 = phi i32 [ %382, %397 ], [ %402, %401 ]
  %405 = phi i32 [ %398, %397 ], [ %381, %401 ]
  %406 = icmp sgt i32 %404, %405
  br i1 %406, label %410, label %380

407:                                              ; preds = %399
  %408 = zext i32 %384 to i64
  %409 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %408
  br label %410

410:                                              ; preds = %403, %407, %375
  %411 = phi %"struct.OT::EncodingRecord"* [ %409, %407 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %375 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %403 ]
  %412 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = shl nuw i32 %414, 24
  %416 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = shl nuw nsw i32 %418, 16
  %420 = or i32 %419, %415
  %421 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = shl nuw nsw i32 %423, 8
  %425 = or i32 %420, %424
  %426 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = or i32 %425, %428
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %445, label %431

431:                                              ; preds = %410
  %432 = zext i8 %413 to i64
  %433 = shl nuw nsw i64 %432, 24
  %434 = zext i8 %417 to i64
  %435 = shl nuw nsw i64 %434, 16
  %436 = or i64 %435, %433
  %437 = zext i8 %422 to i64
  %438 = shl nuw nsw i64 %437, 8
  %439 = or i64 %436, %438
  %440 = zext i8 %427 to i64
  %441 = or i64 %439, %440
  %442 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %441
  %443 = bitcast i8* %442 to %"struct.OT::CmapSubtable"*
  %444 = icmp eq i8* %442, null
  br i1 %444, label %445, label %645

445:                                              ; preds = %410, %431
  br i1 %9, label %480, label %446

446:                                              ; preds = %445
  %447 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %448 = zext i16 %447 to i32
  %449 = add nsw i32 %448, -1
  br label %450

450:                                              ; preds = %473, %446
  %451 = phi i32 [ %449, %446 ], [ %475, %473 ]
  %452 = phi i32 [ 0, %446 ], [ %474, %473 ]
  %453 = add i32 %452, %451
  %454 = lshr i32 %453, 1
  %455 = zext i32 %454 to i64
  %456 = shl nuw nsw i64 %455, 3
  %457 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %456
  %458 = bitcast i8* %457 to i16*
  %459 = load i16, i16* %458, align 1
  %460 = icmp eq i16 %459, 0
  br i1 %460, label %461, label %467

461:                                              ; preds = %450
  %462 = getelementptr inbounds i8, i8* %457, i64 2
  %463 = bitcast i8* %462 to i16*
  %464 = load i16, i16* %463, align 1
  %465 = tail call i16 @llvm.bswap.i16(i16 %464) #10
  %466 = icmp ugt i16 %465, 2
  br i1 %466, label %467, label %469

467:                                              ; preds = %450, %461
  %468 = add nsw i32 %454, -1
  br label %473

469:                                              ; preds = %461
  %470 = icmp eq i16 %464, 512
  br i1 %470, label %477, label %471

471:                                              ; preds = %469
  %472 = add nuw nsw i32 %454, 1
  br label %473

473:                                              ; preds = %471, %467
  %474 = phi i32 [ %452, %467 ], [ %472, %471 ]
  %475 = phi i32 [ %468, %467 ], [ %451, %471 ]
  %476 = icmp sgt i32 %474, %475
  br i1 %476, label %480, label %450

477:                                              ; preds = %469
  %478 = zext i32 %454 to i64
  %479 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %478
  br label %480

480:                                              ; preds = %473, %477, %445
  %481 = phi %"struct.OT::EncodingRecord"* [ %479, %477 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %445 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %473 ]
  %482 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i32
  %485 = shl nuw i32 %484, 24
  %486 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = shl nuw nsw i32 %488, 16
  %490 = or i32 %489, %485
  %491 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = shl nuw nsw i32 %493, 8
  %495 = or i32 %490, %494
  %496 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i32
  %499 = or i32 %495, %498
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %515, label %501

501:                                              ; preds = %480
  %502 = zext i8 %483 to i64
  %503 = shl nuw nsw i64 %502, 24
  %504 = zext i8 %487 to i64
  %505 = shl nuw nsw i64 %504, 16
  %506 = or i64 %505, %503
  %507 = zext i8 %492 to i64
  %508 = shl nuw nsw i64 %507, 8
  %509 = or i64 %506, %508
  %510 = zext i8 %497 to i64
  %511 = or i64 %509, %510
  %512 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %511
  %513 = bitcast i8* %512 to %"struct.OT::CmapSubtable"*
  %514 = icmp eq i8* %512, null
  br i1 %514, label %515, label %645

515:                                              ; preds = %480, %501
  br i1 %9, label %550, label %516

516:                                              ; preds = %515
  %517 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %518 = zext i16 %517 to i32
  %519 = add nsw i32 %518, -1
  br label %520

520:                                              ; preds = %543, %516
  %521 = phi i32 [ %519, %516 ], [ %545, %543 ]
  %522 = phi i32 [ 0, %516 ], [ %544, %543 ]
  %523 = add i32 %522, %521
  %524 = lshr i32 %523, 1
  %525 = zext i32 %524 to i64
  %526 = shl nuw nsw i64 %525, 3
  %527 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %526
  %528 = bitcast i8* %527 to i16*
  %529 = load i16, i16* %528, align 1
  %530 = icmp eq i16 %529, 0
  br i1 %530, label %531, label %537

531:                                              ; preds = %520
  %532 = getelementptr inbounds i8, i8* %527, i64 2
  %533 = bitcast i8* %532 to i16*
  %534 = load i16, i16* %533, align 1
  %535 = tail call i16 @llvm.bswap.i16(i16 %534) #10
  %536 = icmp ugt i16 %535, 1
  br i1 %536, label %537, label %539

537:                                              ; preds = %520, %531
  %538 = add nsw i32 %524, -1
  br label %543

539:                                              ; preds = %531
  %540 = icmp eq i16 %534, 256
  br i1 %540, label %547, label %541

541:                                              ; preds = %539
  %542 = add nuw nsw i32 %524, 1
  br label %543

543:                                              ; preds = %541, %537
  %544 = phi i32 [ %522, %537 ], [ %542, %541 ]
  %545 = phi i32 [ %538, %537 ], [ %521, %541 ]
  %546 = icmp sgt i32 %544, %545
  br i1 %546, label %550, label %520

547:                                              ; preds = %539
  %548 = zext i32 %524 to i64
  %549 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %548
  br label %550

550:                                              ; preds = %543, %547, %515
  %551 = phi %"struct.OT::EncodingRecord"* [ %549, %547 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %515 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %543 ]
  %552 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %553 = load i8, i8* %552, align 1
  %554 = zext i8 %553 to i32
  %555 = shl nuw i32 %554, 24
  %556 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  %559 = shl nuw nsw i32 %558, 16
  %560 = or i32 %559, %555
  %561 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %562 = load i8, i8* %561, align 1
  %563 = zext i8 %562 to i32
  %564 = shl nuw nsw i32 %563, 8
  %565 = or i32 %560, %564
  %566 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i32
  %569 = or i32 %565, %568
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %585, label %571

571:                                              ; preds = %550
  %572 = zext i8 %553 to i64
  %573 = shl nuw nsw i64 %572, 24
  %574 = zext i8 %557 to i64
  %575 = shl nuw nsw i64 %574, 16
  %576 = or i64 %575, %573
  %577 = zext i8 %562 to i64
  %578 = shl nuw nsw i64 %577, 8
  %579 = or i64 %576, %578
  %580 = zext i8 %567 to i64
  %581 = or i64 %579, %580
  %582 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %581
  %583 = bitcast i8* %582 to %"struct.OT::CmapSubtable"*
  %584 = icmp eq i8* %582, null
  br i1 %584, label %585, label %645

585:                                              ; preds = %550, %571
  br i1 %9, label %609, label %586

586:                                              ; preds = %585
  %587 = tail call i16 @llvm.bswap.i16(i16 %8) #10
  %588 = zext i16 %587 to i32
  br label %589

589:                                              ; preds = %604, %586
  %590 = phi i32 [ %588, %586 ], [ %592, %604 ]
  %591 = add nsw i32 %590, -1
  %592 = lshr i32 %591, 1
  %593 = zext i32 %592 to i64
  %594 = shl nuw nsw i64 %593, 3
  %595 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %594
  %596 = bitcast i8* %595 to i16*
  %597 = load i16, i16* %596, align 1
  %598 = icmp eq i16 %597, 0
  br i1 %598, label %599, label %604

599:                                              ; preds = %589
  %600 = getelementptr inbounds i8, i8* %595, i64 2
  %601 = bitcast i8* %600 to i16*
  %602 = load i16, i16* %601, align 1
  %603 = icmp eq i16 %602, 0
  br i1 %603, label %606, label %604

604:                                              ; preds = %589, %599
  %605 = icmp eq i32 %592, 0
  br i1 %605, label %609, label %589

606:                                              ; preds = %599
  %607 = zext i32 %592 to i64
  %608 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %607
  br label %609

609:                                              ; preds = %604, %606, %585
  %610 = phi %"struct.OT::EncodingRecord"* [ %608, %606 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %585 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %604 ]
  %611 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %612 = load i8, i8* %611, align 1
  %613 = zext i8 %612 to i32
  %614 = shl nuw i32 %613, 24
  %615 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl nuw nsw i32 %617, 16
  %619 = or i32 %618, %614
  %620 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = shl nuw nsw i32 %622, 8
  %624 = or i32 %619, %623
  %625 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %626 = load i8, i8* %625, align 1
  %627 = zext i8 %626 to i32
  %628 = or i32 %624, %627
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %644, label %630

630:                                              ; preds = %609
  %631 = zext i8 %612 to i64
  %632 = shl nuw nsw i64 %631, 24
  %633 = zext i8 %616 to i64
  %634 = shl nuw nsw i64 %633, 16
  %635 = or i64 %634, %632
  %636 = zext i8 %621 to i64
  %637 = shl nuw nsw i64 %636, 8
  %638 = or i64 %635, %637
  %639 = zext i8 %626 to i64
  %640 = or i64 %638, %639
  %641 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %640
  %642 = bitcast i8* %641 to %"struct.OT::CmapSubtable"*
  %643 = icmp eq i8* %641, null
  br i1 %643, label %644, label %645

644:                                              ; preds = %609, %630
  br label %645

645:                                              ; preds = %630, %571, %501, %431, %361, %286, %216, %146, %83, %84, %644
  %646 = phi %"struct.OT::CmapSubtable"* [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtable"*), %644 ], [ %81, %84 ], [ %81, %83 ], [ %158, %146 ], [ %228, %216 ], [ %298, %286 ], [ %373, %361 ], [ %443, %431 ], [ %513, %501 ], [ %583, %571 ], [ %642, %630 ]
  ret %"struct.OT::CmapSubtable"* %646
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtable"*
  %5 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %1, i32* %2)
  br i1 %5, label %11, label %6, !prof !3

6:                                                ; preds = %3
  %7 = icmp ult i32 %1, 256
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = add nuw nsw i32 %1, 61440
  %10 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %9, i32* %2)
  br label %11

11:                                               ; preds = %6, %3, %8
  %12 = phi i1 [ %10, %8 ], [ true, %3 ], [ false, %6 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtable"*
  %5 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtableLongSegmented"*
  %5 = tail call zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"* %4, i32 %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtableFormat4::accelerator_t"*
  %5 = tail call zeroext i1 @_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj(%"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i32 %1, i32* %2)
  ret i1 %5
}

declare i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::cmap"*, align 8
  %4 = alloca %"struct.OT::cmap"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.OT::cmap"** %4 to i8*
  %14 = bitcast %"struct.OT::cmap"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %93, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %99, %93 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %93 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  br label %114

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 4
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  br label %108

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -4
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %42 = bitcast i8* %20 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %108, !prof !3

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %20, i64 2
  %47 = bitcast i8* %46 to %"struct.OT::ArrayOf.211"*
  store i8* %20, i8** %14, align 8
  %48 = call zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.211"* %47, %struct.hb_sanitize_context_t* %0, %"struct.OT::cmap"** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %49 = load i32, i32* %11, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %48, label %51, label %89

51:                                               ; preds = %45
  %52 = bitcast i8* %20 to i16*
  %53 = bitcast i8* %46 to %"struct.OT::ArrayOf.211"*
  br i1 %50, label %54, label %100

54:                                               ; preds = %51
  store i32 0, i32* %11, align 4
  %55 = load i8*, i8** %8, align 8
  %56 = icmp ugt i8* %55, %20
  br i1 %56, label %66, label %57, !prof !2

57:                                               ; preds = %54
  %58 = load i8*, i8** %9, align 8
  %59 = icmp ult i8* %58, %20
  br i1 %59, label %66, label %60, !prof !2

60:                                               ; preds = %57
  %61 = ptrtoint i8* %58 to i64
  %62 = ptrtoint i8* %20 to i64
  %63 = sub i64 %61, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp ult i32 %64, 4
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %60, %57, %54
  %67 = bitcast %"struct.OT::cmap"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  br label %82

68:                                               ; preds = %60
  %69 = load i32, i32* %10, align 8
  %70 = add i32 %69, -4
  store i32 %70, i32* %10, align 8
  %71 = icmp sgt i32 %70, 0
  %72 = bitcast %"struct.OT::cmap"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  br i1 %71, label %73, label %82

73:                                               ; preds = %68
  %74 = load i16, i16* %52, align 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %82, !prof !3

76:                                               ; preds = %73
  %77 = bitcast %"struct.OT::cmap"** %3 to i8**
  store i8* %20, i8** %77, align 8
  %78 = call zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.211"* %53, %struct.hb_sanitize_context_t* %0, %"struct.OT::cmap"** nonnull dereferenceable(8) %3) #10
  %79 = xor i1 %78, true
  %80 = load i32, i32* %11, align 4
  %81 = icmp ne i32 %80, 0
  br label %82

82:                                               ; preds = %66, %68, %73, %76
  %83 = phi i1 [ false, %73 ], [ false, %68 ], [ %81, %76 ], [ false, %66 ]
  %84 = phi i8* [ %72, %73 ], [ %72, %68 ], [ %72, %76 ], [ %67, %66 ]
  %85 = phi i1 [ true, %73 ], [ true, %68 ], [ %79, %76 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %86 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %86) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %87 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #10
  %88 = or i1 %85, %83
  br i1 %88, label %112, label %103

89:                                               ; preds = %45
  br i1 %50, label %90, label %106

90:                                               ; preds = %89
  %91 = load i8, i8* %7, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %90
  %94 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %94, i8** %8, align 8
  %95 = load i32, i32* %15, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8* %97, i8** %9, align 8
  %98 = icmp eq i8* %94, null
  %99 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %98, label %109, label %16

100:                                              ; preds = %51
  %101 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %101) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %102 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10
  br label %103

103:                                              ; preds = %82, %100
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %114

104:                                              ; preds = %90
  %105 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

106:                                              ; preds = %89
  %107 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

108:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %109

109:                                              ; preds = %93, %104, %106, %108
  %110 = phi %struct.hb_blob_t* [ %17, %108 ], [ %107, %106 ], [ %105, %104 ], [ %99, %93 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %110) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %111 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #10
  br label %112

112:                                              ; preds = %109, %82
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %113 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %114

114:                                              ; preds = %112, %103, %35
  %115 = phi %struct.hb_blob_t* [ %1, %35 ], [ %113, %112 ], [ %1, %103 ]
  ret %struct.hb_blob_t* %115
}

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #1

declare i8* @hb_blob_get_data_writable(%struct.hb_blob_t*, i32*) local_unnamed_addr #1

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #1

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #1

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #1

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.211"*, %struct.hb_sanitize_context_t*, %"struct.OT::cmap"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %138, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %138, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.211"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %138, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %138, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 0
  %25 = bitcast %"struct.OT::ArrayOf.211"* %0 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #10
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %24, i64 0, i32 0, i32 0, i32 0, i64 0
  %30 = shl nuw nsw i32 %28, 3
  %31 = icmp eq i16 %26, 0
  br i1 %31, label %138, label %32

32:                                               ; preds = %23
  %33 = icmp ugt i8* %6, %29
  %34 = icmp ult i8* %10, %29
  %35 = or i1 %33, %34
  br i1 %35, label %138, label %36, !prof !6

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.OT::EncodingRecord"* %24 to i64
  %38 = sub i64 %13, %37
  %39 = trunc i64 %38 to i32
  %40 = icmp ugt i32 %30, %39
  br i1 %40, label %138, label %41, !prof !2

41:                                               ; preds = %36
  %42 = sub nsw i32 %21, %30
  store i32 %42, i32* %19, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %138, !prof !3

44:                                               ; preds = %41
  %45 = load i16, i16* %25, align 1
  %46 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %47 = icmp eq i16 %45, 0
  br i1 %47, label %138, label %48

48:                                               ; preds = %44
  %49 = tail call i16 @llvm.bswap.i16(i16 %45) #10
  %50 = bitcast %"struct.OT::cmap"** %2 to i8**
  %51 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %52 = zext i16 %49 to i64
  %53 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %53, i64 0, i32 0, i32 0, i32 0, i64 0
  %55 = icmp ugt i8* %6, %54
  br i1 %55, label %138, label %56, !prof !2

56:                                               ; preds = %48, %133
  %57 = phi i8* [ %136, %133 ], [ %54, %48 ]
  %58 = phi %"struct.OT::EncodingRecord"* [ %135, %133 ], [ %53, %48 ]
  %59 = phi i64 [ %131, %133 ], [ 0, %48 ]
  %60 = phi i8* [ %134, %133 ], [ %6, %48 ]
  %61 = load i8*, i8** %50, align 8
  %62 = load i8*, i8** %9, align 8
  %63 = icmp ult i8* %62, %57
  br i1 %63, label %138, label %64, !prof !2

64:                                               ; preds = %56
  %65 = ptrtoint i8* %62 to i64
  %66 = ptrtoint %"struct.OT::EncodingRecord"* %58 to i64
  %67 = sub i64 %65, %66
  %68 = trunc i64 %67 to i32
  %69 = icmp ult i32 %68, 8
  br i1 %69, label %138, label %70, !prof !2

70:                                               ; preds = %64
  %71 = load i32, i32* %19, align 8
  %72 = add i32 %71, -8
  store i32 %72, i32* %19, align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %138, !prof !5

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 %59, i32 2
  %76 = getelementptr inbounds %"struct.OT::OffsetTo.212", %"struct.OT::OffsetTo.212"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %77 = icmp ugt i8* %60, %76
  %78 = icmp ult i8* %62, %76
  %79 = or i1 %77, %78
  br i1 %79, label %138, label %80, !prof !6

80:                                               ; preds = %74
  %81 = ptrtoint %"struct.OT::OffsetTo.212"* %75 to i64
  %82 = sub i64 %65, %81
  %83 = trunc i64 %82 to i32
  %84 = icmp ult i32 %83, 4
  br i1 %84, label %138, label %85, !prof !2

85:                                               ; preds = %80
  %86 = add i32 %71, -12
  store i32 %86, i32* %19, align 8
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %138, !prof !5

88:                                               ; preds = %85
  %89 = load i8, i8* %76, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw i32 %90, 24
  %92 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 16
  %96 = or i32 %95, %91
  %97 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 8
  %101 = or i32 %96, %100
  %102 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = or i32 %101, %104
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %130, label %107

107:                                              ; preds = %88
  %108 = zext i8 %89 to i64
  %109 = shl nuw nsw i64 %108, 24
  %110 = zext i8 %93 to i64
  %111 = shl nuw nsw i64 %110, 16
  %112 = or i64 %111, %109
  %113 = zext i8 %98 to i64
  %114 = shl nuw nsw i64 %113, 8
  %115 = or i64 %112, %114
  %116 = zext i8 %103 to i64
  %117 = or i64 %115, %116
  %118 = getelementptr inbounds i8, i8* %61, i64 %117
  %119 = bitcast i8* %118 to %"struct.OT::CmapSubtable"*
  %120 = tail call zeroext i1 @_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t(%"struct.OT::CmapSubtable"* %119, %struct.hb_sanitize_context_t* %1) #10
  br i1 %120, label %130, label %121

121:                                              ; preds = %107
  %122 = load i32, i32* %46, align 4
  %123 = icmp ugt i32 %122, 31
  br i1 %123, label %138, label %124, !prof !7

124:                                              ; preds = %121
  %125 = add nuw nsw i32 %122, 1
  store i32 %125, i32* %46, align 4
  %126 = load i8, i8* %51, align 8, !range !4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %138, label %128, !prof !7

128:                                              ; preds = %124
  %129 = bitcast %"struct.OT::OffsetTo.212"* %75 to i32*
  store i32 0, i32* %129, align 1
  br label %130

130:                                              ; preds = %88, %107, %128
  %131 = add nuw nsw i64 %59, 1
  %132 = icmp ult i64 %131, %52
  br i1 %132, label %133, label %138

133:                                              ; preds = %130
  %134 = load i8*, i8** %5, align 8
  %135 = getelementptr inbounds %"struct.OT::ArrayOf.211", %"struct.OT::ArrayOf.211"* %0, i64 0, i32 1, i64 %131
  %136 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %135, i64 0, i32 0, i32 0, i32 0, i64 0
  %137 = icmp ugt i8* %134, %136
  br i1 %137, label %138, label %56, !prof !2

138:                                              ; preds = %121, %124, %74, %80, %85, %133, %56, %64, %70, %130, %48, %23, %44, %32, %36, %3, %8, %12, %18, %41
  %139 = phi i1 [ false, %41 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %36 ], [ false, %32 ], [ true, %44 ], [ true, %23 ], [ false, %48 ], [ true, %130 ], [ false, %70 ], [ false, %64 ], [ false, %56 ], [ false, %133 ], [ false, %85 ], [ false, %80 ], [ false, %74 ], [ false, %124 ], [ false, %121 ]
  ret i1 %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t(%"struct.OT::CmapSubtable"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::CmapSubtableFormat14"*, align 8
  %4 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %302, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %302, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::CmapSubtable"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %302, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %302

23:                                               ; preds = %18
  %24 = bitcast %"struct.OT::CmapSubtable"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #10
  switch i16 %26, label %302 [
    i16 0, label %27
    i16 4, label %32
    i16 6, label %77
    i16 10, label %118
    i16 12, label %174
    i16 13, label %230
    i16 14, label %286
  ]

27:                                               ; preds = %23
  %28 = icmp ult i32 %16, 262
  br i1 %28, label %302, label %29, !prof !2

29:                                               ; preds = %27
  %30 = add i32 %20, -264
  store i32 %30, i32* %19, align 8
  %31 = icmp sgt i32 %30, 0
  br label %302

32:                                               ; preds = %23
  %33 = icmp ult i32 %16, 14
  br i1 %33, label %302, label %34, !prof !2

34:                                               ; preds = %32
  %35 = add i32 %20, -16
  store i32 %35, i32* %19, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %302, !prof !3

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.OT::IntType"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #10
  %42 = zext i16 %41 to i32
  %43 = icmp eq i16 %40, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %37
  %45 = icmp ult i32 %16, %42
  br i1 %45, label %51, label %46, !prof !2

46:                                               ; preds = %44
  %47 = sub nsw i32 %35, %42
  store i32 %47, i32* %19, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %51, !prof !3

49:                                               ; preds = %46
  %50 = load i16, i16* %39, align 1
  br label %65

51:                                               ; preds = %46, %44
  %52 = icmp ult i64 %15, 65535
  %53 = select i1 %52, i64 %15, i64 65535
  %54 = trunc i64 %53 to i16
  %55 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %56, 31
  br i1 %57, label %302, label %58

58:                                               ; preds = %51
  %59 = add nuw nsw i32 %56, 1
  store i32 %59, i32* %55, align 4
  %60 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %302, label %63

63:                                               ; preds = %58
  %64 = tail call i16 @llvm.bswap.i16(i16 %54) #10
  store i16 %64, i16* %39, align 1
  br label %65

65:                                               ; preds = %63, %49, %37
  %66 = phi i16 [ %50, %49 ], [ 0, %37 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %68 = bitcast [256 x %"struct.OT::IntType.6"]* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #10
  %71 = zext i16 %70 to i32
  %72 = shl nuw nsw i32 %71, 2
  %73 = add nuw nsw i32 %72, 16
  %74 = tail call i16 @llvm.bswap.i16(i16 %66) #10
  %75 = zext i16 %74 to i32
  %76 = icmp ule i32 %73, %75
  br label %302

77:                                               ; preds = %23
  %78 = icmp ult i32 %16, 10
  br i1 %78, label %302, label %79, !prof !2

79:                                               ; preds = %77
  %80 = add i32 %20, -12
  store i32 %80, i32* %19, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %302

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 2
  %84 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %83, i64 0, i32 0, i32 0
  %85 = icmp ugt i8* %6, %84
  %86 = icmp ult i8* %10, %84
  %87 = or i1 %85, %86
  br i1 %87, label %302, label %88, !prof !6

88:                                               ; preds = %82
  %89 = ptrtoint %"struct.OT::IntType.6"* %83 to i64
  %90 = sub i64 %13, %89
  %91 = trunc i64 %90 to i32
  %92 = icmp ult i32 %91, 2
  br i1 %92, label %302, label %93, !prof !2

93:                                               ; preds = %88
  %94 = add i32 %20, -14
  store i32 %94, i32* %19, align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %302, !prof !5

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 4
  %98 = bitcast %"struct.OT::IntType.6"* %83 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #10
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %97, i64 0, i32 0, i32 0
  %103 = shl nuw nsw i32 %101, 1
  %104 = icmp eq i16 %99, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %96
  %106 = icmp ugt i8* %6, %102
  %107 = icmp ult i8* %10, %102
  %108 = or i1 %106, %107
  br i1 %108, label %302, label %109, !prof !6

109:                                              ; preds = %105
  %110 = ptrtoint %"struct.OT::IntType.6"* %97 to i64
  %111 = sub i64 %13, %110
  %112 = trunc i64 %111 to i32
  %113 = icmp ugt i32 %103, %112
  br i1 %113, label %302, label %114, !prof !2

114:                                              ; preds = %109
  %115 = sub nsw i32 %94, %103
  store i32 %115, i32* %19, align 8
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %302, !prof !3

117:                                              ; preds = %114, %96
  br label %302

118:                                              ; preds = %23
  %119 = icmp ult i32 %16, 20
  br i1 %119, label %302, label %120, !prof !2

120:                                              ; preds = %118
  %121 = add i32 %20, -22
  store i32 %121, i32* %19, align 8
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %302

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %125 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %124, i64 0, i32 0, i32 0
  %126 = icmp ugt i8* %6, %125
  %127 = icmp ult i8* %10, %125
  %128 = or i1 %126, %127
  br i1 %128, label %302, label %129, !prof !6

129:                                              ; preds = %123
  %130 = ptrtoint %"struct.OT::IntType.6"* %124 to i64
  %131 = sub i64 %13, %130
  %132 = trunc i64 %131 to i32
  %133 = icmp ult i32 %132, 4
  br i1 %133, label %302, label %134, !prof !2

134:                                              ; preds = %129
  %135 = add i32 %20, -26
  store i32 %135, i32* %19, align 8
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %137, label %302, !prof !5

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 14
  %139 = load i8, i8* %125, align 1
  %140 = zext i8 %139 to i32
  %141 = shl nuw i32 %140, 24
  %142 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 11, i32 0, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = shl nuw nsw i32 %144, 16
  %146 = or i32 %145, %141
  %147 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 12, i32 0, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 8
  %151 = or i32 %146, %150
  %152 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 13, i32 0, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = or i32 %151, %154
  %156 = icmp ult i32 %155, 2147483647
  br i1 %156, label %157, label %302, !prof !5

157:                                              ; preds = %137
  %158 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %138, i64 0, i32 0, i32 0
  %159 = shl i32 %155, 1
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %173, label %161

161:                                              ; preds = %157
  %162 = icmp ugt i8* %6, %158
  %163 = icmp ult i8* %10, %158
  %164 = or i1 %162, %163
  br i1 %164, label %302, label %165, !prof !6

165:                                              ; preds = %161
  %166 = ptrtoint %"struct.OT::IntType.6"* %138 to i64
  %167 = sub i64 %13, %166
  %168 = trunc i64 %167 to i32
  %169 = icmp ugt i32 %159, %168
  br i1 %169, label %302, label %170, !prof !2

170:                                              ; preds = %165
  %171 = sub i32 %135, %159
  store i32 %171, i32* %19, align 8
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %302, !prof !3

173:                                              ; preds = %170, %157
  br label %302

174:                                              ; preds = %23
  %175 = icmp ult i32 %16, 16
  br i1 %175, label %302, label %176, !prof !2

176:                                              ; preds = %174
  %177 = add i32 %20, -18
  store i32 %177, i32* %19, align 8
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %302

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %181 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %180, i64 0, i32 0, i32 0
  %182 = icmp ugt i8* %6, %181
  %183 = icmp ult i8* %10, %181
  %184 = or i1 %182, %183
  br i1 %184, label %302, label %185, !prof !6

185:                                              ; preds = %179
  %186 = ptrtoint %"struct.OT::IntType.6"* %180 to i64
  %187 = sub i64 %13, %186
  %188 = trunc i64 %187 to i32
  %189 = icmp ult i32 %188, 4
  br i1 %189, label %302, label %190, !prof !2

190:                                              ; preds = %185
  %191 = add i32 %20, -22
  store i32 %191, i32* %19, align 8
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %302, !prof !5

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %195 = load i8, i8* %181, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw i32 %196, 24
  %198 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl nuw nsw i32 %200, 16
  %202 = or i32 %201, %197
  %203 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = shl nuw nsw i32 %205, 8
  %207 = or i32 %202, %206
  %208 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %207, %210
  %212 = icmp ult i32 %211, 357913941
  br i1 %212, label %213, label %302, !prof !5

213:                                              ; preds = %193
  %214 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %194, i64 0, i32 0, i32 0
  %215 = mul i32 %211, 12
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %229, label %217

217:                                              ; preds = %213
  %218 = icmp ugt i8* %6, %214
  %219 = icmp ult i8* %10, %214
  %220 = or i1 %218, %219
  br i1 %220, label %302, label %221, !prof !6

221:                                              ; preds = %217
  %222 = ptrtoint %"struct.OT::IntType.6"* %194 to i64
  %223 = sub i64 %13, %222
  %224 = trunc i64 %223 to i32
  %225 = icmp ugt i32 %215, %224
  br i1 %225, label %302, label %226, !prof !2

226:                                              ; preds = %221
  %227 = sub i32 %191, %215
  store i32 %227, i32* %19, align 8
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %302, !prof !3

229:                                              ; preds = %226, %213
  br label %302

230:                                              ; preds = %23
  %231 = icmp ult i32 %16, 16
  br i1 %231, label %302, label %232, !prof !2

232:                                              ; preds = %230
  %233 = add i32 %20, -18
  store i32 %233, i32* %19, align 8
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %302

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %237 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %236, i64 0, i32 0, i32 0
  %238 = icmp ugt i8* %6, %237
  %239 = icmp ult i8* %10, %237
  %240 = or i1 %238, %239
  br i1 %240, label %302, label %241, !prof !6

241:                                              ; preds = %235
  %242 = ptrtoint %"struct.OT::IntType.6"* %236 to i64
  %243 = sub i64 %13, %242
  %244 = trunc i64 %243 to i32
  %245 = icmp ult i32 %244, 4
  br i1 %245, label %302, label %246, !prof !2

246:                                              ; preds = %241
  %247 = add i32 %20, -22
  store i32 %247, i32* %19, align 8
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %302, !prof !5

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %251 = load i8, i8* %237, align 1
  %252 = zext i8 %251 to i32
  %253 = shl nuw i32 %252, 24
  %254 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl nuw nsw i32 %256, 16
  %258 = or i32 %257, %253
  %259 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = shl nuw nsw i32 %261, 8
  %263 = or i32 %258, %262
  %264 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %263, %266
  %268 = icmp ult i32 %267, 357913941
  br i1 %268, label %269, label %302, !prof !5

269:                                              ; preds = %249
  %270 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %250, i64 0, i32 0, i32 0
  %271 = mul i32 %267, 12
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %285, label %273

273:                                              ; preds = %269
  %274 = icmp ugt i8* %6, %270
  %275 = icmp ult i8* %10, %270
  %276 = or i1 %274, %275
  br i1 %276, label %302, label %277, !prof !6

277:                                              ; preds = %273
  %278 = ptrtoint %"struct.OT::IntType.6"* %250 to i64
  %279 = sub i64 %13, %278
  %280 = trunc i64 %279 to i32
  %281 = icmp ugt i32 %271, %280
  br i1 %281, label %302, label %282, !prof !2

282:                                              ; preds = %277
  %283 = sub i32 %247, %271
  store i32 %283, i32* %19, align 8
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %302, !prof !3

285:                                              ; preds = %282, %269
  br label %302

286:                                              ; preds = %23
  %287 = icmp ult i32 %16, 10
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %286
  %289 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #10
  br label %299

290:                                              ; preds = %286
  %291 = add i32 %20, -12
  store i32 %291, i32* %19, align 8
  %292 = icmp sgt i32 %291, 0
  %293 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #10
  br i1 %292, label %294, label %299

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %296 = bitcast [256 x %"struct.OT::IntType.6"]* %295 to %"struct.OT::ArrayOf.15"*
  %297 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to %"struct.OT::CmapSubtable"**
  store %"struct.OT::CmapSubtable"* %0, %"struct.OT::CmapSubtable"** %297, align 8
  %298 = call zeroext i1 @_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.15"* %296, %struct.hb_sanitize_context_t* %1, %"struct.OT::CmapSubtableFormat14"** nonnull dereferenceable(8) %3) #10
  br label %299

299:                                              ; preds = %288, %290, %294
  %300 = phi i8* [ %293, %290 ], [ %293, %294 ], [ %289, %288 ]
  %301 = phi i1 [ false, %290 ], [ %298, %294 ], [ false, %288 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #10
  br label %302

302:                                              ; preds = %232, %230, %235, %241, %246, %249, %273, %277, %282, %285, %176, %174, %179, %185, %190, %193, %217, %221, %226, %229, %120, %118, %123, %129, %134, %137, %161, %165, %170, %173, %117, %114, %109, %105, %93, %88, %82, %79, %77, %65, %58, %51, %34, %32, %29, %27, %2, %8, %12, %23, %18, %299
  %303 = phi i1 [ %301, %299 ], [ false, %18 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ false, %27 ], [ %31, %29 ], [ %76, %65 ], [ false, %34 ], [ false, %32 ], [ false, %58 ], [ false, %51 ], [ false, %79 ], [ false, %77 ], [ true, %117 ], [ false, %114 ], [ false, %93 ], [ false, %88 ], [ false, %82 ], [ false, %109 ], [ false, %105 ], [ false, %120 ], [ false, %118 ], [ true, %173 ], [ false, %170 ], [ false, %134 ], [ false, %129 ], [ false, %123 ], [ false, %137 ], [ false, %165 ], [ false, %161 ], [ false, %176 ], [ false, %174 ], [ true, %229 ], [ false, %226 ], [ false, %190 ], [ false, %185 ], [ false, %179 ], [ false, %193 ], [ false, %221 ], [ false, %217 ], [ false, %232 ], [ false, %230 ], [ true, %285 ], [ false, %282 ], [ false, %246 ], [ false, %241 ], [ false, %235 ], [ false, %249 ], [ false, %277 ], [ false, %273 ]
  ret i1 %303
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.15"*, %struct.hb_sanitize_context_t*, %"struct.OT::CmapSubtableFormat14"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %114, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %114, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.15"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %114, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %114, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 390451572
  br i1 %42, label %43, label %114, !prof !5

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %24, i64 0, i32 0, i32 0, i32 0, i64 0
  %45 = mul i32 %41, 11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %114, label %51, !prof !6

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::VariationSelectorRecord"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %114, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %114, !prof !3

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %114, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.OT::CmapSubtableFormat14"** %2 to i8**
  %79 = zext i32 %75 to i64
  %80 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 1, i64 0
  %81 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %80, i64 0, i32 0, i32 0, i32 0, i64 0
  %82 = icmp ugt i8* %6, %81
  br i1 %82, label %114, label %90, !prof !2

83:                                               ; preds = %110
  %84 = icmp eq i64 %113, %79
  br i1 %84, label %114, label %85

85:                                               ; preds = %83
  %86 = load i8*, i8** %5, align 8
  %87 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 1, i64 %113
  %88 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %87, i64 0, i32 0, i32 0, i32 0, i64 0
  %89 = icmp ugt i8* %86, %88
  br i1 %89, label %114, label %90, !prof !2

90:                                               ; preds = %77, %85
  %91 = phi i8* [ %88, %85 ], [ %81, %77 ]
  %92 = phi %"struct.OT::VariationSelectorRecord"* [ %87, %85 ], [ %80, %77 ]
  %93 = phi i64 [ %113, %85 ], [ 0, %77 ]
  %94 = load i8*, i8** %78, align 8
  %95 = load i8*, i8** %9, align 8
  %96 = icmp ult i8* %95, %91
  br i1 %96, label %114, label %97, !prof !2

97:                                               ; preds = %90
  %98 = ptrtoint i8* %95 to i64
  %99 = ptrtoint %"struct.OT::VariationSelectorRecord"* %92 to i64
  %100 = sub i64 %98, %99
  %101 = trunc i64 %100 to i32
  %102 = icmp ult i32 %101, 11
  br i1 %102, label %114, label %103, !prof !2

103:                                              ; preds = %97
  %104 = load i32, i32* %19, align 8
  %105 = add i32 %104, -11
  store i32 %105, i32* %19, align 8
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %114, !prof !5

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 1, i64 %93, i32 1
  %109 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo"* %108, %struct.hb_sanitize_context_t* %1, i8* %94) #10
  br i1 %109, label %110, label %114, !prof !5

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"struct.OT::ArrayOf.15", %"struct.OT::ArrayOf.15"* %0, i64 0, i32 1, i64 %93, i32 2
  %112 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.18"* %111, %struct.hb_sanitize_context_t* %1, i8* %94) #10
  %113 = add nuw nsw i64 %93, 1
  br i1 %112, label %83, label %114, !prof !3

114:                                              ; preds = %83, %85, %90, %97, %103, %107, %110, %77, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %115 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ false, %77 ], [ false, %110 ], [ false, %107 ], [ false, %103 ], [ false, %97 ], [ false, %90 ], [ false, %85 ], [ true, %83 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %111, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %111, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %111, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %111

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %100, label %57, !prof !6

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %100, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100, !prof !5

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = load i8, i8* %53, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %53, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %53, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %53, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = icmp ult i32 %83, 1073741823
  br i1 %84, label %85, label %100, !prof !5

85:                                               ; preds = %65
  %86 = shl i32 %83, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i8* %6, %66
  %90 = icmp ult i8* %10, %66
  %91 = or i1 %89, %90
  br i1 %91, label %100, label %92, !prof !6

92:                                               ; preds = %88
  %93 = ptrtoint i8* %66 to i64
  %94 = sub i64 %13, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %86, %95
  br i1 %96, label %100, label %97, !prof !2

97:                                               ; preds = %92
  %98 = sub i32 %63, %86
  store i32 %98, i32* %19, align 8
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %111, label %100, !prof !3

100:                                              ; preds = %97, %62, %57, %42, %65, %92, %88
  %101 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, 31
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = add nuw nsw i32 %102, 1
  store i32 %105, i32* %101, align 4
  %106 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %107 = load i8, i8* %106, align 8, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.OT::OffsetTo"* %0 to i32*
  store i32 0, i32* %110, align 1
  br label %111

111:                                              ; preds = %109, %104, %100, %3, %8, %12, %97, %85, %23, %18
  %112 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %85 ], [ true, %97 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %109 ], [ false, %104 ], [ false, %100 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.18"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.18", %"struct.OT::OffsetTo.18"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %111, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %111, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.18"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %111, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %111

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.18", %"struct.OT::OffsetTo.18"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.18", %"struct.OT::OffsetTo.18"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.18", %"struct.OT::OffsetTo.18"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %100, label %57, !prof !6

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %100, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100, !prof !5

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = load i8, i8* %53, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %53, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %53, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %53, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = icmp ult i32 %83, 858993459
  br i1 %84, label %85, label %100, !prof !5

85:                                               ; preds = %65
  %86 = mul i32 %83, 5
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i8* %6, %66
  %90 = icmp ult i8* %10, %66
  %91 = or i1 %89, %90
  br i1 %91, label %100, label %92, !prof !6

92:                                               ; preds = %88
  %93 = ptrtoint i8* %66 to i64
  %94 = sub i64 %13, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %86, %95
  br i1 %96, label %100, label %97, !prof !2

97:                                               ; preds = %92
  %98 = sub i32 %63, %86
  store i32 %98, i32* %19, align 8
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %111, label %100, !prof !3

100:                                              ; preds = %97, %62, %57, %42, %65, %92, %88
  %101 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, 31
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = add nuw nsw i32 %102, 1
  store i32 %105, i32* %101, align 4
  %106 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %107 = load i8, i8* %106, align 8, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.OT::OffsetTo.18"* %0 to i32*
  store i32 0, i32* %110, align 1
  br label %111

111:                                              ; preds = %109, %104, %100, %3, %8, %12, %97, %85, %23, %18
  %112 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %85 ], [ true, %97 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %109 ], [ false, %104 ], [ false, %100 ]
  ret i1 %112
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.OT::CmapSubtable"* %0 to i16*
  %5 = load i16, i16* %4, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5) #10
  switch i16 %6, label %197 [
    i16 0, label %7
    i16 4, label %16
    i16 6, label %19
    i16 10, label %42
    i16 12, label %91
    i16 13, label %94
  ]

7:                                                ; preds = %3
  %8 = icmp ult i32 %1, 256
  br i1 %8, label %9, label %197

9:                                                ; preds = %7
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 %10, i32 0, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %197, label %14

14:                                               ; preds = %9
  %15 = zext i8 %12 to i32
  store i32 %15, i32* %2, align 4
  br label %197

16:                                               ; preds = %3
  %17 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableFormat4"*
  %18 = tail call zeroext i1 @_ZNK2OT19CmapSubtableFormat49get_glyphEjPj(%"struct.OT::CmapSubtableFormat4"* %17, i32 %1, i32* %2)
  br label %197

19:                                               ; preds = %3
  %20 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed"*
  %21 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 2
  %22 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %23 = bitcast [256 x %"struct.OT::IntType.6"]* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #10
  %26 = zext i16 %25 to i32
  %27 = sub i32 %1, %26
  %28 = bitcast %"struct.OT::IntType.6"* %21 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #10
  %31 = zext i16 %30 to i32
  %32 = icmp ult i32 %27, %31
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed", %"struct.OT::CmapSubtableTrimmed"* %20, i64 0, i32 4, i32 1, i64 %33
  %35 = bitcast %"struct.OT::HBGlyphID"* %34 to i16*
  %36 = select i1 %32, i16* %35, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %37 = load i16, i16* %36, align 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %197, label %39

39:                                               ; preds = %19
  %40 = tail call i16 @llvm.bswap.i16(i16 %37) #10
  %41 = zext i16 %40 to i32
  store i32 %41, i32* %2, align 4
  br label %197

42:                                               ; preds = %3
  %43 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed.8"*
  %44 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6, i32 0, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw i32 %46, 24
  %48 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 16
  %52 = or i32 %51, %47
  %53 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 8
  %57 = or i32 %52, %56
  %58 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = or i32 %57, %60
  %62 = sub i32 %1, %61
  %63 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10, i32 0, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw i32 %65, 24
  %67 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 11, i32 0, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 16
  %71 = or i32 %70, %66
  %72 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 12, i32 0, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 8
  %76 = or i32 %71, %75
  %77 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 13, i32 0, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = or i32 %76, %79
  %81 = icmp ugt i32 %80, %62
  %82 = zext i32 %62 to i64
  %83 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.8", %"struct.OT::CmapSubtableTrimmed.8"* %43, i64 0, i32 4, i32 1, i64 %82
  %84 = bitcast %"struct.OT::HBGlyphID"* %83 to i16*
  %85 = select i1 %81, i16* %84, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %86 = load i16, i16* %85, align 1
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %197, label %88

88:                                               ; preds = %42
  %89 = tail call i16 @llvm.bswap.i16(i16 %86) #10
  %90 = zext i16 %89 to i32
  store i32 %90, i32* %2, align 4
  br label %197

91:                                               ; preds = %3
  %92 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableLongSegmented"*
  %93 = tail call zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"* %92, i32 %1, i32* %2)
  br label %197

94:                                               ; preds = %3
  %95 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %96 = bitcast %"struct.OT::IntType.6"* %95 to %"struct.OT::SortedArrayOf"*
  %97 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %95, i64 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw i32 %99, 24
  %101 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 16
  %105 = or i32 %104, %100
  %106 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %105, %109
  %111 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  %115 = icmp slt i32 %114, 1
  br i1 %115, label %175, label %116

116:                                              ; preds = %94
  %117 = add nsw i32 %114, -1
  br label %118

118:                                              ; preds = %168, %116
  %119 = phi i32 [ %117, %116 ], [ %170, %168 ]
  %120 = phi i32 [ 0, %116 ], [ %169, %168 ]
  %121 = add i32 %120, %119
  %122 = lshr i32 %121, 1
  %123 = zext i32 %122 to i64
  %124 = mul nuw nsw i64 %123, 12
  %125 = getelementptr inbounds %"struct.OT::SortedArrayOf", %"struct.OT::SortedArrayOf"* %96, i64 0, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl nuw i32 %127, 24
  %129 = getelementptr inbounds i8, i8* %125, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = shl nuw nsw i32 %131, 16
  %133 = or i32 %132, %128
  %134 = getelementptr inbounds i8, i8* %125, i64 2
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = shl nuw nsw i32 %136, 8
  %138 = or i32 %133, %137
  %139 = getelementptr inbounds i8, i8* %125, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = or i32 %138, %141
  %143 = icmp ugt i32 %142, %1
  br i1 %143, label %144, label %146

144:                                              ; preds = %118
  %145 = add nsw i32 %122, -1
  br label %168

146:                                              ; preds = %118
  %147 = getelementptr inbounds i8, i8* %125, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 16
  %151 = getelementptr inbounds i8, i8* %125, i64 4
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = shl nuw i32 %153, 24
  %155 = or i32 %154, %150
  %156 = getelementptr inbounds i8, i8* %125, i64 6
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = shl nuw nsw i32 %158, 8
  %160 = or i32 %155, %159
  %161 = getelementptr inbounds i8, i8* %125, i64 7
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = or i32 %160, %163
  %165 = icmp ult i32 %164, %1
  br i1 %165, label %166, label %172

166:                                              ; preds = %146
  %167 = add nuw nsw i32 %122, 1
  br label %168

168:                                              ; preds = %166, %144
  %169 = phi i32 [ %120, %144 ], [ %167, %166 ]
  %170 = phi i32 [ %145, %144 ], [ %119, %166 ]
  %171 = icmp sgt i32 %169, %170
  br i1 %171, label %175, label %118

172:                                              ; preds = %146
  %173 = zext i32 %122 to i64
  %174 = getelementptr inbounds %"struct.OT::SortedArrayOf", %"struct.OT::SortedArrayOf"* %96, i64 0, i32 0, i32 1, i64 %173
  br label %175

175:                                              ; preds = %168, %94, %172
  %176 = phi %"struct.OT::CmapSubtableLongGroup"* [ %174, %172 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %94 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %168 ]
  %177 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 0
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = shl nuw i32 %179, 24
  %181 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 16
  %185 = or i32 %184, %180
  %186 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 2
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = shl nuw nsw i32 %188, 8
  %190 = or i32 %185, %189
  %191 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 3
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = or i32 %190, %193
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %175
  store i32 %194, i32* %2, align 4
  br label %197

197:                                              ; preds = %196, %175, %88, %42, %39, %19, %14, %9, %7, %3, %91, %16
  %198 = phi i1 [ %93, %91 ], [ %18, %16 ], [ false, %3 ], [ true, %14 ], [ false, %9 ], [ false, %7 ], [ true, %39 ], [ false, %19 ], [ true, %88 ], [ false, %42 ], [ true, %196 ], [ false, %175 ]
  ret i1 %198
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT19CmapSubtableFormat49get_glyphEjPj(%"struct.OT::CmapSubtableFormat4"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 3
  %5 = bitcast %"struct.OT::IntType"* %4 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #10
  %8 = lshr i16 %7, 1
  %9 = zext i16 %8 to i32
  %10 = zext i16 %8 to i64
  %11 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 7, i32 0, i64 %10
  %12 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %11, i64 1
  %13 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %12, i64 %10
  %14 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %13, i64 %10
  %15 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %14, i64 %10
  %16 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 1
  %17 = bitcast %"struct.OT::IntType"* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #10
  %20 = zext i16 %19 to i32
  %21 = shl nuw nsw i32 %9, 3
  %22 = add nsw i32 %20, -16
  %23 = sub nsw i32 %22, %21
  %24 = lshr i32 %23, 1
  %25 = icmp eq i16 %8, 0
  br i1 %25, label %101, label %26

26:                                               ; preds = %3
  %27 = add nuw nsw i32 %9, 1
  %28 = add nsw i32 %9, -1
  %29 = zext i32 %27 to i64
  br label %30

30:                                               ; preds = %55, %26
  %31 = phi i32 [ %28, %26 ], [ %57, %55 ]
  %32 = phi i32 [ 0, %26 ], [ %56, %55 ]
  %33 = add i32 %32, %31
  %34 = lshr i32 %33, 1
  %35 = and i32 %33, -2
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #10
  %41 = zext i16 %40 to i32
  %42 = icmp ult i32 %41, %1
  br i1 %42, label %53, label %43

43:                                               ; preds = %30
  %44 = bitcast i8* %37 to %struct.CustomRange*
  %45 = getelementptr inbounds %struct.CustomRange, %struct.CustomRange* %44, i64 %29, i32 0
  %46 = bitcast %"struct.OT::IntType"* %45 to i16*
  %47 = load i16, i16* %46, align 1
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #10
  %49 = zext i16 %48 to i32
  %50 = icmp ugt i32 %49, %1
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = add nsw i32 %34, -1
  br label %55

53:                                               ; preds = %30
  %54 = add nuw nsw i32 %34, 1
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32 [ %32, %51 ], [ %54, %53 ]
  %57 = phi i32 [ %52, %51 ], [ %31, %53 ]
  %58 = icmp sgt i32 %56, %57
  br i1 %58, label %101, label %30

59:                                               ; preds = %43
  %60 = icmp eq i8* %37, null
  br i1 %60, label %101, label %61

61:                                               ; preds = %59
  %62 = zext i32 %34 to i64
  %63 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %14, i64 %62
  %64 = bitcast %"struct.OT::IntType"* %63 to i16*
  %65 = load i16, i16* %64, align 1
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %61
  %68 = tail call i16 @llvm.bswap.i16(i16 %65) #10
  %69 = lshr i16 %68, 1
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %12, i64 %62
  %72 = bitcast %"struct.OT::IntType"* %71 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = tail call i16 @llvm.bswap.i16(i16 %73) #10
  %75 = zext i16 %74 to i32
  %76 = sub i32 %1, %9
  %77 = add i32 %76, %34
  %78 = add i32 %77, %70
  %79 = sub i32 %78, %75
  %80 = icmp ult i32 %79, %24
  br i1 %80, label %81, label %101, !prof !3

81:                                               ; preds = %67
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %15, i64 %82
  %84 = bitcast %"struct.OT::IntType"* %83 to i16*
  %85 = load i16, i16* %84, align 1
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %101, label %87, !prof !2

87:                                               ; preds = %81
  %88 = tail call i16 @llvm.bswap.i16(i16 %85) #10
  %89 = zext i16 %88 to i32
  br label %90

90:                                               ; preds = %61, %87
  %91 = phi i32 [ %89, %87 ], [ %1, %61 ]
  %92 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %13, i64 %62
  %93 = bitcast %"struct.OT::IntType"* %92 to i16*
  %94 = load i16, i16* %93, align 1
  %95 = tail call i16 @llvm.bswap.i16(i16 %94) #10
  %96 = zext i16 %95 to i32
  %97 = add i32 %91, %96
  %98 = and i32 %97, 65535
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %90
  store i32 %98, i32* %2, align 4
  br label %101

101:                                              ; preds = %55, %3, %59, %67, %81, %90, %100
  %102 = phi i1 [ false, %59 ], [ true, %100 ], [ false, %90 ], [ false, %3 ], [ false, %67 ], [ false, %81 ], [ false, %55 ]
  ret i1 %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %82, label %23

23:                                               ; preds = %3
  %24 = add nsw i32 %21, -1
  br label %25

25:                                               ; preds = %75, %23
  %26 = phi i32 [ %24, %23 ], [ %77, %75 ]
  %27 = phi i32 [ 0, %23 ], [ %76, %75 ]
  %28 = add i32 %27, %26
  %29 = lshr i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 12
  %32 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw i32 %34, 24
  %36 = getelementptr inbounds i8, i8* %32, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = or i32 %39, %35
  %41 = getelementptr inbounds i8, i8* %32, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 8
  %45 = or i32 %40, %44
  %46 = getelementptr inbounds i8, i8* %32, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = icmp ugt i32 %49, %1
  br i1 %50, label %51, label %53

51:                                               ; preds = %25
  %52 = add nsw i32 %29, -1
  br label %75

53:                                               ; preds = %25
  %54 = getelementptr inbounds i8, i8* %32, i64 5
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = getelementptr inbounds i8, i8* %32, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw i32 %60, 24
  %62 = or i32 %61, %57
  %63 = getelementptr inbounds i8, i8* %32, i64 6
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = or i32 %62, %66
  %68 = getelementptr inbounds i8, i8* %32, i64 7
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = or i32 %67, %70
  %72 = icmp ult i32 %71, %1
  br i1 %72, label %73, label %79

73:                                               ; preds = %53
  %74 = add nuw nsw i32 %29, 1
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i32 [ %27, %51 ], [ %74, %73 ]
  %77 = phi i32 [ %52, %51 ], [ %26, %73 ]
  %78 = icmp sgt i32 %76, %77
  br i1 %78, label %82, label %25

79:                                               ; preds = %53
  %80 = zext i32 %29 to i64
  %81 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 1, i64 %80
  br label %82

82:                                               ; preds = %75, %3, %79
  %83 = phi %"struct.OT::CmapSubtableLongGroup"* [ %81, %79 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %3 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %75 ]
  %84 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 0
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw i32 %104, 24
  %106 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 16
  %110 = or i32 %109, %105
  %111 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 2
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = or i32 %110, %114
  %116 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 3
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = or i32 %115, %118
  %120 = icmp ugt i32 %101, %119
  br i1 %120, label %144, label %121, !prof !2

121:                                              ; preds = %82
  %122 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 0
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw i32 %124, 24
  %126 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 16
  %130 = or i32 %129, %125
  %131 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = or i32 %130, %134
  %136 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = or i32 %135, %138
  %140 = sub i32 %1, %101
  %141 = add i32 %139, %140
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %121
  store i32 %141, i32* %2, align 4
  br label %144

144:                                              ; preds = %82, %121, %143
  %145 = phi i1 [ true, %143 ], [ false, %121 ], [ false, %82 ]
  ret i1 %145
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj(%"struct.OT::CmapSubtableFormat4::accelerator_t"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 0
  %5 = load %"struct.OT::IntType"*, %"struct.OT::IntType"** %4, align 8
  %6 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %95, label %9

9:                                                ; preds = %3
  %10 = add nuw i32 %7, 1
  %11 = add nsw i32 %7, -1
  %12 = zext i32 %10 to i64
  br label %13

13:                                               ; preds = %38, %9
  %14 = phi i32 [ %11, %9 ], [ %40, %38 ]
  %15 = phi i32 [ 0, %9 ], [ %39, %38 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = and i32 %16, -2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %5, i64 0, i32 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #10
  %24 = zext i16 %23 to i32
  %25 = icmp ult i32 %24, %1
  br i1 %25, label %36, label %26

26:                                               ; preds = %13
  %27 = bitcast i8* %20 to %struct.CustomRange*
  %28 = getelementptr inbounds %struct.CustomRange, %struct.CustomRange* %27, i64 %12, i32 0
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = zext i16 %31 to i32
  %33 = icmp ugt i32 %32, %1
  br i1 %33, label %34, label %42

34:                                               ; preds = %26
  %35 = add nsw i32 %17, -1
  br label %38

36:                                               ; preds = %13
  %37 = add nuw nsw i32 %17, 1
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i32 [ %15, %34 ], [ %37, %36 ]
  %40 = phi i32 [ %35, %34 ], [ %14, %36 ]
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %95, label %13

42:                                               ; preds = %26
  %43 = icmp eq i8* %20, null
  br i1 %43, label %95, label %44

44:                                               ; preds = %42
  %45 = lshr i32 %16, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 3
  %48 = load %"struct.OT::IntType"*, %"struct.OT::IntType"** %47, align 8
  %49 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %48, i64 %46
  %50 = bitcast %"struct.OT::IntType"* %49 to i16*
  %51 = load i16, i16* %50, align 1
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %82, label %53

53:                                               ; preds = %44
  %54 = tail call i16 @llvm.bswap.i16(i16 %51) #10
  %55 = lshr i16 %54, 1
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 1
  %58 = load %"struct.OT::IntType"*, %"struct.OT::IntType"** %57, align 8
  %59 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %58, i64 %46
  %60 = bitcast %"struct.OT::IntType"* %59 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = tail call i16 @llvm.bswap.i16(i16 %61) #10
  %63 = zext i16 %62 to i32
  %64 = sub i32 %1, %7
  %65 = add i32 %64, %45
  %66 = add i32 %65, %56
  %67 = sub i32 %66, %63
  %68 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %67, %69
  br i1 %70, label %71, label %95, !prof !3

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 4
  %73 = load %"struct.OT::IntType"*, %"struct.OT::IntType"** %72, align 8
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %73, i64 %74
  %76 = bitcast %"struct.OT::IntType"* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %95, label %79, !prof !2

79:                                               ; preds = %71
  %80 = tail call i16 @llvm.bswap.i16(i16 %77) #10
  %81 = zext i16 %80 to i32
  br label %82

82:                                               ; preds = %44, %79
  %83 = phi i32 [ %81, %79 ], [ %1, %44 ]
  %84 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 2
  %85 = load %"struct.OT::IntType"*, %"struct.OT::IntType"** %84, align 8
  %86 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %85, i64 %46
  %87 = bitcast %"struct.OT::IntType"* %86 to i16*
  %88 = load i16, i16* %87, align 1
  %89 = tail call i16 @llvm.bswap.i16(i16 %88) #10
  %90 = zext i16 %89 to i32
  %91 = add i32 %83, %90
  %92 = and i32 %91, 65535
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %82
  store i32 %92, i32* %2, align 4
  br label %95

95:                                               ; preds = %38, %71, %53, %3, %94, %82, %42
  %96 = phi i1 [ false, %42 ], [ true, %94 ], [ false, %82 ], [ false, %3 ], [ false, %53 ], [ false, %71 ], [ false, %38 ]
  ret i1 %96
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT23VariationSelectorRecord9get_glyphEjPjPKv(%"struct.OT::VariationSelectorRecord"*, i32, i32*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %37, label %24, !prof !2

24:                                               ; preds = %4
  %25 = zext i8 %6 to i64
  %26 = shl nuw nsw i64 %25, 24
  %27 = zext i8 %10 to i64
  %28 = shl nuw nsw i64 %27, 16
  %29 = or i64 %28, %26
  %30 = zext i8 %15 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = or i64 %29, %31
  %33 = zext i8 %20 to i64
  %34 = or i64 %32, %33
  %35 = getelementptr inbounds i8, i8* %3, i64 %34
  %36 = bitcast i8* %35 to %"struct.OT::DefaultUVS"*
  br label %37

37:                                               ; preds = %4, %24
  %38 = phi %"struct.OT::DefaultUVS"* [ %36, %24 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::DefaultUVS"*), %4 ]
  %39 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 %41, 24
  %43 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %47, %51
  %53 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %52, %55
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %95, label %58

58:                                               ; preds = %37
  %59 = add nsw i32 %56, -1
  br label %60

60:                                               ; preds = %91, %58
  %61 = phi i32 [ %59, %58 ], [ %93, %91 ]
  %62 = phi i32 [ 0, %58 ], [ %92, %91 ]
  %63 = add i32 %62, %61
  %64 = lshr i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = shl nuw nsw i64 %65, 2
  %67 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %38, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 16
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = or i32 %74, %70
  %76 = getelementptr inbounds i8, i8* %67, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = icmp ugt i32 %79, %1
  br i1 %80, label %81, label %83

81:                                               ; preds = %60
  %82 = add nsw i32 %64, -1
  br label %91

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %67, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = add nuw nsw i32 %79, %86
  %88 = icmp ult i32 %87, %1
  br i1 %88, label %89, label %194

89:                                               ; preds = %83
  %90 = add nuw nsw i32 %64, 1
  br label %91

91:                                               ; preds = %89, %81
  %92 = phi i32 [ %62, %81 ], [ %90, %89 ]
  %93 = phi i32 [ %82, %81 ], [ %61, %89 ]
  %94 = icmp sgt i32 %92, %93
  br i1 %94, label %95, label %60

95:                                               ; preds = %91, %37
  %96 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw i32 %98, 24
  %100 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 16
  %104 = or i32 %103, %99
  %105 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = shl nuw nsw i32 %107, 8
  %109 = or i32 %104, %108
  %110 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = or i32 %109, %112
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %128, label %115, !prof !2

115:                                              ; preds = %95
  %116 = zext i8 %97 to i64
  %117 = shl nuw nsw i64 %116, 24
  %118 = zext i8 %101 to i64
  %119 = shl nuw nsw i64 %118, 16
  %120 = or i64 %119, %117
  %121 = zext i8 %106 to i64
  %122 = shl nuw nsw i64 %121, 8
  %123 = or i64 %120, %122
  %124 = zext i8 %111 to i64
  %125 = or i64 %123, %124
  %126 = getelementptr inbounds i8, i8* %3, i64 %125
  %127 = bitcast i8* %126 to %"struct.OT::NonDefaultUVS"*
  br label %128

128:                                              ; preds = %95, %115
  %129 = phi %"struct.OT::NonDefaultUVS"* [ %127, %115 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::NonDefaultUVS"*), %95 ]
  %130 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = shl nuw i32 %132, 24
  %134 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = shl nuw nsw i32 %136, 16
  %138 = or i32 %137, %133
  %139 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 8
  %143 = or i32 %138, %142
  %144 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = or i32 %143, %146
  %148 = icmp slt i32 %147, 1
  br i1 %148, label %185, label %149

149:                                              ; preds = %128
  %150 = add nsw i32 %147, -1
  br label %151

151:                                              ; preds = %178, %149
  %152 = phi i32 [ %150, %149 ], [ %180, %178 ]
  %153 = phi i32 [ 0, %149 ], [ %179, %178 ]
  %154 = add i32 %153, %152
  %155 = lshr i32 %154, 1
  %156 = zext i32 %155 to i64
  %157 = mul nuw nsw i64 %156, 5
  %158 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = shl nuw nsw i32 %160, 16
  %162 = getelementptr inbounds i8, i8* %158, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl nuw nsw i32 %164, 8
  %166 = or i32 %165, %161
  %167 = getelementptr inbounds i8, i8* %158, i64 2
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = or i32 %166, %169
  %171 = icmp ugt i32 %170, %1
  br i1 %171, label %172, label %174

172:                                              ; preds = %151
  %173 = add nsw i32 %155, -1
  br label %178

174:                                              ; preds = %151
  %175 = icmp eq i32 %170, %1
  br i1 %175, label %182, label %176

176:                                              ; preds = %174
  %177 = add nuw nsw i32 %155, 1
  br label %178

178:                                              ; preds = %176, %172
  %179 = phi i32 [ %153, %172 ], [ %177, %176 ]
  %180 = phi i32 [ %173, %172 ], [ %152, %176 ]
  %181 = icmp sgt i32 %179, %180
  br i1 %181, label %185, label %151

182:                                              ; preds = %174
  %183 = zext i32 %155 to i64
  %184 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %129, i64 0, i32 0, i32 0, i32 1, i64 %183
  br label %185

185:                                              ; preds = %178, %128, %182
  %186 = phi %"struct.OT::UVSMapping"* [ %184, %182 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::UVSMapping"*), %128 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::UVSMapping"*), %178 ]
  %187 = getelementptr inbounds %"struct.OT::UVSMapping", %"struct.OT::UVSMapping"* %186, i64 0, i32 1, i32 0
  %188 = bitcast %"struct.OT::IntType"* %187 to i16*
  %189 = load i16, i16* %188, align 1
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = tail call i16 @llvm.bswap.i16(i16 %189) #10
  %193 = zext i16 %192 to i32
  store i32 %193, i32* %2, align 4
  br label %194

194:                                              ; preds = %83, %191, %185
  %195 = phi i32 [ 1, %191 ], [ 0, %185 ], [ 2, %83 ]
  ret i32 %195
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t11get_advanceEjP9hb_font_t(%"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, i32, %struct.hb_font_t*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %12, label %7, !prof !3

7:                                                ; preds = %3
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %61

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  br label %61

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %struct.hb_blob_t*, %struct.hb_blob_t** %13, align 8
  %15 = icmp eq %struct.hb_blob_t* %14, null
  %16 = select i1 %15, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %14
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %16, i64 0, i32 1
  %18 = bitcast i8** %17 to %"struct.OT::hmtxvmtx"**
  %19 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %18, align 8
  %20 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, %1
  %24 = select i1 %23, i32 %22, i32 %1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %19, i64 0, i32 0, i32 0, i64 %25, i32 0
  %27 = bitcast %"struct.OT::IntType"* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #10
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 10
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load %struct.hb_blob_t*, %struct.hb_blob_t** %35, align 8
  %37 = icmp eq %struct.hb_blob_t* %36, null
  %38 = select i1 %37, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %36
  %39 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %34
  %43 = uitofp i16 %29 to float
  %44 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %38, i64 0, i32 1
  %45 = bitcast i8** %44 to %"struct.OT::HVARVVAR"**
  %46 = load %"struct.OT::HVARVVAR"*, %"struct.OT::HVARVVAR"** %45, align 8
  %47 = icmp ult i32 %40, 20
  %48 = select i1 %47, %"struct.OT::HVARVVAR"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::HVARVVAR"*), %"struct.OT::HVARVVAR"* %46
  %49 = tail call float @_ZNK2OT8HVARVVAR15get_advance_varEjP9hb_font_t(%"struct.OT::HVARVVAR"* %48, i32 %1, %struct.hb_font_t* %2)
  %50 = fadd float %49, 5.000000e-01
  %51 = tail call float @llvm.floor.f32(float %50) #10
  %52 = fadd float %51, %43
  %53 = fptoui float %52 to i32
  br label %61

54:                                               ; preds = %34
  %55 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 2
  %56 = load %struct.hb_face_t*, %struct.hb_face_t** %55, align 8
  %57 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %56, i64 0, i32 8, i32 12, i32 0
  %58 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %57) #10
  %59 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %58, i64 0, i32 0
  %60 = tail call i32 @_ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"* %59, %struct.hb_font_t* %2, i32 %1, i1 zeroext false) #10
  br label %61

61:                                               ; preds = %9, %7, %12, %54, %42
  %62 = phi i32 [ %53, %42 ], [ %60, %54 ], [ %30, %12 ], [ 0, %7 ], [ %11, %9 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::hmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18hmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj4EE9hb_face_tLj4ES1_E10get_storedEv(%struct.hb_lazy_loader_t.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.25, %struct.hb_lazy_loader_t.25* %0, i64 -4
  %3 = bitcast %struct.hb_lazy_loader_t.25* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.25* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::hmtx_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %40, !prof !2

8:                                                ; preds = %1, %35
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 32) #10
  %13 = bitcast i8* %12 to %"struct.OT::hmtx_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*
  tail call void @_ZN2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t4initEP9hb_face_tj(%"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9, i32 0) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::hmtx_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::hmtx_accelerator_t"*), %"struct.OT::hmtx_accelerator_t"* %13, !prof !2
  %19 = ptrtoint %"struct.OT::hmtx_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %40, label %22, !prof !3

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::hmtx_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::hmtx_accelerator_t", %"struct.OT::hmtx_accelerator_t"* %18, i64 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %struct.hb_blob_t*, %struct.hb_blob_t** %26, align 8
  %28 = icmp eq %struct.hb_blob_t* %27, null
  %29 = select i1 %28, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %27
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %29) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %26, align 8
  %30 = getelementptr inbounds %"struct.OT::hmtx_accelerator_t", %"struct.OT::hmtx_accelerator_t"* %18, i64 0, i32 0, i32 4, i32 0, i32 0
  %31 = load %struct.hb_blob_t*, %struct.hb_blob_t** %30, align 8
  %32 = icmp eq %struct.hb_blob_t* %31, null
  %33 = select i1 %32, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %33) #10
  %34 = bitcast %"struct.OT::hmtx_accelerator_t"* %18 to i8*
  tail call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %25, %22
  %36 = load atomic i64, i64* %4 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %8, label %38, !prof !2

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.OT::hmtx_accelerator_t"*
  br label %40

40:                                               ; preds = %8, %17, %38, %1
  %41 = phi %"struct.OT::hmtx_accelerator_t"* [ %39, %38 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::hmtx_accelerator_t"*), %8 ]
  ret %"struct.OT::hmtx_accelerator_t"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT8hmtxvmtxINS_4hmtxENS_4hheaEE13accelerator_t4initEP9hb_face_tj(%"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, %struct.hb_face_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.hb_sanitize_context_t, align 8
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i32 @hb_face_get_upem(%struct.hb_face_t* %1) #10
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ %2, %3 ]
  %10 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 8, i32 3, i32 0
  %12 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4hheaE22hb_table_lazy_loader_tIS1_Lj3EE9hb_face_tLj3E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.22* %11) #10
  %13 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 1
  %14 = bitcast i8** %13 to %"struct.OT::hhea"**
  %15 = load %"struct.OT::hhea"*, %"struct.OT::hhea"** %14, align 8
  %16 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 36
  %19 = select i1 %18, %"struct.OT::hhea"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::hhea"*), %"struct.OT::hhea"* %15
  %20 = getelementptr inbounds %"struct.OT::hhea", %"struct.OT::hhea"* %19, i64 0, i32 0, i32 16
  %21 = bitcast %"struct.OT::IntType"* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #10
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 1
  store i32 %24, i32* %25, align 4
  %26 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  %27 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1752003704) #10
  %28 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %27) #10
  %29 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %28, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %28) #10
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %8
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %27) #10
  br label %33

33:                                               ; preds = %8, %32
  %34 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  store %struct.hb_blob_t* %27, %struct.hb_blob_t** %34, align 8
  %35 = icmp eq %struct.hb_blob_t* %27, null
  %36 = select i1 %35, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %27
  %37 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %25, align 4
  %40 = shl i32 %39, 2
  %41 = icmp ugt i32 %40, %38
  br i1 %41, label %42, label %45, !prof !2

42:                                               ; preds = %33
  %43 = lshr i32 %38, 2
  store i32 %43, i32* %25, align 4
  %44 = and i32 %38, -4
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i32 [ %44, %42 ], [ %40, %33 ]
  %47 = phi i32 [ %43, %42 ], [ %39, %33 ]
  %48 = sub i32 %38, %46
  %49 = lshr i32 %48, 1
  %50 = add i32 %49, %47
  %51 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 0
  store i32 %50, i32* %51, align 8
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %45
  store i32 0, i32* %25, align 4
  store i32 0, i32* %51, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %36) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %34, align 8
  %54 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  store %struct.hb_blob_t* %54, %struct.hb_blob_t** %34, align 8
  br label %55

55:                                               ; preds = %53, %45
  %56 = bitcast %struct.hb_sanitize_context_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #10
  %57 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 2
  %59 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 8
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %60, align 8
  %61 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 10
  %62 = bitcast i8** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 25, i1 false) #10
  %63 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 11
  %64 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  store i32 %64, i32* %61, align 8
  store i8 1, i8* %63, align 4
  %65 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1213612370) #10
  %66 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT8HVARVVAREEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %4, %struct.hb_blob_t* %65) #10
  %67 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %0, i64 0, i32 4, i32 0, i32 0
  store %struct.hb_blob_t* %66, %struct.hb_blob_t** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #10
  ret void
}

declare i32 @hb_face_get_upem(%struct.hb_face_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4hheaE22hb_table_lazy_loader_tIS1_Lj3EE9hb_face_tLj3E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.22* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.22, %struct.hb_lazy_loader_t.22* %0, i64 -3
  %9 = bitcast %struct.hb_lazy_loader_t.22* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #10
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1751672161) #10
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4hheaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #10
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #10
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4hheaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %42

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 36
  br i1 %30, label %38, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -36
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 256
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %36 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  br i1 %35, label %37, label %40

37:                                               ; preds = %31
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %42

38:                                               ; preds = %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %39 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  br label %40

40:                                               ; preds = %38, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %41 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %42

42:                                               ; preds = %37, %40, %27
  %43 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %37 ], [ %41, %40 ]
  ret %struct.hb_blob_t* %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT8HVARVVAREEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %106, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %112, %106 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %106 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  br label %124

33:                                               ; preds = %28
  %34 = icmp ult i32 %18, 4
  br i1 %34, label %117, label %35, !prof !2

35:                                               ; preds = %33
  %36 = add nsw i32 %29, -4
  store i32 %36, i32* %8, align 8
  %37 = bitcast i8* %16 to i16*
  %38 = load i16, i16* %37, align 1
  %39 = icmp eq i16 %38, 256
  br i1 %39, label %40, label %52, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, i8* %16, i64 4
  %42 = bitcast i8* %41 to %"struct.OT::OffsetTo.284"*
  %43 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_14VariationStoreENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.284"* %42, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  %45 = getelementptr inbounds i8, i8* %16, i64 8
  %46 = bitcast i8* %45 to %"struct.OT::OffsetTo.285"*
  %47 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %46, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %16, i64 12
  %50 = bitcast i8* %49 to %"struct.OT::OffsetTo.285"*
  %51 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %50, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %51, label %55, label %52

52:                                               ; preds = %48, %44, %40, %35
  %53 = load i32, i32* %9, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %117, label %103

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %16, i64 16
  %57 = bitcast i8* %56 to %"struct.OT::OffsetTo.285"*
  %58 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %57, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  %59 = load i32, i32* %9, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %58, label %61, label %102

61:                                               ; preds = %55
  %62 = bitcast i8* %16 to i16*
  %63 = bitcast i8* %41 to %"struct.OT::OffsetTo.284"*
  %64 = bitcast i8* %45 to %"struct.OT::OffsetTo.285"*
  %65 = bitcast i8* %49 to %"struct.OT::OffsetTo.285"*
  %66 = bitcast i8* %56 to %"struct.OT::OffsetTo.285"*
  br i1 %60, label %67, label %113

67:                                               ; preds = %61
  store i32 0, i32* %9, align 4
  %68 = load i8*, i8** %6, align 8
  %69 = icmp ugt i8* %68, %16
  br i1 %69, label %117, label %70, !prof !2

70:                                               ; preds = %67
  %71 = load i8*, i8** %7, align 8
  %72 = icmp ult i8* %71, %16
  br i1 %72, label %95, label %73, !prof !2

73:                                               ; preds = %70
  %74 = ptrtoint i8* %71 to i64
  %75 = ptrtoint i8* %16 to i64
  %76 = sub i64 %74, %75
  %77 = trunc i64 %76 to i32
  %78 = icmp ult i32 %77, 4
  br i1 %78, label %95, label %79, !prof !2

79:                                               ; preds = %73
  %80 = load i32, i32* %8, align 8
  %81 = add i32 %80, -4
  store i32 %81, i32* %8, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = load i16, i16* %62, align 1
  %85 = icmp eq i16 %84, 256
  br i1 %85, label %86, label %95, !prof !3

86:                                               ; preds = %83
  %87 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_14VariationStoreENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.284"* %63, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %87, label %88, label %95

88:                                               ; preds = %86
  %89 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %64, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %89, label %90, label %95

90:                                               ; preds = %88
  %91 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %65, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  br i1 %91, label %92, label %95

92:                                               ; preds = %90
  %93 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"* %66, %struct.hb_sanitize_context_t* %0, i8* nonnull %16) #10
  %94 = xor i1 %93, true
  br label %95

95:                                               ; preds = %70, %73, %79, %83, %86, %88, %90, %92
  %96 = phi i1 [ true, %70 ], [ true, %73 ], [ %94, %92 ], [ true, %79 ], [ true, %83 ], [ true, %86 ], [ true, %88 ], [ true, %90 ]
  %97 = load i32, i32* %9, align 4
  %98 = icmp ne i32 %97, 0
  %99 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %99) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %100 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #10
  %101 = or i1 %96, %98
  br i1 %101, label %122, label %116

102:                                              ; preds = %55
  br i1 %60, label %103, label %117

103:                                              ; preds = %52, %102
  %104 = load i8, i8* %5, align 8, !range !4
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %117

106:                                              ; preds = %103
  %107 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %107, i8** %6, align 8
  %108 = load i32, i32* %11, align 8
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  store i8* %110, i8** %7, align 8
  %111 = icmp eq i8* %107, null
  %112 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %111, label %119, label %12

113:                                              ; preds = %61
  %114 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %114) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %115 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #10
  br label %116

116:                                              ; preds = %95, %113
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %124

117:                                              ; preds = %52, %33, %102, %103, %67
  %118 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %119

119:                                              ; preds = %106, %117
  %120 = phi %struct.hb_blob_t* [ %118, %117 ], [ %112, %106 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %120) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %121 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #10
  br label %122

122:                                              ; preds = %119, %95
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %123 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %124

124:                                              ; preds = %122, %116, %31
  %125 = phi %struct.hb_blob_t* [ %1, %31 ], [ %123, %122 ], [ %1, %116 ]
  ret %struct.hb_blob_t* %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_14VariationStoreENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.284"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.OT::VariationStore"*, align 8
  %5 = getelementptr inbounds %"struct.OT::OffsetTo.284", %"struct.OT::OffsetTo.284"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %5
  br i1 %8, label %95, label %9, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %11, %5
  br i1 %12, label %95, label %13, !prof !2

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint %"struct.OT::OffsetTo.284"* %0 to i64
  %16 = sub i64 %14, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 4
  br i1 %18, label %95, label %19, !prof !2

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -4
  store i32 %22, i32* %20, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %95

24:                                               ; preds = %19
  %25 = load i8, i8* %5, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::OffsetTo.284", %"struct.OT::OffsetTo.284"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::OffsetTo.284", %"struct.OT::OffsetTo.284"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::OffsetTo.284", %"struct.OT::OffsetTo.284"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %95, label %43

43:                                               ; preds = %24
  %44 = zext i8 %25 to i64
  %45 = shl nuw nsw i64 %44, 24
  %46 = zext i8 %29 to i64
  %47 = shl nuw nsw i64 %46, 16
  %48 = or i64 %47, %45
  %49 = zext i8 %34 to i64
  %50 = shl nuw nsw i64 %49, 8
  %51 = or i64 %48, %50
  %52 = zext i8 %39 to i64
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds i8, i8* %2, i64 %53
  %55 = icmp ugt i8* %7, %54
  %56 = icmp ult i8* %11, %54
  %57 = or i1 %55, %56
  br i1 %57, label %63, label %58, !prof !6

58:                                               ; preds = %43
  %59 = ptrtoint i8* %54 to i64
  %60 = sub i64 %14, %59
  %61 = trunc i64 %60 to i32
  %62 = icmp ult i32 %61, 8
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %58, %43
  %64 = bitcast %"struct.OT::VariationStore"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  br label %77

65:                                               ; preds = %58
  %66 = add i32 %21, -12
  store i32 %66, i32* %20, align 8
  %67 = icmp sgt i32 %66, 0
  %68 = bitcast %"struct.OT::VariationStore"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  br i1 %67, label %69, label %77

69:                                               ; preds = %65
  %70 = bitcast i8* %54 to i16*
  %71 = load i16, i16* %70, align 1
  %72 = icmp eq i16 %71, 256
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = getelementptr inbounds i8, i8* %54, i64 2
  %75 = bitcast i8* %74 to %"struct.OT::OffsetTo.103"*
  %76 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_13VarRegionListENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.103"* %75, %struct.hb_sanitize_context_t* %1, i8* %54) #10
  br i1 %76, label %79, label %77

77:                                               ; preds = %73, %69, %65, %63
  %78 = phi i8* [ %64, %63 ], [ %68, %65 ], [ %68, %69 ], [ %68, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #10
  br label %84

79:                                               ; preds = %73
  %80 = getelementptr inbounds i8, i8* %54, i64 6
  %81 = bitcast i8* %80 to %"struct.OT::ArrayOf.104"*
  %82 = bitcast %"struct.OT::VariationStore"** %4 to i8**
  store i8* %54, i8** %82, align 8
  %83 = call zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_7VarDataENS_7IntTypeIjLj4EEELb1EEENS3_ItLj2EEEE8sanitizeIJPKNS_14VariationStoreEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.104"* %81, %struct.hb_sanitize_context_t* %1, %"struct.OT::VariationStore"** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  br i1 %83, label %95, label %84

84:                                               ; preds = %77, %79
  %85 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %86 = load i32, i32* %85, align 4
  %87 = icmp ugt i32 %86, 31
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = add nuw nsw i32 %86, 1
  store i32 %89, i32* %85, align 4
  %90 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %91 = load i8, i8* %90, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  %94 = bitcast %"struct.OT::OffsetTo.284"* %0 to i32*
  store i32 0, i32* %94, align 1
  br label %95

95:                                               ; preds = %93, %88, %84, %3, %9, %13, %24, %79, %19
  %96 = phi i1 [ false, %19 ], [ true, %79 ], [ true, %24 ], [ false, %13 ], [ false, %9 ], [ false, %3 ], [ true, %93 ], [ false, %88 ], [ false, %84 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_16DeltaSetIndexMapENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.285"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %106, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %106, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.285"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %106, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %106

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.285", %"struct.OT::OffsetTo.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %106, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %95, label %57, !prof !6

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %95, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %95

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = getelementptr inbounds i8, i8* %53, i64 2
  %68 = bitcast i8* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #10
  %71 = zext i16 %70 to i32
  %72 = bitcast i8* %53 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = lshr i16 %73, 12
  %75 = and i16 %74, 3
  %76 = add nuw nsw i16 %75, 1
  %77 = zext i16 %76 to i32
  %78 = udiv i32 -1, %77
  %79 = icmp ugt i32 %78, %71
  br i1 %79, label %80, label %95

80:                                               ; preds = %65
  %81 = mul nuw nsw i32 %77, %71
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %106, label %83

83:                                               ; preds = %80
  %84 = icmp ugt i8* %6, %66
  %85 = icmp ult i8* %10, %66
  %86 = or i1 %84, %85
  br i1 %86, label %95, label %87, !prof !6

87:                                               ; preds = %83
  %88 = ptrtoint i8* %66 to i64
  %89 = sub i64 %13, %88
  %90 = trunc i64 %89 to i32
  %91 = icmp ugt i32 %81, %90
  br i1 %91, label %95, label %92, !prof !2

92:                                               ; preds = %87
  %93 = sub nsw i32 %63, %81
  store i32 %93, i32* %19, align 8
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %83, %87, %65, %42, %57, %62, %92
  %96 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %97 = load i32, i32* %96, align 4
  %98 = icmp ugt i32 %97, 31
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  %100 = add nuw nsw i32 %97, 1
  store i32 %100, i32* %96, align 4
  %101 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %102 = load i8, i8* %101, align 8, !range !4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = bitcast %"struct.OT::OffsetTo.285"* %0 to i32*
  store i32 0, i32* %105, align 1
  br label %106

106:                                              ; preds = %104, %99, %95, %80, %3, %8, %12, %23, %92, %18
  %107 = phi i1 [ false, %18 ], [ true, %92 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %80 ], [ true, %104 ], [ false, %99 ], [ false, %95 ]
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_13VarRegionListENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.103"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.103", %"struct.OT::OffsetTo.103"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %104, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %104, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.103"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %104, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %104

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.103", %"struct.OT::OffsetTo.103"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.103", %"struct.OT::OffsetTo.103"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.103", %"struct.OT::OffsetTo.103"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %104, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %93, label %57, !prof !6

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %93, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %93

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = bitcast i8* %53 to i16*
  %68 = load i16, i16* %67, align 1
  %69 = tail call i16 @llvm.bswap.i16(i16 %68) #10
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds i8, i8* %53, i64 2
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = tail call i16 @llvm.bswap.i16(i16 %73) #10
  %75 = zext i16 %74 to i32
  %76 = mul nuw i32 %75, %70
  %77 = icmp ult i32 %76, 715827882
  br i1 %77, label %78, label %93, !prof !5

78:                                               ; preds = %65
  %79 = mul i32 %76, 6
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %104, label %81

81:                                               ; preds = %78
  %82 = icmp ugt i8* %6, %66
  %83 = icmp ult i8* %10, %66
  %84 = or i1 %82, %83
  br i1 %84, label %93, label %85, !prof !6

85:                                               ; preds = %81
  %86 = ptrtoint i8* %66 to i64
  %87 = sub i64 %13, %86
  %88 = trunc i64 %87 to i32
  %89 = icmp ugt i32 %79, %88
  br i1 %89, label %93, label %90, !prof !2

90:                                               ; preds = %85
  %91 = sub i32 %63, %79
  store i32 %91, i32* %19, align 8
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %104, label %93, !prof !3

93:                                               ; preds = %62, %57, %42, %90, %65, %85, %81
  %94 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %95 = load i32, i32* %94, align 4
  %96 = icmp ugt i32 %95, 31
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = add nuw nsw i32 %95, 1
  store i32 %98, i32* %94, align 4
  %99 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %100 = load i8, i8* %99, align 8, !range !4
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = bitcast %"struct.OT::OffsetTo.103"* %0 to i32*
  store i32 0, i32* %103, align 1
  br label %104

104:                                              ; preds = %102, %97, %93, %3, %8, %12, %90, %78, %23, %18
  %105 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %78 ], [ true, %90 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %102 ], [ false, %97 ], [ false, %93 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_7VarDataENS_7IntTypeIjLj4EEELb1EEENS3_ItLj2EEEE8sanitizeIJPKNS_14VariationStoreEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.104"*, %struct.hb_sanitize_context_t*, %"struct.OT::VariationStore"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %123, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %123, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.104"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %123, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %123, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 0
  %25 = bitcast %"struct.OT::ArrayOf.104"* %0 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #10
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %"struct.OT::OffsetTo.105", %"struct.OT::OffsetTo.105"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %30 = shl nuw nsw i32 %28, 2
  %31 = icmp eq i16 %26, 0
  br i1 %31, label %123, label %32

32:                                               ; preds = %23
  %33 = icmp ugt i8* %6, %29
  %34 = icmp ult i8* %10, %29
  %35 = or i1 %33, %34
  br i1 %35, label %123, label %36, !prof !6

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.OT::OffsetTo.105"* %24 to i64
  %38 = sub i64 %13, %37
  %39 = trunc i64 %38 to i32
  %40 = icmp ugt i32 %30, %39
  br i1 %40, label %123, label %41, !prof !2

41:                                               ; preds = %36
  %42 = sub nsw i32 %21, %30
  store i32 %42, i32* %19, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %123, !prof !3

44:                                               ; preds = %41
  %45 = load i16, i16* %25, align 1
  %46 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %47 = icmp eq i16 %45, 0
  br i1 %47, label %123, label %48

48:                                               ; preds = %44
  %49 = tail call i16 @llvm.bswap.i16(i16 %45) #10
  %50 = bitcast %"struct.OT::VariationStore"** %2 to i8**
  %51 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %52 = zext i16 %49 to i64
  %53 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"struct.OT::OffsetTo.105", %"struct.OT::OffsetTo.105"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %55 = icmp ugt i8* %6, %54
  br i1 %55, label %123, label %56, !prof !2

56:                                               ; preds = %48, %118
  %57 = phi i8* [ %121, %118 ], [ %54, %48 ]
  %58 = phi %"struct.OT::OffsetTo.105"* [ %120, %118 ], [ %53, %48 ]
  %59 = phi i64 [ %116, %118 ], [ 0, %48 ]
  %60 = load i8*, i8** %50, align 8
  %61 = load i8*, i8** %9, align 8
  %62 = icmp ult i8* %61, %57
  br i1 %62, label %123, label %63, !prof !2

63:                                               ; preds = %56
  %64 = ptrtoint i8* %61 to i64
  %65 = ptrtoint %"struct.OT::OffsetTo.105"* %58 to i64
  %66 = sub i64 %64, %65
  %67 = trunc i64 %66 to i32
  %68 = icmp ult i32 %67, 4
  br i1 %68, label %123, label %69, !prof !2

69:                                               ; preds = %63
  %70 = load i32, i32* %19, align 8
  %71 = add i32 %70, -4
  store i32 %71, i32* %19, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %123, !prof !5

73:                                               ; preds = %69
  %74 = load i8, i8* %57, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw i32 %75, 24
  %77 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 %59, i32 0, i32 0, i32 0, i32 0, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 16
  %81 = or i32 %80, %76
  %82 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 %59, i32 0, i32 0, i32 0, i32 0, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %81, %85
  %87 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 %59, i32 0, i32 0, i32 0, i32 0, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = or i32 %86, %89
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %115, label %92

92:                                               ; preds = %73
  %93 = zext i8 %74 to i64
  %94 = shl nuw nsw i64 %93, 24
  %95 = zext i8 %78 to i64
  %96 = shl nuw nsw i64 %95, 16
  %97 = or i64 %96, %94
  %98 = zext i8 %83 to i64
  %99 = shl nuw nsw i64 %98, 8
  %100 = or i64 %97, %99
  %101 = zext i8 %88 to i64
  %102 = or i64 %100, %101
  %103 = getelementptr inbounds i8, i8* %60, i64 %102
  %104 = bitcast i8* %103 to %"struct.OT::VarData"*
  %105 = tail call zeroext i1 @_ZNK2OT7VarData8sanitizeEP21hb_sanitize_context_t(%"struct.OT::VarData"* %104, %struct.hb_sanitize_context_t* %1) #10
  br i1 %105, label %115, label %106

106:                                              ; preds = %92
  %107 = load i32, i32* %46, align 4
  %108 = icmp ugt i32 %107, 31
  br i1 %108, label %123, label %109, !prof !7

109:                                              ; preds = %106
  %110 = add nuw nsw i32 %107, 1
  store i32 %110, i32* %46, align 4
  %111 = load i8, i8* %51, align 8, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %123, label %113, !prof !7

113:                                              ; preds = %109
  %114 = bitcast %"struct.OT::OffsetTo.105"* %58 to i32*
  store i32 0, i32* %114, align 1
  br label %115

115:                                              ; preds = %113, %92, %73
  %116 = add nuw nsw i64 %59, 1
  %117 = icmp ult i64 %116, %52
  br i1 %117, label %118, label %123

118:                                              ; preds = %115
  %119 = load i8*, i8** %5, align 8
  %120 = getelementptr inbounds %"struct.OT::ArrayOf.104", %"struct.OT::ArrayOf.104"* %0, i64 0, i32 1, i64 %116
  %121 = getelementptr inbounds %"struct.OT::OffsetTo.105", %"struct.OT::OffsetTo.105"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %122 = icmp ugt i8* %119, %121
  br i1 %122, label %123, label %56, !prof !2

123:                                              ; preds = %106, %109, %118, %56, %63, %69, %115, %48, %23, %44, %32, %36, %3, %8, %12, %18, %41
  %124 = phi i1 [ false, %41 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %36 ], [ false, %32 ], [ true, %44 ], [ true, %23 ], [ false, %48 ], [ true, %115 ], [ false, %69 ], [ false, %63 ], [ false, %56 ], [ false, %118 ], [ false, %109 ], [ false, %106 ]
  ret i1 %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7VarData8sanitizeEP21hb_sanitize_context_t(%"struct.OT::VarData"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %99, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %99, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.OT::VarData"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 6
  br i1 %16, label %99, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -6
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %99

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.38", %"struct.OT::ArrayOf.38"* %23, i64 0, i32 0, i32 0, i32 0, i64 0
  %25 = icmp ugt i8* %5, %24
  %26 = icmp ult i8* %9, %24
  %27 = or i1 %25, %26
  br i1 %27, label %99, label %28, !prof !6

28:                                               ; preds = %22
  %29 = ptrtoint %"struct.OT::ArrayOf.38"* %23 to i64
  %30 = sub i64 %12, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp ult i32 %31, 2
  br i1 %32, label %99, label %33, !prof !2

33:                                               ; preds = %28
  %34 = add i32 %19, -8
  store i32 %34, i32* %18, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %99, !prof !5

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 1, i64 0
  %38 = bitcast %"struct.OT::ArrayOf.38"* %23 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #10
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %37, i64 0, i32 0, i32 0, i64 0
  %43 = shl nuw nsw i32 %41, 1
  %44 = icmp eq i16 %39, 0
  br i1 %44, label %59, label %45

45:                                               ; preds = %36
  %46 = icmp ugt i8* %5, %42
  %47 = icmp ult i8* %9, %42
  %48 = or i1 %46, %47
  br i1 %48, label %99, label %49, !prof !6

49:                                               ; preds = %45
  %50 = ptrtoint %"struct.OT::IntType"* %37 to i64
  %51 = sub i64 %12, %50
  %52 = trunc i64 %51 to i32
  %53 = icmp ugt i32 %43, %52
  br i1 %53, label %99, label %54, !prof !2

54:                                               ; preds = %49
  %55 = sub nsw i32 %34, %43
  store i32 %55, i32* %18, align 8
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %99, !prof !3

57:                                               ; preds = %54
  %58 = load i16, i16* %38, align 1
  br label %59

59:                                               ; preds = %57, %36
  %60 = phi i32 [ %55, %57 ], [ %34, %36 ]
  %61 = phi i16 [ %58, %57 ], [ 0, %36 ]
  %62 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 1
  %63 = bitcast %"struct.OT::IntType"* %62 to i16*
  %64 = load i16, i16* %63, align 1
  %65 = tail call i16 @llvm.bswap.i16(i16 %64) #10
  %66 = tail call i16 @llvm.bswap.i16(i16 %61) #10
  %67 = icmp ugt i16 %65, %66
  br i1 %67, label %99, label %68

68:                                               ; preds = %59
  %69 = zext i16 %65 to i32
  %70 = zext i16 %66 to i64
  %71 = shl nuw nsw i64 %70, 1
  %72 = add nuw nsw i64 %71, 2
  %73 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 %72
  %74 = bitcast %"struct.OT::VarData"* %0 to i16*
  %75 = load i16, i16* %74, align 1
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #10
  %77 = zext i16 %76 to i32
  %78 = zext i16 %66 to i32
  %79 = add nuw nsw i32 %78, %69
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %68
  %82 = udiv i32 -1, %79
  %83 = icmp ugt i32 %82, %77
  br i1 %83, label %84, label %99

84:                                               ; preds = %81, %68
  %85 = mul i32 %79, %77
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %99, label %87

87:                                               ; preds = %84
  %88 = icmp ugt i8* %5, %73
  %89 = icmp ult i8* %9, %73
  %90 = or i1 %88, %89
  br i1 %90, label %99, label %91, !prof !6

91:                                               ; preds = %87
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %12, %92
  %94 = trunc i64 %93 to i32
  %95 = icmp ugt i32 %85, %94
  br i1 %95, label %99, label %96, !prof !2

96:                                               ; preds = %91
  %97 = sub i32 %60, %85
  store i32 %97, i32* %18, align 8
  %98 = icmp sgt i32 %97, 0
  br label %99

99:                                               ; preds = %96, %91, %87, %84, %81, %45, %49, %22, %28, %33, %54, %2, %7, %11, %59, %17
  %100 = phi i1 [ false, %59 ], [ false, %17 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ false, %54 ], [ false, %33 ], [ false, %28 ], [ false, %22 ], [ false, %49 ], [ false, %45 ], [ false, %81 ], [ true, %84 ], [ false, %91 ], [ false, %87 ], [ %98, %96 ]
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT8HVARVVAR15get_advance_varEjP9hb_font_t(%"struct.OT::HVARVVAR"*, i32, %struct.hb_font_t*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %36, label %23, !prof !2

23:                                               ; preds = %3
  %24 = zext i8 %5 to i64
  %25 = shl nuw nsw i64 %24, 24
  %26 = zext i8 %9 to i64
  %27 = shl nuw nsw i64 %26, 16
  %28 = or i64 %27, %25
  %29 = zext i8 %14 to i64
  %30 = shl nuw nsw i64 %29, 8
  %31 = or i64 %28, %30
  %32 = zext i8 %19 to i64
  %33 = or i64 %31, %32
  %34 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %33
  %35 = bitcast i8* %34 to %"struct.OT::DeltaSetIndexMap"*
  br label %36

36:                                               ; preds = %3, %23
  %37 = phi %"struct.OT::DeltaSetIndexMap"* [ %35, %23 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::DeltaSetIndexMap"*), %3 ]
  %38 = getelementptr inbounds %"struct.OT::DeltaSetIndexMap", %"struct.OT::DeltaSetIndexMap"* %37, i64 0, i32 1
  %39 = bitcast %"struct.OT::IntType"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #10
  %42 = zext i16 %41 to i32
  %43 = icmp eq i16 %40, 0
  br i1 %43, label %73, label %44

44:                                               ; preds = %36
  %45 = icmp ugt i32 %42, %1
  %46 = add nsw i32 %42, -1
  %47 = select i1 %45, i32 %1, i32 %46
  %48 = bitcast %"struct.OT::DeltaSetIndexMap"* %37 to i16*
  %49 = load i16, i16* %48, align 1
  %50 = lshr i16 %49, 12
  %51 = and i16 %50, 3
  %52 = add nuw nsw i16 %51, 1
  %53 = zext i16 %52 to i32
  %54 = mul i32 %47, %53
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.OT::DeltaSetIndexMap", %"struct.OT::DeltaSetIndexMap"* %37, i64 0, i32 2, i32 0, i64 %55
  %57 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %56, i64 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp eq i16 %51, 0
  br i1 %60, label %61, label %194

61:                                               ; preds = %208, %201, %194, %44
  %62 = phi i32 [ %59, %44 ], [ %199, %194 ], [ %206, %201 ], [ %213, %208 ]
  %63 = lshr i16 %49, 8
  %64 = and i16 %63, 15
  %65 = add nuw nsw i16 %64, 1
  %66 = zext i16 %65 to i32
  %67 = lshr i32 %62, %66
  %68 = shl nsw i32 -1, %66
  %69 = xor i32 %68, -1
  %70 = and i32 %62, %69
  %71 = shl i32 %67, 16
  %72 = or i32 %71, %70
  br label %73

73:                                               ; preds = %36, %61
  %74 = phi i32 [ %72, %61 ], [ %1, %36 ]
  %75 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw i32 %77, 24
  %79 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 16
  %83 = or i32 %82, %78
  %84 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = or i32 %83, %87
  %89 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %88, %91
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %107, label %94, !prof !2

94:                                               ; preds = %73
  %95 = zext i8 %76 to i64
  %96 = shl nuw nsw i64 %95, 24
  %97 = zext i8 %80 to i64
  %98 = shl nuw nsw i64 %97, 16
  %99 = or i64 %98, %96
  %100 = zext i8 %85 to i64
  %101 = shl nuw nsw i64 %100, 8
  %102 = or i64 %99, %101
  %103 = zext i8 %90 to i64
  %104 = or i64 %102, %103
  %105 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %104
  %106 = bitcast i8* %105 to %"struct.OT::VariationStore"*
  br label %107

107:                                              ; preds = %73, %94
  %108 = phi %"struct.OT::VariationStore"* [ %106, %94 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationStore"*), %73 ]
  %109 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 11
  %110 = load i32*, i32** %109, align 8
  %111 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 10
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %74, 16
  %114 = and i32 %74, 65535
  %115 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 2
  %116 = bitcast %"struct.OT::ArrayOf.104"* %115 to i16*
  %117 = load i16, i16* %116, align 1
  %118 = tail call i16 @llvm.bswap.i16(i16 %117) #10
  %119 = zext i16 %118 to i32
  %120 = icmp ult i32 %113, %119
  br i1 %120, label %121, label %192, !prof !3

121:                                              ; preds = %107
  %122 = zext i32 %113 to i64
  %123 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 2, i32 1, i64 %122, i32 0, i32 0, i32 0, i32 0, i64 0
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl nuw i32 %125, 24
  %127 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 2, i32 1, i64 %122, i32 0, i32 0, i32 0, i32 0, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl nuw nsw i32 %129, 16
  %131 = or i32 %130, %126
  %132 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 2, i32 1, i64 %122, i32 0, i32 0, i32 0, i32 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw nsw i32 %134, 8
  %136 = or i32 %131, %135
  %137 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 2, i32 1, i64 %122, i32 0, i32 0, i32 0, i32 0, i64 3
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = or i32 %136, %139
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %155, label %142, !prof !2

142:                                              ; preds = %121
  %143 = zext i8 %124 to i64
  %144 = shl nuw nsw i64 %143, 24
  %145 = zext i8 %128 to i64
  %146 = shl nuw nsw i64 %145, 16
  %147 = or i64 %146, %144
  %148 = zext i8 %133 to i64
  %149 = shl nuw nsw i64 %148, 8
  %150 = or i64 %147, %149
  %151 = zext i8 %138 to i64
  %152 = or i64 %150, %151
  %153 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 0, i32 0, i32 0, i64 %152
  %154 = bitcast i8* %153 to %"struct.OT::VarData"*
  br label %155

155:                                              ; preds = %142, %121
  %156 = phi %"struct.OT::VarData"* [ %154, %142 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarData"*), %121 ]
  %157 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = shl nuw i32 %159, 24
  %161 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 16
  %165 = or i32 %164, %160
  %166 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = shl nuw nsw i32 %168, 8
  %170 = or i32 %165, %169
  %171 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = or i32 %170, %173
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %189, label %176, !prof !2

176:                                              ; preds = %155
  %177 = zext i8 %158 to i64
  %178 = shl nuw nsw i64 %177, 24
  %179 = zext i8 %162 to i64
  %180 = shl nuw nsw i64 %179, 16
  %181 = or i64 %180, %178
  %182 = zext i8 %167 to i64
  %183 = shl nuw nsw i64 %182, 8
  %184 = or i64 %181, %183
  %185 = zext i8 %172 to i64
  %186 = or i64 %184, %185
  %187 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %108, i64 0, i32 0, i32 0, i32 0, i64 %186
  %188 = bitcast i8* %187 to %"struct.OT::VarRegionList"*
  br label %189

189:                                              ; preds = %176, %155
  %190 = phi %"struct.OT::VarRegionList"* [ %188, %176 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarRegionList"*), %155 ]
  %191 = tail call float @_ZNK2OT7VarData9get_deltaEjPKijRKNS_13VarRegionListE(%"struct.OT::VarData"* %156, i32 %114, i32* %110, i32 %112, %"struct.OT::VarRegionList"* dereferenceable(10) %190) #10
  br label %192

192:                                              ; preds = %107, %189
  %193 = phi float [ %191, %189 ], [ 0.000000e+00, %107 ]
  ret float %193

194:                                              ; preds = %44
  %195 = shl nuw nsw i32 %59, 8
  %196 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %56, i64 1, i32 0, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = or i32 %195, %198
  %200 = icmp eq i16 %52, 2
  br i1 %200, label %61, label %201

201:                                              ; preds = %194
  %202 = shl nuw nsw i32 %199, 8
  %203 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %56, i64 2, i32 0, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = or i32 %202, %205
  %207 = icmp eq i16 %52, 3
  br i1 %207, label %61, label %208

208:                                              ; preds = %201
  %209 = shl nuw i32 %206, 8
  %210 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %56, i64 3, i32 0, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = or i32 %209, %212
  br label %61
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT7VarData9get_deltaEjPKijRKNS_13VarRegionListE(%"struct.OT::VarData"*, i32, i32*, i32, %"struct.OT::VarRegionList"* dereferenceable(10)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.OT::VarData"* %0 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #10
  %9 = zext i16 %8 to i32
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %82, !prof !3

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 0
  %13 = bitcast %"struct.OT::IntType"* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #10
  %16 = zext i16 %15 to i32
  %17 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 1
  %18 = bitcast %"struct.OT::IntType"* %17 to i16*
  %19 = load i16, i16* %18, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #10
  %21 = zext i16 %20 to i32
  %22 = zext i16 %15 to i64
  %23 = shl nuw nsw i64 %22, 1
  %24 = add nuw nsw i64 %23, 2
  %25 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 %24
  %26 = add nuw nsw i32 %21, %16
  %27 = mul i32 %26, %1
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to %"struct.OT::IntType.281"*
  %31 = icmp eq i16 %19, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %11
  %33 = zext i16 %20 to i64
  br label %34

34:                                               ; preds = %32, %34
  %35 = phi i64 [ 0, %32 ], [ %51, %34 ]
  %36 = phi %"struct.OT::IntType.281"* [ %30, %32 ], [ %44, %34 ]
  %37 = phi float [ 0.000000e+00, %32 ], [ %50, %34 ]
  %38 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 1, i64 %35
  %39 = bitcast %"struct.OT::IntType"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #10
  %42 = zext i16 %41 to i32
  %43 = tail call float @_ZNK2OT13VarRegionList8evaluateEjPKij(%"struct.OT::VarRegionList"* %4, i32 %42, i32* %2, i32 %3)
  %44 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %36, i64 1
  %45 = bitcast %"struct.OT::IntType.281"* %36 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #10
  %48 = sitofp i16 %47 to float
  %49 = fmul float %43, %48
  %50 = fadd float %37, %49
  %51 = add nuw nsw i64 %35, 1
  %52 = icmp ult i64 %51, %33
  br i1 %52, label %34, label %53

53:                                               ; preds = %34
  %54 = trunc i64 %51 to i32
  br label %55

55:                                               ; preds = %53, %11
  %56 = phi float [ 0.000000e+00, %11 ], [ %50, %53 ]
  %57 = phi i32 [ 0, %11 ], [ %54, %53 ]
  %58 = phi %"struct.OT::IntType.281"* [ %30, %11 ], [ %44, %53 ]
  %59 = icmp ult i32 %57, %16
  br i1 %59, label %60, label %82

60:                                               ; preds = %55
  %61 = bitcast %"struct.OT::IntType.281"* %58 to %"struct.OT::IntType.288"*
  %62 = zext i32 %57 to i64
  %63 = zext i16 %15 to i64
  br label %64

64:                                               ; preds = %64, %60
  %65 = phi i64 [ %62, %60 ], [ %80, %64 ]
  %66 = phi %"struct.OT::IntType.288"* [ %61, %60 ], [ %74, %64 ]
  %67 = phi float [ %56, %60 ], [ %79, %64 ]
  %68 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %0, i64 0, i32 2, i32 1, i64 %65
  %69 = bitcast %"struct.OT::IntType"* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #10
  %72 = zext i16 %71 to i32
  %73 = tail call float @_ZNK2OT13VarRegionList8evaluateEjPKij(%"struct.OT::VarRegionList"* %4, i32 %72, i32* %2, i32 %3)
  %74 = getelementptr inbounds %"struct.OT::IntType.288", %"struct.OT::IntType.288"* %66, i64 1
  %75 = getelementptr inbounds %"struct.OT::IntType.288", %"struct.OT::IntType.288"* %66, i64 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = sitofp i8 %76 to float
  %78 = fmul float %73, %77
  %79 = fadd float %67, %78
  %80 = add nuw nsw i64 %65, 1
  %81 = icmp eq i64 %80, %63
  br i1 %81, label %82, label %64

82:                                               ; preds = %64, %55, %5
  %83 = phi float [ 0.000000e+00, %5 ], [ %56, %55 ], [ %79, %64 ]
  ret float %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT13VarRegionList8evaluateEjPKij(%"struct.OT::VarRegionList"*, i32, i32*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::VarRegionList", %"struct.OT::VarRegionList"* %0, i64 0, i32 1
  %6 = bitcast %"struct.OT::IntType"* %5 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #10
  %9 = zext i16 %8 to i32
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %81, !prof !3

11:                                               ; preds = %4
  %12 = bitcast %"struct.OT::VarRegionList"* %0 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #10
  %15 = zext i16 %14 to i32
  %16 = mul i32 %15, %1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.OT::VarRegionList", %"struct.OT::VarRegionList"* %0, i64 0, i32 2, i32 0, i64 %17
  %19 = icmp eq i16 %13, 0
  br i1 %19, label %81, label %20

20:                                               ; preds = %11
  %21 = zext i32 %3 to i64
  %22 = zext i16 %14 to i64
  br label %23

23:                                               ; preds = %20, %77
  %24 = phi i64 [ 0, %20 ], [ %79, %77 ]
  %25 = phi float [ 1.000000e+00, %20 ], [ %78, %77 ]
  %26 = icmp ult i64 %24, %21
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %2, i64 %24
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i32 [ %29, %27 ], [ 0, %23 ]
  %32 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24
  %33 = bitcast %"struct.OT::VarRegionAxis"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #10
  %36 = sext i16 %35 to i32
  %37 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24, i32 1, i32 0
  %38 = bitcast %"struct.OT::IntType.281"* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #10
  %41 = sext i16 %40 to i32
  %42 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24, i32 2, i32 0
  %43 = bitcast %"struct.OT::IntType.281"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #10
  %46 = sext i16 %45 to i32
  %47 = icmp slt i16 %40, %35
  %48 = icmp slt i16 %45, %40
  %49 = or i1 %47, %48
  br i1 %49, label %77, label %50, !prof !2

50:                                               ; preds = %30
  %51 = icmp slt i16 %35, 0
  %52 = icmp sgt i16 %45, 0
  %53 = and i1 %51, %52
  %54 = icmp ne i16 %39, 0
  %55 = and i1 %54, %53
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %50
  %57 = icmp eq i16 %39, 0
  %58 = icmp eq i32 %31, %41
  %59 = or i1 %57, %58
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %31, %36
  %62 = icmp slt i32 %31, %46
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %81

64:                                               ; preds = %60
  %65 = icmp slt i32 %31, %41
  %66 = sub nsw i32 %31, %36
  %67 = sub nsw i32 %41, %36
  %68 = sub nsw i32 %46, %31
  %69 = sub nsw i32 %46, %41
  %70 = select i1 %65, i32 %67, i32 %69
  %71 = select i1 %65, i32 %66, i32 %68
  %72 = sitofp i32 %71 to float
  %73 = sitofp i32 %70 to float
  %74 = fdiv float %72, %73
  %75 = fcmp oeq float %74, 0.000000e+00
  %76 = fmul float %25, %74
  br i1 %75, label %81, label %77

77:                                               ; preds = %64, %56, %50, %30
  %78 = phi float [ %76, %64 ], [ %25, %30 ], [ %25, %50 ], [ %25, %56 ]
  %79 = add nuw nsw i64 %24, 1
  %80 = icmp ult i64 %79, %22
  br i1 %80, label %23, label %81

81:                                               ; preds = %77, %60, %64, %11, %4
  %82 = phi float [ 0.000000e+00, %4 ], [ 1.000000e+00, %11 ], [ %78, %77 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %64 ]
  ret float %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t11get_advanceEjP9hb_font_t(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, i32, %struct.hb_font_t*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %12, label %7, !prof !3

7:                                                ; preds = %3
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %61

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  br label %61

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %struct.hb_blob_t*, %struct.hb_blob_t** %13, align 8
  %15 = icmp eq %struct.hb_blob_t* %14, null
  %16 = select i1 %15, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %14
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %16, i64 0, i32 1
  %18 = bitcast i8** %17 to %"struct.OT::hmtxvmtx.291"**
  %19 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %18, align 8
  %20 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, %1
  %24 = select i1 %23, i32 %22, i32 %1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %19, i64 0, i32 0, i32 0, i64 %25, i32 0
  %27 = bitcast %"struct.OT::IntType"* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #10
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 10
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load %struct.hb_blob_t*, %struct.hb_blob_t** %35, align 8
  %37 = icmp eq %struct.hb_blob_t* %36, null
  %38 = select i1 %37, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %36
  %39 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %34
  %43 = uitofp i16 %29 to float
  %44 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %38, i64 0, i32 1
  %45 = bitcast i8** %44 to %"struct.OT::HVARVVAR"**
  %46 = load %"struct.OT::HVARVVAR"*, %"struct.OT::HVARVVAR"** %45, align 8
  %47 = icmp ult i32 %40, 20
  %48 = select i1 %47, %"struct.OT::HVARVVAR"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::HVARVVAR"*), %"struct.OT::HVARVVAR"* %46
  %49 = tail call float @_ZNK2OT8HVARVVAR15get_advance_varEjP9hb_font_t(%"struct.OT::HVARVVAR"* %48, i32 %1, %struct.hb_font_t* %2)
  %50 = fadd float %49, 5.000000e-01
  %51 = tail call float @llvm.floor.f32(float %50) #10
  %52 = fadd float %51, %43
  %53 = fptoui float %52 to i32
  br label %61

54:                                               ; preds = %34
  %55 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 2
  %56 = load %struct.hb_face_t*, %struct.hb_face_t** %55, align 8
  %57 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %56, i64 0, i32 8, i32 12, i32 0
  %58 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %57) #10
  %59 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %58, i64 0, i32 0
  %60 = tail call i32 @_ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb(%"struct.OT::glyf::accelerator_t"* %59, %struct.hb_font_t* %2, i32 %1, i1 zeroext true) #10
  br label %61

61:                                               ; preds = %9, %7, %12, %54, %42
  %62 = phi i32 [ %53, %42 ], [ %60, %54 ], [ %30, %12 ], [ 0, %7 ], [ %11, %9 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::vmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18vmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj11EE9hb_face_tLj11ES1_E10get_storedEv(%struct.hb_lazy_loader_t.56*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.56, %struct.hb_lazy_loader_t.56* %0, i64 -11
  %3 = bitcast %struct.hb_lazy_loader_t.56* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.56* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::vmtx_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %40, !prof !2

8:                                                ; preds = %1, %35
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 32) #10
  %13 = bitcast i8* %12 to %"struct.OT::vmtx_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*
  tail call void @_ZN2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t4initEP9hb_face_tj(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9, i32 0) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::vmtx_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::vmtx_accelerator_t"*), %"struct.OT::vmtx_accelerator_t"* %13, !prof !2
  %19 = ptrtoint %"struct.OT::vmtx_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %40, label %22, !prof !3

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::vmtx_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::vmtx_accelerator_t", %"struct.OT::vmtx_accelerator_t"* %18, i64 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %struct.hb_blob_t*, %struct.hb_blob_t** %26, align 8
  %28 = icmp eq %struct.hb_blob_t* %27, null
  %29 = select i1 %28, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %27
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %29) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %26, align 8
  %30 = getelementptr inbounds %"struct.OT::vmtx_accelerator_t", %"struct.OT::vmtx_accelerator_t"* %18, i64 0, i32 0, i32 4, i32 0, i32 0
  %31 = load %struct.hb_blob_t*, %struct.hb_blob_t** %30, align 8
  %32 = icmp eq %struct.hb_blob_t* %31, null
  %33 = select i1 %32, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %33) #10
  %34 = bitcast %"struct.OT::vmtx_accelerator_t"* %18 to i8*
  tail call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %25, %22
  %36 = load atomic i64, i64* %4 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %8, label %38, !prof !2

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.OT::vmtx_accelerator_t"*
  br label %40

40:                                               ; preds = %8, %17, %38, %1
  %41 = phi %"struct.OT::vmtx_accelerator_t"* [ %39, %38 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::vmtx_accelerator_t"*), %8 ]
  ret %"struct.OT::vmtx_accelerator_t"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t4initEP9hb_face_tj(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %struct.hb_face_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.hb_sanitize_context_t, align 8
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i32 @hb_face_get_upem(%struct.hb_face_t* %1) #10
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ %2, %3 ]
  %10 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 8, i32 10, i32 0
  %12 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4vheaE22hb_table_lazy_loader_tIS1_Lj10EE9hb_face_tLj10E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.53* %11) #10
  %13 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 1
  %14 = bitcast i8** %13 to %"struct.OT::vhea"**
  %15 = load %"struct.OT::vhea"*, %"struct.OT::vhea"** %14, align 8
  %16 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 36
  %19 = select i1 %18, %"struct.OT::vhea"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::vhea"*), %"struct.OT::vhea"* %15
  %20 = getelementptr inbounds %"struct.OT::vhea", %"struct.OT::vhea"* %19, i64 0, i32 0, i32 16
  %21 = bitcast %"struct.OT::IntType"* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #10
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 1
  store i32 %24, i32* %25, align 4
  %26 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  %27 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1986884728) #10
  %28 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %27) #10
  %29 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %28, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %28) #10
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %8
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %27) #10
  br label %33

33:                                               ; preds = %8, %32
  %34 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  store %struct.hb_blob_t* %27, %struct.hb_blob_t** %34, align 8
  %35 = icmp eq %struct.hb_blob_t* %27, null
  %36 = select i1 %35, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %27
  %37 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %25, align 4
  %40 = shl i32 %39, 2
  %41 = icmp ugt i32 %40, %38
  br i1 %41, label %42, label %45, !prof !2

42:                                               ; preds = %33
  %43 = lshr i32 %38, 2
  store i32 %43, i32* %25, align 4
  %44 = and i32 %38, -4
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i32 [ %44, %42 ], [ %40, %33 ]
  %47 = phi i32 [ %43, %42 ], [ %39, %33 ]
  %48 = sub i32 %38, %46
  %49 = lshr i32 %48, 1
  %50 = add i32 %49, %47
  %51 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 0
  store i32 %50, i32* %51, align 8
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %45
  store i32 0, i32* %25, align 4
  store i32 0, i32* %51, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %36) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %34, align 8
  %54 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  store %struct.hb_blob_t* %54, %struct.hb_blob_t** %34, align 8
  br label %55

55:                                               ; preds = %53, %45
  %56 = bitcast %struct.hb_sanitize_context_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #10
  %57 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 2
  %59 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 8
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %60, align 8
  %61 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 10
  %62 = bitcast i8** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 25, i1 false) #10
  %63 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %4, i64 0, i32 11
  %64 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  store i32 %64, i32* %61, align 8
  store i8 1, i8* %63, align 4
  %65 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1448493394) #10
  %66 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT8HVARVVAREEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %4, %struct.hb_blob_t* %65) #10
  %67 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 4, i32 0, i32 0
  store %struct.hb_blob_t* %66, %struct.hb_blob_t** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4vheaE22hb_table_lazy_loader_tIS1_Lj10EE9hb_face_tLj10E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.53*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.53* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.53, %struct.hb_lazy_loader_t.53* %0, i64 -10
  %9 = bitcast %struct.hb_lazy_loader_t.53* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #10
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1986553185) #10
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4vheaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #10
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #10
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4vheaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %42

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 36
  br i1 %30, label %38, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -36
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 256
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %36 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  br i1 %35, label %37, label %40

37:                                               ; preds = %31
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %42

38:                                               ; preds = %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %39 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  br label %40

40:                                               ; preds = %38, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %41 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %42

42:                                               ; preds = %37, %40, %27
  %43 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %37 ], [ %41, %40 ]
  ret %struct.hb_blob_t* %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4glyf13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::glyf::accelerator_t"*, %struct.hb_font_t*, i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.OT::glyf::accelerator_t::points_aggregator_t", align 8
  %6 = alloca %"struct.OT::glyf::Glyph", align 8
  %7 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %10, label %58, !prof !3

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %10
  %15 = bitcast %"struct.OT::glyf::accelerator_t"* %0 to %"struct.OT::gvar::accelerator_t"**
  %16 = load %"struct.OT::gvar::accelerator_t"*, %"struct.OT::gvar::accelerator_t"** %15, align 8
  %17 = getelementptr inbounds %"struct.OT::gvar::accelerator_t", %"struct.OT::gvar::accelerator_t"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %struct.hb_blob_t*, %struct.hb_blob_t** %17, align 8
  %19 = icmp eq %struct.hb_blob_t* %18, null
  %20 = select i1 %19, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %18
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %20, i64 0, i32 1
  %22 = bitcast i8** %21 to %"struct.OT::gvar"**
  %23 = load %"struct.OT::gvar"*, %"struct.OT::gvar"** %22, align 8
  %24 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %20, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %25, 20
  %27 = select i1 %26, %"struct.OT::gvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar"*), %"struct.OT::gvar"* %23
  %28 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %27, i64 0, i32 1
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = zext i16 %31 to i32
  %33 = icmp eq i32 %12, %32
  br i1 %33, label %34, label %45

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %5, i64 0, i32 3, i32 0
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <4 x float>* %36, align 8
  %37 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %5, i64 0, i32 0
  store %struct.hb_font_t* %1, %struct.hb_font_t** %37, align 8
  %38 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %5, i64 0, i32 1
  store %struct.hb_glyph_extents_t* %3, %struct.hb_glyph_extents_t** %38, align 8
  %39 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %5, i64 0, i32 2
  store %"struct.OT::contour_point_t"* null, %"struct.OT::contour_point_t"** %39, align 8
  %40 = icmp eq %struct.hb_glyph_extents_t* %3, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <4 x float>* %42, align 8
  br label %43

43:                                               ; preds = %34, %41
  %44 = tail call zeroext i1 @_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_(%"struct.OT::glyf::accelerator_t"* %0, %struct.hb_font_t* %1, i32 %2, %"struct.OT::glyf::accelerator_t::points_aggregator_t"* nonnull byval(%"struct.OT::glyf::accelerator_t::points_aggregator_t") align 8 %5)
  br label %58

45:                                               ; preds = %10, %14
  %46 = bitcast %"struct.OT::glyf::Glyph"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #10
  call void @_ZNK2OT4glyf13accelerator_t13glyph_for_gidEjb(%"struct.OT::glyf::Glyph"* nonnull sret %6, %"struct.OT::glyf::accelerator_t"* %0, i32 %2, i1 zeroext false)
  %47 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %6, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %6, i64 0, i32 3
  %52 = load %"struct.OT::glyf::Glyph::GlyphHeader"*, %"struct.OT::glyf::Glyph::GlyphHeader"** %51, align 8
  %53 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %6, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = call zeroext i1 @_ZNK2OT4glyf5Glyph11GlyphHeader11get_extentsEP9hb_font_tRKNS0_13accelerator_tEjP18hb_glyph_extents_t(%"struct.OT::glyf::Glyph::GlyphHeader"* %52, %struct.hb_font_t* %1, %"struct.OT::glyf::accelerator_t"* dereferenceable(56) %0, i32 %54, %struct.hb_glyph_extents_t* %3) #10
  br label %56

56:                                               ; preds = %45, %50
  %57 = phi i1 [ %55, %50 ], [ true, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #10
  br label %58

58:                                               ; preds = %4, %56, %43
  %59 = phi i1 [ %44, %43 ], [ %57, %56 ], [ false, %4 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT8hmtxvmtxINS_4vmtxENS_4vheaEE13accelerator_t16get_side_bearingEP9hb_font_tj(%"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %struct.hb_font_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.hb_glyph_extents_t, align 4
  %5 = alloca [4 x %"struct.OT::contour_point_t"], align 16
  %6 = alloca %"struct.OT::glyf::accelerator_t::points_aggregator_t", align 8
  %7 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %struct.hb_blob_t*, %struct.hb_blob_t** %11, align 8
  %13 = icmp eq %struct.hb_blob_t* %12, null
  %14 = select i1 %13, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %12
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 1
  %16 = bitcast i8** %15 to %"struct.OT::hmtxvmtx.291"**
  %17 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %16, align 8
  %18 = zext i32 %2 to i64
  %19 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %17, i64 0, i32 0, i32 0, i64 %18, i32 1
  %20 = bitcast %"struct.OT::IntType.281"* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #10
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  br label %48

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ugt i32 %28, %2
  br i1 %29, label %30, label %48, !prof !3

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %struct.hb_blob_t*, %struct.hb_blob_t** %31, align 8
  %33 = icmp eq %struct.hb_blob_t* %32, null
  %34 = select i1 %33, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %32
  %35 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %34, i64 0, i32 1
  %36 = bitcast i8** %35 to %"struct.OT::hmtxvmtx.291"**
  %37 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %36, align 8
  %38 = zext i32 %8 to i64
  %39 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %37, i64 0, i32 0, i32 0, i64 %38
  %40 = bitcast %"struct.OT::LongMetric"* %39 to %"struct.OT::IntType.281"*
  %41 = sub i32 %2, %8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %40, i64 %42
  %44 = bitcast %"struct.OT::IntType.281"* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = tail call i16 @llvm.bswap.i16(i16 %45) #10
  %47 = sext i16 %46 to i32
  br label %48

48:                                               ; preds = %10, %26, %30
  %49 = phi i32 [ %25, %10 ], [ %28, %30 ], [ %28, %26 ]
  %50 = phi i32 [ %23, %10 ], [ %47, %30 ], [ 0, %26 ]
  %51 = icmp ugt i32 %49, %2
  br i1 %51, label %52, label %152, !prof !3

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 10
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %152, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %0, i64 0, i32 4, i32 0, i32 0
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %57, align 8
  %59 = icmp eq %struct.hb_blob_t* %58, null
  %60 = select i1 %59, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %58
  %61 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %56
  %65 = sitofp i32 %50 to float
  %66 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %60, i64 0, i32 1
  %67 = bitcast i8** %66 to %"struct.OT::HVARVVAR"**
  %68 = load %"struct.OT::HVARVVAR"*, %"struct.OT::HVARVVAR"** %67, align 8
  %69 = icmp ult i32 %62, 20
  %70 = select i1 %69, %"struct.OT::HVARVVAR"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::HVARVVAR"*), %"struct.OT::HVARVVAR"* %68
  %71 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 11
  %72 = load i32*, i32** %71, align 8
  %73 = tail call float @_ZNK2OT8HVARVVAR20get_side_bearing_varEjPKij(%"struct.OT::HVARVVAR"* %70, i32 %2, i32* %72, i32 %54)
  %74 = fadd float %73, %65
  %75 = fptosi float %74 to i32
  br label %152

76:                                               ; preds = %56
  %77 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %78 = load %struct.hb_face_t*, %struct.hb_face_t** %77, align 8
  %79 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %78, i64 0, i32 8, i32 12, i32 0
  %80 = tail call %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61* %79) #10
  %81 = bitcast %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81)
  %82 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %80, i64 0, i32 0, i32 4
  %83 = load i32, i32* %82, align 4
  %84 = icmp ugt i32 %83, %2
  br i1 %84, label %85, label %150, !prof !3

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %80, i64 0, i32 0
  %87 = bitcast %struct.hb_glyph_extents_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #10
  %88 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %87, i8 -86, i64 16, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %88) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %88, i8* align 16 getelementptr inbounds ([4 x { i8, [3 x i8], float, float, i8, [3 x i8] }], [4 x { i8, [3 x i8], float, float, i8, [3 x i8] }]* @__const._ZNK2OT4glyf13accelerator_t15get_advance_varEP9hb_font_tjb.phantoms, i64 0, i64 0, i32 0), i64 64, i1 false) #10
  %89 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 0
  %90 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 3, i32 0
  %91 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 0
  store %struct.hb_font_t* %1, %struct.hb_font_t** %91, align 8
  %92 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 1
  store %struct.hb_glyph_extents_t* %4, %struct.hb_glyph_extents_t** %92, align 8
  %93 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %6, i64 0, i32 2
  store %"struct.OT::contour_point_t"* %89, %"struct.OT::contour_point_t"** %93, align 8
  %94 = bitcast float* %90 to <4 x float>*
  store <4 x float> <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <4 x float>* %94, align 8
  %95 = call zeroext i1 @_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_(%"struct.OT::glyf::accelerator_t"* %86, %struct.hb_font_t* %1, i32 %2, %"struct.OT::glyf::accelerator_t::points_aggregator_t"* nonnull byval(%"struct.OT::glyf::accelerator_t::points_aggregator_t") align 8 %6) #10
  br i1 %95, label %139, label %96, !prof !3

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %80, i64 0, i32 0, i32 2
  %98 = bitcast %"struct.OT::vmtx_accelerator_t"** %97 to %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"**
  %99 = load %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"** %98, align 8
  %100 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %99, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp ugt i32 %101, %2
  br i1 %102, label %103, label %117

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %99, i64 0, i32 3, i32 0, i32 0
  %105 = load %struct.hb_blob_t*, %struct.hb_blob_t** %104, align 8
  %106 = icmp eq %struct.hb_blob_t* %105, null
  %107 = select i1 %106, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %105
  %108 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %107, i64 0, i32 1
  %109 = bitcast i8** %108 to %"struct.OT::hmtxvmtx.291"**
  %110 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %109, align 8
  %111 = zext i32 %2 to i64
  %112 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %110, i64 0, i32 0, i32 0, i64 %111, i32 1
  %113 = bitcast %"struct.OT::IntType.281"* %112 to i16*
  %114 = load i16, i16* %113, align 1
  %115 = call i16 @llvm.bswap.i16(i16 %114) #10
  %116 = sext i16 %115 to i32
  br label %148

117:                                              ; preds = %96
  %118 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %99, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp ugt i32 %119, %2
  br i1 %120, label %121, label %148, !prof !3

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %99, i64 0, i32 3, i32 0, i32 0
  %123 = load %struct.hb_blob_t*, %struct.hb_blob_t** %122, align 8
  %124 = icmp eq %struct.hb_blob_t* %123, null
  %125 = select i1 %124, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %123
  %126 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %125, i64 0, i32 1
  %127 = bitcast i8** %126 to %"struct.OT::hmtxvmtx.291"**
  %128 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %127, align 8
  %129 = zext i32 %101 to i64
  %130 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %128, i64 0, i32 0, i32 0, i64 %129
  %131 = bitcast %"struct.OT::LongMetric"* %130 to %"struct.OT::IntType.281"*
  %132 = sub i32 %2, %101
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %131, i64 %133
  %135 = bitcast %"struct.OT::IntType.281"* %134 to i16*
  %136 = load i16, i16* %135, align 1
  %137 = call i16 @llvm.bswap.i16(i16 %136) #10
  %138 = sext i16 %137 to i32
  br label %148

139:                                              ; preds = %85
  %140 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %4, i64 0, i32 1
  %141 = getelementptr inbounds [4 x %"struct.OT::contour_point_t"], [4 x %"struct.OT::contour_point_t"]* %5, i64 0, i64 2, i32 2
  %142 = load float, float* %141, align 8
  %143 = call float @llvm.ceil.f32(float %142) #10
  %144 = load i32, i32* %140, align 4
  %145 = sitofp i32 %144 to float
  %146 = fsub float %143, %145
  %147 = fptosi float %146 to i32
  br label %148

148:                                              ; preds = %139, %121, %117, %103
  %149 = phi i32 [ %147, %139 ], [ %116, %103 ], [ %138, %121 ], [ 0, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %88) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #10
  br label %150

150:                                              ; preds = %76, %148
  %151 = phi i32 [ %149, %148 ], [ 0, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81)
  br label %152

152:                                              ; preds = %48, %52, %150, %64
  %153 = phi i32 [ %75, %64 ], [ %151, %150 ], [ %50, %52 ], [ %50, %48 ]
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4VORGE22hb_table_lazy_loader_tIS1_Lj15EE9hb_face_tLj15E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.115*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.115* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.115, %struct.hb_lazy_loader_t.115* %0, i64 -15
  %9 = bitcast %struct.hb_lazy_loader_t.115* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #10
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1448038983) #10
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4VORGEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #10
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #10
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4VORGEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %56

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 8
  br i1 %30, label %51, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -8
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 256
  br i1 %35, label %36, label %51

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %8, i64 6
  %38 = add nsw i32 %22, -10
  store i32 %38, i32* %23, align 8
  %39 = bitcast i8* %37 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #10
  %42 = zext i16 %41 to i32
  %43 = shl nuw nsw i32 %42, 2
  %44 = icmp eq i16 %40, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %36
  %46 = add i32 %10, -8
  %47 = icmp ugt i32 %43, %46
  br i1 %47, label %51, label %48, !prof !8

48:                                               ; preds = %45
  %49 = sub nsw i32 %38, %43
  store i32 %49, i32* %23, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %54, label %51, !prof !3

51:                                               ; preds = %31, %29, %48, %45
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %52 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %53 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %56

54:                                               ; preds = %36, %48
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %55 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %56

56:                                               ; preds = %54, %51, %27
  %57 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %54 ], [ %53, %51 ]
  ret %struct.hb_blob_t* %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4glyf13accelerator_t10get_pointsINS1_19points_aggregator_tEEEbP9hb_font_tjT_(%"struct.OT::glyf::accelerator_t"*, %struct.hb_font_t*, i32, %"struct.OT::glyf::accelerator_t::points_aggregator_t"* byval(%"struct.OT::glyf::accelerator_t::points_aggregator_t") align 8) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.OT::contour_point_vector_t", align 8
  %6 = alloca %"struct.OT::glyf::Glyph", align 8
  %7 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %10, label %86

10:                                               ; preds = %4
  %11 = bitcast %"struct.OT::contour_point_vector_t"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %5, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #10
  %14 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 1
  %15 = load %struct.hb_glyph_extents_t*, %struct.hb_glyph_extents_t** %14, align 8
  %16 = icmp eq %struct.hb_glyph_extents_t* %15, null
  %17 = bitcast %"struct.OT::glyf::Glyph"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #10
  call void @_ZNK2OT4glyf13accelerator_t13glyph_for_gidEjb(%"struct.OT::glyf::Glyph"* nonnull sret %6, %"struct.OT::glyf::accelerator_t"* %0, i32 %2, i1 zeroext false)
  %18 = call zeroext i1 @_ZNK2OT4glyf5Glyph10get_pointsEP9hb_font_tRKNS0_13accelerator_tERNS_22contour_point_vector_tEbj(%"struct.OT::glyf::Glyph"* nonnull %6, %struct.hb_font_t* %1, %"struct.OT::glyf::accelerator_t"* dereferenceable(56) %0, %"struct.OT::contour_point_vector_t"* nonnull dereferenceable(16) %5, i1 zeroext %16, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #10
  br i1 %18, label %19, label %82, !prof !3

19:                                               ; preds = %10
  br i1 %16, label %63, label %20

20:                                               ; preds = %19
  %21 = load i32, i32* %12, align 4
  %22 = icmp ugt i32 %21, 4
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 3, i32 1
  %26 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 3, i32 2
  %27 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 3, i32 3
  %28 = zext i32 %21 to i64
  br label %33

29:                                               ; preds = %40, %20
  %30 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 3
  %31 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 0
  %32 = load %struct.hb_font_t*, %struct.hb_font_t** %31, align 8
  call void @_ZN2OT4glyf13accelerator_t19points_aggregator_t16contour_bounds_t11get_extentsEP9hb_font_tP18hb_glyph_extents_t(%"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"* %30, %struct.hb_font_t* %32, %struct.hb_glyph_extents_t* nonnull %15) #10
  br label %63

33:                                               ; preds = %23, %40
  %34 = phi i64 [ 0, %23 ], [ %60, %40 ]
  %35 = icmp ult i64 %34, %28
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %40

37:                                               ; preds = %33
  %38 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %13, align 8
  %39 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %38, i64 %34
  br label %40

40:                                               ; preds = %36, %37
  %41 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %36 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %41, i64 0, i32 1
  %43 = load float, float* %24, align 8
  %44 = load float, float* %42, align 4
  %45 = fcmp ole float %43, %44
  %46 = select i1 %45, float %43, float %44
  store float %46, float* %24, align 8
  %47 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %41, i64 0, i32 2
  %48 = load float, float* %25, align 4
  %49 = load float, float* %47, align 4
  %50 = fcmp ole float %48, %49
  %51 = select i1 %50, float %48, float %49
  store float %51, float* %25, align 4
  %52 = load float, float* %26, align 8
  %53 = load float, float* %42, align 4
  %54 = fcmp oge float %52, %53
  %55 = select i1 %54, float %52, float %53
  store float %55, float* %26, align 8
  %56 = load float, float* %27, align 4
  %57 = load float, float* %47, align 4
  %58 = fcmp oge float %56, %57
  %59 = select i1 %58, float %56, float %57
  store float %59, float* %27, align 4
  %60 = add nuw nsw i64 %34, 1
  %61 = add nuw nsw i64 %34, 5
  %62 = icmp ult i64 %61, %28
  br i1 %62, label %33, label %29

63:                                               ; preds = %19, %29
  %64 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t"* %3, i64 0, i32 2
  %65 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %64, align 8
  %66 = icmp eq %"struct.OT::contour_point_t"* %65, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %63
  %68 = load i32, i32* %12, align 4
  %69 = icmp ugt i32 %68, 3
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %76

71:                                               ; preds = %67
  %72 = add i32 %68, -4
  %73 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %13, align 8
  %74 = zext i32 %72 to i64
  %75 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %73, i64 %74
  br label %76

76:                                               ; preds = %70, %71
  %77 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %70 ], [ %75, %71 ]
  %78 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %77, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 16, i1 false)
  %80 = load i32, i32* %12, align 4
  %81 = icmp ugt i32 %80, 2
  br i1 %81, label %88, label %94, !prof !3

82:                                               ; preds = %112, %63, %10
  %83 = phi i1 [ false, %10 ], [ true, %63 ], [ true, %112 ]
  %84 = bitcast %"struct.OT::contour_point_t"** %13 to i8**
  %85 = load i8*, i8** %84, align 8
  call void @free(i8* %85) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  br label %86

86:                                               ; preds = %4, %82
  %87 = phi i1 [ %83, %82 ], [ false, %4 ]
  ret i1 %87

88:                                               ; preds = %76
  %89 = add i32 %80, -3
  %90 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %13, align 8
  %91 = zext i32 %89 to i64
  %92 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 1, i32 0
  %93 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %90, i64 %91, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 16, i1 false)
  br label %97

94:                                               ; preds = %76
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  %95 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* nonnull align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i64 16, i1 false)
  %96 = icmp eq i32 %80, 2
  br i1 %96, label %97, label %103, !prof !3

97:                                               ; preds = %94, %88
  %98 = add i32 %80, -2
  %99 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %13, align 8
  %100 = zext i32 %98 to i64
  %101 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 2, i32 0
  %102 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %99, i64 %100, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 16, i1 false)
  br label %107

103:                                              ; preds = %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  %104 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* nonnull align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i64 16, i1 false)
  %105 = icmp eq i32 %80, 0
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %112

107:                                              ; preds = %97, %103
  %108 = add i32 %80, -1
  %109 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %13, align 8
  %110 = zext i32 %108 to i64
  %111 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %109, i64 %110
  br label %112

112:                                              ; preds = %107, %106
  %113 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %106 ], [ %111, %107 ]
  %114 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 3, i32 0
  %115 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %113, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %115, i64 16, i1 false)
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT4glyf13accelerator_t13glyph_for_gidEjb(%"struct.OT::glyf::Glyph"* noalias sret, %"struct.OT::glyf::accelerator_t"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.OT::glyf::Glyph::SimpleGlyph", align 8
  %6 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %24, label %9, !prof !3

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %11 = bitcast %"struct.OT::glyf::Glyph"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i32 -1, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %13 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %12 to i16**
  store i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16** %13, align 8
  %14 = load i16, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), align 16
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %17, align 8
  br label %193

18:                                               ; preds = %9
  %19 = tail call i16 @llvm.bswap.i16(i16 %14) #10
  %20 = icmp sgt i16 %19, 0
  %21 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %20, label %22, label %23

22:                                               ; preds = %18
  store i32 1, i32* %21, align 8
  br label %193

23:                                               ; preds = %18
  store i32 2, i32* %21, align 8
  br label %193

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %1, i64 0, i32 3
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %1, i64 0, i32 5, i32 0, i32 0
  %29 = load %struct.hb_blob_t*, %struct.hb_blob_t** %28, align 8
  %30 = icmp eq %struct.hb_blob_t* %29, null
  %31 = select i1 %30, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %29
  %32 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %31, i64 0, i32 1
  %33 = bitcast i8** %32 to %"struct.OT::loca"**
  %34 = load %"struct.OT::loca"*, %"struct.OT::loca"** %33, align 8
  br i1 %27, label %52, label %35

35:                                               ; preds = %24
  %36 = bitcast %"struct.OT::loca"* %34 to %"struct.OT::IntType"*
  %37 = zext i32 %2 to i64
  %38 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %36, i64 %37
  %39 = bitcast %"struct.OT::IntType"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #10
  %42 = zext i16 %41 to i32
  %43 = shl nuw nsw i32 %42, 1
  %44 = add nuw i32 %2, 1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %36, i64 %45
  %47 = bitcast %"struct.OT::IntType"* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #10
  %50 = zext i16 %49 to i32
  %51 = shl nuw nsw i32 %50, 1
  br label %93

52:                                               ; preds = %24
  %53 = bitcast %"struct.OT::loca"* %34 to %"struct.OT::IntType.9"*
  %54 = zext i32 %2 to i64
  %55 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %54, i32 0, i32 0, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw i32 %57, 24
  %59 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %54, i32 0, i32 0, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 16
  %63 = or i32 %62, %58
  %64 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %54, i32 0, i32 0, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = or i32 %63, %67
  %69 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %54, i32 0, i32 0, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %68, %71
  %73 = add nuw i32 %2, 1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %74, i32 0, i32 0, i64 0
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw i32 %77, 24
  %79 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %74, i32 0, i32 0, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 16
  %83 = or i32 %82, %78
  %84 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %74, i32 0, i32 0, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = or i32 %83, %87
  %89 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %53, i64 %74, i32 0, i32 0, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %88, %91
  br label %93

93:                                               ; preds = %52, %35
  %94 = phi i32 [ %51, %35 ], [ %92, %52 ]
  %95 = phi i32 [ %43, %35 ], [ %72, %52 ]
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %105, label %97, !prof !2

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %1, i64 0, i32 6, i32 0, i32 0
  %99 = load %struct.hb_blob_t*, %struct.hb_blob_t** %98, align 8
  %100 = icmp eq %struct.hb_blob_t* %99, null
  %101 = select i1 %100, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %99
  %102 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %101, i64 0, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = icmp ugt i32 %94, %103
  br i1 %104, label %105, label %120, !prof !2

105:                                              ; preds = %93, %97
  %106 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %107 = bitcast %"struct.OT::glyf::Glyph"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false)
  store i32 -1, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %109 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %108 to i16**
  store i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16** %109, align 8
  %110 = load i16, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), align 16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %114, !prof !2

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %113, align 8
  br label %193

114:                                              ; preds = %105
  %115 = tail call i16 @llvm.bswap.i16(i16 %110) #10
  %116 = icmp sgt i16 %115, 0
  %117 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %116, label %118, label %119

118:                                              ; preds = %114
  store i32 1, i32* %117, align 8
  br label %193

119:                                              ; preds = %114
  store i32 2, i32* %117, align 8
  br label %193

120:                                              ; preds = %97
  %121 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %101, i64 0, i32 1
  %122 = bitcast i8** %121 to %"struct.OT::glyf"**
  %123 = load %"struct.OT::glyf"*, %"struct.OT::glyf"** %122, align 8
  %124 = zext i32 %95 to i64
  %125 = getelementptr inbounds %"struct.OT::glyf", %"struct.OT::glyf"* %123, i64 %124, i32 0, i32 0, i64 0, i32 0, i32 0
  %126 = sub i32 %94, %95
  %127 = zext i32 %126 to i64
  %128 = ptrtoint i8* %125 to i64
  %129 = icmp ult i32 %126, 10
  %130 = bitcast i8* %125 to i16*
  %131 = select i1 %129, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16* %130
  %132 = ptrtoint i16* %131 to i64
  %133 = load i16, i16* %131, align 1
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %139, label %135, !prof !2

135:                                              ; preds = %120
  %136 = tail call i16 @llvm.bswap.i16(i16 %133) #10
  %137 = icmp sgt i16 %136, 0
  %138 = select i1 %137, i32 1, i32 2
  br label %139

139:                                              ; preds = %135, %120
  %140 = phi i32 [ 0, %120 ], [ %138, %135 ]
  br i1 %3, label %141, label %181

141:                                              ; preds = %139
  switch i32 %140, label %164 [
    i32 2, label %142
    i32 1, label %157
  ]

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 0
  store i8* %125, i8** %143, align 8, !alias.scope !9
  %144 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %145 = bitcast i32* %144 to i64*
  store i64 %127, i64* %145, align 8, !alias.scope !9
  %146 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  store i32 -1, i32* %146, align 8, !alias.scope !9
  %147 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %148 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %147 to i16**
  store i16* %131, i16** %148, align 8, !alias.scope !9
  br i1 %134, label %149, label %151, !prof !2

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %150, align 8, !alias.scope !9
  br label %193

151:                                              ; preds = %142
  %152 = tail call i16 @llvm.bswap.i16(i16 %133) #10
  %153 = icmp sgt i16 %152, 0
  %154 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %153, label %155, label %156

155:                                              ; preds = %151
  store i32 1, i32* %154, align 8, !alias.scope !9
  br label %193

156:                                              ; preds = %151
  store i32 2, i32* %154, align 8, !alias.scope !9
  br label %193

157:                                              ; preds = %141
  %158 = bitcast %"struct.OT::glyf::Glyph::SimpleGlyph"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #10, !noalias !14
  %159 = bitcast %"struct.OT::glyf::Glyph::SimpleGlyph"* %5 to i64*
  store i64 %132, i64* %159, align 8, !noalias !14
  %160 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %5, i64 0, i32 1, i32 0
  %161 = bitcast i8** %160 to i64*
  store i64 %128, i64* %161, align 8, !noalias !14
  %162 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %5, i64 0, i32 1, i32 1
  %163 = bitcast i32* %162 to i64*
  store i64 %127, i64* %163, align 8, !noalias !14
  call void @_ZNK2OT4glyf5Glyph11SimpleGlyph12trim_paddingEv(%"struct.OT::glyf::Glyph"* sret %0, %"struct.OT::glyf::Glyph::SimpleGlyph"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #10, !noalias !14
  br label %193

164:                                              ; preds = %141
  %165 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 0
  store i8* %125, i8** %165, align 8, !alias.scope !14
  %166 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %167 = bitcast i32* %166 to i64*
  store i64 %127, i64* %167, align 8, !alias.scope !14
  %168 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  store i32 -1, i32* %168, align 8, !alias.scope !14
  %169 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %170 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %169 to i16**
  store i16* %131, i16** %170, align 8, !alias.scope !14
  %171 = load i16, i16* %131, align 1
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %173, label %175, !prof !2

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %174, align 8, !alias.scope !14
  br label %193

175:                                              ; preds = %164
  %176 = tail call i16 @llvm.bswap.i16(i16 %171) #10
  %177 = icmp sgt i16 %176, 0
  %178 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %177, label %179, label %180

179:                                              ; preds = %175
  store i32 1, i32* %178, align 8, !alias.scope !14
  br label %193

180:                                              ; preds = %175
  store i32 2, i32* %178, align 8, !alias.scope !14
  br label %193

181:                                              ; preds = %139
  %182 = bitcast %"struct.OT::glyf::Glyph"* %0 to i64*
  store i64 %128, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %184 = bitcast i32* %183 to i64*
  store i64 %127, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  store i32 %2, i32* %185, align 8
  %186 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 2
  %187 = bitcast [4 x i8]* %186 to i32*
  store i32 -1431655766, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %189 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %188 to i64*
  store i64 %132, i64* %189, align 8
  %190 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 %140, i32* %190, align 8
  %191 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 5
  %192 = bitcast [4 x i8]* %191 to i32*
  store i32 -1431655766, i32* %192, align 4
  br label %193

193:                                              ; preds = %181, %149, %155, %156, %157, %173, %179, %180, %119, %118, %112, %23, %22, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4glyf5Glyph10get_pointsEP9hb_font_tRKNS0_13accelerator_tERNS_22contour_point_vector_tEbj(%"struct.OT::glyf::Glyph"*, %struct.hb_font_t*, %"struct.OT::glyf::accelerator_t"* dereferenceable(56), %"struct.OT::contour_point_vector_t"* dereferenceable(16), i1 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"struct.OT::contour_point_vector_t", align 8
  %8 = alloca %"struct.OT::glyf::Glyph::SimpleGlyph", align 8
  %9 = alloca %struct.hb_array_t.313, align 8
  %10 = alloca %struct.hb_array_t.313, align 8
  %11 = alloca %"struct.OT::contour_point_vector_t", align 8
  %12 = alloca %"struct.OT::glyf::Glyph", align 8
  %13 = alloca %struct.hb_array_t.313, align 8
  %14 = icmp ugt i32 %5, 6
  br i1 %14, label %849, label %15, !prof !2

15:                                               ; preds = %6
  %16 = bitcast %"struct.OT::contour_point_vector_t"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %7, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %7, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %192 [
    i32 2, label %22
    i32 1, label %179
  ]

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %24 = load %"struct.OT::glyf::Glyph::GlyphHeader"*, %"struct.OT::glyf::Glyph::GlyphHeader"** %23, align 8
  %25 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %24, i64 0, i32 0, i32 0, i32 0, i64 10
  %28 = icmp ult i8* %27, %26
  br i1 %28, label %155, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 4294967295
  %34 = getelementptr inbounds i8, i8* %26, i64 %33
  %35 = icmp ugt i8* %27, %34
  br i1 %35, label %155, label %36

36:                                               ; preds = %29
  %37 = ptrtoint i8* %34 to i64
  %38 = ptrtoint i8* %27 to i64
  %39 = sub i64 %37, %38
  %40 = trunc i64 %39 to i32
  %41 = icmp ugt i32 %40, 3
  br i1 %41, label %42, label %155

42:                                               ; preds = %36
  %43 = bitcast i8* %27 to i16*
  %44 = load i16, i16* %43, align 1, !noalias !15
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #10
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 6, i32 8
  %50 = and i32 %46, 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %42
  %53 = add nuw nsw i32 %49, 2
  br label %64

54:                                               ; preds = %42
  %55 = and i32 %46, 64
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  %58 = add nuw nsw i32 %49, 4
  br label %64

59:                                               ; preds = %54
  %60 = trunc i16 %45 to i8
  %61 = icmp slt i8 %60, 0
  %62 = add nuw nsw i32 %49, 8
  %63 = select i1 %61, i32 %62, i32 %49
  br label %64

64:                                               ; preds = %59, %57, %52
  %65 = phi i32 [ %63, %59 ], [ %53, %52 ], [ %58, %57 ]
  %66 = icmp ugt i32 %65, %40
  %67 = icmp eq i8* %27, null
  %68 = or i1 %67, %66
  br i1 %68, label %155, label %69

69:                                               ; preds = %64, %135
  %70 = phi i16 [ %110, %135 ], [ %44, %64 ]
  %71 = phi i8* [ %99, %135 ], [ %27, %64 ]
  %72 = phi i32 [ %136, %135 ], [ 0, %64 ]
  %73 = bitcast i8* %71 to %"struct.OT::glyf::CompositeGlyphChain"*
  %74 = and i16 %70, 8192
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %133, label %76

76:                                               ; preds = %69
  %77 = tail call i16 @llvm.bswap.i16(i16 %70) #10
  %78 = zext i16 %77 to i32
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = select i1 %80, i32 6, i32 8
  %82 = and i32 %78, 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  %85 = add nuw nsw i32 %81, 2
  br label %96

86:                                               ; preds = %76
  %87 = and i32 %78, 64
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = add nuw nsw i32 %81, 4
  br label %96

91:                                               ; preds = %86
  %92 = trunc i16 %77 to i8
  %93 = icmp slt i8 %92, 0
  %94 = add nuw nsw i32 %81, 8
  %95 = select i1 %93, i32 %94, i32 %81
  br label %96

96:                                               ; preds = %91, %89, %84
  %97 = phi i32 [ %95, %91 ], [ %85, %84 ], [ %90, %89 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %73, i64 0, i32 0, i32 0, i32 0, i64 %98
  %100 = icmp ugt i8* %26, %99
  %101 = icmp ugt i8* %99, %34
  %102 = or i1 %100, %101
  br i1 %102, label %133, label %103

103:                                              ; preds = %96
  %104 = ptrtoint i8* %99 to i64
  %105 = sub i64 %37, %104
  %106 = trunc i64 %105 to i32
  %107 = icmp ugt i32 %106, 3
  br i1 %107, label %108, label %133

108:                                              ; preds = %103
  %109 = bitcast i8* %99 to i16*
  %110 = load i16, i16* %109, align 1, !noalias !18
  %111 = tail call i16 @llvm.bswap.i16(i16 %110) #10
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 6, i32 8
  %116 = and i32 %112, 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %108
  %119 = add nuw nsw i32 %115, 2
  br label %130

120:                                              ; preds = %108
  %121 = and i32 %112, 64
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  %124 = add nuw nsw i32 %115, 4
  br label %130

125:                                              ; preds = %120
  %126 = trunc i16 %111 to i8
  %127 = icmp slt i8 %126, 0
  %128 = add nuw nsw i32 %115, 8
  %129 = select i1 %127, i32 %128, i32 %115
  br label %130

130:                                              ; preds = %125, %123, %118
  %131 = phi i32 [ %129, %125 ], [ %119, %118 ], [ %124, %123 ]
  %132 = icmp ugt i32 %131, %106
  br i1 %132, label %133, label %135

133:                                              ; preds = %130, %103, %96, %69
  %134 = add i32 %72, 1
  br label %138

135:                                              ; preds = %130
  %136 = add i32 %72, 1
  %137 = icmp eq i8* %99, null
  br i1 %137, label %138, label %69

138:                                              ; preds = %135, %133
  %139 = phi i32 [ %134, %133 ], [ %136, %135 ]
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %138, %141
  %142 = phi i32 [ %145, %141 ], [ 0, %138 ]
  %143 = lshr i32 %142, 1
  %144 = add i32 %142, 8
  %145 = add i32 %144, %143
  %146 = icmp ugt i32 %145, %139
  br i1 %146, label %147, label %141

147:                                              ; preds = %141
  %148 = icmp ult i32 %145, 268435455
  br i1 %148, label %149, label %154, !prof !21

149:                                              ; preds = %147
  %150 = zext i32 %145 to i64
  %151 = shl nuw nsw i64 %150, 4
  %152 = call i8* @malloc(i64 %151)
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %156, !prof !2

154:                                              ; preds = %149, %147
  store i32 -1, i32* %17, align 8
  br label %845

155:                                              ; preds = %138, %22, %29, %36, %64
  store i32 0, i32* %18, align 4
  br label %192

156:                                              ; preds = %149
  %157 = bitcast %"struct.OT::contour_point_t"** %19 to i8**
  store i8* %152, i8** %157, align 8
  store i32 %145, i32* %17, align 8
  %158 = zext i32 %139 to i64
  %159 = shl nuw nsw i64 %158, 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 0, i64 %159, i1 false) #10
  store i32 %139, i32* %18, align 4
  %160 = icmp eq i32 %139, 0
  br i1 %160, label %192, label %161

161:                                              ; preds = %156, %170
  %162 = phi i32 [ %176, %170 ], [ %139, %156 ]
  %163 = phi i64 [ %174, %170 ], [ 0, %156 ]
  %164 = zext i32 %162 to i64
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %167, label %166, !prof !3

166:                                              ; preds = %161
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %170

167:                                              ; preds = %161
  %168 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %19, align 8
  %169 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %168, i64 %163
  br label %170

170:                                              ; preds = %166, %167
  %171 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %166 ], [ %169, %167 ]
  %172 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %171, i64 0, i32 0
  store i8 0, i8* %172, align 4
  %173 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %171, i64 0, i32 1
  %174 = add nuw nsw i64 %163, 1
  %175 = bitcast float* %173 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %175, i8 0, i64 9, i1 false)
  %176 = load i32, i32* %18, align 4
  %177 = zext i32 %176 to i64
  %178 = icmp ult i64 %174, %177
  br i1 %178, label %161, label %192

179:                                              ; preds = %15
  %180 = bitcast %"struct.OT::glyf::Glyph::SimpleGlyph"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #10
  %181 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %182 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"struct.OT::glyf::Glyph"* %0 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8
  %186 = bitcast %"struct.OT::glyf::Glyph::SimpleGlyph"* %8 to i64*
  store i64 %183, i64* %186, align 8
  %187 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %8, i64 0, i32 1, i32 0
  %188 = bitcast i8** %187 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %188, align 8
  %189 = call zeroext i1 @_ZNK2OT4glyf5Glyph11SimpleGlyph18get_contour_pointsERNS_22contour_point_vector_tEb(%"struct.OT::glyf::Glyph::SimpleGlyph"* nonnull %8, %"struct.OT::contour_point_vector_t"* nonnull dereferenceable(16) %7, i1 zeroext %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #10
  br i1 %189, label %190, label %845, !prof !3

190:                                              ; preds = %179
  %191 = load i32, i32* %18, align 4
  br label %192

192:                                              ; preds = %170, %155, %190, %156, %15
  %193 = phi i32 [ %191, %190 ], [ 0, %156 ], [ 0, %15 ], [ 0, %155 ], [ %176, %170 ]
  %194 = add i32 %193, 4
  %195 = icmp sgt i32 %194, 0
  %196 = select i1 %195, i32 %194, i32 0
  %197 = load i32, i32* %17, align 8
  %198 = icmp slt i32 %197, 0
  br i1 %198, label %845, label %199, !prof !2

199:                                              ; preds = %192
  %200 = icmp ult i32 %197, %196
  br i1 %200, label %201, label %221, !prof !2

201:                                              ; preds = %199, %201
  %202 = phi i32 [ %205, %201 ], [ %197, %199 ]
  %203 = lshr i32 %202, 1
  %204 = add i32 %202, 8
  %205 = add i32 %204, %203
  %206 = icmp ugt i32 %205, %196
  br i1 %206, label %207, label %201

207:                                              ; preds = %201
  %208 = icmp uge i32 %205, %197
  %209 = icmp ult i32 %205, 268435455
  %210 = and i1 %208, %209
  br i1 %210, label %211, label %218, !prof !21

211:                                              ; preds = %207
  %212 = bitcast %"struct.OT::contour_point_t"** %19 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = zext i32 %205 to i64
  %215 = shl nuw nsw i64 %214, 4
  %216 = call i8* @realloc(i8* %213, i64 %215) #10
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %219, !prof !2

218:                                              ; preds = %211, %207
  store i32 -1, i32* %17, align 8
  br label %845

219:                                              ; preds = %211
  store i8* %216, i8** %212, align 8
  store i32 %205, i32* %17, align 8
  %220 = load i32, i32* %18, align 4
  br label %221

221:                                              ; preds = %219, %199
  %222 = phi i32 [ %220, %219 ], [ %193, %199 ]
  %223 = icmp ugt i32 %196, %222
  br i1 %223, label %224, label %231

224:                                              ; preds = %221
  %225 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %19, align 8
  %226 = zext i32 %222 to i64
  %227 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %225, i64 %226, i32 0
  %228 = sub i32 %196, %222
  %229 = zext i32 %228 to i64
  %230 = shl nuw nsw i64 %229, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %227, i8 0, i64 %230, i1 false) #10
  br label %231

231:                                              ; preds = %224, %221
  store i32 %196, i32* %18, align 4
  %232 = bitcast %struct.hb_array_t.313* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #10
  %233 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %9, i64 0, i32 0
  %234 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %9, i64 0, i32 1
  %235 = add nsw i32 %196, -4
  %236 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %19, align 8
  %237 = call i32 @llvm.usub.sat.i32(i32 %196, i32 %235) #10
  %238 = icmp ult i32 %237, 4
  %239 = select i1 %238, i32 %237, i32 4
  %240 = zext i32 %235 to i64
  %241 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %236, i64 %240
  %242 = zext i32 %239 to i64
  store %"struct.OT::contour_point_t"* %241, %"struct.OT::contour_point_t"** %233, align 8
  %243 = bitcast i32* %234 to i64*
  store i64 %242, i64* %243, align 8
  %244 = icmp eq i32 %239, 0
  br i1 %244, label %431, label %432, !prof !2

245:                                              ; preds = %931
  %246 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 3, i32 0, i32 0
  %247 = load %struct.hb_blob_t*, %struct.hb_blob_t** %246, align 8
  %248 = icmp eq %struct.hb_blob_t* %247, null
  %249 = select i1 %248, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %247
  %250 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %249, i64 0, i32 1
  %251 = bitcast i8** %250 to %"struct.OT::hmtxvmtx"**
  %252 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %251, align 8
  %253 = zext i32 %947 to i64
  %254 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %252, i64 0, i32 0, i32 0, i64 %253, i32 1
  br label %273

255:                                              ; preds = %931
  %256 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp ugt i32 %257, %947
  br i1 %258, label %259, label %279, !prof !3

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 3, i32 0, i32 0
  %261 = load %struct.hb_blob_t*, %struct.hb_blob_t** %260, align 8
  %262 = icmp eq %struct.hb_blob_t* %261, null
  %263 = select i1 %262, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %261
  %264 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %263, i64 0, i32 1
  %265 = bitcast i8** %264 to %"struct.OT::hmtxvmtx"**
  %266 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %265, align 8
  %267 = zext i32 %949 to i64
  %268 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %266, i64 0, i32 0, i32 0, i64 %267
  %269 = bitcast %"struct.OT::LongMetric"* %268 to %"struct.OT::IntType.281"*
  %270 = sub i32 %947, %949
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %269, i64 %271
  br label %273

273:                                              ; preds = %259, %245
  %274 = phi %"struct.OT::IntType.281"* [ %254, %245 ], [ %272, %259 ]
  %275 = bitcast %"struct.OT::IntType.281"* %274 to i16*
  %276 = load i16, i16* %275, align 1
  %277 = call i16 @llvm.bswap.i16(i16 %276) #10
  %278 = sext i16 %277 to i32
  br label %279

279:                                              ; preds = %273, %255
  %280 = phi i32 [ 0, %255 ], [ %278, %273 ]
  %281 = sub nsw i32 %942, %280
  %282 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %937, i64 0, i32 4
  %283 = bitcast %"struct.OT::IntType.281"* %282 to i16*
  %284 = load i16, i16* %283, align 1
  %285 = call i16 @llvm.bswap.i16(i16 %284) #10
  %286 = sext i16 %285 to i32
  %287 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %2, i64 0, i32 2
  %288 = bitcast %"struct.OT::vmtx_accelerator_t"** %287 to %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"**
  %289 = load %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"** %288, align 8
  %290 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = icmp ult i32 %947, %291
  br i1 %292, label %293, label %303

293:                                              ; preds = %279
  %294 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 3, i32 0, i32 0
  %295 = load %struct.hb_blob_t*, %struct.hb_blob_t** %294, align 8
  %296 = icmp eq %struct.hb_blob_t* %295, null
  %297 = select i1 %296, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %295
  %298 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %297, i64 0, i32 1
  %299 = bitcast i8** %298 to %"struct.OT::hmtxvmtx.291"**
  %300 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %299, align 8
  %301 = zext i32 %947 to i64
  %302 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %300, i64 0, i32 0, i32 0, i64 %301, i32 1
  br label %321

303:                                              ; preds = %279
  %304 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = icmp ugt i32 %305, %947
  br i1 %306, label %307, label %327, !prof !3

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 3, i32 0, i32 0
  %309 = load %struct.hb_blob_t*, %struct.hb_blob_t** %308, align 8
  %310 = icmp eq %struct.hb_blob_t* %309, null
  %311 = select i1 %310, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %309
  %312 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %311, i64 0, i32 1
  %313 = bitcast i8** %312 to %"struct.OT::hmtxvmtx.291"**
  %314 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %313, align 8
  %315 = zext i32 %291 to i64
  %316 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %314, i64 0, i32 0, i32 0, i64 %315
  %317 = bitcast %"struct.OT::LongMetric"* %316 to %"struct.OT::IntType.281"*
  %318 = sub i32 %947, %291
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %317, i64 %319
  br label %321

321:                                              ; preds = %307, %293
  %322 = phi %"struct.OT::IntType.281"* [ %302, %293 ], [ %320, %307 ]
  %323 = bitcast %"struct.OT::IntType.281"* %322 to i16*
  %324 = load i16, i16* %323, align 1
  %325 = call i16 @llvm.bswap.i16(i16 %324) #10
  %326 = sext i16 %325 to i32
  br label %327

327:                                              ; preds = %321, %303
  %328 = phi i32 [ 0, %303 ], [ %326, %321 ]
  %329 = add nsw i32 %328, %286
  %330 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = icmp ugt i32 %331, %947
  br i1 %332, label %338, label %333, !prof !3

333:                                              ; preds = %327
  %334 = icmp eq i32 %331, 0
  br i1 %334, label %335, label %355

335:                                              ; preds = %333
  %336 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 2
  %337 = load i32, i32* %336, align 8
  br label %355

338:                                              ; preds = %327
  %339 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 3, i32 0, i32 0
  %340 = load %struct.hb_blob_t*, %struct.hb_blob_t** %339, align 8
  %341 = icmp eq %struct.hb_blob_t* %340, null
  %342 = select i1 %341, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %340
  %343 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %342, i64 0, i32 1
  %344 = bitcast i8** %343 to %"struct.OT::hmtxvmtx"**
  %345 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %344, align 8
  %346 = add i32 %949, -1
  %347 = icmp ult i32 %346, %947
  %348 = select i1 %347, i32 %346, i32 %947
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %345, i64 0, i32 0, i32 0, i64 %349, i32 0
  %351 = bitcast %"struct.OT::IntType"* %350 to i16*
  %352 = load i16, i16* %351, align 1
  %353 = call i16 @llvm.bswap.i16(i16 %352) #10
  %354 = zext i16 %353 to i32
  br label %355

355:                                              ; preds = %333, %335, %338
  %356 = phi i32 [ %337, %335 ], [ %354, %338 ], [ 0, %333 ]
  %357 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 0
  %358 = load i32, i32* %357, align 8
  %359 = icmp ugt i32 %358, %947
  br i1 %359, label %365, label %360, !prof !3

360:                                              ; preds = %355
  %361 = icmp eq i32 %358, 0
  br i1 %361, label %362, label %382

362:                                              ; preds = %360
  %363 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 2
  %364 = load i32, i32* %363, align 8
  br label %382

365:                                              ; preds = %355
  %366 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t"* %289, i64 0, i32 3, i32 0, i32 0
  %367 = load %struct.hb_blob_t*, %struct.hb_blob_t** %366, align 8
  %368 = icmp eq %struct.hb_blob_t* %367, null
  %369 = select i1 %368, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %367
  %370 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %369, i64 0, i32 1
  %371 = bitcast i8** %370 to %"struct.OT::hmtxvmtx.291"**
  %372 = load %"struct.OT::hmtxvmtx.291"*, %"struct.OT::hmtxvmtx.291"** %371, align 8
  %373 = add i32 %291, -1
  %374 = icmp ult i32 %373, %947
  %375 = select i1 %374, i32 %373, i32 %947
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds %"struct.OT::hmtxvmtx.291", %"struct.OT::hmtxvmtx.291"* %372, i64 0, i32 0, i32 0, i64 %376, i32 0
  %378 = bitcast %"struct.OT::IntType"* %377 to i16*
  %379 = load i16, i16* %378, align 1
  %380 = call i16 @llvm.bswap.i16(i16 %379) #10
  %381 = zext i16 %380 to i32
  br label %382

382:                                              ; preds = %360, %362, %365
  %383 = phi i32 [ %364, %362 ], [ %381, %365 ], [ 0, %360 ]
  %384 = sitofp i32 %281 to float
  %385 = load i32, i32* %234, align 8
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388, !prof !2

387:                                              ; preds = %382
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %390

388:                                              ; preds = %382
  %389 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  br label %390

390:                                              ; preds = %387, %388
  %391 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %387 ], [ %389, %388 ]
  %392 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %391, i64 0, i32 1
  store float %384, float* %392, align 4
  %393 = add i32 %356, %281
  %394 = uitofp i32 %393 to float
  %395 = load i32, i32* %234, align 8
  %396 = icmp ugt i32 %395, 1
  br i1 %396, label %398, label %397, !prof !3

397:                                              ; preds = %390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %401

398:                                              ; preds = %390
  %399 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %400 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %399, i64 1
  br label %401

401:                                              ; preds = %397, %398
  %402 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %397 ], [ %400, %398 ]
  %403 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %402, i64 0, i32 1
  store float %394, float* %403, align 4
  %404 = sitofp i32 %329 to float
  %405 = load i32, i32* %234, align 8
  %406 = icmp ugt i32 %405, 2
  br i1 %406, label %410, label %407, !prof !3

407:                                              ; preds = %401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  store float %404, float* bitcast (i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 1) to float*), align 8
  %408 = sub nsw i32 %329, %383
  %409 = sitofp i32 %408 to float
  br label %416

410:                                              ; preds = %401
  %411 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %412 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %411, i64 2, i32 2
  store float %404, float* %412, align 4
  %413 = sub nsw i32 %329, %383
  %414 = sitofp i32 %413 to float
  %415 = icmp eq i32 %405, 3
  br i1 %415, label %416, label %418, !prof !2

416:                                              ; preds = %410, %407
  %417 = phi float [ %409, %407 ], [ %414, %410 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %420

418:                                              ; preds = %410
  %419 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %411, i64 3
  br label %420

420:                                              ; preds = %416, %418
  %421 = phi float [ %417, %416 ], [ %414, %418 ]
  %422 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %416 ], [ %419, %418 ]
  %423 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %422, i64 0, i32 2
  store float %421, float* %423, align 4
  %424 = bitcast %"struct.OT::glyf::accelerator_t"* %2 to %"struct.OT::gvar::accelerator_t"**
  %425 = load %"struct.OT::gvar::accelerator_t"*, %"struct.OT::gvar::accelerator_t"** %424, align 8
  %426 = load i32, i32* %946, align 8
  %427 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %19, align 8
  %428 = load i32, i32* %18, align 4
  %429 = zext i32 %428 to i64
  %430 = call zeroext i1 @_ZNK2OT4gvar13accelerator_t22apply_deltas_to_pointsEjP9hb_font_t10hb_array_tINS_15contour_point_tEE(%"struct.OT::gvar::accelerator_t"* %425, i32 %426, %struct.hb_font_t* %1, %"struct.OT::contour_point_t"* %427, i64 %429)
  br i1 %430, label %439, label %843, !prof !3

431:                                              ; preds = %231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %432

432:                                              ; preds = %231, %431
  %433 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %431 ], [ %241, %231 ]
  %434 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %433, i64 0, i32 0
  store i8 0, i8* %434, align 4
  %435 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %433, i64 0, i32 1
  %436 = bitcast float* %435 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %436, i8 0, i64 9, i1 false)
  %437 = load i32, i32* %234, align 8
  %438 = icmp ugt i32 %437, 1
  br i1 %438, label %906, label %905, !prof !3

439:                                              ; preds = %420
  %440 = load i32, i32* %20, align 8
  switch i32 %440, label %802 [
    i32 1, label %441
    i32 2, label %450
  ]

441:                                              ; preds = %439
  %442 = bitcast %struct.hb_array_t.313* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %442) #10
  %443 = bitcast %"struct.OT::contour_point_t"** %19 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = load i32, i32* %18, align 4
  %446 = zext i32 %445 to i64
  %447 = bitcast %struct.hb_array_t.313* %10 to i64*
  store i64 %444, i64* %447, align 8
  %448 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %10, i64 0, i32 1
  %449 = bitcast i32* %448 to i64*
  store i64 %446, i64* %449, align 8
  call void @_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE(%"struct.OT::contour_point_vector_t"* %3, %struct.hb_array_t.313* nonnull dereferenceable(16) %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %442) #10
  br label %803

450:                                              ; preds = %439
  %451 = load %"struct.OT::glyf::Glyph::GlyphHeader"*, %"struct.OT::glyf::Glyph::GlyphHeader"** %935, align 8, !noalias !22
  %452 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 0
  %453 = load i8*, i8** %452, align 8, !noalias !22
  %454 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %455 = bitcast i32* %454 to i64*
  %456 = load i64, i64* %455, align 8, !noalias !22
  %457 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %451, i64 0, i32 0, i32 0, i32 0, i64 10
  %458 = bitcast i8* %457 to %"struct.OT::glyf::CompositeGlyphChain"*
  %459 = icmp ult i8* %457, %453
  br i1 %459, label %801, label %460

460:                                              ; preds = %450
  %461 = and i64 %456, 4294967295
  %462 = getelementptr inbounds i8, i8* %453, i64 %461
  %463 = icmp ugt i8* %457, %462
  br i1 %463, label %801, label %464

464:                                              ; preds = %460
  %465 = ptrtoint i8* %462 to i64
  %466 = ptrtoint i8* %457 to i64
  %467 = sub i64 %465, %466
  %468 = trunc i64 %467 to i32
  %469 = icmp ugt i32 %468, 3
  br i1 %469, label %470, label %801

470:                                              ; preds = %464
  %471 = bitcast i8* %457 to i16*
  %472 = load i16, i16* %471, align 1, !noalias !25
  %473 = call i16 @llvm.bswap.i16(i16 %472) #10
  %474 = zext i16 %473 to i32
  %475 = and i32 %474, 1
  %476 = icmp eq i32 %475, 0
  %477 = select i1 %476, i32 6, i32 8
  %478 = and i32 %474, 8
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %482, label %480

480:                                              ; preds = %470
  %481 = add nuw nsw i32 %477, 2
  br label %492

482:                                              ; preds = %470
  %483 = and i32 %474, 64
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %487, label %485

485:                                              ; preds = %482
  %486 = add nuw nsw i32 %477, 4
  br label %492

487:                                              ; preds = %482
  %488 = trunc i16 %473 to i8
  %489 = icmp slt i8 %488, 0
  %490 = add nuw nsw i32 %477, 8
  %491 = select i1 %489, i32 %490, i32 %477
  br label %492

492:                                              ; preds = %487, %485, %480
  %493 = phi i32 [ %491, %487 ], [ %481, %480 ], [ %486, %485 ]
  %494 = icmp ugt i32 %493, %468
  %495 = icmp eq i8* %457, null
  %496 = or i1 %495, %494
  br i1 %496, label %801, label %497

497:                                              ; preds = %492, %558
  %498 = phi %"struct.OT::glyf::CompositeGlyphChain"* [ %527, %558 ], [ %458, %492 ]
  %499 = bitcast %"struct.OT::glyf::CompositeGlyphChain"* %498 to i16*
  %500 = load i16, i16* %499, align 1, !noalias !28
  %501 = and i16 %500, 8192
  %502 = icmp eq i16 %501, 0
  br i1 %502, label %563, label %503

503:                                              ; preds = %497
  %504 = call i16 @llvm.bswap.i16(i16 %500) #10
  %505 = zext i16 %504 to i32
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = select i1 %507, i32 6, i32 8
  %509 = and i32 %505, 8
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %513, label %511

511:                                              ; preds = %503
  %512 = add nuw nsw i32 %508, 2
  br label %523

513:                                              ; preds = %503
  %514 = and i32 %505, 64
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %518, label %516

516:                                              ; preds = %513
  %517 = add nuw nsw i32 %508, 4
  br label %523

518:                                              ; preds = %513
  %519 = trunc i16 %504 to i8
  %520 = icmp slt i8 %519, 0
  %521 = add nuw nsw i32 %508, 8
  %522 = select i1 %520, i32 %521, i32 %508
  br label %523

523:                                              ; preds = %518, %516, %511
  %524 = phi i32 [ %522, %518 ], [ %512, %511 ], [ %517, %516 ]
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %498, i64 0, i32 0, i32 0, i32 0, i64 %525
  %527 = bitcast i8* %526 to %"struct.OT::glyf::CompositeGlyphChain"*
  %528 = icmp ugt i8* %453, %526
  %529 = icmp ugt i8* %526, %462
  %530 = or i1 %528, %529
  br i1 %530, label %563, label %531

531:                                              ; preds = %523
  %532 = ptrtoint i8* %526 to i64
  %533 = sub i64 %465, %532
  %534 = trunc i64 %533 to i32
  %535 = icmp ugt i32 %534, 3
  br i1 %535, label %536, label %563

536:                                              ; preds = %531
  %537 = bitcast i8* %526 to i16*
  %538 = load i16, i16* %537, align 1, !noalias !28
  %539 = call i16 @llvm.bswap.i16(i16 %538) #10
  %540 = zext i16 %539 to i32
  %541 = and i32 %540, 1
  %542 = icmp eq i32 %541, 0
  %543 = select i1 %542, i32 6, i32 8
  %544 = and i32 %540, 8
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %548, label %546

546:                                              ; preds = %536
  %547 = add nuw nsw i32 %543, 2
  br label %558

548:                                              ; preds = %536
  %549 = and i32 %540, 64
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %553, label %551

551:                                              ; preds = %548
  %552 = add nuw nsw i32 %543, 4
  br label %558

553:                                              ; preds = %548
  %554 = trunc i16 %539 to i8
  %555 = icmp slt i8 %554, 0
  %556 = add nuw nsw i32 %543, 8
  %557 = select i1 %555, i32 %556, i32 %543
  br label %558

558:                                              ; preds = %553, %551, %546
  %559 = phi i32 [ %557, %553 ], [ %547, %546 ], [ %552, %551 ]
  %560 = icmp ugt i32 %559, %534
  %561 = icmp eq i8* %526, null
  %562 = or i1 %561, %560
  br i1 %562, label %563, label %497

563:                                              ; preds = %497, %523, %531, %558
  %564 = icmp eq i8* %457, null
  br i1 %564, label %801, label %565

565:                                              ; preds = %563
  %566 = bitcast %"struct.OT::contour_point_vector_t"* %11 to i8*
  %567 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %11, i64 0, i32 0, i32 1
  %568 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %11, i64 0, i32 0, i32 2
  %569 = bitcast %"struct.OT::glyf::Glyph"* %12 to i8*
  %570 = add i32 %5, 1
  %571 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %3, i64 0, i32 0, i32 1
  %572 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %3, i64 0, i32 0, i32 2
  %573 = bitcast %struct.hb_array_t.313* %13 to i8*
  %574 = bitcast %"struct.OT::contour_point_t"** %568 to i64*
  %575 = bitcast %struct.hb_array_t.313* %13 to i64*
  %576 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %13, i64 0, i32 1
  %577 = bitcast i32* %576 to i64*
  %578 = bitcast %"struct.OT::contour_point_t"** %568 to i8**
  %579 = and i64 %456, 4294967295
  %580 = getelementptr inbounds i8, i8* %453, i64 %579
  %581 = ptrtoint i8* %580 to i64
  br label %582

582:                                              ; preds = %796, %565
  %583 = phi i32 [ 0, %565 ], [ %734, %796 ]
  %584 = phi %"struct.OT::glyf::CompositeGlyphChain"* [ %458, %565 ], [ %765, %796 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %566) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %566, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %569) #10
  %585 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %584, i64 0, i32 1, i32 0
  %586 = bitcast %"struct.OT::IntType"* %585 to i16*
  %587 = load i16, i16* %586, align 1
  %588 = call i16 @llvm.bswap.i16(i16 %587) #10
  %589 = zext i16 %588 to i32
  call void @_ZNK2OT4glyf13accelerator_t13glyph_for_gidEjb(%"struct.OT::glyf::Glyph"* nonnull sret %12, %"struct.OT::glyf::accelerator_t"* %2, i32 %589, i1 zeroext false)
  %590 = call zeroext i1 @_ZNK2OT4glyf5Glyph10get_pointsEP9hb_font_tRKNS0_13accelerator_tERNS_22contour_point_vector_tEbj(%"struct.OT::glyf::Glyph"* nonnull %12, %struct.hb_font_t* %1, %"struct.OT::glyf::accelerator_t"* dereferenceable(56) %2, %"struct.OT::contour_point_vector_t"* nonnull dereferenceable(16) %11, i1 zeroext %4, i32 %570)
  %591 = load i32, i32* %567, align 4
  %592 = icmp ult i32 %591, 4
  %593 = xor i1 %590, true
  %594 = or i1 %592, %593
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %569) #10
  br i1 %594, label %732, label %595, !prof !2

595:                                              ; preds = %582
  %596 = bitcast %"struct.OT::glyf::CompositeGlyphChain"* %584 to i16*
  %597 = load i16, i16* %596, align 1
  %598 = and i16 %597, 2
  %599 = icmp eq i16 %598, 0
  br i1 %599, label %615, label %600

600:                                              ; preds = %595
  %601 = add i32 %591, -4
  %602 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %603 = zext i32 %601 to i64
  %604 = load i32, i32* %234, align 8
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %607, !prof !2

606:                                              ; preds = %600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %609

607:                                              ; preds = %600
  %608 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  br label %609

609:                                              ; preds = %606, %607
  %610 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %606 ], [ %608, %607 ]
  %611 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %610, i64 0, i32 0
  %612 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %602, i64 %603, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %611, i8* align 4 %612, i64 16, i1 false)
  %613 = load i32, i32* %567, align 4
  %614 = icmp ugt i32 %613, 2
  br i1 %614, label %852, label %851, !prof !3

615:                                              ; preds = %901, %595
  call void @_ZNK2OT4glyf19CompositeGlyphChain16transform_pointsERNS_22contour_point_vector_tE(%"struct.OT::glyf::CompositeGlyphChain"* nonnull %584, %"struct.OT::contour_point_vector_t"* nonnull dereferenceable(16) %11)
  %616 = load i32, i32* %18, align 4
  %617 = icmp ugt i32 %616, %583
  br i1 %617, label %619, label %618, !prof !3

618:                                              ; preds = %615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %623

619:                                              ; preds = %615
  %620 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %19, align 8
  %621 = zext i32 %583 to i64
  %622 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %620, i64 %621
  br label %623

623:                                              ; preds = %618, %619
  %624 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %618 ], [ %622, %619 ]
  %625 = load i32, i32* %567, align 4
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %653, label %627

627:                                              ; preds = %623
  %628 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %624, i64 0, i32 1
  %629 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %624, i64 0, i32 2
  br label %630

630:                                              ; preds = %639, %627
  %631 = phi i32 [ %625, %627 ], [ %650, %639 ]
  %632 = phi i64 [ 0, %627 ], [ %649, %639 ]
  %633 = zext i32 %631 to i64
  %634 = icmp ult i64 %632, %633
  br i1 %634, label %636, label %635, !prof !3

635:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %639

636:                                              ; preds = %630
  %637 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %638 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %637, i64 %632
  br label %639

639:                                              ; preds = %636, %635
  %640 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %635 ], [ %638, %636 ]
  %641 = load float, float* %628, align 4
  %642 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %640, i64 0, i32 1
  %643 = load float, float* %642, align 4
  %644 = fadd float %641, %643
  store float %644, float* %642, align 4
  %645 = load float, float* %629, align 4
  %646 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %640, i64 0, i32 2
  %647 = load float, float* %646, align 4
  %648 = fadd float %645, %647
  store float %648, float* %646, align 4
  %649 = add nuw nsw i64 %632, 1
  %650 = load i32, i32* %567, align 4
  %651 = zext i32 %650 to i64
  %652 = icmp ult i64 %649, %651
  br i1 %652, label %630, label %653

653:                                              ; preds = %639, %623
  %654 = phi i32 [ 0, %623 ], [ %650, %639 ]
  %655 = load i16, i16* %596, align 1
  %656 = and i16 %655, 512
  %657 = icmp eq i16 %656, 0
  br i1 %657, label %658, label %724

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %584, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %660 = and i16 %655, 256
  %661 = icmp eq i16 %660, 0
  br i1 %661, label %672, label %662

662:                                              ; preds = %658
  %663 = bitcast i8* %659 to i16*
  %664 = load i16, i16* %663, align 1
  %665 = call i16 @llvm.bswap.i16(i16 %664) #10
  %666 = zext i16 %665 to i32
  %667 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %584, i64 0, i32 1, i32 0, i32 0, i32 0, i64 4
  %668 = bitcast i8* %667 to i16*
  %669 = load i16, i16* %668, align 1
  %670 = call i16 @llvm.bswap.i16(i16 %669) #10
  %671 = zext i16 %670 to i32
  br label %678

672:                                              ; preds = %658
  %673 = load i8, i8* %659, align 1
  %674 = zext i8 %673 to i32
  %675 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %584, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %676 = load i8, i8* %675, align 1
  %677 = zext i8 %676 to i32
  br label %678

678:                                              ; preds = %662, %672
  %679 = phi i32 [ %674, %672 ], [ %666, %662 ]
  %680 = phi i32 [ %677, %672 ], [ %671, %662 ]
  %681 = load i32, i32* %571, align 4
  %682 = icmp ult i32 %679, %681
  %683 = icmp ult i32 %680, %654
  %684 = and i1 %682, %683
  br i1 %684, label %685, label %724, !prof !21

685:                                              ; preds = %678
  %686 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %572, align 8
  %687 = zext i32 %679 to i64
  %688 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %686, i64 %687, i32 1
  %689 = load float, float* %688, align 4
  %690 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %691 = zext i32 %680 to i64
  %692 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %690, i64 %691, i32 1
  %693 = load float, float* %692, align 4
  %694 = fsub float %689, %693
  %695 = zext i32 %679 to i64
  %696 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %686, i64 %695, i32 2
  %697 = load float, float* %696, align 4
  %698 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %699 = zext i32 %680 to i64
  %700 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %698, i64 %699, i32 2
  %701 = load float, float* %700, align 4
  %702 = fsub float %697, %701
  br label %703

703:                                              ; preds = %712, %685
  %704 = phi i32 [ %654, %685 ], [ %721, %712 ]
  %705 = phi i64 [ 0, %685 ], [ %720, %712 ]
  %706 = zext i32 %704 to i64
  %707 = icmp ult i64 %705, %706
  br i1 %707, label %709, label %708, !prof !3

708:                                              ; preds = %703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %712

709:                                              ; preds = %703
  %710 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %711 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %710, i64 %705
  br label %712

712:                                              ; preds = %709, %708
  %713 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %708 ], [ %711, %709 ]
  %714 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %713, i64 0, i32 1
  %715 = load float, float* %714, align 4
  %716 = fadd float %694, %715
  store float %716, float* %714, align 4
  %717 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %713, i64 0, i32 2
  %718 = load float, float* %717, align 4
  %719 = fadd float %702, %718
  store float %719, float* %717, align 4
  %720 = add nuw nsw i64 %705, 1
  %721 = load i32, i32* %567, align 4
  %722 = zext i32 %721 to i64
  %723 = icmp ult i64 %720, %722
  br i1 %723, label %703, label %724

724:                                              ; preds = %712, %678, %653
  %725 = phi i32 [ %654, %678 ], [ %654, %653 ], [ %721, %712 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %573) #10
  %726 = add i32 %725, -4
  %727 = load i64, i64* %574, align 8
  %728 = icmp ugt i32 %725, %726
  %729 = select i1 %728, i32 %726, i32 %725
  %730 = zext i32 %729 to i64
  store i64 %727, i64* %575, align 8
  store i64 %730, i64* %577, align 8
  call void @_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE(%"struct.OT::contour_point_vector_t"* %3, %struct.hb_array_t.313* nonnull dereferenceable(16) %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %573) #10
  %731 = add i32 %583, 1
  br label %732

732:                                              ; preds = %582, %724
  %733 = phi i1 [ true, %724 ], [ false, %582 ]
  %734 = phi i32 [ %731, %724 ], [ %583, %582 ]
  %735 = load i8*, i8** %578, align 8
  call void @free(i8* %735) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %566) #10
  br i1 %733, label %736, label %843

736:                                              ; preds = %732
  %737 = bitcast %"struct.OT::glyf::CompositeGlyphChain"* %584 to i16*
  %738 = load i16, i16* %737, align 1
  %739 = and i16 %738, 8192
  %740 = icmp eq i16 %739, 0
  br i1 %740, label %801, label %741

741:                                              ; preds = %736
  %742 = call i16 @llvm.bswap.i16(i16 %738) #10
  %743 = zext i16 %742 to i32
  %744 = and i32 %743, 1
  %745 = icmp eq i32 %744, 0
  %746 = select i1 %745, i32 6, i32 8
  %747 = and i32 %743, 8
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %751, label %749

749:                                              ; preds = %741
  %750 = add nuw nsw i32 %746, 2
  br label %761

751:                                              ; preds = %741
  %752 = and i32 %743, 64
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %756, label %754

754:                                              ; preds = %751
  %755 = add nuw nsw i32 %746, 4
  br label %761

756:                                              ; preds = %751
  %757 = trunc i16 %742 to i8
  %758 = icmp slt i8 %757, 0
  %759 = add nuw nsw i32 %746, 8
  %760 = select i1 %758, i32 %759, i32 %746
  br label %761

761:                                              ; preds = %756, %754, %749
  %762 = phi i32 [ %760, %756 ], [ %750, %749 ], [ %755, %754 ]
  %763 = zext i32 %762 to i64
  %764 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %584, i64 0, i32 0, i32 0, i32 0, i64 %763
  %765 = bitcast i8* %764 to %"struct.OT::glyf::CompositeGlyphChain"*
  %766 = icmp ugt i8* %453, %764
  %767 = icmp ugt i8* %764, %580
  %768 = or i1 %766, %767
  br i1 %768, label %801, label %769

769:                                              ; preds = %761
  %770 = ptrtoint i8* %764 to i64
  %771 = sub i64 %581, %770
  %772 = trunc i64 %771 to i32
  %773 = icmp ugt i32 %772, 3
  br i1 %773, label %774, label %801

774:                                              ; preds = %769
  %775 = bitcast i8* %764 to i16*
  %776 = load i16, i16* %775, align 1
  %777 = call i16 @llvm.bswap.i16(i16 %776) #10
  %778 = zext i16 %777 to i32
  %779 = and i32 %778, 1
  %780 = icmp eq i32 %779, 0
  %781 = select i1 %780, i32 6, i32 8
  %782 = and i32 %778, 8
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %786, label %784

784:                                              ; preds = %774
  %785 = add nuw nsw i32 %781, 2
  br label %796

786:                                              ; preds = %774
  %787 = and i32 %778, 64
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %791, label %789

789:                                              ; preds = %786
  %790 = add nuw nsw i32 %781, 4
  br label %796

791:                                              ; preds = %786
  %792 = trunc i16 %777 to i8
  %793 = icmp slt i8 %792, 0
  %794 = add nuw nsw i32 %781, 8
  %795 = select i1 %793, i32 %794, i32 %781
  br label %796

796:                                              ; preds = %791, %789, %784
  %797 = phi i32 [ %795, %791 ], [ %785, %784 ], [ %790, %789 ]
  %798 = icmp ugt i32 %797, %772
  %799 = icmp eq i8* %764, null
  %800 = or i1 %798, %799
  br i1 %800, label %801, label %582

801:                                              ; preds = %796, %761, %769, %736, %492, %464, %460, %450, %563
  call void @_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE(%"struct.OT::contour_point_vector_t"* %3, %struct.hb_array_t.313* nonnull dereferenceable(16) %9)
  br label %803

802:                                              ; preds = %439
  call void @_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE(%"struct.OT::contour_point_vector_t"* %3, %struct.hb_array_t.313* nonnull dereferenceable(16) %9)
  br label %803

803:                                              ; preds = %801, %802, %441
  %804 = icmp eq i32 %5, 0
  br i1 %804, label %805, label %843

805:                                              ; preds = %803
  %806 = load i32, i32* %234, align 8
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %808, label %809, !prof !2

808:                                              ; preds = %805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %811

809:                                              ; preds = %805
  %810 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  br label %811

811:                                              ; preds = %808, %809
  %812 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %808 ], [ %810, %809 ]
  %813 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %812, i64 0, i32 1
  %814 = load float, float* %813, align 4
  %815 = fcmp une float %814, 0.000000e+00
  br i1 %815, label %816, label %843

816:                                              ; preds = %811
  %817 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %3, i64 0, i32 0, i32 1
  %818 = load i32, i32* %817, align 4
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %843, label %820

820:                                              ; preds = %816
  %821 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %3, i64 0, i32 0, i32 2
  br label %822

822:                                              ; preds = %831, %820
  %823 = phi i32 [ %818, %820 ], [ %840, %831 ]
  %824 = phi i64 [ 0, %820 ], [ %839, %831 ]
  %825 = zext i32 %823 to i64
  %826 = icmp ult i64 %824, %825
  br i1 %826, label %828, label %827, !prof !3

827:                                              ; preds = %822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %831

828:                                              ; preds = %822
  %829 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %821, align 8
  %830 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %829, i64 %824
  br label %831

831:                                              ; preds = %828, %827
  %832 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %827 ], [ %830, %828 ]
  %833 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %832, i64 0, i32 1
  %834 = load float, float* %833, align 4
  %835 = fsub float %834, %814
  store float %835, float* %833, align 4
  %836 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %832, i64 0, i32 2
  %837 = load float, float* %836, align 4
  %838 = fadd float %837, 0.000000e+00
  store float %838, float* %836, align 4
  %839 = add nuw nsw i64 %824, 1
  %840 = load i32, i32* %817, align 4
  %841 = zext i32 %840 to i64
  %842 = icmp ult i64 %839, %841
  br i1 %842, label %822, label %843

843:                                              ; preds = %732, %831, %811, %816, %803, %420
  %844 = phi i1 [ false, %420 ], [ true, %803 ], [ true, %816 ], [ true, %811 ], [ true, %831 ], [ false, %732 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #10
  br label %845

845:                                              ; preds = %192, %218, %154, %179, %843
  %846 = phi i1 [ %844, %843 ], [ false, %179 ], [ false, %154 ], [ false, %218 ], [ false, %192 ]
  %847 = bitcast %"struct.OT::contour_point_t"** %19 to i8**
  %848 = load i8*, i8** %847, align 8
  call void @free(i8* %848) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %849

849:                                              ; preds = %6, %845
  %850 = phi i1 [ %846, %845 ], [ false, %6 ]
  ret i1 %850

851:                                              ; preds = %609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %857

852:                                              ; preds = %609
  %853 = add i32 %613, -3
  %854 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %855 = zext i32 %853 to i64
  %856 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %854, i64 %855
  br label %857

857:                                              ; preds = %852, %851
  %858 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %851 ], [ %856, %852 ]
  %859 = load i32, i32* %234, align 8
  %860 = icmp ugt i32 %859, 1
  br i1 %860, label %862, label %861, !prof !3

861:                                              ; preds = %857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %865

862:                                              ; preds = %857
  %863 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %864 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %863, i64 1
  br label %865

865:                                              ; preds = %862, %861
  %866 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %861 ], [ %864, %862 ]
  %867 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %866, i64 0, i32 0
  %868 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %858, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %867, i8* align 4 %868, i64 16, i1 false)
  %869 = icmp ugt i32 %613, 1
  br i1 %869, label %871, label %870, !prof !3

870:                                              ; preds = %865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %876

871:                                              ; preds = %865
  %872 = add i32 %613, -2
  %873 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %874 = zext i32 %872 to i64
  %875 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %873, i64 %874
  br label %876

876:                                              ; preds = %871, %870
  %877 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %870 ], [ %875, %871 ]
  %878 = icmp ugt i32 %859, 2
  br i1 %878, label %880, label %879, !prof !3

879:                                              ; preds = %876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %883

880:                                              ; preds = %876
  %881 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %882 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %881, i64 2
  br label %883

883:                                              ; preds = %880, %879
  %884 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %879 ], [ %882, %880 ]
  %885 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %884, i64 0, i32 0
  %886 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %877, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %885, i8* align 4 %886, i64 16, i1 false)
  %887 = icmp eq i32 %613, 0
  br i1 %887, label %888, label %889, !prof !2

888:                                              ; preds = %883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %894

889:                                              ; preds = %883
  %890 = add i32 %613, -1
  %891 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %568, align 8
  %892 = zext i32 %890 to i64
  %893 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %891, i64 %892
  br label %894

894:                                              ; preds = %889, %888
  %895 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %888 ], [ %893, %889 ]
  %896 = icmp ugt i32 %859, 3
  br i1 %896, label %898, label %897, !prof !3

897:                                              ; preds = %894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %901

898:                                              ; preds = %894
  %899 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %900 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %899, i64 3
  br label %901

901:                                              ; preds = %898, %897
  %902 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %897 ], [ %900, %898 ]
  %903 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %902, i64 0, i32 0
  %904 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %895, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %903, i8* align 4 %904, i64 16, i1 false)
  br label %615

905:                                              ; preds = %432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %909

906:                                              ; preds = %432
  %907 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %908 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %907, i64 1
  br label %909

909:                                              ; preds = %906, %905
  %910 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %905 ], [ %908, %906 ]
  %911 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %910, i64 0, i32 0
  store i8 0, i8* %911, align 4
  %912 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %910, i64 0, i32 1
  %913 = bitcast float* %912 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %913, i8 0, i64 9, i1 false)
  %914 = load i32, i32* %234, align 8
  %915 = icmp ugt i32 %914, 2
  br i1 %915, label %917, label %916, !prof !3

916:                                              ; preds = %909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %920

917:                                              ; preds = %909
  %918 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %919 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %918, i64 2
  br label %920

920:                                              ; preds = %917, %916
  %921 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %916 ], [ %919, %917 ]
  %922 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %921, i64 0, i32 0
  store i8 0, i8* %922, align 4
  %923 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %921, i64 0, i32 1
  %924 = bitcast float* %923 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %924, i8 0, i64 9, i1 false)
  %925 = load i32, i32* %234, align 8
  %926 = icmp ugt i32 %925, 3
  br i1 %926, label %928, label %927, !prof !3

927:                                              ; preds = %920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %931

928:                                              ; preds = %920
  %929 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %233, align 8
  %930 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %929, i64 3
  br label %931

931:                                              ; preds = %928, %927
  %932 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %927 ], [ %930, %928 ]
  %933 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %932, i64 0, i32 0
  store i8 0, i8* %933, align 4
  %934 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %932, i64 0, i32 1
  %935 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %936 = bitcast float* %934 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %936, i8 0, i64 9, i1 false)
  %937 = load %"struct.OT::glyf::Glyph::GlyphHeader"*, %"struct.OT::glyf::Glyph::GlyphHeader"** %935, align 8
  %938 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %937, i64 0, i32 1
  %939 = bitcast %"struct.OT::IntType.281"* %938 to i16*
  %940 = load i16, i16* %939, align 1
  %941 = call i16 @llvm.bswap.i16(i16 %940) #10
  %942 = sext i16 %941 to i32
  %943 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %2, i64 0, i32 1
  %944 = bitcast %"struct.OT::hmtx_accelerator_t"** %943 to %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"**
  %945 = load %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"** %944, align 8
  %946 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %947 = load i32, i32* %946, align 8
  %948 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %945, i64 0, i32 1
  %949 = load i32, i32* %948, align 4
  %950 = icmp ult i32 %947, %949
  br i1 %950, label %245, label %255
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4glyf5Glyph11SimpleGlyph18get_contour_pointsERNS_22contour_point_vector_tEb(%"struct.OT::glyf::Glyph::SimpleGlyph"*, %"struct.OT::contour_point_vector_t"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %0, i64 0, i32 0
  %5 = load %"struct.OT::glyf::Glyph::GlyphHeader"*, %"struct.OT::glyf::Glyph::GlyphHeader"** %4, align 8
  %6 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %5, i64 0, i32 0, i32 0, i32 0, i64 10
  %7 = bitcast i8* %6 to %"struct.OT::IntType"*
  %8 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"* %5 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #10
  %11 = sext i16 %10 to i32
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %7, i64 %13
  %15 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %0, i64 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %14, i64 0, i32 0, i32 0, i64 0
  %18 = icmp ugt i8* %16, %17
  br i1 %18, label %391, label %19, !prof !7

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %0, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %16, i64 %22
  %24 = icmp ugt i8* %17, %23
  br i1 %24, label %391, label %25, !prof !7

25:                                               ; preds = %19
  %26 = ptrtoint i8* %23 to i64
  %27 = ptrtoint %"struct.OT::IntType"* %14 to i64
  %28 = sub i64 %26, %27
  %29 = trunc i64 %28 to i32
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %31, label %391, !prof !3

31:                                               ; preds = %25
  %32 = add nsw i32 %11, -1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %7, i64 %33
  %35 = bitcast %"struct.OT::IntType"* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #10
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %78, label %43, !prof !2

43:                                               ; preds = %31
  %44 = icmp ugt i32 %41, %38
  br i1 %44, label %65, label %45, !prof !3

45:                                               ; preds = %43, %45
  %46 = phi i32 [ %49, %45 ], [ %41, %43 ]
  %47 = lshr i32 %46, 1
  %48 = add i32 %46, 8
  %49 = add i32 %48, %47
  %50 = icmp ugt i32 %49, %39
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = icmp uge i32 %49, %41
  %53 = icmp ult i32 %49, 268435455
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %63, !prof !21

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  %57 = bitcast %"struct.OT::contour_point_t"** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = zext i32 %49 to i64
  %60 = shl nuw nsw i64 %59, 4
  %61 = tail call i8* @realloc(i8* %58, i64 %60) #10
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %55, %51
  store i32 -1, i32* %40, align 8
  br label %78

64:                                               ; preds = %55
  store i8* %61, i8** %57, align 8
  store i32 %49, i32* %40, align 8
  br label %65

65:                                               ; preds = %43, %64
  %66 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp ugt i32 %67, %38
  br i1 %68, label %77, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  %71 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %70, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %71, i64 %72, i32 0
  %74 = sub i32 %39, %67
  %75 = zext i32 %74 to i64
  %76 = shl nuw nsw i64 %75, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 %76, i1 false) #10
  br label %77

77:                                               ; preds = %65, %69
  store i32 %39, i32* %66, align 4
  br label %78

78:                                               ; preds = %31, %63, %77
  %79 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  br label %91

84:                                               ; preds = %100, %78
  %85 = phi i32 [ 0, %78 ], [ %106, %100 ]
  br i1 %2, label %391, label %86

86:                                               ; preds = %84
  %87 = icmp sgt i16 %10, 0
  br i1 %87, label %88, label %109

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  %90 = zext i32 %11 to i64
  br label %119

91:                                               ; preds = %82, %100
  %92 = phi i32 [ %80, %82 ], [ %106, %100 ]
  %93 = phi i64 [ 0, %82 ], [ %104, %100 ]
  %94 = zext i32 %92 to i64
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %91
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %100

97:                                               ; preds = %91
  %98 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %83, align 8
  %99 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %98, i64 %93
  br label %100

100:                                              ; preds = %96, %97
  %101 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %96 ], [ %99, %97 ]
  %102 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %101, i64 0, i32 0
  store i8 0, i8* %102, align 4
  %103 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %101, i64 0, i32 1
  %104 = add nuw nsw i64 %93, 1
  %105 = bitcast float* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 9, i1 false)
  %106 = load i32, i32* %79, align 4
  %107 = zext i32 %106 to i64
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %91, label %84

109:                                              ; preds = %133, %86
  %110 = sext i16 %10 to i64
  %111 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %7, i64 %110
  %112 = bitcast %"struct.OT::IntType"* %111 to i16*
  %113 = load i16, i16* %112, align 1
  %114 = tail call i16 @llvm.bswap.i16(i16 %113) #10
  %115 = zext i16 %114 to i64
  %116 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %7, i64 %13, i32 0, i32 0, i64 %115
  %117 = bitcast i8* %116 to %"struct.OT::IntType.6"*
  %118 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  br label %140

119:                                              ; preds = %138, %88
  %120 = phi i32 [ %85, %88 ], [ %139, %138 ]
  %121 = phi i64 [ 0, %88 ], [ %136, %138 ]
  %122 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %7, i64 %121
  %123 = bitcast %"struct.OT::IntType"* %122 to i16*
  %124 = load i16, i16* %123, align 1
  %125 = tail call i16 @llvm.bswap.i16(i16 %124) #10
  %126 = zext i16 %125 to i32
  %127 = icmp ugt i32 %120, %126
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %119
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %133

129:                                              ; preds = %119
  %130 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %89, align 8
  %131 = zext i16 %125 to i64
  %132 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %130, i64 %131
  br label %133

133:                                              ; preds = %128, %129
  %134 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %128 ], [ %132, %129 ]
  %135 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %134, i64 0, i32 3
  store i8 1, i8* %135, align 4
  %136 = add nuw nsw i64 %121, 1
  %137 = icmp eq i64 %136, %90
  br i1 %137, label %109, label %138

138:                                              ; preds = %133
  %139 = load i32, i32* %79, align 4
  br label %119

140:                                              ; preds = %109, %211
  %141 = phi i32 [ 0, %109 ], [ %214, %211 ]
  %142 = phi %"struct.OT::IntType.6"* [ %117, %109 ], [ %212, %211 ]
  %143 = load i8*, i8** %15, align 8
  %144 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %142, i64 0, i32 0, i32 0
  %145 = icmp ugt i8* %143, %144
  br i1 %145, label %391, label %146, !prof !7

146:                                              ; preds = %140
  %147 = load i32, i32* %20, align 8
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %143, i64 %148
  %150 = icmp ugt i8* %144, %149
  br i1 %150, label %391, label %151, !prof !7

151:                                              ; preds = %146
  %152 = ptrtoint i8* %149 to i64
  %153 = ptrtoint %"struct.OT::IntType.6"* %142 to i64
  %154 = sub i64 %152, %153
  %155 = trunc i64 %154 to i32
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %391, label %157, !prof !2

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %142, i64 1
  %159 = load i8, i8* %144, align 1
  %160 = load i32, i32* %79, align 4
  %161 = icmp ugt i32 %160, %141
  br i1 %161, label %163, label %162, !prof !3

162:                                              ; preds = %157
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %167

163:                                              ; preds = %157
  %164 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %165 = zext i32 %141 to i64
  %166 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %164, i64 %165
  br label %167

167:                                              ; preds = %162, %163
  %168 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %162 ], [ %166, %163 ]
  %169 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %168, i64 0, i32 0
  store i8 %159, i8* %169, align 4
  %170 = and i8 %159, 8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %211, label %172

172:                                              ; preds = %167
  %173 = load i8*, i8** %15, align 8
  %174 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %158, i64 0, i32 0, i32 0
  %175 = icmp ugt i8* %173, %174
  br i1 %175, label %391, label %176, !prof !7

176:                                              ; preds = %172
  %177 = load i32, i32* %20, align 8
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %173, i64 %178
  %180 = icmp ugt i8* %174, %179
  br i1 %180, label %391, label %181, !prof !7

181:                                              ; preds = %176
  %182 = ptrtoint i8* %179 to i64
  %183 = ptrtoint %"struct.OT::IntType.6"* %158 to i64
  %184 = sub i64 %182, %183
  %185 = trunc i64 %184 to i32
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %391, label %187, !prof !2

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %142, i64 2
  %189 = load i8, i8* %174, align 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %211, label %191

191:                                              ; preds = %187
  %192 = zext i8 %189 to i32
  br label %193

193:                                              ; preds = %191, %207
  %194 = phi i32 [ %196, %207 ], [ %192, %191 ]
  %195 = phi i32 [ %197, %207 ], [ %141, %191 ]
  %196 = add nsw i32 %194, -1
  %197 = add i32 %195, 1
  %198 = icmp ugt i32 %197, %38
  br i1 %198, label %211, label %199

199:                                              ; preds = %193
  %200 = load i32, i32* %79, align 4
  %201 = icmp ugt i32 %200, %197
  br i1 %201, label %203, label %202, !prof !3

202:                                              ; preds = %199
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %207

203:                                              ; preds = %199
  %204 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %205 = zext i32 %197 to i64
  %206 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %204, i64 %205
  br label %207

207:                                              ; preds = %202, %203
  %208 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %202 ], [ %206, %203 ]
  %209 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %208, i64 0, i32 0
  store i8 %159, i8* %209, align 4
  %210 = icmp eq i32 %196, 0
  br i1 %210, label %211, label %193

211:                                              ; preds = %207, %193, %187, %167
  %212 = phi %"struct.OT::IntType.6"* [ %158, %167 ], [ %188, %187 ], [ %188, %193 ], [ %188, %207 ]
  %213 = phi i32 [ %141, %167 ], [ %141, %187 ], [ %197, %193 ], [ %197, %207 ]
  %214 = add i32 %213, 1
  %215 = icmp ugt i32 %214, %38
  br i1 %215, label %216, label %140

216:                                              ; preds = %211
  %217 = load i32, i32* %79, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %391, label %219

219:                                              ; preds = %216, %297
  %220 = phi %"struct.OT::IntType.6"* [ %288, %297 ], [ %212, %216 ]
  %221 = phi i32 [ %301, %297 ], [ %217, %216 ]
  %222 = phi i64 [ %300, %297 ], [ 0, %216 ]
  %223 = phi float [ %289, %297 ], [ 0.000000e+00, %216 ]
  %224 = zext i32 %221 to i64
  %225 = icmp ult i64 %222, %224
  br i1 %225, label %227, label %226, !prof !3

226:                                              ; preds = %219
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %230

227:                                              ; preds = %219
  %228 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %229 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %228, i64 %222
  br label %230

230:                                              ; preds = %227, %226
  %231 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %226 ], [ %229, %227 ]
  %232 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %231, i64 0, i32 0
  %233 = load i8, i8* %232, align 4
  %234 = zext i8 %233 to i32
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %262, label %237

237:                                              ; preds = %230
  %238 = load i8*, i8** %15, align 8
  %239 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %220, i64 0, i32 0, i32 0
  %240 = icmp ugt i8* %238, %239
  br i1 %240, label %391, label %241, !prof !7

241:                                              ; preds = %237
  %242 = load i32, i32* %20, align 8
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* %238, i64 %243
  %245 = icmp ugt i8* %239, %244
  br i1 %245, label %391, label %246, !prof !7

246:                                              ; preds = %241
  %247 = ptrtoint i8* %244 to i64
  %248 = ptrtoint %"struct.OT::IntType.6"* %220 to i64
  %249 = sub i64 %247, %248
  %250 = trunc i64 %249 to i32
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %391, label %252, !prof !2

252:                                              ; preds = %246
  %253 = and i32 %234, 16
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %220, i64 1
  %256 = load i8, i8* %239, align 1
  %257 = uitofp i8 %256 to float
  br i1 %254, label %260, label %258

258:                                              ; preds = %252
  %259 = fadd float %223, %257
  br label %287

260:                                              ; preds = %252
  %261 = fsub float %223, %257
  br label %287

262:                                              ; preds = %230
  %263 = and i32 %234, 16
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %287

265:                                              ; preds = %262
  %266 = load i8*, i8** %15, align 8
  %267 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %220, i64 0, i32 0, i32 0
  %268 = icmp ugt i8* %266, %267
  %269 = bitcast %"struct.OT::IntType.6"* %220 to i16*
  br i1 %268, label %391, label %270, !prof !7

270:                                              ; preds = %265
  %271 = load i32, i32* %20, align 8
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds i8, i8* %266, i64 %272
  %274 = icmp ugt i8* %267, %273
  br i1 %274, label %391, label %275, !prof !7

275:                                              ; preds = %270
  %276 = ptrtoint i8* %273 to i64
  %277 = ptrtoint %"struct.OT::IntType.6"* %220 to i64
  %278 = sub i64 %276, %277
  %279 = trunc i64 %278 to i32
  %280 = icmp ugt i32 %279, 1
  br i1 %280, label %281, label %391, !prof !3

281:                                              ; preds = %275
  %282 = load i16, i16* %269, align 1
  %283 = tail call i16 @llvm.bswap.i16(i16 %282) #10
  %284 = sitofp i16 %283 to float
  %285 = fadd float %223, %284
  %286 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %220, i64 2
  br label %287

287:                                              ; preds = %281, %262, %260, %258
  %288 = phi %"struct.OT::IntType.6"* [ %286, %281 ], [ %220, %262 ], [ %255, %260 ], [ %255, %258 ]
  %289 = phi float [ %285, %281 ], [ %223, %262 ], [ %261, %260 ], [ %259, %258 ]
  %290 = load i32, i32* %79, align 4
  %291 = zext i32 %290 to i64
  %292 = icmp ult i64 %222, %291
  br i1 %292, label %294, label %293, !prof !3

293:                                              ; preds = %287
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %297

294:                                              ; preds = %287
  %295 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %296 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %295, i64 %222
  br label %297

297:                                              ; preds = %294, %293
  %298 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %293 ], [ %296, %294 ]
  %299 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %298, i64 0, i32 1
  store float %289, float* %299, align 4
  %300 = add nuw nsw i64 %222, 1
  %301 = load i32, i32* %79, align 4
  %302 = zext i32 %301 to i64
  %303 = icmp ult i64 %300, %302
  br i1 %303, label %219, label %304

304:                                              ; preds = %297
  %305 = icmp eq i32 %301, 0
  br i1 %305, label %391, label %306

306:                                              ; preds = %304, %384
  %307 = phi %"struct.OT::IntType.6"* [ %375, %384 ], [ %288, %304 ]
  %308 = phi i32 [ %388, %384 ], [ %301, %304 ]
  %309 = phi i64 [ %387, %384 ], [ 0, %304 ]
  %310 = phi float [ %376, %384 ], [ 0.000000e+00, %304 ]
  %311 = zext i32 %308 to i64
  %312 = icmp ult i64 %309, %311
  br i1 %312, label %314, label %313, !prof !3

313:                                              ; preds = %306
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %317

314:                                              ; preds = %306
  %315 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %316 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %315, i64 %309
  br label %317

317:                                              ; preds = %314, %313
  %318 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %313 ], [ %316, %314 ]
  %319 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %318, i64 0, i32 0
  %320 = load i8, i8* %319, align 4
  %321 = zext i8 %320 to i32
  %322 = and i32 %321, 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %349, label %324

324:                                              ; preds = %317
  %325 = load i8*, i8** %15, align 8
  %326 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %307, i64 0, i32 0, i32 0
  %327 = icmp ugt i8* %325, %326
  br i1 %327, label %391, label %328, !prof !7

328:                                              ; preds = %324
  %329 = load i32, i32* %20, align 8
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %325, i64 %330
  %332 = icmp ugt i8* %326, %331
  br i1 %332, label %391, label %333, !prof !7

333:                                              ; preds = %328
  %334 = ptrtoint i8* %331 to i64
  %335 = ptrtoint %"struct.OT::IntType.6"* %307 to i64
  %336 = sub i64 %334, %335
  %337 = trunc i64 %336 to i32
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %391, label %339, !prof !2

339:                                              ; preds = %333
  %340 = and i32 %321, 32
  %341 = icmp eq i32 %340, 0
  %342 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %307, i64 1
  %343 = load i8, i8* %326, align 1
  %344 = uitofp i8 %343 to float
  br i1 %341, label %347, label %345

345:                                              ; preds = %339
  %346 = fadd float %310, %344
  br label %374

347:                                              ; preds = %339
  %348 = fsub float %310, %344
  br label %374

349:                                              ; preds = %317
  %350 = and i32 %321, 32
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %374

352:                                              ; preds = %349
  %353 = load i8*, i8** %15, align 8
  %354 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %307, i64 0, i32 0, i32 0
  %355 = icmp ugt i8* %353, %354
  %356 = bitcast %"struct.OT::IntType.6"* %307 to i16*
  br i1 %355, label %391, label %357, !prof !7

357:                                              ; preds = %352
  %358 = load i32, i32* %20, align 8
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds i8, i8* %353, i64 %359
  %361 = icmp ugt i8* %354, %360
  br i1 %361, label %391, label %362, !prof !7

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = ptrtoint %"struct.OT::IntType.6"* %307 to i64
  %365 = sub i64 %363, %364
  %366 = trunc i64 %365 to i32
  %367 = icmp ugt i32 %366, 1
  br i1 %367, label %368, label %391, !prof !3

368:                                              ; preds = %362
  %369 = load i16, i16* %356, align 1
  %370 = tail call i16 @llvm.bswap.i16(i16 %369) #10
  %371 = sitofp i16 %370 to float
  %372 = fadd float %310, %371
  %373 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %307, i64 2
  br label %374

374:                                              ; preds = %368, %349, %347, %345
  %375 = phi %"struct.OT::IntType.6"* [ %373, %368 ], [ %307, %349 ], [ %342, %347 ], [ %342, %345 ]
  %376 = phi float [ %372, %368 ], [ %310, %349 ], [ %348, %347 ], [ %346, %345 ]
  %377 = load i32, i32* %79, align 4
  %378 = zext i32 %377 to i64
  %379 = icmp ult i64 %309, %378
  br i1 %379, label %381, label %380, !prof !3

380:                                              ; preds = %374
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %384

381:                                              ; preds = %374
  %382 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %118, align 8
  %383 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %382, i64 %309
  br label %384

384:                                              ; preds = %381, %380
  %385 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %380 ], [ %383, %381 ]
  %386 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %385, i64 0, i32 2
  store float %376, float* %386, align 4
  %387 = add nuw nsw i64 %309, 1
  %388 = load i32, i32* %79, align 4
  %389 = zext i32 %388 to i64
  %390 = icmp ult i64 %387, %389
  br i1 %390, label %306, label %391

391:                                              ; preds = %181, %151, %172, %176, %140, %146, %275, %241, %237, %270, %265, %246, %384, %362, %357, %352, %333, %328, %324, %216, %3, %19, %304, %84, %25
  %392 = phi i1 [ false, %25 ], [ true, %84 ], [ true, %304 ], [ false, %19 ], [ false, %3 ], [ true, %216 ], [ false, %362 ], [ true, %384 ], [ false, %328 ], [ false, %324 ], [ false, %357 ], [ false, %352 ], [ false, %333 ], [ false, %246 ], [ false, %265 ], [ false, %270 ], [ false, %237 ], [ false, %241 ], [ false, %275 ], [ false, %146 ], [ false, %140 ], [ false, %176 ], [ false, %172 ], [ false, %151 ], [ false, %181 ]
  ret i1 %392
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4gvar13accelerator_t22apply_deltas_to_pointsEjP9hb_font_t10hb_array_tINS_15contour_point_tEE(%"struct.OT::gvar::accelerator_t"*, i32, %struct.hb_font_t*, %"struct.OT::contour_point_t"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.hb_vector_t.39, align 8
  %7 = alloca %"struct.OT::GlyphVariationData::tuple_iterator_t", align 8
  %8 = alloca %"struct.OT::IntType.6"*, align 8
  %9 = alloca %struct.hb_array_t.90, align 8
  %10 = alloca %struct.hb_vector_t.39, align 8
  %11 = alloca %struct.hb_vector_t.336, align 8
  %12 = alloca %struct.hb_vector_t.336, align 8
  %13 = trunc i64 %4 to i32
  %14 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 10
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %1002, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.OT::gvar::accelerator_t", %"struct.OT::gvar::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %struct.hb_blob_t*, %struct.hb_blob_t** %18, align 8
  %20 = icmp eq %struct.hb_blob_t* %19, null
  %21 = select i1 %20, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %19
  %22 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %21, i64 0, i32 1
  %23 = bitcast i8** %22 to %"struct.OT::gvar"**
  %24 = load %"struct.OT::gvar"*, %"struct.OT::gvar"** %23, align 8
  %25 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %21, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %26, 20
  %28 = select i1 %27, %"struct.OT::gvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar"*), %"struct.OT::gvar"* %24
  %29 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 1
  %30 = bitcast %"struct.OT::IntType"* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #10
  %33 = zext i16 %32 to i32
  %34 = icmp eq i32 %15, %33
  br i1 %34, label %35, label %1002

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 4
  %37 = bitcast %"struct.OT::IntType"* %36 to i16*
  %38 = load i16, i16* %37, align 1
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #10
  %40 = zext i16 %39 to i32
  %41 = icmp ugt i32 %40, %1
  br i1 %41, label %42, label %1002, !prof !3

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 5
  %44 = bitcast %"struct.OT::IntType"* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = and i16 %45, 256
  %47 = icmp eq i16 %46, 0
  %48 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 7
  br i1 %47, label %90, label %49

49:                                               ; preds = %42
  %50 = bitcast %"struct.OT::UnsizedArrayOf.287"* %48 to %"struct.OT::IntType.9"*
  %51 = zext i32 %1 to i64
  %52 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %51, i32 0, i32 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw i32 %54, 24
  %56 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %51, i32 0, i32 0, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 16
  %60 = or i32 %59, %55
  %61 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %51, i32 0, i32 0, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 8
  %65 = or i32 %60, %64
  %66 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %51, i32 0, i32 0, i64 3
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %65, %68
  %70 = add nuw i32 %1, 1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %71, i32 0, i32 0, i64 0
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw i32 %74, 24
  %76 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %71, i32 0, i32 0, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 16
  %80 = or i32 %79, %75
  %81 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %71, i32 0, i32 0, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 8
  %85 = or i32 %80, %84
  %86 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %50, i64 %71, i32 0, i32 0, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  br label %107

90:                                               ; preds = %42
  %91 = bitcast %"struct.OT::UnsizedArrayOf.287"* %48 to %"struct.OT::IntType"*
  %92 = zext i32 %1 to i64
  %93 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %91, i64 %92
  %94 = bitcast %"struct.OT::IntType"* %93 to i16*
  %95 = load i16, i16* %94, align 1
  %96 = tail call i16 @llvm.bswap.i16(i16 %95) #10
  %97 = zext i16 %96 to i32
  %98 = shl nuw nsw i32 %97, 1
  %99 = add nuw i32 %1, 1
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %91, i64 %100
  %102 = bitcast %"struct.OT::IntType"* %101 to i16*
  %103 = load i16, i16* %102, align 1
  %104 = tail call i16 @llvm.bswap.i16(i16 %103) #10
  %105 = zext i16 %104 to i32
  %106 = shl nuw nsw i32 %105, 1
  br label %107

107:                                              ; preds = %49, %90
  %108 = phi i32 [ %69, %49 ], [ %98, %90 ]
  %109 = phi i32 [ %89, %49 ], [ %106, %90 ]
  %110 = sub i32 %109, %108
  %111 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 0
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw i32 %117, 24
  %119 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 16
  %123 = or i32 %122, %118
  %124 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 2
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 8
  %128 = or i32 %123, %127
  %129 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 3
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %128, %131
  %133 = add i32 %132, %108
  %134 = tail call i32 @llvm.usub.sat.i32(i32 %114, i32 %133) #10
  %135 = icmp ugt i32 %134, %110
  %136 = select i1 %135, i32 %110, i32 %134
  %137 = zext i32 %133 to i64
  %138 = getelementptr inbounds i8, i8* %112, i64 %137
  %139 = icmp ugt i32 %136, 3
  %140 = select i1 %139, i32 %136, i32 0, !prof !3
  %141 = select i1 %139, i8* %138, i8* null, !prof !3
  %142 = icmp ult i32 %140, 4
  %143 = bitcast i8* %141 to i16*
  %144 = select i1 %142, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16* %143
  %145 = load i16, i16* %144, align 1
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %1002, label %147

147:                                              ; preds = %107
  %148 = zext i32 %140 to i64
  %149 = bitcast %struct.hb_vector_t.39* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #10
  %150 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 0, i64 16, i1 false) #10
  %151 = bitcast %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %151) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 48, i1 false)
  %152 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 4
  %153 = bitcast %struct.hb_array_t.90* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #10
  %154 = load %"struct.OT::gvar"*, %"struct.OT::gvar"** %23, align 8
  %155 = load i32, i32* %25, align 8
  %156 = icmp ult i32 %155, 20
  %157 = select i1 %156, %"struct.OT::gvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar"*), %"struct.OT::gvar"* %154
  %158 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %157, i64 0, i32 1
  %159 = bitcast %"struct.OT::IntType"* %158 to i16*
  %160 = load i16, i16* %159, align 1
  %161 = tail call i16 @llvm.bswap.i16(i16 %160) #10
  %162 = zext i16 %161 to i32
  %163 = call zeroext i1 @_ZN2OT18GlyphVariationData18get_tuple_iteratorE10hb_array_tIKcEjR11hb_vector_tIjEPNS0_16tuple_iterator_tE(i8* %141, i64 %148, i32 %162, %struct.hb_vector_t.39* nonnull dereferenceable(16) %6, %"struct.OT::GlyphVariationData::tuple_iterator_t"* nonnull %7)
  br i1 %163, label %164, label %998

164:                                              ; preds = %147
  %165 = icmp sgt i32 %13, 0
  %166 = select i1 %165, i32 %13, i32 0
  br i1 %165, label %167, label %208, !prof !2

167:                                              ; preds = %164, %167
  %168 = phi i32 [ %171, %167 ], [ 0, %164 ]
  %169 = lshr i32 %168, 1
  %170 = add i32 %168, 8
  %171 = add i32 %170, %169
  %172 = icmp ugt i32 %171, %166
  br i1 %172, label %173, label %167

173:                                              ; preds = %167
  %174 = icmp ult i32 %171, 268435455
  br i1 %174, label %175, label %188, !prof !21

175:                                              ; preds = %173
  %176 = zext i32 %171 to i64
  %177 = shl nuw nsw i64 %176, 4
  %178 = call i8* @malloc(i64 %177)
  %179 = icmp eq i8* %178, null
  br i1 %179, label %188, label %180, !prof !2

180:                                              ; preds = %175
  %181 = bitcast i8* %178 to %"struct.OT::contour_point_t"*
  %182 = zext i32 %166 to i64
  %183 = shl nuw nsw i64 %182, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %178, i8 0, i64 %183, i1 false) #10
  %184 = icmp eq i32 %13, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = and i64 %4, 4294967295
  %187 = and i64 %4, 4294967295
  br label %217

188:                                              ; preds = %223, %173, %175, %180
  %189 = phi %"struct.OT::contour_point_t"* [ %181, %180 ], [ null, %175 ], [ null, %173 ], [ %181, %223 ]
  %190 = phi i32 [ 0, %180 ], [ 0, %175 ], [ 0, %173 ], [ %13, %223 ]
  br i1 %165, label %191, label %208, !prof !2

191:                                              ; preds = %188, %191
  %192 = phi i32 [ %195, %191 ], [ 0, %188 ]
  %193 = lshr i32 %192, 1
  %194 = add i32 %192, 8
  %195 = add i32 %194, %193
  %196 = icmp ugt i32 %195, %166
  br i1 %196, label %197, label %191

197:                                              ; preds = %191
  %198 = icmp ult i32 %195, 268435455
  br i1 %198, label %199, label %208, !prof !21

199:                                              ; preds = %197
  %200 = zext i32 %195 to i64
  %201 = shl nuw nsw i64 %200, 4
  %202 = call i8* @malloc(i64 %201)
  %203 = icmp eq i8* %202, null
  br i1 %203, label %208, label %204, !prof !2

204:                                              ; preds = %199
  %205 = bitcast i8* %202 to %"struct.OT::contour_point_t"*
  %206 = zext i32 %166 to i64
  %207 = shl nuw nsw i64 %206, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %202, i8 0, i64 %207, i1 false) #10
  br label %208

208:                                              ; preds = %164, %188, %204, %197, %199
  %209 = phi i32 [ %190, %199 ], [ %190, %197 ], [ %190, %204 ], [ %190, %188 ], [ 0, %164 ]
  %210 = phi %"struct.OT::contour_point_t"* [ %189, %199 ], [ %189, %197 ], [ %189, %204 ], [ %189, %188 ], [ null, %164 ]
  %211 = phi i32 [ 0, %199 ], [ 0, %197 ], [ %13, %204 ], [ 0, %188 ], [ 0, %164 ]
  %212 = phi %"struct.OT::contour_point_t"* [ null, %199 ], [ null, %197 ], [ %205, %204 ], [ null, %188 ], [ null, %164 ]
  %213 = icmp eq i32 %13, 0
  %214 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  br i1 %213, label %229, label %215

215:                                              ; preds = %208
  %216 = and i64 %4, 4294967295
  br label %317

217:                                              ; preds = %223, %185
  %218 = phi i64 [ 0, %185 ], [ %227, %223 ]
  %219 = icmp ult i64 %218, %186
  br i1 %219, label %221, label %220, !prof !3

220:                                              ; preds = %217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %223

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %3, i64 %218
  br label %223

223:                                              ; preds = %220, %221
  %224 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %220 ], [ %222, %221 ]
  %225 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %181, i64 %218, i32 0
  %226 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %224, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 16, i1 false)
  %227 = add nuw nsw i64 %218, 1
  %228 = icmp eq i64 %227, %187
  br i1 %228, label %188, label %217

229:                                              ; preds = %371, %208
  %230 = phi i32 [ 0, %208 ], [ %373, %371 ]
  %231 = phi i8* [ null, %208 ], [ %374, %371 ]
  %232 = phi i32* [ null, %208 ], [ %375, %371 ]
  %233 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 11
  %234 = load i32*, i32** %233, align 8
  %235 = load i32, i32* %14, align 4
  %236 = load %struct.hb_blob_t*, %struct.hb_blob_t** %18, align 8
  %237 = icmp eq %struct.hb_blob_t* %236, null
  %238 = select i1 %237, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %236
  %239 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %238, i64 0, i32 1
  %240 = bitcast i8** %239 to %"struct.OT::gvar"**
  %241 = load %"struct.OT::gvar"*, %"struct.OT::gvar"** %240, align 8
  %242 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %238, i64 0, i32 2
  %243 = load i32, i32* %242, align 8
  %244 = icmp ult i32 %243, 20
  %245 = select i1 %244, %"struct.OT::gvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar"*), %"struct.OT::gvar"* %241
  %246 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 0
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = shl nuw nsw i64 %248, 24
  %250 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = shl nuw nsw i64 %252, 16
  %254 = or i64 %253, %249
  %255 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 2
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i64
  %258 = shl nuw nsw i64 %257, 8
  %259 = or i64 %254, %258
  %260 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 3
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = or i64 %259, %262
  %264 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %263
  %265 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 2
  %266 = bitcast %"struct.OT::IntType"* %265 to i16*
  %267 = load i16, i16* %266, align 1
  %268 = call i16 @llvm.bswap.i16(i16 %267) #10
  %269 = zext i16 %268 to i64
  %270 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %245, i64 0, i32 1
  %271 = bitcast %"struct.OT::IntType"* %270 to i16*
  %272 = load i16, i16* %271, align 1
  %273 = call i16 @llvm.bswap.i16(i16 %272) #10
  %274 = zext i16 %273 to i64
  %275 = mul nuw nsw i64 %274, %269
  %276 = bitcast i8* %264 to %"struct.OT::F2DOT14"*
  %277 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 5
  %278 = bitcast %"struct.OT::IntType.6"** %8 to i8*
  %279 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 0
  %280 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 3
  %281 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %152, i64 0, i32 0
  %282 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 4, i32 1
  %283 = bitcast %struct.hb_array_t.90* %9 to i8*
  %284 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %9, i64 0, i32 1
  %285 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %9, i64 0, i32 2
  %286 = bitcast %struct.hb_array_t.90* %9 to i64*
  %287 = bitcast %struct.hb_vector_t.39* %10 to i8*
  %288 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %10, i64 0, i32 1
  %289 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %10, i64 0, i32 2
  %290 = bitcast %struct.hb_vector_t.336* %11 to i8*
  %291 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %11, i64 0, i32 0
  %292 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %11, i64 0, i32 1
  %293 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %11, i64 0, i32 2
  %294 = bitcast i32** %293 to i8**
  %295 = bitcast %struct.hb_vector_t.336* %12 to i8*
  %296 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %12, i64 0, i32 0
  %297 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %12, i64 0, i32 1
  %298 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %12, i64 0, i32 2
  %299 = bitcast i32** %298 to i8**
  %300 = icmp eq i32 %211, 0
  %301 = icmp eq i32 %230, 0
  %302 = bitcast i32** %289 to i8**
  %303 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 2
  %304 = bitcast %"struct.OT::TupleVariationHeader"** %277 to i8**
  %305 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 1
  %306 = bitcast %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7 to i16**
  %307 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %7, i64 0, i32 4, i32 0
  %308 = zext i32 %211 to i64
  %309 = load %"struct.OT::TupleVariationHeader"*, %"struct.OT::TupleVariationHeader"** %277, align 8
  %310 = zext i32 %230 to i64
  %311 = and i64 %4, 4294967295
  %312 = add nsw i64 %308, -1
  %313 = and i64 %308, 3
  %314 = icmp ult i64 %312, 3
  %315 = sub nsw i64 %308, %313
  %316 = icmp eq i64 %313, 0
  br label %378

317:                                              ; preds = %371, %215
  %318 = phi i64 [ 0, %215 ], [ %376, %371 ]
  %319 = phi i32* [ null, %215 ], [ %375, %371 ]
  %320 = phi i8* [ null, %215 ], [ %374, %371 ]
  %321 = phi i32 [ 0, %215 ], [ %373, %371 ]
  %322 = phi i32 [ 0, %215 ], [ %372, %371 ]
  %323 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %3, i64 %318, i32 3
  %324 = load i8, i8* %323, align 4, !range !4
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %371, label %326

326:                                              ; preds = %317
  %327 = add i32 %321, 1
  %328 = icmp sgt i32 %327, 0
  %329 = select i1 %328, i32 %327, i32 0
  %330 = icmp slt i32 %322, 0
  br i1 %330, label %362, label %331, !prof !2

331:                                              ; preds = %326
  %332 = icmp ult i32 %322, %329
  br i1 %332, label %333, label %350, !prof !2

333:                                              ; preds = %331, %333
  %334 = phi i32 [ %337, %333 ], [ %322, %331 ]
  %335 = lshr i32 %334, 1
  %336 = add i32 %334, 8
  %337 = add i32 %336, %335
  %338 = icmp ugt i32 %337, %329
  br i1 %338, label %339, label %333

339:                                              ; preds = %333
  %340 = icmp uge i32 %337, %322
  %341 = icmp ult i32 %337, 1073741823
  %342 = and i1 %340, %341
  br i1 %342, label %343, label %362, !prof !21

343:                                              ; preds = %339
  %344 = zext i32 %337 to i64
  %345 = shl nuw nsw i64 %344, 2
  %346 = call i8* @realloc(i8* %320, i64 %345) #10
  %347 = icmp eq i8* %346, null
  br i1 %347, label %362, label %348, !prof !2

348:                                              ; preds = %343
  %349 = bitcast i8* %346 to i32*
  br label %350

350:                                              ; preds = %348, %331
  %351 = phi i32 [ %337, %348 ], [ %322, %331 ]
  %352 = phi i8* [ %346, %348 ], [ %320, %331 ]
  %353 = phi i32* [ %349, %348 ], [ %319, %331 ]
  %354 = icmp ugt i32 %329, %321
  br i1 %354, label %355, label %364

355:                                              ; preds = %350
  %356 = zext i32 %321 to i64
  %357 = getelementptr inbounds i32, i32* %353, i64 %356
  %358 = bitcast i32* %357 to i8*
  %359 = sub i32 %329, %321
  %360 = zext i32 %359 to i64
  %361 = shl nuw nsw i64 %360, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %358, i8 0, i64 %361, i1 false) #10
  br label %364

362:                                              ; preds = %339, %343, %326
  %363 = phi i32 [ %322, %326 ], [ -1, %343 ], [ -1, %339 ]
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %371

364:                                              ; preds = %355, %350
  %365 = add nsw i32 %329, -1
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds i32, i32* %353, i64 %366
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  %368 = icmp eq i32* %367, bitcast ([48 x i64]* @_hb_CrapPool to i32*)
  br i1 %368, label %371, label %369

369:                                              ; preds = %364
  %370 = trunc i64 %318 to i32
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %364, %362, %317
  %372 = phi i32 [ %322, %317 ], [ %363, %362 ], [ %351, %364 ], [ %351, %369 ]
  %373 = phi i32 [ %321, %317 ], [ %321, %362 ], [ %329, %364 ], [ %329, %369 ]
  %374 = phi i8* [ %320, %317 ], [ %320, %362 ], [ %352, %364 ], [ %352, %369 ]
  %375 = phi i32* [ %319, %317 ], [ %319, %362 ], [ %353, %364 ], [ %353, %369 ]
  %376 = add nuw nsw i64 %318, 1
  %377 = icmp eq i64 %376, %216
  br i1 %377, label %229, label %317

378:                                              ; preds = %973, %229
  %379 = phi %"struct.OT::TupleVariationHeader"* [ %958, %973 ], [ %309, %229 ]
  %380 = call float @_ZNK2OT20TupleVariationHeader16calculate_scalarEPKij10hb_array_tIKNS_7F2DOT14EE(%"struct.OT::TupleVariationHeader"* %379, i32* %234, i32 %235, %"struct.OT::F2DOT14"* %276, i64 %275)
  %381 = fcmp oeq float %380, 0.000000e+00
  br i1 %381, label %927, label %382

382:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #10
  store %"struct.OT::IntType.6"* inttoptr (i64 -6148914691236517206 to %"struct.OT::IntType.6"*), %"struct.OT::IntType.6"** %8, align 8
  %383 = load %"struct.OT::GlyphVariationData"*, %"struct.OT::GlyphVariationData"** %279, align 8
  %384 = getelementptr inbounds %"struct.OT::GlyphVariationData", %"struct.OT::GlyphVariationData"* %383, i64 0, i32 1
  %385 = bitcast %"struct.OT::OffsetTo.321"* %384 to i16*
  %386 = load i16, i16* %385, align 1
  %387 = icmp eq i16 %386, 0
  %388 = call i16 @llvm.bswap.i16(i16 %386) #10
  %389 = zext i16 %388 to i64
  %390 = getelementptr inbounds %"struct.OT::GlyphVariationData", %"struct.OT::GlyphVariationData"* %383, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %389
  %391 = bitcast i8* %390 to %"struct.OT::IntType.6"*
  %392 = select i1 %387, %"struct.OT::IntType.6"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::IntType.6"*), %"struct.OT::IntType.6"* %391, !prof !2
  %393 = load i32, i32* %280, align 8
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %392, i64 %394
  store %"struct.OT::IntType.6"* %395, %"struct.OT::IntType.6"** %8, align 8
  %396 = load %"struct.OT::TupleVariationHeader"*, %"struct.OT::TupleVariationHeader"** %277, align 8
  %397 = bitcast %"struct.OT::TupleVariationHeader"* %396 to i16*
  %398 = load i16, i16* %397, align 1
  %399 = call i16 @llvm.bswap.i16(i16 %398) #10
  %400 = zext i16 %399 to i32
  %401 = load i8*, i8** %281, align 8
  %402 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %395, i64 0, i32 0, i32 0
  %403 = icmp ugt i8* %401, %402
  %404 = ptrtoint %"struct.OT::IntType.6"* %395 to i64
  br i1 %403, label %922, label %405, !prof !7

405:                                              ; preds = %382
  %406 = load i32, i32* %282, align 8
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds i8, i8* %401, i64 %407
  %409 = icmp ugt i8* %402, %408
  br i1 %409, label %922, label %410, !prof !7

410:                                              ; preds = %405
  %411 = ptrtoint i8* %408 to i64
  %412 = sub i64 %411, %404
  %413 = trunc i64 %412 to i32
  %414 = icmp ult i32 %413, %400
  br i1 %414, label %922, label %415, !prof !2

415:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %283) #10
  store i64 %404, i64* %286, align 8
  store i32 %400, i32* %284, align 8
  store i32 0, i32* %285, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 0, i64 16, i1 false) #10
  %416 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %396, i64 0, i32 1, i32 0
  %417 = bitcast %"struct.OT::IntType"* %416 to i16*
  %418 = load i16, i16* %417, align 1
  %419 = and i16 %418, 32
  %420 = icmp eq i16 %419, 0
  br i1 %420, label %426, label %421

421:                                              ; preds = %415
  %422 = call zeroext i1 @_ZN2OT18GlyphVariationData13unpack_pointsERPKNS_7IntTypeIhLj1EEER11hb_vector_tIjERK10hb_array_tIKcE(%"struct.OT::IntType.6"** nonnull dereferenceable(8) %8, %struct.hb_vector_t.39* nonnull dereferenceable(16) %10, %struct.hb_array_t.90* nonnull dereferenceable(16) %9)
  br i1 %422, label %423, label %923

423:                                              ; preds = %421
  %424 = load i32, i32* %288, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %415, %423
  br label %427

427:                                              ; preds = %426, %423
  %428 = phi %struct.hb_vector_t.39* [ %6, %426 ], [ %10, %423 ]
  %429 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %428, i64 0, i32 2
  %430 = load i32*, i32** %429, align 8
  %431 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %428, i64 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = icmp eq i32 %432, 0
  %434 = select i1 %433, i32 %13, i32 %432
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %290) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 16, i1 false) #10
  %435 = icmp sgt i32 %434, 0
  %436 = select i1 %435, i32 %434, i32 0
  br i1 %435, label %437, label %454, !prof !2

437:                                              ; preds = %427, %437
  %438 = phi i32 [ %441, %437 ], [ 0, %427 ]
  %439 = lshr i32 %438, 1
  %440 = add i32 %438, 8
  %441 = add i32 %440, %439
  %442 = icmp ugt i32 %441, %436
  br i1 %442, label %443, label %437

443:                                              ; preds = %437
  %444 = icmp ult i32 %441, 1073741823
  br i1 %444, label %445, label %450, !prof !21

445:                                              ; preds = %443
  %446 = zext i32 %441 to i64
  %447 = shl nuw nsw i64 %446, 2
  %448 = call i8* @malloc(i64 %447)
  %449 = icmp eq i8* %448, null
  br i1 %449, label %450, label %451, !prof !2

450:                                              ; preds = %445, %443
  store i32 -1, i32* %291, align 8
  br label %466

451:                                              ; preds = %445
  store i8* %448, i8** %294, align 8
  store i32 %441, i32* %291, align 8
  %452 = load i32, i32* %292, align 4
  %453 = bitcast i8* %448 to i32*
  br label %454

454:                                              ; preds = %451, %427
  %455 = phi i32* [ %453, %451 ], [ null, %427 ]
  %456 = phi i32 [ %452, %451 ], [ 0, %427 ]
  %457 = icmp ugt i32 %436, %456
  br i1 %457, label %458, label %465

458:                                              ; preds = %454
  %459 = zext i32 %456 to i64
  %460 = getelementptr inbounds i32, i32* %455, i64 %459
  %461 = bitcast i32* %460 to i8*
  %462 = sub i32 %436, %456
  %463 = zext i32 %462 to i64
  %464 = shl nuw nsw i64 %463, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %461, i8 0, i64 %464, i1 false) #10
  br label %465

465:                                              ; preds = %458, %454
  store i32 %436, i32* %292, align 4
  br label %466

466:                                              ; preds = %450, %465
  %467 = call zeroext i1 @_ZN2OT18GlyphVariationData13unpack_deltasERPKNS_7IntTypeIhLj1EEER11hb_vector_tIiERK10hb_array_tIKcE(%"struct.OT::IntType.6"** nonnull dereferenceable(8) %8, %struct.hb_vector_t.336* nonnull dereferenceable(16) %11, %struct.hb_array_t.90* nonnull dereferenceable(16) %9)
  br i1 %467, label %468, label %919

468:                                              ; preds = %466
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 0, i64 16, i1 false) #10
  br i1 %435, label %469, label %486, !prof !2

469:                                              ; preds = %468, %469
  %470 = phi i32 [ %473, %469 ], [ 0, %468 ]
  %471 = lshr i32 %470, 1
  %472 = add i32 %470, 8
  %473 = add i32 %472, %471
  %474 = icmp ugt i32 %473, %436
  br i1 %474, label %475, label %469

475:                                              ; preds = %469
  %476 = icmp ult i32 %473, 1073741823
  br i1 %476, label %477, label %482, !prof !21

477:                                              ; preds = %475
  %478 = zext i32 %473 to i64
  %479 = shl nuw nsw i64 %478, 2
  %480 = call i8* @malloc(i64 %479)
  %481 = icmp eq i8* %480, null
  br i1 %481, label %482, label %483, !prof !2

482:                                              ; preds = %477, %475
  store i32 -1, i32* %296, align 8
  br label %498

483:                                              ; preds = %477
  store i8* %480, i8** %299, align 8
  store i32 %473, i32* %296, align 8
  %484 = load i32, i32* %297, align 4
  %485 = bitcast i8* %480 to i32*
  br label %486

486:                                              ; preds = %483, %468
  %487 = phi i32* [ %485, %483 ], [ null, %468 ]
  %488 = phi i32 [ %484, %483 ], [ 0, %468 ]
  %489 = icmp ugt i32 %436, %488
  br i1 %489, label %490, label %497

490:                                              ; preds = %486
  %491 = zext i32 %488 to i64
  %492 = getelementptr inbounds i32, i32* %487, i64 %491
  %493 = bitcast i32* %492 to i8*
  %494 = sub i32 %436, %488
  %495 = zext i32 %494 to i64
  %496 = shl nuw nsw i64 %495, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %493, i8 0, i64 %496, i1 false) #10
  br label %497

497:                                              ; preds = %490, %486
  store i32 %436, i32* %297, align 4
  br label %498

498:                                              ; preds = %482, %497
  %499 = call zeroext i1 @_ZN2OT18GlyphVariationData13unpack_deltasERPKNS_7IntTypeIhLj1EEER11hb_vector_tIiERK10hb_array_tIKcE(%"struct.OT::IntType.6"** nonnull dereferenceable(8) %8, %struct.hb_vector_t.336* nonnull dereferenceable(16) %12, %struct.hb_array_t.90* nonnull dereferenceable(16) %9)
  br i1 %499, label %500, label %916

500:                                              ; preds = %498
  br i1 %300, label %513, label %501

501:                                              ; preds = %500
  br i1 %314, label %502, label %572

502:                                              ; preds = %572, %501
  %503 = phi i64 [ 0, %501 ], [ %589, %572 ]
  br i1 %316, label %513, label %504

504:                                              ; preds = %502, %504
  %505 = phi i64 [ %509, %504 ], [ %503, %502 ]
  %506 = phi i64 [ %511, %504 ], [ %313, %502 ]
  %507 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %505, i32 0
  store i8 0, i8* %507, align 4
  %508 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %505, i32 1
  %509 = add nuw nsw i64 %505, 1
  %510 = bitcast float* %508 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %510, i8 0, i64 9, i1 false)
  %511 = add i64 %506, -1
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %513, label %504, !llvm.loop !31

513:                                              ; preds = %502, %504, %500
  %514 = icmp eq i32 %434, 0
  br i1 %514, label %593, label %515

515:                                              ; preds = %513
  br i1 %433, label %519, label %516

516:                                              ; preds = %515
  %517 = zext i32 %432 to i64
  %518 = zext i32 %434 to i64
  br label %594

519:                                              ; preds = %515
  %520 = zext i32 %434 to i64
  br label %521

521:                                              ; preds = %565, %519
  %522 = phi i64 [ 0, %519 ], [ %570, %565 ]
  %523 = icmp ult i64 %522, %308
  br i1 %523, label %525, label %524, !prof !3

524:                                              ; preds = %521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %527

525:                                              ; preds = %521
  %526 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %522
  br label %527

527:                                              ; preds = %525, %524
  %528 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %524 ], [ %526, %525 ]
  %529 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %528, i64 0, i32 0
  store i8 1, i8* %529, align 4
  %530 = load i32, i32* %292, align 4
  %531 = zext i32 %530 to i64
  %532 = icmp ult i64 %522, %531
  br i1 %532, label %534, label %533, !prof !3

533:                                              ; preds = %527
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %538

534:                                              ; preds = %527
  %535 = load i32*, i32** %293, align 8
  %536 = getelementptr inbounds i32, i32* %535, i64 %522
  %537 = load i32, i32* %536, align 4
  br label %538

538:                                              ; preds = %534, %533
  %539 = phi i32 [ %214, %533 ], [ %537, %534 ]
  %540 = sitofp i32 %539 to float
  %541 = fmul float %380, %540
  br i1 %523, label %543, label %542, !prof !3

542:                                              ; preds = %538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %545

543:                                              ; preds = %538
  %544 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %522
  br label %545

545:                                              ; preds = %543, %542
  %546 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %542 ], [ %544, %543 ]
  %547 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %546, i64 0, i32 1
  %548 = load float, float* %547, align 4
  %549 = fadd float %541, %548
  store float %549, float* %547, align 4
  %550 = load i32, i32* %297, align 4
  %551 = zext i32 %550 to i64
  %552 = icmp ult i64 %522, %551
  br i1 %552, label %554, label %553, !prof !3

553:                                              ; preds = %545
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %558

554:                                              ; preds = %545
  %555 = load i32*, i32** %298, align 8
  %556 = getelementptr inbounds i32, i32* %555, i64 %522
  %557 = load i32, i32* %556, align 4
  br label %558

558:                                              ; preds = %554, %553
  %559 = phi i32 [ %214, %553 ], [ %557, %554 ]
  %560 = sitofp i32 %559 to float
  %561 = fmul float %380, %560
  br i1 %523, label %563, label %562, !prof !3

562:                                              ; preds = %558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %565

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %522
  br label %565

565:                                              ; preds = %563, %562
  %566 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %562 ], [ %564, %563 ]
  %567 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %566, i64 0, i32 2
  %568 = load float, float* %567, align 4
  %569 = fadd float %561, %568
  store float %569, float* %567, align 4
  %570 = add nuw nsw i64 %522, 1
  %571 = icmp eq i64 %570, %520
  br i1 %571, label %593, label %521

572:                                              ; preds = %501, %572
  %573 = phi i64 [ %589, %572 ], [ 0, %501 ]
  %574 = phi i64 [ %591, %572 ], [ %315, %501 ]
  %575 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %573, i32 0
  store i8 0, i8* %575, align 4
  %576 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %573, i32 1
  %577 = or i64 %573, 1
  %578 = bitcast float* %576 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %578, i8 0, i64 9, i1 false)
  %579 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %577, i32 0
  store i8 0, i8* %579, align 4
  %580 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %577, i32 1
  %581 = or i64 %573, 2
  %582 = bitcast float* %580 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %582, i8 0, i64 9, i1 false)
  %583 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %581, i32 0
  store i8 0, i8* %583, align 4
  %584 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %581, i32 1
  %585 = or i64 %573, 3
  %586 = bitcast float* %584 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %586, i8 0, i64 9, i1 false)
  %587 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %585, i32 0
  store i8 0, i8* %587, align 4
  %588 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %585, i32 1
  %589 = add nuw nsw i64 %573, 4
  %590 = bitcast float* %588 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %590, i8 0, i64 9, i1 false)
  %591 = add i64 %574, -4
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %502, label %572

593:                                              ; preds = %648, %565, %513
  br i1 %301, label %655, label %656

594:                                              ; preds = %648, %516
  %595 = phi i64 [ 0, %516 ], [ %653, %648 ]
  %596 = icmp ult i64 %595, %517
  br i1 %596, label %598, label %597, !prof !3

597:                                              ; preds = %594
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %601

598:                                              ; preds = %594
  %599 = getelementptr inbounds i32, i32* %430, i64 %595
  %600 = load i32, i32* %599, align 4
  br label %601

601:                                              ; preds = %597, %598
  %602 = phi i32 [ %214, %597 ], [ %600, %598 ]
  %603 = icmp ugt i32 %211, %602
  br i1 %603, label %605, label %604, !prof !3

604:                                              ; preds = %601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %608

605:                                              ; preds = %601
  %606 = zext i32 %602 to i64
  %607 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %606
  br label %608

608:                                              ; preds = %604, %605
  %609 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %604 ], [ %607, %605 ]
  %610 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %609, i64 0, i32 0
  store i8 1, i8* %610, align 4
  %611 = load i32, i32* %292, align 4
  %612 = zext i32 %611 to i64
  %613 = icmp ult i64 %595, %612
  br i1 %613, label %615, label %614, !prof !3

614:                                              ; preds = %608
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %619

615:                                              ; preds = %608
  %616 = load i32*, i32** %293, align 8
  %617 = getelementptr inbounds i32, i32* %616, i64 %595
  %618 = load i32, i32* %617, align 4
  br label %619

619:                                              ; preds = %614, %615
  %620 = phi i32 [ %214, %614 ], [ %618, %615 ]
  %621 = sitofp i32 %620 to float
  %622 = fmul float %380, %621
  br i1 %603, label %624, label %623, !prof !3

623:                                              ; preds = %619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %627

624:                                              ; preds = %619
  %625 = zext i32 %602 to i64
  %626 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %625
  br label %627

627:                                              ; preds = %623, %624
  %628 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %623 ], [ %626, %624 ]
  %629 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %628, i64 0, i32 1
  %630 = load float, float* %629, align 4
  %631 = fadd float %622, %630
  store float %631, float* %629, align 4
  %632 = load i32, i32* %297, align 4
  %633 = zext i32 %632 to i64
  %634 = icmp ult i64 %595, %633
  br i1 %634, label %636, label %635, !prof !3

635:                                              ; preds = %627
  store i32 %214, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %640

636:                                              ; preds = %627
  %637 = load i32*, i32** %298, align 8
  %638 = getelementptr inbounds i32, i32* %637, i64 %595
  %639 = load i32, i32* %638, align 4
  br label %640

640:                                              ; preds = %635, %636
  %641 = phi i32 [ %214, %635 ], [ %639, %636 ]
  %642 = sitofp i32 %641 to float
  %643 = fmul float %380, %642
  br i1 %603, label %645, label %644, !prof !3

644:                                              ; preds = %640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %648

645:                                              ; preds = %640
  %646 = zext i32 %602 to i64
  %647 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %646
  br label %648

648:                                              ; preds = %644, %645
  %649 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %644 ], [ %647, %645 ]
  %650 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %649, i64 0, i32 2
  %651 = load float, float* %650, align 4
  %652 = fadd float %643, %651
  store float %652, float* %650, align 4
  %653 = add nuw nsw i64 %595, 1
  %654 = icmp eq i64 %653, %518
  br i1 %654, label %593, label %594

655:                                              ; preds = %888, %593
  br i1 %213, label %916, label %892

656:                                              ; preds = %593, %888
  %657 = phi i64 [ %890, %888 ], [ 0, %593 ]
  %658 = phi i32 [ %889, %888 ], [ 0, %593 ]
  %659 = getelementptr inbounds i32, i32* %232, i64 %657
  %660 = load i32, i32* %659, align 4
  %661 = icmp ult i32 %660, %658
  br i1 %661, label %662, label %667

662:                                              ; preds = %675, %656
  %663 = phi i32 [ 0, %656 ], [ %681, %675 ]
  %664 = sub i32 %660, %658
  %665 = add i32 %663, -1
  %666 = icmp ult i32 %665, %664
  br i1 %666, label %684, label %888

667:                                              ; preds = %656, %675
  %668 = phi i32 [ %682, %675 ], [ %658, %656 ]
  %669 = phi i32 [ %681, %675 ], [ 0, %656 ]
  %670 = icmp ugt i32 %211, %668
  br i1 %670, label %672, label %671, !prof !3

671:                                              ; preds = %667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %675

672:                                              ; preds = %667
  %673 = zext i32 %668 to i64
  %674 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %673
  br label %675

675:                                              ; preds = %671, %672
  %676 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %671 ], [ %674, %672 ]
  %677 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %676, i64 0, i32 0
  %678 = load i8, i8* %677, align 4
  %679 = icmp eq i8 %678, 0
  %680 = zext i1 %679 to i32
  %681 = add i32 %669, %680
  %682 = add i32 %668, 1
  %683 = icmp ugt i32 %682, %660
  br i1 %683, label %662, label %667

684:                                              ; preds = %750, %662
  %685 = phi i32 [ %663, %662 ], [ %751, %750 ]
  %686 = phi i32 [ %658, %662 ], [ %718, %750 ]
  br label %687

687:                                              ; preds = %713, %684
  %688 = phi i32 [ %686, %684 ], [ %691, %713 ]
  %689 = icmp ult i32 %688, %660
  %690 = add i32 %688, 1
  %691 = select i1 %689, i32 %690, i32 %658
  %692 = icmp ugt i32 %211, %688
  br i1 %692, label %694, label %693, !prof !3

693:                                              ; preds = %687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %697

694:                                              ; preds = %687
  %695 = zext i32 %688 to i64
  %696 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %695
  br label %697

697:                                              ; preds = %693, %694
  %698 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %693 ], [ %696, %694 ]
  %699 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %698, i64 0, i32 0
  %700 = load i8, i8* %699, align 4
  %701 = icmp eq i8 %700, 0
  br i1 %701, label %713, label %702

702:                                              ; preds = %697
  %703 = icmp ugt i32 %211, %691
  br i1 %703, label %705, label %704, !prof !3

704:                                              ; preds = %702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %708

705:                                              ; preds = %702
  %706 = zext i32 %691 to i64
  %707 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %706
  br label %708

708:                                              ; preds = %704, %705
  %709 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %704 ], [ %707, %705 ]
  %710 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %709, i64 0, i32 0
  %711 = load i8, i8* %710, align 4
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %714, label %713

713:                                              ; preds = %708, %697
  br label %687

714:                                              ; preds = %708, %740
  %715 = phi i32 [ %718, %740 ], [ %688, %708 ]
  %716 = icmp ult i32 %715, %660
  %717 = add i32 %715, 1
  %718 = select i1 %716, i32 %717, i32 %658
  %719 = icmp ugt i32 %211, %715
  br i1 %719, label %721, label %720, !prof !3

720:                                              ; preds = %714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %724

721:                                              ; preds = %714
  %722 = zext i32 %715 to i64
  %723 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %722
  br label %724

724:                                              ; preds = %720, %721
  %725 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %720 ], [ %723, %721 ]
  %726 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %725, i64 0, i32 0
  %727 = load i8, i8* %726, align 4
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %729, label %740

729:                                              ; preds = %724
  %730 = icmp ugt i32 %211, %718
  br i1 %730, label %732, label %731, !prof !3

731:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %735

732:                                              ; preds = %729
  %733 = zext i32 %718 to i64
  %734 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %733
  br label %735

735:                                              ; preds = %731, %732
  %736 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %731 ], [ %734, %732 ]
  %737 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %736, i64 0, i32 0
  %738 = load i8, i8* %737, align 4
  %739 = icmp eq i8 %738, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %735, %724
  br label %714

741:                                              ; preds = %735
  %742 = icmp ugt i32 %209, %688
  %743 = zext i32 %688 to i64
  %744 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %210, i64 %743
  %745 = icmp ugt i32 %209, %718
  %746 = zext i32 %718 to i64
  %747 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %210, i64 %746
  %748 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %743
  %749 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %746
  br label %750

750:                                              ; preds = %741, %883
  %751 = phi i32 [ %886, %883 ], [ %685, %741 ]
  %752 = phi i32 [ %755, %883 ], [ %688, %741 ]
  %753 = icmp ult i32 %752, %660
  %754 = add i32 %752, 1
  %755 = select i1 %753, i32 %754, i32 %658
  %756 = icmp eq i32 %755, %718
  br i1 %756, label %684, label %757

757:                                              ; preds = %750
  %758 = icmp ugt i32 %209, %755
  br i1 %758, label %760, label %759, !prof !3

759:                                              ; preds = %757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %763

760:                                              ; preds = %757
  %761 = zext i32 %755 to i64
  %762 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %210, i64 %761
  br label %763

763:                                              ; preds = %760, %759
  %764 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %759 ], [ %762, %760 ]
  %765 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %764, i64 0, i32 1
  %766 = load float, float* %765, align 4
  br i1 %742, label %768, label %767, !prof !3

767:                                              ; preds = %763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %768

768:                                              ; preds = %763, %767
  %769 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %767 ], [ %744, %763 ]
  %770 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %769, i64 0, i32 1
  %771 = load float, float* %770, align 4
  br i1 %745, label %773, label %772, !prof !3

772:                                              ; preds = %768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %773

773:                                              ; preds = %768, %772
  %774 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %772 ], [ %747, %768 ]
  %775 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %774, i64 0, i32 1
  %776 = load float, float* %775, align 4
  br i1 %692, label %778, label %777, !prof !3

777:                                              ; preds = %773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %778

778:                                              ; preds = %773, %777
  %779 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %777 ], [ %748, %773 ]
  %780 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %779, i64 0, i32 1
  %781 = load float, float* %780, align 4
  br i1 %730, label %783, label %782, !prof !3

782:                                              ; preds = %778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %783

783:                                              ; preds = %778, %782
  %784 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %782 ], [ %749, %778 ]
  %785 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %784, i64 0, i32 1
  %786 = load float, float* %785, align 4
  %787 = fcmp oeq float %771, %776
  br i1 %787, label %788, label %791

788:                                              ; preds = %783
  %789 = fcmp oeq float %781, %786
  %790 = select i1 %789, float %781, float 0.000000e+00
  br label %813

791:                                              ; preds = %783
  %792 = fcmp ole float %771, %776
  %793 = select i1 %792, float %771, float %776
  %794 = fcmp ugt float %766, %793
  br i1 %794, label %798, label %795

795:                                              ; preds = %791
  %796 = fcmp olt float %771, %776
  %797 = select i1 %796, float %781, float %786
  br label %813

798:                                              ; preds = %791
  %799 = fcmp oge float %771, %776
  %800 = select i1 %799, float %771, float %776
  %801 = fcmp ult float %766, %800
  br i1 %801, label %805, label %802

802:                                              ; preds = %798
  %803 = fcmp ogt float %771, %776
  %804 = select i1 %803, float %781, float %786
  br label %813

805:                                              ; preds = %798
  %806 = fsub float %766, %771
  %807 = fsub float %776, %771
  %808 = fdiv float %806, %807
  %809 = fsub float 1.000000e+00, %808
  %810 = fmul float %809, %781
  %811 = fmul float %808, %786
  %812 = fadd float %810, %811
  br label %813

813:                                              ; preds = %788, %795, %802, %805
  %814 = phi float [ %790, %788 ], [ %797, %795 ], [ %804, %802 ], [ %812, %805 ]
  %815 = icmp ugt i32 %211, %755
  br i1 %815, label %817, label %816, !prof !3

816:                                              ; preds = %813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %820

817:                                              ; preds = %813
  %818 = zext i32 %755 to i64
  %819 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %818
  br label %820

820:                                              ; preds = %816, %817
  %821 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %816 ], [ %819, %817 ]
  %822 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %821, i64 0, i32 1
  store float %814, float* %822, align 4
  br i1 %758, label %824, label %823, !prof !3

823:                                              ; preds = %820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %827

824:                                              ; preds = %820
  %825 = zext i32 %755 to i64
  %826 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %210, i64 %825
  br label %827

827:                                              ; preds = %824, %823
  %828 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %823 ], [ %826, %824 ]
  %829 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %828, i64 0, i32 2
  %830 = load float, float* %829, align 4
  br i1 %742, label %832, label %831, !prof !3

831:                                              ; preds = %827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %832

832:                                              ; preds = %827, %831
  %833 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %831 ], [ %744, %827 ]
  %834 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %833, i64 0, i32 2
  %835 = load float, float* %834, align 4
  br i1 %745, label %837, label %836, !prof !3

836:                                              ; preds = %832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %837

837:                                              ; preds = %832, %836
  %838 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %836 ], [ %747, %832 ]
  %839 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %838, i64 0, i32 2
  %840 = load float, float* %839, align 4
  br i1 %692, label %842, label %841, !prof !3

841:                                              ; preds = %837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %842

842:                                              ; preds = %837, %841
  %843 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %841 ], [ %748, %837 ]
  %844 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %843, i64 0, i32 2
  %845 = load float, float* %844, align 4
  br i1 %730, label %847, label %846, !prof !3

846:                                              ; preds = %842
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %847

847:                                              ; preds = %842, %846
  %848 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %846 ], [ %749, %842 ]
  %849 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %848, i64 0, i32 2
  %850 = load float, float* %849, align 4
  %851 = fcmp oeq float %835, %840
  br i1 %851, label %852, label %855

852:                                              ; preds = %847
  %853 = fcmp oeq float %845, %850
  %854 = select i1 %853, float %845, float 0.000000e+00
  br label %877

855:                                              ; preds = %847
  %856 = fcmp ole float %835, %840
  %857 = select i1 %856, float %835, float %840
  %858 = fcmp ugt float %830, %857
  br i1 %858, label %862, label %859

859:                                              ; preds = %855
  %860 = fcmp olt float %835, %840
  %861 = select i1 %860, float %845, float %850
  br label %877

862:                                              ; preds = %855
  %863 = fcmp oge float %835, %840
  %864 = select i1 %863, float %835, float %840
  %865 = fcmp ult float %830, %864
  br i1 %865, label %869, label %866

866:                                              ; preds = %862
  %867 = fcmp ogt float %835, %840
  %868 = select i1 %867, float %845, float %850
  br label %877

869:                                              ; preds = %862
  %870 = fsub float %830, %835
  %871 = fsub float %840, %835
  %872 = fdiv float %870, %871
  %873 = fsub float 1.000000e+00, %872
  %874 = fmul float %873, %845
  %875 = fmul float %872, %850
  %876 = fadd float %874, %875
  br label %877

877:                                              ; preds = %852, %859, %866, %869
  %878 = phi float [ %854, %852 ], [ %861, %859 ], [ %868, %866 ], [ %876, %869 ]
  br i1 %815, label %880, label %879, !prof !3

879:                                              ; preds = %877
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %883

880:                                              ; preds = %877
  %881 = zext i32 %755 to i64
  %882 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %881
  br label %883

883:                                              ; preds = %879, %880
  %884 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %879 ], [ %882, %880 ]
  %885 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %884, i64 0, i32 2
  store float %878, float* %885, align 4
  %886 = add i32 %751, -1
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %750

888:                                              ; preds = %883, %662
  %889 = add i32 %660, 1
  %890 = add nuw nsw i64 %657, 1
  %891 = icmp eq i64 %890, %310
  br i1 %891, label %655, label %656

892:                                              ; preds = %655, %907
  %893 = phi i64 [ %914, %907 ], [ 0, %655 ]
  %894 = icmp ult i64 %893, %308
  br i1 %894, label %900, label %895, !prof !3

895:                                              ; preds = %892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  %896 = load float, float* getelementptr inbounds (%"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), i64 0, i32 1), align 4
  %897 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %3, i64 %893, i32 1
  %898 = load float, float* %897, align 4
  %899 = fadd float %896, %898
  store float %899, float* %897, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %907

900:                                              ; preds = %892
  %901 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %893, i32 1
  %902 = load float, float* %901, align 4
  %903 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %3, i64 %893, i32 1
  %904 = load float, float* %903, align 4
  %905 = fadd float %902, %904
  store float %905, float* %903, align 4
  %906 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 %893
  br label %907

907:                                              ; preds = %895, %900
  %908 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %895 ], [ %906, %900 ]
  %909 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %908, i64 0, i32 2
  %910 = load float, float* %909, align 4
  %911 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %3, i64 %893, i32 2
  %912 = load float, float* %911, align 4
  %913 = fadd float %910, %912
  store float %913, float* %911, align 4
  %914 = add nuw nsw i64 %893, 1
  %915 = icmp eq i64 %914, %311
  br i1 %915, label %916, label %892

916:                                              ; preds = %907, %655, %498
  %917 = phi i32 [ 1, %498 ], [ 0, %655 ], [ 0, %907 ]
  %918 = load i8*, i8** %299, align 8
  call void @free(i8* %918) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #10
  br label %919

919:                                              ; preds = %466, %916
  %920 = phi i32 [ %917, %916 ], [ 1, %466 ]
  %921 = load i8*, i8** %294, align 8
  call void @free(i8* %921) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %290) #10
  br label %923

922:                                              ; preds = %410, %405, %382
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #10
  br label %994

923:                                              ; preds = %919, %421
  %924 = phi i32 [ %920, %919 ], [ 1, %421 ]
  %925 = load i8*, i8** %302, align 8
  call void @free(i8* %925) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %283) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #10
  %926 = icmp eq i32 %924, 0
  br i1 %926, label %927, label %994

927:                                              ; preds = %923, %378
  %928 = load %"struct.OT::TupleVariationHeader"*, %"struct.OT::TupleVariationHeader"** %277, align 8
  %929 = bitcast %"struct.OT::TupleVariationHeader"* %928 to i16*
  %930 = load i16, i16* %929, align 1
  %931 = call i16 @llvm.bswap.i16(i16 %930) #10
  %932 = zext i16 %931 to i32
  %933 = load i32, i32* %280, align 8
  %934 = add i32 %933, %932
  store i32 %934, i32* %280, align 8
  %935 = load i32, i32* %303, align 4
  %936 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %928, i64 0, i32 1, i32 0
  %937 = bitcast %"struct.OT::IntType"* %936 to i16*
  %938 = load i16, i16* %937, align 1
  %939 = lshr i16 %938, 7
  %940 = and i16 %939, 1
  %941 = lshr i16 %938, 5
  %942 = and i16 %941, 2
  %943 = or i16 %942, %940
  %944 = zext i16 %943 to i32
  %945 = shl i32 %935, 1
  %946 = mul i32 %945, %944
  %947 = add i32 %946, 4
  %948 = zext i32 %947 to i64
  %949 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %928, i64 0, i32 0, i32 0, i32 0, i64 %948
  store i8* %949, i8** %304, align 8
  %950 = load i32, i32* %305, align 8
  %951 = add i32 %950, 1
  store i32 %951, i32* %305, align 8
  %952 = load i16*, i16** %306, align 8
  %953 = load i16, i16* %952, align 1
  %954 = and i16 %953, -241
  %955 = call i16 @llvm.bswap.i16(i16 %954) #10
  %956 = zext i16 %955 to i32
  %957 = icmp ult i32 %951, %956
  %958 = bitcast i8* %949 to %"struct.OT::TupleVariationHeader"*
  br i1 %957, label %959, label %994

959:                                              ; preds = %927
  %960 = load i8*, i8** %307, align 8
  %961 = icmp ugt i8* %960, %949
  br i1 %961, label %994, label %962

962:                                              ; preds = %959
  %963 = load i32, i32* %282, align 8
  %964 = zext i32 %963 to i64
  %965 = getelementptr inbounds i8, i8* %960, i64 %964
  %966 = icmp ugt i8* %949, %965
  br i1 %966, label %994, label %967

967:                                              ; preds = %962
  %968 = ptrtoint i8* %965 to i64
  %969 = ptrtoint i8* %949 to i64
  %970 = sub i64 %968, %969
  %971 = trunc i64 %970 to i32
  %972 = icmp ugt i32 %971, 3
  br i1 %972, label %973, label %994

973:                                              ; preds = %967
  %974 = bitcast i8* %949 to i16*
  %975 = load i16, i16* %974, align 1
  %976 = call i16 @llvm.bswap.i16(i16 %975) #10
  %977 = zext i16 %976 to i32
  %978 = getelementptr inbounds i8, i8* %949, i64 2
  %979 = bitcast i8* %978 to i16*
  %980 = load i16, i16* %979, align 1
  %981 = lshr i16 %980, 7
  %982 = and i16 %981, 1
  %983 = lshr i16 %980, 5
  %984 = and i16 %983, 2
  %985 = or i16 %984, %982
  %986 = zext i16 %985 to i32
  %987 = mul i32 %945, %986
  %988 = add i32 %987, 4
  %989 = icmp ugt i32 %988, %977
  %990 = select i1 %989, i32 %988, i32 %977
  %991 = icmp ule i32 %990, %971
  %992 = icmp ne i32 %988, 0
  %993 = and i1 %992, %991
  br i1 %993, label %378, label %994

994:                                              ; preds = %923, %927, %959, %962, %967, %973, %922
  %995 = phi i1 [ false, %922 ], [ true, %927 ], [ true, %959 ], [ true, %962 ], [ true, %967 ], [ true, %973 ], [ false, %923 ]
  call void @free(i8* %231) #10
  %996 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %212, i64 0, i32 0
  call void @free(i8* %996) #10
  %997 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %210, i64 0, i32 0
  call void @free(i8* %997) #10
  br label %998

998:                                              ; preds = %147, %994
  %999 = phi i1 [ %995, %994 ], [ true, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %151) #10
  %1000 = bitcast i32** %150 to i8**
  %1001 = load i8*, i8** %1000, align 8
  call void @free(i8* %1001) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #10
  br label %1002

1002:                                             ; preds = %107, %998, %35, %5, %17
  %1003 = phi i1 [ true, %17 ], [ true, %5 ], [ true, %35 ], [ %999, %998 ], [ true, %107 ]
  ret i1 %1003
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT22contour_point_vector_t6extendERK10hb_array_tINS_15contour_point_tEE(%"struct.OT::contour_point_vector_t"*, %struct.hb_array_t.313* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, %4
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %48, label %13, !prof !2

13:                                               ; preds = %2
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %15, label %36, !prof !2

15:                                               ; preds = %13, %15
  %16 = phi i32 [ %19, %15 ], [ %11, %13 ]
  %17 = lshr i32 %16, 1
  %18 = add i32 %16, 8
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, %9
  br i1 %20, label %21, label %15

21:                                               ; preds = %15
  %22 = icmp uge i32 %19, %11
  %23 = icmp ult i32 %19, 268435455
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %33, !prof !21

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %0, i64 0, i32 0, i32 2
  %27 = bitcast %"struct.OT::contour_point_t"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = zext i32 %19 to i64
  %30 = shl nuw nsw i64 %29, 4
  %31 = tail call i8* @realloc(i8* %28, i64 %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %25, %21
  store i32 -1, i32* %10, align 8
  br label %48

34:                                               ; preds = %25
  store i8* %31, i8** %27, align 8
  store i32 %19, i32* %10, align 8
  %35 = load i32, i32* %3, align 4
  br label %36

36:                                               ; preds = %34, %13
  %37 = phi i32 [ %35, %34 ], [ %4, %13 ]
  %38 = icmp ugt i32 %9, %37
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %0, i64 0, i32 0, i32 2
  %41 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %40, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %41, i64 %42, i32 0
  %44 = sub i32 %9, %37
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 %46, i1 false) #10
  br label %47

47:                                               ; preds = %39, %36
  store i32 %9, i32* %3, align 4
  br label %48

48:                                               ; preds = %2, %33, %47
  %49 = load i32, i32* %5, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.hb_array_t.313, %struct.hb_array_t.313* %1, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %0, i64 0, i32 0, i32 2
  br label %55

54:                                               ; preds = %75, %48
  ret void

55:                                               ; preds = %51, %75
  %56 = phi i32 [ %49, %51 ], [ %80, %75 ]
  %57 = phi i64 [ 0, %51 ], [ %79, %75 ]
  %58 = zext i32 %56 to i64
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %61, label %60, !prof !3

60:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %64

61:                                               ; preds = %55
  %62 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %52, align 8
  %63 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %62, i64 %57
  br label %64

64:                                               ; preds = %60, %61
  %65 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %60 ], [ %63, %61 ]
  %66 = trunc i64 %57 to i32
  %67 = add i32 %4, %66
  %68 = load i32, i32* %3, align 4
  %69 = icmp ugt i32 %68, %67
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %75

71:                                               ; preds = %64
  %72 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %53, align 8
  %73 = zext i32 %67 to i64
  %74 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %72, i64 %73
  br label %75

75:                                               ; preds = %70, %71
  %76 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %70 ], [ %74, %71 ]
  %77 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %76, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %65, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 16, i1 false)
  %79 = add nuw nsw i64 %57, 1
  %80 = load i32, i32* %5, align 8
  %81 = zext i32 %80 to i64
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %55, label %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT4glyf19CompositeGlyphChain16transform_pointsERNS_22contour_point_vector_tE(%"struct.OT::glyf::CompositeGlyphChain"*, %"struct.OT::contour_point_vector_t"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %4 = bitcast %"struct.OT::glyf::CompositeGlyphChain"* %0 to i16*
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %3 to i16*
  %10 = load i16, i16* %9, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10) #10
  %12 = sext i16 %11 to i32
  %13 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 4
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #10
  %17 = sext i16 %16 to i32
  br label %24

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.OT::glyf::CompositeGlyphChain", %"struct.OT::glyf::CompositeGlyphChain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %20 = load i8, i8* %3, align 1
  %21 = sext i8 %20 to i32
  %22 = load i8, i8* %19, align 1
  %23 = sext i8 %22 to i32
  br label %24

24:                                               ; preds = %18, %8
  %25 = phi i32 [ %12, %8 ], [ %21, %18 ]
  %26 = phi i32 [ %17, %8 ], [ %23, %18 ]
  %27 = phi i8* [ %13, %8 ], [ %3, %18 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 2
  %29 = and i16 %5, 512
  %30 = icmp eq i16 %29, 0
  %31 = select i1 %30, i32 0, i32 %25
  %32 = select i1 %30, i32 0, i32 %26
  %33 = sitofp i32 %31 to float
  %34 = sitofp i32 %32 to float
  %35 = tail call i16 @llvm.bswap.i16(i16 %5) #10
  %36 = zext i16 %35 to i32
  %37 = and i32 %36, 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %24
  %40 = bitcast i8* %28 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = tail call i16 @llvm.bswap.i16(i16 %41) #10
  %43 = sitofp i16 %42 to float
  %44 = fmul float %43, 0x3F10000000000000
  br label %90

45:                                               ; preds = %24
  %46 = and i32 %36, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %45
  %49 = bitcast i8* %28 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = tail call i16 @llvm.bswap.i16(i16 %50) #10
  %52 = sitofp i16 %51 to float
  %53 = fmul float %52, 0x3F10000000000000
  %54 = getelementptr inbounds i8, i8* %27, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 1
  %57 = tail call i16 @llvm.bswap.i16(i16 %56) #10
  %58 = sitofp i16 %57 to float
  %59 = fmul float %58, 0x3F10000000000000
  br label %90

60:                                               ; preds = %45
  %61 = trunc i16 %35 to i8
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %87

63:                                               ; preds = %60
  %64 = bitcast i8* %28 to i16*
  %65 = load i16, i16* %64, align 1
  %66 = tail call i16 @llvm.bswap.i16(i16 %65) #10
  %67 = sitofp i16 %66 to float
  %68 = fmul float %67, 0x3F10000000000000
  %69 = getelementptr inbounds i8, i8* %27, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 1
  %72 = tail call i16 @llvm.bswap.i16(i16 %71) #10
  %73 = sitofp i16 %72 to float
  %74 = fmul float %73, 0x3F10000000000000
  %75 = getelementptr inbounds i8, i8* %27, i64 6
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = tail call i16 @llvm.bswap.i16(i16 %77) #10
  %79 = sitofp i16 %78 to float
  %80 = fmul float %79, 0x3F10000000000000
  %81 = getelementptr inbounds i8, i8* %27, i64 8
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 1
  %84 = tail call i16 @llvm.bswap.i16(i16 %83) #10
  %85 = sitofp i16 %84 to float
  %86 = fmul float %85, 0x3F10000000000000
  br label %90

87:                                               ; preds = %60
  %88 = or i32 %32, %31
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %202, label %90

90:                                               ; preds = %87, %63, %48, %39
  %91 = phi float [ 1.000000e+00, %87 ], [ %44, %39 ], [ %53, %48 ], [ %68, %63 ]
  %92 = phi float [ 0.000000e+00, %87 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %48 ], [ %74, %63 ]
  %93 = phi float [ 0.000000e+00, %87 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %48 ], [ %80, %63 ]
  %94 = phi float [ 1.000000e+00, %87 ], [ %44, %39 ], [ %59, %48 ], [ %86, %63 ]
  %95 = and i16 %5, 24
  %96 = icmp eq i16 %95, 8
  %97 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %96, label %100, label %151

100:                                              ; preds = %90
  br i1 %99, label %202, label %101

101:                                              ; preds = %100
  %102 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  br label %103

103:                                              ; preds = %112, %101
  %104 = phi i32 [ %98, %101 ], [ %121, %112 ]
  %105 = phi i64 [ 0, %101 ], [ %120, %112 ]
  %106 = zext i32 %104 to i64
  %107 = icmp ult i64 %105, %106
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %103
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %112

109:                                              ; preds = %103
  %110 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %102, align 8
  %111 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %110, i64 %105
  br label %112

112:                                              ; preds = %109, %108
  %113 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %108 ], [ %111, %109 ]
  %114 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %113, i64 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = fadd float %115, %33
  store float %116, float* %114, align 4
  %117 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %113, i64 0, i32 2
  %118 = load float, float* %117, align 4
  %119 = fadd float %118, %34
  store float %119, float* %117, align 4
  %120 = add nuw nsw i64 %105, 1
  %121 = load i32, i32* %97, align 4
  %122 = zext i32 %121 to i64
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %103, label %124

124:                                              ; preds = %112
  %125 = icmp eq i32 %121, 0
  br i1 %125, label %202, label %126

126:                                              ; preds = %124, %135
  %127 = phi i32 [ %148, %135 ], [ %121, %124 ]
  %128 = phi i64 [ %147, %135 ], [ 0, %124 ]
  %129 = zext i32 %127 to i64
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %132, label %131, !prof !3

131:                                              ; preds = %126
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %135

132:                                              ; preds = %126
  %133 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %102, align 8
  %134 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %133, i64 %128
  br label %135

135:                                              ; preds = %132, %131
  %136 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %131 ], [ %134, %132 ]
  %137 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %136, i64 0, i32 1
  %138 = load float, float* %137, align 4
  %139 = fmul float %91, %138
  %140 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %136, i64 0, i32 2
  %141 = load float, float* %140, align 4
  %142 = fmul float %93, %141
  %143 = fadd float %139, %142
  %144 = fmul float %92, %138
  %145 = fmul float %94, %141
  %146 = fadd float %144, %145
  store float %146, float* %140, align 4
  store float %143, float* %137, align 4
  %147 = add nuw nsw i64 %128, 1
  %148 = load i32, i32* %97, align 4
  %149 = zext i32 %148 to i64
  %150 = icmp ult i64 %147, %149
  br i1 %150, label %126, label %202

151:                                              ; preds = %90
  br i1 %99, label %202, label %152

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"struct.OT::contour_point_vector_t", %"struct.OT::contour_point_vector_t"* %1, i64 0, i32 0, i32 2
  br label %154

154:                                              ; preds = %163, %152
  %155 = phi i32 [ %98, %152 ], [ %176, %163 ]
  %156 = phi i64 [ 0, %152 ], [ %175, %163 ]
  %157 = zext i32 %155 to i64
  %158 = icmp ult i64 %156, %157
  br i1 %158, label %160, label %159, !prof !3

159:                                              ; preds = %154
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %163

160:                                              ; preds = %154
  %161 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %153, align 8
  %162 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %161, i64 %156
  br label %163

163:                                              ; preds = %160, %159
  %164 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %159 ], [ %162, %160 ]
  %165 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %164, i64 0, i32 1
  %166 = load float, float* %165, align 4
  %167 = fmul float %91, %166
  %168 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %164, i64 0, i32 2
  %169 = load float, float* %168, align 4
  %170 = fmul float %93, %169
  %171 = fadd float %167, %170
  %172 = fmul float %92, %166
  %173 = fmul float %94, %169
  %174 = fadd float %172, %173
  store float %174, float* %168, align 4
  store float %171, float* %165, align 4
  %175 = add nuw nsw i64 %156, 1
  %176 = load i32, i32* %97, align 4
  %177 = zext i32 %176 to i64
  %178 = icmp ult i64 %175, %177
  br i1 %178, label %154, label %179

179:                                              ; preds = %163
  %180 = icmp eq i32 %176, 0
  br i1 %180, label %202, label %181

181:                                              ; preds = %179, %190
  %182 = phi i32 [ %199, %190 ], [ %176, %179 ]
  %183 = phi i64 [ %198, %190 ], [ 0, %179 ]
  %184 = zext i32 %182 to i64
  %185 = icmp ult i64 %183, %184
  br i1 %185, label %187, label %186, !prof !3

186:                                              ; preds = %181
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #10
  br label %190

187:                                              ; preds = %181
  %188 = load %"struct.OT::contour_point_t"*, %"struct.OT::contour_point_t"** %153, align 8
  %189 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %188, i64 %183
  br label %190

190:                                              ; preds = %187, %186
  %191 = phi %"struct.OT::contour_point_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::contour_point_t"*), %186 ], [ %189, %187 ]
  %192 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %191, i64 0, i32 1
  %193 = load float, float* %192, align 4
  %194 = fadd float %193, %33
  store float %194, float* %192, align 4
  %195 = getelementptr inbounds %"struct.OT::contour_point_t", %"struct.OT::contour_point_t"* %191, i64 0, i32 2
  %196 = load float, float* %195, align 4
  %197 = fadd float %196, %34
  store float %197, float* %195, align 4
  %198 = add nuw nsw i64 %183, 1
  %199 = load i32, i32* %97, align 4
  %200 = zext i32 %199 to i64
  %201 = icmp ult i64 %198, %200
  br i1 %201, label %181, label %202

202:                                              ; preds = %190, %135, %87, %151, %100, %179, %124
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT18GlyphVariationData18get_tuple_iteratorE10hb_array_tIKcEjR11hb_vector_tIjEPNS0_16tuple_iterator_tE(i8*, i64, i32, %struct.hb_vector_t.39* dereferenceable(16), %"struct.OT::GlyphVariationData::tuple_iterator_t"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.OT::IntType.6"*, align 8
  %7 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 4, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 4, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 %1, i64* %9, align 8
  %10 = trunc i64 %1 to i32
  %11 = icmp ult i32 %10, 4
  %12 = bitcast i8* %0 to %"struct.OT::GlyphVariationData"*
  %13 = select i1 %11, %"struct.OT::GlyphVariationData"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::GlyphVariationData"*), %"struct.OT::GlyphVariationData"* %12
  %14 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 0
  store %"struct.OT::GlyphVariationData"* %13, %"struct.OT::GlyphVariationData"** %14, align 8
  %15 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 1
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 2
  store i32 %2, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.OT::GlyphVariationData", %"struct.OT::GlyphVariationData"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %18 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 5
  %19 = bitcast %"struct.OT::TupleVariationHeader"** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 3
  store i32 0, i32* %20, align 8
  %21 = bitcast %"struct.OT::GlyphVariationData"* %13 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = trunc i16 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"struct.OT::GlyphVariationData", %"struct.OT::GlyphVariationData"* %13, i64 0, i32 1
  %27 = bitcast %"struct.OT::OffsetTo.321"* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = icmp eq i16 %28, 0
  %30 = tail call i16 @llvm.bswap.i16(i16 %28) #10
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds %"struct.OT::GlyphVariationData", %"struct.OT::GlyphVariationData"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %31
  %33 = bitcast i8* %32 to %"struct.OT::IntType.6"*
  %34 = select i1 %29, %"struct.OT::IntType.6"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::IntType.6"*), %"struct.OT::IntType.6"* %33, !prof !2
  %35 = bitcast %"struct.OT::IntType.6"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  store %"struct.OT::IntType.6"* %34, %"struct.OT::IntType.6"** %6, align 8
  %36 = getelementptr inbounds %"struct.OT::GlyphVariationData::tuple_iterator_t", %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4, i64 0, i32 4
  %37 = call zeroext i1 @_ZN2OT18GlyphVariationData13unpack_pointsERPKNS_7IntTypeIhLj1EEER11hb_vector_tIjERK10hb_array_tIKcE(%"struct.OT::IntType.6"** nonnull dereferenceable(8) %6, %struct.hb_vector_t.39* dereferenceable(16) %3, %struct.hb_array_t.90* dereferenceable(16) %36) #10
  br i1 %37, label %38, label %48

38:                                               ; preds = %25
  %39 = bitcast %"struct.OT::IntType.6"** %6 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint %"struct.OT::IntType.6"* %34 to i64
  %42 = sub i64 %40, %41
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  %44 = load i32, i32* %15, align 8
  %45 = bitcast %"struct.OT::GlyphVariationData::tuple_iterator_t"* %4 to i16**
  %46 = load i16*, i16** %45, align 8
  %47 = load i16, i16* %46, align 1
  br label %49

48:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %95

49:                                               ; preds = %5, %38
  %50 = phi i16 [ %47, %38 ], [ %22, %5 ]
  %51 = phi i32 [ %44, %38 ], [ 0, %5 ]
  %52 = and i16 %50, -241
  %53 = call i16 @llvm.bswap.i16(i16 %52) #10
  %54 = zext i16 %53 to i32
  %55 = icmp ult i32 %51, %54
  br i1 %55, label %56, label %95

56:                                               ; preds = %49
  %57 = load %"struct.OT::TupleVariationHeader"*, %"struct.OT::TupleVariationHeader"** %18, align 8
  %58 = load i8*, i8** %7, align 8
  %59 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %57, i64 0, i32 0, i32 0, i32 0, i64 0
  %60 = icmp ugt i8* %58, %59
  br i1 %60, label %95, label %61

61:                                               ; preds = %56
  %62 = load i32, i32* %8, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %58, i64 %63
  %65 = icmp ugt i8* %59, %64
  br i1 %65, label %95, label %66

66:                                               ; preds = %61
  %67 = ptrtoint i8* %64 to i64
  %68 = ptrtoint %"struct.OT::TupleVariationHeader"* %57 to i64
  %69 = sub i64 %67, %68
  %70 = trunc i64 %69 to i32
  %71 = icmp ugt i32 %70, 3
  br i1 %71, label %72, label %95

72:                                               ; preds = %66
  %73 = bitcast %"struct.OT::TupleVariationHeader"* %57 to i16*
  %74 = load i16, i16* %73, align 1
  %75 = call i16 @llvm.bswap.i16(i16 %74) #10
  %76 = zext i16 %75 to i32
  %77 = load i32, i32* %16, align 4
  %78 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %57, i64 0, i32 1, i32 0
  %79 = bitcast %"struct.OT::IntType"* %78 to i16*
  %80 = load i16, i16* %79, align 1
  %81 = lshr i16 %80, 7
  %82 = and i16 %81, 1
  %83 = lshr i16 %80, 5
  %84 = and i16 %83, 2
  %85 = or i16 %84, %82
  %86 = zext i16 %85 to i32
  %87 = shl i32 %77, 1
  %88 = mul i32 %87, %86
  %89 = add i32 %88, 4
  %90 = icmp ugt i32 %89, %76
  %91 = select i1 %90, i32 %89, i32 %76
  %92 = icmp ule i32 %91, %70
  %93 = icmp ne i32 %89, 0
  %94 = and i1 %93, %92
  br label %95

95:                                               ; preds = %72, %66, %61, %56, %49, %48
  %96 = phi i1 [ false, %48 ], [ %94, %72 ], [ false, %66 ], [ false, %61 ], [ false, %56 ], [ false, %49 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT20TupleVariationHeader16calculate_scalarEPKij10hb_array_tIKNS_7F2DOT14EE(%"struct.OT::TupleVariationHeader"*, i32*, i32, %"struct.OT::F2DOT14"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = trunc i64 %4 to i32
  %7 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"struct.OT::IntType"* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = trunc i16 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %14 = lshr i16 %9, 7
  %15 = and i16 %14, 1
  %16 = lshr i16 %9, 5
  %17 = and i16 %16, 2
  %18 = or i16 %17, %15
  %19 = zext i16 %18 to i32
  %20 = mul i32 %19, %2
  %21 = bitcast i8* %13 to %"struct.OT::F2DOT14"*
  %22 = icmp ugt i32 %20, %2
  %23 = select i1 %22, i32 %2, i32 %20
  br label %36

24:                                               ; preds = %5
  %25 = and i16 %9, -241
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #10
  %27 = zext i16 %26 to i32
  %28 = mul i32 %27, %2
  %29 = icmp ult i32 %28, %6
  br i1 %29, label %30, label %173, !prof !3

30:                                               ; preds = %24
  %31 = tail call i32 @llvm.usub.sat.i32(i32 %6, i32 %28) #10
  %32 = icmp ugt i32 %31, %2
  %33 = select i1 %32, i32 %2, i32 %31
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %3, i64 %34
  br label %36

36:                                               ; preds = %30, %12
  %37 = phi i32 [ %23, %12 ], [ %33, %30 ]
  %38 = phi %"struct.OT::F2DOT14"* [ %21, %12 ], [ %35, %30 ]
  %39 = and i16 %9, 64
  %40 = icmp ne i16 %39, 0
  br i1 %40, label %41, label %65

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.OT::TupleVariationHeader", %"struct.OT::TupleVariationHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %43 = lshr i16 %9, 7
  %44 = and i16 %43, 1
  %45 = lshr i16 %9, 5
  %46 = and i16 %45, 2
  %47 = or i16 %46, %44
  %48 = zext i16 %47 to i32
  %49 = mul i32 %48, %2
  %50 = bitcast i8* %42 to %"struct.OT::F2DOT14"*
  %51 = select i1 %11, i32 %2, i32 0
  %52 = tail call i32 @llvm.usub.sat.i32(i32 %49, i32 %51) #10
  %53 = icmp ugt i32 %52, %2
  %54 = select i1 %53, i32 %2, i32 %52
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %50, i64 %55
  %57 = add i32 %51, %2
  %58 = tail call i32 @llvm.usub.sat.i32(i32 %49, i32 %57) #10
  %59 = icmp ugt i32 %58, %2
  %60 = select i1 %59, i32 %2, i32 %58
  %61 = zext i32 %57 to i64
  %62 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %50, i64 %61
  %63 = zext i32 %54 to i64
  %64 = zext i32 %60 to i64
  br label %65

65:                                               ; preds = %41, %36
  %66 = phi %"struct.OT::F2DOT14"* [ %56, %41 ], [ null, %36 ]
  %67 = phi i64 [ %63, %41 ], [ 0, %36 ]
  %68 = phi %"struct.OT::F2DOT14"* [ %62, %41 ], [ null, %36 ]
  %69 = phi i64 [ %64, %41 ], [ 0, %36 ]
  %70 = icmp eq i32 %2, 0
  br i1 %70, label %173, label %71

71:                                               ; preds = %65
  %72 = zext i32 %37 to i64
  %73 = zext i32 %2 to i64
  br i1 %40, label %74, label %139

74:                                               ; preds = %71, %135
  %75 = phi i64 [ %137, %135 ], [ 0, %71 ]
  %76 = phi float [ %136, %135 ], [ 1.000000e+00, %71 ]
  %77 = getelementptr inbounds i32, i32* %1, i64 %75
  %78 = load i32, i32* %77, align 4
  %79 = icmp ult i64 %75, %72
  %80 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %38, i64 %75
  %81 = bitcast %"struct.OT::F2DOT14"* %80 to i16*
  %82 = select i1 %79, i16* %81, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %83 = load i16, i16* %82, align 1
  %84 = tail call i16 @llvm.bswap.i16(i16 %83) #10
  %85 = sext i16 %84 to i32
  %86 = icmp eq i16 %83, 0
  %87 = icmp eq i32 %78, %85
  %88 = or i1 %86, %87
  br i1 %88, label %135, label %89

89:                                               ; preds = %74
  %90 = icmp ugt i64 %67, %75
  %91 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %66, i64 %75
  %92 = bitcast %"struct.OT::F2DOT14"* %91 to i16*
  %93 = select i1 %90, i16* %92, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %94 = load i16, i16* %93, align 1
  %95 = tail call i16 @llvm.bswap.i16(i16 %94) #10
  %96 = sext i16 %95 to i32
  %97 = icmp ugt i64 %69, %75
  %98 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %68, i64 %75
  %99 = bitcast %"struct.OT::F2DOT14"* %98 to i16*
  %100 = select i1 %97, i16* %99, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %101 = load i16, i16* %100, align 1
  %102 = tail call i16 @llvm.bswap.i16(i16 %101) #10
  %103 = sext i16 %102 to i32
  %104 = icmp slt i16 %84, %95
  %105 = icmp slt i16 %102, %84
  %106 = or i1 %104, %105
  br i1 %106, label %135, label %107, !prof !6

107:                                              ; preds = %89
  %108 = icmp slt i16 %95, 0
  %109 = icmp sgt i16 %102, 0
  %110 = and i1 %108, %109
  br i1 %110, label %135, label %111, !prof !2

111:                                              ; preds = %107
  %112 = icmp slt i32 %78, %96
  %113 = icmp sgt i32 %78, %103
  %114 = or i1 %112, %113
  br i1 %114, label %173, label %115

115:                                              ; preds = %111
  %116 = icmp slt i32 %78, %85
  br i1 %116, label %126, label %117

117:                                              ; preds = %115
  %118 = icmp eq i16 %101, %83
  br i1 %118, label %135, label %119

119:                                              ; preds = %117
  %120 = sub nsw i32 %103, %78
  %121 = sitofp i32 %120 to float
  %122 = sub nsw i32 %103, %85
  %123 = sitofp i32 %122 to float
  %124 = fdiv float %121, %123
  %125 = fmul float %76, %124
  br label %135

126:                                              ; preds = %115
  %127 = icmp eq i16 %83, %94
  br i1 %127, label %135, label %128

128:                                              ; preds = %126
  %129 = sub nsw i32 %78, %96
  %130 = sitofp i32 %129 to float
  %131 = sub nsw i32 %85, %96
  %132 = sitofp i32 %131 to float
  %133 = fdiv float %130, %132
  %134 = fmul float %76, %133
  br label %135

135:                                              ; preds = %128, %126, %119, %117, %107, %89, %74
  %136 = phi float [ %76, %89 ], [ %76, %107 ], [ %76, %74 ], [ %76, %117 ], [ %125, %119 ], [ %76, %126 ], [ %134, %128 ]
  %137 = add nuw nsw i64 %75, 1
  %138 = icmp eq i64 %137, %73
  br i1 %138, label %173, label %74

139:                                              ; preds = %71, %169
  %140 = phi i64 [ %171, %169 ], [ 0, %71 ]
  %141 = phi float [ %170, %169 ], [ 1.000000e+00, %71 ]
  %142 = getelementptr inbounds i32, i32* %1, i64 %140
  %143 = load i32, i32* %142, align 4
  %144 = icmp ult i64 %140, %72
  %145 = getelementptr inbounds %"struct.OT::F2DOT14", %"struct.OT::F2DOT14"* %38, i64 %140
  %146 = bitcast %"struct.OT::F2DOT14"* %145 to i16*
  %147 = select i1 %144, i16* %146, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %148 = load i16, i16* %147, align 1
  %149 = tail call i16 @llvm.bswap.i16(i16 %148) #10
  %150 = sext i16 %149 to i32
  %151 = icmp eq i16 %148, 0
  %152 = icmp eq i32 %143, %150
  %153 = or i1 %151, %152
  br i1 %153, label %169, label %154

154:                                              ; preds = %139
  %155 = icmp eq i32 %143, 0
  br i1 %155, label %173, label %156

156:                                              ; preds = %154
  %157 = icmp slt i32 %150, 0
  %158 = select i1 %157, i32 %150, i32 0
  %159 = icmp slt i32 %143, %158
  br i1 %159, label %173, label %160

160:                                              ; preds = %156
  %161 = icmp sgt i32 %150, 0
  %162 = select i1 %161, i32 %150, i32 0
  %163 = icmp sgt i32 %143, %162
  br i1 %163, label %173, label %164

164:                                              ; preds = %160
  %165 = sitofp i32 %143 to float
  %166 = sitofp i16 %149 to float
  %167 = fdiv float %165, %166
  %168 = fmul float %141, %167
  br label %169

169:                                              ; preds = %139, %164
  %170 = phi float [ %168, %164 ], [ %141, %139 ]
  %171 = add nuw nsw i64 %140, 1
  %172 = icmp eq i64 %171, %73
  br i1 %172, label %173, label %139

173:                                              ; preds = %154, %156, %160, %169, %111, %135, %65, %24
  %174 = phi float [ 0.000000e+00, %24 ], [ 1.000000e+00, %65 ], [ %136, %135 ], [ 0.000000e+00, %111 ], [ %170, %169 ], [ 0.000000e+00, %154 ], [ 0.000000e+00, %156 ], [ 0.000000e+00, %160 ]
  ret float %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT18GlyphVariationData13unpack_pointsERPKNS_7IntTypeIhLj1EEER11hb_vector_tIjERK10hb_array_tIKcE(%"struct.OT::IntType.6"** dereferenceable(8), %struct.hb_vector_t.39* dereferenceable(16), %struct.hb_array_t.90* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %5 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %4, i64 0, i32 0, i32 0
  %8 = icmp ugt i8* %6, %7
  br i1 %8, label %208, label %9, !prof !7

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %6, i64 %12
  %14 = icmp ugt i8* %7, %13
  br i1 %14, label %208, label %15, !prof !7

15:                                               ; preds = %9
  %16 = ptrtoint i8* %13 to i64
  %17 = ptrtoint %"struct.OT::IntType.6"* %4 to i64
  %18 = sub i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %208, label %21, !prof !2

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %4, i64 1
  store %"struct.OT::IntType.6"* %22, %"struct.OT::IntType.6"** %0, align 8
  %23 = load i8, i8* %7, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp slt i8 %23, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %21
  %27 = load i8*, i8** %5, align 8
  %28 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %22, i64 0, i32 0, i32 0
  %29 = icmp ugt i8* %27, %28
  br i1 %29, label %208, label %30, !prof !7

30:                                               ; preds = %26
  %31 = load i32, i32* %10, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = icmp ugt i8* %28, %33
  br i1 %34, label %208, label %35, !prof !7

35:                                               ; preds = %30
  %36 = ptrtoint i8* %33 to i64
  %37 = ptrtoint %"struct.OT::IntType.6"* %22 to i64
  %38 = sub i64 %36, %37
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %208, label %41, !prof !2

41:                                               ; preds = %35
  %42 = shl nuw nsw i32 %24, 8
  %43 = and i32 %42, 32512
  %44 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %4, i64 2
  store %"struct.OT::IntType.6"* %44, %"struct.OT::IntType.6"** %0, align 8
  %45 = load i8, i8* %28, align 1
  %46 = zext i8 %45 to i32
  %47 = or i32 %43, %46
  br label %48

48:                                               ; preds = %41, %21
  %49 = phi i32 [ %47, %41 ], [ %24, %21 ]
  %50 = and i32 %49, 65535
  %51 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %90, label %54, !prof !2

54:                                               ; preds = %48
  %55 = icmp ult i32 %52, %50
  br i1 %55, label %56, label %76, !prof !2

56:                                               ; preds = %54, %56
  %57 = phi i32 [ %60, %56 ], [ %52, %54 ]
  %58 = lshr i32 %57, 1
  %59 = add i32 %57, 8
  %60 = add i32 %59, %58
  %61 = icmp ugt i32 %60, %50
  br i1 %61, label %62, label %56

62:                                               ; preds = %56
  %63 = icmp uge i32 %60, %52
  %64 = icmp ult i32 %60, 1073741823
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %74, !prof !21

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 2
  %68 = bitcast i32** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = zext i32 %60 to i64
  %71 = shl nuw nsw i64 %70, 2
  %72 = tail call i8* @realloc(i8* %69, i64 %71) #10
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %66, %62
  store i32 -1, i32* %51, align 8
  br label %90

75:                                               ; preds = %66
  store i8* %72, i8** %68, align 8
  store i32 %60, i32* %51, align 8
  br label %76

76:                                               ; preds = %75, %54
  %77 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp ugt i32 %50, %78
  br i1 %79, label %80, label %89

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 2
  %82 = load i32*, i32** %81, align 8
  %83 = zext i32 %78 to i64
  %84 = getelementptr inbounds i32, i32* %82, i64 %83
  %85 = bitcast i32* %84 to i8*
  %86 = sub i32 %50, %78
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 %88, i1 false) #10
  br label %89

89:                                               ; preds = %80, %76
  store i32 %50, i32* %77, align 4
  br label %90

90:                                               ; preds = %48, %74, %89
  %91 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 1
  %92 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  %93 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %1, i64 0, i32 2
  br label %94

94:                                               ; preds = %203, %90
  %95 = phi i32 [ 0, %90 ], [ %204, %203 ]
  %96 = phi i16 [ 0, %90 ], [ %205, %203 ]
  %97 = zext i16 %96 to i32
  %98 = icmp ugt i32 %50, %97
  br i1 %98, label %99, label %208

99:                                               ; preds = %94
  %100 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %101 = load i8*, i8** %5, align 8
  %102 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %100, i64 0, i32 0, i32 0
  %103 = icmp ugt i8* %101, %102
  br i1 %103, label %208, label %104, !prof !7

104:                                              ; preds = %99
  %105 = load i32, i32* %10, align 8
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  %108 = icmp ugt i8* %102, %107
  br i1 %108, label %208, label %109, !prof !7

109:                                              ; preds = %104
  %110 = ptrtoint i8* %107 to i64
  %111 = ptrtoint %"struct.OT::IntType.6"* %100 to i64
  %112 = sub i64 %110, %111
  %113 = trunc i64 %112 to i32
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %208, label %115, !prof !2

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %100, i64 1
  store %"struct.OT::IntType.6"* %116, %"struct.OT::IntType.6"** %0, align 8
  %117 = load i8, i8* %102, align 1
  %118 = and i8 %117, 127
  %119 = zext i8 %118 to i16
  %120 = icmp slt i8 %117, 0
  %121 = add nuw nsw i16 %119, 1
  br i1 %120, label %122, label %164

122:                                              ; preds = %115, %157
  %123 = phi %"struct.OT::IntType.6"* [ %160, %157 ], [ %116, %115 ]
  %124 = phi i16 [ %161, %157 ], [ 0, %115 ]
  %125 = phi i16 [ %162, %157 ], [ %96, %115 ]
  %126 = phi i32 [ %149, %157 ], [ %95, %115 ]
  %127 = zext i16 %125 to i32
  %128 = icmp ugt i32 %50, %127
  br i1 %128, label %129, label %203

129:                                              ; preds = %122
  %130 = load i8*, i8** %5, align 8
  %131 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %123, i64 0, i32 0, i32 0
  %132 = icmp ugt i8* %130, %131
  br i1 %132, label %208, label %133, !prof !7

133:                                              ; preds = %129
  %134 = load i32, i32* %10, align 8
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %130, i64 %135
  %137 = icmp ugt i8* %131, %136
  br i1 %137, label %208, label %138, !prof !7

138:                                              ; preds = %133
  %139 = ptrtoint i8* %136 to i64
  %140 = ptrtoint %"struct.OT::IntType.6"* %123 to i64
  %141 = sub i64 %139, %140
  %142 = trunc i64 %141 to i32
  %143 = icmp ugt i32 %142, 1
  br i1 %143, label %144, label %208, !prof !3

144:                                              ; preds = %138
  %145 = bitcast %"struct.OT::IntType.6"* %123 to i16*
  %146 = load i16, i16* %145, align 1
  %147 = tail call i16 @llvm.bswap.i16(i16 %146) #10
  %148 = zext i16 %147 to i32
  %149 = add i32 %126, %148
  %150 = load i32, i32* %91, align 4
  %151 = icmp ugt i32 %150, %127
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %144
  store i32 %92, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %157

153:                                              ; preds = %144
  %154 = load i32*, i32** %93, align 8
  %155 = zext i16 %125 to i64
  %156 = getelementptr inbounds i32, i32* %154, i64 %155
  br label %157

157:                                              ; preds = %152, %153
  %158 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %152 ], [ %156, %153 ]
  store i32 %149, i32* %158, align 4
  %159 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %160 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %159, i64 2
  store %"struct.OT::IntType.6"* %160, %"struct.OT::IntType.6"** %0, align 8
  %161 = add nuw nsw i16 %124, 1
  %162 = add i16 %125, 1
  %163 = icmp eq i16 %161, %121
  br i1 %163, label %203, label %122

164:                                              ; preds = %115, %198
  %165 = phi i16 [ %200, %198 ], [ 0, %115 ]
  %166 = phi i16 [ %201, %198 ], [ %96, %115 ]
  %167 = phi i32 [ %190, %198 ], [ %95, %115 ]
  %168 = zext i16 %166 to i32
  %169 = icmp ugt i32 %50, %168
  br i1 %169, label %170, label %203

170:                                              ; preds = %164
  %171 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %172 = load i8*, i8** %5, align 8
  %173 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %171, i64 0, i32 0, i32 0
  %174 = icmp ugt i8* %172, %173
  br i1 %174, label %208, label %175, !prof !7

175:                                              ; preds = %170
  %176 = load i32, i32* %10, align 8
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %172, i64 %177
  %179 = icmp ugt i8* %173, %178
  br i1 %179, label %208, label %180, !prof !7

180:                                              ; preds = %175
  %181 = ptrtoint i8* %178 to i64
  %182 = ptrtoint %"struct.OT::IntType.6"* %171 to i64
  %183 = sub i64 %181, %182
  %184 = trunc i64 %183 to i32
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %208, label %186, !prof !2

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %171, i64 1
  store %"struct.OT::IntType.6"* %187, %"struct.OT::IntType.6"** %0, align 8
  %188 = load i8, i8* %173, align 1
  %189 = zext i8 %188 to i32
  %190 = add i32 %167, %189
  %191 = load i32, i32* %91, align 4
  %192 = icmp ugt i32 %191, %168
  br i1 %192, label %194, label %193, !prof !3

193:                                              ; preds = %186
  store i32 %92, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %198

194:                                              ; preds = %186
  %195 = load i32*, i32** %93, align 8
  %196 = zext i16 %166 to i64
  %197 = getelementptr inbounds i32, i32* %195, i64 %196
  br label %198

198:                                              ; preds = %193, %194
  %199 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %193 ], [ %197, %194 ]
  store i32 %190, i32* %199, align 4
  %200 = add nuw nsw i16 %165, 1
  %201 = add i16 %166, 1
  %202 = icmp eq i16 %200, %121
  br i1 %202, label %203, label %164

203:                                              ; preds = %164, %198, %122, %157
  %204 = phi i32 [ %149, %157 ], [ %126, %122 ], [ %190, %198 ], [ %167, %164 ]
  %205 = phi i16 [ %162, %157 ], [ %125, %122 ], [ %201, %198 ], [ %166, %164 ]
  %206 = phi i16 [ %121, %157 ], [ %124, %122 ], [ %121, %198 ], [ %165, %164 ]
  %207 = icmp ugt i16 %206, %119
  br i1 %207, label %94, label %208

208:                                              ; preds = %109, %99, %104, %94, %203, %180, %170, %175, %129, %133, %138, %35, %15, %26, %30, %3, %9
  %209 = phi i1 [ false, %15 ], [ false, %35 ], [ false, %9 ], [ false, %3 ], [ false, %30 ], [ false, %26 ], [ false, %138 ], [ false, %133 ], [ false, %129 ], [ false, %175 ], [ false, %170 ], [ false, %180 ], [ false, %99 ], [ false, %104 ], [ true, %94 ], [ false, %109 ], [ false, %203 ]
  ret i1 %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT18GlyphVariationData13unpack_deltasERPKNS_7IntTypeIhLj1EEER11hb_vector_tIiERK10hb_array_tIKcE(%"struct.OT::IntType.6"** dereferenceable(8), %struct.hb_vector_t.336* dereferenceable(16), %struct.hb_array_t.90* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %2, i64 0, i32 0
  %7 = getelementptr inbounds %struct.hb_array_t.90, %struct.hb_array_t.90* %2, i64 0, i32 1
  %8 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  %9 = getelementptr inbounds %struct.hb_vector_t.336, %struct.hb_vector_t.336* %1, i64 0, i32 2
  %10 = zext i32 %5 to i64
  br label %11

11:                                               ; preds = %141, %3
  %12 = phi i32 [ 0, %3 ], [ %144, %141 ]
  %13 = icmp ult i32 %12, %5
  br i1 %13, label %14, label %146

14:                                               ; preds = %11
  %15 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %15, i64 0, i32 0, i32 0
  %18 = icmp ugt i8* %16, %17
  br i1 %18, label %146, label %19, !prof !7

19:                                               ; preds = %14
  %20 = load i32, i32* %7, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %16, i64 %21
  %23 = icmp ugt i8* %17, %22
  br i1 %23, label %146, label %24, !prof !7

24:                                               ; preds = %19
  %25 = ptrtoint i8* %22 to i64
  %26 = ptrtoint %"struct.OT::IntType.6"* %15 to i64
  %27 = sub i64 %25, %26
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %146, label %30, !prof !2

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %15, i64 1
  store %"struct.OT::IntType.6"* %31, %"struct.OT::IntType.6"** %0, align 8
  %32 = load i8, i8* %17, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 63
  %35 = icmp slt i8 %32, 0
  br i1 %35, label %36, label %55

36:                                               ; preds = %30
  %37 = zext i32 %12 to i64
  br label %38

38:                                               ; preds = %36, %48
  %39 = phi i64 [ %37, %36 ], [ %51, %48 ]
  %40 = phi i32 [ 0, %36 ], [ %50, %48 ]
  %41 = load i32, i32* %4, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %39, %42
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %38
  store i32 %8, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %48

45:                                               ; preds = %38
  %46 = load i32*, i32** %9, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %39
  br label %48

48:                                               ; preds = %44, %45
  %49 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %44 ], [ %47, %45 ]
  store i32 0, i32* %49, align 4
  %50 = add nuw nsw i32 %40, 1
  %51 = add nuw nsw i64 %39, 1
  %52 = icmp ult i32 %40, %34
  %53 = icmp ult i64 %51, %10
  %54 = and i1 %53, %52
  br i1 %54, label %38, label %141

55:                                               ; preds = %30
  %56 = and i32 %33, 64
  %57 = icmp eq i32 %56, 0
  %58 = zext i32 %12 to i64
  br i1 %57, label %59, label %63

59:                                               ; preds = %55
  %60 = load i8*, i8** %6, align 8
  %61 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %31, i64 0, i32 0, i32 0
  %62 = icmp ugt i8* %60, %61
  br i1 %62, label %146, label %102, !prof !7

63:                                               ; preds = %55, %93
  %64 = phi %"struct.OT::IntType.6"* [ %96, %93 ], [ %31, %55 ]
  %65 = phi i64 [ %98, %93 ], [ %58, %55 ]
  %66 = phi i32 [ %97, %93 ], [ 0, %55 ]
  %67 = bitcast %"struct.OT::IntType.6"* %64 to i16*
  %68 = load i8*, i8** %6, align 8
  %69 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %64, i64 0, i32 0, i32 0
  %70 = icmp ugt i8* %68, %69
  br i1 %70, label %146, label %71, !prof !7

71:                                               ; preds = %63
  %72 = load i32, i32* %7, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  %75 = icmp ugt i8* %69, %74
  br i1 %75, label %146, label %76, !prof !7

76:                                               ; preds = %71
  %77 = ptrtoint i8* %74 to i64
  %78 = ptrtoint %"struct.OT::IntType.6"* %64 to i64
  %79 = sub i64 %77, %78
  %80 = trunc i64 %79 to i32
  %81 = icmp ugt i32 %80, 1
  br i1 %81, label %82, label %146, !prof !3

82:                                               ; preds = %76
  %83 = load i16, i16* %67, align 1
  %84 = tail call i16 @llvm.bswap.i16(i16 %83) #10
  %85 = sext i16 %84 to i32
  %86 = load i32, i32* %4, align 4
  %87 = zext i32 %86 to i64
  %88 = icmp ult i64 %65, %87
  br i1 %88, label %90, label %89, !prof !3

89:                                               ; preds = %82
  store i32 %8, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %93

90:                                               ; preds = %82
  %91 = load i32*, i32** %9, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 %65
  br label %93

93:                                               ; preds = %89, %90
  %94 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %89 ], [ %92, %90 ]
  store i32 %85, i32* %94, align 4
  %95 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %96 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %95, i64 2
  store %"struct.OT::IntType.6"* %96, %"struct.OT::IntType.6"** %0, align 8
  %97 = add nuw nsw i32 %66, 1
  %98 = add nuw nsw i64 %65, 1
  %99 = icmp ult i32 %66, %34
  %100 = icmp ult i64 %98, %10
  %101 = and i1 %100, %99
  br i1 %101, label %63, label %141

102:                                              ; preds = %59, %136
  %103 = phi i8* [ %139, %136 ], [ %61, %59 ]
  %104 = phi i8* [ %138, %136 ], [ %60, %59 ]
  %105 = phi i32 [ %131, %136 ], [ 0, %59 ]
  %106 = phi i64 [ %132, %136 ], [ %58, %59 ]
  %107 = phi %"struct.OT::IntType.6"* [ %137, %136 ], [ %31, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  %111 = icmp ugt i8* %103, %110
  br i1 %111, label %146, label %112, !prof !7

112:                                              ; preds = %102
  %113 = ptrtoint i8* %110 to i64
  %114 = ptrtoint %"struct.OT::IntType.6"* %107 to i64
  %115 = sub i64 %113, %114
  %116 = trunc i64 %115 to i32
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %146, label %118, !prof !2

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %107, i64 1
  store %"struct.OT::IntType.6"* %119, %"struct.OT::IntType.6"** %0, align 8
  %120 = load i8, i8* %103, align 1
  %121 = sext i8 %120 to i32
  %122 = load i32, i32* %4, align 4
  %123 = zext i32 %122 to i64
  %124 = icmp ult i64 %106, %123
  br i1 %124, label %126, label %125, !prof !3

125:                                              ; preds = %118
  store i32 %8, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %129

126:                                              ; preds = %118
  %127 = load i32*, i32** %9, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 %106
  br label %129

129:                                              ; preds = %125, %126
  %130 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %125 ], [ %128, %126 ]
  store i32 %121, i32* %130, align 4
  %131 = add nuw nsw i32 %105, 1
  %132 = add nuw nsw i64 %106, 1
  %133 = icmp ult i32 %105, %34
  %134 = icmp ult i64 %132, %10
  %135 = and i1 %134, %133
  br i1 %135, label %136, label %141

136:                                              ; preds = %129
  %137 = load %"struct.OT::IntType.6"*, %"struct.OT::IntType.6"** %0, align 8
  %138 = load i8*, i8** %6, align 8
  %139 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %137, i64 0, i32 0, i32 0
  %140 = icmp ugt i8* %138, %139
  br i1 %140, label %146, label %102, !prof !7

141:                                              ; preds = %93, %129, %48
  %142 = phi i64 [ %51, %48 ], [ %132, %129 ], [ %98, %93 ]
  %143 = phi i32 [ %50, %48 ], [ %131, %129 ], [ %97, %93 ]
  %144 = trunc i64 %142 to i32
  %145 = icmp ugt i32 %143, %34
  br i1 %145, label %11, label %146

146:                                              ; preds = %24, %14, %19, %11, %141, %59, %63, %71, %76, %102, %136, %112
  %147 = phi i1 [ false, %112 ], [ false, %136 ], [ false, %102 ], [ false, %76 ], [ false, %71 ], [ false, %63 ], [ false, %14 ], [ false, %19 ], [ true, %11 ], [ false, %24 ], [ false, %141 ], [ false, %59 ]
  ret i1 %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4glyf13accelerator_t19points_aggregator_t16contour_bounds_t11get_extentsEP9hb_font_tP18hb_glyph_extents_t(%"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"*, %struct.hb_font_t*, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"* %0, i64 0, i32 2
  %7 = load float, float* %6, align 4
  %8 = fcmp ult float %5, %7
  br i1 %8, label %9, label %15, !prof !5

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t", %"struct.OT::glyf::accelerator_t::points_aggregator_t::contour_bounds_t"* %0, i64 0, i32 3
  %13 = load float, float* %12, align 4
  %14 = fcmp ult float %11, %13
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %9, %3
  %16 = bitcast %struct.hb_glyph_extents_t* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false)
  br label %98

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = sitofp i32 %19 to float
  %21 = fmul float %5, %20
  %22 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %23 = load %struct.hb_face_t*, %struct.hb_face_t** %22, align 8
  %24 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %23, i64 0, i32 5, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %17
  %28 = tail call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %23) #10
  br label %29

29:                                               ; preds = %17, %27
  %30 = phi i32 [ %28, %27 ], [ %25, %17 ]
  %31 = uitofp i32 %30 to float
  %32 = fdiv float %21, %31
  %33 = fadd float %32, 5.000000e-01
  %34 = tail call float @llvm.floor.f32(float %33) #10
  %35 = fptosi float %34 to i32
  %36 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = load float, float* %6, align 4
  %38 = load i32, i32* %18, align 8
  %39 = sitofp i32 %38 to float
  %40 = fmul float %37, %39
  %41 = load %struct.hb_face_t*, %struct.hb_face_t** %22, align 8
  %42 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %41, i64 0, i32 5, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48, !prof !2

45:                                               ; preds = %29
  %46 = tail call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %41) #10
  %47 = load i32, i32* %36, align 4
  br label %48

48:                                               ; preds = %29, %45
  %49 = phi i32 [ %47, %45 ], [ %35, %29 ]
  %50 = phi i32 [ %46, %45 ], [ %43, %29 ]
  %51 = uitofp i32 %50 to float
  %52 = fdiv float %40, %51
  %53 = fadd float %52, 5.000000e-01
  %54 = tail call float @llvm.floor.f32(float %53) #10
  %55 = fptosi float %54 to i32
  %56 = sub nsw i32 %55, %49
  %57 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 2
  store i32 %56, i32* %57, align 4
  %58 = load float, float* %12, align 4
  %59 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = sitofp i32 %60 to float
  %62 = fmul float %58, %61
  %63 = load %struct.hb_face_t*, %struct.hb_face_t** %22, align 8
  %64 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %63, i64 0, i32 5, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %48
  %68 = tail call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %63) #10
  br label %69

69:                                               ; preds = %48, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %48 ]
  %71 = uitofp i32 %70 to float
  %72 = fdiv float %62, %71
  %73 = fadd float %72, 5.000000e-01
  %74 = tail call float @llvm.floor.f32(float %73) #10
  %75 = fptosi float %74 to i32
  %76 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 1
  store i32 %75, i32* %76, align 4
  %77 = load float, float* %10, align 4
  %78 = load i32, i32* %59, align 4
  %79 = sitofp i32 %78 to float
  %80 = fmul float %77, %79
  %81 = load %struct.hb_face_t*, %struct.hb_face_t** %22, align 8
  %82 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %81, i64 0, i32 5, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88, !prof !2

85:                                               ; preds = %69
  %86 = tail call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %81) #10
  %87 = load i32, i32* %76, align 4
  br label %88

88:                                               ; preds = %69, %85
  %89 = phi i32 [ %87, %85 ], [ %75, %69 ]
  %90 = phi i32 [ %86, %85 ], [ %83, %69 ]
  %91 = uitofp i32 %90 to float
  %92 = fdiv float %80, %91
  %93 = fadd float %92, 5.000000e-01
  %94 = tail call float @llvm.floor.f32(float %93) #10
  %95 = fptosi float %94 to i32
  %96 = sub nsw i32 %95, %89
  %97 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %2, i64 0, i32 3
  store i32 %96, i32* %97, align 4
  br label %98

98:                                               ; preds = %88, %15
  ret void
}

declare hidden i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT4glyf5Glyph11SimpleGlyph12trim_paddingEv(%"struct.OT::glyf::Glyph"* noalias sret, %"struct.OT::glyf::Glyph::SimpleGlyph"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %1, i64 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.OT::glyf::Glyph::SimpleGlyph", %"struct.OT::glyf::Glyph::SimpleGlyph"* %1, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = bitcast %"struct.OT::glyf::Glyph::SimpleGlyph"* %1 to i16**
  %10 = load i16*, i16** %9, align 8
  %11 = load i16, i16* %10, align 1
  %12 = tail call i16 @llvm.bswap.i16(i16 %11) #10
  %13 = sext i16 %12 to i64
  %14 = shl nsw i64 %13, 1
  %15 = add nsw i64 %14, 10
  %16 = and i64 %15, 4294967294
  %17 = getelementptr inbounds i8, i8* %4, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  %19 = icmp ult i8* %18, %8
  br i1 %19, label %35, label %20, !prof !3

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %22 = bitcast %"struct.OT::glyf::Glyph"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  store i32 -1, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %24 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %23 to i16**
  store i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16** %24, align 8
  %25 = load i16, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), align 16
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %28, align 8
  br label %154

29:                                               ; preds = %20
  %30 = tail call i16 @llvm.bswap.i16(i16 %25) #10
  %31 = icmp sgt i16 %30, 0
  %32 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %31, label %33, label %34

33:                                               ; preds = %29
  store i32 1, i32* %32, align 8
  br label %154

34:                                               ; preds = %29
  store i32 2, i32* %32, align 8
  br label %154

35:                                               ; preds = %2
  %36 = getelementptr inbounds i8, i8* %17, i64 -2
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 1
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #10
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %40, 1
  %42 = bitcast i8* %17 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #10
  %45 = zext i16 %44 to i64
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr inbounds i8, i8* %17, i64 %46
  br label %48

48:                                               ; preds = %98, %35
  %49 = phi i32 [ 0, %35 ], [ %102, %98 ]
  %50 = phi i32 [ 0, %35 ], [ %103, %98 ]
  %51 = phi i8* [ %47, %35 ], [ %83, %98 ]
  %52 = icmp ult i8* %51, %8
  br i1 %52, label %53, label %105

53:                                               ; preds = %48
  %54 = load i8, i8* %51, align 1
  %55 = getelementptr inbounds i8, i8* %51, i64 1
  %56 = zext i8 %54 to i32
  %57 = and i32 %56, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %81, label %59

59:                                               ; preds = %53
  %60 = icmp ult i8* %55, %8
  br i1 %60, label %76, label %61, !prof !3

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %63 = bitcast %"struct.OT::glyf::Glyph"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false)
  store i32 -1, i32* %62, align 8
  %64 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %65 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %64 to i16**
  store i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16** %65, align 8
  %66 = load i16, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), align 16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %69, align 8
  br label %154

70:                                               ; preds = %61
  %71 = tail call i16 @llvm.bswap.i16(i16 %66) #10
  %72 = icmp sgt i16 %71, 0
  %73 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %72, label %74, label %75

74:                                               ; preds = %70
  store i32 1, i32* %73, align 8
  br label %154

75:                                               ; preds = %70
  store i32 2, i32* %73, align 8
  br label %154

76:                                               ; preds = %59
  %77 = load i8, i8* %55, align 1
  %78 = sext i8 %77 to i32
  %79 = add nsw i32 %78, 1
  %80 = getelementptr inbounds i8, i8* %51, i64 2
  br label %81

81:                                               ; preds = %53, %76
  %82 = phi i32 [ %79, %76 ], [ 1, %53 ]
  %83 = phi i8* [ %80, %76 ], [ %55, %53 ]
  %84 = and i32 %56, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = lshr i32 %56, 3
  %88 = and i32 %87, 2
  %89 = xor i32 %88, 2
  br label %90

90:                                               ; preds = %86, %81
  %91 = phi i32 [ 1, %81 ], [ %89, %86 ]
  %92 = and i32 %56, 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = lshr i32 %56, 4
  %96 = and i32 %95, 2
  %97 = xor i32 %96, 2
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i32 [ 1, %90 ], [ %97, %94 ]
  %100 = add nuw nsw i32 %99, %91
  %101 = mul nsw i32 %100, %82
  %102 = add i32 %101, %49
  %103 = add i32 %82, %50
  %104 = icmp ugt i32 %103, %40
  br i1 %104, label %105, label %48

105:                                              ; preds = %98, %48
  %106 = phi i32 [ %49, %48 ], [ %102, %98 ]
  %107 = phi i32 [ %50, %48 ], [ %103, %98 ]
  %108 = phi i8* [ %51, %48 ], [ %83, %98 ]
  %109 = icmp eq i32 %107, %41
  br i1 %109, label %125, label %110, !prof !3

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  %112 = bitcast %"struct.OT::glyf::Glyph"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false)
  store i32 -1, i32* %111, align 8
  %113 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %114 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %113 to i16**
  store i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16** %114, align 8
  %115 = load i16, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), align 16
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %117, label %119, !prof !2

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %118, align 8
  br label %154

119:                                              ; preds = %110
  %120 = tail call i16 @llvm.bswap.i16(i16 %115) #10
  %121 = icmp sgt i16 %120, 0
  %122 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %121, label %123, label %124

123:                                              ; preds = %119
  store i32 1, i32* %122, align 8
  br label %154

124:                                              ; preds = %119
  store i32 2, i32* %122, align 8
  br label %154

125:                                              ; preds = %105
  %126 = add i32 %106, %6
  %127 = ptrtoint i8* %8 to i64
  %128 = ptrtoint i8* %108 to i64
  %129 = sub i64 %128, %127
  %130 = trunc i64 %129 to i32
  %131 = add i32 %126, %130
  %132 = icmp ugt i32 %6, %131
  %133 = select i1 %132, i32 %131, i32 %6
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 0
  store i8* %4, i8** %135, align 8
  %136 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 0, i32 1
  %137 = bitcast i32* %136 to i64*
  store i64 %134, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 1
  store i32 -1, i32* %138, align 8
  %139 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 3
  %140 = icmp ult i32 %133, 10
  %141 = bitcast i8* %4 to i16*
  %142 = select i1 %140, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16* %141
  %143 = bitcast %"struct.OT::glyf::Glyph::GlyphHeader"** %139 to i16**
  store i16* %142, i16** %143, align 8
  %144 = load i16, i16* %142, align 1
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %146, label %148, !prof !2

146:                                              ; preds = %125
  %147 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  store i32 0, i32* %147, align 8
  br label %154

148:                                              ; preds = %125
  %149 = tail call i16 @llvm.bswap.i16(i16 %144) #10
  %150 = icmp sgt i16 %149, 0
  %151 = getelementptr inbounds %"struct.OT::glyf::Glyph", %"struct.OT::glyf::Glyph"* %0, i64 0, i32 4
  br i1 %150, label %152, label %153

152:                                              ; preds = %148
  store i32 1, i32* %151, align 8
  br label %154

153:                                              ; preds = %148
  store i32 2, i32* %151, align 8
  br label %154

154:                                              ; preds = %75, %74, %68, %153, %152, %146, %124, %123, %117, %34, %33, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4glyf5Glyph11GlyphHeader11get_extentsEP9hb_font_tRKNS0_13accelerator_tEjP18hb_glyph_extents_t(%"struct.OT::glyf::Glyph::GlyphHeader"*, %struct.hb_font_t*, %"struct.OT::glyf::accelerator_t"* dereferenceable(56), i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %2, i64 0, i32 1
  %7 = bitcast %"struct.OT::hmtx_accelerator_t"** %6 to %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"**
  %8 = load %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"*, %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"** %7, align 8
  %9 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %10, %3
  br i1 %11, label %12, label %22

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %8, i64 0, i32 3, i32 0, i32 0
  %14 = load %struct.hb_blob_t*, %struct.hb_blob_t** %13, align 8
  %15 = icmp eq %struct.hb_blob_t* %14, null
  %16 = select i1 %15, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %14
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %16, i64 0, i32 1
  %18 = bitcast i8** %17 to %"struct.OT::hmtxvmtx"**
  %19 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %18, align 8
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %19, i64 0, i32 0, i32 0, i64 %20, i32 1
  br label %40

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %8, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %24, %3
  br i1 %25, label %26, label %46, !prof !3

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t", %"struct.OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t"* %8, i64 0, i32 3, i32 0, i32 0
  %28 = load %struct.hb_blob_t*, %struct.hb_blob_t** %27, align 8
  %29 = icmp eq %struct.hb_blob_t* %28, null
  %30 = select i1 %29, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %28
  %31 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %30, i64 0, i32 1
  %32 = bitcast i8** %31 to %"struct.OT::hmtxvmtx"**
  %33 = load %"struct.OT::hmtxvmtx"*, %"struct.OT::hmtxvmtx"** %32, align 8
  %34 = zext i32 %10 to i64
  %35 = getelementptr inbounds %"struct.OT::hmtxvmtx", %"struct.OT::hmtxvmtx"* %33, i64 0, i32 0, i32 0, i64 %34
  %36 = bitcast %"struct.OT::LongMetric"* %35 to %"struct.OT::IntType.281"*
  %37 = sub i32 %3, %10
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.OT::IntType.281", %"struct.OT::IntType.281"* %36, i64 %38
  br label %40

40:                                               ; preds = %26, %12
  %41 = phi %"struct.OT::IntType.281"* [ %21, %12 ], [ %39, %26 ]
  %42 = bitcast %"struct.OT::IntType.281"* %41 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #10
  %45 = sext i16 %44 to i64
  br label %46

46:                                               ; preds = %40, %22
  %47 = phi i64 [ 0, %22 ], [ %45, %40 ]
  %48 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 5
  %49 = load i64, i64* %48, align 8
  %50 = mul nsw i64 %49, %47
  %51 = lshr i64 %50, 16
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %4, i64 0, i32 0
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %0, i64 0, i32 2
  %55 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %0, i64 0, i32 4
  %56 = bitcast %"struct.OT::IntType.281"* %54 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = tail call i16 @llvm.bswap.i16(i16 %57) #10
  %59 = bitcast %"struct.OT::IntType.281"* %55 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = tail call i16 @llvm.bswap.i16(i16 %60) #10
  %62 = icmp slt i16 %58, %61
  %63 = select i1 %62, %"struct.OT::IntType.281"* %55, %"struct.OT::IntType.281"* %54
  %64 = bitcast %"struct.OT::IntType.281"* %63 to i16*
  %65 = load i16, i16* %64, align 1
  %66 = tail call i16 @llvm.bswap.i16(i16 %65) #10
  %67 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 6
  %68 = load i64, i64* %67, align 8
  %69 = sext i16 %66 to i64
  %70 = mul nsw i64 %68, %69
  %71 = lshr i64 %70, 16
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %4, i64 0, i32 1
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %0, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.OT::glyf::Glyph::GlyphHeader", %"struct.OT::glyf::Glyph::GlyphHeader"* %0, i64 0, i32 3
  %76 = bitcast %"struct.OT::IntType.281"* %74 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = tail call i16 @llvm.bswap.i16(i16 %77) #10
  %79 = bitcast %"struct.OT::IntType.281"* %75 to i16*
  %80 = load i16, i16* %79, align 1
  %81 = tail call i16 @llvm.bswap.i16(i16 %80) #10
  %82 = icmp slt i16 %78, %81
  %83 = select i1 %82, %"struct.OT::IntType.281"* %75, %"struct.OT::IntType.281"* %74
  %84 = bitcast %"struct.OT::IntType.281"* %83 to i16*
  %85 = load i16, i16* %84, align 1
  %86 = tail call i16 @llvm.bswap.i16(i16 %85) #10
  %87 = icmp sgt i16 %78, %81
  %88 = select i1 %87, %"struct.OT::IntType.281"* %75, %"struct.OT::IntType.281"* %74
  %89 = bitcast %"struct.OT::IntType.281"* %88 to i16*
  %90 = load i16, i16* %89, align 1
  %91 = tail call i16 @llvm.bswap.i16(i16 %90) #10
  %92 = sub i16 %86, %91
  %93 = load i64, i64* %48, align 8
  %94 = sext i16 %92 to i64
  %95 = mul nsw i64 %93, %94
  %96 = lshr i64 %95, 16
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %4, i64 0, i32 2
  store i32 %97, i32* %98, align 4
  %99 = load i16, i16* %56, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #10
  %101 = load i16, i16* %59, align 1
  %102 = tail call i16 @llvm.bswap.i16(i16 %101) #10
  %103 = icmp sgt i16 %100, %102
  %104 = select i1 %103, %"struct.OT::IntType.281"* %55, %"struct.OT::IntType.281"* %54
  %105 = bitcast %"struct.OT::IntType.281"* %104 to i16*
  %106 = load i16, i16* %105, align 1
  %107 = tail call i16 @llvm.bswap.i16(i16 %106) #10
  %108 = icmp slt i16 %100, %102
  %109 = select i1 %108, %"struct.OT::IntType.281"* %55, %"struct.OT::IntType.281"* %54
  %110 = bitcast %"struct.OT::IntType.281"* %109 to i16*
  %111 = load i16, i16* %110, align 1
  %112 = tail call i16 @llvm.bswap.i16(i16 %111) #10
  %113 = sub i16 %107, %112
  %114 = load i64, i64* %67, align 8
  %115 = sext i16 %113 to i64
  %116 = mul nsw i64 %114, %115
  %117 = lshr i64 %116, 16
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %4, i64 0, i32 3
  store i32 %118, i32* %119, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT8HVARVVAR20get_side_bearing_varEjPKij(%"struct.OT::HVARVVAR"*, i32, i32*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %207, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 %27, 24
  %29 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 16
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %33, %37
  %39 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %38, %41
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %207, label %44

44:                                               ; preds = %24
  %45 = zext i8 %6 to i64
  %46 = shl nuw nsw i64 %45, 24
  %47 = zext i8 %10 to i64
  %48 = shl nuw nsw i64 %47, 16
  %49 = or i64 %48, %46
  %50 = zext i8 %15 to i64
  %51 = shl nuw nsw i64 %50, 8
  %52 = or i64 %49, %51
  %53 = zext i8 %20 to i64
  %54 = or i64 %52, %53
  %55 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %54
  %56 = getelementptr inbounds i8, i8* %55, i64 2
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 1
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #10
  %60 = zext i16 %59 to i32
  %61 = icmp eq i16 %58, 0
  br i1 %61, label %92, label %62

62:                                               ; preds = %44
  %63 = bitcast i8* %55 to %"struct.OT::DeltaSetIndexMap"*
  %64 = icmp ugt i32 %60, %1
  %65 = add nsw i32 %60, -1
  %66 = select i1 %64, i32 %1, i32 %65
  %67 = bitcast i8* %55 to i16*
  %68 = load i16, i16* %67, align 1
  %69 = lshr i16 %68, 12
  %70 = and i16 %69, 3
  %71 = add nuw nsw i16 %70, 1
  %72 = zext i16 %71 to i32
  %73 = mul i32 %66, %72
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.OT::DeltaSetIndexMap", %"struct.OT::DeltaSetIndexMap"* %63, i64 0, i32 2, i32 0, i64 %74
  %76 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %75, i64 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp eq i16 %70, 0
  br i1 %79, label %80, label %209

80:                                               ; preds = %223, %216, %209, %62
  %81 = phi i32 [ %78, %62 ], [ %214, %209 ], [ %221, %216 ], [ %228, %223 ]
  %82 = lshr i16 %68, 8
  %83 = and i16 %82, 15
  %84 = add nuw nsw i16 %83, 1
  %85 = zext i16 %84 to i32
  %86 = lshr i32 %81, %85
  %87 = shl nsw i32 -1, %85
  %88 = xor i32 %87, -1
  %89 = and i32 %81, %88
  %90 = shl i32 %86, 16
  %91 = or i32 %90, %89
  br label %92

92:                                               ; preds = %44, %80
  %93 = phi i32 [ %91, %80 ], [ %1, %44 ]
  %94 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw i32 %96, 24
  %98 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %97
  %103 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  %107 = or i32 %102, %106
  %108 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = or i32 %107, %110
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %126, label %113, !prof !2

113:                                              ; preds = %92
  %114 = zext i8 %95 to i64
  %115 = shl nuw nsw i64 %114, 24
  %116 = zext i8 %99 to i64
  %117 = shl nuw nsw i64 %116, 16
  %118 = or i64 %117, %115
  %119 = zext i8 %104 to i64
  %120 = shl nuw nsw i64 %119, 8
  %121 = or i64 %118, %120
  %122 = zext i8 %109 to i64
  %123 = or i64 %121, %122
  %124 = getelementptr inbounds %"struct.OT::HVARVVAR", %"struct.OT::HVARVVAR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %123
  %125 = bitcast i8* %124 to %"struct.OT::VariationStore"*
  br label %126

126:                                              ; preds = %92, %113
  %127 = phi %"struct.OT::VariationStore"* [ %125, %113 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationStore"*), %92 ]
  %128 = lshr i32 %93, 16
  %129 = and i32 %93, 65535
  %130 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 2
  %131 = bitcast %"struct.OT::ArrayOf.104"* %130 to i16*
  %132 = load i16, i16* %131, align 1
  %133 = tail call i16 @llvm.bswap.i16(i16 %132) #10
  %134 = zext i16 %133 to i32
  %135 = icmp ult i32 %128, %134
  br i1 %135, label %136, label %207, !prof !3

136:                                              ; preds = %126
  %137 = zext i32 %128 to i64
  %138 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 2, i32 1, i64 %137, i32 0, i32 0, i32 0, i32 0, i64 0
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = shl nuw i32 %140, 24
  %142 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 2, i32 1, i64 %137, i32 0, i32 0, i32 0, i32 0, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = shl nuw nsw i32 %144, 16
  %146 = or i32 %145, %141
  %147 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 2, i32 1, i64 %137, i32 0, i32 0, i32 0, i32 0, i64 2
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 8
  %151 = or i32 %146, %150
  %152 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 2, i32 1, i64 %137, i32 0, i32 0, i32 0, i32 0, i64 3
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = or i32 %151, %154
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %170, label %157, !prof !2

157:                                              ; preds = %136
  %158 = zext i8 %139 to i64
  %159 = shl nuw nsw i64 %158, 24
  %160 = zext i8 %143 to i64
  %161 = shl nuw nsw i64 %160, 16
  %162 = or i64 %161, %159
  %163 = zext i8 %148 to i64
  %164 = shl nuw nsw i64 %163, 8
  %165 = or i64 %162, %164
  %166 = zext i8 %153 to i64
  %167 = or i64 %165, %166
  %168 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 0, i32 0, i32 0, i64 %167
  %169 = bitcast i8* %168 to %"struct.OT::VarData"*
  br label %170

170:                                              ; preds = %157, %136
  %171 = phi %"struct.OT::VarData"* [ %169, %157 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarData"*), %136 ]
  %172 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = shl nuw i32 %174, 24
  %176 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = shl nuw nsw i32 %178, 16
  %180 = or i32 %179, %175
  %181 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = or i32 %180, %184
  %186 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = or i32 %185, %188
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %204, label %191, !prof !2

191:                                              ; preds = %170
  %192 = zext i8 %173 to i64
  %193 = shl nuw nsw i64 %192, 24
  %194 = zext i8 %177 to i64
  %195 = shl nuw nsw i64 %194, 16
  %196 = or i64 %195, %193
  %197 = zext i8 %182 to i64
  %198 = shl nuw nsw i64 %197, 8
  %199 = or i64 %196, %198
  %200 = zext i8 %187 to i64
  %201 = or i64 %199, %200
  %202 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %127, i64 0, i32 0, i32 0, i32 0, i64 %201
  %203 = bitcast i8* %202 to %"struct.OT::VarRegionList"*
  br label %204

204:                                              ; preds = %191, %170
  %205 = phi %"struct.OT::VarRegionList"* [ %203, %191 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarRegionList"*), %170 ]
  %206 = tail call float @_ZNK2OT7VarData9get_deltaEjPKijRKNS_13VarRegionListE(%"struct.OT::VarData"* %171, i32 %129, i32* %2, i32 %3, %"struct.OT::VarRegionList"* dereferenceable(10) %205) #10
  br label %207

207:                                              ; preds = %24, %4, %204, %126
  %208 = phi float [ 0.000000e+00, %24 ], [ %206, %204 ], [ 0.000000e+00, %126 ], [ 0.000000e+00, %4 ]
  ret float %208

209:                                              ; preds = %62
  %210 = shl nuw nsw i32 %78, 8
  %211 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %75, i64 1, i32 0, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = or i32 %210, %213
  %215 = icmp eq i16 %71, 2
  br i1 %215, label %80, label %216

216:                                              ; preds = %209
  %217 = shl nuw nsw i32 %214, 8
  %218 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %75, i64 2, i32 0, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = or i32 %217, %220
  %222 = icmp eq i16 %71, 3
  br i1 %222, label %80, label %223

223:                                              ; preds = %216
  %224 = shl nuw i32 %221, 8
  %225 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %75, i64 3, i32 0, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = or i32 %224, %227
  br label %80
}

declare hidden zeroext i1 @_ZNK2OT4cff113accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::cff1::accelerator_t"*, %struct.hb_font_t*, i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #1

declare hidden zeroext i1 @_ZNK2OT4cff213accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::cff2::accelerator_t"*, %struct.hb_font_t*, i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4CBDT13accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::CBDT::accelerator_t"*, %struct.hb_font_t*, i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::CBDT::accelerator_t", %"struct.OT::CBDT::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %struct.hb_blob_t*, %struct.hb_blob_t** %5, align 8
  %7 = icmp eq %struct.hb_blob_t* %6, null
  %8 = select i1 %7, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %6
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %8, i64 0, i32 1
  %10 = bitcast i8** %9 to %"struct.OT::CBLC"**
  %11 = load %"struct.OT::CBLC"*, %"struct.OT::CBLC"** %10, align 8
  %12 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %8, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, 8
  %15 = select i1 %14, %"struct.OT::CBLC"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CBLC"*), %"struct.OT::CBLC"* %11
  %16 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw i32 %18, 24
  %20 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 16
  %24 = or i32 %23, %19
  %25 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 8
  %29 = or i32 %24, %28
  %30 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = or i32 %29, %32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %93, label %35, !prof !2

35:                                               ; preds = %4
  %36 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 7
  %37 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 8
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %37, align 4
  %40 = icmp ult i32 %38, %39
  %41 = select i1 %40, i32 %39, i32 %38
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 1073741824, i32 %41
  %44 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 1, i64 0, i32 8
  %45 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 1, i64 0, i32 9
  %46 = icmp eq i32 %33, 1
  br i1 %46, label %58, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %44, i64 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %45, i64 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp ult i8 %49, %51
  %53 = select i1 %52, %"struct.OT::IntType.6"* %45, %"struct.OT::IntType.6"* %44
  %54 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %53, i64 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = zext i32 %33 to i64
  br label %64

58:                                               ; preds = %88, %35
  %59 = phi i32 [ 0, %35 ], [ %89, %88 ]
  %60 = icmp ugt i32 %33, %59
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 1, i64 %61
  %63 = select i1 %60, %"struct.OT::BitmapSizeTable"* %62, %"struct.OT::BitmapSizeTable"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::BitmapSizeTable"*), !prof !3
  br label %93

64:                                               ; preds = %88, %47
  %65 = phi i64 [ 1, %47 ], [ %91, %88 ]
  %66 = phi i32 [ %56, %47 ], [ %90, %88 ]
  %67 = phi i32 [ 0, %47 ], [ %89, %88 ]
  %68 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 1, i64 %65, i32 8
  %69 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 1, i32 1, i64 %65, i32 9
  %70 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %68, i64 0, i32 0, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %69, i64 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp ult i8 %71, %73
  %75 = select i1 %74, %"struct.OT::IntType.6"* %69, %"struct.OT::IntType.6"* %68
  %76 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %75, i64 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp ule i32 %43, %78
  %80 = icmp ugt i32 %66, %78
  %81 = and i1 %79, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %64
  %83 = icmp ugt i32 %43, %66
  %84 = icmp ult i32 %66, %78
  %85 = and i1 %83, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %82, %64
  %87 = trunc i64 %65 to i32
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi i32 [ %87, %86 ], [ %67, %82 ]
  %90 = phi i32 [ %78, %86 ], [ %66, %82 ]
  %91 = add nuw nsw i64 %65, 1
  %92 = icmp eq i64 %91, %57
  br i1 %92, label %58, label %64

93:                                               ; preds = %4, %58
  %94 = phi %"struct.OT::BitmapSizeTable"* [ %63, %58 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::BitmapSizeTable"*), %4 ]
  %95 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = shl nuw nsw i64 %97, 24
  %99 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = shl nuw nsw i64 %101, 16
  %103 = or i64 %102, %98
  %104 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i64
  %107 = shl nuw nsw i64 %106, 8
  %108 = or i64 %103, %107
  %109 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = or i64 %108, %111
  %113 = getelementptr inbounds %"struct.OT::CBLC", %"struct.OT::CBLC"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %112
  %114 = bitcast i8* %113 to %"struct.OT::IndexSubtableArray"*
  %115 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 2, i32 0, i32 0, i64 0
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw i32 %117, 24
  %119 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 2, i32 0, i32 0, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 16
  %123 = or i32 %122, %118
  %124 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 2, i32 0, i32 0, i64 2
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 8
  %128 = or i32 %123, %127
  %129 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 2, i32 0, i32 0, i64 3
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %128, %131
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %386, label %134

134:                                              ; preds = %93
  %135 = zext i32 %132 to i64
  br label %138

136:                                              ; preds = %138
  %137 = icmp eq i64 %153, %135
  br i1 %137, label %386, label %138

138:                                              ; preds = %136, %134
  %139 = phi i64 [ 0, %134 ], [ %153, %136 ]
  %140 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139
  %141 = bitcast %"struct.OT::IndexSubtableRecord"* %140 to i16*
  %142 = load i16, i16* %141, align 1
  %143 = tail call i16 @llvm.bswap.i16(i16 %142) #10
  %144 = zext i16 %143 to i32
  %145 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139, i32 1, i32 0
  %146 = bitcast %"struct.OT::IntType"* %145 to i16*
  %147 = load i16, i16* %146, align 1
  %148 = tail call i16 @llvm.bswap.i16(i16 %147) #10
  %149 = zext i16 %148 to i32
  %150 = icmp ugt i32 %144, %2
  %151 = icmp ult i32 %149, %2
  %152 = or i1 %150, %151
  %153 = add nuw nsw i64 %139, 1
  br i1 %152, label %136, label %154

154:                                              ; preds = %138
  %155 = icmp eq %"struct.OT::IndexSubtableRecord"* %140, null
  br i1 %155, label %386, label %156

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 8, i32 0, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %386, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %94, i64 0, i32 9, i32 0, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %386, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = shl nuw i32 %167, 24
  %169 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 16
  %173 = or i32 %172, %168
  %174 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 8
  %178 = or i32 %173, %177
  %179 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %114, i64 0, i32 0, i32 0, i64 %139, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = or i32 %178, %181
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %197, label %184, !prof !2

184:                                              ; preds = %164
  %185 = zext i8 %166 to i64
  %186 = shl nuw nsw i64 %185, 24
  %187 = zext i8 %170 to i64
  %188 = shl nuw nsw i64 %187, 16
  %189 = or i64 %188, %186
  %190 = zext i8 %175 to i64
  %191 = shl nuw nsw i64 %190, 8
  %192 = or i64 %189, %191
  %193 = zext i8 %180 to i64
  %194 = or i64 %192, %193
  %195 = getelementptr inbounds i8, i8* %113, i64 %194
  %196 = bitcast i8* %195 to %"struct.OT::IndexSubtable"*
  br label %197

197:                                              ; preds = %184, %164
  %198 = phi %"struct.OT::IndexSubtable"* [ %196, %184 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::IndexSubtable"*), %164 ]
  %199 = sub i32 %2, %144
  %200 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = bitcast %"struct.OT::IntType"* %200 to i16*
  %202 = load i16, i16* %201, align 1
  %203 = tail call i16 @llvm.bswap.i16(i16 %202) #10
  %204 = bitcast %"struct.OT::IndexSubtable"* %198 to i16*
  %205 = load i16, i16* %204, align 1
  %206 = tail call i16 @llvm.bswap.i16(i16 %205) #10
  switch i16 %206, label %386 [
    i16 1, label %207
    i16 3, label %269
  ]

207:                                              ; preds = %197
  %208 = add i32 %199, 1
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %209, i32 0, i32 0, i32 0, i64 0
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = shl nuw i32 %212, 24
  %214 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %209, i32 0, i32 0, i32 0, i64 1
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = shl nuw nsw i32 %216, 16
  %218 = or i32 %217, %213
  %219 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %209, i32 0, i32 0, i32 0, i64 2
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl nuw nsw i32 %221, 8
  %223 = or i32 %218, %222
  %224 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %209, i32 0, i32 0, i32 0, i64 3
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = or i32 %223, %226
  %228 = zext i32 %199 to i64
  %229 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %228, i32 0, i32 0, i32 0, i64 0
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = shl nuw i32 %231, 24
  %233 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %228, i32 0, i32 0, i32 0, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 16
  %237 = or i32 %236, %232
  %238 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %228, i32 0, i32 0, i32 0, i64 2
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = shl nuw nsw i32 %240, 8
  %242 = or i32 %237, %241
  %243 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 %228, i32 0, i32 0, i32 0, i64 3
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = or i32 %242, %245
  %247 = icmp ugt i32 %227, %246
  br i1 %247, label %248, label %386, !prof !3

248:                                              ; preds = %207
  %249 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 0
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = shl nuw i32 %251, 24
  %253 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 1
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = shl nuw nsw i32 %255, 16
  %257 = or i32 %256, %252
  %258 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 2
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = shl nuw nsw i32 %260, 8
  %262 = or i32 %257, %261
  %263 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 3
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = or i32 %262, %265
  %267 = add i32 %266, %246
  %268 = sub i32 %227, %246
  br label %306

269:                                              ; preds = %197
  %270 = bitcast %"struct.OT::IndexSubtable"* %198 to %"struct.OT::IndexSubtableFormat1Or3.369"*
  %271 = add i32 %199, 1
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %"struct.OT::IndexSubtableFormat1Or3.369", %"struct.OT::IndexSubtableFormat1Or3.369"* %270, i64 0, i32 1, i32 0, i64 %272, i32 0
  %274 = bitcast %"struct.OT::IntType"* %273 to i16*
  %275 = load i16, i16* %274, align 1
  %276 = tail call i16 @llvm.bswap.i16(i16 %275) #10
  %277 = zext i32 %199 to i64
  %278 = getelementptr inbounds %"struct.OT::IndexSubtableFormat1Or3.369", %"struct.OT::IndexSubtableFormat1Or3.369"* %270, i64 0, i32 1, i32 0, i64 %277, i32 0
  %279 = bitcast %"struct.OT::IntType"* %278 to i16*
  %280 = load i16, i16* %279, align 1
  %281 = tail call i16 @llvm.bswap.i16(i16 %280) #10
  %282 = icmp ugt i16 %276, %281
  br i1 %282, label %283, label %386, !prof !3

283:                                              ; preds = %269
  %284 = zext i16 %281 to i32
  %285 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 0
  %286 = load i8, i8* %285, align 1
  %287 = zext i8 %286 to i32
  %288 = shl nuw i32 %287, 24
  %289 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 1
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = shl nuw nsw i32 %291, 16
  %293 = or i32 %292, %288
  %294 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 2
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = shl nuw nsw i32 %296, 8
  %298 = or i32 %293, %297
  %299 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i64 3
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = or i32 %298, %301
  %303 = add i32 %302, %284
  %304 = zext i16 %276 to i32
  %305 = sub nsw i32 %304, %284
  br label %306

306:                                              ; preds = %248, %283
  %307 = phi i32 [ %303, %283 ], [ %267, %248 ]
  %308 = phi i32 [ %305, %283 ], [ %268, %248 ]
  %309 = getelementptr inbounds %"struct.OT::CBDT::accelerator_t", %"struct.OT::CBDT::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 0
  %310 = load %struct.hb_blob_t*, %struct.hb_blob_t** %309, align 8
  %311 = icmp eq %struct.hb_blob_t* %310, null
  %312 = select i1 %311, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %310
  %313 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %312, i64 0, i32 2
  %314 = load i32, i32* %313, align 8
  %315 = icmp ult i32 %314, %307
  %316 = sub i32 %314, %307
  %317 = icmp ult i32 %316, %308
  %318 = or i1 %315, %317
  br i1 %318, label %386, label %319, !prof !6

319:                                              ; preds = %306
  switch i16 %203, label %386 [
    i16 17, label %320
    i16 18, label %322
  ]

320:                                              ; preds = %319
  %321 = icmp ult i32 %308, 9
  br i1 %321, label %386, label %324, !prof !2

322:                                              ; preds = %319
  %323 = icmp ult i32 %308, 12
  br i1 %323, label %386, label %324, !prof !2

324:                                              ; preds = %322, %320
  %325 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %312, i64 0, i32 1
  %326 = bitcast i8** %325 to %"struct.OT::CBDT"**
  %327 = load %"struct.OT::CBDT"*, %"struct.OT::CBDT"** %326, align 8
  %328 = icmp ult i32 %314, 4
  %329 = select i1 %328, %"struct.OT::CBDT"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CBDT"*), %"struct.OT::CBDT"* %327
  %330 = zext i32 %307 to i64
  %331 = getelementptr inbounds %"struct.OT::CBDT", %"struct.OT::CBDT"* %329, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %330
  %332 = getelementptr inbounds i8, i8* %331, i64 2
  %333 = load i8, i8* %332, align 1
  %334 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 5
  %335 = load i64, i64* %334, align 8
  %336 = sext i8 %333 to i64
  %337 = mul nsw i64 %335, %336
  %338 = lshr i64 %337, 16
  %339 = trunc i64 %338 to i32
  %340 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 0
  store i32 %339, i32* %340, align 4
  %341 = getelementptr inbounds i8, i8* %331, i64 3
  %342 = load i8, i8* %341, align 1
  %343 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 6
  %344 = load i64, i64* %343, align 8
  %345 = sext i8 %342 to i64
  %346 = mul nsw i64 %344, %345
  %347 = lshr i64 %346, 16
  %348 = trunc i64 %347 to i32
  %349 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 1
  store i32 %348, i32* %349, align 4
  %350 = getelementptr inbounds i8, i8* %331, i64 1
  %351 = load i8, i8* %350, align 1
  %352 = load i64, i64* %334, align 8
  %353 = zext i8 %351 to i64
  %354 = mul nsw i64 %352, %353
  %355 = lshr i64 %354, 16
  %356 = trunc i64 %355 to i32
  %357 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 2
  store i32 %356, i32* %357, align 4
  %358 = load i8, i8* %331, align 1
  %359 = zext i8 %358 to i64
  %360 = load i64, i64* %343, align 8
  %361 = mul i64 %360, %359
  %362 = sub i64 0, %361
  %363 = lshr i64 %362, 16
  %364 = trunc i64 %363 to i32
  %365 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 3
  store i32 %364, i32* %365, align 4
  %366 = getelementptr inbounds %"struct.OT::CBDT::accelerator_t", %"struct.OT::CBDT::accelerator_t"* %0, i64 0, i32 2
  %367 = load i32, i32* %366, align 8
  %368 = uitofp i32 %367 to float
  %369 = bitcast i8* %157 to <2 x i8>*
  %370 = load <2 x i8>, <2 x i8>* %369, align 1
  %371 = uitofp <2 x i8> %370 to <2 x float>
  %372 = insertelement <2 x float> undef, float %368, i32 0
  %373 = shufflevector <2 x float> %372, <2 x float> undef, <2 x i32> zeroinitializer
  %374 = fdiv <2 x float> %373, %371
  %375 = shufflevector <2 x float> %374, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %376 = insertelement <4 x i32> undef, i32 %339, i32 0
  %377 = insertelement <4 x i32> %376, i32 %348, i32 1
  %378 = insertelement <4 x i32> %377, i32 %356, i32 2
  %379 = insertelement <4 x i32> %378, i32 %364, i32 3
  %380 = sitofp <4 x i32> %379 to <4 x float>
  %381 = fmul <4 x float> %375, %380
  %382 = fadd <4 x float> %381, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %383 = call <4 x float> @llvm.floor.v4f32(<4 x float> %382)
  %384 = fptosi <4 x float> %383 to <4 x i32>
  %385 = bitcast %struct.hb_glyph_extents_t* %3 to <4 x i32>*
  store <4 x i32> %384, <4 x i32>* %385, align 4
  br label %386

386:                                              ; preds = %136, %207, %269, %197, %93, %319, %322, %320, %324, %306, %154, %156, %160
  %387 = phi i1 [ false, %160 ], [ false, %156 ], [ false, %154 ], [ true, %324 ], [ false, %320 ], [ false, %322 ], [ false, %319 ], [ false, %306 ], [ false, %93 ], [ false, %197 ], [ false, %269 ], [ false, %207 ], [ false, %136 ]
  ret i1 %387
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4sbixEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::sbix"*, align 8
  %4 = alloca %"struct.OT::sbix"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.OT::sbix"** %4 to i8*
  %14 = bitcast %"struct.OT::sbix"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %93, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %99, %93 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %93 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  br label %114

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 8
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  br label %108

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -8
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %42 = bitcast i8* %20 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %108, label %45, !prof !2

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %20, i64 4
  %47 = bitcast i8* %46 to %"struct.OT::ArrayOf.337"*
  store i8* %20, i8** %14, align 8
  %48 = call zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_4sbixEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.337"* %47, %struct.hb_sanitize_context_t* %0, %"struct.OT::sbix"** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %49 = load i32, i32* %11, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %48, label %51, label %89

51:                                               ; preds = %45
  %52 = bitcast i8* %20 to i16*
  %53 = bitcast i8* %46 to %"struct.OT::ArrayOf.337"*
  br i1 %50, label %54, label %100

54:                                               ; preds = %51
  store i32 0, i32* %11, align 4
  %55 = load i8*, i8** %8, align 8
  %56 = icmp ugt i8* %55, %20
  br i1 %56, label %66, label %57, !prof !2

57:                                               ; preds = %54
  %58 = load i8*, i8** %9, align 8
  %59 = icmp ult i8* %58, %20
  br i1 %59, label %66, label %60, !prof !2

60:                                               ; preds = %57
  %61 = ptrtoint i8* %58 to i64
  %62 = ptrtoint i8* %20 to i64
  %63 = sub i64 %61, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp ult i32 %64, 8
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %60, %57, %54
  %67 = bitcast %"struct.OT::sbix"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  br label %82

68:                                               ; preds = %60
  %69 = load i32, i32* %10, align 8
  %70 = add i32 %69, -8
  store i32 %70, i32* %10, align 8
  %71 = icmp sgt i32 %70, 0
  %72 = bitcast %"struct.OT::sbix"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  br i1 %71, label %73, label %82, !prof !3

73:                                               ; preds = %68
  %74 = load i16, i16* %52, align 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %82, label %76, !prof !2

76:                                               ; preds = %73
  %77 = bitcast %"struct.OT::sbix"** %3 to i8**
  store i8* %20, i8** %77, align 8
  %78 = call zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_4sbixEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.337"* %53, %struct.hb_sanitize_context_t* %0, %"struct.OT::sbix"** nonnull dereferenceable(8) %3) #10
  %79 = xor i1 %78, true
  %80 = load i32, i32* %11, align 4
  %81 = icmp ne i32 %80, 0
  br label %82

82:                                               ; preds = %66, %68, %73, %76
  %83 = phi i1 [ false, %73 ], [ false, %68 ], [ %81, %76 ], [ false, %66 ]
  %84 = phi i8* [ %72, %73 ], [ %72, %68 ], [ %72, %76 ], [ %67, %66 ]
  %85 = phi i1 [ true, %73 ], [ true, %68 ], [ %79, %76 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %86 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %86) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %87 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #10
  %88 = or i1 %85, %83
  br i1 %88, label %112, label %103

89:                                               ; preds = %45
  br i1 %50, label %90, label %106

90:                                               ; preds = %89
  %91 = load i8, i8* %7, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %90
  %94 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %94, i8** %8, align 8
  %95 = load i32, i32* %15, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8* %97, i8** %9, align 8
  %98 = icmp eq i8* %94, null
  %99 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %98, label %109, label %16

100:                                              ; preds = %51
  %101 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %101) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %102 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10
  br label %103

103:                                              ; preds = %82, %100
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %114

104:                                              ; preds = %90
  %105 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

106:                                              ; preds = %89
  %107 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

108:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %109

109:                                              ; preds = %93, %104, %106, %108
  %110 = phi %struct.hb_blob_t* [ %17, %108 ], [ %107, %106 ], [ %105, %104 ], [ %99, %93 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %110) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %111 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #10
  br label %112

112:                                              ; preds = %109, %82
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %113 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %114

114:                                              ; preds = %112, %103, %35
  %115 = phi %struct.hb_blob_t* [ %1, %35 ], [ %113, %112 ], [ %1, %103 ]
  ret %struct.hb_blob_t* %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_4sbixEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.337"*, %struct.hb_sanitize_context_t*, %"struct.OT::sbix"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %88, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %88, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.337"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %88, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %88, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 1073741823
  br i1 %42, label %43, label %88, !prof !5

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = shl i32 %41, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %88, label %51, !prof !6

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::OffsetTo.338"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %88, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %88, !prof !3

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.OT::sbix"** %2 to i8**
  %79 = zext i32 %75 to i64
  br label %82

80:                                               ; preds = %82
  %81 = icmp eq i64 %87, %79
  br i1 %81, label %88, label %82

82:                                               ; preds = %80, %77
  %83 = phi i64 [ 0, %77 ], [ %87, %80 ]
  %84 = getelementptr inbounds %"struct.OT::ArrayOf.337", %"struct.OT::ArrayOf.337"* %0, i64 0, i32 1, i64 %83
  %85 = load i8*, i8** %78, align 8
  %86 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.338"* %84, %struct.hb_sanitize_context_t* %1, i8* %85) #10
  %87 = add nuw nsw i64 %83, 1
  br i1 %86, label %80, label %88, !prof !3

88:                                               ; preds = %82, %80, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %89 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ false, %82 ], [ true, %80 ]
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_10SBIXStrikeENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.338"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %97, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %97, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.338"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %97, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %97

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %97, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %86, label %57, !prof !6

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %86, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %86

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, 1
  %70 = icmp ult i32 %69, 1073741823
  br i1 %70, label %71, label %86

71:                                               ; preds = %65
  %72 = shl i32 %69, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %97, label %74

74:                                               ; preds = %71
  %75 = icmp ugt i8* %6, %66
  %76 = icmp ult i8* %10, %66
  %77 = or i1 %75, %76
  br i1 %77, label %86, label %78, !prof !6

78:                                               ; preds = %74
  %79 = ptrtoint i8* %66 to i64
  %80 = sub i64 %13, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp ugt i32 %72, %81
  br i1 %82, label %86, label %83, !prof !2

83:                                               ; preds = %78
  %84 = sub i32 %63, %72
  store i32 %84, i32* %19, align 8
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %74, %78, %65, %42, %57, %62, %83
  %87 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %88 = load i32, i32* %87, align 4
  %89 = icmp ugt i32 %88, 31
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = add nuw nsw i32 %88, 1
  store i32 %91, i32* %87, align 4
  %92 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %93 = load i8, i8* %92, align 8, !range !4
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = bitcast %"struct.OT::OffsetTo.338"* %0 to i32*
  store i32 0, i32* %96, align 1
  br label %97

97:                                               ; preds = %95, %90, %86, %71, %3, %8, %12, %23, %83, %18
  %98 = phi i1 [ false, %18 ], [ true, %83 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %71 ], [ true, %95 ], [ false, %90 ], [ false, %86 ]
  ret i1 %98
}

declare hidden i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4sbix13accelerator_t15get_png_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::sbix::accelerator_t"*, %struct.hb_font_t*, i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.OT::sbix::accelerator_t", %"struct.OT::sbix::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %struct.hb_blob_t*, %struct.hb_blob_t** %8, align 8
  %10 = icmp eq %struct.hb_blob_t* %9, null
  %11 = select i1 %10, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %9
  %12 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %11, i64 0, i32 1
  %13 = bitcast i8** %12 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %11, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, 8
  %18 = select i1 %17, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), i16* %14
  %19 = load i16, i16* %18, align 1
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %227, label %21

21:                                               ; preds = %4
  %22 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #10
  store i32 0, i32* %5, align 4
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #10
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #10
  store i32 0, i32* %7, align 4
  %25 = tail call dereferenceable(8) %"struct.OT::SBIXStrike"* @_ZNK2OT4sbix13accelerator_t13choose_strikeEP9hb_font_t(%"struct.OT::sbix::accelerator_t"* %0, %struct.hb_font_t* %1) #10
  %26 = load %struct.hb_blob_t*, %struct.hb_blob_t** %8, align 8
  %27 = getelementptr inbounds %"struct.OT::sbix::accelerator_t", %"struct.OT::sbix::accelerator_t"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = call %struct.hb_blob_t* @_ZNK2OT10SBIXStrike14get_glyph_blobEjP9hb_blob_tjPiS3_jPj(%"struct.OT::SBIXStrike"* %25, i32 %2, %struct.hb_blob_t* %26, i32 1886283552, i32* nonnull %5, i32* nonnull %6, i32 %28, i32* nonnull %7) #10
  %30 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %29, i64 0, i32 1
  %31 = bitcast i8** %30 to %"struct.OT::sbix::accelerator_t::PNGHeader"**
  %32 = load %"struct.OT::sbix::accelerator_t::PNGHeader"*, %"struct.OT::sbix::accelerator_t::PNGHeader"** %31, align 8
  %33 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %29, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %34, 29
  %36 = select i1 %35, %"struct.OT::sbix::accelerator_t::PNGHeader"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::sbix::accelerator_t::PNGHeader"*), %"struct.OT::sbix::accelerator_t::PNGHeader"* %32
  %37 = load i32, i32* %5, align 4
  %38 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 0
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 2, i32 0, i32 0, i64 0
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 %41, 24
  %43 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 2, i32 0, i32 0, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 2, i32 0, i32 0, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %47, %51
  %53 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 2, i32 0, i32 0, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %52, %55
  %57 = load i32, i32* %6, align 4
  %58 = add i32 %56, %57
  %59 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 1
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 1, i32 0, i32 0, i64 0
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw i32 %62, 24
  %64 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 1, i32 0, i32 0, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %63
  %69 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 1, i32 0, i32 0, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %68, %72
  %74 = getelementptr inbounds %"struct.OT::sbix::accelerator_t::PNGHeader", %"struct.OT::sbix::accelerator_t::PNGHeader"* %36, i64 0, i32 1, i32 1, i32 0, i32 0, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = or i32 %73, %76
  %78 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 2
  store i32 %77, i32* %78, align 4
  %79 = load i8, i8* %39, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw i32 %80, 24
  %82 = load i8, i8* %43, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 16
  %85 = or i32 %84, %81
  %86 = load i8, i8* %48, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = or i32 %85, %88
  %90 = load i8, i8* %53, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %89, %91
  %93 = sub i32 0, %92
  %94 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 3
  store i32 %93, i32* %94, align 4
  %95 = load i32, i32* %7, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %192, label %97

97:                                               ; preds = %21
  %98 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %99 = load %struct.hb_face_t*, %struct.hb_face_t** %98, align 8
  %100 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %99, i64 0, i32 5, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108, !prof !2

103:                                              ; preds = %97
  %104 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %99) #10
  %105 = load i32, i32* %7, align 4
  %106 = load i32, i32* %38, align 4
  %107 = load %struct.hb_face_t*, %struct.hb_face_t** %98, align 8
  br label %108

108:                                              ; preds = %97, %103
  %109 = phi %struct.hb_face_t* [ %107, %103 ], [ %99, %97 ]
  %110 = phi i32 [ %106, %103 ], [ %37, %97 ]
  %111 = phi i32 [ %105, %103 ], [ %95, %97 ]
  %112 = phi i32 [ %104, %103 ], [ %101, %97 ]
  %113 = uitofp i32 %112 to float
  %114 = uitofp i32 %111 to float
  %115 = fdiv float %113, %114
  %116 = sitofp i32 %110 to float
  %117 = fmul float %115, %116
  %118 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = sitofp i32 %119 to float
  %121 = fmul float %117, %120
  %122 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %109, i64 0, i32 5, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %108
  %126 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %109) #10
  br label %127

127:                                              ; preds = %108, %125
  %128 = phi i32 [ %126, %125 ], [ %123, %108 ]
  %129 = uitofp i32 %128 to float
  %130 = fdiv float %121, %129
  %131 = fadd float %130, 5.000000e-01
  %132 = call float @llvm.floor.f32(float %131) #10
  %133 = fptosi float %132 to i32
  store i32 %133, i32* %38, align 4
  %134 = load i32, i32* %59, align 4
  %135 = sitofp i32 %134 to float
  %136 = fmul float %115, %135
  %137 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = sitofp i32 %138 to float
  %140 = fmul float %136, %139
  %141 = load %struct.hb_face_t*, %struct.hb_face_t** %98, align 8
  %142 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %141, i64 0, i32 5, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %127
  %146 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %141) #10
  br label %147

147:                                              ; preds = %127, %145
  %148 = phi i32 [ %146, %145 ], [ %143, %127 ]
  %149 = uitofp i32 %148 to float
  %150 = fdiv float %140, %149
  %151 = fadd float %150, 5.000000e-01
  %152 = call float @llvm.floor.f32(float %151) #10
  %153 = fptosi float %152 to i32
  store i32 %153, i32* %59, align 4
  %154 = load i32, i32* %78, align 4
  %155 = sitofp i32 %154 to float
  %156 = fmul float %115, %155
  %157 = load i32, i32* %118, align 8
  %158 = sitofp i32 %157 to float
  %159 = fmul float %156, %158
  %160 = load %struct.hb_face_t*, %struct.hb_face_t** %98, align 8
  %161 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %160, i64 0, i32 5, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166, !prof !2

164:                                              ; preds = %147
  %165 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %160) #10
  br label %166

166:                                              ; preds = %147, %164
  %167 = phi i32 [ %165, %164 ], [ %162, %147 ]
  %168 = uitofp i32 %167 to float
  %169 = fdiv float %159, %168
  %170 = fadd float %169, 5.000000e-01
  %171 = call float @llvm.floor.f32(float %170) #10
  %172 = fptosi float %171 to i32
  store i32 %172, i32* %78, align 4
  %173 = load i32, i32* %94, align 4
  %174 = sitofp i32 %173 to float
  %175 = fmul float %115, %174
  %176 = load i32, i32* %137, align 4
  %177 = sitofp i32 %176 to float
  %178 = fmul float %175, %177
  %179 = load %struct.hb_face_t*, %struct.hb_face_t** %98, align 8
  %180 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %179, i64 0, i32 5, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185, !prof !2

183:                                              ; preds = %166
  %184 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %179) #10
  br label %185

185:                                              ; preds = %166, %183
  %186 = phi i32 [ %184, %183 ], [ %181, %166 ]
  %187 = uitofp i32 %186 to float
  %188 = fdiv float %178, %187
  %189 = fadd float %188, 5.000000e-01
  %190 = call float @llvm.floor.f32(float %189) #10
  %191 = fptosi float %190 to i32
  br label %223

192:                                              ; preds = %21
  %193 = zext i32 %37 to i64
  %194 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 5
  %195 = load i64, i64* %194, align 8
  %196 = shl i64 %193, 48
  %197 = ashr exact i64 %196, 48
  %198 = mul nsw i64 %195, %197
  %199 = lshr i64 %198, 16
  %200 = trunc i64 %199 to i32
  store i32 %200, i32* %38, align 4
  %201 = zext i32 %58 to i64
  %202 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 6
  %203 = load i64, i64* %202, align 8
  %204 = shl i64 %201, 48
  %205 = ashr exact i64 %204, 48
  %206 = mul nsw i64 %203, %205
  %207 = lshr i64 %206, 16
  %208 = trunc i64 %207 to i32
  store i32 %208, i32* %59, align 4
  %209 = zext i32 %77 to i64
  %210 = load i64, i64* %194, align 8
  %211 = shl i64 %209, 48
  %212 = ashr exact i64 %211, 48
  %213 = mul nsw i64 %210, %212
  %214 = lshr i64 %213, 16
  %215 = trunc i64 %214 to i32
  store i32 %215, i32* %78, align 4
  %216 = zext i32 %93 to i64
  %217 = load i64, i64* %202, align 8
  %218 = shl i64 %216, 48
  %219 = ashr exact i64 %218, 48
  %220 = mul nsw i64 %217, %219
  %221 = lshr i64 %220, 16
  %222 = trunc i64 %221 to i32
  br label %223

223:                                              ; preds = %192, %185
  %224 = phi i32 [ %222, %192 ], [ %191, %185 ]
  store i32 %224, i32* %94, align 4
  call void @hb_blob_destroy(%struct.hb_blob_t* %29) #10
  %225 = load i32, i32* %7, align 4
  %226 = icmp ne i32 %225, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #10
  br label %227

227:                                              ; preds = %4, %223
  %228 = phi i1 [ %226, %223 ], [ false, %4 ]
  ret i1 %228
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.OT::SBIXStrike"* @_ZNK2OT4sbix13accelerator_t13choose_strikeEP9hb_font_t(%"struct.OT::sbix::accelerator_t"*, %struct.hb_font_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::sbix::accelerator_t", %"struct.OT::sbix::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.hb_blob_t*, %struct.hb_blob_t** %3, align 8
  %5 = icmp eq %struct.hb_blob_t* %4, null
  %6 = select i1 %5, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::sbix"**
  %9 = load %"struct.OT::sbix"*, %"struct.OT::sbix"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 8
  %13 = select i1 %12, %"struct.OT::sbix"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::sbix"*), %"struct.OT::sbix"* %9
  %14 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw i32 %16, 24
  %18 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 16
  %22 = or i32 %21, %17
  %23 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = or i32 %22, %26
  %28 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = or i32 %27, %30
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %180, label %33, !prof !2

33:                                               ; preds = %2
  %34 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 7
  %35 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 8
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %35, align 4
  %38 = icmp ult i32 %36, %37
  %39 = select i1 %38, i32 %37, i32 %36
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %40, i32 1073741824, i32 %39
  %42 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw i32 %44, 24
  %46 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = or i32 %49, %45
  %51 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 8
  %55 = or i32 %50, %54
  %56 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = or i32 %55, %58
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %74, label %61, !prof !2

61:                                               ; preds = %33
  %62 = zext i8 %43 to i64
  %63 = shl nuw nsw i64 %62, 24
  %64 = zext i8 %47 to i64
  %65 = shl nuw nsw i64 %64, 16
  %66 = or i64 %65, %63
  %67 = zext i8 %52 to i64
  %68 = shl nuw nsw i64 %67, 8
  %69 = or i64 %66, %68
  %70 = zext i8 %57 to i64
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 0, i32 0, i32 0, i64 %71
  %73 = bitcast i8* %72 to %"struct.OT::SBIXStrike"*
  br label %74

74:                                               ; preds = %33, %61
  %75 = phi %"struct.OT::SBIXStrike"* [ %73, %61 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::SBIXStrike"*), %33 ]
  %76 = icmp ugt i32 %31, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %74
  %78 = bitcast %"struct.OT::SBIXStrike"* %75 to i16*
  %79 = load i16, i16* %78, align 1
  %80 = tail call i16 @llvm.bswap.i16(i16 %79) #10
  %81 = zext i16 %80 to i32
  %82 = zext i32 %31 to i64
  br label %121

83:                                               ; preds = %175, %74
  %84 = phi i32 [ 0, %74 ], [ %176, %175 ]
  %85 = icmp ugt i32 %31, %84
  %86 = zext i32 %84 to i64
  %87 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 %86
  %88 = select i1 %85, %"struct.OT::OffsetTo.338"* %87, %"struct.OT::OffsetTo.338"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OffsetTo.338"*), !prof !3
  %89 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw i32 %91, 24
  %93 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 16
  %97 = or i32 %96, %92
  %98 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 8
  %102 = or i32 %97, %101
  %103 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = or i32 %102, %105
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %180, label %108, !prof !2

108:                                              ; preds = %83
  %109 = zext i8 %90 to i64
  %110 = shl nuw nsw i64 %109, 24
  %111 = zext i8 %94 to i64
  %112 = shl nuw nsw i64 %111, 16
  %113 = or i64 %112, %110
  %114 = zext i8 %99 to i64
  %115 = shl nuw nsw i64 %114, 8
  %116 = or i64 %113, %115
  %117 = zext i8 %104 to i64
  %118 = or i64 %116, %117
  %119 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 0, i32 0, i32 0, i64 %118
  %120 = bitcast i8* %119 to %"struct.OT::SBIXStrike"*
  br label %180

121:                                              ; preds = %175, %77
  %122 = phi i64 [ 1, %77 ], [ %178, %175 ]
  %123 = phi i32 [ %81, %77 ], [ %177, %175 ]
  %124 = phi i32 [ 0, %77 ], [ %176, %175 ]
  %125 = icmp ult i64 %122, %82
  %126 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 2, i32 1, i64 %122
  %127 = select i1 %125, %"struct.OT::OffsetTo.338"* %126, %"struct.OT::OffsetTo.338"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OffsetTo.338"*), !prof !3
  %128 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw i32 %130, 24
  %132 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw nsw i32 %134, 16
  %136 = or i32 %135, %131
  %137 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw nsw i32 %139, 8
  %141 = or i32 %136, %140
  %142 = getelementptr inbounds %"struct.OT::OffsetTo.338", %"struct.OT::OffsetTo.338"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %141, %144
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %160, label %147, !prof !2

147:                                              ; preds = %121
  %148 = zext i8 %129 to i64
  %149 = shl nuw nsw i64 %148, 24
  %150 = zext i8 %133 to i64
  %151 = shl nuw nsw i64 %150, 16
  %152 = or i64 %151, %149
  %153 = zext i8 %138 to i64
  %154 = shl nuw nsw i64 %153, 8
  %155 = or i64 %152, %154
  %156 = zext i8 %143 to i64
  %157 = or i64 %155, %156
  %158 = getelementptr inbounds %"struct.OT::sbix", %"struct.OT::sbix"* %13, i64 0, i32 0, i32 0, i32 0, i64 %157
  %159 = bitcast i8* %158 to %"struct.OT::SBIXStrike"*
  br label %160

160:                                              ; preds = %121, %147
  %161 = phi %"struct.OT::SBIXStrike"* [ %159, %147 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::SBIXStrike"*), %121 ]
  %162 = bitcast %"struct.OT::SBIXStrike"* %161 to i16*
  %163 = load i16, i16* %162, align 1
  %164 = tail call i16 @llvm.bswap.i16(i16 %163) #10
  %165 = zext i16 %164 to i32
  %166 = icmp ule i32 %41, %165
  %167 = icmp ugt i32 %123, %165
  %168 = and i1 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %160
  %170 = icmp ugt i32 %41, %123
  %171 = icmp ult i32 %123, %165
  %172 = and i1 %170, %171
  br i1 %172, label %173, label %175

173:                                              ; preds = %169, %160
  %174 = trunc i64 %122 to i32
  br label %175

175:                                              ; preds = %173, %169
  %176 = phi i32 [ %174, %173 ], [ %124, %169 ]
  %177 = phi i32 [ %165, %173 ], [ %123, %169 ]
  %178 = add nuw nsw i64 %122, 1
  %179 = icmp eq i64 %178, %82
  br i1 %179, label %83, label %121

180:                                              ; preds = %108, %83, %2
  %181 = phi %"struct.OT::SBIXStrike"* [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::SBIXStrike"*), %2 ], [ %120, %108 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::SBIXStrike"*), %83 ]
  ret %"struct.OT::SBIXStrike"* %181
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK2OT10SBIXStrike14get_glyph_blobEjP9hb_blob_tjPiS3_jPj(%"struct.OT::SBIXStrike"*, i32, %struct.hb_blob_t*, i32, i32*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %9 = bitcast %"struct.OT::SBIXStrike"* %0 to i16*
  %10 = load i16, i16* %9, align 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %8
  %13 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %153

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint %"struct.OT::SBIXStrike"* %0 to i64
  %21 = sub i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = sub i32 %16, %22
  br label %24

24:                                               ; preds = %115, %14
  %25 = phi i32 [ %1, %14 ], [ %120, %115 ]
  %26 = phi i32 [ 8, %14 ], [ %121, %115 ]
  %27 = icmp ult i32 %25, %6
  br i1 %27, label %28, label %74, !prof !3

28:                                               ; preds = %24
  %29 = add nuw i32 %25, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %30, i32 0, i32 0, i32 0, i32 0, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw i32 %33, 24
  %35 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %30, i32 0, i32 0, i32 0, i32 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 16
  %39 = or i32 %38, %34
  %40 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %30, i32 0, i32 0, i32 0, i32 0, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 8
  %44 = or i32 %39, %43
  %45 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %30, i32 0, i32 0, i32 0, i32 0, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = or i32 %44, %47
  %49 = zext i32 %25 to i64
  %50 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %49, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %49, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %49, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 2, i32 0, i64 %49, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp ugt i32 %48, %67
  br i1 %68, label %69, label %74, !prof !3

69:                                               ; preds = %28
  %70 = sub i32 %48, %67
  %71 = icmp ult i32 %70, 9
  %72 = icmp ugt i32 %48, %23
  %73 = or i1 %72, %71
  br i1 %73, label %74, label %76, !prof !6

74:                                               ; preds = %24, %28, %69
  %75 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %153

76:                                               ; preds = %69
  %77 = add i32 %70, -8
  %78 = icmp eq i32 %67, 0
  br i1 %78, label %92, label %79, !prof !2

79:                                               ; preds = %76
  %80 = zext i8 %51 to i64
  %81 = shl nuw nsw i64 %80, 24
  %82 = zext i8 %55 to i64
  %83 = shl nuw nsw i64 %82, 16
  %84 = or i64 %83, %81
  %85 = zext i8 %60 to i64
  %86 = shl nuw nsw i64 %85, 8
  %87 = or i64 %84, %86
  %88 = zext i8 %65 to i64
  %89 = or i64 %87, %88
  %90 = getelementptr inbounds %"struct.OT::SBIXStrike", %"struct.OT::SBIXStrike"* %0, i64 0, i32 0, i32 0, i32 0, i64 %89
  %91 = bitcast i8* %90 to %"struct.OT::SBIXGlyph"*
  br label %92

92:                                               ; preds = %76, %79
  %93 = phi %"struct.OT::SBIXGlyph"* [ %91, %79 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::SBIXGlyph"*), %76 ]
  %94 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw i32 %96, 24
  %98 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %97
  %103 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  %107 = or i32 %102, %106
  %108 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = or i32 %107, %110
  %112 = icmp eq i32 %111, 1685418085
  br i1 %112, label %113, label %125

113:                                              ; preds = %92
  %114 = icmp ugt i32 %77, 1
  br i1 %114, label %115, label %123

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 3
  %117 = bitcast %"struct.OT::UnsizedArrayOf.287"* %116 to i16*
  %118 = load i16, i16* %117, align 1
  %119 = tail call i16 @llvm.bswap.i16(i16 %118) #10
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 %26, -1
  %122 = icmp eq i32 %26, 0
  br i1 %122, label %123, label %24

123:                                              ; preds = %115, %113
  %124 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %153

125:                                              ; preds = %92
  %126 = add i32 %22, 8
  %127 = add i32 %126, %67
  %128 = icmp eq i32 %111, %3
  br i1 %128, label %131, label %129, !prof !3

129:                                              ; preds = %125
  %130 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %153

131:                                              ; preds = %125
  %132 = icmp eq i32* %7, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %131
  %134 = tail call i16 @llvm.bswap.i16(i16 %10) #10
  %135 = zext i16 %134 to i32
  store i32 %135, i32* %7, align 4
  br label %136

136:                                              ; preds = %131, %133
  %137 = icmp eq i32* %4, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %136
  %139 = bitcast %"struct.OT::SBIXGlyph"* %93 to i16*
  %140 = load i16, i16* %139, align 1
  %141 = tail call i16 @llvm.bswap.i16(i16 %140) #10
  %142 = sext i16 %141 to i32
  store i32 %142, i32* %4, align 4
  br label %143

143:                                              ; preds = %136, %138
  %144 = icmp eq i32* %5, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"struct.OT::SBIXGlyph", %"struct.OT::SBIXGlyph"* %93, i64 0, i32 1
  %147 = bitcast %"struct.OT::IntType.281"* %146 to i16*
  %148 = load i16, i16* %147, align 1
  %149 = tail call i16 @llvm.bswap.i16(i16 %148) #10
  %150 = sext i16 %149 to i32
  store i32 %150, i32* %5, align 4
  br label %151

151:                                              ; preds = %143, %145
  %152 = tail call %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t* %2, i32 %127, i32 %77) #10
  br label %153

153:                                              ; preds = %151, %129, %123, %74, %12
  %154 = phi %struct.hb_blob_t* [ %13, %12 ], [ %75, %74 ], [ %152, %151 ], [ %130, %129 ], [ %124, %123 ]
  ret %struct.hb_blob_t* %154
}

declare %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::cff1_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18cff1_accelerator_tE21hb_face_lazy_loader_tIS1_Lj13EE9hb_face_tLj13ES1_E10get_storedEv(%struct.hb_lazy_loader_t.68*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.68, %struct.hb_lazy_loader_t.68* %0, i64 -13
  %3 = bitcast %struct.hb_lazy_loader_t.68* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.68* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::cff1_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %38, !prof !2

8:                                                ; preds = %1, %33
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 312) #10
  %13 = bitcast i8* %12 to %"struct.OT::cff1_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::cff1::accelerator_t"*
  tail call void @_ZN2OT4cff113accelerator_t4initEP9hb_face_t(%"struct.OT::cff1::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::cff1_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff1_accelerator_t"*), %"struct.OT::cff1_accelerator_t"* %13, !prof !2
  %19 = ptrtoint %"struct.OT::cff1_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %38, label %22, !prof !3

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::cff1_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %18, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.OT::cff1_accelerator_t", %"struct.OT::cff1_accelerator_t"* %18, i64 0, i32 0, i32 1, i32 0, i32 2
  %28 = bitcast %"struct.OT::cff1::accelerator_t::gname_t"** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #10
  %30 = bitcast %struct.hb_vector_t.89* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  %31 = bitcast %"struct.OT::cff1_accelerator_t"* %18 to %"struct.OT::cff1::accelerator_templ_t"*
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %31) #10
  %32 = bitcast %"struct.OT::cff1_accelerator_t"* %18 to i8*
  tail call void @free(i8* %32) #10
  br label %33

33:                                               ; preds = %25, %22
  %34 = load atomic i64, i64* %4 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %8, label %36, !prof !2

36:                                               ; preds = %33
  %37 = inttoptr i64 %34 to %"struct.OT::cff1_accelerator_t"*
  br label %38

38:                                               ; preds = %8, %17, %36, %1
  %39 = phi %"struct.OT::cff1_accelerator_t"* [ %37, %36 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff1_accelerator_t"*), %8 ]
  ret %"struct.OT::cff1_accelerator_t"* %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cff113accelerator_t4initEP9hb_face_t(%"struct.OT::cff1::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.OT::cff1::accelerator_t"* %0 to %"struct.OT::cff1::accelerator_templ_t"*
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t(%"struct.OT::cff1::accelerator_templ_t"* %3, %struct.hb_face_t* %1)
  %4 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 0
  %5 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  %6 = icmp eq %struct.hb_blob_t* %5, null
  br i1 %6, label %119, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 13, i32 1, i32 0, i64 9
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %119

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %110, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 6
  %17 = bitcast %"struct.CFF::CFF1StringIndex"** %16 to %"struct.CFF::CFFIndex"**
  %18 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %struct.hb_vector_t.89, %struct.hb_vector_t.89* %18, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 2
  %22 = bitcast %"struct.OT::cff1::accelerator_t::gname_t"** %21 to i8**
  br label %23

23:                                               ; preds = %15, %103
  %24 = phi i32 [ 0, %15 ], [ %104, %103 ]
  %25 = tail call i32 @_ZNK2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE12glyph_to_sidEj(%"struct.OT::cff1::accelerator_templ_t"* %3, i32 %24)
  %26 = trunc i32 %25 to i16
  %27 = icmp ult i32 %25, 391
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = zext i32 %25 to i64
  %30 = getelementptr inbounds [392 x i32], [392 x i32]* @_ZL23cff1_std_strings_msgidx, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %union.cff1_std_strings_msgstr_t, %union.cff1_std_strings_msgstr_t* @_ZL23cff1_std_strings_msgstr, i64 0, i32 0, i32 0, i64 %32
  %34 = add nuw nsw i32 %25, 1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [392 x i32], [392 x i32]* @_ZL23cff1_std_strings_msgidx, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = xor i32 %31, -1
  %39 = add i32 %37, %38
  br label %47

40:                                               ; preds = %23
  %41 = load %"struct.CFF::CFFIndex"*, %"struct.CFF::CFFIndex"** %17, align 8
  %42 = add i32 %25, -391
  %43 = tail call { i8*, i64 } @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEEixEj(%"struct.CFF::CFFIndex"* %41, i32 %42)
  %44 = extractvalue { i8*, i64 } %43, 0
  %45 = extractvalue { i8*, i64 } %43, 1
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %40, %28
  %48 = phi i32 [ %39, %28 ], [ %46, %40 ]
  %49 = phi i8* [ %33, %28 ], [ %44, %40 ]
  %50 = icmp eq i8* %49, null
  br i1 %50, label %107, label %51, !prof !2

51:                                               ; preds = %47
  %52 = load i32, i32* %19, align 4
  %53 = add i32 %52, 1
  %54 = icmp sgt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 0
  %56 = load i32, i32* %20, align 8
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %90, label %58, !prof !2

58:                                               ; preds = %51
  %59 = icmp ult i32 %56, %55
  br i1 %59, label %60, label %79, !prof !2

60:                                               ; preds = %58, %60
  %61 = phi i32 [ %64, %60 ], [ %56, %58 ]
  %62 = lshr i32 %61, 1
  %63 = add i32 %61, 8
  %64 = add i32 %63, %62
  %65 = icmp ugt i32 %64, %55
  br i1 %65, label %66, label %60

66:                                               ; preds = %60
  %67 = icmp uge i32 %64, %56
  %68 = icmp ult i32 %64, 178956970
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %76, !prof !21

70:                                               ; preds = %66
  %71 = load i8*, i8** %22, align 8
  %72 = zext i32 %64 to i64
  %73 = mul nuw nsw i64 %72, 24
  %74 = tail call i8* @realloc(i8* %71, i64 %73) #10
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %70, %66
  store i32 -1, i32* %20, align 8
  br label %90

77:                                               ; preds = %70
  store i8* %74, i8** %22, align 8
  store i32 %64, i32* %20, align 8
  %78 = load i32, i32* %19, align 4
  br label %79

79:                                               ; preds = %77, %58
  %80 = phi i32 [ %78, %77 ], [ %52, %58 ]
  %81 = icmp ugt i32 %55, %80
  br i1 %81, label %82, label %91

82:                                               ; preds = %79
  %83 = load %"struct.OT::cff1::accelerator_t::gname_t"*, %"struct.OT::cff1::accelerator_t::gname_t"** %21, align 8
  %84 = zext i32 %80 to i64
  %85 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %83, i64 %84
  %86 = bitcast %"struct.OT::cff1::accelerator_t::gname_t"* %85 to i8*
  %87 = sub i32 %55, %80
  %88 = zext i32 %87 to i64
  %89 = mul nuw nsw i64 %88, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 %89, i1 false) #10
  br label %91

90:                                               ; preds = %76, %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 24, i1 false) #10
  br label %103

91:                                               ; preds = %82, %79
  store i32 %55, i32* %19, align 4
  %92 = load %"struct.OT::cff1::accelerator_t::gname_t"*, %"struct.OT::cff1::accelerator_t::gname_t"** %21, align 8
  %93 = add nsw i32 %55, -1
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %92, i64 %94
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 24, i1 false) #10
  %96 = icmp eq %"struct.OT::cff1::accelerator_t::gname_t"* %95, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.OT::cff1::accelerator_t::gname_t"*)
  br i1 %96, label %103, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %95, i64 0, i32 0, i32 0
  store i8* %49, i8** %98, align 8
  %99 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %92, i64 %94, i32 0, i32 1
  %100 = bitcast i32* %99 to i64*
  %101 = zext i32 %48 to i64
  store i64 %101, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %92, i64 %94, i32 1
  store i16 %26, i16* %102, align 8
  br label %103

103:                                              ; preds = %90, %91, %97
  %104 = add nuw i32 %24, 1
  %105 = load i32, i32* %12, align 8
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %23, label %110

107:                                              ; preds = %47
  %108 = load i8*, i8** %22, align 8
  tail call void @free(i8* %108) #10
  %109 = bitcast %struct.hb_vector_t.89* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #10
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %3) #10
  br label %119

110:                                              ; preds = %103, %11
  %111 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %119, label %114, !prof !2

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 2
  %116 = bitcast %"struct.OT::cff1::accelerator_t::gname_t"** %115 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = zext i32 %112 to i64
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %117, i64 %118, i64 24) #10
  br label %119

119:                                              ; preds = %110, %7, %2, %114, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t(%"struct.OT::cff1::accelerator_templ_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::dict_interpreter_t", align 8
  %4 = alloca %"struct.CFF::dict_interpreter_t.347", align 8
  %5 = alloca %"struct.CFF::dict_interpreter_t.349", align 8
  %6 = alloca %"struct.CFF::dict_interpreter_t.349", align 8
  %7 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %struct.hb_vector_t.80* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 1
  %12 = bitcast %"struct.CFF::name_dict_values_t"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 44, i1 false) #10
  %13 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 4
  store i32 8720, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 5
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 11
  %19 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false)
  %20 = load i8, i8* %18, align 4, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  %24 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  store i32 %23, i32* %24, align 8
  store i8 1, i8* %18, align 4
  br label %25

25:                                               ; preds = %2, %22
  %26 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1128678944) #10
  %27 = tail call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff1EEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* %17, %struct.hb_blob_t* %26) #10
  %28 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 0
  store %struct.hb_blob_t* %27, %struct.hb_blob_t** %28, align 8
  %29 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %27) #10
  %30 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 9
  store %struct.hb_blob_t* %29, %struct.hb_blob_t** %30, align 8
  %31 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %29, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 2
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %29, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %33, i64 %37
  %39 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 3
  store i8* %38, i8** %39, align 8
  %40 = icmp ugt i32 %36, 67108862
  br i1 %40, label %47, label %41, !prof !2

41:                                               ; preds = %25
  %42 = shl i32 %36, 6
  %43 = icmp ugt i32 %42, 16384
  %44 = select i1 %43, i32 %42, i32 16384
  %45 = icmp ult i32 %44, 1073741823
  %46 = select i1 %45, i32 %44, i32 1073741823
  br label %47

47:                                               ; preds = %25, %41
  %48 = phi i32 [ %46, %41 ], [ 1073741823, %25 ]
  %49 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 4
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 8
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %17, i64 0, i32 0, i32 0
  store i32 0, i32* %51, align 8
  %52 = load %struct.hb_blob_t*, %struct.hb_blob_t** %28, align 8
  %53 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %52, i64 0, i32 1
  %54 = bitcast i8** %53 to %"struct.OT::cff1"**
  %55 = load %"struct.OT::cff1"*, %"struct.OT::cff1"** %54, align 8
  %56 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %52, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = icmp ult i32 %57, 4
  %59 = icmp eq %"struct.OT::cff1"* %55, bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff1"*)
  %60 = or i1 %59, %58
  br i1 %60, label %61, label %62

61:                                               ; preds = %47
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.OT::cff1", %"struct.OT::cff1"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.OT::cff1", %"struct.OT::cff1"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  %68 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 4
  %69 = bitcast %"struct.CFF::CFFIndex"** %68 to i8**
  store i8* %67, i8** %69, align 8
  %70 = icmp eq i8* %67, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %70, label %74, label %71

71:                                               ; preds = %62
  %72 = bitcast i8* %67 to %"struct.CFF::CFFIndex"*
  %73 = tail call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %72, %struct.hb_sanitize_context_t* %17)
  br i1 %73, label %75, label %74

74:                                               ; preds = %71, %62
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

75:                                               ; preds = %71
  %76 = load %"struct.CFF::CFFIndex"*, %"struct.CFF::CFFIndex"** %68, align 8
  %77 = icmp eq %"struct.CFF::CFFIndex"* %76, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex"*)
  br i1 %77, label %148, label %78

78:                                               ; preds = %75
  %79 = bitcast %"struct.CFF::CFFIndex"* %76 to i16*
  %80 = load i16, i16* %79, align 1
  %81 = tail call i16 @llvm.bswap.i16(i16 %80) #10
  %82 = zext i16 %81 to i32
  %83 = icmp eq i16 %80, 0
  br i1 %83, label %148, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %76, i64 0, i32 1, i32 0, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = add nuw nsw i32 %82, 1
  %89 = mul nuw nsw i32 %88, %87
  %90 = icmp eq i8 %86, 0
  br i1 %90, label %144, label %91

91:                                               ; preds = %84
  %92 = mul nuw nsw i32 %87, %82
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %76, i64 0, i32 2, i64 %93
  %95 = add nsw i32 %87, -1
  %96 = and i32 %87, 3
  %97 = icmp ult i32 %95, 3
  br i1 %97, label %127, label %98

98:                                               ; preds = %91
  %99 = sub nsw i32 %87, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i32 [ 0, %98 ], [ %124, %100 ]
  %102 = phi %"struct.OT::IntType.6"* [ %94, %98 ], [ %120, %100 ]
  %103 = phi i32 [ %99, %98 ], [ %125, %100 ]
  %104 = shl i32 %101, 8
  %105 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %102, i64 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = or i32 %104, %107
  %109 = shl i32 %108, 8
  %110 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %102, i64 1, i32 0, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = or i32 %109, %112
  %114 = shl i32 %113, 8
  %115 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %102, i64 2, i32 0, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  %119 = shl i32 %118, 8
  %120 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %102, i64 4
  %121 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %102, i64 3, i32 0, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = or i32 %119, %123
  %125 = add i32 %103, -4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %100

127:                                              ; preds = %100, %91
  %128 = phi i32 [ undef, %91 ], [ %124, %100 ]
  %129 = phi i32 [ 0, %91 ], [ %124, %100 ]
  %130 = phi %"struct.OT::IntType.6"* [ %94, %91 ], [ %120, %100 ]
  %131 = icmp eq i32 %96, 0
  br i1 %131, label %144, label %132

132:                                              ; preds = %127, %132
  %133 = phi i32 [ %141, %132 ], [ %129, %127 ]
  %134 = phi %"struct.OT::IntType.6"* [ %137, %132 ], [ %130, %127 ]
  %135 = phi i32 [ %142, %132 ], [ %96, %127 ]
  %136 = shl i32 %133, 8
  %137 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %134, i64 1
  %138 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %134, i64 0, i32 0, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = or i32 %136, %140
  %142 = add i32 %135, -1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %132, !llvm.loop !33

144:                                              ; preds = %127, %132, %84
  %145 = phi i32 [ 0, %84 ], [ %128, %127 ], [ %141, %132 ]
  %146 = add nuw nsw i32 %89, 2
  %147 = add i32 %146, %145
  br label %148

148:                                              ; preds = %75, %78, %144
  %149 = phi i32 [ %147, %144 ], [ 0, %75 ], [ 2, %78 ]
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %76, i64 0, i32 0, i32 0, i32 0, i64 %150
  %152 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 5
  %153 = bitcast %"struct.CFF::CFF1IndexOf"** %152 to i8**
  store i8* %151, i8** %153, align 8
  %154 = icmp eq i8* %151, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %154, label %164, label %155

155:                                              ; preds = %148
  %156 = bitcast i8* %151 to %"struct.CFF::CFFIndex"*
  %157 = tail call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %156, %struct.hb_sanitize_context_t* %17)
  br i1 %157, label %158, label %164

158:                                              ; preds = %155
  %159 = bitcast %"struct.CFF::CFF1IndexOf"** %152 to i16**
  %160 = load i16*, i16** %159, align 8
  %161 = load i16, i16* %160, align 1
  %162 = icmp eq i16 %161, 0
  %163 = bitcast i16* %160 to %"struct.CFF::CFFIndexOf"*
  br i1 %162, label %164, label %165

164:                                              ; preds = %158, %155, %148
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

165:                                              ; preds = %158
  %166 = tail call i16 @llvm.bswap.i16(i16 %161) #10
  %167 = getelementptr inbounds %"struct.CFF::CFFIndexOf", %"struct.CFF::CFFIndexOf"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %168 = getelementptr inbounds i16, i16* %160, i64 1
  %169 = bitcast i16* %168 to i8*
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = zext i16 %166 to i64
  %173 = add nuw nsw i64 %172, 1
  %174 = mul nuw nsw i64 %173, %171
  %175 = getelementptr inbounds i8, i8* %167, i64 %174
  %176 = icmp eq i8 %170, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %165
  %178 = getelementptr inbounds i8, i8* %175, i64 -1
  br label %551

179:                                              ; preds = %165
  %180 = zext i8 %170 to i32
  %181 = getelementptr inbounds %"struct.CFF::CFFIndexOf", %"struct.CFF::CFFIndexOf"* %163, i64 0, i32 0, i32 2, i64 0
  %182 = add nsw i32 %180, -1
  %183 = and i32 %180, 3
  %184 = icmp ult i32 %182, 3
  br i1 %184, label %214, label %185

185:                                              ; preds = %179
  %186 = sub nsw i32 %180, %183
  br label %187

187:                                              ; preds = %187, %185
  %188 = phi i32 [ 0, %185 ], [ %211, %187 ]
  %189 = phi %"struct.OT::IntType.6"* [ %181, %185 ], [ %207, %187 ]
  %190 = phi i32 [ %186, %185 ], [ %212, %187 ]
  %191 = shl i32 %188, 8
  %192 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %189, i64 0, i32 0, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = or i32 %191, %194
  %196 = shl i32 %195, 8
  %197 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %189, i64 1, i32 0, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = or i32 %196, %199
  %201 = shl i32 %200, 8
  %202 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %189, i64 2, i32 0, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = or i32 %201, %204
  %206 = shl i32 %205, 8
  %207 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %189, i64 4
  %208 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %189, i64 3, i32 0, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %206, %210
  %212 = add i32 %190, -4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %187

214:                                              ; preds = %187, %179
  %215 = phi i32 [ undef, %179 ], [ %211, %187 ]
  %216 = phi i32 [ 0, %179 ], [ %211, %187 ]
  %217 = phi %"struct.OT::IntType.6"* [ %181, %179 ], [ %207, %187 ]
  %218 = icmp eq i32 %183, 0
  br i1 %218, label %231, label %219

219:                                              ; preds = %214, %219
  %220 = phi i32 [ %228, %219 ], [ %216, %214 ]
  %221 = phi %"struct.OT::IntType.6"* [ %224, %219 ], [ %217, %214 ]
  %222 = phi i32 [ %229, %219 ], [ %183, %214 ]
  %223 = shl i32 %220, 8
  %224 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %221, i64 1
  %225 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %221, i64 0, i32 0, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = or i32 %223, %227
  %229 = add i32 %222, -1
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %219, !llvm.loop !34

231:                                              ; preds = %219, %214
  %232 = phi i32 [ %215, %214 ], [ %228, %219 ]
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds i8, i8* %175, i64 %233
  %235 = getelementptr inbounds i8, i8* %234, i64 -1
  br i1 %176, label %551, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"struct.CFF::CFFIndexOf", %"struct.CFF::CFFIndexOf"* %163, i64 0, i32 0, i32 2, i64 %171
  %238 = add nsw i32 %180, -1
  %239 = and i32 %180, 3
  %240 = icmp ult i32 %238, 3
  br i1 %240, label %270, label %241

241:                                              ; preds = %236
  %242 = sub nsw i32 %180, %239
  br label %243

243:                                              ; preds = %243, %241
  %244 = phi i32 [ 0, %241 ], [ %267, %243 ]
  %245 = phi %"struct.OT::IntType.6"* [ %237, %241 ], [ %263, %243 ]
  %246 = phi i32 [ %242, %241 ], [ %268, %243 ]
  %247 = shl i32 %244, 8
  %248 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %245, i64 0, i32 0, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = or i32 %247, %250
  %252 = shl i32 %251, 8
  %253 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %245, i64 1, i32 0, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = or i32 %252, %255
  %257 = shl i32 %256, 8
  %258 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %245, i64 2, i32 0, i32 0
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = or i32 %257, %260
  %262 = shl i32 %261, 8
  %263 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %245, i64 4
  %264 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %245, i64 3, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %262, %266
  %268 = add i32 %246, -4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %243

270:                                              ; preds = %243, %236
  %271 = phi i32 [ undef, %236 ], [ %267, %243 ]
  %272 = phi i32 [ 0, %236 ], [ %267, %243 ]
  %273 = phi %"struct.OT::IntType.6"* [ %237, %236 ], [ %263, %243 ]
  %274 = icmp eq i32 %239, 0
  br i1 %274, label %287, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32 [ %284, %275 ], [ %272, %270 ]
  %277 = phi %"struct.OT::IntType.6"* [ %280, %275 ], [ %273, %270 ]
  %278 = phi i32 [ %285, %275 ], [ %239, %270 ]
  %279 = shl i32 %276, 8
  %280 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %277, i64 1
  %281 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %277, i64 0, i32 0, i32 0
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %279, %283
  %285 = add i32 %278, -1
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %275, !llvm.loop !35

287:                                              ; preds = %275, %270
  %288 = phi i32 [ %271, %270 ], [ %284, %275 ]
  %289 = getelementptr inbounds %"struct.CFF::CFFIndexOf", %"struct.CFF::CFFIndexOf"* %163, i64 0, i32 0, i32 2, i64 0
  %290 = add nsw i32 %180, -1
  %291 = and i32 %180, 3
  %292 = icmp ult i32 %290, 3
  br i1 %292, label %322, label %293

293:                                              ; preds = %287
  %294 = sub nsw i32 %180, %291
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i32 [ 0, %293 ], [ %319, %295 ]
  %297 = phi %"struct.OT::IntType.6"* [ %289, %293 ], [ %315, %295 ]
  %298 = phi i32 [ %294, %293 ], [ %320, %295 ]
  %299 = shl i32 %296, 8
  %300 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %297, i64 0, i32 0, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = or i32 %299, %302
  %304 = shl i32 %303, 8
  %305 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %297, i64 1, i32 0, i32 0
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = or i32 %304, %307
  %309 = shl i32 %308, 8
  %310 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %297, i64 2, i32 0, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = or i32 %309, %312
  %314 = shl i32 %313, 8
  %315 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %297, i64 4
  %316 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %297, i64 3, i32 0, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = or i32 %314, %318
  %320 = add i32 %298, -4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %295

322:                                              ; preds = %295, %287
  %323 = phi i32 [ undef, %287 ], [ %319, %295 ]
  %324 = phi i32 [ 0, %287 ], [ %319, %295 ]
  %325 = phi %"struct.OT::IntType.6"* [ %289, %287 ], [ %315, %295 ]
  %326 = icmp eq i32 %291, 0
  br i1 %326, label %339, label %327

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %336, %327 ], [ %324, %322 ]
  %329 = phi %"struct.OT::IntType.6"* [ %332, %327 ], [ %325, %322 ]
  %330 = phi i32 [ %337, %327 ], [ %291, %322 ]
  %331 = shl i32 %328, 8
  %332 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %329, i64 1
  %333 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %329, i64 0, i32 0, i32 0
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i32
  %336 = or i32 %331, %335
  %337 = add i32 %330, -1
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %327, !llvm.loop !36

339:                                              ; preds = %327, %322
  %340 = phi i32 [ %323, %322 ], [ %336, %327 ]
  %341 = icmp ult i32 %288, %340
  br i1 %341, label %556, label %342, !prof !2

342:                                              ; preds = %339
  %343 = add nsw i32 %180, -1
  %344 = and i32 %180, 3
  %345 = icmp ult i32 %343, 3
  br i1 %345, label %375, label %346

346:                                              ; preds = %342
  %347 = sub nsw i32 %180, %344
  br label %348

348:                                              ; preds = %348, %346
  %349 = phi i32 [ 0, %346 ], [ %372, %348 ]
  %350 = phi %"struct.OT::IntType.6"* [ %237, %346 ], [ %368, %348 ]
  %351 = phi i32 [ %347, %346 ], [ %373, %348 ]
  %352 = shl i32 %349, 8
  %353 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %350, i64 0, i32 0, i32 0
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = or i32 %352, %355
  %357 = shl i32 %356, 8
  %358 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %350, i64 1, i32 0, i32 0
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = or i32 %357, %360
  %362 = shl i32 %361, 8
  %363 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %350, i64 2, i32 0, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = or i32 %362, %365
  %367 = shl i32 %366, 8
  %368 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %350, i64 4
  %369 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %350, i64 3, i32 0, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = or i32 %367, %371
  %373 = add i32 %351, -4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %348

375:                                              ; preds = %348, %342
  %376 = phi i32 [ undef, %342 ], [ %372, %348 ]
  %377 = phi i32 [ 0, %342 ], [ %372, %348 ]
  %378 = phi %"struct.OT::IntType.6"* [ %237, %342 ], [ %368, %348 ]
  %379 = icmp eq i32 %344, 0
  br i1 %379, label %392, label %380

380:                                              ; preds = %375, %380
  %381 = phi i32 [ %389, %380 ], [ %377, %375 ]
  %382 = phi %"struct.OT::IntType.6"* [ %385, %380 ], [ %378, %375 ]
  %383 = phi i32 [ %390, %380 ], [ %344, %375 ]
  %384 = shl i32 %381, 8
  %385 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %382, i64 1
  %386 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %382, i64 0, i32 0, i32 0
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i32
  %389 = or i32 %384, %388
  %390 = add i32 %383, -1
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %380, !llvm.loop !37

392:                                              ; preds = %380, %375
  %393 = phi i32 [ %376, %375 ], [ %389, %380 ]
  %394 = zext i16 %166 to i32
  %395 = mul nuw nsw i32 %180, %394
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds %"struct.CFF::CFFIndexOf", %"struct.CFF::CFFIndexOf"* %163, i64 0, i32 0, i32 2, i64 %396
  %398 = add nsw i32 %180, -1
  %399 = and i32 %180, 3
  %400 = icmp ult i32 %398, 3
  br i1 %400, label %430, label %401

401:                                              ; preds = %392
  %402 = sub nsw i32 %180, %399
  br label %403

403:                                              ; preds = %403, %401
  %404 = phi i32 [ 0, %401 ], [ %427, %403 ]
  %405 = phi %"struct.OT::IntType.6"* [ %397, %401 ], [ %423, %403 ]
  %406 = phi i32 [ %402, %401 ], [ %428, %403 ]
  %407 = shl i32 %404, 8
  %408 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %405, i64 0, i32 0, i32 0
  %409 = load i8, i8* %408, align 1
  %410 = zext i8 %409 to i32
  %411 = or i32 %407, %410
  %412 = shl i32 %411, 8
  %413 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %405, i64 1, i32 0, i32 0
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = or i32 %412, %415
  %417 = shl i32 %416, 8
  %418 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %405, i64 2, i32 0, i32 0
  %419 = load i8, i8* %418, align 1
  %420 = zext i8 %419 to i32
  %421 = or i32 %417, %420
  %422 = shl i32 %421, 8
  %423 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %405, i64 4
  %424 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %405, i64 3, i32 0, i32 0
  %425 = load i8, i8* %424, align 1
  %426 = zext i8 %425 to i32
  %427 = or i32 %422, %426
  %428 = add i32 %406, -4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %403

430:                                              ; preds = %403, %392
  %431 = phi i32 [ undef, %392 ], [ %427, %403 ]
  %432 = phi i32 [ 0, %392 ], [ %427, %403 ]
  %433 = phi %"struct.OT::IntType.6"* [ %397, %392 ], [ %423, %403 ]
  %434 = icmp eq i32 %399, 0
  br i1 %434, label %447, label %435

435:                                              ; preds = %430, %435
  %436 = phi i32 [ %444, %435 ], [ %432, %430 ]
  %437 = phi %"struct.OT::IntType.6"* [ %440, %435 ], [ %433, %430 ]
  %438 = phi i32 [ %445, %435 ], [ %399, %430 ]
  %439 = shl i32 %436, 8
  %440 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %437, i64 1
  %441 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %437, i64 0, i32 0, i32 0
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i32
  %444 = or i32 %439, %443
  %445 = add i32 %438, -1
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %435, !llvm.loop !38

447:                                              ; preds = %435, %430
  %448 = phi i32 [ %431, %430 ], [ %444, %435 ]
  %449 = icmp ugt i32 %393, %448
  br i1 %449, label %556, label %450, !prof !2

450:                                              ; preds = %447
  %451 = add nsw i32 %180, -1
  %452 = and i32 %180, 3
  %453 = icmp ult i32 %451, 3
  br i1 %453, label %483, label %454

454:                                              ; preds = %450
  %455 = sub nsw i32 %180, %452
  br label %456

456:                                              ; preds = %456, %454
  %457 = phi i32 [ 0, %454 ], [ %480, %456 ]
  %458 = phi %"struct.OT::IntType.6"* [ %237, %454 ], [ %476, %456 ]
  %459 = phi i32 [ %455, %454 ], [ %481, %456 ]
  %460 = shl i32 %457, 8
  %461 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %458, i64 0, i32 0, i32 0
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = or i32 %460, %463
  %465 = shl i32 %464, 8
  %466 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %458, i64 1, i32 0, i32 0
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = or i32 %465, %468
  %470 = shl i32 %469, 8
  %471 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %458, i64 2, i32 0, i32 0
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = or i32 %470, %473
  %475 = shl i32 %474, 8
  %476 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %458, i64 4
  %477 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %458, i64 3, i32 0, i32 0
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  %480 = or i32 %475, %479
  %481 = add i32 %459, -4
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %456

483:                                              ; preds = %456, %450
  %484 = phi i32 [ undef, %450 ], [ %480, %456 ]
  %485 = phi i32 [ 0, %450 ], [ %480, %456 ]
  %486 = phi %"struct.OT::IntType.6"* [ %237, %450 ], [ %476, %456 ]
  %487 = icmp eq i32 %452, 0
  br i1 %487, label %500, label %488

488:                                              ; preds = %483, %488
  %489 = phi i32 [ %497, %488 ], [ %485, %483 ]
  %490 = phi %"struct.OT::IntType.6"* [ %493, %488 ], [ %486, %483 ]
  %491 = phi i32 [ %498, %488 ], [ %452, %483 ]
  %492 = shl i32 %489, 8
  %493 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %490, i64 1
  %494 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %490, i64 0, i32 0, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i32
  %497 = or i32 %492, %496
  %498 = add i32 %491, -1
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %488, !llvm.loop !39

500:                                              ; preds = %488, %483
  %501 = phi i32 [ %484, %483 ], [ %497, %488 ]
  %502 = add nsw i32 %180, -1
  %503 = and i32 %180, 3
  %504 = icmp ult i32 %502, 3
  br i1 %504, label %534, label %505

505:                                              ; preds = %500
  %506 = sub nsw i32 %180, %503
  br label %507

507:                                              ; preds = %507, %505
  %508 = phi i32 [ 0, %505 ], [ %531, %507 ]
  %509 = phi %"struct.OT::IntType.6"* [ %289, %505 ], [ %527, %507 ]
  %510 = phi i32 [ %506, %505 ], [ %532, %507 ]
  %511 = shl i32 %508, 8
  %512 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %509, i64 0, i32 0, i32 0
  %513 = load i8, i8* %512, align 1
  %514 = zext i8 %513 to i32
  %515 = or i32 %511, %514
  %516 = shl i32 %515, 8
  %517 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %509, i64 1, i32 0, i32 0
  %518 = load i8, i8* %517, align 1
  %519 = zext i8 %518 to i32
  %520 = or i32 %516, %519
  %521 = shl i32 %520, 8
  %522 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %509, i64 2, i32 0, i32 0
  %523 = load i8, i8* %522, align 1
  %524 = zext i8 %523 to i32
  %525 = or i32 %521, %524
  %526 = shl i32 %525, 8
  %527 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %509, i64 4
  %528 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %509, i64 3, i32 0, i32 0
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = or i32 %526, %530
  %532 = add i32 %510, -4
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %507

534:                                              ; preds = %507, %500
  %535 = phi i32 [ undef, %500 ], [ %531, %507 ]
  %536 = phi i32 [ 0, %500 ], [ %531, %507 ]
  %537 = phi %"struct.OT::IntType.6"* [ %289, %500 ], [ %527, %507 ]
  %538 = icmp eq i32 %503, 0
  br i1 %538, label %551, label %539

539:                                              ; preds = %534, %539
  %540 = phi i32 [ %548, %539 ], [ %536, %534 ]
  %541 = phi %"struct.OT::IntType.6"* [ %544, %539 ], [ %537, %534 ]
  %542 = phi i32 [ %549, %539 ], [ %503, %534 ]
  %543 = shl i32 %540, 8
  %544 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %541, i64 1
  %545 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %541, i64 0, i32 0, i32 0
  %546 = load i8, i8* %545, align 1
  %547 = zext i8 %546 to i32
  %548 = or i32 %543, %547
  %549 = add i32 %542, -1
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %539, !llvm.loop !40

551:                                              ; preds = %534, %539, %177, %231
  %552 = phi i8* [ %235, %231 ], [ %178, %177 ], [ %235, %539 ], [ %235, %534 ]
  %553 = phi i32 [ 0, %231 ], [ 0, %177 ], [ %501, %539 ], [ %501, %534 ]
  %554 = phi i32 [ 0, %231 ], [ 0, %177 ], [ %535, %534 ], [ %548, %539 ]
  %555 = sub i32 %553, %554
  br label %556

556:                                              ; preds = %551, %447, %339
  %557 = phi i8* [ %552, %551 ], [ %235, %447 ], [ %235, %339 ]
  %558 = phi i32 [ %555, %551 ], [ 0, %447 ], [ 0, %339 ]
  %559 = zext i32 %558 to i64
  switch i32 %558, label %560 [
    i32 -1, label %576
    i32 0, label %577
  ]

560:                                              ; preds = %556
  %561 = load i8*, i8** %34, align 8
  %562 = icmp ugt i8* %561, %557
  br i1 %562, label %576, label %563, !prof !2

563:                                              ; preds = %560
  %564 = load i8*, i8** %39, align 8
  %565 = icmp ult i8* %564, %557
  br i1 %565, label %576, label %566, !prof !2

566:                                              ; preds = %563
  %567 = ptrtoint i8* %564 to i64
  %568 = ptrtoint i8* %557 to i64
  %569 = sub i64 %567, %568
  %570 = trunc i64 %569 to i32
  %571 = icmp ugt i32 %558, %570
  br i1 %571, label %576, label %572, !prof !2

572:                                              ; preds = %566
  %573 = load i32, i32* %49, align 8
  %574 = sub i32 %573, %558
  store i32 %574, i32* %49, align 8
  %575 = icmp sgt i32 %574, 0
  br i1 %575, label %577, label %576, !prof !3

576:                                              ; preds = %572, %556, %566, %563, %560
  tail call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

577:                                              ; preds = %556, %572
  %578 = bitcast %"struct.CFF::dict_interpreter_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %578) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %578, i8 -86, i64 64, i1 false)
  %579 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %579, align 4
  %580 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %580, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %578, i8 0, i64 49, i1 false) #10
  %581 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %557, i8** %581, align 8
  %582 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %583 = bitcast i32* %582 to i64*
  store i64 %559, i64* %583, align 8
  %584 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %584, align 8
  %585 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %585, align 4
  %586 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %586, align 8
  %587 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %588 = bitcast i32* %587 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %588, i8 0, i64 20, i1 false) #10
  %589 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %590 = tail call i8* @malloc(i64 4744) #10
  %591 = icmp eq i8* %590, null
  br i1 %591, label %592, label %593, !prof !2

592:                                              ; preds = %577
  store i32 -1, i32* %589, align 8
  br label %614

593:                                              ; preds = %577
  %594 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %595 = bitcast %"struct.CFF::number_t"** %594 to i8**
  store i8* %590, i8** %595, align 8
  store i32 593, i32* %589, align 8
  %596 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %590, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %596, align 4
  %597 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  br label %598

598:                                              ; preds = %607, %593
  %599 = phi i32 [ 513, %593 ], [ %611, %607 ]
  %600 = phi i64 [ 0, %593 ], [ %610, %607 ]
  %601 = zext i32 %599 to i64
  %602 = icmp ult i64 %600, %601
  br i1 %602, label %604, label %603, !prof !3

603:                                              ; preds = %598
  store i64 %597, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %607

604:                                              ; preds = %598
  %605 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %594, align 8
  %606 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %605, i64 %600
  br label %607

607:                                              ; preds = %604, %603
  %608 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %603 ], [ %606, %604 ]
  %609 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %608, i64 0, i32 0
  store double 0.000000e+00, double* %609, align 8
  %610 = add nuw nsw i64 %600, 1
  %611 = load i32, i32* %596, align 4
  %612 = zext i32 %611 to i64
  %613 = icmp ult i64 %610, %612
  br i1 %613, label %598, label %614

614:                                              ; preds = %607, %592
  %615 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %615, align 8
  store i32 0, i32* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 44, i1 false) #10
  store i32 0, i32* %13, align 8
  store i32 8720, i32* %14, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %616 = call zeroext i1 @_ZN3CFF18dict_interpreter_tINS_21cff1_top_dict_opset_tENS_22cff1_top_dict_values_tENS_26cff1_top_dict_interp_env_tEE9interpretERS2_(%"struct.CFF::dict_interpreter_t"* nonnull %3, %"struct.CFF::cff1_top_dict_values_t"* dereferenceable(112) %7)
  br i1 %616, label %621, label %617, !prof !3

617:                                              ; preds = %614
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  %618 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %619 = bitcast %"struct.CFF::number_t"** %618 to i8**
  %620 = load i8*, i8** %619, align 8
  call void @free(i8* %620) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %578) #10
  br label %1742

621:                                              ; preds = %614
  %622 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %623 = bitcast %"struct.CFF::number_t"** %622 to i8**
  %624 = load i8*, i8** %623, align 8
  call void @free(i8* %624) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %578) #10
  %625 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 6
  %626 = load i32, i32* %625, align 4
  %627 = icmp ult i32 %626, 3
  br i1 %627, label %628, label %630

628:                                              ; preds = %621
  %629 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 3
  store %"struct.CFF::Charset"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Charset"*), %"struct.CFF::Charset"** %629, align 8
  br label %640

630:                                              ; preds = %621
  %631 = zext i32 %626 to i64
  %632 = getelementptr inbounds i8, i8* %63, i64 %631
  %633 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 3
  %634 = bitcast %"struct.CFF::Charset"** %633 to i8**
  store i8* %632, i8** %634, align 8
  %635 = icmp eq i8* %632, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %635, label %639, label %636, !prof !2

636:                                              ; preds = %630
  %637 = bitcast i8* %632 to %"struct.CFF::Charset"*
  %638 = call zeroext i1 @_ZNK3CFF7Charset8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::Charset"* %637, %struct.hb_sanitize_context_t* %17)
  br i1 %638, label %640, label %639, !prof !3

639:                                              ; preds = %636, %630
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

640:                                              ; preds = %636, %628
  %641 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 11
  store i32 1, i32* %641, align 8
  %642 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 1, i32 0, i64 9
  %643 = load i32, i32* %642, align 4
  %644 = icmp eq i32 %643, -1
  br i1 %644, label %728, label %645

645:                                              ; preds = %640
  %646 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 0, i32 2
  %647 = load i32, i32* %646, align 4
  %648 = icmp eq i32 %647, 0
  %649 = zext i32 %647 to i64
  %650 = getelementptr inbounds i8, i8* %63, i64 %649
  %651 = bitcast i8* %650 to %"struct.CFF::CFF1FDArray"*
  %652 = select i1 %648, %"struct.CFF::CFF1FDArray"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDArray"*), %"struct.CFF::CFF1FDArray"* %651
  %653 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 9
  store %"struct.CFF::CFF1FDArray"* %652, %"struct.CFF::CFF1FDArray"** %653, align 8
  %654 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 7
  %655 = load i32, i32* %654, align 8
  %656 = icmp eq i32 %655, 0
  %657 = zext i32 %655 to i64
  %658 = getelementptr inbounds i8, i8* %63, i64 %657
  %659 = bitcast i8* %658 to %"struct.CFF::CFF1FDSelect"*
  %660 = select i1 %656, %"struct.CFF::CFF1FDSelect"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDSelect"*), %"struct.CFF::CFF1FDSelect"* %659
  %661 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 10
  store %"struct.CFF::CFF1FDSelect"* %660, %"struct.CFF::CFF1FDSelect"** %661, align 8
  %662 = icmp eq %"struct.CFF::CFF1FDArray"* %652, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDArray"*)
  br i1 %662, label %727, label %663, !prof !2

663:                                              ; preds = %645
  %664 = getelementptr inbounds %"struct.CFF::CFF1FDArray", %"struct.CFF::CFF1FDArray"* %652, i64 0, i32 0, i32 0, i32 0
  %665 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %664, %struct.hb_sanitize_context_t* %17)
  br i1 %665, label %666, label %727, !prof !3

666:                                              ; preds = %663
  %667 = load %"struct.CFF::CFF1FDSelect"*, %"struct.CFF::CFF1FDSelect"** %661, align 8
  %668 = icmp eq %"struct.CFF::CFF1FDSelect"* %667, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDSelect"*)
  br i1 %668, label %727, label %669, !prof !2

669:                                              ; preds = %666
  %670 = bitcast %"struct.CFF::CFF1FDArray"** %653 to i16**
  %671 = load i16*, i16** %670, align 8
  %672 = load i16, i16* %671, align 1
  %673 = call i16 @llvm.bswap.i16(i16 %672) #10
  %674 = zext i16 %673 to i32
  %675 = getelementptr inbounds %"struct.CFF::CFF1FDSelect", %"struct.CFF::CFF1FDSelect"* %667, i64 0, i32 0, i32 0, i32 0, i32 0
  %676 = load i8*, i8** %34, align 8
  %677 = icmp ugt i8* %676, %675
  br i1 %677, label %727, label %678, !prof !2

678:                                              ; preds = %669
  %679 = load i8*, i8** %39, align 8
  %680 = icmp ult i8* %679, %675
  br i1 %680, label %727, label %681, !prof !2

681:                                              ; preds = %678
  %682 = ptrtoint i8* %679 to i64
  %683 = ptrtoint %"struct.CFF::CFF1FDSelect"* %667 to i64
  %684 = sub i64 %682, %683
  %685 = trunc i64 %684 to i32
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %727, label %687, !prof !2

687:                                              ; preds = %681
  %688 = load i32, i32* %49, align 8
  %689 = add i32 %688, -1
  store i32 %689, i32* %49, align 8
  %690 = icmp sgt i32 %689, 0
  br i1 %690, label %691, label %727, !prof !3

691:                                              ; preds = %687
  %692 = load i8, i8* %675, align 1
  switch i8 %692, label %727 [
    i8 0, label %693
    i8 3, label %722
  ]

693:                                              ; preds = %691
  %694 = getelementptr inbounds %"struct.CFF::CFF1FDSelect", %"struct.CFF::CFF1FDSelect"* %667, i64 0, i32 0, i32 1
  %695 = bitcast %union.anon.78* %694 to %"struct.CFF::FDSelect0"*
  %696 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  %697 = load i32, i32* %696, align 8
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %732, label %699

699:                                              ; preds = %693
  %700 = zext i32 %697 to i64
  %701 = add i32 %688, -2
  %702 = zext i32 %701 to i64
  br label %705

703:                                              ; preds = %718
  %704 = icmp eq i64 %720, %700
  br i1 %704, label %732, label %705

705:                                              ; preds = %703, %699
  %706 = phi i32 [ %689, %699 ], [ %719, %703 ]
  %707 = phi i64 [ 0, %699 ], [ %720, %703 ]
  %708 = getelementptr inbounds %"struct.CFF::FDSelect0", %"struct.CFF::FDSelect0"* %695, i64 0, i32 0, i64 %707
  %709 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %708, i64 0, i32 0, i32 0
  %710 = icmp ugt i8* %676, %709
  %711 = icmp ult i8* %679, %709
  %712 = or i1 %710, %711
  br i1 %712, label %727, label %713, !prof !6

713:                                              ; preds = %705
  %714 = ptrtoint %"struct.OT::IntType.6"* %708 to i64
  %715 = sub i64 %682, %714
  %716 = trunc i64 %715 to i32
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %727, label %718, !prof !2

718:                                              ; preds = %713
  %719 = add i32 %706, -1
  store i32 %719, i32* %49, align 8
  %720 = add nuw nsw i64 %707, 1
  %721 = icmp eq i64 %707, %702
  br i1 %721, label %727, label %703, !prof !2

722:                                              ; preds = %691
  %723 = getelementptr inbounds %"struct.CFF::CFF1FDSelect", %"struct.CFF::CFF1FDSelect"* %667, i64 0, i32 0, i32 1, i32 0
  %724 = call zeroext i1 @_ZNK3CFF11FDSelect3_4IN2OT7IntTypeItLj2EEENS2_IhLj1EEEE8sanitizeEP21hb_sanitize_context_tj(%"struct.CFF::FDSelect3_4"* %723, %struct.hb_sanitize_context_t* %17, i32 %674) #10
  br i1 %724, label %725, label %727, !prof !3

725:                                              ; preds = %722
  %726 = load i16*, i16** %670, align 8
  br label %732

727:                                              ; preds = %705, %713, %718, %722, %669, %678, %681, %691, %687, %645, %663, %666
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

728:                                              ; preds = %640
  %729 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 9
  store %"struct.CFF::CFF1FDArray"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDArray"*), %"struct.CFF::CFF1FDArray"** %729, align 8
  %730 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 10
  store %"struct.CFF::CFF1FDSelect"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1FDSelect"*), %"struct.CFF::CFF1FDSelect"** %730, align 8
  %731 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 2
  store %"struct.CFF::Encoding"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Encoding"*), %"struct.CFF::Encoding"** %731, align 8
  br label %745

732:                                              ; preds = %703, %693, %725
  %733 = phi i16* [ %726, %725 ], [ %671, %693 ], [ %671, %703 ]
  %734 = load i16, i16* %733, align 1
  %735 = call i16 @llvm.bswap.i16(i16 %734) #10
  %736 = zext i16 %735 to i32
  store i32 %736, i32* %641, align 8
  %737 = load i32, i32* %642, align 4
  %738 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 2
  store %"struct.CFF::Encoding"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Encoding"*), %"struct.CFF::Encoding"** %738, align 8
  %739 = icmp eq i32 %737, -1
  br i1 %739, label %745, label %740

740:                                              ; preds = %732
  %741 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 3
  %742 = load %"struct.CFF::Charset"*, %"struct.CFF::Charset"** %741, align 8
  %743 = icmp eq %"struct.CFF::Charset"* %742, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Charset"*)
  br i1 %743, label %744, label %758, !prof !2

744:                                              ; preds = %740
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

745:                                              ; preds = %728, %732
  %746 = phi %"struct.CFF::Encoding"** [ %731, %728 ], [ %738, %732 ]
  %747 = load i32, i32* %15, align 8
  %748 = icmp ult i32 %747, 2
  br i1 %748, label %758, label %749

749:                                              ; preds = %745
  %750 = zext i32 %747 to i64
  %751 = getelementptr inbounds i8, i8* %63, i64 %750
  %752 = bitcast %"struct.CFF::Encoding"** %746 to i8**
  store i8* %751, i8** %752, align 8
  %753 = icmp eq i8* %751, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %753, label %757, label %754, !prof !2

754:                                              ; preds = %749
  %755 = bitcast i8* %751 to %"struct.CFF::Encoding"*
  %756 = call zeroext i1 @_ZNK3CFF8Encoding8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::Encoding"* %755, %struct.hb_sanitize_context_t* %17)
  br i1 %756, label %758, label %757, !prof !3

757:                                              ; preds = %754, %749
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

758:                                              ; preds = %754, %745, %740
  %759 = load %"struct.CFF::CFF1IndexOf"*, %"struct.CFF::CFF1IndexOf"** %152, align 8
  %760 = getelementptr inbounds %"struct.CFF::CFF1IndexOf", %"struct.CFF::CFF1IndexOf"* %759, i64 0, i32 0, i32 0
  %761 = icmp eq %"struct.CFF::CFFIndex"* %760, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex"*)
  br i1 %761, label %832, label %762

762:                                              ; preds = %758
  %763 = bitcast %"struct.CFF::CFF1IndexOf"* %759 to i16*
  %764 = load i16, i16* %763, align 1
  %765 = call i16 @llvm.bswap.i16(i16 %764) #10
  %766 = zext i16 %765 to i32
  %767 = icmp eq i16 %764, 0
  br i1 %767, label %832, label %768

768:                                              ; preds = %762
  %769 = getelementptr inbounds %"struct.CFF::CFF1IndexOf", %"struct.CFF::CFF1IndexOf"* %759, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %770 = load i8, i8* %769, align 1
  %771 = zext i8 %770 to i32
  %772 = add nuw nsw i32 %766, 1
  %773 = mul nuw nsw i32 %772, %771
  %774 = icmp eq i8 %770, 0
  br i1 %774, label %828, label %775

775:                                              ; preds = %768
  %776 = mul nuw nsw i32 %771, %766
  %777 = zext i32 %776 to i64
  %778 = getelementptr inbounds %"struct.CFF::CFF1IndexOf", %"struct.CFF::CFF1IndexOf"* %759, i64 0, i32 0, i32 0, i32 2, i64 %777
  %779 = add nsw i32 %771, -1
  %780 = and i32 %771, 3
  %781 = icmp ult i32 %779, 3
  br i1 %781, label %811, label %782

782:                                              ; preds = %775
  %783 = sub nsw i32 %771, %780
  br label %784

784:                                              ; preds = %784, %782
  %785 = phi i32 [ 0, %782 ], [ %808, %784 ]
  %786 = phi %"struct.OT::IntType.6"* [ %778, %782 ], [ %804, %784 ]
  %787 = phi i32 [ %783, %782 ], [ %809, %784 ]
  %788 = shl i32 %785, 8
  %789 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %786, i64 0, i32 0, i32 0
  %790 = load i8, i8* %789, align 1
  %791 = zext i8 %790 to i32
  %792 = or i32 %788, %791
  %793 = shl i32 %792, 8
  %794 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %786, i64 1, i32 0, i32 0
  %795 = load i8, i8* %794, align 1
  %796 = zext i8 %795 to i32
  %797 = or i32 %793, %796
  %798 = shl i32 %797, 8
  %799 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %786, i64 2, i32 0, i32 0
  %800 = load i8, i8* %799, align 1
  %801 = zext i8 %800 to i32
  %802 = or i32 %798, %801
  %803 = shl i32 %802, 8
  %804 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %786, i64 4
  %805 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %786, i64 3, i32 0, i32 0
  %806 = load i8, i8* %805, align 1
  %807 = zext i8 %806 to i32
  %808 = or i32 %803, %807
  %809 = add i32 %787, -4
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %784

811:                                              ; preds = %784, %775
  %812 = phi i32 [ undef, %775 ], [ %808, %784 ]
  %813 = phi i32 [ 0, %775 ], [ %808, %784 ]
  %814 = phi %"struct.OT::IntType.6"* [ %778, %775 ], [ %804, %784 ]
  %815 = icmp eq i32 %780, 0
  br i1 %815, label %828, label %816

816:                                              ; preds = %811, %816
  %817 = phi i32 [ %825, %816 ], [ %813, %811 ]
  %818 = phi %"struct.OT::IntType.6"* [ %821, %816 ], [ %814, %811 ]
  %819 = phi i32 [ %826, %816 ], [ %780, %811 ]
  %820 = shl i32 %817, 8
  %821 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %818, i64 1
  %822 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %818, i64 0, i32 0, i32 0
  %823 = load i8, i8* %822, align 1
  %824 = zext i8 %823 to i32
  %825 = or i32 %820, %824
  %826 = add i32 %819, -1
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %828, label %816, !llvm.loop !41

828:                                              ; preds = %811, %816, %768
  %829 = phi i32 [ 0, %768 ], [ %812, %811 ], [ %825, %816 ]
  %830 = add nuw nsw i32 %773, 2
  %831 = add i32 %830, %829
  br label %832

832:                                              ; preds = %758, %762, %828
  %833 = phi i32 [ %831, %828 ], [ 0, %758 ], [ 2, %762 ]
  %834 = zext i32 %833 to i64
  %835 = getelementptr inbounds %"struct.CFF::CFF1IndexOf", %"struct.CFF::CFF1IndexOf"* %759, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %834
  %836 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 6
  %837 = bitcast %"struct.CFF::CFF1StringIndex"** %836 to i8**
  store i8* %835, i8** %837, align 8
  %838 = icmp eq i8* %835, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %838, label %842, label %839

839:                                              ; preds = %832
  %840 = bitcast i8* %835 to %"struct.CFF::CFFIndex"*
  %841 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %840, %struct.hb_sanitize_context_t* %17)
  br i1 %841, label %843, label %842

842:                                              ; preds = %839, %832
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

843:                                              ; preds = %839
  %844 = load %"struct.CFF::CFF1StringIndex"*, %"struct.CFF::CFF1StringIndex"** %836, align 8
  %845 = getelementptr inbounds %"struct.CFF::CFF1StringIndex", %"struct.CFF::CFF1StringIndex"* %844, i64 0, i32 0
  %846 = icmp eq %"struct.CFF::CFFIndex"* %845, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex"*)
  br i1 %846, label %917, label %847

847:                                              ; preds = %843
  %848 = bitcast %"struct.CFF::CFF1StringIndex"* %844 to i16*
  %849 = load i16, i16* %848, align 1
  %850 = call i16 @llvm.bswap.i16(i16 %849) #10
  %851 = zext i16 %850 to i32
  %852 = icmp eq i16 %849, 0
  br i1 %852, label %917, label %853

853:                                              ; preds = %847
  %854 = getelementptr inbounds %"struct.CFF::CFF1StringIndex", %"struct.CFF::CFF1StringIndex"* %844, i64 0, i32 0, i32 1, i32 0, i32 0
  %855 = load i8, i8* %854, align 1
  %856 = zext i8 %855 to i32
  %857 = add nuw nsw i32 %851, 1
  %858 = mul nuw nsw i32 %857, %856
  %859 = icmp eq i8 %855, 0
  br i1 %859, label %913, label %860

860:                                              ; preds = %853
  %861 = mul nuw nsw i32 %856, %851
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds %"struct.CFF::CFF1StringIndex", %"struct.CFF::CFF1StringIndex"* %844, i64 0, i32 0, i32 2, i64 %862
  %864 = add nsw i32 %856, -1
  %865 = and i32 %856, 3
  %866 = icmp ult i32 %864, 3
  br i1 %866, label %896, label %867

867:                                              ; preds = %860
  %868 = sub nsw i32 %856, %865
  br label %869

869:                                              ; preds = %869, %867
  %870 = phi i32 [ 0, %867 ], [ %893, %869 ]
  %871 = phi %"struct.OT::IntType.6"* [ %863, %867 ], [ %889, %869 ]
  %872 = phi i32 [ %868, %867 ], [ %894, %869 ]
  %873 = shl i32 %870, 8
  %874 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %871, i64 0, i32 0, i32 0
  %875 = load i8, i8* %874, align 1
  %876 = zext i8 %875 to i32
  %877 = or i32 %873, %876
  %878 = shl i32 %877, 8
  %879 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %871, i64 1, i32 0, i32 0
  %880 = load i8, i8* %879, align 1
  %881 = zext i8 %880 to i32
  %882 = or i32 %878, %881
  %883 = shl i32 %882, 8
  %884 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %871, i64 2, i32 0, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = zext i8 %885 to i32
  %887 = or i32 %883, %886
  %888 = shl i32 %887, 8
  %889 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %871, i64 4
  %890 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %871, i64 3, i32 0, i32 0
  %891 = load i8, i8* %890, align 1
  %892 = zext i8 %891 to i32
  %893 = or i32 %888, %892
  %894 = add i32 %872, -4
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %869

896:                                              ; preds = %869, %860
  %897 = phi i32 [ undef, %860 ], [ %893, %869 ]
  %898 = phi i32 [ 0, %860 ], [ %893, %869 ]
  %899 = phi %"struct.OT::IntType.6"* [ %863, %860 ], [ %889, %869 ]
  %900 = icmp eq i32 %865, 0
  br i1 %900, label %913, label %901

901:                                              ; preds = %896, %901
  %902 = phi i32 [ %910, %901 ], [ %898, %896 ]
  %903 = phi %"struct.OT::IntType.6"* [ %906, %901 ], [ %899, %896 ]
  %904 = phi i32 [ %911, %901 ], [ %865, %896 ]
  %905 = shl i32 %902, 8
  %906 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %903, i64 1
  %907 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %903, i64 0, i32 0, i32 0
  %908 = load i8, i8* %907, align 1
  %909 = zext i8 %908 to i32
  %910 = or i32 %905, %909
  %911 = add i32 %904, -1
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %913, label %901, !llvm.loop !42

913:                                              ; preds = %896, %901, %853
  %914 = phi i32 [ 0, %853 ], [ %897, %896 ], [ %910, %901 ]
  %915 = add nuw nsw i32 %858, 2
  %916 = add i32 %915, %914
  br label %917

917:                                              ; preds = %843, %847, %913
  %918 = phi i32 [ %916, %913 ], [ 0, %843 ], [ 2, %847 ]
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds %"struct.CFF::CFF1StringIndex", %"struct.CFF::CFF1StringIndex"* %844, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %919
  %921 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 7
  %922 = bitcast %"struct.CFF::Subrs"** %921 to i8**
  store i8* %920, i8** %922, align 8
  %923 = icmp eq i8* %920, bitcast ([48 x i64]* @_hb_NullPool to i8*)
  br i1 %923, label %928, label %924

924:                                              ; preds = %917
  %925 = bitcast i8* %920 to %"struct.CFF::CFFIndex"*
  %926 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %925, %struct.hb_sanitize_context_t* %17)
  br i1 %926, label %928, label %927

927:                                              ; preds = %924
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

928:                                              ; preds = %917, %924
  %929 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 0, i32 1
  %930 = load i32, i32* %929, align 8
  %931 = icmp eq i32 %930, 0
  %932 = zext i32 %930 to i64
  %933 = getelementptr inbounds i8, i8* %63, i64 %932
  %934 = bitcast i8* %933 to %"struct.CFF::CFFIndex"*
  %935 = select i1 %931, %"struct.CFF::CFFIndex"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex"*), %"struct.CFF::CFFIndex"* %934
  %936 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 8
  store %"struct.CFF::CFFIndex"* %935, %"struct.CFF::CFFIndex"** %936, align 8
  %937 = icmp eq %"struct.CFF::CFFIndex"* %935, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex"*)
  br i1 %937, label %940, label %938

938:                                              ; preds = %928
  %939 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %935, %struct.hb_sanitize_context_t* %17)
  br i1 %939, label %941, label %940, !prof !3

940:                                              ; preds = %938, %928
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

941:                                              ; preds = %938
  %942 = bitcast %"struct.CFF::CFFIndex"** %936 to i16**
  %943 = load i16*, i16** %942, align 8
  %944 = load i16, i16* %943, align 1
  %945 = call i16 @llvm.bswap.i16(i16 %944) #10
  %946 = zext i16 %945 to i32
  %947 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 16
  store i32 %946, i32* %947, align 8
  %948 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  %949 = load i32, i32* %948, align 8
  %950 = icmp eq i32 %949, %946
  br i1 %950, label %952, label %951

951:                                              ; preds = %941
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

952:                                              ; preds = %941
  %953 = load i32, i32* %641, align 8
  %954 = icmp sgt i32 %953, 0
  %955 = select i1 %954, i32 %953, i32 0
  %956 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 0
  %957 = load i32, i32* %956, align 8
  %958 = icmp slt i32 %957, 0
  br i1 %958, label %999, label %959, !prof !2

959:                                              ; preds = %952
  %960 = icmp ult i32 %957, %955
  br i1 %960, label %961, label %981, !prof !2

961:                                              ; preds = %959, %961
  %962 = phi i32 [ %965, %961 ], [ %957, %959 ]
  %963 = lshr i32 %962, 1
  %964 = add i32 %962, 8
  %965 = add i32 %964, %963
  %966 = icmp ugt i32 %965, %955
  br i1 %966, label %967, label %961

967:                                              ; preds = %961
  %968 = icmp uge i32 %965, %957
  %969 = icmp ult i32 %965, 107374182
  %970 = and i1 %968, %969
  br i1 %970, label %971, label %979, !prof !21

971:                                              ; preds = %967
  %972 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  %973 = bitcast %"struct.CFF::cff1_private_dict_values_base_t"** %972 to i8**
  %974 = load i8*, i8** %973, align 8
  %975 = zext i32 %965 to i64
  %976 = mul nuw nsw i64 %975, 40
  %977 = call i8* @realloc(i8* %974, i64 %976) #10
  %978 = icmp eq i8* %977, null
  br i1 %978, label %979, label %980, !prof !2

979:                                              ; preds = %971, %967
  store i32 -1, i32* %956, align 8
  br label %999

980:                                              ; preds = %971
  store i8* %977, i8** %973, align 8
  store i32 %965, i32* %956, align 8
  br label %981

981:                                              ; preds = %980, %959
  %982 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 1
  %983 = load i32, i32* %982, align 4
  %984 = icmp ugt i32 %955, %983
  br i1 %984, label %985, label %994

985:                                              ; preds = %981
  %986 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  %987 = load %"struct.CFF::cff1_private_dict_values_base_t"*, %"struct.CFF::cff1_private_dict_values_base_t"** %986, align 8
  %988 = zext i32 %983 to i64
  %989 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %987, i64 %988
  %990 = bitcast %"struct.CFF::cff1_private_dict_values_base_t"* %989 to i8*
  %991 = sub i32 %955, %983
  %992 = zext i32 %991 to i64
  %993 = mul nuw nsw i64 %992, 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %990, i8 0, i64 %993, i1 false) #10
  br label %994

994:                                              ; preds = %981, %985
  store i32 %955, i32* %982, align 4
  %995 = load i32, i32* %641, align 8
  %996 = icmp eq i32 %995, 0
  br i1 %996, label %1000, label %997

997:                                              ; preds = %994
  %998 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  br label %1044

999:                                              ; preds = %979, %952
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

1000:                                             ; preds = %1053, %994
  %1001 = phi i32 [ 0, %994 ], [ %1060, %1053 ]
  %1002 = load i32, i32* %642, align 4
  %1003 = icmp eq i32 %1002, -1
  br i1 %1003, label %1651, label %1004

1004:                                             ; preds = %1000
  %1005 = icmp eq i32 %1001, 0
  br i1 %1005, label %1742, label %1006

1006:                                             ; preds = %1004
  %1007 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 9
  %1008 = bitcast %"struct.CFF::CFF1FDArray"** %1007 to %"struct.CFF::CFFIndexOf.77"**
  %1009 = load i8*, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), align 16
  %1010 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 1), align 8
  %1011 = bitcast %"struct.CFF::dict_interpreter_t.347"* %4 to i8*
  %1012 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1013 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1014 = bitcast i32* %1013 to i64*
  %1015 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1016 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1017 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1018 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1019 = bitcast i32* %1018 to i8*
  %1020 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %1021 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1022 = bitcast %"struct.CFF::number_t"** %1021 to i8**
  %1023 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %1024 = ptrtoint i8* %1009 to i64
  %1025 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %4, i64 0, i32 0, i32 0, i32 2
  %1026 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14, i32 1
  %1027 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14, i32 0
  %1028 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14, i32 2
  %1029 = bitcast %"struct.CFF::cff1_font_dict_values_t"** %1028 to i8**
  %1030 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  %1031 = bitcast %"struct.CFF::dict_interpreter_t.349"* %5 to i8*
  %1032 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1033 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1034 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1035 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1036 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1037 = bitcast i32* %1036 to i8*
  %1038 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %1039 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1040 = bitcast %"struct.CFF::number_t"** %1039 to i8**
  %1041 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %1042 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %5, i64 0, i32 0, i32 0, i32 2
  %1043 = bitcast i32* %1034 to i8*
  br label %1069

1044:                                             ; preds = %1063, %997
  %1045 = phi i32 [ %955, %997 ], [ %1064, %1063 ]
  %1046 = phi i64 [ 0, %997 ], [ %1059, %1063 ]
  %1047 = zext i32 %1045 to i64
  %1048 = icmp ult i64 %1046, %1047
  br i1 %1048, label %1050, label %1049, !prof !3

1049:                                             ; preds = %1044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  br label %1053

1050:                                             ; preds = %1044
  %1051 = load %"struct.CFF::cff1_private_dict_values_base_t"*, %"struct.CFF::cff1_private_dict_values_base_t"** %998, align 8
  %1052 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1051, i64 %1046
  br label %1053

1053:                                             ; preds = %1049, %1050
  %1054 = phi %"struct.CFF::cff1_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_private_dict_values_base_t"*), %1049 ], [ %1052, %1050 ]
  %1055 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1054, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %1055, align 8
  %1056 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1054, i64 0, i32 0, i32 0, i32 1
  %1057 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1054, i64 0, i32 2
  %1058 = bitcast %struct.hb_vector_t.88* %1056 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1058, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"** %1057, align 8
  %1059 = add nuw nsw i64 %1046, 1
  %1060 = load i32, i32* %641, align 8
  %1061 = zext i32 %1060 to i64
  %1062 = icmp ult i64 %1059, %1061
  br i1 %1062, label %1063, label %1000

1063:                                             ; preds = %1053
  %1064 = load i32, i32* %982, align 4
  br label %1044

1065:                                             ; preds = %1646
  %1066 = load i32, i32* %641, align 8
  %1067 = zext i32 %1066 to i64
  %1068 = icmp ult i64 %1650, %1067
  br i1 %1068, label %1069, label %1742

1069:                                             ; preds = %1006, %1065
  %1070 = phi i64 [ 0, %1006 ], [ %1650, %1065 ]
  %1071 = load %"struct.CFF::CFFIndexOf.77"*, %"struct.CFF::CFFIndexOf.77"** %1008, align 8
  %1072 = bitcast %"struct.CFF::CFFIndexOf.77"* %1071 to i16*
  %1073 = load i16, i16* %1072, align 1
  %1074 = call i16 @llvm.bswap.i16(i16 %1073) #10
  %1075 = zext i16 %1074 to i32
  %1076 = zext i16 %1074 to i64
  %1077 = icmp ult i64 %1070, %1076
  br i1 %1077, label %1078, label %1473, !prof !3

1078:                                             ; preds = %1069
  %1079 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 1, i32 0, i32 0
  %1080 = load i8, i8* %1079, align 1
  %1081 = zext i8 %1080 to i64
  %1082 = zext i16 %1074 to i64
  %1083 = add nuw nsw i64 %1082, 1
  %1084 = mul nuw nsw i64 %1083, %1081
  %1085 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %1086 = zext i8 %1080 to i32
  %1087 = icmp eq i8 %1080, 0
  br i1 %1087, label %1088, label %1090

1088:                                             ; preds = %1078
  %1089 = getelementptr inbounds i8, i8* %1085, i64 %1084
  br label %1464

1090:                                             ; preds = %1078
  %1091 = trunc i64 %1070 to i32
  %1092 = mul i32 %1091, %1086
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 2, i64 %1093
  %1095 = add nsw i32 %1086, -1
  %1096 = and i32 %1086, 3
  %1097 = icmp ult i32 %1095, 3
  br i1 %1097, label %1127, label %1098

1098:                                             ; preds = %1090
  %1099 = sub nsw i32 %1086, %1096
  br label %1100

1100:                                             ; preds = %1100, %1098
  %1101 = phi i32 [ 0, %1098 ], [ %1124, %1100 ]
  %1102 = phi %"struct.OT::IntType.6"* [ %1094, %1098 ], [ %1120, %1100 ]
  %1103 = phi i32 [ %1099, %1098 ], [ %1125, %1100 ]
  %1104 = shl i32 %1101, 8
  %1105 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1102, i64 0, i32 0, i32 0
  %1106 = load i8, i8* %1105, align 1
  %1107 = zext i8 %1106 to i32
  %1108 = or i32 %1104, %1107
  %1109 = shl i32 %1108, 8
  %1110 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1102, i64 1, i32 0, i32 0
  %1111 = load i8, i8* %1110, align 1
  %1112 = zext i8 %1111 to i32
  %1113 = or i32 %1109, %1112
  %1114 = shl i32 %1113, 8
  %1115 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1102, i64 2, i32 0, i32 0
  %1116 = load i8, i8* %1115, align 1
  %1117 = zext i8 %1116 to i32
  %1118 = or i32 %1114, %1117
  %1119 = shl i32 %1118, 8
  %1120 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1102, i64 4
  %1121 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1102, i64 3, i32 0, i32 0
  %1122 = load i8, i8* %1121, align 1
  %1123 = zext i8 %1122 to i32
  %1124 = or i32 %1119, %1123
  %1125 = add i32 %1103, -4
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1127, label %1100

1127:                                             ; preds = %1100, %1090
  %1128 = phi i32 [ undef, %1090 ], [ %1124, %1100 ]
  %1129 = phi i32 [ 0, %1090 ], [ %1124, %1100 ]
  %1130 = phi %"struct.OT::IntType.6"* [ %1094, %1090 ], [ %1120, %1100 ]
  %1131 = icmp eq i32 %1096, 0
  br i1 %1131, label %1144, label %1132

1132:                                             ; preds = %1127, %1132
  %1133 = phi i32 [ %1141, %1132 ], [ %1129, %1127 ]
  %1134 = phi %"struct.OT::IntType.6"* [ %1137, %1132 ], [ %1130, %1127 ]
  %1135 = phi i32 [ %1142, %1132 ], [ %1096, %1127 ]
  %1136 = shl i32 %1133, 8
  %1137 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1134, i64 1
  %1138 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1134, i64 0, i32 0, i32 0
  %1139 = load i8, i8* %1138, align 1
  %1140 = zext i8 %1139 to i32
  %1141 = or i32 %1136, %1140
  %1142 = add i32 %1135, -1
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1144, label %1132, !llvm.loop !43

1144:                                             ; preds = %1132, %1127
  %1145 = phi i32 [ %1128, %1127 ], [ %1141, %1132 ]
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds i8, i8* %1085, i64 %1084
  %1148 = getelementptr inbounds i8, i8* %1147, i64 %1146
  br i1 %1087, label %1464, label %1149

1149:                                             ; preds = %1144
  %1150 = trunc i64 %1070 to i32
  %1151 = add i32 %1150, 1
  %1152 = mul i32 %1151, %1086
  %1153 = zext i32 %1152 to i64
  %1154 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 2, i64 %1153
  %1155 = and i32 %1086, 3
  %1156 = icmp ult i32 %1095, 3
  br i1 %1156, label %1186, label %1157

1157:                                             ; preds = %1149
  %1158 = sub nsw i32 %1086, %1155
  br label %1159

1159:                                             ; preds = %1159, %1157
  %1160 = phi i32 [ 0, %1157 ], [ %1183, %1159 ]
  %1161 = phi %"struct.OT::IntType.6"* [ %1154, %1157 ], [ %1179, %1159 ]
  %1162 = phi i32 [ %1158, %1157 ], [ %1184, %1159 ]
  %1163 = shl i32 %1160, 8
  %1164 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1161, i64 0, i32 0, i32 0
  %1165 = load i8, i8* %1164, align 1
  %1166 = zext i8 %1165 to i32
  %1167 = or i32 %1163, %1166
  %1168 = shl i32 %1167, 8
  %1169 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1161, i64 1, i32 0, i32 0
  %1170 = load i8, i8* %1169, align 1
  %1171 = zext i8 %1170 to i32
  %1172 = or i32 %1168, %1171
  %1173 = shl i32 %1172, 8
  %1174 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1161, i64 2, i32 0, i32 0
  %1175 = load i8, i8* %1174, align 1
  %1176 = zext i8 %1175 to i32
  %1177 = or i32 %1173, %1176
  %1178 = shl i32 %1177, 8
  %1179 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1161, i64 4
  %1180 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1161, i64 3, i32 0, i32 0
  %1181 = load i8, i8* %1180, align 1
  %1182 = zext i8 %1181 to i32
  %1183 = or i32 %1178, %1182
  %1184 = add i32 %1162, -4
  %1185 = icmp eq i32 %1184, 0
  br i1 %1185, label %1186, label %1159

1186:                                             ; preds = %1159, %1149
  %1187 = phi i32 [ undef, %1149 ], [ %1183, %1159 ]
  %1188 = phi i32 [ 0, %1149 ], [ %1183, %1159 ]
  %1189 = phi %"struct.OT::IntType.6"* [ %1154, %1149 ], [ %1179, %1159 ]
  %1190 = icmp eq i32 %1155, 0
  br i1 %1190, label %1203, label %1191

1191:                                             ; preds = %1186, %1191
  %1192 = phi i32 [ %1200, %1191 ], [ %1188, %1186 ]
  %1193 = phi %"struct.OT::IntType.6"* [ %1196, %1191 ], [ %1189, %1186 ]
  %1194 = phi i32 [ %1201, %1191 ], [ %1155, %1186 ]
  %1195 = shl i32 %1192, 8
  %1196 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1193, i64 1
  %1197 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1193, i64 0, i32 0, i32 0
  %1198 = load i8, i8* %1197, align 1
  %1199 = zext i8 %1198 to i32
  %1200 = or i32 %1195, %1199
  %1201 = add i32 %1194, -1
  %1202 = icmp eq i32 %1201, 0
  br i1 %1202, label %1203, label %1191, !llvm.loop !44

1203:                                             ; preds = %1191, %1186
  %1204 = phi i32 [ %1187, %1186 ], [ %1200, %1191 ]
  %1205 = trunc i64 %1070 to i32
  %1206 = mul i32 %1205, %1086
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 2, i64 %1207
  %1209 = and i32 %1086, 3
  %1210 = icmp ult i32 %1095, 3
  br i1 %1210, label %1240, label %1211

1211:                                             ; preds = %1203
  %1212 = sub nsw i32 %1086, %1209
  br label %1213

1213:                                             ; preds = %1213, %1211
  %1214 = phi i32 [ 0, %1211 ], [ %1237, %1213 ]
  %1215 = phi %"struct.OT::IntType.6"* [ %1208, %1211 ], [ %1233, %1213 ]
  %1216 = phi i32 [ %1212, %1211 ], [ %1238, %1213 ]
  %1217 = shl i32 %1214, 8
  %1218 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1215, i64 0, i32 0, i32 0
  %1219 = load i8, i8* %1218, align 1
  %1220 = zext i8 %1219 to i32
  %1221 = or i32 %1217, %1220
  %1222 = shl i32 %1221, 8
  %1223 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1215, i64 1, i32 0, i32 0
  %1224 = load i8, i8* %1223, align 1
  %1225 = zext i8 %1224 to i32
  %1226 = or i32 %1222, %1225
  %1227 = shl i32 %1226, 8
  %1228 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1215, i64 2, i32 0, i32 0
  %1229 = load i8, i8* %1228, align 1
  %1230 = zext i8 %1229 to i32
  %1231 = or i32 %1227, %1230
  %1232 = shl i32 %1231, 8
  %1233 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1215, i64 4
  %1234 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1215, i64 3, i32 0, i32 0
  %1235 = load i8, i8* %1234, align 1
  %1236 = zext i8 %1235 to i32
  %1237 = or i32 %1232, %1236
  %1238 = add i32 %1216, -4
  %1239 = icmp eq i32 %1238, 0
  br i1 %1239, label %1240, label %1213

1240:                                             ; preds = %1213, %1203
  %1241 = phi i32 [ undef, %1203 ], [ %1237, %1213 ]
  %1242 = phi i32 [ 0, %1203 ], [ %1237, %1213 ]
  %1243 = phi %"struct.OT::IntType.6"* [ %1208, %1203 ], [ %1233, %1213 ]
  %1244 = icmp eq i32 %1209, 0
  br i1 %1244, label %1257, label %1245

1245:                                             ; preds = %1240, %1245
  %1246 = phi i32 [ %1254, %1245 ], [ %1242, %1240 ]
  %1247 = phi %"struct.OT::IntType.6"* [ %1250, %1245 ], [ %1243, %1240 ]
  %1248 = phi i32 [ %1255, %1245 ], [ %1209, %1240 ]
  %1249 = shl i32 %1246, 8
  %1250 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1247, i64 1
  %1251 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1247, i64 0, i32 0, i32 0
  %1252 = load i8, i8* %1251, align 1
  %1253 = zext i8 %1252 to i32
  %1254 = or i32 %1249, %1253
  %1255 = add i32 %1248, -1
  %1256 = icmp eq i32 %1255, 0
  br i1 %1256, label %1257, label %1245, !llvm.loop !45

1257:                                             ; preds = %1245, %1240
  %1258 = phi i32 [ %1241, %1240 ], [ %1254, %1245 ]
  %1259 = icmp ult i32 %1204, %1258
  br i1 %1259, label %1469, label %1260, !prof !2

1260:                                             ; preds = %1257
  %1261 = and i32 %1086, 3
  %1262 = icmp ult i32 %1095, 3
  br i1 %1262, label %1292, label %1263

1263:                                             ; preds = %1260
  %1264 = sub nsw i32 %1086, %1261
  br label %1265

1265:                                             ; preds = %1265, %1263
  %1266 = phi i32 [ 0, %1263 ], [ %1289, %1265 ]
  %1267 = phi %"struct.OT::IntType.6"* [ %1154, %1263 ], [ %1285, %1265 ]
  %1268 = phi i32 [ %1264, %1263 ], [ %1290, %1265 ]
  %1269 = shl i32 %1266, 8
  %1270 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1267, i64 0, i32 0, i32 0
  %1271 = load i8, i8* %1270, align 1
  %1272 = zext i8 %1271 to i32
  %1273 = or i32 %1269, %1272
  %1274 = shl i32 %1273, 8
  %1275 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1267, i64 1, i32 0, i32 0
  %1276 = load i8, i8* %1275, align 1
  %1277 = zext i8 %1276 to i32
  %1278 = or i32 %1274, %1277
  %1279 = shl i32 %1278, 8
  %1280 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1267, i64 2, i32 0, i32 0
  %1281 = load i8, i8* %1280, align 1
  %1282 = zext i8 %1281 to i32
  %1283 = or i32 %1279, %1282
  %1284 = shl i32 %1283, 8
  %1285 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1267, i64 4
  %1286 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1267, i64 3, i32 0, i32 0
  %1287 = load i8, i8* %1286, align 1
  %1288 = zext i8 %1287 to i32
  %1289 = or i32 %1284, %1288
  %1290 = add i32 %1268, -4
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1292, label %1265

1292:                                             ; preds = %1265, %1260
  %1293 = phi i32 [ undef, %1260 ], [ %1289, %1265 ]
  %1294 = phi i32 [ 0, %1260 ], [ %1289, %1265 ]
  %1295 = phi %"struct.OT::IntType.6"* [ %1154, %1260 ], [ %1285, %1265 ]
  %1296 = icmp eq i32 %1261, 0
  br i1 %1296, label %1309, label %1297

1297:                                             ; preds = %1292, %1297
  %1298 = phi i32 [ %1306, %1297 ], [ %1294, %1292 ]
  %1299 = phi %"struct.OT::IntType.6"* [ %1302, %1297 ], [ %1295, %1292 ]
  %1300 = phi i32 [ %1307, %1297 ], [ %1261, %1292 ]
  %1301 = shl i32 %1298, 8
  %1302 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1299, i64 1
  %1303 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1299, i64 0, i32 0, i32 0
  %1304 = load i8, i8* %1303, align 1
  %1305 = zext i8 %1304 to i32
  %1306 = or i32 %1301, %1305
  %1307 = add i32 %1300, -1
  %1308 = icmp eq i32 %1307, 0
  br i1 %1308, label %1309, label %1297, !llvm.loop !46

1309:                                             ; preds = %1297, %1292
  %1310 = phi i32 [ %1293, %1292 ], [ %1306, %1297 ]
  %1311 = mul nuw nsw i32 %1075, %1086
  %1312 = zext i32 %1311 to i64
  %1313 = getelementptr inbounds %"struct.CFF::CFFIndexOf.77", %"struct.CFF::CFFIndexOf.77"* %1071, i64 0, i32 0, i32 2, i64 %1312
  %1314 = and i32 %1086, 3
  %1315 = icmp ult i32 %1095, 3
  br i1 %1315, label %1345, label %1316

1316:                                             ; preds = %1309
  %1317 = sub nsw i32 %1086, %1314
  br label %1318

1318:                                             ; preds = %1318, %1316
  %1319 = phi i32 [ 0, %1316 ], [ %1342, %1318 ]
  %1320 = phi %"struct.OT::IntType.6"* [ %1313, %1316 ], [ %1338, %1318 ]
  %1321 = phi i32 [ %1317, %1316 ], [ %1343, %1318 ]
  %1322 = shl i32 %1319, 8
  %1323 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1320, i64 0, i32 0, i32 0
  %1324 = load i8, i8* %1323, align 1
  %1325 = zext i8 %1324 to i32
  %1326 = or i32 %1322, %1325
  %1327 = shl i32 %1326, 8
  %1328 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1320, i64 1, i32 0, i32 0
  %1329 = load i8, i8* %1328, align 1
  %1330 = zext i8 %1329 to i32
  %1331 = or i32 %1327, %1330
  %1332 = shl i32 %1331, 8
  %1333 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1320, i64 2, i32 0, i32 0
  %1334 = load i8, i8* %1333, align 1
  %1335 = zext i8 %1334 to i32
  %1336 = or i32 %1332, %1335
  %1337 = shl i32 %1336, 8
  %1338 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1320, i64 4
  %1339 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1320, i64 3, i32 0, i32 0
  %1340 = load i8, i8* %1339, align 1
  %1341 = zext i8 %1340 to i32
  %1342 = or i32 %1337, %1341
  %1343 = add i32 %1321, -4
  %1344 = icmp eq i32 %1343, 0
  br i1 %1344, label %1345, label %1318

1345:                                             ; preds = %1318, %1309
  %1346 = phi i32 [ undef, %1309 ], [ %1342, %1318 ]
  %1347 = phi i32 [ 0, %1309 ], [ %1342, %1318 ]
  %1348 = phi %"struct.OT::IntType.6"* [ %1313, %1309 ], [ %1338, %1318 ]
  %1349 = icmp eq i32 %1314, 0
  br i1 %1349, label %1362, label %1350

1350:                                             ; preds = %1345, %1350
  %1351 = phi i32 [ %1359, %1350 ], [ %1347, %1345 ]
  %1352 = phi %"struct.OT::IntType.6"* [ %1355, %1350 ], [ %1348, %1345 ]
  %1353 = phi i32 [ %1360, %1350 ], [ %1314, %1345 ]
  %1354 = shl i32 %1351, 8
  %1355 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1352, i64 1
  %1356 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1352, i64 0, i32 0, i32 0
  %1357 = load i8, i8* %1356, align 1
  %1358 = zext i8 %1357 to i32
  %1359 = or i32 %1354, %1358
  %1360 = add i32 %1353, -1
  %1361 = icmp eq i32 %1360, 0
  br i1 %1361, label %1362, label %1350, !llvm.loop !47

1362:                                             ; preds = %1350, %1345
  %1363 = phi i32 [ %1346, %1345 ], [ %1359, %1350 ]
  %1364 = icmp ugt i32 %1310, %1363
  br i1 %1364, label %1469, label %1365, !prof !2

1365:                                             ; preds = %1362
  %1366 = and i32 %1086, 3
  %1367 = icmp ult i32 %1095, 3
  br i1 %1367, label %1397, label %1368

1368:                                             ; preds = %1365
  %1369 = sub nsw i32 %1086, %1366
  br label %1370

1370:                                             ; preds = %1370, %1368
  %1371 = phi i32 [ 0, %1368 ], [ %1394, %1370 ]
  %1372 = phi %"struct.OT::IntType.6"* [ %1154, %1368 ], [ %1390, %1370 ]
  %1373 = phi i32 [ %1369, %1368 ], [ %1395, %1370 ]
  %1374 = shl i32 %1371, 8
  %1375 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1372, i64 0, i32 0, i32 0
  %1376 = load i8, i8* %1375, align 1
  %1377 = zext i8 %1376 to i32
  %1378 = or i32 %1374, %1377
  %1379 = shl i32 %1378, 8
  %1380 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1372, i64 1, i32 0, i32 0
  %1381 = load i8, i8* %1380, align 1
  %1382 = zext i8 %1381 to i32
  %1383 = or i32 %1379, %1382
  %1384 = shl i32 %1383, 8
  %1385 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1372, i64 2, i32 0, i32 0
  %1386 = load i8, i8* %1385, align 1
  %1387 = zext i8 %1386 to i32
  %1388 = or i32 %1384, %1387
  %1389 = shl i32 %1388, 8
  %1390 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1372, i64 4
  %1391 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1372, i64 3, i32 0, i32 0
  %1392 = load i8, i8* %1391, align 1
  %1393 = zext i8 %1392 to i32
  %1394 = or i32 %1389, %1393
  %1395 = add i32 %1373, -4
  %1396 = icmp eq i32 %1395, 0
  br i1 %1396, label %1397, label %1370

1397:                                             ; preds = %1370, %1365
  %1398 = phi i32 [ undef, %1365 ], [ %1394, %1370 ]
  %1399 = phi i32 [ 0, %1365 ], [ %1394, %1370 ]
  %1400 = phi %"struct.OT::IntType.6"* [ %1154, %1365 ], [ %1390, %1370 ]
  %1401 = icmp eq i32 %1366, 0
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1397, %1402
  %1403 = phi i32 [ %1411, %1402 ], [ %1399, %1397 ]
  %1404 = phi %"struct.OT::IntType.6"* [ %1407, %1402 ], [ %1400, %1397 ]
  %1405 = phi i32 [ %1412, %1402 ], [ %1366, %1397 ]
  %1406 = shl i32 %1403, 8
  %1407 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1404, i64 1
  %1408 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1404, i64 0, i32 0, i32 0
  %1409 = load i8, i8* %1408, align 1
  %1410 = zext i8 %1409 to i32
  %1411 = or i32 %1406, %1410
  %1412 = add i32 %1405, -1
  %1413 = icmp eq i32 %1412, 0
  br i1 %1413, label %1414, label %1402, !llvm.loop !48

1414:                                             ; preds = %1402, %1397
  %1415 = phi i32 [ %1398, %1397 ], [ %1411, %1402 ]
  %1416 = and i32 %1086, 3
  %1417 = icmp ult i32 %1095, 3
  br i1 %1417, label %1447, label %1418

1418:                                             ; preds = %1414
  %1419 = sub nsw i32 %1086, %1416
  br label %1420

1420:                                             ; preds = %1420, %1418
  %1421 = phi i32 [ 0, %1418 ], [ %1444, %1420 ]
  %1422 = phi %"struct.OT::IntType.6"* [ %1208, %1418 ], [ %1440, %1420 ]
  %1423 = phi i32 [ %1419, %1418 ], [ %1445, %1420 ]
  %1424 = shl i32 %1421, 8
  %1425 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1422, i64 0, i32 0, i32 0
  %1426 = load i8, i8* %1425, align 1
  %1427 = zext i8 %1426 to i32
  %1428 = or i32 %1424, %1427
  %1429 = shl i32 %1428, 8
  %1430 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1422, i64 1, i32 0, i32 0
  %1431 = load i8, i8* %1430, align 1
  %1432 = zext i8 %1431 to i32
  %1433 = or i32 %1429, %1432
  %1434 = shl i32 %1433, 8
  %1435 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1422, i64 2, i32 0, i32 0
  %1436 = load i8, i8* %1435, align 1
  %1437 = zext i8 %1436 to i32
  %1438 = or i32 %1434, %1437
  %1439 = shl i32 %1438, 8
  %1440 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1422, i64 4
  %1441 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1422, i64 3, i32 0, i32 0
  %1442 = load i8, i8* %1441, align 1
  %1443 = zext i8 %1442 to i32
  %1444 = or i32 %1439, %1443
  %1445 = add i32 %1423, -4
  %1446 = icmp eq i32 %1445, 0
  br i1 %1446, label %1447, label %1420

1447:                                             ; preds = %1420, %1414
  %1448 = phi i32 [ undef, %1414 ], [ %1444, %1420 ]
  %1449 = phi i32 [ 0, %1414 ], [ %1444, %1420 ]
  %1450 = phi %"struct.OT::IntType.6"* [ %1208, %1414 ], [ %1440, %1420 ]
  %1451 = icmp eq i32 %1416, 0
  br i1 %1451, label %1464, label %1452

1452:                                             ; preds = %1447, %1452
  %1453 = phi i32 [ %1461, %1452 ], [ %1449, %1447 ]
  %1454 = phi %"struct.OT::IntType.6"* [ %1457, %1452 ], [ %1450, %1447 ]
  %1455 = phi i32 [ %1462, %1452 ], [ %1416, %1447 ]
  %1456 = shl i32 %1453, 8
  %1457 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1454, i64 1
  %1458 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %1454, i64 0, i32 0, i32 0
  %1459 = load i8, i8* %1458, align 1
  %1460 = zext i8 %1459 to i32
  %1461 = or i32 %1456, %1460
  %1462 = add i32 %1455, -1
  %1463 = icmp eq i32 %1462, 0
  br i1 %1463, label %1464, label %1452, !llvm.loop !49

1464:                                             ; preds = %1447, %1452, %1088, %1144
  %1465 = phi i8* [ %1148, %1144 ], [ %1089, %1088 ], [ %1148, %1452 ], [ %1148, %1447 ]
  %1466 = phi i32 [ 0, %1144 ], [ 0, %1088 ], [ %1415, %1452 ], [ %1415, %1447 ]
  %1467 = phi i32 [ 0, %1144 ], [ 0, %1088 ], [ %1448, %1447 ], [ %1461, %1452 ]
  %1468 = sub i32 %1466, %1467
  br label %1469

1469:                                             ; preds = %1257, %1362, %1464
  %1470 = phi i8* [ %1465, %1464 ], [ %1148, %1362 ], [ %1148, %1257 ]
  %1471 = phi i32 [ %1468, %1464 ], [ 0, %1362 ], [ 0, %1257 ]
  %1472 = zext i32 %1471 to i64
  br label %1473

1473:                                             ; preds = %1069, %1469
  %1474 = phi i64 [ %1472, %1469 ], [ %1010, %1069 ]
  %1475 = phi i8* [ %1470, %1469 ], [ %1009, %1069 ]
  %1476 = trunc i64 %1474 to i32
  switch i32 %1476, label %1477 [
    i32 -1, label %1493
    i32 0, label %1494
  ]

1477:                                             ; preds = %1473
  %1478 = load i8*, i8** %34, align 8
  %1479 = icmp ugt i8* %1478, %1475
  br i1 %1479, label %1493, label %1480, !prof !2

1480:                                             ; preds = %1477
  %1481 = load i8*, i8** %39, align 8
  %1482 = icmp ult i8* %1481, %1475
  br i1 %1482, label %1493, label %1483, !prof !2

1483:                                             ; preds = %1480
  %1484 = ptrtoint i8* %1481 to i64
  %1485 = ptrtoint i8* %1475 to i64
  %1486 = sub i64 %1484, %1485
  %1487 = trunc i64 %1486 to i32
  %1488 = icmp ugt i32 %1476, %1487
  br i1 %1488, label %1493, label %1489, !prof !2

1489:                                             ; preds = %1483
  %1490 = load i32, i32* %49, align 8
  %1491 = sub i32 %1490, %1476
  store i32 %1491, i32* %49, align 8
  %1492 = icmp sgt i32 %1491, 0
  br i1 %1492, label %1494, label %1493, !prof !3

1493:                                             ; preds = %1489, %1473, %1483, %1480, %1477
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

1494:                                             ; preds = %1473, %1489
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1011) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1011, i8 -86, i64 56, i1 false)
  store i8* %1475, i8** %1012, align 8
  store i64 %1474, i64* %1014, align 8
  store i32 0, i32* %1015, align 8
  store i8 0, i8* %1016, align 4
  store i8 0, i8* %1017, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %1019, i8 0, i64 20, i1 false) #10
  %1495 = call i8* @malloc(i64 4744) #10
  %1496 = icmp eq i8* %1495, null
  br i1 %1496, label %1497, label %1498, !prof !2

1497:                                             ; preds = %1494
  store i32 -1, i32* %1020, align 8
  br label %1515

1498:                                             ; preds = %1494
  store i8* %1495, i8** %1022, align 8
  store i32 593, i32* %1020, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1495, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %1023, align 4
  br label %1499

1499:                                             ; preds = %1508, %1498
  %1500 = phi i32 [ 513, %1498 ], [ %1512, %1508 ]
  %1501 = phi i64 [ 0, %1498 ], [ %1511, %1508 ]
  %1502 = zext i32 %1500 to i64
  %1503 = icmp ult i64 %1501, %1502
  br i1 %1503, label %1505, label %1504, !prof !3

1504:                                             ; preds = %1499
  store i64 %1024, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %1508

1505:                                             ; preds = %1499
  %1506 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1021, align 8
  %1507 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1506, i64 %1501
  br label %1508

1508:                                             ; preds = %1505, %1504
  %1509 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %1504 ], [ %1507, %1505 ]
  %1510 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1509, i64 0, i32 0
  store double 0.000000e+00, double* %1510, align 8
  %1511 = add nuw nsw i64 %1501, 1
  %1512 = load i32, i32* %1023, align 4
  %1513 = zext i32 %1512 to i64
  %1514 = icmp ult i64 %1511, %1513
  br i1 %1514, label %1499, label %1515

1515:                                             ; preds = %1508, %1497
  store i8 0, i8* %1025, align 8
  %1516 = load i32, i32* %1026, align 4
  %1517 = add i32 %1516, 1
  %1518 = icmp sgt i32 %1517, 0
  %1519 = select i1 %1518, i32 %1517, i32 0
  %1520 = load i32, i32* %1027, align 8
  %1521 = icmp slt i32 %1520, 0
  br i1 %1521, label %1554, label %1522, !prof !2

1522:                                             ; preds = %1515
  %1523 = icmp ult i32 %1520, %1519
  br i1 %1523, label %1524, label %1543, !prof !2

1524:                                             ; preds = %1522, %1524
  %1525 = phi i32 [ %1528, %1524 ], [ %1520, %1522 ]
  %1526 = lshr i32 %1525, 1
  %1527 = add i32 %1525, 8
  %1528 = add i32 %1527, %1526
  %1529 = icmp ugt i32 %1528, %1519
  br i1 %1529, label %1530, label %1524

1530:                                             ; preds = %1524
  %1531 = icmp uge i32 %1528, %1520
  %1532 = icmp ult i32 %1528, 107374182
  %1533 = and i1 %1531, %1532
  br i1 %1533, label %1534, label %1540, !prof !21

1534:                                             ; preds = %1530
  %1535 = load i8*, i8** %1029, align 8
  %1536 = zext i32 %1528 to i64
  %1537 = mul nuw nsw i64 %1536, 40
  %1538 = call i8* @realloc(i8* %1535, i64 %1537) #10
  %1539 = icmp eq i8* %1538, null
  br i1 %1539, label %1540, label %1541, !prof !2

1540:                                             ; preds = %1534, %1530
  store i32 -1, i32* %1027, align 8
  br label %1554

1541:                                             ; preds = %1534
  store i8* %1538, i8** %1029, align 8
  store i32 %1528, i32* %1027, align 8
  %1542 = load i32, i32* %1026, align 4
  br label %1543

1543:                                             ; preds = %1541, %1522
  %1544 = phi i32 [ %1542, %1541 ], [ %1516, %1522 ]
  %1545 = icmp ugt i32 %1519, %1544
  br i1 %1545, label %1546, label %1555

1546:                                             ; preds = %1543
  %1547 = load %"struct.CFF::cff1_font_dict_values_t"*, %"struct.CFF::cff1_font_dict_values_t"** %1028, align 8
  %1548 = zext i32 %1544 to i64
  %1549 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1547, i64 %1548
  %1550 = bitcast %"struct.CFF::cff1_font_dict_values_t"* %1549 to i8*
  %1551 = sub i32 %1519, %1544
  %1552 = zext i32 %1551 to i64
  %1553 = mul nuw nsw i64 %1552, 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1550, i8 0, i64 %1553, i1 false) #10
  br label %1555

1554:                                             ; preds = %1515, %1540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  br label %1561

1555:                                             ; preds = %1543, %1546
  store i32 %1519, i32* %1026, align 4
  %1556 = load %"struct.CFF::cff1_font_dict_values_t"*, %"struct.CFF::cff1_font_dict_values_t"** %1028, align 8
  %1557 = add nsw i32 %1519, -1
  %1558 = zext i32 %1557 to i64
  %1559 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1556, i64 %1558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  %1560 = icmp eq %"struct.CFF::cff1_font_dict_values_t"* %1559, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_font_dict_values_t"*)
  br i1 %1560, label %1561, label %1562, !prof !2

1561:                                             ; preds = %1554, %1555
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1646

1562:                                             ; preds = %1555
  %1563 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1559, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %1563, align 8
  %1564 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1556, i64 %1558, i32 0, i32 0, i32 1
  %1565 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1556, i64 %1558, i32 2
  %1566 = bitcast %struct.hb_vector_t.84* %1564 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1566, i8 0, i64 28, i1 false) #10
  store i32 -1, i32* %1565, align 4
  %1567 = call zeroext i1 @_ZN3CFF18dict_interpreter_tINS_22cff1_font_dict_opset_tENS_23cff1_font_dict_values_tENS_12interp_env_tINS_8number_tEEEE9interpretERS2_(%"struct.CFF::dict_interpreter_t.347"* nonnull %4, %"struct.CFF::cff1_font_dict_values_t"* dereferenceable(40) %1559)
  br i1 %1567, label %1569, label %1568, !prof !3

1568:                                             ; preds = %1562
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1646

1569:                                             ; preds = %1562
  %1570 = load i32, i32* %982, align 4
  %1571 = zext i32 %1570 to i64
  %1572 = icmp ult i64 %1070, %1571
  br i1 %1572, label %1574, label %1573, !prof !3

1573:                                             ; preds = %1569
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  br label %1577

1574:                                             ; preds = %1569
  %1575 = load %"struct.CFF::cff1_private_dict_values_base_t"*, %"struct.CFF::cff1_private_dict_values_base_t"** %1030, align 8
  %1576 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1575, i64 %1070
  br label %1577

1577:                                             ; preds = %1573, %1574
  %1578 = phi %"struct.CFF::cff1_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_private_dict_values_base_t"*), %1573 ], [ %1576, %1574 ]
  %1579 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1556, i64 %1558, i32 1, i32 0
  %1580 = load i32, i32* %1579, align 8
  %1581 = zext i32 %1580 to i64
  %1582 = getelementptr inbounds i8, i8* %63, i64 %1581
  %1583 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1556, i64 %1558, i32 1, i32 1
  %1584 = load i32, i32* %1583, align 4
  switch i32 %1584, label %1585 [
    i32 -1, label %1601
    i32 0, label %1602
  ]

1585:                                             ; preds = %1577
  %1586 = load i8*, i8** %34, align 8
  %1587 = icmp ugt i8* %1586, %1582
  br i1 %1587, label %1601, label %1588, !prof !2

1588:                                             ; preds = %1585
  %1589 = load i8*, i8** %39, align 8
  %1590 = icmp ult i8* %1589, %1582
  br i1 %1590, label %1601, label %1591, !prof !2

1591:                                             ; preds = %1588
  %1592 = ptrtoint i8* %1589 to i64
  %1593 = ptrtoint i8* %1582 to i64
  %1594 = sub i64 %1592, %1593
  %1595 = trunc i64 %1594 to i32
  %1596 = icmp ugt i32 %1584, %1595
  br i1 %1596, label %1601, label %1597, !prof !2

1597:                                             ; preds = %1591
  %1598 = load i32, i32* %49, align 8
  %1599 = sub i32 %1598, %1584
  store i32 %1599, i32* %49, align 8
  %1600 = icmp sgt i32 %1599, 0
  br i1 %1600, label %1602, label %1601, !prof !3

1601:                                             ; preds = %1585, %1588, %1591, %1577, %1597
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1646

1602:                                             ; preds = %1577, %1597
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1031) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1031, i8 -86, i64 56, i1 false)
  store i8* %1582, i8** %1032, align 8
  store i32 %1584, i32* %1033, align 8
  store i8 0, i8* %1035, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %1037, i8 0, i64 20, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 4 %1043, i8 0, i64 9, i1 false)
  %1603 = call i8* @malloc(i64 4744) #10
  %1604 = icmp eq i8* %1603, null
  br i1 %1604, label %1605, label %1606, !prof !2

1605:                                             ; preds = %1602
  store i32 -1, i32* %1038, align 8
  br label %1623

1606:                                             ; preds = %1602
  store i8* %1603, i8** %1040, align 8
  store i32 593, i32* %1038, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1603, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %1041, align 4
  br label %1607

1607:                                             ; preds = %1616, %1606
  %1608 = phi i32 [ 513, %1606 ], [ %1620, %1616 ]
  %1609 = phi i64 [ 0, %1606 ], [ %1619, %1616 ]
  %1610 = zext i32 %1608 to i64
  %1611 = icmp ult i64 %1609, %1610
  br i1 %1611, label %1613, label %1612, !prof !3

1612:                                             ; preds = %1607
  store i64 %1024, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %1616

1613:                                             ; preds = %1607
  %1614 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1039, align 8
  %1615 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1614, i64 %1609
  br label %1616

1616:                                             ; preds = %1613, %1612
  %1617 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %1612 ], [ %1615, %1613 ]
  %1618 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1617, i64 0, i32 0
  store double 0.000000e+00, double* %1618, align 8
  %1619 = add nuw nsw i64 %1609, 1
  %1620 = load i32, i32* %1041, align 4
  %1621 = zext i32 %1620 to i64
  %1622 = icmp ult i64 %1619, %1621
  br i1 %1622, label %1607, label %1623

1623:                                             ; preds = %1616, %1605
  store i8 0, i8* %1042, align 8
  %1624 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1578, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %1624, align 8
  %1625 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1578, i64 0, i32 0, i32 0, i32 1
  %1626 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1578, i64 0, i32 2
  %1627 = bitcast %struct.hb_vector_t.88* %1625 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1627, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"** %1626, align 8
  %1628 = call zeroext i1 @_ZN3CFF18dict_interpreter_tINS_25cff1_private_dict_opset_tENS_31cff1_private_dict_values_base_tINS_10dict_val_tEEENS_12interp_env_tINS_8number_tEEEE9interpretERS4_(%"struct.CFF::dict_interpreter_t.349"* nonnull %5, %"struct.CFF::cff1_private_dict_values_base_t"* dereferenceable(40) %1578)
  br i1 %1628, label %1630, label %1629, !prof !3

1629:                                             ; preds = %1623
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1643

1630:                                             ; preds = %1623
  %1631 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1578, i64 0, i32 1
  %1632 = load i32, i32* %1631, align 8
  %1633 = icmp eq i32 %1632, 0
  %1634 = zext i32 %1632 to i64
  %1635 = getelementptr inbounds i8, i8* %1582, i64 %1634
  %1636 = bitcast i8* %1635 to %"struct.CFF::Subrs"*
  %1637 = select i1 %1633, %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"* %1636
  store %"struct.CFF::Subrs"* %1637, %"struct.CFF::Subrs"** %1626, align 8
  %1638 = icmp eq %"struct.CFF::Subrs"* %1637, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*)
  br i1 %1638, label %1643, label %1639

1639:                                             ; preds = %1630
  %1640 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %1637, i64 0, i32 0
  %1641 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %1640, %struct.hb_sanitize_context_t* %17)
  br i1 %1641, label %1643, label %1642, !prof !3

1642:                                             ; preds = %1639
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1643

1643:                                             ; preds = %1630, %1639, %1642, %1629
  %1644 = phi i32 [ 1, %1629 ], [ 1, %1642 ], [ 0, %1639 ], [ 0, %1630 ]
  %1645 = load i8*, i8** %1040, align 8
  call void @free(i8* %1645) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1031) #10
  br label %1646

1646:                                             ; preds = %1561, %1568, %1643, %1601
  %1647 = phi i32 [ 1, %1561 ], [ 1, %1568 ], [ 1, %1601 ], [ %1644, %1643 ]
  %1648 = load i8*, i8** %1022, align 8
  call void @free(i8* %1648) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1011) #10
  %1649 = icmp eq i32 %1647, 0
  %1650 = add nuw nsw i64 %1070, 1
  br i1 %1649, label %1065, label %1742

1651:                                             ; preds = %1000
  %1652 = load i32, i32* %982, align 4
  %1653 = icmp eq i32 %1652, 0
  br i1 %1653, label %1654, label %1655, !prof !2

1654:                                             ; preds = %1651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  br label %1658

1655:                                             ; preds = %1651
  %1656 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  %1657 = load %"struct.CFF::cff1_private_dict_values_base_t"*, %"struct.CFF::cff1_private_dict_values_base_t"** %1656, align 8
  br label %1658

1658:                                             ; preds = %1654, %1655
  %1659 = phi %"struct.CFF::cff1_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_private_dict_values_base_t"*), %1654 ], [ %1657, %1655 ]
  %1660 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 8, i32 0
  %1661 = load i32, i32* %1660, align 4
  %1662 = zext i32 %1661 to i64
  %1663 = getelementptr inbounds i8, i8* %63, i64 %1662
  %1664 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 8, i32 1
  %1665 = load i32, i32* %1664, align 4
  switch i32 %1665, label %1666 [
    i32 -1, label %1682
    i32 0, label %1683
  ]

1666:                                             ; preds = %1658
  %1667 = load i8*, i8** %34, align 8
  %1668 = icmp ugt i8* %1667, %1663
  br i1 %1668, label %1682, label %1669, !prof !2

1669:                                             ; preds = %1666
  %1670 = load i8*, i8** %39, align 8
  %1671 = icmp ult i8* %1670, %1663
  br i1 %1671, label %1682, label %1672, !prof !2

1672:                                             ; preds = %1669
  %1673 = ptrtoint i8* %1670 to i64
  %1674 = ptrtoint i8* %1663 to i64
  %1675 = sub i64 %1673, %1674
  %1676 = trunc i64 %1675 to i32
  %1677 = icmp ugt i32 %1665, %1676
  br i1 %1677, label %1682, label %1678, !prof !2

1678:                                             ; preds = %1672
  %1679 = load i32, i32* %49, align 8
  %1680 = sub i32 %1679, %1665
  store i32 %1680, i32* %49, align 8
  %1681 = icmp sgt i32 %1680, 0
  br i1 %1681, label %1683, label %1682, !prof !3

1682:                                             ; preds = %1666, %1669, %1672, %1658, %1678
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1742

1683:                                             ; preds = %1658, %1678
  %1684 = bitcast %"struct.CFF::dict_interpreter_t.349"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1684) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1684, i8 -86, i64 56, i1 false)
  %1685 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1663, i8** %1685, align 8
  %1686 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %1665, i32* %1686, align 8
  %1687 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1688 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %1688, align 8
  %1689 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1690 = bitcast i32* %1689 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1690, i8 0, i64 20, i1 false) #10
  %1691 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %1692 = bitcast i32* %1687 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1692, i8 0, i64 9, i1 false)
  %1693 = call i8* @malloc(i64 4744) #10
  %1694 = icmp eq i8* %1693, null
  br i1 %1694, label %1695, label %1696, !prof !2

1695:                                             ; preds = %1683
  store i32 -1, i32* %1691, align 8
  br label %1717

1696:                                             ; preds = %1683
  %1697 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1698 = bitcast %"struct.CFF::number_t"** %1697 to i8**
  store i8* %1693, i8** %1698, align 8
  store i32 593, i32* %1691, align 8
  %1699 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1693, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %1699, align 4
  %1700 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  br label %1701

1701:                                             ; preds = %1710, %1696
  %1702 = phi i32 [ 513, %1696 ], [ %1714, %1710 ]
  %1703 = phi i64 [ 0, %1696 ], [ %1713, %1710 ]
  %1704 = zext i32 %1702 to i64
  %1705 = icmp ult i64 %1703, %1704
  br i1 %1705, label %1707, label %1706, !prof !3

1706:                                             ; preds = %1701
  store i64 %1700, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %1710

1707:                                             ; preds = %1701
  %1708 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1697, align 8
  %1709 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1708, i64 %1703
  br label %1710

1710:                                             ; preds = %1707, %1706
  %1711 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %1706 ], [ %1709, %1707 ]
  %1712 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1711, i64 0, i32 0
  store double 0.000000e+00, double* %1712, align 8
  %1713 = add nuw nsw i64 %1703, 1
  %1714 = load i32, i32* %1699, align 4
  %1715 = zext i32 %1714 to i64
  %1716 = icmp ult i64 %1713, %1715
  br i1 %1716, label %1701, label %1717

1717:                                             ; preds = %1710, %1695
  %1718 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %1718, align 8
  %1719 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1659, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %1719, align 8
  %1720 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1659, i64 0, i32 0, i32 0, i32 1
  %1721 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1659, i64 0, i32 2
  %1722 = bitcast %struct.hb_vector_t.88* %1720 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1722, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"** %1721, align 8
  %1723 = call zeroext i1 @_ZN3CFF18dict_interpreter_tINS_25cff1_private_dict_opset_tENS_31cff1_private_dict_values_base_tINS_10dict_val_tEEENS_12interp_env_tINS_8number_tEEEE9interpretERS4_(%"struct.CFF::dict_interpreter_t.349"* nonnull %6, %"struct.CFF::cff1_private_dict_values_base_t"* dereferenceable(40) %1659)
  br i1 %1723, label %1725, label %1724, !prof !3

1724:                                             ; preds = %1717
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1738

1725:                                             ; preds = %1717
  %1726 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1659, i64 0, i32 1
  %1727 = load i32, i32* %1726, align 8
  %1728 = icmp eq i32 %1727, 0
  %1729 = zext i32 %1727 to i64
  %1730 = getelementptr inbounds i8, i8* %1663, i64 %1729
  %1731 = bitcast i8* %1730 to %"struct.CFF::Subrs"*
  %1732 = select i1 %1728, %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"* %1731
  store %"struct.CFF::Subrs"* %1732, %"struct.CFF::Subrs"** %1721, align 8
  %1733 = icmp eq %"struct.CFF::Subrs"* %1732, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*)
  br i1 %1733, label %1738, label %1734

1734:                                             ; preds = %1725
  %1735 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %1732, i64 0, i32 0
  %1736 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"* %1735, %struct.hb_sanitize_context_t* %17)
  br i1 %1736, label %1738, label %1737, !prof !3

1737:                                             ; preds = %1734
  call void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"* %0)
  br label %1738

1738:                                             ; preds = %1725, %1734, %1737, %1724
  %1739 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1740 = bitcast %"struct.CFF::number_t"** %1739 to i8**
  %1741 = load i8*, i8** %1740, align 8
  call void @free(i8* %1741) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1684) #10
  br label %1742

1742:                                             ; preds = %1646, %1065, %1004, %617, %61, %74, %164, %639, %727, %744, %757, %842, %927, %940, %951, %999, %576, %1493, %1738, %1682
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE12glyph_to_sidEj(%"struct.OT::cff1::accelerator_templ_t"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 3
  %4 = load %"struct.CFF::Charset"*, %"struct.CFF::Charset"** %3, align 8
  %5 = icmp eq %"struct.CFF::Charset"* %4, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Charset"*)
  br i1 %5, label %93, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %103, !prof !3

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 1
  switch i8 %12, label %103 [
    i8 0, label %13
    i8 1, label %25
    i8 2, label %58
  ]

13:                                               ; preds = %10
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %103, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1
  %17 = bitcast %union.anon.74* %16 to %"struct.CFF::Charset0"*
  %18 = add i32 %1, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.CFF::Charset0", %"struct.CFF::Charset0"* %17, i64 0, i32 0, i64 %19
  %21 = bitcast %"struct.OT::IntType"* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #10
  %24 = zext i16 %23 to i32
  br label %103

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1
  %27 = bitcast %union.anon.74* %26 to %"struct.CFF::Charset1_2"*
  %28 = icmp eq i32 %1, 0
  br i1 %28, label %103, label %29

29:                                               ; preds = %25
  %30 = add i32 %1, -1
  %31 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1, i32 0, i32 0, i64 0, i32 1, i32 0, i32 0, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp ugt i32 %30, %33
  br i1 %34, label %46, label %37

35:                                               ; preds = %46
  %36 = zext i32 %52 to i64
  br label %37

37:                                               ; preds = %35, %29
  %38 = phi i32 [ %30, %29 ], [ %51, %35 ]
  %39 = phi i64 [ 0, %29 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %27, i64 0, i32 0, i64 %39, i32 0
  %41 = bitcast %"struct.OT::IntType"* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #10
  %44 = zext i16 %43 to i32
  %45 = add i32 %38, %44
  br label %103

46:                                               ; preds = %29, %46
  %47 = phi i32 [ %56, %46 ], [ %33, %29 ]
  %48 = phi i32 [ %52, %46 ], [ 0, %29 ]
  %49 = phi i32 [ %51, %46 ], [ %30, %29 ]
  %50 = xor i32 %47, -1
  %51 = add i32 %49, %50
  %52 = add i32 %48, 1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %27, i64 0, i32 0, i64 %53, i32 1, i32 0, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp ugt i32 %51, %56
  br i1 %57, label %46, label %35

58:                                               ; preds = %10
  %59 = icmp eq i32 %1, 0
  br i1 %59, label %103, label %60

60:                                               ; preds = %58
  %61 = add i32 %1, -1
  %62 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1, i32 0, i32 0, i64 0, i32 1
  %63 = bitcast %"struct.OT::IntType"* %62 to i16*
  %64 = load i16, i16* %63, align 1
  %65 = tail call i16 @llvm.bswap.i16(i16 %64) #10
  %66 = zext i16 %65 to i32
  %67 = icmp ugt i32 %61, %66
  br i1 %67, label %79, label %70

68:                                               ; preds = %79
  %69 = zext i32 %85 to i64
  br label %70

70:                                               ; preds = %68, %60
  %71 = phi i32 [ %61, %60 ], [ %84, %68 ]
  %72 = phi i64 [ 0, %60 ], [ %69, %68 ]
  %73 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1, i32 0, i32 0, i64 %72, i32 0
  %74 = bitcast %"struct.OT::IntType"* %73 to i16*
  %75 = load i16, i16* %74, align 1
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #10
  %77 = zext i16 %76 to i32
  %78 = add i32 %71, %77
  br label %103

79:                                               ; preds = %60, %79
  %80 = phi i32 [ %91, %79 ], [ %66, %60 ]
  %81 = phi i32 [ %85, %79 ], [ 0, %60 ]
  %82 = phi i32 [ %84, %79 ], [ %61, %60 ]
  %83 = xor i32 %80, -1
  %84 = add i32 %82, %83
  %85 = add i32 %81, 1
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %4, i64 0, i32 1, i32 0, i32 0, i64 %86, i32 1
  %88 = bitcast %"struct.OT::IntType"* %87 to i16*
  %89 = load i16, i16* %88, align 1
  %90 = tail call i16 @llvm.bswap.i16(i16 %89) #10
  %91 = zext i16 %90 to i32
  %92 = icmp ugt i32 %84, %91
  br i1 %92, label %79, label %68

93:                                               ; preds = %2
  %94 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 6
  %95 = load i32, i32* %94, align 4
  switch i32 %95, label %103 [
    i32 0, label %96
    i32 1, label %99
    i32 2, label %101
  ]

96:                                               ; preds = %93
  %97 = icmp ult i32 %1, 229
  %98 = select i1 %97, i32 %1, i32 0
  ret i32 %98

99:                                               ; preds = %93
  %100 = tail call i32 @_ZN2OT4cff129lookup_expert_charset_for_sidEj(i32 %1) #10
  br label %103

101:                                              ; preds = %93
  %102 = tail call i32 @_ZN2OT4cff136lookup_expert_subset_charset_for_sidEj(i32 %1) #10
  br label %103

103:                                              ; preds = %70, %58, %37, %25, %15, %13, %10, %6, %99, %101, %93
  %104 = phi i32 [ 0, %93 ], [ %102, %101 ], [ %100, %99 ], [ 0, %6 ], [ 0, %10 ], [ %24, %15 ], [ 0, %13 ], [ %45, %37 ], [ 0, %25 ], [ %78, %70 ], [ 0, %58 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEEixEj(%"struct.CFF::CFFIndex"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.CFF::CFFIndex"* %0 to i16*
  %4 = load i16, i16* %3, align 1
  %5 = tail call i16 @llvm.bswap.i16(i16 %4) #10
  %6 = zext i16 %5 to i32
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %11, label %8, !prof !3

8:                                                ; preds = %2
  %9 = load i8*, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), align 16
  %10 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 1), align 8
  br label %403

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %13 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = zext i16 %5 to i64
  %17 = add nuw nsw i64 %16, 1
  %18 = mul nuw nsw i64 %17, %15
  %19 = getelementptr inbounds i8, i8* %12, i64 %18
  %20 = zext i8 %14 to i32
  %21 = icmp eq i8 %14, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = getelementptr inbounds i8, i8* %19, i64 -1
  br label %397

24:                                               ; preds = %11
  %25 = mul i32 %20, %1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %26
  %28 = add nsw i32 %20, -1
  %29 = and i32 %20, 3
  %30 = icmp ult i32 %28, 3
  br i1 %30, label %60, label %31

31:                                               ; preds = %24
  %32 = sub nsw i32 %20, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i32 [ 0, %31 ], [ %57, %33 ]
  %35 = phi %"struct.OT::IntType.6"* [ %27, %31 ], [ %53, %33 ]
  %36 = phi i32 [ %32, %31 ], [ %58, %33 ]
  %37 = shl i32 %34, 8
  %38 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %35, i64 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = shl i32 %41, 8
  %43 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %35, i64 1, i32 0, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = or i32 %42, %45
  %47 = shl i32 %46, 8
  %48 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %35, i64 2, i32 0, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = shl i32 %51, 8
  %53 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %35, i64 4
  %54 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %35, i64 3, i32 0, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %52, %56
  %58 = add i32 %36, -4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %33

60:                                               ; preds = %33, %24
  %61 = phi i32 [ undef, %24 ], [ %57, %33 ]
  %62 = phi i32 [ 0, %24 ], [ %57, %33 ]
  %63 = phi %"struct.OT::IntType.6"* [ %27, %24 ], [ %53, %33 ]
  %64 = icmp eq i32 %29, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %60, %65
  %66 = phi i32 [ %74, %65 ], [ %62, %60 ]
  %67 = phi %"struct.OT::IntType.6"* [ %70, %65 ], [ %63, %60 ]
  %68 = phi i32 [ %75, %65 ], [ %29, %60 ]
  %69 = shl i32 %66, 8
  %70 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %67, i64 1
  %71 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %67, i64 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = or i32 %69, %73
  %75 = add i32 %68, -1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %65, !llvm.loop !50

77:                                               ; preds = %65, %60
  %78 = phi i32 [ %61, %60 ], [ %74, %65 ]
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %19, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 -1
  %82 = add i32 %1, 1
  %83 = mul i32 %82, %20
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %84
  %86 = add nsw i32 %20, -1
  %87 = and i32 %20, 3
  %88 = icmp ult i32 %86, 3
  br i1 %88, label %118, label %89

89:                                               ; preds = %77
  %90 = sub nsw i32 %20, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i32 [ 0, %89 ], [ %115, %91 ]
  %93 = phi %"struct.OT::IntType.6"* [ %85, %89 ], [ %111, %91 ]
  %94 = phi i32 [ %90, %89 ], [ %116, %91 ]
  %95 = shl i32 %92, 8
  %96 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %93, i64 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = or i32 %95, %98
  %100 = shl i32 %99, 8
  %101 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %93, i64 1, i32 0, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %100, %103
  %105 = shl i32 %104, 8
  %106 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %93, i64 2, i32 0, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  %110 = shl i32 %109, 8
  %111 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %93, i64 4
  %112 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %93, i64 3, i32 0, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = or i32 %110, %114
  %116 = add i32 %94, -4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %91

118:                                              ; preds = %91, %77
  %119 = phi i32 [ undef, %77 ], [ %115, %91 ]
  %120 = phi i32 [ 0, %77 ], [ %115, %91 ]
  %121 = phi %"struct.OT::IntType.6"* [ %85, %77 ], [ %111, %91 ]
  %122 = icmp eq i32 %87, 0
  br i1 %122, label %135, label %123

123:                                              ; preds = %118, %123
  %124 = phi i32 [ %132, %123 ], [ %120, %118 ]
  %125 = phi %"struct.OT::IntType.6"* [ %128, %123 ], [ %121, %118 ]
  %126 = phi i32 [ %133, %123 ], [ %87, %118 ]
  %127 = shl i32 %124, 8
  %128 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %125, i64 1
  %129 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %125, i64 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %127, %131
  %133 = add i32 %126, -1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %123, !llvm.loop !51

135:                                              ; preds = %123, %118
  %136 = phi i32 [ %119, %118 ], [ %132, %123 ]
  %137 = add nsw i32 %20, -1
  %138 = and i32 %20, 3
  %139 = icmp ult i32 %137, 3
  br i1 %139, label %169, label %140

140:                                              ; preds = %135
  %141 = sub nsw i32 %20, %138
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i32 [ 0, %140 ], [ %166, %142 ]
  %144 = phi %"struct.OT::IntType.6"* [ %27, %140 ], [ %162, %142 ]
  %145 = phi i32 [ %141, %140 ], [ %167, %142 ]
  %146 = shl i32 %143, 8
  %147 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %144, i64 0, i32 0, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = or i32 %146, %149
  %151 = shl i32 %150, 8
  %152 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %144, i64 1, i32 0, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = or i32 %151, %154
  %156 = shl i32 %155, 8
  %157 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %144, i64 2, i32 0, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = or i32 %156, %159
  %161 = shl i32 %160, 8
  %162 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %144, i64 4
  %163 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %144, i64 3, i32 0, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = or i32 %161, %165
  %167 = add i32 %145, -4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %142

169:                                              ; preds = %142, %135
  %170 = phi i32 [ undef, %135 ], [ %166, %142 ]
  %171 = phi i32 [ 0, %135 ], [ %166, %142 ]
  %172 = phi %"struct.OT::IntType.6"* [ %27, %135 ], [ %162, %142 ]
  %173 = icmp eq i32 %138, 0
  br i1 %173, label %186, label %174

174:                                              ; preds = %169, %174
  %175 = phi i32 [ %183, %174 ], [ %171, %169 ]
  %176 = phi %"struct.OT::IntType.6"* [ %179, %174 ], [ %172, %169 ]
  %177 = phi i32 [ %184, %174 ], [ %138, %169 ]
  %178 = shl i32 %175, 8
  %179 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %176, i64 1
  %180 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %176, i64 0, i32 0, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = or i32 %178, %182
  %184 = add i32 %177, -1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %174, !llvm.loop !52

186:                                              ; preds = %174, %169
  %187 = phi i32 [ %170, %169 ], [ %183, %174 ]
  %188 = icmp ult i32 %136, %187
  br i1 %188, label %403, label %189, !prof !2

189:                                              ; preds = %186
  %190 = add nsw i32 %20, -1
  %191 = and i32 %20, 3
  %192 = icmp ult i32 %190, 3
  br i1 %192, label %222, label %193

193:                                              ; preds = %189
  %194 = sub nsw i32 %20, %191
  br label %195

195:                                              ; preds = %195, %193
  %196 = phi i32 [ 0, %193 ], [ %219, %195 ]
  %197 = phi %"struct.OT::IntType.6"* [ %85, %193 ], [ %215, %195 ]
  %198 = phi i32 [ %194, %193 ], [ %220, %195 ]
  %199 = shl i32 %196, 8
  %200 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %197, i64 0, i32 0, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = or i32 %199, %202
  %204 = shl i32 %203, 8
  %205 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %197, i64 1, i32 0, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = or i32 %204, %207
  %209 = shl i32 %208, 8
  %210 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %197, i64 2, i32 0, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = or i32 %209, %212
  %214 = shl i32 %213, 8
  %215 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %197, i64 4
  %216 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %197, i64 3, i32 0, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = or i32 %214, %218
  %220 = add i32 %198, -4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %195

222:                                              ; preds = %195, %189
  %223 = phi i32 [ undef, %189 ], [ %219, %195 ]
  %224 = phi i32 [ 0, %189 ], [ %219, %195 ]
  %225 = phi %"struct.OT::IntType.6"* [ %85, %189 ], [ %215, %195 ]
  %226 = icmp eq i32 %191, 0
  br i1 %226, label %239, label %227

227:                                              ; preds = %222, %227
  %228 = phi i32 [ %236, %227 ], [ %224, %222 ]
  %229 = phi %"struct.OT::IntType.6"* [ %232, %227 ], [ %225, %222 ]
  %230 = phi i32 [ %237, %227 ], [ %191, %222 ]
  %231 = shl i32 %228, 8
  %232 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %229, i64 1
  %233 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %229, i64 0, i32 0, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = or i32 %231, %235
  %237 = add i32 %230, -1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %227, !llvm.loop !53

239:                                              ; preds = %227, %222
  %240 = phi i32 [ %223, %222 ], [ %236, %227 ]
  %241 = mul nuw nsw i32 %6, %20
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %242
  %244 = add nsw i32 %20, -1
  %245 = and i32 %20, 3
  %246 = icmp ult i32 %244, 3
  br i1 %246, label %276, label %247

247:                                              ; preds = %239
  %248 = sub nsw i32 %20, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i32 [ 0, %247 ], [ %273, %249 ]
  %251 = phi %"struct.OT::IntType.6"* [ %243, %247 ], [ %269, %249 ]
  %252 = phi i32 [ %248, %247 ], [ %274, %249 ]
  %253 = shl i32 %250, 8
  %254 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %251, i64 0, i32 0, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = or i32 %253, %256
  %258 = shl i32 %257, 8
  %259 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %251, i64 1, i32 0, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = or i32 %258, %261
  %263 = shl i32 %262, 8
  %264 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %251, i64 2, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %263, %266
  %268 = shl i32 %267, 8
  %269 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %251, i64 4
  %270 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %251, i64 3, i32 0, i32 0
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = or i32 %268, %272
  %274 = add i32 %252, -4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %249

276:                                              ; preds = %249, %239
  %277 = phi i32 [ undef, %239 ], [ %273, %249 ]
  %278 = phi i32 [ 0, %239 ], [ %273, %249 ]
  %279 = phi %"struct.OT::IntType.6"* [ %243, %239 ], [ %269, %249 ]
  %280 = icmp eq i32 %245, 0
  br i1 %280, label %293, label %281

281:                                              ; preds = %276, %281
  %282 = phi i32 [ %290, %281 ], [ %278, %276 ]
  %283 = phi %"struct.OT::IntType.6"* [ %286, %281 ], [ %279, %276 ]
  %284 = phi i32 [ %291, %281 ], [ %245, %276 ]
  %285 = shl i32 %282, 8
  %286 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %283, i64 1
  %287 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %283, i64 0, i32 0, i32 0
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = or i32 %285, %289
  %291 = add i32 %284, -1
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %281, !llvm.loop !54

293:                                              ; preds = %281, %276
  %294 = phi i32 [ %277, %276 ], [ %290, %281 ]
  %295 = icmp ugt i32 %240, %294
  br i1 %295, label %403, label %296, !prof !2

296:                                              ; preds = %293
  %297 = add nsw i32 %20, -1
  %298 = and i32 %20, 3
  %299 = icmp ult i32 %297, 3
  br i1 %299, label %329, label %300

300:                                              ; preds = %296
  %301 = sub nsw i32 %20, %298
  br label %302

302:                                              ; preds = %302, %300
  %303 = phi i32 [ 0, %300 ], [ %326, %302 ]
  %304 = phi %"struct.OT::IntType.6"* [ %85, %300 ], [ %322, %302 ]
  %305 = phi i32 [ %301, %300 ], [ %327, %302 ]
  %306 = shl i32 %303, 8
  %307 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %304, i64 0, i32 0, i32 0
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = or i32 %306, %309
  %311 = shl i32 %310, 8
  %312 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %304, i64 1, i32 0, i32 0
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i32
  %315 = or i32 %311, %314
  %316 = shl i32 %315, 8
  %317 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %304, i64 2, i32 0, i32 0
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  %320 = or i32 %316, %319
  %321 = shl i32 %320, 8
  %322 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %304, i64 4
  %323 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %304, i64 3, i32 0, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = or i32 %321, %325
  %327 = add i32 %305, -4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %302

329:                                              ; preds = %302, %296
  %330 = phi i32 [ undef, %296 ], [ %326, %302 ]
  %331 = phi i32 [ 0, %296 ], [ %326, %302 ]
  %332 = phi %"struct.OT::IntType.6"* [ %85, %296 ], [ %322, %302 ]
  %333 = icmp eq i32 %298, 0
  br i1 %333, label %346, label %334

334:                                              ; preds = %329, %334
  %335 = phi i32 [ %343, %334 ], [ %331, %329 ]
  %336 = phi %"struct.OT::IntType.6"* [ %339, %334 ], [ %332, %329 ]
  %337 = phi i32 [ %344, %334 ], [ %298, %329 ]
  %338 = shl i32 %335, 8
  %339 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %336, i64 1
  %340 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %336, i64 0, i32 0, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i32
  %343 = or i32 %338, %342
  %344 = add i32 %337, -1
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %334, !llvm.loop !55

346:                                              ; preds = %334, %329
  %347 = phi i32 [ %330, %329 ], [ %343, %334 ]
  %348 = add nsw i32 %20, -1
  %349 = and i32 %20, 3
  %350 = icmp ult i32 %348, 3
  br i1 %350, label %380, label %351

351:                                              ; preds = %346
  %352 = sub nsw i32 %20, %349
  br label %353

353:                                              ; preds = %353, %351
  %354 = phi i32 [ 0, %351 ], [ %377, %353 ]
  %355 = phi %"struct.OT::IntType.6"* [ %27, %351 ], [ %373, %353 ]
  %356 = phi i32 [ %352, %351 ], [ %378, %353 ]
  %357 = shl i32 %354, 8
  %358 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %355, i64 0, i32 0, i32 0
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = or i32 %357, %360
  %362 = shl i32 %361, 8
  %363 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %355, i64 1, i32 0, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = or i32 %362, %365
  %367 = shl i32 %366, 8
  %368 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %355, i64 2, i32 0, i32 0
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = or i32 %367, %370
  %372 = shl i32 %371, 8
  %373 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %355, i64 4
  %374 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %355, i64 3, i32 0, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i32
  %377 = or i32 %372, %376
  %378 = add i32 %356, -4
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %353

380:                                              ; preds = %353, %346
  %381 = phi i32 [ undef, %346 ], [ %377, %353 ]
  %382 = phi i32 [ 0, %346 ], [ %377, %353 ]
  %383 = phi %"struct.OT::IntType.6"* [ %27, %346 ], [ %373, %353 ]
  %384 = icmp eq i32 %349, 0
  br i1 %384, label %397, label %385

385:                                              ; preds = %380, %385
  %386 = phi i32 [ %394, %385 ], [ %382, %380 ]
  %387 = phi %"struct.OT::IntType.6"* [ %390, %385 ], [ %383, %380 ]
  %388 = phi i32 [ %395, %385 ], [ %349, %380 ]
  %389 = shl i32 %386, 8
  %390 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %387, i64 1
  %391 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %387, i64 0, i32 0, i32 0
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i32
  %394 = or i32 %389, %393
  %395 = add i32 %388, -1
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %385, !llvm.loop !56

397:                                              ; preds = %380, %385, %22
  %398 = phi i8* [ %23, %22 ], [ %81, %385 ], [ %81, %380 ]
  %399 = phi i32 [ 0, %22 ], [ %347, %385 ], [ %347, %380 ]
  %400 = phi i32 [ 0, %22 ], [ %381, %380 ], [ %394, %385 ]
  %401 = sub i32 %399, %400
  %402 = zext i32 %401 to i64
  br label %403

403:                                              ; preds = %397, %293, %186, %8
  %404 = phi i64 [ %10, %8 ], [ %402, %397 ], [ 0, %293 ], [ 0, %186 ]
  %405 = phi i8* [ %9, %8 ], [ %398, %397 ], [ %81, %293 ], [ %81, %186 ]
  %406 = insertvalue { i8*, i64 } undef, i8* %405, 0
  %407 = insertvalue { i8*, i64 } %406, i64 %404, 1
  ret { i8*, i64 } %407
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cff119accelerator_templ_tIN3CFF25cff1_private_dict_opset_tENS2_31cff1_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff1::accelerator_templ_t"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 2
  %3 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 1, i32 9
  %4 = load %struct.hb_blob_t*, %struct.hb_blob_t** %3, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %4) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %3, align 8
  %5 = bitcast i8** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  %6 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 2
  %8 = bitcast %"struct.CFF::cff1_top_dict_val_t"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #10
  %10 = bitcast %struct.hb_vector_t.80* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14
  %12 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 14, i32 2
  br i1 %14, label %28, label %16

16:                                               ; preds = %1
  %17 = zext i32 %13 to i64
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %26, %18 ]
  %20 = load %"struct.CFF::cff1_font_dict_values_t"*, %"struct.CFF::cff1_font_dict_values_t"** %15, align 8
  %21 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %20, i64 %19, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %20, i64 %19, i32 0, i32 0, i32 1, i32 2
  %23 = bitcast %"struct.CFF::op_str_t"** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #10
  %25 = bitcast %struct.hb_vector_t.84* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  %26 = add nuw nsw i64 %19, 1
  %27 = icmp eq i64 %26, %17
  br i1 %27, label %28, label %18

28:                                               ; preds = %18, %1
  %29 = bitcast %"struct.CFF::cff1_font_dict_values_t"** %15 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @free(i8* %30) #10
  %31 = bitcast %struct.hb_vector_t.81* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15
  %33 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 15, i32 2
  br i1 %35, label %49, label %37

37:                                               ; preds = %28
  %38 = zext i32 %34 to i64
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %47, %39 ]
  %41 = load %"struct.CFF::cff1_private_dict_values_base_t"*, %"struct.CFF::cff1_private_dict_values_base_t"** %36, align 8
  %42 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %41, i64 %40, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %41, i64 %40, i32 0, i32 0, i32 1, i32 2
  %44 = bitcast %"struct.CFF::dict_val_t"** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @free(i8* %45) #10
  %46 = bitcast %struct.hb_vector_t.88* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  %47 = add nuw nsw i64 %40, 1
  %48 = icmp eq i64 %47, %38
  br i1 %48, label %49, label %39

49:                                               ; preds = %39, %28
  %50 = bitcast %"struct.CFF::cff1_private_dict_values_base_t"** %36 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @free(i8* %51) #10
  %52 = bitcast %struct.hb_vector_t.85* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = getelementptr inbounds %"struct.OT::cff1::accelerator_templ_t", %"struct.OT::cff1::accelerator_templ_t"* %0, i64 0, i32 0
  %54 = load %struct.hb_blob_t*, %struct.hb_blob_t** %53, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %54) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeItLj2EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %162, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %162, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.CFF::CFFIndex"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 3
  br i1 %16, label %26, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -3
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = bitcast %"struct.CFF::CFFIndex"* %0 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %162, label %26

26:                                               ; preds = %11, %17, %22
  %27 = ptrtoint i8* %9 to i64
  %28 = ptrtoint %"struct.CFF::CFFIndex"* %0 to i64
  %29 = sub i64 %27, %28
  %30 = trunc i64 %29 to i32
  %31 = icmp ult i32 %30, 3
  br i1 %31, label %162, label %32, !prof !2

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, -3
  store i32 %35, i32* %33, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %162, !prof !3

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add i8 %39, -1
  %42 = icmp ult i8 %41, 4
  br i1 %42, label %43, label %162, !prof !21

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 0
  %45 = bitcast %"struct.CFF::CFFIndex"* %0 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #10
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %48, 1
  %50 = udiv i32 -1, %49
  %51 = icmp ugt i32 %50, %40
  br i1 %51, label %52, label %162, !prof !5

52:                                               ; preds = %43
  %53 = mul nuw nsw i32 %49, %40
  %54 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %44, i64 0, i32 0, i32 0
  %55 = icmp eq i32 %53, 0
  br i1 %55, label %73, label %56

56:                                               ; preds = %52
  %57 = icmp ugt i8* %5, %54
  %58 = icmp ult i8* %9, %54
  %59 = or i1 %57, %58
  br i1 %59, label %162, label %60, !prof !6

60:                                               ; preds = %56
  %61 = ptrtoint %"struct.OT::IntType.6"* %44 to i64
  %62 = sub i64 %27, %61
  %63 = trunc i64 %62 to i32
  %64 = icmp ugt i32 %53, %63
  br i1 %64, label %162, label %65, !prof !2

65:                                               ; preds = %60
  %66 = sub nsw i32 %35, %53
  store i32 %66, i32* %33, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %162, !prof !3

68:                                               ; preds = %65
  %69 = load i8, i8* %38, align 1
  %70 = load i16, i16* %45, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #10
  %72 = zext i8 %69 to i32
  br label %73

73:                                               ; preds = %68, %52
  %74 = phi i32 [ %72, %68 ], [ %40, %52 ]
  %75 = phi i16 [ %71, %68 ], [ %47, %52 ]
  %76 = phi i32 [ %66, %68 ], [ %35, %52 ]
  %77 = phi i8 [ %69, %68 ], [ %39, %52 ]
  %78 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %79 = zext i8 %77 to i64
  %80 = zext i16 %75 to i64
  %81 = add nuw nsw i64 %80, 1
  %82 = mul nuw nsw i64 %81, %79
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  %84 = icmp eq i8 %77, 0
  br i1 %84, label %162, label %85

85:                                               ; preds = %73
  %86 = add nsw i32 %74, -1
  %87 = and i32 %74, 3
  %88 = icmp ult i32 %86, 3
  %89 = sub nsw i32 %74, %87
  %90 = icmp eq i32 %87, 0
  br label %91

91:                                               ; preds = %85, %139
  %92 = phi i64 [ %143, %139 ], [ 0, %85 ]
  %93 = phi i32 [ %142, %139 ], [ 0, %85 ]
  %94 = mul nuw nsw i64 %92, %79
  %95 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %94
  br i1 %88, label %123, label %96

96:                                               ; preds = %91, %96
  %97 = phi i32 [ %120, %96 ], [ 0, %91 ]
  %98 = phi %"struct.OT::IntType.6"* [ %116, %96 ], [ %95, %91 ]
  %99 = phi i32 [ %121, %96 ], [ %89, %91 ]
  %100 = shl i32 %97, 8
  %101 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %98, i64 0, i32 0, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %100, %103
  %105 = shl i32 %104, 8
  %106 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %98, i64 1, i32 0, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  %110 = shl i32 %109, 8
  %111 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %98, i64 2, i32 0, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  %115 = shl i32 %114, 8
  %116 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %98, i64 4
  %117 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %98, i64 3, i32 0, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = or i32 %115, %119
  %121 = add i32 %99, -4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %96

123:                                              ; preds = %96, %91
  %124 = phi i32 [ undef, %91 ], [ %120, %96 ]
  %125 = phi i32 [ 0, %91 ], [ %120, %96 ]
  %126 = phi %"struct.OT::IntType.6"* [ %95, %91 ], [ %116, %96 ]
  br i1 %90, label %139, label %127

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %125, %123 ]
  %129 = phi %"struct.OT::IntType.6"* [ %132, %127 ], [ %126, %123 ]
  %130 = phi i32 [ %137, %127 ], [ %87, %123 ]
  %131 = shl i32 %128, 8
  %132 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %129, i64 1
  %133 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %129, i64 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = or i32 %131, %135
  %137 = add i32 %130, -1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %127, !llvm.loop !57

139:                                              ; preds = %127, %123
  %140 = phi i32 [ %124, %123 ], [ %136, %127 ]
  %141 = icmp ugt i32 %140, %93
  %142 = select i1 %141, i32 %140, i32 %93
  %143 = add nuw nsw i64 %92, 1
  %144 = icmp eq i64 %92, %80
  br i1 %144, label %145, label %91

145:                                              ; preds = %139
  %146 = add i32 %142, -1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %145
  %149 = icmp slt i32 %146, 0
  %150 = icmp ugt i8* %5, %83
  %151 = or i1 %150, %149
  %152 = icmp ult i8* %9, %83
  %153 = or i1 %151, %152
  br i1 %153, label %162, label %154, !prof !58

154:                                              ; preds = %148
  %155 = ptrtoint i8* %83 to i64
  %156 = sub i64 %27, %155
  %157 = trunc i64 %156 to i32
  %158 = icmp ugt i32 %146, %157
  br i1 %158, label %162, label %159, !prof !2

159:                                              ; preds = %154
  %160 = sub i32 %76, %146
  store i32 %160, i32* %33, align 8
  %161 = icmp sgt i32 %160, 0
  br label %162

162:                                              ; preds = %73, %7, %159, %154, %145, %148, %37, %56, %60, %43, %2, %26, %32, %65, %22
  %163 = phi i1 [ true, %22 ], [ false, %65 ], [ false, %37 ], [ false, %32 ], [ false, %26 ], [ false, %2 ], [ false, %43 ], [ false, %60 ], [ false, %56 ], [ false, %148 ], [ false, %154 ], [ %161, %159 ], [ true, %145 ], [ false, %7 ], [ false, %73 ]
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3CFF18dict_interpreter_tINS_21cff1_top_dict_opset_tENS_22cff1_top_dict_values_tENS_26cff1_top_dict_interp_env_tEE9interpretERS2_(%"struct.CFF::dict_interpreter_t"*, %"struct.CFF::cff1_top_dict_values_t"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %struct.hb_vector_t.80* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 1
  %7 = bitcast %"struct.CFF::name_dict_values_t"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 -1, i64 44, i1 false) #10
  %8 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 4
  store i32 8720, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %1, i64 0, i32 5
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %15 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %20 = zext i8 %19 to i32
  %21 = or i32 %20, 256
  %22 = getelementptr inbounds %"struct.CFF::dict_interpreter_t", %"struct.CFF::dict_interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i8, i8* %15, align 4, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %83

25:                                               ; preds = %2, %80
  %26 = load i32, i32* %12, align 8
  %27 = add i32 %26, 1
  %28 = load i32, i32* %16, align 8
  %29 = icmp ugt i32 %27, %28
  br i1 %29, label %83, label %30

30:                                               ; preds = %25
  %31 = icmp ult i32 %26, %28
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %30
  store i8 1, i8* %15, align 4
  br label %37

33:                                               ; preds = %30
  %34 = load i8*, i8** %18, align 8
  %35 = zext i32 %26 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  br label %37

37:                                               ; preds = %33, %32
  %38 = phi i1 [ false, %32 ], [ true, %33 ]
  %39 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %32 ], [ %36, %33 ]
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i8 %40, 12
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  br i1 %38, label %44, label %70, !prof !59

44:                                               ; preds = %43
  %45 = icmp ult i32 %27, %28
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %44
  store i8 1, i8* %15, align 4
  br label %57

47:                                               ; preds = %44
  %48 = load i8*, i8** %18, align 8
  %49 = zext i32 %27 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %52, 256
  %54 = icmp ugt i32 %26, %28
  br i1 %54, label %57, label %55, !prof !6

55:                                               ; preds = %47
  store i32 %27, i32* %12, align 8
  %56 = add i32 %26, 2
  br label %60

57:                                               ; preds = %47, %46
  %58 = phi i32 [ %53, %47 ], [ %21, %46 ]
  store i32 %28, i32* %12, align 8
  store i8 1, i8* %15, align 4
  br label %68

59:                                               ; preds = %37
  br i1 %38, label %60, label %68, !prof !3

60:                                               ; preds = %59, %55
  %61 = phi i32 [ %27, %59 ], [ %56, %55 ]
  %62 = phi i32 [ %41, %59 ], [ %53, %55 ]
  %63 = phi i32 [ %26, %59 ], [ %27, %55 ]
  %64 = icmp ule i32 %63, %28
  %65 = icmp ule i32 %61, %28
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %68, !prof !21

67:                                               ; preds = %60
  store i32 %61, i32* %12, align 8
  br label %70

68:                                               ; preds = %60, %59, %57
  %69 = phi i32 [ %62, %60 ], [ %58, %57 ], [ %41, %59 ]
  store i32 %28, i32* %12, align 8
  store i8 1, i8* %15, align 4
  br label %70

70:                                               ; preds = %43, %67, %68
  %71 = phi i32 [ %62, %67 ], [ %69, %68 ], [ 65535, %43 ]
  tail call void @_ZN3CFF21cff1_top_dict_opset_t10process_opEjRNS_26cff1_top_dict_interp_env_tERNS_22cff1_top_dict_values_tE(i32 %71, %"struct.CFF::cff1_top_dict_interp_env_t"* dereferenceable(64) %17, %"struct.CFF::cff1_top_dict_values_t"* dereferenceable(112) %1)
  %72 = load i8, i8* %22, align 8, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %83, !prof !5

74:                                               ; preds = %70
  %75 = load i8, i8* %15, align 4, !range !4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %83, !prof !5

77:                                               ; preds = %74
  %78 = load i8, i8* %13, align 8, !range !4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %77
  %81 = load i32, i32* %14, align 8
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %25, !prof !2

83:                                               ; preds = %25, %77, %70, %74, %80, %2
  %84 = phi i1 [ true, %2 ], [ false, %80 ], [ true, %25 ], [ false, %74 ], [ false, %70 ], [ false, %77 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF7Charset8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::Charset"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %114, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %114, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.CFF::Charset"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %114, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %114, !prof !3

22:                                               ; preds = %17
  %23 = load i8, i8* %3, align 1
  switch i8 %23, label %114 [
    i8 0, label %24
    i8 1, label %44
    i8 2, label %79
  ]

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1
  %26 = bitcast %union.anon.74* %25 to %"struct.CFF::Charset0"*
  %27 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.CFF::Charset0", %"struct.CFF::Charset0"* %26, i64 0, i32 0, i64 %30
  %32 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %31, i64 0, i32 0, i32 0, i64 0
  %33 = icmp ugt i8* %5, %32
  %34 = icmp ult i8* %9, %32
  %35 = or i1 %33, %34
  br i1 %35, label %114, label %36, !prof !6

36:                                               ; preds = %24
  %37 = ptrtoint %"struct.OT::IntType"* %31 to i64
  %38 = sub i64 %12, %37
  %39 = trunc i64 %38 to i32
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %114, label %41, !prof !2

41:                                               ; preds = %36
  %42 = add i32 %19, -3
  store i32 %42, i32* %18, align 8
  %43 = icmp sgt i32 %42, 0
  br label %114

44:                                               ; preds = %22
  %45 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1
  %46 = bitcast %union.anon.74* %45 to %"struct.CFF::Charset1_2"*
  %47 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %114, label %51

51:                                               ; preds = %44, %74
  %52 = phi i32 [ %67, %74 ], [ %20, %44 ]
  %53 = phi i32 [ %77, %74 ], [ 0, %44 ]
  %54 = phi i32 [ %76, %74 ], [ %49, %44 ]
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %46, i64 0, i32 0, i64 %55
  %57 = getelementptr inbounds %"struct.CFF::Charset_Range", %"struct.CFF::Charset_Range"* %56, i64 0, i32 0, i32 0, i32 0, i64 0
  %58 = icmp ugt i8* %5, %57
  %59 = icmp ult i8* %9, %57
  %60 = or i1 %58, %59
  br i1 %60, label %114, label %61, !prof !6

61:                                               ; preds = %51
  %62 = ptrtoint %"struct.CFF::Charset_Range"* %56 to i64
  %63 = sub i64 %12, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp ult i32 %64, 3
  br i1 %65, label %114, label %66, !prof !2

66:                                               ; preds = %61
  %67 = add i32 %52, -3
  store i32 %67, i32* %18, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %114, !prof !3

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %46, i64 0, i32 0, i64 %55, i32 1, i32 0, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp ugt i32 %54, %72
  br i1 %73, label %74, label %114, !prof !3

74:                                               ; preds = %69
  %75 = xor i32 %72, -1
  %76 = add i32 %54, %75
  %77 = add i32 %53, 1
  %78 = icmp eq i32 %76, 0
  br i1 %78, label %114, label %51

79:                                               ; preds = %22
  %80 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, -1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %114, label %84

84:                                               ; preds = %79, %109
  %85 = phi i32 [ %100, %109 ], [ %20, %79 ]
  %86 = phi i32 [ %112, %109 ], [ 0, %79 ]
  %87 = phi i32 [ %111, %109 ], [ %82, %79 ]
  %88 = zext i32 %86 to i64
  %89 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1, i32 0, i32 0, i64 %88
  %90 = getelementptr inbounds %"struct.CFF::Charset_Range.76", %"struct.CFF::Charset_Range.76"* %89, i64 0, i32 0, i32 0, i32 0, i64 0
  %91 = icmp ugt i8* %5, %90
  %92 = icmp ult i8* %9, %90
  %93 = or i1 %91, %92
  br i1 %93, label %114, label %94, !prof !6

94:                                               ; preds = %84
  %95 = ptrtoint %"struct.CFF::Charset_Range.76"* %89 to i64
  %96 = sub i64 %12, %95
  %97 = trunc i64 %96 to i32
  %98 = icmp ult i32 %97, 4
  br i1 %98, label %114, label %99, !prof !2

99:                                               ; preds = %94
  %100 = add i32 %85, -4
  store i32 %100, i32* %18, align 8
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %114, !prof !3

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1, i32 0, i32 0, i64 %88, i32 1
  %104 = bitcast %"struct.OT::IntType"* %103 to i16*
  %105 = load i16, i16* %104, align 1
  %106 = tail call i16 @llvm.bswap.i16(i16 %105) #10
  %107 = zext i16 %106 to i32
  %108 = icmp ugt i32 %87, %107
  br i1 %108, label %109, label %114, !prof !3

109:                                              ; preds = %102
  %110 = xor i32 %107, -1
  %111 = add i32 %87, %110
  %112 = add i32 %86, 1
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %114, label %84

114:                                              ; preds = %109, %102, %99, %94, %84, %74, %69, %66, %61, %51, %79, %44, %41, %36, %24, %2, %7, %11, %22, %17
  %115 = phi i1 [ false, %17 ], [ false, %22 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ false, %36 ], [ false, %24 ], [ %43, %41 ], [ true, %44 ], [ true, %79 ], [ true, %74 ], [ false, %66 ], [ false, %61 ], [ false, %51 ], [ false, %69 ], [ true, %109 ], [ false, %99 ], [ false, %94 ], [ false, %84 ], [ false, %102 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF8Encoding8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::Encoding"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %154, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %154, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.CFF::Encoding"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %154, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %154, !prof !3

22:                                               ; preds = %17
  %23 = load i8, i8* %3, align 1
  %24 = and i8 %23, 127
  switch i8 %24, label %154 [
    i8 0, label %25
    i8 1, label %57
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %union.anon.71, %union.anon.71* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = icmp ugt i8* %5, %27
  %29 = icmp ult i8* %9, %27
  %30 = or i1 %28, %29
  br i1 %30, label %154, label %31, !prof !6

31:                                               ; preds = %25
  %32 = ptrtoint %union.anon.71* %26 to i64
  %33 = sub i64 %12, %32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %154, label %36, !prof !2

36:                                               ; preds = %31
  %37 = add i32 %19, -2
  store i32 %37, i32* %18, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %154, !prof !5

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0, i32 0
  %41 = load i8, i8* %27, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %40, i64 0, i32 0, i32 0
  %44 = icmp eq i8 %41, 0
  br i1 %44, label %90, label %45

45:                                               ; preds = %39
  %46 = icmp ugt i8* %5, %43
  %47 = icmp ult i8* %9, %43
  %48 = or i1 %46, %47
  br i1 %48, label %154, label %49, !prof !6

49:                                               ; preds = %45
  %50 = ptrtoint %"struct.OT::IntType.6"* %40 to i64
  %51 = sub i64 %12, %50
  %52 = trunc i64 %51 to i32
  %53 = icmp ult i32 %52, %42
  br i1 %53, label %154, label %54, !prof !2

54:                                               ; preds = %49
  %55 = sub nsw i32 %37, %42
  store i32 %55, i32* %18, align 8
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %90, label %154, !prof !3

57:                                               ; preds = %22
  %58 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"struct.CFF::Encoding1", %"struct.CFF::Encoding1"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = icmp ugt i8* %5, %59
  %61 = icmp ult i8* %9, %59
  %62 = or i1 %60, %61
  br i1 %62, label %154, label %63, !prof !6

63:                                               ; preds = %57
  %64 = ptrtoint %"struct.CFF::Encoding1"* %58 to i64
  %65 = sub i64 %12, %64
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %154, label %68, !prof !2

68:                                               ; preds = %63
  %69 = add i32 %19, -2
  store i32 %69, i32* %18, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %154, !prof !5

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %73 = load i8, i8* %59, align 1
  %74 = zext i8 %73 to i32
  %75 = getelementptr inbounds %"struct.CFF::Encoding1_Range", %"struct.CFF::Encoding1_Range"* %72, i64 0, i32 0, i32 0, i32 0
  %76 = shl nuw nsw i32 %74, 1
  %77 = icmp eq i8 %73, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %71
  %79 = icmp ugt i8* %5, %75
  %80 = icmp ult i8* %9, %75
  %81 = or i1 %79, %80
  br i1 %81, label %154, label %82, !prof !6

82:                                               ; preds = %78
  %83 = ptrtoint %"struct.CFF::Encoding1_Range"* %72 to i64
  %84 = sub i64 %12, %83
  %85 = trunc i64 %84 to i32
  %86 = icmp ugt i32 %76, %85
  br i1 %86, label %154, label %87, !prof !2

87:                                               ; preds = %82
  %88 = sub nsw i32 %69, %76
  store i32 %88, i32* %18, align 8
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %154, !prof !3

90:                                               ; preds = %87, %71, %54, %39
  %91 = phi i32 [ %88, %87 ], [ %69, %71 ], [ %55, %54 ], [ %37, %39 ]
  %92 = load i8, i8* %3, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %154

94:                                               ; preds = %90
  %95 = and i8 %92, 127
  switch i8 %95, label %120 [
    i8 0, label %96
    i8 1, label %109
  ]

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1
  %98 = bitcast %union.anon.71* %97 to %"struct.OT::ArrayOf.72"*
  %99 = getelementptr inbounds %union.anon.71, %union.anon.71* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = add nuw nsw i64 %101, 4294967295
  %103 = icmp eq i8 %100, 0
  %104 = and i64 %102, 4294967295
  %105 = getelementptr inbounds %"struct.OT::ArrayOf.72", %"struct.OT::ArrayOf.72"* %98, i64 0, i32 1, i64 %104
  %106 = select i1 %103, %"struct.OT::IntType.6"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::IntType.6"*), %"struct.OT::IntType.6"* %105, !prof !2
  %107 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %106, i64 1, i32 0, i32 0
  %108 = bitcast i8* %107 to %"struct.CFF::CFF1SuppEncData"*
  br label %120

109:                                              ; preds = %94
  %110 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = add nuw nsw i64 %112, 4294967295
  %114 = icmp eq i8 %111, 0
  %115 = and i64 %113, 4294967295
  %116 = getelementptr inbounds %"struct.CFF::Encoding", %"struct.CFF::Encoding"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 %115
  %117 = select i1 %114, %"struct.CFF::Encoding1_Range"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Encoding1_Range"*), %"struct.CFF::Encoding1_Range"* %116, !prof !2
  %118 = getelementptr inbounds %"struct.CFF::Encoding1_Range", %"struct.CFF::Encoding1_Range"* %117, i64 1, i32 0, i32 0, i32 0
  %119 = bitcast i8* %118 to %"struct.CFF::CFF1SuppEncData"*
  br label %120

120:                                              ; preds = %94, %96, %109
  %121 = phi %"struct.CFF::CFF1SuppEncData"* [ %119, %109 ], [ %108, %96 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF1SuppEncData"*), %94 ]
  %122 = getelementptr inbounds %"struct.CFF::CFF1SuppEncData", %"struct.CFF::CFF1SuppEncData"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = icmp ugt i8* %5, %122
  %124 = icmp ult i8* %9, %122
  %125 = or i1 %123, %124
  br i1 %125, label %154, label %126, !prof !6

126:                                              ; preds = %120
  %127 = ptrtoint %"struct.CFF::CFF1SuppEncData"* %121 to i64
  %128 = sub i64 %12, %127
  %129 = trunc i64 %128 to i32
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %154, label %131, !prof !2

131:                                              ; preds = %126
  %132 = add nsw i32 %91, -1
  store i32 %132, i32* %18, align 8
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %154, !prof !5

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"struct.CFF::CFF1SuppEncData", %"struct.CFF::CFF1SuppEncData"* %121, i64 0, i32 0, i32 1, i64 0
  %136 = load i8, i8* %122, align 1
  %137 = zext i8 %136 to i32
  %138 = getelementptr inbounds %"struct.CFF::SuppEncoding", %"struct.CFF::SuppEncoding"* %135, i64 0, i32 0, i32 0, i32 0
  %139 = mul nuw nsw i32 %137, 3
  %140 = icmp eq i8 %136, 0
  br i1 %140, label %153, label %141

141:                                              ; preds = %134
  %142 = icmp ugt i8* %5, %138
  %143 = icmp ult i8* %9, %138
  %144 = or i1 %142, %143
  br i1 %144, label %154, label %145, !prof !6

145:                                              ; preds = %141
  %146 = ptrtoint %"struct.CFF::SuppEncoding"* %135 to i64
  %147 = sub i64 %12, %146
  %148 = trunc i64 %147 to i32
  %149 = icmp ugt i32 %139, %148
  br i1 %149, label %154, label %150, !prof !2

150:                                              ; preds = %145
  %151 = sub nsw i32 %132, %139
  store i32 %151, i32* %18, align 8
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %150, %134
  br label %154

154:                                              ; preds = %90, %120, %126, %131, %141, %145, %150, %153, %2, %7, %11, %22, %78, %82, %57, %63, %68, %87, %45, %49, %25, %31, %36, %54, %17
  %155 = phi i1 [ false, %17 ], [ false, %54 ], [ false, %36 ], [ false, %31 ], [ false, %25 ], [ false, %49 ], [ false, %45 ], [ false, %87 ], [ false, %68 ], [ false, %63 ], [ false, %57 ], [ false, %82 ], [ false, %78 ], [ false, %22 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ true, %90 ], [ true, %153 ], [ false, %150 ], [ false, %131 ], [ false, %126 ], [ false, %120 ], [ false, %145 ], [ false, %141 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3CFF18dict_interpreter_tINS_22cff1_font_dict_opset_tENS_23cff1_font_dict_values_tENS_12interp_env_tINS_8number_tEEEE9interpretERS2_(%"struct.CFF::dict_interpreter_t.347"*, %"struct.CFF::cff1_font_dict_values_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %1, i64 0, i32 2
  %6 = bitcast %struct.hb_vector_t.84* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 28, i1 false) #10
  store i32 -1, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %10 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 256
  %17 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.347", %"struct.CFF::dict_interpreter_t.347"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i8, i8* %11, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %78

20:                                               ; preds = %2, %75
  %21 = load i32, i32* %7, align 8
  %22 = add i32 %21, 1
  %23 = load i32, i32* %12, align 8
  %24 = icmp ugt i32 %22, %23
  br i1 %24, label %78, label %25

25:                                               ; preds = %20
  %26 = icmp ult i32 %21, %23
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %25
  store i8 1, i8* %11, align 4
  br label %32

28:                                               ; preds = %25
  %29 = load i8*, i8** %13, align 8
  %30 = zext i32 %21 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  br label %32

32:                                               ; preds = %28, %27
  %33 = phi i1 [ false, %27 ], [ true, %28 ]
  %34 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %27 ], [ %31, %28 ]
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i8 %35, 12
  br i1 %37, label %38, label %54

38:                                               ; preds = %32
  br i1 %33, label %39, label %65, !prof !59

39:                                               ; preds = %38
  %40 = icmp ult i32 %22, %23
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %39
  store i8 1, i8* %11, align 4
  br label %52

42:                                               ; preds = %39
  %43 = load i8*, i8** %13, align 8
  %44 = zext i32 %22 to i64
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = or i32 %47, 256
  %49 = icmp ugt i32 %21, %23
  br i1 %49, label %52, label %50, !prof !6

50:                                               ; preds = %42
  store i32 %22, i32* %7, align 8
  %51 = add i32 %21, 2
  br label %55

52:                                               ; preds = %42, %41
  %53 = phi i32 [ %48, %42 ], [ %16, %41 ]
  store i32 %23, i32* %7, align 8
  store i8 1, i8* %11, align 4
  br label %63

54:                                               ; preds = %32
  br i1 %33, label %55, label %63, !prof !3

55:                                               ; preds = %54, %50
  %56 = phi i32 [ %22, %54 ], [ %51, %50 ]
  %57 = phi i32 [ %36, %54 ], [ %48, %50 ]
  %58 = phi i32 [ %21, %54 ], [ %22, %50 ]
  %59 = icmp ule i32 %58, %23
  %60 = icmp ule i32 %56, %23
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %63, !prof !21

62:                                               ; preds = %55
  store i32 %56, i32* %7, align 8
  br label %65

63:                                               ; preds = %55, %54, %52
  %64 = phi i32 [ %57, %55 ], [ %53, %52 ], [ %36, %54 ]
  store i32 %23, i32* %7, align 8
  store i8 1, i8* %11, align 4
  br label %65

65:                                               ; preds = %38, %62, %63
  %66 = phi i32 [ %57, %62 ], [ %64, %63 ], [ 65535, %38 ]
  tail call void @_ZN3CFF22cff1_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff1_font_dict_values_tE(i32 %66, %"struct.CFF::interp_env_t"* dereferenceable(56) %10, %"struct.CFF::cff1_font_dict_values_t"* dereferenceable(40) %1)
  %67 = load i8, i8* %17, align 8, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %78, !prof !5

69:                                               ; preds = %65
  %70 = load i8, i8* %11, align 4, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78, !prof !5

72:                                               ; preds = %69
  %73 = load i8, i8* %8, align 8, !range !4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %78, !prof !5

75:                                               ; preds = %72
  %76 = load i32, i32* %9, align 8
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %20, !prof !2

78:                                               ; preds = %20, %72, %65, %69, %75, %2
  %79 = phi i1 [ true, %2 ], [ false, %75 ], [ true, %20 ], [ false, %69 ], [ false, %65 ], [ false, %72 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3CFF18dict_interpreter_tINS_25cff1_private_dict_opset_tENS_31cff1_private_dict_values_base_tINS_10dict_val_tEEENS_12interp_env_tINS_8number_tEEEE9interpretERS4_(%"struct.CFF::dict_interpreter_t.349"*, %"struct.CFF::cff1_private_dict_values_base_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %1, i64 0, i32 2
  %6 = bitcast %struct.hb_vector_t.88* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs"*), %"struct.CFF::Subrs"** %5, align 8
  %7 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %10 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 256
  %17 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.349", %"struct.CFF::dict_interpreter_t.349"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i8, i8* %11, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %78

20:                                               ; preds = %2, %75
  %21 = load i32, i32* %7, align 8
  %22 = add i32 %21, 1
  %23 = load i32, i32* %12, align 8
  %24 = icmp ugt i32 %22, %23
  br i1 %24, label %78, label %25

25:                                               ; preds = %20
  %26 = icmp ult i32 %21, %23
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %25
  store i8 1, i8* %11, align 4
  br label %32

28:                                               ; preds = %25
  %29 = load i8*, i8** %13, align 8
  %30 = zext i32 %21 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  br label %32

32:                                               ; preds = %28, %27
  %33 = phi i1 [ false, %27 ], [ true, %28 ]
  %34 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %27 ], [ %31, %28 ]
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i8 %35, 12
  br i1 %37, label %38, label %54

38:                                               ; preds = %32
  br i1 %33, label %39, label %65, !prof !59

39:                                               ; preds = %38
  %40 = icmp ult i32 %22, %23
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %39
  store i8 1, i8* %11, align 4
  br label %52

42:                                               ; preds = %39
  %43 = load i8*, i8** %13, align 8
  %44 = zext i32 %22 to i64
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = or i32 %47, 256
  %49 = icmp ugt i32 %21, %23
  br i1 %49, label %52, label %50, !prof !6

50:                                               ; preds = %42
  store i32 %22, i32* %7, align 8
  %51 = add i32 %21, 2
  br label %55

52:                                               ; preds = %42, %41
  %53 = phi i32 [ %48, %42 ], [ %16, %41 ]
  store i32 %23, i32* %7, align 8
  store i8 1, i8* %11, align 4
  br label %63

54:                                               ; preds = %32
  br i1 %33, label %55, label %63, !prof !3

55:                                               ; preds = %54, %50
  %56 = phi i32 [ %22, %54 ], [ %51, %50 ]
  %57 = phi i32 [ %36, %54 ], [ %48, %50 ]
  %58 = phi i32 [ %21, %54 ], [ %22, %50 ]
  %59 = icmp ule i32 %58, %23
  %60 = icmp ule i32 %56, %23
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %63, !prof !21

62:                                               ; preds = %55
  store i32 %56, i32* %7, align 8
  br label %65

63:                                               ; preds = %55, %54, %52
  %64 = phi i32 [ %57, %55 ], [ %53, %52 ], [ %36, %54 ]
  store i32 %23, i32* %7, align 8
  store i8 1, i8* %11, align 4
  br label %65

65:                                               ; preds = %38, %62, %63
  %66 = phi i32 [ %57, %62 ], [ %64, %63 ], [ 65535, %38 ]
  tail call void @_ZN3CFF25cff1_private_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_31cff1_private_dict_values_base_tINS_10dict_val_tEEE(i32 %66, %"struct.CFF::interp_env_t"* dereferenceable(56) %10, %"struct.CFF::cff1_private_dict_values_base_t"* dereferenceable(40) %1)
  %67 = load i8, i8* %17, align 8, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %78, !prof !5

69:                                               ; preds = %65
  %70 = load i8, i8* %11, align 4, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78, !prof !5

72:                                               ; preds = %69
  %73 = load i8, i8* %8, align 8, !range !4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %78, !prof !5

75:                                               ; preds = %72
  %76 = load i32, i32* %9, align 8
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %20, !prof !2

78:                                               ; preds = %20, %72, %65, %69, %75, %2
  %79 = phi i1 [ true, %2 ], [ false, %75 ], [ true, %20 ], [ false, %69 ], [ false, %65 ], [ false, %72 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff1EEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %41

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 4
  br i1 %30, label %37, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -4
  store i32 %32, i32* %23, align 8
  %33 = load i8, i8* %8, align 1
  %34 = icmp eq i8 %33, 1
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %35 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #10
  br i1 %34, label %36, label %39

36:                                               ; preds = %31
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %41

37:                                               ; preds = %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %38 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  br label %39

39:                                               ; preds = %37, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %40 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %41

41:                                               ; preds = %36, %39, %27
  %42 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %36 ], [ %40, %39 ]
  ret %struct.hb_blob_t* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF21cff1_top_dict_opset_t10process_opEjRNS_26cff1_top_dict_interp_env_tERNS_22cff1_top_dict_values_tE(i32, %"struct.CFF::cff1_top_dict_interp_env_t"* dereferenceable(64), %"struct.CFF::cff1_top_dict_values_t"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.CFF::cff1_top_dict_val_t", align 8
  %5 = bitcast %"struct.CFF::cff1_top_dict_val_t"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.CFF::byte_str_t"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = xor i32 %12, -1
  %14 = add i32 %9, %13
  %15 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %4, i64 0, i32 1
  store i32 %14, i32* %15, align 8
  switch i32 %0, label %342 [
    i32 0, label %16
    i32 1, label %16
    i32 256, label %16
    i32 2, label %16
    i32 3, label %16
    i32 4, label %16
    i32 277, label %16
    i32 278, label %16
    i32 257, label %57
    i32 258, label %57
    i32 259, label %57
    i32 260, label %57
    i32 261, label %57
    i32 262, label %57
    i32 13, label %57
    i32 264, label %57
    i32 276, label %57
    i32 287, label %57
    i32 288, label %57
    i32 289, label %57
    i32 291, label %57
    i32 5, label %57
    i32 14, label %57
    i32 279, label %57
    i32 290, label %59
    i32 286, label %91
    i32 16, label %181
    i32 15, label %215
    i32 293, label %249
    i32 18, label %281
  ]

16:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  %17 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %35, label %21, !prof !2

21:                                               ; preds = %16
  %22 = add i32 %19, -1
  store i32 %22, i32* %18, align 4
  %23 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %24, %22
  br i1 %25, label %29, label %26, !prof !3

26:                                               ; preds = %21
  %27 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %27, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %28 = bitcast i64 %27 to double
  br label %39

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %31 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %30, align 8
  %32 = zext i32 %22 to i64
  %33 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %31, i64 %32, i32 0
  %34 = load double, double* %33, align 8
  br label %39

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %17, i64 0, i32 0, i32 0
  store i8 1, i8* %36, align 8
  %37 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %37, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %38 = bitcast i64 %37 to double
  br label %39

39:                                               ; preds = %35, %29, %26
  %40 = phi double [ %38, %35 ], [ %28, %26 ], [ %34, %29 ]
  %41 = fptosi double %40 to i32
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %17, i64 0, i32 0, i32 0
  store i8 1, i8* %44, align 8
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi i32 [ 0, %43 ], [ %41, %39 ]
  switch i32 %0, label %54 [
    i32 278, label %53
    i32 1, label %47
    i32 256, label %48
    i32 2, label %49
    i32 3, label %50
    i32 4, label %51
    i32 277, label %52
  ]

47:                                               ; preds = %45
  br label %54

48:                                               ; preds = %45
  br label %54

49:                                               ; preds = %45
  br label %54

50:                                               ; preds = %45
  br label %54

51:                                               ; preds = %45
  br label %54

52:                                               ; preds = %45
  br label %54

53:                                               ; preds = %45
  br label %54

54:                                               ; preds = %45, %47, %48, %49, %50, %51, %52, %53
  %55 = phi i64 [ 6, %52 ], [ 5, %51 ], [ 4, %50 ], [ 3, %49 ], [ 2, %48 ], [ 1, %47 ], [ 8, %53 ], [ 0, %45 ]
  %56 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 1, i32 0, i64 %55
  store i32 %46, i32* %56, align 4
  store i32 0, i32* %18, align 4
  br label %416

57:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %58 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %58, align 4
  br label %416

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %78, label %64, !prof !2

64:                                               ; preds = %59
  %65 = add i32 %62, -1
  store i32 %65, i32* %61, align 4
  %66 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp ugt i32 %67, %65
  br i1 %68, label %72, label %69, !prof !3

69:                                               ; preds = %64
  %70 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %70, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %71 = bitcast i64 %70 to double
  br label %82

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %74 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %73, align 8
  %75 = zext i32 %65 to i64
  %76 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %75, i32 0
  %77 = load double, double* %76, align 8
  br label %82

78:                                               ; preds = %59
  %79 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %60, i64 0, i32 0, i32 0
  store i8 1, i8* %79, align 8
  %80 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %80, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %81 = bitcast i64 %80 to double
  br label %82

82:                                               ; preds = %78, %72, %69
  %83 = phi double [ %81, %78 ], [ %71, %69 ], [ %77, %72 ]
  %84 = fptosi double %83 to i32
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %88, !prof !2

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %60, i64 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi i32 [ 0, %86 ], [ %84, %82 ]
  %90 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 4
  store i32 %89, i32* %90, align 4
  store i32 0, i32* %61, align 4
  br label %416

91:                                               ; preds = %3
  %92 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %110, label %96, !prof !2

96:                                               ; preds = %91
  %97 = add i32 %94, -1
  store i32 %97, i32* %93, align 4
  %98 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, %97
  br i1 %100, label %104, label %101, !prof !3

101:                                              ; preds = %96
  %102 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %102, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %103 = bitcast i64 %102 to double
  br label %114

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %106 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %105, align 8
  %107 = zext i32 %97 to i64
  %108 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %106, i64 %107, i32 0
  %109 = load double, double* %108, align 8
  br label %114

110:                                              ; preds = %91
  %111 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %111, align 8
  %112 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %112, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %113 = bitcast i64 %112 to double
  br label %114

114:                                              ; preds = %110, %104, %101
  %115 = phi double [ %113, %110 ], [ %103, %101 ], [ %109, %104 ]
  %116 = fptosi double %115 to i32
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %120, !prof !2

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %119, align 8
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi i32 [ 0, %118 ], [ %116, %114 ]
  %122 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 3
  store i32 %121, i32* %122, align 8
  %123 = load i32, i32* %93, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %139, label %125, !prof !2

125:                                              ; preds = %120
  %126 = add i32 %123, -1
  store i32 %126, i32* %93, align 4
  %127 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp ugt i32 %128, %126
  br i1 %129, label %133, label %130, !prof !3

130:                                              ; preds = %125
  %131 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %131, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %132 = bitcast i64 %131 to double
  br label %143

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %135 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %134, align 8
  %136 = zext i32 %126 to i64
  %137 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %135, i64 %136, i32 0
  %138 = load double, double* %137, align 8
  br label %143

139:                                              ; preds = %120
  %140 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %140, align 8
  %141 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %141, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %142 = bitcast i64 %141 to double
  br label %143

143:                                              ; preds = %139, %133, %130
  %144 = phi double [ %142, %139 ], [ %132, %130 ], [ %138, %133 ]
  %145 = fptosi double %144 to i32
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %147, label %149, !prof !2

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %148, align 8
  br label %149

149:                                              ; preds = %143, %147
  %150 = phi i32 [ 0, %147 ], [ %145, %143 ]
  %151 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 1, i32 0, i64 10
  store i32 %150, i32* %151, align 4
  %152 = load i32, i32* %93, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %168, label %154, !prof !2

154:                                              ; preds = %149
  %155 = add i32 %152, -1
  store i32 %155, i32* %93, align 4
  %156 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = icmp ugt i32 %157, %155
  br i1 %158, label %162, label %159, !prof !3

159:                                              ; preds = %154
  %160 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %160, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %161 = bitcast i64 %160 to double
  br label %172

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %164 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %163, align 8
  %165 = zext i32 %155 to i64
  %166 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %164, i64 %165, i32 0
  %167 = load double, double* %166, align 8
  br label %172

168:                                              ; preds = %149
  %169 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %169, align 8
  %170 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %170, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %171 = bitcast i64 %170 to double
  br label %172

172:                                              ; preds = %168, %162, %159
  %173 = phi double [ %171, %168 ], [ %161, %159 ], [ %167, %162 ]
  %174 = fptosi double %173 to i32
  %175 = icmp slt i32 %174, 0
  br i1 %175, label %176, label %178, !prof !2

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %92, i64 0, i32 0, i32 0
  store i8 1, i8* %177, align 8
  br label %178

178:                                              ; preds = %172, %176
  %179 = phi i32 [ 0, %176 ], [ %174, %172 ]
  %180 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 1, i32 0, i64 9
  store i32 %179, i32* %180, align 4
  store i32 0, i32* %93, align 4
  br label %416

181:                                              ; preds = %3
  %182 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %183 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %200, label %186, !prof !2

186:                                              ; preds = %181
  %187 = add i32 %184, -1
  store i32 %187, i32* %183, align 4
  %188 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = icmp ugt i32 %189, %187
  br i1 %190, label %194, label %191, !prof !3

191:                                              ; preds = %186
  %192 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %192, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %193 = bitcast i64 %192 to double
  br label %204

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %196 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %195, align 8
  %197 = zext i32 %187 to i64
  %198 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %196, i64 %197, i32 0
  %199 = load double, double* %198, align 8
  br label %204

200:                                              ; preds = %181
  %201 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %182, i64 0, i32 0, i32 0
  store i8 1, i8* %201, align 8
  %202 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %202, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %203 = bitcast i64 %202 to double
  br label %204

204:                                              ; preds = %200, %194, %191
  %205 = phi double [ %203, %200 ], [ %193, %191 ], [ %199, %194 ]
  %206 = fptosi double %205 to i32
  %207 = icmp slt i32 %206, 0
  br i1 %207, label %208, label %210, !prof !2

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %182, i64 0, i32 0, i32 0
  store i8 1, i8* %209, align 8
  br label %210

210:                                              ; preds = %204, %208
  %211 = phi i32 [ 0, %208 ], [ %206, %204 ]
  %212 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 5
  store i32 %211, i32* %212, align 8
  store i32 0, i32* %183, align 4
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %434, label %416, !prof !2

215:                                              ; preds = %3
  %216 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %217 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %234, label %220, !prof !2

220:                                              ; preds = %215
  %221 = add i32 %218, -1
  store i32 %221, i32* %217, align 4
  %222 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp ugt i32 %223, %221
  br i1 %224, label %228, label %225, !prof !3

225:                                              ; preds = %220
  %226 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %226, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %227 = bitcast i64 %226 to double
  br label %238

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %230 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %229, align 8
  %231 = zext i32 %221 to i64
  %232 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %230, i64 %231, i32 0
  %233 = load double, double* %232, align 8
  br label %238

234:                                              ; preds = %215
  %235 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %216, i64 0, i32 0, i32 0
  store i8 1, i8* %235, align 8
  %236 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %236, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %237 = bitcast i64 %236 to double
  br label %238

238:                                              ; preds = %234, %228, %225
  %239 = phi double [ %237, %234 ], [ %227, %225 ], [ %233, %228 ]
  %240 = fptosi double %239 to i32
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %242, label %244, !prof !2

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %216, i64 0, i32 0, i32 0
  store i8 1, i8* %243, align 8
  br label %244

244:                                              ; preds = %238, %242
  %245 = phi i32 [ 0, %242 ], [ %240, %238 ]
  %246 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 6
  store i32 %245, i32* %246, align 4
  store i32 0, i32* %217, align 4
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %434, label %416, !prof !2

249:                                              ; preds = %3
  %250 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %251 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %268, label %254, !prof !2

254:                                              ; preds = %249
  %255 = add i32 %252, -1
  store i32 %255, i32* %251, align 4
  %256 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = icmp ugt i32 %257, %255
  br i1 %258, label %262, label %259, !prof !3

259:                                              ; preds = %254
  %260 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %260, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %261 = bitcast i64 %260 to double
  br label %272

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %264 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %263, align 8
  %265 = zext i32 %255 to i64
  %266 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %265, i32 0
  %267 = load double, double* %266, align 8
  br label %272

268:                                              ; preds = %249
  %269 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %250, i64 0, i32 0, i32 0
  store i8 1, i8* %269, align 8
  %270 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %270, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %271 = bitcast i64 %270 to double
  br label %272

272:                                              ; preds = %268, %262, %259
  %273 = phi double [ %271, %268 ], [ %261, %259 ], [ %267, %262 ]
  %274 = fptosi double %273 to i32
  %275 = icmp slt i32 %274, 0
  br i1 %275, label %276, label %278, !prof !2

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %250, i64 0, i32 0, i32 0
  store i8 1, i8* %277, align 8
  br label %278

278:                                              ; preds = %272, %276
  %279 = phi i32 [ 0, %276 ], [ %274, %272 ]
  %280 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 7
  store i32 %279, i32* %280, align 8
  store i32 0, i32* %251, align 4
  br label %416

281:                                              ; preds = %3
  %282 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %283 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %300, label %286, !prof !2

286:                                              ; preds = %281
  %287 = add i32 %284, -1
  store i32 %287, i32* %283, align 4
  %288 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = icmp ugt i32 %289, %287
  br i1 %290, label %294, label %291, !prof !3

291:                                              ; preds = %286
  %292 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %292, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %293 = bitcast i64 %292 to double
  br label %304

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %296 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %295, align 8
  %297 = zext i32 %287 to i64
  %298 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %296, i64 %297, i32 0
  %299 = load double, double* %298, align 8
  br label %304

300:                                              ; preds = %281
  %301 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %282, i64 0, i32 0, i32 0
  store i8 1, i8* %301, align 8
  %302 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %302, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %303 = bitcast i64 %302 to double
  br label %304

304:                                              ; preds = %300, %294, %291
  %305 = phi double [ %303, %300 ], [ %293, %291 ], [ %299, %294 ]
  %306 = fptosi double %305 to i32
  %307 = icmp slt i32 %306, 0
  br i1 %307, label %308, label %310, !prof !2

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %282, i64 0, i32 0, i32 0
  store i8 1, i8* %309, align 8
  br label %310

310:                                              ; preds = %304, %308
  %311 = phi i32 [ 0, %308 ], [ %306, %304 ]
  %312 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 8, i32 0
  store i32 %311, i32* %312, align 4
  %313 = load i32, i32* %283, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %329, label %315, !prof !2

315:                                              ; preds = %310
  %316 = add i32 %313, -1
  store i32 %316, i32* %283, align 4
  %317 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp ugt i32 %318, %316
  br i1 %319, label %323, label %320, !prof !3

320:                                              ; preds = %315
  %321 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %321, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %322 = bitcast i64 %321 to double
  br label %333

323:                                              ; preds = %315
  %324 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %325 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %324, align 8
  %326 = zext i32 %316 to i64
  %327 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %325, i64 %326, i32 0
  %328 = load double, double* %327, align 8
  br label %333

329:                                              ; preds = %310
  %330 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %282, i64 0, i32 0, i32 0
  store i8 1, i8* %330, align 8
  %331 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %331, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %332 = bitcast i64 %331 to double
  br label %333

333:                                              ; preds = %329, %323, %320
  %334 = phi double [ %332, %329 ], [ %322, %320 ], [ %328, %323 ]
  %335 = fptosi double %334 to i32
  %336 = icmp slt i32 %335, 0
  br i1 %336, label %337, label %339, !prof !2

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %282, i64 0, i32 0, i32 0
  store i8 1, i8* %338, align 8
  br label %339

339:                                              ; preds = %333, %337
  %340 = phi i32 [ 0, %337 ], [ %335, %333 ]
  %341 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 8, i32 1
  store i32 %340, i32* %341, align 4
  store i32 0, i32* %283, align 4
  br label %416

342:                                              ; preds = %3
  %343 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  store i32 %344, i32* %8, align 8
  switch i32 %0, label %411 [
    i32 17, label %345
    i32 292, label %377
    i32 263, label %409
  ]

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %347 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %364, label %350, !prof !2

350:                                              ; preds = %345
  %351 = add i32 %348, -1
  store i32 %351, i32* %347, align 4
  %352 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = icmp ugt i32 %353, %351
  br i1 %354, label %358, label %355, !prof !3

355:                                              ; preds = %350
  %356 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %356, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %357 = bitcast i64 %356 to double
  br label %368

358:                                              ; preds = %350
  %359 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %360 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %359, align 8
  %361 = zext i32 %351 to i64
  %362 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %361, i32 0
  %363 = load double, double* %362, align 8
  br label %368

364:                                              ; preds = %345
  %365 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %346, i64 0, i32 0, i32 0
  store i8 1, i8* %365, align 8
  %366 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %366, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %367 = bitcast i64 %366 to double
  br label %368

368:                                              ; preds = %364, %358, %355
  %369 = phi double [ %367, %364 ], [ %357, %355 ], [ %363, %358 ]
  %370 = fptosi double %369 to i32
  %371 = icmp slt i32 %370, 0
  br i1 %371, label %372, label %374, !prof !2

372:                                              ; preds = %368
  %373 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %346, i64 0, i32 0, i32 0
  store i8 1, i8* %373, align 8
  br label %374

374:                                              ; preds = %372, %368
  %375 = phi i32 [ 0, %372 ], [ %370, %368 ]
  %376 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 0, i32 1
  store i32 %375, i32* %376, align 8
  store i32 0, i32* %347, align 4
  br label %416

377:                                              ; preds = %342
  %378 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %379 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %396, label %382, !prof !2

382:                                              ; preds = %377
  %383 = add i32 %380, -1
  store i32 %383, i32* %379, align 4
  %384 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = icmp ugt i32 %385, %383
  br i1 %386, label %390, label %387, !prof !3

387:                                              ; preds = %382
  %388 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %388, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %389 = bitcast i64 %388 to double
  br label %400

390:                                              ; preds = %382
  %391 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %392 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %391, align 8
  %393 = zext i32 %383 to i64
  %394 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %392, i64 %393, i32 0
  %395 = load double, double* %394, align 8
  br label %400

396:                                              ; preds = %377
  %397 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %378, i64 0, i32 0, i32 0
  store i8 1, i8* %397, align 8
  %398 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %398, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %399 = bitcast i64 %398 to double
  br label %400

400:                                              ; preds = %396, %390, %387
  %401 = phi double [ %399, %396 ], [ %389, %387 ], [ %395, %390 ]
  %402 = fptosi double %401 to i32
  %403 = icmp slt i32 %402, 0
  br i1 %403, label %404, label %406, !prof !2

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %378, i64 0, i32 0, i32 0
  store i8 1, i8* %405, align 8
  br label %406

406:                                              ; preds = %404, %400
  %407 = phi i32 [ 0, %404 ], [ %402, %400 ]
  %408 = getelementptr inbounds %"struct.CFF::cff1_top_dict_values_t", %"struct.CFF::cff1_top_dict_values_t"* %2, i64 0, i32 0, i32 2
  store i32 %407, i32* %408, align 4
  store i32 0, i32* %379, align 4
  br label %416

409:                                              ; preds = %342
  %410 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %410, align 4
  br label %416

411:                                              ; preds = %342
  %412 = bitcast %"struct.CFF::cff1_top_dict_interp_env_t"* %1 to %"struct.CFF::interp_env_t"*
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %412) #10
  %413 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %434

416:                                              ; preds = %409, %406, %374, %411, %244, %210, %339, %278, %178, %88, %57, %54
  %417 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 2
  %418 = load i8, i8* %417, align 8, !range !4
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %420, label %434, !prof !5

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  %422 = load i8, i8* %421, align 4, !range !4
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %424, label %434, !prof !5

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %426 = load i8, i8* %425, align 8, !range !4
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %434, !prof !5

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %430 = load i32, i32* %429, align 8
  %431 = icmp slt i32 %430, 0
  br i1 %431, label %434, label %432, !prof !2

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"struct.CFF::cff1_top_dict_interp_env_t", %"struct.CFF::cff1_top_dict_interp_env_t"* %1, i64 0, i32 0, i32 0
  call void @_ZN3CFF15parsed_values_tINS_19cff1_top_dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_(%"struct.CFF::parsed_values_t"* %10, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %433, %"struct.CFF::cff1_top_dict_val_t"* nonnull dereferenceable(32) %4)
  br label %434

434:                                              ; preds = %424, %416, %420, %428, %411, %244, %210, %432
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15parsed_values_tINS_19cff1_top_dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_(%"struct.CFF::parsed_values_t"*, i32, %"struct.CFF::byte_str_ref_t"* dereferenceable(24), %"struct.CFF::cff1_top_dict_val_t"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %48, label %13, !prof !2

13:                                               ; preds = %4
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %15, label %36, !prof !2

15:                                               ; preds = %13, %15
  %16 = phi i32 [ %19, %15 ], [ %11, %13 ]
  %17 = lshr i32 %16, 1
  %18 = add i32 %16, 8
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, %9
  br i1 %20, label %21, label %15

21:                                               ; preds = %15
  %22 = icmp uge i32 %19, %11
  %23 = icmp ult i32 %19, 134217727
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %33, !prof !21

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 1, i32 2
  %27 = bitcast %"struct.CFF::cff1_top_dict_val_t"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = zext i32 %19 to i64
  %30 = shl nuw nsw i64 %29, 5
  %31 = tail call i8* @realloc(i8* %28, i64 %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %25, %21
  store i32 -1, i32* %10, align 8
  br label %48

34:                                               ; preds = %25
  store i8* %31, i8** %27, align 8
  store i32 %19, i32* %10, align 8
  %35 = load i32, i32* %5, align 4
  br label %36

36:                                               ; preds = %34, %13
  %37 = phi i32 [ %35, %34 ], [ %6, %13 ]
  %38 = icmp ugt i32 %9, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 1, i32 2
  %41 = load %"struct.CFF::cff1_top_dict_val_t"*, %"struct.CFF::cff1_top_dict_val_t"** %40, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %41, i64 %42
  %44 = bitcast %"struct.CFF::cff1_top_dict_val_t"* %43 to i8*
  %45 = sub i32 %9, %37
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %47, i1 false) #10
  br label %49

48:                                               ; preds = %33, %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #10
  br label %59

49:                                               ; preds = %39, %36
  store i32 %9, i32* %5, align 4
  %50 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 1, i32 2
  %51 = load %"struct.CFF::cff1_top_dict_val_t"*, %"struct.CFF::cff1_top_dict_val_t"** %50, align 8
  %52 = add nsw i32 %9, -1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %51, i64 %53
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #10
  %55 = icmp eq %"struct.CFF::cff1_top_dict_val_t"* %54, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_top_dict_val_t"*)
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"struct.CFF::cff1_top_dict_val_t"* %54 to i8*
  %58 = bitcast %"struct.CFF::cff1_top_dict_val_t"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 28, i1 false) #10
  br label %59

59:                                               ; preds = %48, %49, %56
  %60 = phi %"struct.CFF::cff1_top_dict_val_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_top_dict_val_t"*), %48 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff1_top_dict_val_t"*), %49 ], [ %54, %56 ]
  %61 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %60, i64 0, i32 0, i32 0
  store i32 %1, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.CFF::parsed_values_t", %"struct.CFF::parsed_values_t"* %0, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = sub i32 %65, %63
  %67 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = tail call i32 @llvm.usub.sat.i32(i32 %68, i32 %63) #10
  %70 = icmp ugt i32 %69, %66
  %71 = select i1 %70, i32 %66, i32 %69
  %72 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = zext i32 %63 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds %"struct.CFF::cff1_top_dict_val_t", %"struct.CFF::cff1_top_dict_val_t"* %60, i64 0, i32 0, i32 1, i32 0, i32 1
  %79 = bitcast i32* %78 to i64*
  store i64 %76, i64* %79, align 8
  %80 = load i32, i32* %64, align 8
  store i32 %80, i32* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %118 [
    i32 29, label %3
    i32 30, label %98
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %10, align 4
  br label %16

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = zext i32 %5 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %9 ], [ %15, %11 ]
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw i32 %19, 24
  %21 = add i32 %5, 1
  %22 = icmp ult i32 %21, %7
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %24, align 4
  br label %30

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = zext i32 %21 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  br label %30

30:                                               ; preds = %25, %23
  %31 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %23 ], [ %29, %25 ]
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 16
  %35 = or i32 %34, %20
  %36 = add i32 %5, 2
  %37 = icmp ult i32 %36, %7
  br i1 %37, label %40, label %38, !prof !3

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %39, align 4
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = zext i32 %36 to i64
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  br label %45

45:                                               ; preds = %40, %38
  %46 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %38 ], [ %44, %40 ]
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %35, %49
  %51 = add i32 %5, 3
  %52 = icmp ult i32 %51, %7
  br i1 %52, label %55, label %53, !prof !3

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %54, align 4
  br label %60

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = zext i32 %51 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  br label %60

60:                                               ; preds = %55, %53
  %61 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %53 ], [ %59, %55 ]
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %50, %63
  %65 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ult i32 %66, %68
  br i1 %69, label %70, label %76, !prof !3

70:                                               ; preds = %60
  %71 = add nuw i32 %66, 1
  store i32 %71, i32* %65, align 4
  %72 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %73 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %72, align 8
  %74 = zext i32 %66 to i64
  %75 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %73, i64 %74
  br label %79

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %77, align 8
  %78 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %78, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %79

79:                                               ; preds = %76, %70
  %80 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %76 ], [ %75, %70 ]
  %81 = sitofp i32 %64 to double
  %82 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %80, i64 0, i32 0
  store double %81, double* %82, align 8
  %83 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %84 = load i8, i8* %83, align 4, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86, !prof !3

86:                                               ; preds = %79
  %87 = load i32, i32* %6, align 8
  br label %96

88:                                               ; preds = %79
  %89 = load i32, i32* %4, align 8
  %90 = load i32, i32* %6, align 8
  %91 = icmp ule i32 %89, %90
  %92 = add i32 %89, 4
  %93 = icmp ule i32 %92, %90
  %94 = and i1 %91, %93
  br i1 %94, label %95, label %96, !prof !21

95:                                               ; preds = %88
  store i32 %92, i32* %4, align 8
  br label %119

96:                                               ; preds = %88, %86
  %97 = phi i32 [ %87, %86 ], [ %90, %88 ]
  store i32 %97, i32* %4, align 8
  store i8 1, i8* %83, align 4
  br label %119

98:                                               ; preds = %2
  %99 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  %100 = tail call double @_ZN3CFF12dict_opset_t9parse_bcdERNS_14byte_str_ref_tE(%"struct.CFF::byte_str_ref_t"* dereferenceable(24) %99)
  %101 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp ult i32 %102, %104
  br i1 %105, label %106, label %112, !prof !3

106:                                              ; preds = %98
  %107 = add nuw i32 %102, 1
  store i32 %107, i32* %101, align 4
  %108 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %109 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %108, align 8
  %110 = zext i32 %102 to i64
  %111 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %109, i64 %110
  br label %115

112:                                              ; preds = %98
  %113 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %113, align 8
  %114 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %114, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %115

115:                                              ; preds = %106, %112
  %116 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %112 ], [ %111, %106 ]
  %117 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %116, i64 0, i32 0
  store double %100, double* %117, align 8
  br label %119

118:                                              ; preds = %2
  tail call void @_ZN3CFF7opset_tINS_8number_tEE10process_opEjRNS_12interp_env_tIS1_EE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %1)
  br label %119

119:                                              ; preds = %96, %95, %118, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZN3CFF12dict_opset_t9parse_bcdERNS_14byte_str_ref_tE(%"struct.CFF::byte_str_ref_t"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca [32 x i8], align 16
  %3 = alloca i8*, align 8
  %4 = alloca double, align 8
  %5 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %80, !prof !3

8:                                                ; preds = %1
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  %12 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %13 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %0, i64 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %8, %72
  %15 = phi i8 [ 0, %8 ], [ %48, %72 ]
  %16 = phi i8 [ 0, %8 ], [ %49, %72 ]
  %17 = phi i32 [ 0, %8 ], [ %75, %72 ]
  %18 = phi i32 [ 0, %8 ], [ %74, %72 ]
  %19 = phi i8 [ 0, %8 ], [ %50, %72 ]
  %20 = and i32 %18, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %45

22:                                               ; preds = %14
  %23 = icmp eq i8 %16, 0
  br i1 %23, label %24, label %77, !prof !5

24:                                               ; preds = %22
  %25 = load i32, i32* %10, align 8
  %26 = add i32 %25, 1
  %27 = load i32, i32* %11, align 8
  %28 = icmp ugt i32 %26, %27
  br i1 %28, label %77, label %29, !prof !2

29:                                               ; preds = %24
  %30 = icmp ult i32 %25, %27
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %29
  store i8 1, i8* %5, align 4
  br label %39

32:                                               ; preds = %29
  %33 = load i8*, i8** %13, align 8
  %34 = zext i32 %25 to i64
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %15, 0
  br i1 %37, label %38, label %39, !prof !60

38:                                               ; preds = %32
  store i32 %26, i32* %10, align 8
  br label %41

39:                                               ; preds = %32, %31
  %40 = phi i8 [ %12, %31 ], [ %36, %32 ]
  store i32 %27, i32* %10, align 8
  store i8 1, i8* %5, align 4
  br label %41

41:                                               ; preds = %38, %39
  %42 = phi i8 [ 0, %38 ], [ 1, %39 ]
  %43 = phi i8 [ %36, %38 ], [ %40, %39 ]
  %44 = lshr i8 %43, 4
  br label %47

45:                                               ; preds = %14
  %46 = and i8 %19, 15
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi i8 [ %15, %45 ], [ %42, %41 ]
  %49 = phi i8 [ %16, %45 ], [ %42, %41 ]
  %50 = phi i8 [ %19, %45 ], [ %43, %41 ]
  %51 = phi i8 [ %46, %45 ], [ %44, %41 ]
  switch i8 %51, label %59 [
    i8 13, label %77
    i8 15, label %52
  ], !prof !61

52:                                               ; preds = %47
  %53 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  store i8* %9, i8** %3, align 8
  %54 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %55 = zext i32 %17 to i64
  %56 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 %55
  %57 = call zeroext i1 @_Z15hb_parse_doublePPKcS0_Pdb(i8** nonnull %3, i8* %56, double* nonnull %4, i1 zeroext true) #10
  %58 = load double, double* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br i1 %57, label %78, label %77

59:                                               ; preds = %47
  %60 = zext i8 %51 to i64
  %61 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.17, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i32 %17 to i64
  %64 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 %63
  store i8 %62, i8* %64, align 1
  %65 = icmp eq i8 %51, 12
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = add nuw nsw i32 %17, 1
  %68 = icmp eq i32 %67, 32
  br i1 %68, label %77, label %69, !prof !2

69:                                               ; preds = %66
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 %70
  store i8 45, i8* %71, align 1
  br label %72

72:                                               ; preds = %69, %59
  %73 = phi i32 [ %67, %69 ], [ %17, %59 ]
  %74 = add i32 %18, 1
  %75 = add nuw nsw i32 %73, 1
  %76 = icmp ult i32 %75, 32
  br i1 %76, label %14, label %77

77:                                               ; preds = %24, %22, %47, %66, %72, %52
  store i8 1, i8* %5, align 4
  br label %78

78:                                               ; preds = %52, %77
  %79 = phi double [ 0.000000e+00, %77 ], [ %58, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  br label %80

80:                                               ; preds = %1, %78
  %81 = phi double [ %79, %78 ], [ 0.000000e+00, %1 ]
  ret double %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF7opset_tINS_8number_tEE10process_opEjRNS_12interp_env_tIS1_EE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %179 [
    i32 28, label %3
    i32 247, label %68
    i32 248, label %68
    i32 249, label %68
    i32 250, label %68
    i32 251, label %124
    i32 252, label %124
    i32 253, label %124
    i32 254, label %124
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %10, align 4
  br label %16

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = zext i32 %5 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %16

16:                                               ; preds = %9, %11
  %17 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %9 ], [ %15, %11 ]
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw i16 %19, 8
  %21 = add i32 %5, 1
  %22 = icmp ult i32 %21, %7
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %24, align 4
  br label %30

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = zext i32 %21 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  br label %30

30:                                               ; preds = %23, %25
  %31 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %23 ], [ %29, %25 ]
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = or i16 %20, %33
  %35 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %36, %38
  br i1 %39, label %40, label %46, !prof !3

40:                                               ; preds = %30
  %41 = add nuw i32 %36, 1
  store i32 %41, i32* %35, align 4
  %42 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %43 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %42, align 8
  %44 = zext i32 %36 to i64
  %45 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %43, i64 %44
  br label %49

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %48, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %49

49:                                               ; preds = %40, %46
  %50 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %46 ], [ %45, %40 ]
  %51 = sitofp i16 %34 to double
  %52 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %50, i64 0, i32 0
  store double %51, double* %52, align 8
  %53 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %54 = load i8, i8* %53, align 4, !range !4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %58, label %56, !prof !3

56:                                               ; preds = %49
  %57 = load i32, i32* %6, align 8
  br label %66

58:                                               ; preds = %49
  %59 = load i32, i32* %4, align 8
  %60 = load i32, i32* %6, align 8
  %61 = icmp ule i32 %59, %60
  %62 = add i32 %59, 2
  %63 = icmp ule i32 %62, %60
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %66, !prof !21

65:                                               ; preds = %58
  store i32 %62, i32* %4, align 8
  br label %205

66:                                               ; preds = %58, %56
  %67 = phi i32 [ %57, %56 ], [ %60, %58 ]
  store i32 %67, i32* %4, align 8
  store i8 1, i8* %53, align 4
  br label %205

68:                                               ; preds = %2, %2, %2, %2
  %69 = shl i32 %0, 8
  %70 = add nuw nsw i32 %69, 2304
  %71 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp ult i32 %72, %74
  br i1 %75, label %78, label %76, !prof !3

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %77, align 4
  br label %83

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = zext i32 %72 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  br label %83

83:                                               ; preds = %76, %78
  %84 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %76 ], [ %82, %78 ]
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = or i32 %70, %86
  %88 = shl i32 %87, 16
  %89 = add i32 %88, 7077888
  %90 = ashr exact i32 %89, 16
  %91 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp ult i32 %92, %94
  br i1 %95, label %96, label %102, !prof !3

96:                                               ; preds = %83
  %97 = add nuw i32 %92, 1
  store i32 %97, i32* %91, align 4
  %98 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %99 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %98, align 8
  %100 = zext i32 %92 to i64
  %101 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %99, i64 %100
  br label %105

102:                                              ; preds = %83
  %103 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %103, align 8
  %104 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %104, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %105

105:                                              ; preds = %96, %102
  %106 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %102 ], [ %101, %96 ]
  %107 = sitofp i32 %90 to double
  %108 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %106, i64 0, i32 0
  store double %107, double* %108, align 8
  %109 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %110 = load i8, i8* %109, align 4, !range !4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %114, label %112, !prof !3

112:                                              ; preds = %105
  %113 = load i32, i32* %73, align 8
  br label %122

114:                                              ; preds = %105
  %115 = load i32, i32* %71, align 8
  %116 = load i32, i32* %73, align 8
  %117 = icmp ule i32 %115, %116
  %118 = add i32 %115, 1
  %119 = icmp ule i32 %118, %116
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %122, !prof !21

121:                                              ; preds = %114
  store i32 %118, i32* %71, align 8
  br label %205

122:                                              ; preds = %114, %112
  %123 = phi i32 [ %113, %112 ], [ %116, %114 ]
  store i32 %123, i32* %71, align 8
  store i8 1, i8* %109, align 4
  br label %205

124:                                              ; preds = %2, %2, %2, %2
  %125 = shl i32 %0, 16
  %126 = add nsw i32 %125, -16449536
  %127 = ashr exact i32 %126, 8
  %128 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = icmp ult i32 %129, %131
  br i1 %132, label %135, label %133, !prof !3

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %134, align 4
  br label %140

135:                                              ; preds = %124
  %136 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = zext i32 %129 to i64
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  br label %140

140:                                              ; preds = %133, %135
  %141 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %133 ], [ %139, %135 ]
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = sub nuw nsw i32 -108, %127
  %145 = sub nuw nsw i32 %144, %143
  %146 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp ult i32 %147, %149
  br i1 %150, label %151, label %157, !prof !3

151:                                              ; preds = %140
  %152 = add nuw i32 %147, 1
  store i32 %152, i32* %146, align 4
  %153 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %154 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %153, align 8
  %155 = zext i32 %147 to i64
  %156 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %155
  br label %160

157:                                              ; preds = %140
  %158 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %158, align 8
  %159 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %159, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %160

160:                                              ; preds = %151, %157
  %161 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %157 ], [ %156, %151 ]
  %162 = sitofp i32 %145 to double
  %163 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %161, i64 0, i32 0
  store double %162, double* %163, align 8
  %164 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %165 = load i8, i8* %164, align 4, !range !4
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %169, label %167, !prof !3

167:                                              ; preds = %160
  %168 = load i32, i32* %130, align 8
  br label %177

169:                                              ; preds = %160
  %170 = load i32, i32* %128, align 8
  %171 = load i32, i32* %130, align 8
  %172 = icmp ule i32 %170, %171
  %173 = add i32 %170, 1
  %174 = icmp ule i32 %173, %171
  %175 = and i1 %172, %174
  br i1 %175, label %176, label %177, !prof !21

176:                                              ; preds = %169
  store i32 %173, i32* %128, align 8
  br label %205

177:                                              ; preds = %169, %167
  %178 = phi i32 [ %168, %167 ], [ %171, %169 ]
  store i32 %178, i32* %128, align 8
  store i8 1, i8* %164, align 4
  br label %205

179:                                              ; preds = %2
  %180 = add i32 %0, -32
  %181 = icmp ult i32 %180, 215
  br i1 %181, label %182, label %202, !prof !3

182:                                              ; preds = %179
  %183 = add nsw i32 %0, -139
  %184 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = icmp ult i32 %185, %187
  br i1 %188, label %189, label %195, !prof !3

189:                                              ; preds = %182
  %190 = add nuw i32 %185, 1
  store i32 %190, i32* %184, align 4
  %191 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %192 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %191, align 8
  %193 = zext i32 %185 to i64
  %194 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %192, i64 %193
  br label %198

195:                                              ; preds = %182
  %196 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %196, align 8
  %197 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %197, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %198

198:                                              ; preds = %189, %195
  %199 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %195 ], [ %194, %189 ]
  %200 = sitofp i32 %183 to double
  %201 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %199, i64 0, i32 0
  store double %200, double* %201, align 8
  br label %205

202:                                              ; preds = %179
  %203 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %203, align 4
  %204 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  store i8 1, i8* %204, align 8
  br label %205

205:                                              ; preds = %177, %176, %122, %121, %66, %65, %198, %202
  ret void
}

declare hidden zeroext i1 @_Z15hb_parse_doublePPKcS0_Pdb(i8**, i8*, double*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF11FDSelect3_4IN2OT7IntTypeItLj2EEENS2_IhLj1EEEE8sanitizeEP21hb_sanitize_context_tj(%"struct.CFF::FDSelect3_4"*, %struct.hb_sanitize_context_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %134, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %134, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.CFF::FDSelect3_4"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %134, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %134, !prof !3

23:                                               ; preds = %18
  %24 = add i32 %20, -4
  store i32 %24, i32* %19, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %134, !prof !5

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = bitcast %"struct.CFF::FDSelect3_4"* %0 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #10
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range", %"struct.CFF::FDSelect3_4_Range"* %27, i64 0, i32 0, i32 0, i32 0, i64 0
  %33 = mul nuw nsw i32 %31, 3
  %34 = icmp eq i16 %29, 0
  br i1 %34, label %134, label %35

35:                                               ; preds = %26
  %36 = icmp ugt i8* %6, %32
  %37 = icmp ult i8* %10, %32
  %38 = or i1 %36, %37
  br i1 %38, label %134, label %39, !prof !6

39:                                               ; preds = %35
  %40 = ptrtoint %"struct.CFF::FDSelect3_4_Range"* %27 to i64
  %41 = sub i64 %13, %40
  %42 = trunc i64 %41 to i32
  %43 = icmp ugt i32 %33, %42
  br i1 %43, label %134, label %44, !prof !2

44:                                               ; preds = %39
  %45 = sub nsw i32 %24, %33
  store i32 %45, i32* %19, align 8
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %134, !prof !3

47:                                               ; preds = %44
  %48 = load i16, i16* %28, align 1
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %134, label %50

50:                                               ; preds = %47
  %51 = tail call i16 @llvm.bswap.i16(i16 %48) #10
  %52 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %53 = load i32, i32* %52, align 8
  %54 = zext i16 %51 to i64
  br label %57

55:                                               ; preds = %57
  %56 = icmp ult i64 %70, %54
  br i1 %56, label %57, label %71

57:                                               ; preds = %55, %50
  %58 = phi i64 [ 0, %50 ], [ %70, %55 ]
  %59 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %58
  %60 = bitcast %"struct.CFF::FDSelect3_4_Range"* %59 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = tail call i16 @llvm.bswap.i16(i16 %61) #10
  %63 = zext i16 %62 to i32
  %64 = icmp ugt i32 %53, %63
  %65 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %58, i32 1, i32 0, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp ult i32 %67, %2
  %69 = and i1 %64, %68
  %70 = add nuw nsw i64 %58, 1
  br i1 %69, label %55, label %134, !prof !3

71:                                               ; preds = %55
  %72 = tail call i16 @llvm.bswap.i16(i16 %48) #10
  %73 = icmp eq i16 %48, 0
  br i1 %73, label %134, label %74, !prof !2

74:                                               ; preds = %71
  %75 = bitcast %"struct.CFF::FDSelect3_4_Range"* %27 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %78, label %134, !prof !3

78:                                               ; preds = %74
  %79 = icmp ugt i16 %72, 1
  br i1 %79, label %80, label %101

80:                                               ; preds = %78
  %81 = zext i16 %72 to i64
  br label %84

82:                                               ; preds = %84
  %83 = icmp eq i64 %100, %81
  br i1 %83, label %101, label %84

84:                                               ; preds = %82, %80
  %85 = phi i64 [ 1, %80 ], [ %100, %82 ]
  %86 = add nsw i64 %85, -1
  %87 = icmp ult i64 %86, %81
  %88 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %86
  %89 = bitcast %"struct.CFF::FDSelect3_4_Range"* %88 to i16*
  %90 = select i1 %87, i16* %89, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %91 = load i16, i16* %90, align 1
  %92 = tail call i16 @llvm.bswap.i16(i16 %91) #10
  %93 = icmp ult i64 %85, %81
  %94 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %85
  %95 = bitcast %"struct.CFF::FDSelect3_4_Range"* %94 to i16*
  %96 = select i1 %93, i16* %95, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !3
  %97 = load i16, i16* %96, align 1
  %98 = tail call i16 @llvm.bswap.i16(i16 %97) #10
  %99 = icmp ult i16 %92, %98
  %100 = add nuw nsw i64 %85, 1
  br i1 %99, label %82, label %134, !prof !3

101:                                              ; preds = %82, %78
  %102 = zext i16 %72 to i64
  %103 = add nuw nsw i64 %102, 4294967295
  %104 = and i64 %103, 4294967295
  %105 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %104, i32 0, i32 0, i32 0, i64 3
  %106 = icmp ugt i8* %6, %105
  %107 = icmp ult i8* %10, %105
  %108 = or i1 %106, %107
  br i1 %108, label %134, label %109, !prof !6

109:                                              ; preds = %101
  %110 = ptrtoint i8* %105 to i64
  %111 = sub i64 %13, %110
  %112 = trunc i64 %111 to i32
  %113 = icmp ult i32 %112, 2
  br i1 %113, label %134, label %114, !prof !2

114:                                              ; preds = %109
  %115 = add i32 %45, -2
  store i32 %115, i32* %19, align 8
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %134, !prof !3

117:                                              ; preds = %114
  %118 = load i16, i16* %28, align 1
  %119 = tail call i16 @llvm.bswap.i16(i16 %118) #10
  %120 = zext i16 %119 to i64
  %121 = add nuw nsw i64 %120, 4294967295
  %122 = icmp eq i16 %118, 0
  %123 = and i64 %121, 4294967295
  %124 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %0, i64 0, i32 0, i32 1, i64 %123
  %125 = select i1 %122, %"struct.CFF::FDSelect3_4_Range"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range"*), %"struct.CFF::FDSelect3_4_Range"* %124, !prof !2
  %126 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range", %"struct.CFF::FDSelect3_4_Range"* %125, i64 0, i32 0, i32 0, i32 0, i64 3
  %127 = bitcast i8* %126 to i16*
  %128 = load i16, i16* %127, align 1
  %129 = tail call i16 @llvm.bswap.i16(i16 %128) #10
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, %130
  ret i1 %133

134:                                              ; preds = %57, %84, %26, %47, %74, %101, %109, %3, %8, %12, %114, %71, %44, %23, %39, %35, %18
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF22cff1_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff1_font_dict_values_tE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56), %"struct.CFF::cff1_font_dict_values_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %99 [
    i32 294, label %4
    i32 263, label %36
    i32 261, label %36
    i32 18, label %38
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9, !prof !2

9:                                                ; preds = %4
  %10 = add i32 %7, -1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, %10
  br i1 %13, label %17, label %14, !prof !3

14:                                               ; preds = %9
  %15 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %15, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %16 = bitcast i64 %15 to double
  br label %27

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %19 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %18, align 8
  %20 = zext i32 %10 to i64
  %21 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %19, i64 %20, i32 0
  %22 = load double, double* %21, align 8
  br label %27

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  store i8 1, i8* %24, align 8
  %25 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %25, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %26 = bitcast i64 %25 to double
  br label %27

27:                                               ; preds = %23, %17, %14
  %28 = phi double [ %26, %23 ], [ %16, %14 ], [ %22, %17 ]
  %29 = fptosi double %28 to i32
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  store i8 1, i8* %32, align 8
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi i32 [ 0, %31 ], [ %29, %27 ]
  %35 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %2, i64 0, i32 2
  store i32 %34, i32* %35, align 4
  br label %103

36:                                               ; preds = %3, %3
  %37 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  br label %103

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %57, label %43, !prof !2

43:                                               ; preds = %38
  %44 = add i32 %41, -1
  store i32 %44, i32* %40, align 4
  %45 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp ugt i32 %46, %44
  br i1 %47, label %51, label %48, !prof !3

48:                                               ; preds = %43
  %49 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %49, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %50 = bitcast i64 %49 to double
  br label %61

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %53 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %52, align 8
  %54 = zext i32 %44 to i64
  %55 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %54, i32 0
  %56 = load double, double* %55, align 8
  br label %61

57:                                               ; preds = %38
  %58 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %39, i64 0, i32 0, i32 0
  store i8 1, i8* %58, align 8
  %59 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %59, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %60 = bitcast i64 %59 to double
  br label %61

61:                                               ; preds = %57, %51, %48
  %62 = phi double [ %60, %57 ], [ %50, %48 ], [ %56, %51 ]
  %63 = fptosi double %62 to i32
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %39, i64 0, i32 0, i32 0
  store i8 1, i8* %66, align 8
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi i32 [ 0, %65 ], [ %63, %61 ]
  %69 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %2, i64 0, i32 1, i32 0
  store i32 %68, i32* %69, align 8
  %70 = load i32, i32* %40, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %86, label %72, !prof !2

72:                                               ; preds = %67
  %73 = add i32 %70, -1
  store i32 %73, i32* %40, align 4
  %74 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %75, %73
  br i1 %76, label %80, label %77, !prof !3

77:                                               ; preds = %72
  %78 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %78, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %79 = bitcast i64 %78 to double
  br label %90

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %82 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %81, align 8
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %82, i64 %83, i32 0
  %85 = load double, double* %84, align 8
  br label %90

86:                                               ; preds = %67
  %87 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %39, i64 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %88, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %89 = bitcast i64 %88 to double
  br label %90

90:                                               ; preds = %86, %80, %77
  %91 = phi double [ %89, %86 ], [ %79, %77 ], [ %85, %80 ]
  %92 = fptosi double %91 to i32
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %96, !prof !2

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %39, i64 0, i32 0, i32 0
  store i8 1, i8* %95, align 8
  br label %96

96:                                               ; preds = %90, %94
  %97 = phi i32 [ 0, %94 ], [ %92, %90 ]
  %98 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %2, i64 0, i32 1, i32 1
  store i32 %97, i32* %98, align 4
  br label %103

99:                                               ; preds = %3
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %1)
  %100 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %124

103:                                              ; preds = %33, %36, %96
  %104 = phi i32* [ %40, %96 ], [ %37, %36 ], [ %6, %33 ]
  store i32 0, i32* %104, align 4
  br label %105

105:                                              ; preds = %103, %99
  %106 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  %107 = load i8, i8* %106, align 8, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %124, !prof !5

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %111 = load i8, i8* %110, align 4, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %124, !prof !5

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  %115 = load i8, i8* %114, align 8, !range !4
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %124, !prof !5

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %124, label %121, !prof !2

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"struct.CFF::cff1_font_dict_values_t", %"struct.CFF::cff1_font_dict_values_t"* %2, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  tail call void @_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE(%"struct.CFF::parsed_values_t.83"* %122, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %123)
  br label %124

124:                                              ; preds = %113, %105, %109, %117, %99, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE(%"struct.CFF::parsed_values_t.83"*, i32, %"struct.CFF::byte_str_ref_t"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = icmp sgt i32 %6, 0
  %8 = select i1 %7, i32 %6, i32 0
  %9 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %47, label %12, !prof !2

12:                                               ; preds = %3
  %13 = icmp ult i32 %10, %8
  br i1 %13, label %14, label %35, !prof !2

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %18, %14 ], [ %10, %12 ]
  %16 = lshr i32 %15, 1
  %17 = add i32 %15, 8
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, %8
  br i1 %19, label %20, label %14

20:                                               ; preds = %14
  %21 = icmp uge i32 %18, %10
  %22 = icmp ult i32 %18, 178956970
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %32, !prof !21

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 1, i32 2
  %26 = bitcast %"struct.CFF::op_str_t"** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = zext i32 %18 to i64
  %29 = mul nuw nsw i64 %28, 24
  %30 = tail call i8* @realloc(i8* %27, i64 %29) #10
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %24, %20
  store i32 -1, i32* %9, align 8
  br label %47

33:                                               ; preds = %24
  store i8* %30, i8** %26, align 8
  store i32 %18, i32* %9, align 8
  %34 = load i32, i32* %4, align 4
  br label %35

35:                                               ; preds = %33, %12
  %36 = phi i32 [ %34, %33 ], [ %5, %12 ]
  %37 = icmp ugt i32 %8, %36
  br i1 %37, label %38, label %48

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 1, i32 2
  %40 = load %"struct.CFF::op_str_t"*, %"struct.CFF::op_str_t"** %39, align 8
  %41 = zext i32 %36 to i64
  %42 = getelementptr inbounds %"struct.CFF::op_str_t", %"struct.CFF::op_str_t"* %40, i64 %41
  %43 = bitcast %"struct.CFF::op_str_t"* %42 to i8*
  %44 = sub i32 %8, %36
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %46, i1 false) #10
  br label %48

47:                                               ; preds = %32, %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 24, i1 false) #10
  br label %54

48:                                               ; preds = %38, %35
  store i32 %8, i32* %4, align 4
  %49 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 1, i32 2
  %50 = load %"struct.CFF::op_str_t"*, %"struct.CFF::op_str_t"** %49, align 8
  %51 = add nsw i32 %8, -1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.CFF::op_str_t", %"struct.CFF::op_str_t"* %50, i64 %52
  br label %54

54:                                               ; preds = %47, %48
  %55 = phi %"struct.CFF::op_str_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::op_str_t"*), %47 ], [ %53, %48 ]
  %56 = getelementptr inbounds %"struct.CFF::op_str_t", %"struct.CFF::op_str_t"* %55, i64 0, i32 0
  store i32 %1, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.CFF::parsed_values_t.83", %"struct.CFF::parsed_values_t.83"* %0, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = sub i32 %60, %58
  %62 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = tail call i32 @llvm.usub.sat.i32(i32 %63, i32 %58) #10
  %65 = icmp ugt i32 %64, %61
  %66 = select i1 %65, i32 %61, i32 %64
  %67 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = zext i32 %58 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"struct.CFF::op_str_t", %"struct.CFF::op_str_t"* %55, i64 0, i32 1, i32 0, i32 0
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds %"struct.CFF::op_str_t", %"struct.CFF::op_str_t"* %55, i64 0, i32 1, i32 0, i32 1
  %74 = bitcast i32* %73 to i64*
  store i64 %71, i64* %74, align 8
  %75 = load i32, i32* %59, align 8
  store i32 %75, i32* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF25cff1_private_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_31cff1_private_dict_values_base_tINS_10dict_val_tEEE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56), %"struct.CFF::cff1_private_dict_values_base_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.CFF::dict_val_t", align 8
  %5 = bitcast %"struct.CFF::dict_val_t"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = bitcast %"struct.CFF::dict_val_t"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.CFF::byte_str_t"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  switch i32 %0, label %68 [
    i32 6, label %9
    i32 7, label %9
    i32 8, label %9
    i32 9, label %9
    i32 268, label %9
    i32 269, label %9
    i32 10, label %11
    i32 11, label %11
    i32 265, label %11
    i32 266, label %11
    i32 267, label %11
    i32 270, label %11
    i32 273, label %11
    i32 274, label %11
    i32 275, label %11
    i32 20, label %11
    i32 21, label %11
    i32 19, label %36
  ]

9:                                                ; preds = %3, %3, %3, %3, %3, %3
  %10 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  br label %72

11:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %12 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %29, label %15, !prof !2

15:                                               ; preds = %11
  %16 = add i32 %13, -1
  store i32 %16, i32* %12, align 4
  %17 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, %16
  br i1 %19, label %22, label %20, !prof !3

20:                                               ; preds = %15
  %21 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %21, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %32

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %24 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %23, align 8
  %25 = zext i32 %16 to i64
  %26 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %24, i64 %25
  %27 = bitcast %"struct.CFF::number_t"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  br label %32

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %30, align 8
  %31 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %31, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %32

32:                                               ; preds = %20, %22, %29
  %33 = phi i64 [ %31, %29 ], [ %21, %20 ], [ %28, %22 ]
  %34 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %4, i64 0, i32 1
  %35 = bitcast %"struct.CFF::number_t"* %34 to i64*
  store i64 %33, i64* %35, align 8
  br label %72

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %55, label %41, !prof !2

41:                                               ; preds = %36
  %42 = add i32 %39, -1
  store i32 %42, i32* %38, align 4
  %43 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ugt i32 %44, %42
  br i1 %45, label %49, label %46, !prof !3

46:                                               ; preds = %41
  %47 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %47, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %48 = bitcast i64 %47 to double
  br label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %51 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %50, align 8
  %52 = zext i32 %42 to i64
  %53 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %51, i64 %52, i32 0
  %54 = load double, double* %53, align 8
  br label %59

55:                                               ; preds = %36
  %56 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %37, i64 0, i32 0, i32 0
  store i8 1, i8* %56, align 8
  %57 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %57, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %58 = bitcast i64 %57 to double
  br label %59

59:                                               ; preds = %55, %49, %46
  %60 = phi double [ %58, %55 ], [ %48, %46 ], [ %54, %49 ]
  %61 = fptosi double %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %37, i64 0, i32 0, i32 0
  store i8 1, i8* %64, align 8
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i32 [ 0, %63 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %2, i64 0, i32 1
  store i32 %66, i32* %67, align 8
  br label %72

68:                                               ; preds = %3
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %1)
  %69 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %93

72:                                               ; preds = %9, %32, %65
  %73 = phi i32* [ %38, %65 ], [ %12, %32 ], [ %10, %9 ]
  store i32 0, i32* %73, align 4
  br label %74

74:                                               ; preds = %72, %68
  %75 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %93, !prof !5

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %80 = load i8, i8* %79, align 4, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %93, !prof !5

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %93, !prof !5

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %93, label %90, !prof !2

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.CFF::cff1_private_dict_values_base_t", %"struct.CFF::cff1_private_dict_values_base_t"* %2, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  call void @_ZN3CFF15parsed_values_tINS_10dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_(%"struct.CFF::parsed_values_t.87"* %91, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %92, %"struct.CFF::dict_val_t"* nonnull dereferenceable(32) %4)
  br label %93

93:                                               ; preds = %82, %74, %78, %86, %68, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15parsed_values_tINS_10dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_(%"struct.CFF::parsed_values_t.87"*, i32, %"struct.CFF::byte_str_ref_t"* dereferenceable(24), %"struct.CFF::dict_val_t"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %48, label %13, !prof !2

13:                                               ; preds = %4
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %15, label %36, !prof !2

15:                                               ; preds = %13, %15
  %16 = phi i32 [ %19, %15 ], [ %11, %13 ]
  %17 = lshr i32 %16, 1
  %18 = add i32 %16, 8
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, %9
  br i1 %20, label %21, label %15

21:                                               ; preds = %15
  %22 = icmp uge i32 %19, %11
  %23 = icmp ult i32 %19, 134217727
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %33, !prof !21

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 1, i32 2
  %27 = bitcast %"struct.CFF::dict_val_t"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = zext i32 %19 to i64
  %30 = shl nuw nsw i64 %29, 5
  %31 = tail call i8* @realloc(i8* %28, i64 %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %25, %21
  store i32 -1, i32* %10, align 8
  br label %48

34:                                               ; preds = %25
  store i8* %31, i8** %27, align 8
  store i32 %19, i32* %10, align 8
  %35 = load i32, i32* %5, align 4
  br label %36

36:                                               ; preds = %34, %13
  %37 = phi i32 [ %35, %34 ], [ %6, %13 ]
  %38 = icmp ugt i32 %9, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 1, i32 2
  %41 = load %"struct.CFF::dict_val_t"*, %"struct.CFF::dict_val_t"** %40, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %41, i64 %42
  %44 = bitcast %"struct.CFF::dict_val_t"* %43 to i8*
  %45 = sub i32 %9, %37
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %47, i1 false) #10
  br label %49

48:                                               ; preds = %33, %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #10
  br label %59

49:                                               ; preds = %39, %36
  store i32 %9, i32* %5, align 4
  %50 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 1, i32 2
  %51 = load %"struct.CFF::dict_val_t"*, %"struct.CFF::dict_val_t"** %50, align 8
  %52 = add nsw i32 %9, -1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %51, i64 %53
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #10
  %55 = icmp eq %"struct.CFF::dict_val_t"* %54, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::dict_val_t"*)
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"struct.CFF::dict_val_t"* %54 to i8*
  %58 = bitcast %"struct.CFF::dict_val_t"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 32, i1 false) #10
  br label %59

59:                                               ; preds = %48, %49, %56
  %60 = phi %"struct.CFF::dict_val_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::dict_val_t"*), %48 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::dict_val_t"*), %49 ], [ %54, %56 ]
  %61 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %60, i64 0, i32 0, i32 0
  store i32 %1, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.CFF::parsed_values_t.87", %"struct.CFF::parsed_values_t.87"* %0, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = sub i32 %65, %63
  %67 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = tail call i32 @llvm.usub.sat.i32(i32 %68, i32 %63) #10
  %70 = icmp ugt i32 %69, %66
  %71 = select i1 %70, i32 %66, i32 %69
  %72 = getelementptr inbounds %"struct.CFF::byte_str_ref_t", %"struct.CFF::byte_str_ref_t"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = zext i32 %63 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %60, i64 0, i32 0, i32 1, i32 0, i32 1
  %79 = bitcast i32* %78 to i64*
  store i64 %76, i64* %79, align 8
  %80 = load i32, i32* %64, align 8
  store i32 %80, i32* %62, align 8
  ret void
}

declare hidden i32 @_ZN2OT4cff129lookup_expert_charset_for_sidEj(i32) local_unnamed_addr #1

declare hidden i32 @_ZN2OT4cff136lookup_expert_subset_charset_for_sidEj(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind ssp uwtable
define internal fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8*, i64, i64) unnamed_addr #6 {
  %4 = mul i64 %1, %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = icmp ult i64 %1, 10
  br i1 %6, label %37, label %7

7:                                                ; preds = %3
  %8 = sub i64 0, %2
  %9 = icmp sgt i64 %2, 0
  %10 = add i64 %2, -1
  %11 = add i64 %2, -33
  %12 = lshr i64 %11, 5
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp sgt i64 %2, 1
  %15 = icmp ult i64 %10, 32
  %16 = and i64 %10, -32
  %17 = and i64 %13, 1
  %18 = icmp eq i64 %12, 0
  %19 = sub nuw nsw i64 %13, %17
  %20 = icmp eq i64 %17, 0
  %21 = icmp eq i64 %10, %16
  %22 = icmp ult i64 %10, 32
  %23 = and i64 %10, -32
  %24 = and i64 %13, 1
  %25 = icmp eq i64 %12, 0
  %26 = sub nuw nsw i64 %13, %24
  %27 = icmp eq i64 %24, 0
  %28 = icmp eq i64 %10, %23
  %29 = icmp eq i64 %2, 1
  %30 = icmp ult i64 %10, 32
  %31 = and i64 %10, -32
  %32 = and i64 %13, 1
  %33 = icmp eq i64 %12, 0
  %34 = sub nuw nsw i64 %13, %32
  %35 = icmp eq i64 %32, 0
  %36 = icmp eq i64 %10, %31
  br label %203

37:                                               ; preds = %1146, %3
  %38 = phi i8* [ %0, %3 ], [ %1149, %1146 ]
  %39 = phi i8* [ %5, %3 ], [ %1152, %1146 ]
  %40 = getelementptr inbounds i8, i8* %38, i64 %2
  %41 = icmp ult i8* %40, %39
  br i1 %41, label %42, label %1154

42:                                               ; preds = %37
  %43 = sub i64 0, %2
  %44 = icmp sgt i64 %2, 0
  br i1 %44, label %45, label %171

45:                                               ; preds = %42
  %46 = add i64 %2, -1
  %47 = add i64 %2, -33
  %48 = lshr i64 %47, 5
  %49 = add nuw nsw i64 %48, 1
  %50 = icmp ult i64 %46, 32
  %51 = and i64 %46, -32
  %52 = and i64 %49, 1
  %53 = icmp eq i64 %48, 0
  %54 = sub nuw nsw i64 %49, %52
  %55 = icmp eq i64 %52, 0
  %56 = icmp eq i64 %46, %51
  br label %57

57:                                               ; preds = %45, %60
  %58 = phi i8* [ %61, %60 ], [ %40, %45 ]
  %59 = icmp ugt i8* %58, %38
  br i1 %59, label %63, label %60

60:                                               ; preds = %161, %63, %57
  %61 = getelementptr inbounds i8, i8* %58, i64 %2
  %62 = icmp ult i8* %61, %39
  br i1 %62, label %57, label %1154

63:                                               ; preds = %57, %161
  %64 = phi i8* [ %65, %161 ], [ %58, %57 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %43
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i32*
  %68 = getelementptr inbounds i8, i8* %64, i64 8
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %67, align 4, !alias.scope !62, !noalias !65
  %71 = load i32, i32* %69, align 4, !alias.scope !65, !noalias !62
  %72 = icmp ugt i32 %70, %71
  %73 = select i1 %72, i32 %71, i32 %70
  %74 = bitcast i8* %65 to i8**
  %75 = load i8*, i8** %74, align 8, !alias.scope !62, !noalias !65
  %76 = bitcast i8* %64 to i8**
  %77 = load i8*, i8** %76, align 8, !alias.scope !65, !noalias !62
  %78 = sext i32 %73 to i64
  %79 = tail call i32 @strncmp(i8* %75, i8* %77, i64 %78) #11, !noalias !67
  %80 = icmp eq i32 %79, 0
  %81 = sub i32 %70, %71
  %82 = select i1 %80, i32 %81, i32 %79
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %60

84:                                               ; preds = %63
  %85 = ptrtoint i8* %77 to i64
  %86 = trunc i64 %85 to i8
  %87 = ptrtoint i8* %75 to i64
  %88 = trunc i64 %87 to i8
  store i8 %86, i8* %65, align 1, !alias.scope !68, !noalias !71
  store i8 %88, i8* %64, align 1, !alias.scope !71, !noalias !68
  %89 = getelementptr inbounds i8, i8* %65, i64 1
  %90 = icmp ult i8* %89, %64
  br i1 %90, label %91, label %161

91:                                               ; preds = %84
  br i1 %50, label %92, label %95

92:                                               ; preds = %160, %91
  %93 = phi i8* [ %64, %91 ], [ %96, %160 ]
  %94 = phi i8* [ %89, %91 ], [ %97, %160 ]
  br label %163

95:                                               ; preds = %91
  %96 = getelementptr i8, i8* %64, i64 %51
  %97 = getelementptr i8, i8* %89, i64 %51
  br i1 %53, label %140, label %98

98:                                               ; preds = %95
  %99 = getelementptr i8, i8* %64, i64 1
  %100 = getelementptr i8, i8* %64, i64 1
  br label %101

101:                                              ; preds = %101, %98
  %102 = phi i64 [ 0, %98 ], [ %137, %101 ]
  %103 = phi i64 [ %54, %98 ], [ %138, %101 ]
  %104 = getelementptr i8, i8* %89, i64 %102
  %105 = getelementptr inbounds i8, i8* %99, i64 %102
  %106 = bitcast i8* %104 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !68, !noalias !71
  %108 = getelementptr i8, i8* %104, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !68, !noalias !71
  %111 = bitcast i8* %105 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !71, !noalias !68
  %113 = getelementptr inbounds i8, i8* %105, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !71, !noalias !68
  %116 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !68, !noalias !71
  %117 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %117, align 1, !alias.scope !68, !noalias !71
  %118 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %118, align 1, !alias.scope !71, !noalias !68
  %119 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %119, align 1, !alias.scope !71, !noalias !68
  %120 = or i64 %102, 32
  %121 = getelementptr i8, i8* %89, i64 %120
  %122 = getelementptr inbounds i8, i8* %100, i64 %120
  %123 = bitcast i8* %121 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1, !alias.scope !68, !noalias !71
  %125 = getelementptr i8, i8* %121, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1, !alias.scope !68, !noalias !71
  %128 = bitcast i8* %122 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !71, !noalias !68
  %130 = getelementptr inbounds i8, i8* %122, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !alias.scope !71, !noalias !68
  %133 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 1, !alias.scope !68, !noalias !71
  %134 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %134, align 1, !alias.scope !68, !noalias !71
  %135 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %124, <16 x i8>* %135, align 1, !alias.scope !71, !noalias !68
  %136 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %136, align 1, !alias.scope !71, !noalias !68
  %137 = add i64 %102, 64
  %138 = add i64 %103, -2
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %101, !llvm.loop !73

140:                                              ; preds = %101, %95
  %141 = phi i64 [ 0, %95 ], [ %137, %101 ]
  br i1 %55, label %160, label %142

142:                                              ; preds = %140
  %143 = getelementptr i8, i8* %64, i64 1
  %144 = getelementptr i8, i8* %89, i64 %141
  %145 = getelementptr inbounds i8, i8* %143, i64 %141
  %146 = bitcast i8* %144 to <16 x i8>*
  %147 = load <16 x i8>, <16 x i8>* %146, align 1, !alias.scope !68, !noalias !71
  %148 = getelementptr i8, i8* %144, i64 16
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !68, !noalias !71
  %151 = bitcast i8* %145 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !71, !noalias !68
  %153 = getelementptr inbounds i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  %155 = load <16 x i8>, <16 x i8>* %154, align 1, !alias.scope !71, !noalias !68
  %156 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %156, align 1, !alias.scope !68, !noalias !71
  %157 = bitcast i8* %148 to <16 x i8>*
  store <16 x i8> %155, <16 x i8>* %157, align 1, !alias.scope !68, !noalias !71
  %158 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %158, align 1, !alias.scope !71, !noalias !68
  %159 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %159, align 1, !alias.scope !71, !noalias !68
  br label %160

160:                                              ; preds = %140, %142
  br i1 %56, label %161, label %92

161:                                              ; preds = %163, %160, %84
  %162 = icmp ugt i8* %65, %38
  br i1 %162, label %63, label %60

163:                                              ; preds = %92, %163
  %164 = phi i8* [ %166, %163 ], [ %93, %92 ]
  %165 = phi i8* [ %169, %163 ], [ %94, %92 ]
  %166 = getelementptr inbounds i8, i8* %164, i64 1
  %167 = load i8, i8* %165, align 1, !alias.scope !68, !noalias !71
  %168 = load i8, i8* %166, align 1, !alias.scope !71, !noalias !68
  store i8 %168, i8* %165, align 1, !alias.scope !68, !noalias !71
  store i8 %167, i8* %166, align 1, !alias.scope !71, !noalias !68
  %169 = getelementptr inbounds i8, i8* %165, i64 1
  %170 = icmp eq i8* %169, %64
  br i1 %170, label %161, label %163, !llvm.loop !75

171:                                              ; preds = %42, %200
  %172 = phi i8* [ %201, %200 ], [ %40, %42 ]
  %173 = icmp ugt i8* %172, %38
  br i1 %173, label %174, label %200

174:                                              ; preds = %171
  %175 = getelementptr inbounds i8, i8* %172, i64 8
  %176 = bitcast i8* %175 to i32*
  %177 = load i32, i32* %176, align 4, !alias.scope !65, !noalias !62
  %178 = bitcast i8* %172 to i8**
  %179 = load i8*, i8** %178, align 8, !alias.scope !65, !noalias !62
  br label %180

180:                                              ; preds = %180, %174
  %181 = phi i8* [ %179, %174 ], [ %191, %180 ]
  %182 = phi i32 [ %177, %174 ], [ %187, %180 ]
  %183 = phi i8* [ %172, %174 ], [ %184, %180 ]
  %184 = getelementptr inbounds i8, i8* %183, i64 %43
  %185 = getelementptr inbounds i8, i8* %184, i64 8
  %186 = bitcast i8* %185 to i32*
  %187 = load i32, i32* %186, align 4, !alias.scope !62, !noalias !65
  %188 = icmp ugt i32 %187, %182
  %189 = select i1 %188, i32 %182, i32 %187
  %190 = bitcast i8* %184 to i8**
  %191 = load i8*, i8** %190, align 8, !alias.scope !62, !noalias !65
  %192 = sext i32 %189 to i64
  %193 = tail call i32 @strncmp(i8* %191, i8* %181, i64 %192) #11, !noalias !67
  %194 = icmp eq i32 %193, 0
  %195 = sub i32 %187, %182
  %196 = select i1 %194, i32 %195, i32 %193
  %197 = icmp sgt i32 %196, 0
  %198 = icmp ugt i8* %184, %38
  %199 = and i1 %197, %198
  br i1 %199, label %180, label %200

200:                                              ; preds = %180, %171
  %201 = getelementptr inbounds i8, i8* %172, i64 %2
  %202 = icmp ult i8* %201, %39
  br i1 %202, label %171, label %1154

203:                                              ; preds = %7, %1146
  %204 = phi i8* [ %5, %7 ], [ %1152, %1146 ]
  %205 = phi i64 [ %1, %7 ], [ %1150, %1146 ]
  %206 = phi i8* [ %0, %7 ], [ %1149, %1146 ]
  %207 = ptrtoint i8* %206 to i64
  %208 = add i64 %205, -1
  %209 = mul i64 %208, %2
  %210 = getelementptr inbounds i8, i8* %206, i64 %209
  %211 = getelementptr inbounds i8, i8* %206, i64 %2
  %212 = lshr i64 %205, 1
  %213 = mul i64 %212, %2
  %214 = getelementptr inbounds i8, i8* %206, i64 %213
  %215 = getelementptr inbounds i8, i8* %210, i64 %8
  %216 = getelementptr inbounds i8, i8* %211, i64 8
  %217 = bitcast i8* %216 to i32*
  %218 = getelementptr inbounds i8, i8* %214, i64 8
  %219 = bitcast i8* %218 to i32*
  %220 = load i32, i32* %217, align 4
  %221 = load i32, i32* %219, align 4
  %222 = icmp ugt i32 %220, %221
  %223 = select i1 %222, i32 %221, i32 %220
  %224 = bitcast i8* %211 to i8**
  %225 = load i8*, i8** %224, align 8
  %226 = bitcast i8* %214 to i8**
  %227 = load i8*, i8** %226, align 8
  %228 = sext i32 %223 to i64
  %229 = tail call i32 @strncmp(i8* %225, i8* %227, i64 %228) #11
  %230 = icmp eq i32 %229, 0
  %231 = sub i32 %220, %221
  %232 = select i1 %230, i32 %231, i32 %229
  %233 = icmp sgt i32 %232, 0
  %234 = select i1 %233, i8* %211, i8* %214
  %235 = select i1 %233, i8* %214, i8* %211
  %236 = getelementptr inbounds i8, i8* %234, i64 8
  %237 = bitcast i8* %236 to i32*
  %238 = getelementptr inbounds i8, i8* %215, i64 8
  %239 = bitcast i8* %238 to i32*
  %240 = load i32, i32* %237, align 4
  %241 = load i32, i32* %239, align 4
  %242 = icmp ugt i32 %240, %241
  %243 = select i1 %242, i32 %241, i32 %240
  %244 = bitcast i8* %234 to i8**
  %245 = load i8*, i8** %244, align 8
  %246 = bitcast i8* %215 to i8**
  %247 = load i8*, i8** %246, align 8
  %248 = sext i32 %243 to i64
  %249 = tail call i32 @strncmp(i8* %245, i8* %247, i64 %248) #11
  %250 = icmp eq i32 %249, 0
  %251 = sub i32 %240, %241
  %252 = select i1 %250, i32 %251, i32 %249
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %269

254:                                              ; preds = %203
  %255 = getelementptr inbounds i8, i8* %235, i64 8
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = icmp ugt i32 %257, %241
  %259 = select i1 %258, i32 %241, i32 %257
  %260 = bitcast i8* %235 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = sext i32 %259 to i64
  %263 = tail call i32 @strncmp(i8* %261, i8* %247, i64 %262) #11
  %264 = icmp eq i32 %263, 0
  %265 = sub i32 %257, %241
  %266 = select i1 %264, i32 %265, i32 %263
  %267 = icmp sgt i32 %266, 0
  %268 = select i1 %267, i8* %235, i8* %215
  br label %269

269:                                              ; preds = %254, %203
  %270 = phi i8* [ %234, %203 ], [ %268, %254 ]
  %271 = ptrtoint i8* %270 to i64
  %272 = icmp eq i8* %270, %210
  br i1 %272, label %365, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds i8, i8* %270, i64 %2
  br i1 %9, label %275, label %365

275:                                              ; preds = %273
  %276 = getelementptr i8, i8* %270, i64 1
  %277 = icmp ugt i8* %274, %276
  %278 = select i1 %277, i8* %274, i8* %276
  %279 = ptrtoint i8* %278 to i64
  %280 = sub i64 %279, %271
  %281 = icmp ult i64 %280, 32
  br i1 %281, label %354, label %282

282:                                              ; preds = %275
  %283 = and i64 %280, -32
  %284 = getelementptr i8, i8* %270, i64 %283
  %285 = getelementptr i8, i8* %210, i64 %283
  %286 = add i64 %283, -32
  %287 = lshr exact i64 %286, 5
  %288 = add nuw nsw i64 %287, 1
  %289 = and i64 %288, 1
  %290 = icmp eq i64 %286, 0
  br i1 %290, label %332, label %291

291:                                              ; preds = %282
  %292 = sub nuw nsw i64 %288, %289
  br label %293

293:                                              ; preds = %293, %291
  %294 = phi i64 [ 0, %291 ], [ %329, %293 ]
  %295 = phi i64 [ %292, %291 ], [ %330, %293 ]
  %296 = getelementptr i8, i8* %270, i64 %294
  %297 = getelementptr i8, i8* %210, i64 %294
  %298 = bitcast i8* %296 to <16 x i8>*
  %299 = load <16 x i8>, <16 x i8>* %298, align 1, !alias.scope !77, !noalias !80
  %300 = getelementptr i8, i8* %296, i64 16
  %301 = bitcast i8* %300 to <16 x i8>*
  %302 = load <16 x i8>, <16 x i8>* %301, align 1, !alias.scope !77, !noalias !80
  %303 = bitcast i8* %297 to <16 x i8>*
  %304 = load <16 x i8>, <16 x i8>* %303, align 1, !alias.scope !80, !noalias !77
  %305 = getelementptr i8, i8* %297, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  %307 = load <16 x i8>, <16 x i8>* %306, align 1, !alias.scope !80, !noalias !77
  %308 = bitcast i8* %296 to <16 x i8>*
  store <16 x i8> %304, <16 x i8>* %308, align 1, !alias.scope !77, !noalias !80
  %309 = bitcast i8* %300 to <16 x i8>*
  store <16 x i8> %307, <16 x i8>* %309, align 1, !alias.scope !77, !noalias !80
  %310 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %299, <16 x i8>* %310, align 1, !alias.scope !80, !noalias !77
  %311 = bitcast i8* %305 to <16 x i8>*
  store <16 x i8> %302, <16 x i8>* %311, align 1, !alias.scope !80, !noalias !77
  %312 = or i64 %294, 32
  %313 = getelementptr i8, i8* %270, i64 %312
  %314 = getelementptr i8, i8* %210, i64 %312
  %315 = bitcast i8* %313 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !77, !noalias !80
  %317 = getelementptr i8, i8* %313, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !77, !noalias !80
  %320 = bitcast i8* %314 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !80, !noalias !77
  %322 = getelementptr i8, i8* %314, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  %324 = load <16 x i8>, <16 x i8>* %323, align 1, !alias.scope !80, !noalias !77
  %325 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %321, <16 x i8>* %325, align 1, !alias.scope !77, !noalias !80
  %326 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %326, align 1, !alias.scope !77, !noalias !80
  %327 = bitcast i8* %314 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %327, align 1, !alias.scope !80, !noalias !77
  %328 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %328, align 1, !alias.scope !80, !noalias !77
  %329 = add i64 %294, 64
  %330 = add i64 %295, -2
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %293, !llvm.loop !82

332:                                              ; preds = %293, %282
  %333 = phi i64 [ 0, %282 ], [ %329, %293 ]
  %334 = icmp eq i64 %289, 0
  br i1 %334, label %352, label %335

335:                                              ; preds = %332
  %336 = getelementptr i8, i8* %270, i64 %333
  %337 = getelementptr i8, i8* %210, i64 %333
  %338 = bitcast i8* %336 to <16 x i8>*
  %339 = load <16 x i8>, <16 x i8>* %338, align 1, !alias.scope !77, !noalias !80
  %340 = getelementptr i8, i8* %336, i64 16
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !alias.scope !77, !noalias !80
  %343 = bitcast i8* %337 to <16 x i8>*
  %344 = load <16 x i8>, <16 x i8>* %343, align 1, !alias.scope !80, !noalias !77
  %345 = getelementptr i8, i8* %337, i64 16
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1, !alias.scope !80, !noalias !77
  %348 = bitcast i8* %336 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %348, align 1, !alias.scope !77, !noalias !80
  %349 = bitcast i8* %340 to <16 x i8>*
  store <16 x i8> %347, <16 x i8>* %349, align 1, !alias.scope !77, !noalias !80
  %350 = bitcast i8* %337 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %350, align 1, !alias.scope !80, !noalias !77
  %351 = bitcast i8* %345 to <16 x i8>*
  store <16 x i8> %342, <16 x i8>* %351, align 1, !alias.scope !80, !noalias !77
  br label %352

352:                                              ; preds = %332, %335
  %353 = icmp eq i64 %280, %283
  br i1 %353, label %365, label %354

354:                                              ; preds = %352, %275
  %355 = phi i8* [ %270, %275 ], [ %284, %352 ]
  %356 = phi i8* [ %210, %275 ], [ %285, %352 ]
  br label %357

357:                                              ; preds = %354, %357
  %358 = phi i8* [ %362, %357 ], [ %355, %354 ]
  %359 = phi i8* [ %363, %357 ], [ %356, %354 ]
  %360 = load i8, i8* %358, align 1, !alias.scope !77, !noalias !80
  %361 = load i8, i8* %359, align 1, !alias.scope !80, !noalias !77
  store i8 %361, i8* %358, align 1, !alias.scope !77, !noalias !80
  store i8 %360, i8* %359, align 1, !alias.scope !80, !noalias !77
  %362 = getelementptr inbounds i8, i8* %358, i64 1
  %363 = getelementptr inbounds i8, i8* %359, i64 1
  %364 = icmp ult i8* %362, %274
  br i1 %364, label %357, label %365, !llvm.loop !83

365:                                              ; preds = %357, %352, %273, %269
  %366 = icmp sgt i64 %209, 0
  br i1 %366, label %367, label %751

367:                                              ; preds = %365
  %368 = getelementptr inbounds i8, i8* %210, i64 8
  %369 = bitcast i8* %368 to i32*
  %370 = bitcast i8* %210 to i8**
  br label %371

371:                                              ; preds = %367, %746
  %372 = phi i8* [ %210, %367 ], [ %747, %746 ]
  %373 = phi i8* [ %210, %367 ], [ %749, %746 ]
  %374 = phi i8* [ %206, %367 ], [ %510, %746 ]
  %375 = phi i8* [ %206, %367 ], [ %748, %746 ]
  %376 = icmp ult i8* %375, %373
  br i1 %376, label %377, label %751

377:                                              ; preds = %371
  br i1 %9, label %381, label %378

378:                                              ; preds = %377
  %379 = load i32, i32* %369, align 4
  %380 = load i8*, i8** %370, align 8
  br label %490

381:                                              ; preds = %377, %486
  %382 = phi i8* [ %487, %486 ], [ %374, %377 ]
  %383 = phi i8* [ %488, %486 ], [ %375, %377 ]
  %384 = getelementptr inbounds i8, i8* %383, i64 8
  %385 = bitcast i8* %384 to i32*
  %386 = load i32, i32* %385, align 4
  %387 = load i32, i32* %369, align 4
  %388 = icmp ugt i32 %386, %387
  %389 = select i1 %388, i32 %387, i32 %386
  %390 = bitcast i8* %383 to i8**
  %391 = load i8*, i8** %390, align 8
  %392 = load i8*, i8** %370, align 8
  %393 = sext i32 %389 to i64
  %394 = tail call i32 @strncmp(i8* %391, i8* %392, i64 %393) #11
  %395 = icmp eq i32 %394, 0
  %396 = sub i32 %386, %387
  %397 = select i1 %395, i32 %396, i32 %394
  %398 = icmp sgt i32 %397, 0
  %399 = ptrtoint i8* %391 to i64
  %400 = trunc i64 %399 to i8
  br i1 %398, label %506, label %401

401:                                              ; preds = %381
  %402 = icmp eq i32 %397, 0
  br i1 %402, label %403, label %486

403:                                              ; preds = %401
  %404 = icmp ult i8* %382, %383
  br i1 %404, label %405, label %484

405:                                              ; preds = %403
  %406 = getelementptr inbounds i8, i8* %382, i64 %2
  %407 = load i8, i8* %382, align 1, !alias.scope !84, !noalias !87
  store i8 %400, i8* %382, align 1, !alias.scope !84, !noalias !87
  store i8 %407, i8* %383, align 1, !alias.scope !87, !noalias !84
  %408 = getelementptr inbounds i8, i8* %382, i64 1
  %409 = getelementptr inbounds i8, i8* %383, i64 1
  br i1 %14, label %410, label %484

410:                                              ; preds = %405
  br i1 %15, label %473, label %411

411:                                              ; preds = %410
  %412 = getelementptr i8, i8* %409, i64 %16
  %413 = getelementptr i8, i8* %408, i64 %16
  br i1 %18, label %453, label %414

414:                                              ; preds = %411, %414
  %415 = phi i64 [ %450, %414 ], [ 0, %411 ]
  %416 = phi i64 [ %451, %414 ], [ %19, %411 ]
  %417 = getelementptr i8, i8* %409, i64 %415
  %418 = getelementptr i8, i8* %408, i64 %415
  %419 = bitcast i8* %417 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !87, !noalias !84
  %421 = getelementptr i8, i8* %417, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !87, !noalias !84
  %424 = bitcast i8* %418 to <16 x i8>*
  %425 = load <16 x i8>, <16 x i8>* %424, align 1, !alias.scope !84, !noalias !87
  %426 = getelementptr i8, i8* %418, i64 16
  %427 = bitcast i8* %426 to <16 x i8>*
  %428 = load <16 x i8>, <16 x i8>* %427, align 1, !alias.scope !84, !noalias !87
  %429 = bitcast i8* %418 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %429, align 1, !alias.scope !84, !noalias !87
  %430 = bitcast i8* %426 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %430, align 1, !alias.scope !84, !noalias !87
  %431 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %425, <16 x i8>* %431, align 1, !alias.scope !87, !noalias !84
  %432 = bitcast i8* %421 to <16 x i8>*
  store <16 x i8> %428, <16 x i8>* %432, align 1, !alias.scope !87, !noalias !84
  %433 = or i64 %415, 32
  %434 = getelementptr i8, i8* %409, i64 %433
  %435 = getelementptr i8, i8* %408, i64 %433
  %436 = bitcast i8* %434 to <16 x i8>*
  %437 = load <16 x i8>, <16 x i8>* %436, align 1, !alias.scope !87, !noalias !84
  %438 = getelementptr i8, i8* %434, i64 16
  %439 = bitcast i8* %438 to <16 x i8>*
  %440 = load <16 x i8>, <16 x i8>* %439, align 1, !alias.scope !87, !noalias !84
  %441 = bitcast i8* %435 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !84, !noalias !87
  %443 = getelementptr i8, i8* %435, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !84, !noalias !87
  %446 = bitcast i8* %435 to <16 x i8>*
  store <16 x i8> %437, <16 x i8>* %446, align 1, !alias.scope !84, !noalias !87
  %447 = bitcast i8* %443 to <16 x i8>*
  store <16 x i8> %440, <16 x i8>* %447, align 1, !alias.scope !84, !noalias !87
  %448 = bitcast i8* %434 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %448, align 1, !alias.scope !87, !noalias !84
  %449 = bitcast i8* %438 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %449, align 1, !alias.scope !87, !noalias !84
  %450 = add i64 %415, 64
  %451 = add i64 %416, -2
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %414, !llvm.loop !89

453:                                              ; preds = %414, %411
  %454 = phi i64 [ 0, %411 ], [ %450, %414 ]
  br i1 %20, label %472, label %455

455:                                              ; preds = %453
  %456 = getelementptr i8, i8* %409, i64 %454
  %457 = getelementptr i8, i8* %408, i64 %454
  %458 = bitcast i8* %456 to <16 x i8>*
  %459 = load <16 x i8>, <16 x i8>* %458, align 1, !alias.scope !87, !noalias !84
  %460 = getelementptr i8, i8* %456, i64 16
  %461 = bitcast i8* %460 to <16 x i8>*
  %462 = load <16 x i8>, <16 x i8>* %461, align 1, !alias.scope !87, !noalias !84
  %463 = bitcast i8* %457 to <16 x i8>*
  %464 = load <16 x i8>, <16 x i8>* %463, align 1, !alias.scope !84, !noalias !87
  %465 = getelementptr i8, i8* %457, i64 16
  %466 = bitcast i8* %465 to <16 x i8>*
  %467 = load <16 x i8>, <16 x i8>* %466, align 1, !alias.scope !84, !noalias !87
  %468 = bitcast i8* %457 to <16 x i8>*
  store <16 x i8> %459, <16 x i8>* %468, align 1, !alias.scope !84, !noalias !87
  %469 = bitcast i8* %465 to <16 x i8>*
  store <16 x i8> %462, <16 x i8>* %469, align 1, !alias.scope !84, !noalias !87
  %470 = bitcast i8* %456 to <16 x i8>*
  store <16 x i8> %464, <16 x i8>* %470, align 1, !alias.scope !87, !noalias !84
  %471 = bitcast i8* %460 to <16 x i8>*
  store <16 x i8> %467, <16 x i8>* %471, align 1, !alias.scope !87, !noalias !84
  br label %472

472:                                              ; preds = %453, %455
  br i1 %21, label %484, label %473

473:                                              ; preds = %472, %410
  %474 = phi i8* [ %409, %410 ], [ %412, %472 ]
  %475 = phi i8* [ %408, %410 ], [ %413, %472 ]
  br label %476

476:                                              ; preds = %473, %476
  %477 = phi i8* [ %482, %476 ], [ %474, %473 ]
  %478 = phi i8* [ %481, %476 ], [ %475, %473 ]
  %479 = load i8, i8* %477, align 1, !alias.scope !87, !noalias !84
  %480 = load i8, i8* %478, align 1, !alias.scope !84, !noalias !87
  store i8 %479, i8* %478, align 1, !alias.scope !84, !noalias !87
  store i8 %480, i8* %477, align 1, !alias.scope !87, !noalias !84
  %481 = getelementptr inbounds i8, i8* %478, i64 1
  %482 = getelementptr inbounds i8, i8* %477, i64 1
  %483 = icmp ult i8* %481, %406
  br i1 %483, label %476, label %484, !llvm.loop !90

484:                                              ; preds = %476, %405, %472, %403
  %485 = getelementptr inbounds i8, i8* %382, i64 %2
  br label %486

486:                                              ; preds = %484, %401
  %487 = phi i8* [ %485, %484 ], [ %382, %401 ]
  %488 = getelementptr inbounds i8, i8* %383, i64 %2
  %489 = icmp ult i8* %488, %373
  br i1 %489, label %381, label %751

490:                                              ; preds = %378, %627
  %491 = phi i8* [ %630, %627 ], [ %374, %378 ]
  %492 = phi i8* [ %631, %627 ], [ %375, %378 ]
  %493 = getelementptr inbounds i8, i8* %492, i64 8
  %494 = bitcast i8* %493 to i32*
  %495 = load i32, i32* %494, align 4
  %496 = icmp ugt i32 %495, %379
  %497 = select i1 %496, i32 %379, i32 %495
  %498 = bitcast i8* %492 to i8**
  %499 = load i8*, i8** %498, align 8
  %500 = sext i32 %497 to i64
  %501 = tail call i32 @strncmp(i8* %499, i8* %380, i64 %500) #11
  %502 = icmp eq i32 %501, 0
  %503 = sub i32 %495, %379
  %504 = select i1 %502, i32 %503, i32 %501
  %505 = icmp sgt i32 %504, 0
  br i1 %505, label %506, label %627

506:                                              ; preds = %490, %381
  %507 = phi i8* [ %392, %381 ], [ %380, %490 ]
  %508 = phi i32 [ %387, %381 ], [ %379, %490 ]
  %509 = phi i8* [ %383, %381 ], [ %492, %490 ]
  %510 = phi i8* [ %382, %381 ], [ %491, %490 ]
  %511 = icmp ult i8* %509, %373
  br i1 %511, label %512, label %746

512:                                              ; preds = %506
  br i1 %9, label %513, label %633

513:                                              ; preds = %512, %624
  %514 = phi i8* [ %626, %624 ], [ %507, %512 ]
  %515 = phi i32 [ %625, %624 ], [ %508, %512 ]
  %516 = phi i8* [ %622, %624 ], [ %372, %512 ]
  %517 = phi i8* [ %518, %624 ], [ %373, %512 ]
  %518 = getelementptr inbounds i8, i8* %517, i64 %8
  %519 = getelementptr inbounds i8, i8* %518, i64 8
  %520 = bitcast i8* %519 to i32*
  %521 = load i32, i32* %520, align 4
  %522 = icmp ugt i32 %521, %515
  %523 = select i1 %522, i32 %515, i32 %521
  %524 = bitcast i8* %518 to i8**
  %525 = load i8*, i8** %524, align 8
  %526 = sext i32 %523 to i64
  %527 = tail call i32 @strncmp(i8* %525, i8* %514, i64 %526) #11
  %528 = icmp eq i32 %527, 0
  %529 = sub i32 %521, %515
  %530 = select i1 %528, i32 %529, i32 %527
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %534, label %532

532:                                              ; preds = %513
  %533 = icmp slt i32 %530, 0
  br i1 %533, label %654, label %621

534:                                              ; preds = %513
  %535 = getelementptr inbounds i8, i8* %516, i64 %8
  %536 = icmp ult i8* %517, %516
  br i1 %536, label %537, label %621

537:                                              ; preds = %534
  %538 = ptrtoint i8* %525 to i64
  %539 = trunc i64 %538 to i8
  %540 = load i8, i8* %535, align 1, !alias.scope !91, !noalias !94
  store i8 %540, i8* %518, align 1, !alias.scope !94, !noalias !91
  store i8 %539, i8* %535, align 1, !alias.scope !91, !noalias !94
  %541 = getelementptr inbounds i8, i8* %518, i64 1
  %542 = icmp ult i8* %541, %517
  br i1 %542, label %543, label %621

543:                                              ; preds = %537
  br i1 %22, label %610, label %544

544:                                              ; preds = %543
  %545 = getelementptr i8, i8* %541, i64 %23
  %546 = getelementptr i8, i8* %535, i64 %23
  br i1 %25, label %589, label %547

547:                                              ; preds = %544
  %548 = getelementptr i8, i8* %535, i64 1
  %549 = getelementptr i8, i8* %535, i64 1
  br label %550

550:                                              ; preds = %550, %547
  %551 = phi i64 [ 0, %547 ], [ %586, %550 ]
  %552 = phi i64 [ %26, %547 ], [ %587, %550 ]
  %553 = getelementptr i8, i8* %541, i64 %551
  %554 = getelementptr inbounds i8, i8* %548, i64 %551
  %555 = bitcast i8* %553 to <16 x i8>*
  %556 = load <16 x i8>, <16 x i8>* %555, align 1, !alias.scope !94, !noalias !91
  %557 = getelementptr i8, i8* %553, i64 16
  %558 = bitcast i8* %557 to <16 x i8>*
  %559 = load <16 x i8>, <16 x i8>* %558, align 1, !alias.scope !94, !noalias !91
  %560 = bitcast i8* %554 to <16 x i8>*
  %561 = load <16 x i8>, <16 x i8>* %560, align 1, !alias.scope !91, !noalias !94
  %562 = getelementptr inbounds i8, i8* %554, i64 16
  %563 = bitcast i8* %562 to <16 x i8>*
  %564 = load <16 x i8>, <16 x i8>* %563, align 1, !alias.scope !91, !noalias !94
  %565 = bitcast i8* %553 to <16 x i8>*
  store <16 x i8> %561, <16 x i8>* %565, align 1, !alias.scope !94, !noalias !91
  %566 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %564, <16 x i8>* %566, align 1, !alias.scope !94, !noalias !91
  %567 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %556, <16 x i8>* %567, align 1, !alias.scope !91, !noalias !94
  %568 = bitcast i8* %562 to <16 x i8>*
  store <16 x i8> %559, <16 x i8>* %568, align 1, !alias.scope !91, !noalias !94
  %569 = or i64 %551, 32
  %570 = getelementptr i8, i8* %541, i64 %569
  %571 = getelementptr inbounds i8, i8* %549, i64 %569
  %572 = bitcast i8* %570 to <16 x i8>*
  %573 = load <16 x i8>, <16 x i8>* %572, align 1, !alias.scope !94, !noalias !91
  %574 = getelementptr i8, i8* %570, i64 16
  %575 = bitcast i8* %574 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !94, !noalias !91
  %577 = bitcast i8* %571 to <16 x i8>*
  %578 = load <16 x i8>, <16 x i8>* %577, align 1, !alias.scope !91, !noalias !94
  %579 = getelementptr inbounds i8, i8* %571, i64 16
  %580 = bitcast i8* %579 to <16 x i8>*
  %581 = load <16 x i8>, <16 x i8>* %580, align 1, !alias.scope !91, !noalias !94
  %582 = bitcast i8* %570 to <16 x i8>*
  store <16 x i8> %578, <16 x i8>* %582, align 1, !alias.scope !94, !noalias !91
  %583 = bitcast i8* %574 to <16 x i8>*
  store <16 x i8> %581, <16 x i8>* %583, align 1, !alias.scope !94, !noalias !91
  %584 = bitcast i8* %571 to <16 x i8>*
  store <16 x i8> %573, <16 x i8>* %584, align 1, !alias.scope !91, !noalias !94
  %585 = bitcast i8* %579 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %585, align 1, !alias.scope !91, !noalias !94
  %586 = add i64 %551, 64
  %587 = add i64 %552, -2
  %588 = icmp eq i64 %587, 0
  br i1 %588, label %589, label %550, !llvm.loop !96

589:                                              ; preds = %550, %544
  %590 = phi i64 [ 0, %544 ], [ %586, %550 ]
  br i1 %27, label %609, label %591

591:                                              ; preds = %589
  %592 = getelementptr i8, i8* %541, i64 %590
  %593 = getelementptr i8, i8* %535, i64 1
  %594 = getelementptr inbounds i8, i8* %593, i64 %590
  %595 = bitcast i8* %592 to <16 x i8>*
  %596 = load <16 x i8>, <16 x i8>* %595, align 1, !alias.scope !94, !noalias !91
  %597 = getelementptr i8, i8* %592, i64 16
  %598 = bitcast i8* %597 to <16 x i8>*
  %599 = load <16 x i8>, <16 x i8>* %598, align 1, !alias.scope !94, !noalias !91
  %600 = bitcast i8* %594 to <16 x i8>*
  %601 = load <16 x i8>, <16 x i8>* %600, align 1, !alias.scope !91, !noalias !94
  %602 = getelementptr inbounds i8, i8* %594, i64 16
  %603 = bitcast i8* %602 to <16 x i8>*
  %604 = load <16 x i8>, <16 x i8>* %603, align 1, !alias.scope !91, !noalias !94
  %605 = bitcast i8* %592 to <16 x i8>*
  store <16 x i8> %601, <16 x i8>* %605, align 1, !alias.scope !94, !noalias !91
  %606 = bitcast i8* %597 to <16 x i8>*
  store <16 x i8> %604, <16 x i8>* %606, align 1, !alias.scope !94, !noalias !91
  %607 = bitcast i8* %594 to <16 x i8>*
  store <16 x i8> %596, <16 x i8>* %607, align 1, !alias.scope !91, !noalias !94
  %608 = bitcast i8* %602 to <16 x i8>*
  store <16 x i8> %599, <16 x i8>* %608, align 1, !alias.scope !91, !noalias !94
  br label %609

609:                                              ; preds = %589, %591
  br i1 %28, label %621, label %610

610:                                              ; preds = %609, %543
  %611 = phi i8* [ %541, %543 ], [ %545, %609 ]
  %612 = phi i8* [ %535, %543 ], [ %546, %609 ]
  br label %613

613:                                              ; preds = %610, %613
  %614 = phi i8* [ %619, %613 ], [ %611, %610 ]
  %615 = phi i8* [ %616, %613 ], [ %612, %610 ]
  %616 = getelementptr inbounds i8, i8* %615, i64 1
  %617 = load i8, i8* %614, align 1, !alias.scope !94, !noalias !91
  %618 = load i8, i8* %616, align 1, !alias.scope !91, !noalias !94
  store i8 %618, i8* %614, align 1, !alias.scope !94, !noalias !91
  store i8 %617, i8* %616, align 1, !alias.scope !91, !noalias !94
  %619 = getelementptr inbounds i8, i8* %614, i64 1
  %620 = icmp ult i8* %619, %517
  br i1 %620, label %613, label %621, !llvm.loop !97

621:                                              ; preds = %613, %537, %609, %534, %532
  %622 = phi i8* [ %535, %534 ], [ %516, %532 ], [ %535, %609 ], [ %535, %537 ], [ %535, %613 ]
  %623 = icmp ult i8* %509, %518
  br i1 %623, label %624, label %746

624:                                              ; preds = %621
  %625 = load i32, i32* %369, align 4
  %626 = load i8*, i8** %370, align 8
  br label %513

627:                                              ; preds = %490
  %628 = icmp eq i32 %504, 0
  %629 = getelementptr inbounds i8, i8* %491, i64 %2
  %630 = select i1 %628, i8* %629, i8* %491
  %631 = getelementptr inbounds i8, i8* %492, i64 %2
  %632 = icmp ult i8* %631, %373
  br i1 %632, label %490, label %751

633:                                              ; preds = %512, %743
  %634 = phi i8* [ %744, %743 ], [ %372, %512 ]
  %635 = phi i8* [ %636, %743 ], [ %373, %512 ]
  %636 = getelementptr inbounds i8, i8* %635, i64 %8
  %637 = getelementptr inbounds i8, i8* %636, i64 8
  %638 = bitcast i8* %637 to i32*
  %639 = load i32, i32* %638, align 4
  %640 = icmp ugt i32 %639, %508
  %641 = select i1 %640, i32 %508, i32 %639
  %642 = bitcast i8* %636 to i8**
  %643 = load i8*, i8** %642, align 8
  %644 = sext i32 %641 to i64
  %645 = tail call i32 @strncmp(i8* %643, i8* %507, i64 %644) #11
  %646 = icmp eq i32 %645, 0
  %647 = sub i32 %639, %508
  %648 = select i1 %646, i32 %647, i32 %645
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %652

650:                                              ; preds = %633
  %651 = getelementptr inbounds i8, i8* %634, i64 %8
  br label %743

652:                                              ; preds = %633
  %653 = icmp slt i32 %648, 0
  br i1 %653, label %654, label %743

654:                                              ; preds = %652, %532
  %655 = phi i8* [ %525, %532 ], [ %643, %652 ]
  %656 = phi i8* [ %518, %532 ], [ %636, %652 ]
  %657 = phi i8* [ %516, %532 ], [ %634, %652 ]
  %658 = icmp ult i8* %509, %656
  br i1 %658, label %659, label %741

659:                                              ; preds = %654
  %660 = getelementptr inbounds i8, i8* %509, i64 %2
  br i1 %9, label %661, label %741

661:                                              ; preds = %659
  %662 = ptrtoint i8* %655 to i64
  %663 = trunc i64 %662 to i8
  %664 = load i8, i8* %509, align 1, !alias.scope !98, !noalias !101
  store i8 %663, i8* %509, align 1, !alias.scope !98, !noalias !101
  store i8 %664, i8* %656, align 1, !alias.scope !101, !noalias !98
  %665 = getelementptr inbounds i8, i8* %509, i64 1
  %666 = getelementptr inbounds i8, i8* %656, i64 1
  br i1 %29, label %741, label %667

667:                                              ; preds = %661
  br i1 %30, label %730, label %668

668:                                              ; preds = %667
  %669 = getelementptr i8, i8* %666, i64 %31
  %670 = getelementptr i8, i8* %665, i64 %31
  br i1 %33, label %710, label %671

671:                                              ; preds = %668, %671
  %672 = phi i64 [ %707, %671 ], [ 0, %668 ]
  %673 = phi i64 [ %708, %671 ], [ %34, %668 ]
  %674 = getelementptr i8, i8* %666, i64 %672
  %675 = getelementptr i8, i8* %665, i64 %672
  %676 = bitcast i8* %674 to <16 x i8>*
  %677 = load <16 x i8>, <16 x i8>* %676, align 1, !alias.scope !101, !noalias !98
  %678 = getelementptr i8, i8* %674, i64 16
  %679 = bitcast i8* %678 to <16 x i8>*
  %680 = load <16 x i8>, <16 x i8>* %679, align 1, !alias.scope !101, !noalias !98
  %681 = bitcast i8* %675 to <16 x i8>*
  %682 = load <16 x i8>, <16 x i8>* %681, align 1, !alias.scope !98, !noalias !101
  %683 = getelementptr i8, i8* %675, i64 16
  %684 = bitcast i8* %683 to <16 x i8>*
  %685 = load <16 x i8>, <16 x i8>* %684, align 1, !alias.scope !98, !noalias !101
  %686 = bitcast i8* %675 to <16 x i8>*
  store <16 x i8> %677, <16 x i8>* %686, align 1, !alias.scope !98, !noalias !101
  %687 = bitcast i8* %683 to <16 x i8>*
  store <16 x i8> %680, <16 x i8>* %687, align 1, !alias.scope !98, !noalias !101
  %688 = bitcast i8* %674 to <16 x i8>*
  store <16 x i8> %682, <16 x i8>* %688, align 1, !alias.scope !101, !noalias !98
  %689 = bitcast i8* %678 to <16 x i8>*
  store <16 x i8> %685, <16 x i8>* %689, align 1, !alias.scope !101, !noalias !98
  %690 = or i64 %672, 32
  %691 = getelementptr i8, i8* %666, i64 %690
  %692 = getelementptr i8, i8* %665, i64 %690
  %693 = bitcast i8* %691 to <16 x i8>*
  %694 = load <16 x i8>, <16 x i8>* %693, align 1, !alias.scope !101, !noalias !98
  %695 = getelementptr i8, i8* %691, i64 16
  %696 = bitcast i8* %695 to <16 x i8>*
  %697 = load <16 x i8>, <16 x i8>* %696, align 1, !alias.scope !101, !noalias !98
  %698 = bitcast i8* %692 to <16 x i8>*
  %699 = load <16 x i8>, <16 x i8>* %698, align 1, !alias.scope !98, !noalias !101
  %700 = getelementptr i8, i8* %692, i64 16
  %701 = bitcast i8* %700 to <16 x i8>*
  %702 = load <16 x i8>, <16 x i8>* %701, align 1, !alias.scope !98, !noalias !101
  %703 = bitcast i8* %692 to <16 x i8>*
  store <16 x i8> %694, <16 x i8>* %703, align 1, !alias.scope !98, !noalias !101
  %704 = bitcast i8* %700 to <16 x i8>*
  store <16 x i8> %697, <16 x i8>* %704, align 1, !alias.scope !98, !noalias !101
  %705 = bitcast i8* %691 to <16 x i8>*
  store <16 x i8> %699, <16 x i8>* %705, align 1, !alias.scope !101, !noalias !98
  %706 = bitcast i8* %695 to <16 x i8>*
  store <16 x i8> %702, <16 x i8>* %706, align 1, !alias.scope !101, !noalias !98
  %707 = add i64 %672, 64
  %708 = add i64 %673, -2
  %709 = icmp eq i64 %708, 0
  br i1 %709, label %710, label %671, !llvm.loop !103

710:                                              ; preds = %671, %668
  %711 = phi i64 [ 0, %668 ], [ %707, %671 ]
  br i1 %35, label %729, label %712

712:                                              ; preds = %710
  %713 = getelementptr i8, i8* %666, i64 %711
  %714 = getelementptr i8, i8* %665, i64 %711
  %715 = bitcast i8* %713 to <16 x i8>*
  %716 = load <16 x i8>, <16 x i8>* %715, align 1, !alias.scope !101, !noalias !98
  %717 = getelementptr i8, i8* %713, i64 16
  %718 = bitcast i8* %717 to <16 x i8>*
  %719 = load <16 x i8>, <16 x i8>* %718, align 1, !alias.scope !101, !noalias !98
  %720 = bitcast i8* %714 to <16 x i8>*
  %721 = load <16 x i8>, <16 x i8>* %720, align 1, !alias.scope !98, !noalias !101
  %722 = getelementptr i8, i8* %714, i64 16
  %723 = bitcast i8* %722 to <16 x i8>*
  %724 = load <16 x i8>, <16 x i8>* %723, align 1, !alias.scope !98, !noalias !101
  %725 = bitcast i8* %714 to <16 x i8>*
  store <16 x i8> %716, <16 x i8>* %725, align 1, !alias.scope !98, !noalias !101
  %726 = bitcast i8* %722 to <16 x i8>*
  store <16 x i8> %719, <16 x i8>* %726, align 1, !alias.scope !98, !noalias !101
  %727 = bitcast i8* %713 to <16 x i8>*
  store <16 x i8> %721, <16 x i8>* %727, align 1, !alias.scope !101, !noalias !98
  %728 = bitcast i8* %717 to <16 x i8>*
  store <16 x i8> %724, <16 x i8>* %728, align 1, !alias.scope !101, !noalias !98
  br label %729

729:                                              ; preds = %710, %712
  br i1 %36, label %741, label %730

730:                                              ; preds = %729, %667
  %731 = phi i8* [ %666, %667 ], [ %669, %729 ]
  %732 = phi i8* [ %665, %667 ], [ %670, %729 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i8* [ %739, %733 ], [ %731, %730 ]
  %735 = phi i8* [ %738, %733 ], [ %732, %730 ]
  %736 = load i8, i8* %734, align 1, !alias.scope !101, !noalias !98
  %737 = load i8, i8* %735, align 1, !alias.scope !98, !noalias !101
  store i8 %736, i8* %735, align 1, !alias.scope !98, !noalias !101
  store i8 %737, i8* %734, align 1, !alias.scope !101, !noalias !98
  %738 = getelementptr inbounds i8, i8* %735, i64 1
  %739 = getelementptr inbounds i8, i8* %734, i64 1
  %740 = icmp ult i8* %738, %660
  br i1 %740, label %733, label %741, !llvm.loop !104

741:                                              ; preds = %733, %661, %729, %659, %654
  %742 = getelementptr inbounds i8, i8* %509, i64 %2
  br label %746

743:                                              ; preds = %650, %652
  %744 = phi i8* [ %651, %650 ], [ %634, %652 ]
  %745 = icmp ult i8* %509, %636
  br i1 %745, label %633, label %746

746:                                              ; preds = %743, %621, %506, %741
  %747 = phi i8* [ %657, %741 ], [ %372, %506 ], [ %622, %621 ], [ %744, %743 ]
  %748 = phi i8* [ %742, %741 ], [ %509, %506 ], [ %509, %621 ], [ %509, %743 ]
  %749 = phi i8* [ %656, %741 ], [ %373, %506 ], [ %518, %621 ], [ %636, %743 ]
  %750 = icmp ult i8* %748, %749
  br i1 %750, label %371, label %751

751:                                              ; preds = %746, %371, %627, %486, %365
  %752 = phi i8* [ %210, %365 ], [ %373, %486 ], [ %373, %627 ], [ %373, %371 ], [ %749, %746 ]
  %753 = phi i8* [ %210, %365 ], [ %372, %486 ], [ %372, %627 ], [ %372, %371 ], [ %747, %746 ]
  %754 = phi i8* [ %206, %365 ], [ %487, %486 ], [ %630, %627 ], [ %374, %371 ], [ %510, %746 ]
  %755 = ptrtoint i8* %752 to i64
  %756 = ptrtoint i8* %754 to i64
  %757 = sub i64 %756, %207
  %758 = sub i64 %755, %756
  %759 = icmp ne i64 %757, 0
  %760 = icmp ne i64 %758, 0
  %761 = and i1 %759, %760
  br i1 %761, label %762, label %950

762:                                              ; preds = %751
  %763 = icmp ugt i64 %757, %758
  br i1 %763, label %764, label %857

764:                                              ; preds = %762
  %765 = getelementptr inbounds i8, i8* %206, i64 %758
  %766 = icmp sgt i64 %758, 0
  br i1 %766, label %767, label %950

767:                                              ; preds = %764
  %768 = getelementptr i8, i8* %206, i64 1
  %769 = icmp ugt i8* %765, %768
  %770 = select i1 %769, i8* %765, i8* %768
  %771 = ptrtoint i8* %770 to i64
  %772 = sub i64 %771, %207
  %773 = icmp ult i64 %772, 32
  br i1 %773, label %846, label %774

774:                                              ; preds = %767
  %775 = and i64 %772, -32
  %776 = getelementptr i8, i8* %206, i64 %775
  %777 = getelementptr i8, i8* %754, i64 %775
  %778 = add i64 %775, -32
  %779 = lshr exact i64 %778, 5
  %780 = add nuw nsw i64 %779, 1
  %781 = and i64 %780, 1
  %782 = icmp eq i64 %778, 0
  br i1 %782, label %824, label %783

783:                                              ; preds = %774
  %784 = sub nuw nsw i64 %780, %781
  br label %785

785:                                              ; preds = %785, %783
  %786 = phi i64 [ 0, %783 ], [ %821, %785 ]
  %787 = phi i64 [ %784, %783 ], [ %822, %785 ]
  %788 = getelementptr i8, i8* %206, i64 %786
  %789 = getelementptr i8, i8* %754, i64 %786
  %790 = bitcast i8* %788 to <16 x i8>*
  %791 = load <16 x i8>, <16 x i8>* %790, align 1, !alias.scope !105, !noalias !108
  %792 = getelementptr i8, i8* %788, i64 16
  %793 = bitcast i8* %792 to <16 x i8>*
  %794 = load <16 x i8>, <16 x i8>* %793, align 1, !alias.scope !105, !noalias !108
  %795 = bitcast i8* %789 to <16 x i8>*
  %796 = load <16 x i8>, <16 x i8>* %795, align 1, !alias.scope !108, !noalias !105
  %797 = getelementptr i8, i8* %789, i64 16
  %798 = bitcast i8* %797 to <16 x i8>*
  %799 = load <16 x i8>, <16 x i8>* %798, align 1, !alias.scope !108, !noalias !105
  %800 = bitcast i8* %788 to <16 x i8>*
  store <16 x i8> %796, <16 x i8>* %800, align 1, !alias.scope !105, !noalias !108
  %801 = bitcast i8* %792 to <16 x i8>*
  store <16 x i8> %799, <16 x i8>* %801, align 1, !alias.scope !105, !noalias !108
  %802 = bitcast i8* %789 to <16 x i8>*
  store <16 x i8> %791, <16 x i8>* %802, align 1, !alias.scope !108, !noalias !105
  %803 = bitcast i8* %797 to <16 x i8>*
  store <16 x i8> %794, <16 x i8>* %803, align 1, !alias.scope !108, !noalias !105
  %804 = or i64 %786, 32
  %805 = getelementptr i8, i8* %206, i64 %804
  %806 = getelementptr i8, i8* %754, i64 %804
  %807 = bitcast i8* %805 to <16 x i8>*
  %808 = load <16 x i8>, <16 x i8>* %807, align 1, !alias.scope !105, !noalias !108
  %809 = getelementptr i8, i8* %805, i64 16
  %810 = bitcast i8* %809 to <16 x i8>*
  %811 = load <16 x i8>, <16 x i8>* %810, align 1, !alias.scope !105, !noalias !108
  %812 = bitcast i8* %806 to <16 x i8>*
  %813 = load <16 x i8>, <16 x i8>* %812, align 1, !alias.scope !108, !noalias !105
  %814 = getelementptr i8, i8* %806, i64 16
  %815 = bitcast i8* %814 to <16 x i8>*
  %816 = load <16 x i8>, <16 x i8>* %815, align 1, !alias.scope !108, !noalias !105
  %817 = bitcast i8* %805 to <16 x i8>*
  store <16 x i8> %813, <16 x i8>* %817, align 1, !alias.scope !105, !noalias !108
  %818 = bitcast i8* %809 to <16 x i8>*
  store <16 x i8> %816, <16 x i8>* %818, align 1, !alias.scope !105, !noalias !108
  %819 = bitcast i8* %806 to <16 x i8>*
  store <16 x i8> %808, <16 x i8>* %819, align 1, !alias.scope !108, !noalias !105
  %820 = bitcast i8* %814 to <16 x i8>*
  store <16 x i8> %811, <16 x i8>* %820, align 1, !alias.scope !108, !noalias !105
  %821 = add i64 %786, 64
  %822 = add i64 %787, -2
  %823 = icmp eq i64 %822, 0
  br i1 %823, label %824, label %785, !llvm.loop !110

824:                                              ; preds = %785, %774
  %825 = phi i64 [ 0, %774 ], [ %821, %785 ]
  %826 = icmp eq i64 %781, 0
  br i1 %826, label %844, label %827

827:                                              ; preds = %824
  %828 = getelementptr i8, i8* %206, i64 %825
  %829 = getelementptr i8, i8* %754, i64 %825
  %830 = bitcast i8* %828 to <16 x i8>*
  %831 = load <16 x i8>, <16 x i8>* %830, align 1, !alias.scope !105, !noalias !108
  %832 = getelementptr i8, i8* %828, i64 16
  %833 = bitcast i8* %832 to <16 x i8>*
  %834 = load <16 x i8>, <16 x i8>* %833, align 1, !alias.scope !105, !noalias !108
  %835 = bitcast i8* %829 to <16 x i8>*
  %836 = load <16 x i8>, <16 x i8>* %835, align 1, !alias.scope !108, !noalias !105
  %837 = getelementptr i8, i8* %829, i64 16
  %838 = bitcast i8* %837 to <16 x i8>*
  %839 = load <16 x i8>, <16 x i8>* %838, align 1, !alias.scope !108, !noalias !105
  %840 = bitcast i8* %828 to <16 x i8>*
  store <16 x i8> %836, <16 x i8>* %840, align 1, !alias.scope !105, !noalias !108
  %841 = bitcast i8* %832 to <16 x i8>*
  store <16 x i8> %839, <16 x i8>* %841, align 1, !alias.scope !105, !noalias !108
  %842 = bitcast i8* %829 to <16 x i8>*
  store <16 x i8> %831, <16 x i8>* %842, align 1, !alias.scope !108, !noalias !105
  %843 = bitcast i8* %837 to <16 x i8>*
  store <16 x i8> %834, <16 x i8>* %843, align 1, !alias.scope !108, !noalias !105
  br label %844

844:                                              ; preds = %824, %827
  %845 = icmp eq i64 %772, %775
  br i1 %845, label %950, label %846

846:                                              ; preds = %844, %767
  %847 = phi i8* [ %206, %767 ], [ %776, %844 ]
  %848 = phi i8* [ %754, %767 ], [ %777, %844 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i8* [ %854, %849 ], [ %847, %846 ]
  %851 = phi i8* [ %855, %849 ], [ %848, %846 ]
  %852 = load i8, i8* %850, align 1, !alias.scope !105, !noalias !108
  %853 = load i8, i8* %851, align 1, !alias.scope !108, !noalias !105
  store i8 %853, i8* %850, align 1, !alias.scope !105, !noalias !108
  store i8 %852, i8* %851, align 1, !alias.scope !108, !noalias !105
  %854 = getelementptr inbounds i8, i8* %850, i64 1
  %855 = getelementptr inbounds i8, i8* %851, i64 1
  %856 = icmp ult i8* %854, %765
  br i1 %856, label %849, label %950, !llvm.loop !111

857:                                              ; preds = %762
  %858 = icmp sgt i64 %757, 0
  br i1 %858, label %859, label %950

859:                                              ; preds = %857
  %860 = getelementptr inbounds i8, i8* %206, i64 %758
  %861 = getelementptr i8, i8* %206, i64 1
  %862 = icmp ugt i8* %754, %861
  %863 = select i1 %862, i8* %754, i8* %861
  %864 = ptrtoint i8* %863 to i64
  %865 = sub i64 %864, %207
  %866 = icmp ult i64 %865, 32
  br i1 %866, label %939, label %867

867:                                              ; preds = %859
  %868 = and i64 %865, -32
  %869 = getelementptr i8, i8* %206, i64 %868
  %870 = getelementptr i8, i8* %860, i64 %868
  %871 = add i64 %868, -32
  %872 = lshr exact i64 %871, 5
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %917, label %876

876:                                              ; preds = %867
  %877 = sub nuw nsw i64 %873, %874
  br label %878

878:                                              ; preds = %878, %876
  %879 = phi i64 [ 0, %876 ], [ %914, %878 ]
  %880 = phi i64 [ %877, %876 ], [ %915, %878 ]
  %881 = getelementptr i8, i8* %206, i64 %879
  %882 = getelementptr i8, i8* %860, i64 %879
  %883 = bitcast i8* %881 to <16 x i8>*
  %884 = load <16 x i8>, <16 x i8>* %883, align 1, !alias.scope !112, !noalias !115
  %885 = getelementptr i8, i8* %881, i64 16
  %886 = bitcast i8* %885 to <16 x i8>*
  %887 = load <16 x i8>, <16 x i8>* %886, align 1, !alias.scope !112, !noalias !115
  %888 = bitcast i8* %882 to <16 x i8>*
  %889 = load <16 x i8>, <16 x i8>* %888, align 1, !alias.scope !115, !noalias !112
  %890 = getelementptr i8, i8* %882, i64 16
  %891 = bitcast i8* %890 to <16 x i8>*
  %892 = load <16 x i8>, <16 x i8>* %891, align 1, !alias.scope !115, !noalias !112
  %893 = bitcast i8* %881 to <16 x i8>*
  store <16 x i8> %889, <16 x i8>* %893, align 1, !alias.scope !112, !noalias !115
  %894 = bitcast i8* %885 to <16 x i8>*
  store <16 x i8> %892, <16 x i8>* %894, align 1, !alias.scope !112, !noalias !115
  %895 = bitcast i8* %882 to <16 x i8>*
  store <16 x i8> %884, <16 x i8>* %895, align 1, !alias.scope !115, !noalias !112
  %896 = bitcast i8* %890 to <16 x i8>*
  store <16 x i8> %887, <16 x i8>* %896, align 1, !alias.scope !115, !noalias !112
  %897 = or i64 %879, 32
  %898 = getelementptr i8, i8* %206, i64 %897
  %899 = getelementptr i8, i8* %860, i64 %897
  %900 = bitcast i8* %898 to <16 x i8>*
  %901 = load <16 x i8>, <16 x i8>* %900, align 1, !alias.scope !112, !noalias !115
  %902 = getelementptr i8, i8* %898, i64 16
  %903 = bitcast i8* %902 to <16 x i8>*
  %904 = load <16 x i8>, <16 x i8>* %903, align 1, !alias.scope !112, !noalias !115
  %905 = bitcast i8* %899 to <16 x i8>*
  %906 = load <16 x i8>, <16 x i8>* %905, align 1, !alias.scope !115, !noalias !112
  %907 = getelementptr i8, i8* %899, i64 16
  %908 = bitcast i8* %907 to <16 x i8>*
  %909 = load <16 x i8>, <16 x i8>* %908, align 1, !alias.scope !115, !noalias !112
  %910 = bitcast i8* %898 to <16 x i8>*
  store <16 x i8> %906, <16 x i8>* %910, align 1, !alias.scope !112, !noalias !115
  %911 = bitcast i8* %902 to <16 x i8>*
  store <16 x i8> %909, <16 x i8>* %911, align 1, !alias.scope !112, !noalias !115
  %912 = bitcast i8* %899 to <16 x i8>*
  store <16 x i8> %901, <16 x i8>* %912, align 1, !alias.scope !115, !noalias !112
  %913 = bitcast i8* %907 to <16 x i8>*
  store <16 x i8> %904, <16 x i8>* %913, align 1, !alias.scope !115, !noalias !112
  %914 = add i64 %879, 64
  %915 = add i64 %880, -2
  %916 = icmp eq i64 %915, 0
  br i1 %916, label %917, label %878, !llvm.loop !117

917:                                              ; preds = %878, %867
  %918 = phi i64 [ 0, %867 ], [ %914, %878 ]
  %919 = icmp eq i64 %874, 0
  br i1 %919, label %937, label %920

920:                                              ; preds = %917
  %921 = getelementptr i8, i8* %206, i64 %918
  %922 = getelementptr i8, i8* %860, i64 %918
  %923 = bitcast i8* %921 to <16 x i8>*
  %924 = load <16 x i8>, <16 x i8>* %923, align 1, !alias.scope !112, !noalias !115
  %925 = getelementptr i8, i8* %921, i64 16
  %926 = bitcast i8* %925 to <16 x i8>*
  %927 = load <16 x i8>, <16 x i8>* %926, align 1, !alias.scope !112, !noalias !115
  %928 = bitcast i8* %922 to <16 x i8>*
  %929 = load <16 x i8>, <16 x i8>* %928, align 1, !alias.scope !115, !noalias !112
  %930 = getelementptr i8, i8* %922, i64 16
  %931 = bitcast i8* %930 to <16 x i8>*
  %932 = load <16 x i8>, <16 x i8>* %931, align 1, !alias.scope !115, !noalias !112
  %933 = bitcast i8* %921 to <16 x i8>*
  store <16 x i8> %929, <16 x i8>* %933, align 1, !alias.scope !112, !noalias !115
  %934 = bitcast i8* %925 to <16 x i8>*
  store <16 x i8> %932, <16 x i8>* %934, align 1, !alias.scope !112, !noalias !115
  %935 = bitcast i8* %922 to <16 x i8>*
  store <16 x i8> %924, <16 x i8>* %935, align 1, !alias.scope !115, !noalias !112
  %936 = bitcast i8* %930 to <16 x i8>*
  store <16 x i8> %927, <16 x i8>* %936, align 1, !alias.scope !115, !noalias !112
  br label %937

937:                                              ; preds = %917, %920
  %938 = icmp eq i64 %865, %868
  br i1 %938, label %950, label %939

939:                                              ; preds = %937, %859
  %940 = phi i8* [ %206, %859 ], [ %869, %937 ]
  %941 = phi i8* [ %860, %859 ], [ %870, %937 ]
  br label %942

942:                                              ; preds = %939, %942
  %943 = phi i8* [ %947, %942 ], [ %940, %939 ]
  %944 = phi i8* [ %948, %942 ], [ %941, %939 ]
  %945 = load i8, i8* %943, align 1, !alias.scope !112, !noalias !115
  %946 = load i8, i8* %944, align 1, !alias.scope !115, !noalias !112
  store i8 %946, i8* %943, align 1, !alias.scope !112, !noalias !115
  store i8 %945, i8* %944, align 1, !alias.scope !115, !noalias !112
  %947 = getelementptr inbounds i8, i8* %943, i64 1
  %948 = getelementptr inbounds i8, i8* %944, i64 1
  %949 = icmp ult i8* %947, %754
  br i1 %949, label %942, label %950, !llvm.loop !118

950:                                              ; preds = %942, %849, %937, %844, %751, %764, %857
  %951 = ptrtoint i8* %753 to i64
  %952 = sub i64 %951, %755
  %953 = ptrtoint i8* %204 to i64
  %954 = sub i64 %953, %951
  %955 = icmp ne i64 %952, 0
  %956 = icmp ne i64 %954, 0
  %957 = and i1 %955, %956
  br i1 %957, label %958, label %1146

958:                                              ; preds = %950
  %959 = icmp ugt i64 %952, %954
  br i1 %959, label %960, label %1053

960:                                              ; preds = %958
  %961 = getelementptr inbounds i8, i8* %752, i64 %954
  %962 = icmp sgt i64 %954, 0
  br i1 %962, label %963, label %1146

963:                                              ; preds = %960
  %964 = getelementptr i8, i8* %752, i64 1
  %965 = icmp ugt i8* %961, %964
  %966 = select i1 %965, i8* %961, i8* %964
  %967 = ptrtoint i8* %966 to i64
  %968 = sub i64 %967, %755
  %969 = icmp ult i64 %968, 32
  br i1 %969, label %1042, label %970

970:                                              ; preds = %963
  %971 = and i64 %968, -32
  %972 = getelementptr i8, i8* %752, i64 %971
  %973 = getelementptr i8, i8* %753, i64 %971
  %974 = add i64 %971, -32
  %975 = lshr exact i64 %974, 5
  %976 = add nuw nsw i64 %975, 1
  %977 = and i64 %976, 1
  %978 = icmp eq i64 %974, 0
  br i1 %978, label %1020, label %979

979:                                              ; preds = %970
  %980 = sub nuw nsw i64 %976, %977
  br label %981

981:                                              ; preds = %981, %979
  %982 = phi i64 [ 0, %979 ], [ %1017, %981 ]
  %983 = phi i64 [ %980, %979 ], [ %1018, %981 ]
  %984 = getelementptr i8, i8* %752, i64 %982
  %985 = getelementptr i8, i8* %753, i64 %982
  %986 = bitcast i8* %984 to <16 x i8>*
  %987 = load <16 x i8>, <16 x i8>* %986, align 1, !alias.scope !119, !noalias !122
  %988 = getelementptr i8, i8* %984, i64 16
  %989 = bitcast i8* %988 to <16 x i8>*
  %990 = load <16 x i8>, <16 x i8>* %989, align 1, !alias.scope !119, !noalias !122
  %991 = bitcast i8* %985 to <16 x i8>*
  %992 = load <16 x i8>, <16 x i8>* %991, align 1, !alias.scope !122, !noalias !119
  %993 = getelementptr i8, i8* %985, i64 16
  %994 = bitcast i8* %993 to <16 x i8>*
  %995 = load <16 x i8>, <16 x i8>* %994, align 1, !alias.scope !122, !noalias !119
  %996 = bitcast i8* %984 to <16 x i8>*
  store <16 x i8> %992, <16 x i8>* %996, align 1, !alias.scope !119, !noalias !122
  %997 = bitcast i8* %988 to <16 x i8>*
  store <16 x i8> %995, <16 x i8>* %997, align 1, !alias.scope !119, !noalias !122
  %998 = bitcast i8* %985 to <16 x i8>*
  store <16 x i8> %987, <16 x i8>* %998, align 1, !alias.scope !122, !noalias !119
  %999 = bitcast i8* %993 to <16 x i8>*
  store <16 x i8> %990, <16 x i8>* %999, align 1, !alias.scope !122, !noalias !119
  %1000 = or i64 %982, 32
  %1001 = getelementptr i8, i8* %752, i64 %1000
  %1002 = getelementptr i8, i8* %753, i64 %1000
  %1003 = bitcast i8* %1001 to <16 x i8>*
  %1004 = load <16 x i8>, <16 x i8>* %1003, align 1, !alias.scope !119, !noalias !122
  %1005 = getelementptr i8, i8* %1001, i64 16
  %1006 = bitcast i8* %1005 to <16 x i8>*
  %1007 = load <16 x i8>, <16 x i8>* %1006, align 1, !alias.scope !119, !noalias !122
  %1008 = bitcast i8* %1002 to <16 x i8>*
  %1009 = load <16 x i8>, <16 x i8>* %1008, align 1, !alias.scope !122, !noalias !119
  %1010 = getelementptr i8, i8* %1002, i64 16
  %1011 = bitcast i8* %1010 to <16 x i8>*
  %1012 = load <16 x i8>, <16 x i8>* %1011, align 1, !alias.scope !122, !noalias !119
  %1013 = bitcast i8* %1001 to <16 x i8>*
  store <16 x i8> %1009, <16 x i8>* %1013, align 1, !alias.scope !119, !noalias !122
  %1014 = bitcast i8* %1005 to <16 x i8>*
  store <16 x i8> %1012, <16 x i8>* %1014, align 1, !alias.scope !119, !noalias !122
  %1015 = bitcast i8* %1002 to <16 x i8>*
  store <16 x i8> %1004, <16 x i8>* %1015, align 1, !alias.scope !122, !noalias !119
  %1016 = bitcast i8* %1010 to <16 x i8>*
  store <16 x i8> %1007, <16 x i8>* %1016, align 1, !alias.scope !122, !noalias !119
  %1017 = add i64 %982, 64
  %1018 = add i64 %983, -2
  %1019 = icmp eq i64 %1018, 0
  br i1 %1019, label %1020, label %981, !llvm.loop !124

1020:                                             ; preds = %981, %970
  %1021 = phi i64 [ 0, %970 ], [ %1017, %981 ]
  %1022 = icmp eq i64 %977, 0
  br i1 %1022, label %1040, label %1023

1023:                                             ; preds = %1020
  %1024 = getelementptr i8, i8* %752, i64 %1021
  %1025 = getelementptr i8, i8* %753, i64 %1021
  %1026 = bitcast i8* %1024 to <16 x i8>*
  %1027 = load <16 x i8>, <16 x i8>* %1026, align 1, !alias.scope !119, !noalias !122
  %1028 = getelementptr i8, i8* %1024, i64 16
  %1029 = bitcast i8* %1028 to <16 x i8>*
  %1030 = load <16 x i8>, <16 x i8>* %1029, align 1, !alias.scope !119, !noalias !122
  %1031 = bitcast i8* %1025 to <16 x i8>*
  %1032 = load <16 x i8>, <16 x i8>* %1031, align 1, !alias.scope !122, !noalias !119
  %1033 = getelementptr i8, i8* %1025, i64 16
  %1034 = bitcast i8* %1033 to <16 x i8>*
  %1035 = load <16 x i8>, <16 x i8>* %1034, align 1, !alias.scope !122, !noalias !119
  %1036 = bitcast i8* %1024 to <16 x i8>*
  store <16 x i8> %1032, <16 x i8>* %1036, align 1, !alias.scope !119, !noalias !122
  %1037 = bitcast i8* %1028 to <16 x i8>*
  store <16 x i8> %1035, <16 x i8>* %1037, align 1, !alias.scope !119, !noalias !122
  %1038 = bitcast i8* %1025 to <16 x i8>*
  store <16 x i8> %1027, <16 x i8>* %1038, align 1, !alias.scope !122, !noalias !119
  %1039 = bitcast i8* %1033 to <16 x i8>*
  store <16 x i8> %1030, <16 x i8>* %1039, align 1, !alias.scope !122, !noalias !119
  br label %1040

1040:                                             ; preds = %1020, %1023
  %1041 = icmp eq i64 %968, %971
  br i1 %1041, label %1146, label %1042

1042:                                             ; preds = %1040, %963
  %1043 = phi i8* [ %752, %963 ], [ %972, %1040 ]
  %1044 = phi i8* [ %753, %963 ], [ %973, %1040 ]
  br label %1045

1045:                                             ; preds = %1042, %1045
  %1046 = phi i8* [ %1050, %1045 ], [ %1043, %1042 ]
  %1047 = phi i8* [ %1051, %1045 ], [ %1044, %1042 ]
  %1048 = load i8, i8* %1046, align 1, !alias.scope !119, !noalias !122
  %1049 = load i8, i8* %1047, align 1, !alias.scope !122, !noalias !119
  store i8 %1049, i8* %1046, align 1, !alias.scope !119, !noalias !122
  store i8 %1048, i8* %1047, align 1, !alias.scope !122, !noalias !119
  %1050 = getelementptr inbounds i8, i8* %1046, i64 1
  %1051 = getelementptr inbounds i8, i8* %1047, i64 1
  %1052 = icmp ult i8* %1050, %961
  br i1 %1052, label %1045, label %1146, !llvm.loop !125

1053:                                             ; preds = %958
  %1054 = icmp sgt i64 %952, 0
  br i1 %1054, label %1055, label %1146

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds i8, i8* %752, i64 %954
  %1057 = getelementptr i8, i8* %752, i64 1
  %1058 = icmp ugt i8* %753, %1057
  %1059 = select i1 %1058, i8* %753, i8* %1057
  %1060 = ptrtoint i8* %1059 to i64
  %1061 = sub i64 %1060, %755
  %1062 = icmp ult i64 %1061, 32
  br i1 %1062, label %1135, label %1063

1063:                                             ; preds = %1055
  %1064 = and i64 %1061, -32
  %1065 = getelementptr i8, i8* %752, i64 %1064
  %1066 = getelementptr i8, i8* %1056, i64 %1064
  %1067 = add i64 %1064, -32
  %1068 = lshr exact i64 %1067, 5
  %1069 = add nuw nsw i64 %1068, 1
  %1070 = and i64 %1069, 1
  %1071 = icmp eq i64 %1067, 0
  br i1 %1071, label %1113, label %1072

1072:                                             ; preds = %1063
  %1073 = sub nuw nsw i64 %1069, %1070
  br label %1074

1074:                                             ; preds = %1074, %1072
  %1075 = phi i64 [ 0, %1072 ], [ %1110, %1074 ]
  %1076 = phi i64 [ %1073, %1072 ], [ %1111, %1074 ]
  %1077 = getelementptr i8, i8* %752, i64 %1075
  %1078 = getelementptr i8, i8* %1056, i64 %1075
  %1079 = bitcast i8* %1077 to <16 x i8>*
  %1080 = load <16 x i8>, <16 x i8>* %1079, align 1, !alias.scope !126, !noalias !129
  %1081 = getelementptr i8, i8* %1077, i64 16
  %1082 = bitcast i8* %1081 to <16 x i8>*
  %1083 = load <16 x i8>, <16 x i8>* %1082, align 1, !alias.scope !126, !noalias !129
  %1084 = bitcast i8* %1078 to <16 x i8>*
  %1085 = load <16 x i8>, <16 x i8>* %1084, align 1, !alias.scope !129, !noalias !126
  %1086 = getelementptr i8, i8* %1078, i64 16
  %1087 = bitcast i8* %1086 to <16 x i8>*
  %1088 = load <16 x i8>, <16 x i8>* %1087, align 1, !alias.scope !129, !noalias !126
  %1089 = bitcast i8* %1077 to <16 x i8>*
  store <16 x i8> %1085, <16 x i8>* %1089, align 1, !alias.scope !126, !noalias !129
  %1090 = bitcast i8* %1081 to <16 x i8>*
  store <16 x i8> %1088, <16 x i8>* %1090, align 1, !alias.scope !126, !noalias !129
  %1091 = bitcast i8* %1078 to <16 x i8>*
  store <16 x i8> %1080, <16 x i8>* %1091, align 1, !alias.scope !129, !noalias !126
  %1092 = bitcast i8* %1086 to <16 x i8>*
  store <16 x i8> %1083, <16 x i8>* %1092, align 1, !alias.scope !129, !noalias !126
  %1093 = or i64 %1075, 32
  %1094 = getelementptr i8, i8* %752, i64 %1093
  %1095 = getelementptr i8, i8* %1056, i64 %1093
  %1096 = bitcast i8* %1094 to <16 x i8>*
  %1097 = load <16 x i8>, <16 x i8>* %1096, align 1, !alias.scope !126, !noalias !129
  %1098 = getelementptr i8, i8* %1094, i64 16
  %1099 = bitcast i8* %1098 to <16 x i8>*
  %1100 = load <16 x i8>, <16 x i8>* %1099, align 1, !alias.scope !126, !noalias !129
  %1101 = bitcast i8* %1095 to <16 x i8>*
  %1102 = load <16 x i8>, <16 x i8>* %1101, align 1, !alias.scope !129, !noalias !126
  %1103 = getelementptr i8, i8* %1095, i64 16
  %1104 = bitcast i8* %1103 to <16 x i8>*
  %1105 = load <16 x i8>, <16 x i8>* %1104, align 1, !alias.scope !129, !noalias !126
  %1106 = bitcast i8* %1094 to <16 x i8>*
  store <16 x i8> %1102, <16 x i8>* %1106, align 1, !alias.scope !126, !noalias !129
  %1107 = bitcast i8* %1098 to <16 x i8>*
  store <16 x i8> %1105, <16 x i8>* %1107, align 1, !alias.scope !126, !noalias !129
  %1108 = bitcast i8* %1095 to <16 x i8>*
  store <16 x i8> %1097, <16 x i8>* %1108, align 1, !alias.scope !129, !noalias !126
  %1109 = bitcast i8* %1103 to <16 x i8>*
  store <16 x i8> %1100, <16 x i8>* %1109, align 1, !alias.scope !129, !noalias !126
  %1110 = add i64 %1075, 64
  %1111 = add i64 %1076, -2
  %1112 = icmp eq i64 %1111, 0
  br i1 %1112, label %1113, label %1074, !llvm.loop !131

1113:                                             ; preds = %1074, %1063
  %1114 = phi i64 [ 0, %1063 ], [ %1110, %1074 ]
  %1115 = icmp eq i64 %1070, 0
  br i1 %1115, label %1133, label %1116

1116:                                             ; preds = %1113
  %1117 = getelementptr i8, i8* %752, i64 %1114
  %1118 = getelementptr i8, i8* %1056, i64 %1114
  %1119 = bitcast i8* %1117 to <16 x i8>*
  %1120 = load <16 x i8>, <16 x i8>* %1119, align 1, !alias.scope !126, !noalias !129
  %1121 = getelementptr i8, i8* %1117, i64 16
  %1122 = bitcast i8* %1121 to <16 x i8>*
  %1123 = load <16 x i8>, <16 x i8>* %1122, align 1, !alias.scope !126, !noalias !129
  %1124 = bitcast i8* %1118 to <16 x i8>*
  %1125 = load <16 x i8>, <16 x i8>* %1124, align 1, !alias.scope !129, !noalias !126
  %1126 = getelementptr i8, i8* %1118, i64 16
  %1127 = bitcast i8* %1126 to <16 x i8>*
  %1128 = load <16 x i8>, <16 x i8>* %1127, align 1, !alias.scope !129, !noalias !126
  %1129 = bitcast i8* %1117 to <16 x i8>*
  store <16 x i8> %1125, <16 x i8>* %1129, align 1, !alias.scope !126, !noalias !129
  %1130 = bitcast i8* %1121 to <16 x i8>*
  store <16 x i8> %1128, <16 x i8>* %1130, align 1, !alias.scope !126, !noalias !129
  %1131 = bitcast i8* %1118 to <16 x i8>*
  store <16 x i8> %1120, <16 x i8>* %1131, align 1, !alias.scope !129, !noalias !126
  %1132 = bitcast i8* %1126 to <16 x i8>*
  store <16 x i8> %1123, <16 x i8>* %1132, align 1, !alias.scope !129, !noalias !126
  br label %1133

1133:                                             ; preds = %1113, %1116
  %1134 = icmp eq i64 %1061, %1064
  br i1 %1134, label %1146, label %1135

1135:                                             ; preds = %1133, %1055
  %1136 = phi i8* [ %752, %1055 ], [ %1065, %1133 ]
  %1137 = phi i8* [ %1056, %1055 ], [ %1066, %1133 ]
  br label %1138

1138:                                             ; preds = %1135, %1138
  %1139 = phi i8* [ %1143, %1138 ], [ %1136, %1135 ]
  %1140 = phi i8* [ %1144, %1138 ], [ %1137, %1135 ]
  %1141 = load i8, i8* %1139, align 1, !alias.scope !126, !noalias !129
  %1142 = load i8, i8* %1140, align 1, !alias.scope !129, !noalias !126
  store i8 %1142, i8* %1139, align 1, !alias.scope !126, !noalias !129
  store i8 %1141, i8* %1140, align 1, !alias.scope !129, !noalias !126
  %1143 = getelementptr inbounds i8, i8* %1139, i64 1
  %1144 = getelementptr inbounds i8, i8* %1140, i64 1
  %1145 = icmp ult i8* %1143, %753
  br i1 %1145, label %1138, label %1146, !llvm.loop !132

1146:                                             ; preds = %1138, %1045, %1133, %1040, %950, %960, %1053
  %1147 = udiv i64 %758, %2
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %206, i64 %1147, i64 %2)
  %1148 = sub i64 0, %952
  %1149 = getelementptr inbounds i8, i8* %204, i64 %1148
  %1150 = udiv i64 %952, %2
  %1151 = mul i64 %1150, %2
  %1152 = getelementptr inbounds i8, i8* %1149, i64 %1151
  %1153 = icmp ult i64 %1150, 10
  br i1 %1153, label %37, label %203

1154:                                             ; preds = %200, %60, %37
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4initEP9hb_face_t(%"struct.OT::cff2::accelerator_templ_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::dict_interpreter_t.359", align 8
  %4 = alloca %"struct.CFF::dict_interpreter_t.360", align 8
  %5 = alloca %"struct.CFF::dict_interpreter_t.361", align 8
  %6 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %struct.hb_vector_t.84* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #10
  %10 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 11
  %13 = bitcast %struct.hb_vector_t.112* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  %14 = load i8, i8* %12, align 4, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  %18 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  store i32 %17, i32* %18, align 8
  store i8 1, i8* %12, align 4
  br label %19

19:                                               ; preds = %2, %16
  %20 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1128678962) #10
  %21 = tail call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff2EEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* %11, %struct.hb_blob_t* %20) #10
  %22 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 0
  store %struct.hb_blob_t* %21, %struct.hb_blob_t** %22, align 8
  %23 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %21) #10
  %24 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 9
  store %struct.hb_blob_t* %23, %struct.hb_blob_t** %24, align 8
  %25 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %23, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 2
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %23, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %27, i64 %31
  %33 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 3
  store i8* %32, i8** %33, align 8
  %34 = icmp ugt i32 %30, 67108862
  br i1 %34, label %41, label %35, !prof !2

35:                                               ; preds = %19
  %36 = shl i32 %30, 6
  %37 = icmp ugt i32 %36, 16384
  %38 = select i1 %37, i32 %36, i32 16384
  %39 = icmp ult i32 %38, 1073741823
  %40 = select i1 %39, i32 %38, i32 1073741823
  br label %41

41:                                               ; preds = %19, %35
  %42 = phi i32 [ %40, %35 ], [ 1073741823, %19 ]
  %43 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 4
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 8
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %11, i64 0, i32 0, i32 0
  store i32 0, i32* %45, align 8
  %46 = load %struct.hb_blob_t*, %struct.hb_blob_t** %22, align 8
  %47 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %46, i64 0, i32 1
  %48 = bitcast i8** %47 to %"struct.OT::cff2"**
  %49 = load %"struct.OT::cff2"*, %"struct.OT::cff2"** %48, align 8
  %50 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %46, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp ult i32 %51, 5
  %53 = icmp eq %"struct.OT::cff2"* %49, bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cff2"*)
  %54 = or i1 %53, %52
  br i1 %54, label %55, label %56, !prof !5

55:                                               ; preds = %41
  tail call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"struct.OT::cff2", %"struct.OT::cff2"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.OT::cff2", %"struct.OT::cff2"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds i8, i8* %57, i64 %60
  %62 = getelementptr inbounds %"struct.OT::cff2", %"struct.OT::cff2"* %49, i64 0, i32 2
  %63 = bitcast %"struct.OT::IntType"* %62 to i16*
  %64 = load i16, i16* %63, align 1
  %65 = tail call i16 @llvm.bswap.i16(i16 %64) #10
  %66 = zext i16 %65 to i32
  %67 = icmp eq i16 %64, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %56
  %69 = icmp ugt i8* %27, %61
  %70 = icmp ult i8* %32, %61
  %71 = or i1 %69, %70
  br i1 %71, label %81, label %72, !prof !6

72:                                               ; preds = %68
  %73 = ptrtoint i8* %32 to i64
  %74 = ptrtoint i8* %61 to i64
  %75 = sub i64 %73, %74
  %76 = trunc i64 %75 to i32
  %77 = icmp ugt i32 %66, %76
  br i1 %77, label %81, label %78, !prof !2

78:                                               ; preds = %72
  %79 = sub nsw i32 %42, %66
  store i32 %79, i32* %43, align 8
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %78, %72, %68
  tail call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

82:                                               ; preds = %56, %78
  %83 = bitcast %"struct.CFF::dict_interpreter_t.359"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %83) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 56, i1 false)
  %84 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %85, align 8
  %86 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %88 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %90, align 8
  %91 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %92 = bitcast i32* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %92, i8 0, i64 20, i1 false) #10
  %93 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %94 = bitcast i32* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 9, i1 false)
  %95 = tail call i8* @malloc(i64 4744) #10
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %100, !prof !2

97:                                               ; preds = %82
  store i32 -1, i32* %93, align 8
  %98 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %98, align 8
  store i32 0, i32* %7, align 8
  %99 = bitcast %struct.hb_vector_t.84* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 32, i1 false)
  br label %126

100:                                              ; preds = %82
  %101 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %102 = bitcast %"struct.CFF::number_t"** %101 to i8**
  store i8* %95, i8** %102, align 8
  store i32 593, i32* %93, align 8
  %103 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %103, align 4
  %104 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  br label %105

105:                                              ; preds = %114, %100
  %106 = phi i32 [ 513, %100 ], [ %118, %114 ]
  %107 = phi i64 [ 0, %100 ], [ %117, %114 ]
  %108 = zext i32 %106 to i64
  %109 = icmp ult i64 %107, %108
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %105
  store i64 %104, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %114

111:                                              ; preds = %105
  %112 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %101, align 8
  %113 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %112, i64 %107
  br label %114

114:                                              ; preds = %111, %110
  %115 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %110 ], [ %113, %111 ]
  %116 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %115, i64 0, i32 0
  store double 0.000000e+00, double* %116, align 8
  %117 = add nuw nsw i64 %107, 1
  %118 = load i32, i32* %103, align 4
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %105, label %121

121:                                              ; preds = %114
  %122 = load i8, i8* %89, align 4, !range !4
  %123 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %123, align 8
  store i32 0, i32* %7, align 8
  %124 = icmp eq i8 %122, 0
  %125 = bitcast %struct.hb_vector_t.84* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 32, i1 false)
  br i1 %124, label %126, label %194

126:                                              ; preds = %97, %121
  %127 = phi i8* [ %98, %97 ], [ %123, %121 ]
  %128 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %129 = zext i8 %128 to i32
  %130 = or i32 %129, 256
  br label %131

131:                                              ; preds = %126, %179
  %132 = phi i8 [ 0, %126 ], [ %182, %179 ]
  %133 = load i32, i32* %88, align 8
  %134 = add i32 %133, 1
  %135 = load i32, i32* %86, align 8
  %136 = icmp ugt i32 %134, %135
  br i1 %136, label %194, label %137

137:                                              ; preds = %131
  %138 = icmp eq i8 %132, 0
  br i1 %138, label %139, label %179, !prof !5

139:                                              ; preds = %137
  %140 = icmp ult i32 %133, %135
  br i1 %140, label %142, label %141, !prof !3

141:                                              ; preds = %139
  store i8 1, i8* %89, align 4
  br label %146

142:                                              ; preds = %139
  %143 = load i8*, i8** %85, align 8
  %144 = zext i32 %133 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  br label %146

146:                                              ; preds = %142, %141
  %147 = phi i1 [ false, %141 ], [ true, %142 ]
  %148 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %141 ], [ %145, %142 ]
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i8 %149, 12
  br i1 %151, label %152, label %168

152:                                              ; preds = %146
  br i1 %147, label %153, label %179, !prof !59

153:                                              ; preds = %152
  %154 = icmp ult i32 %134, %135
  br i1 %154, label %156, label %155, !prof !3

155:                                              ; preds = %153
  store i8 1, i8* %89, align 4
  br label %166

156:                                              ; preds = %153
  %157 = load i8*, i8** %85, align 8
  %158 = zext i32 %134 to i64
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = or i32 %161, 256
  %163 = icmp ugt i32 %133, %135
  br i1 %163, label %166, label %164, !prof !6

164:                                              ; preds = %156
  store i32 %134, i32* %88, align 8
  %165 = add i32 %133, 2
  br label %169

166:                                              ; preds = %156, %155
  %167 = phi i32 [ %162, %156 ], [ %130, %155 ]
  store i32 %135, i32* %88, align 8
  store i8 1, i8* %89, align 4
  br label %177

168:                                              ; preds = %146
  br i1 %147, label %169, label %177, !prof !3

169:                                              ; preds = %168, %164
  %170 = phi i32 [ %134, %168 ], [ %165, %164 ]
  %171 = phi i32 [ %150, %168 ], [ %162, %164 ]
  %172 = phi i32 [ %133, %168 ], [ %134, %164 ]
  %173 = icmp ule i32 %172, %135
  %174 = icmp ule i32 %170, %135
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %177, !prof !21

176:                                              ; preds = %169
  store i32 %170, i32* %88, align 8
  br label %179

177:                                              ; preds = %169, %168, %166
  %178 = phi i32 [ %171, %169 ], [ %167, %166 ], [ %150, %168 ]
  store i32 %135, i32* %88, align 8
  store i8 1, i8* %89, align 4
  br label %179

179:                                              ; preds = %137, %152, %176, %177
  %180 = phi i32 [ %171, %176 ], [ %178, %177 ], [ 65535, %137 ], [ 65535, %152 ]
  call void @_ZN3CFF21cff2_top_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_22cff2_top_dict_values_tE(i32 %180, %"struct.CFF::interp_env_t"* nonnull dereferenceable(56) %84, %"struct.CFF::cff2_top_dict_values_t"* dereferenceable(40) %6) #10
  %181 = load i8, i8* %127, align 8, !range !4
  %182 = load i8, i8* %89, align 4
  %183 = or i8 %182, %181
  %184 = load i8, i8* %90, align 8
  %185 = or i8 %183, %184
  %186 = icmp ne i8 %185, 0
  %187 = load i32, i32* %93, align 8
  %188 = icmp slt i32 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %131, !prof !133

190:                                              ; preds = %179
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  %191 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %192 = bitcast %"struct.CFF::number_t"** %191 to i8**
  %193 = load i8*, i8** %192, align 8
  call void @free(i8* %193) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %83) #10
  br label %872

194:                                              ; preds = %131, %121
  %195 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.359", %"struct.CFF::dict_interpreter_t.359"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %196 = bitcast %"struct.CFF::number_t"** %195 to i8**
  %197 = load i8*, i8** %196, align 8
  call void @free(i8* %197) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %83) #10
  %198 = load i8, i8* %58, align 1
  %199 = zext i8 %198 to i64
  %200 = load i16, i16* %63, align 1
  %201 = call i16 @llvm.bswap.i16(i16 %200) #10
  %202 = zext i16 %201 to i64
  %203 = add nuw nsw i64 %202, %199
  %204 = getelementptr inbounds i8, i8* %57, i64 %203
  %205 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 3
  %206 = bitcast %"struct.CFF::Subrs.101"** %205 to i8**
  store i8* %204, i8** %206, align 8
  %207 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 0
  %210 = zext i32 %208 to i64
  %211 = getelementptr inbounds i8, i8* %57, i64 %210
  %212 = bitcast i8* %211 to %"struct.CFF::CFF2VariationStore"*
  %213 = select i1 %209, %"struct.CFF::CFF2VariationStore"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2VariationStore"*), %"struct.CFF::CFF2VariationStore"* %212
  %214 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 4
  store %"struct.CFF::CFF2VariationStore"* %213, %"struct.CFF::CFF2VariationStore"** %214, align 8
  %215 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 0
  %218 = zext i32 %216 to i64
  %219 = getelementptr inbounds i8, i8* %57, i64 %218
  %220 = bitcast i8* %219 to %"struct.CFF::CFFIndex.102"*
  %221 = select i1 %217, %"struct.CFF::CFFIndex.102"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex.102"*), %"struct.CFF::CFFIndex.102"* %220
  %222 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 5
  store %"struct.CFF::CFFIndex.102"* %221, %"struct.CFF::CFFIndex.102"** %222, align 8
  %223 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  %226 = zext i32 %224 to i64
  %227 = getelementptr inbounds i8, i8* %57, i64 %226
  %228 = bitcast i8* %227 to %"struct.CFF::CFF2FDArray"*
  %229 = select i1 %225, %"struct.CFF::CFF2FDArray"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2FDArray"*), %"struct.CFF::CFF2FDArray"* %228
  %230 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 6
  store %"struct.CFF::CFF2FDArray"* %229, %"struct.CFF::CFF2FDArray"** %230, align 8
  %231 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  %234 = zext i32 %232 to i64
  %235 = getelementptr inbounds i8, i8* %57, i64 %234
  %236 = bitcast i8* %235 to %"struct.CFF::CFF2FDSelect"*
  %237 = select i1 %233, %"struct.CFF::CFF2FDSelect"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2FDSelect"*), %"struct.CFF::CFF2FDSelect"* %236
  %238 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 7
  store %"struct.CFF::CFF2FDSelect"* %237, %"struct.CFF::CFF2FDSelect"** %238, align 8
  %239 = icmp eq %"struct.CFF::CFF2VariationStore"* %213, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2VariationStore"*)
  br i1 %239, label %244, label %240

240:                                              ; preds = %194
  %241 = call zeroext i1 @_ZNK3CFF18CFF2VariationStore8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFF2VariationStore"* %213, %struct.hb_sanitize_context_t* %11)
  br i1 %241, label %242, label %339, !prof !3

242:                                              ; preds = %240
  %243 = load %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFFIndex.102"** %222, align 8
  br label %244

244:                                              ; preds = %242, %194
  %245 = phi %"struct.CFF::CFFIndex.102"* [ %243, %242 ], [ %221, %194 ]
  %246 = icmp eq %"struct.CFF::CFFIndex.102"* %245, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFFIndex.102"*)
  br i1 %246, label %339, label %247

247:                                              ; preds = %244
  %248 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex.102"* %245, %struct.hb_sanitize_context_t* %11)
  br i1 %248, label %249, label %339, !prof !3

249:                                              ; preds = %247
  %250 = load %"struct.CFF::Subrs.101"*, %"struct.CFF::Subrs.101"** %205, align 8
  %251 = icmp eq %"struct.CFF::Subrs.101"* %250, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*)
  br i1 %251, label %339, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"struct.CFF::Subrs.101", %"struct.CFF::Subrs.101"* %250, i64 0, i32 0
  %254 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex.102"* %253, %struct.hb_sanitize_context_t* %11)
  br i1 %254, label %255, label %339, !prof !3

255:                                              ; preds = %252
  %256 = load %"struct.CFF::CFF2FDArray"*, %"struct.CFF::CFF2FDArray"** %230, align 8
  %257 = icmp eq %"struct.CFF::CFF2FDArray"* %256, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2FDArray"*)
  br i1 %257, label %339, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"struct.CFF::CFF2FDArray", %"struct.CFF::CFF2FDArray"* %256, i64 0, i32 0, i32 0, i32 0
  %260 = bitcast %"struct.CFF::CFF2FDArray"** %230 to %"struct.CFF::CFFIndex.102"**
  %261 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex.102"* %259, %struct.hb_sanitize_context_t* %11)
  br i1 %261, label %262, label %339, !prof !3

262:                                              ; preds = %258
  %263 = load %"struct.CFF::CFF2FDSelect"*, %"struct.CFF::CFF2FDSelect"** %238, align 8
  %264 = icmp eq %"struct.CFF::CFF2FDSelect"* %263, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2FDSelect"*)
  br i1 %264, label %340, label %265

265:                                              ; preds = %262
  %266 = load %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFFIndex.102"** %260, align 8
  %267 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %266, i64 0, i32 0, i32 0, i32 0, i64 0
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw i32 %269, 24
  %271 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %266, i64 0, i32 0, i32 0, i32 0, i64 1
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 16
  %275 = or i32 %274, %270
  %276 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %266, i64 0, i32 0, i32 0, i32 0, i64 2
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = shl nuw nsw i32 %278, 8
  %280 = or i32 %275, %279
  %281 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %266, i64 0, i32 0, i32 0, i32 0, i64 3
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %280, %283
  %285 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %263, i64 0, i32 0, i32 0, i32 0
  %286 = load i8*, i8** %28, align 8
  %287 = icmp ugt i8* %286, %285
  br i1 %287, label %339, label %288, !prof !2

288:                                              ; preds = %265
  %289 = load i8*, i8** %33, align 8
  %290 = icmp ult i8* %289, %285
  br i1 %290, label %339, label %291, !prof !2

291:                                              ; preds = %288
  %292 = ptrtoint i8* %289 to i64
  %293 = ptrtoint %"struct.CFF::CFF2FDSelect"* %263 to i64
  %294 = sub i64 %292, %293
  %295 = trunc i64 %294 to i32
  %296 = icmp ult i32 %295, 2
  br i1 %296, label %339, label %297, !prof !2

297:                                              ; preds = %291
  %298 = load i32, i32* %43, align 8
  %299 = add i32 %298, -2
  store i32 %299, i32* %43, align 8
  %300 = icmp sgt i32 %299, 0
  br i1 %300, label %301, label %339, !prof !3

301:                                              ; preds = %297
  %302 = load i8, i8* %285, align 1
  switch i8 %302, label %339 [
    i8 0, label %303
    i8 3, label %335
    i8 4, label %332
  ]

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %263, i64 0, i32 1
  %305 = bitcast %union.anon.108* %304 to %"struct.CFF::FDSelect0"*
  %306 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %340, label %309

309:                                              ; preds = %303
  %310 = zext i32 %307 to i64
  %311 = add i32 %298, -3
  %312 = zext i32 %311 to i64
  br label %315

313:                                              ; preds = %328
  %314 = icmp eq i64 %330, %310
  br i1 %314, label %340, label %315

315:                                              ; preds = %313, %309
  %316 = phi i32 [ %299, %309 ], [ %329, %313 ]
  %317 = phi i64 [ 0, %309 ], [ %330, %313 ]
  %318 = getelementptr inbounds %"struct.CFF::FDSelect0", %"struct.CFF::FDSelect0"* %305, i64 0, i32 0, i64 %317
  %319 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %318, i64 0, i32 0, i32 0
  %320 = icmp ugt i8* %286, %319
  %321 = icmp ult i8* %289, %319
  %322 = or i1 %320, %321
  br i1 %322, label %339, label %323, !prof !6

323:                                              ; preds = %315
  %324 = ptrtoint %"struct.OT::IntType.6"* %318 to i64
  %325 = sub i64 %292, %324
  %326 = trunc i64 %325 to i32
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %339, label %328, !prof !2

328:                                              ; preds = %323
  %329 = add i32 %316, -1
  store i32 %329, i32* %43, align 8
  %330 = add nuw nsw i64 %317, 1
  %331 = icmp eq i64 %317, %312
  br i1 %331, label %339, label %313, !prof !2

332:                                              ; preds = %301
  %333 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %263, i64 0, i32 1, i32 0
  %334 = call zeroext i1 @_ZNK3CFF11FDSelect3_4IN2OT7IntTypeIjLj4EEENS2_ItLj2EEEE8sanitizeEP21hb_sanitize_context_tj(%"struct.CFF::FDSelect3_4.109"* %333, %struct.hb_sanitize_context_t* %11, i32 %284) #10
  br i1 %334, label %340, label %339, !prof !3

335:                                              ; preds = %301
  %336 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %263, i64 0, i32 1
  %337 = bitcast %union.anon.108* %336 to %"struct.CFF::FDSelect3_4"*
  %338 = call zeroext i1 @_ZNK3CFF11FDSelect3_4IN2OT7IntTypeItLj2EEENS2_IhLj1EEEE8sanitizeEP21hb_sanitize_context_tj(%"struct.CFF::FDSelect3_4"* %337, %struct.hb_sanitize_context_t* %11, i32 %284) #10
  br i1 %338, label %340, label %339, !prof !3

339:                                              ; preds = %315, %323, %328, %265, %288, %291, %301, %297, %332, %240, %335, %258, %252, %247, %255, %249, %244
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

340:                                              ; preds = %313, %303, %332, %335, %262
  %341 = load %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFFIndex.102"** %222, align 8
  %342 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %341, i64 0, i32 0, i32 0, i32 0, i64 0
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = shl nuw i32 %344, 24
  %346 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %341, i64 0, i32 0, i32 0, i32 0, i64 1
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = shl nuw nsw i32 %348, 16
  %350 = or i32 %349, %345
  %351 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %341, i64 0, i32 0, i32 0, i32 0, i64 2
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = shl nuw nsw i32 %353, 8
  %355 = or i32 %350, %354
  %356 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %341, i64 0, i32 0, i32 0, i32 0, i64 3
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = or i32 %355, %358
  %360 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 12
  store i32 %359, i32* %360, align 8
  %361 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 10
  %362 = load i32, i32* %361, align 8
  %363 = icmp eq i32 %359, %362
  br i1 %363, label %365, label %364

364:                                              ; preds = %340
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

365:                                              ; preds = %340
  %366 = load %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFFIndex.102"** %260, align 8
  %367 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %366, i64 0, i32 0, i32 0, i32 0, i64 0
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = shl nuw i32 %369, 24
  %371 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %366, i64 0, i32 0, i32 0, i32 0, i64 1
  %372 = load i8, i8* %371, align 1
  %373 = zext i8 %372 to i32
  %374 = shl nuw nsw i32 %373, 16
  %375 = or i32 %374, %370
  %376 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %366, i64 0, i32 0, i32 0, i32 0, i64 2
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i32
  %379 = shl nuw nsw i32 %378, 8
  %380 = or i32 %375, %379
  %381 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %366, i64 0, i32 0, i32 0, i32 0, i64 3
  %382 = load i8, i8* %381, align 1
  %383 = zext i8 %382 to i32
  %384 = or i32 %380, %383
  %385 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 8
  store i32 %384, i32* %385, align 8
  %386 = icmp sgt i32 %384, 0
  %387 = select i1 %386, i32 %384, i32 0
  %388 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 0
  %389 = load i32, i32* %388, align 8
  %390 = icmp slt i32 %389, 0
  br i1 %390, label %472, label %391, !prof !2

391:                                              ; preds = %365
  %392 = icmp ult i32 %389, %387
  br i1 %392, label %393, label %413, !prof !2

393:                                              ; preds = %391, %393
  %394 = phi i32 [ %397, %393 ], [ %389, %391 ]
  %395 = lshr i32 %394, 1
  %396 = add i32 %394, 8
  %397 = add i32 %396, %395
  %398 = icmp ugt i32 %397, %387
  br i1 %398, label %399, label %393

399:                                              ; preds = %393
  %400 = icmp uge i32 %397, %389
  %401 = icmp ult i32 %397, 89478485
  %402 = and i1 %400, %401
  br i1 %402, label %403, label %411, !prof !21

403:                                              ; preds = %399
  %404 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 2
  %405 = bitcast %"struct.CFF::cff2_private_dict_values_base_t"** %404 to i8**
  %406 = load i8*, i8** %405, align 8
  %407 = zext i32 %397 to i64
  %408 = mul nuw nsw i64 %407, 48
  %409 = call i8* @realloc(i8* %406, i64 %408) #10
  %410 = icmp eq i8* %409, null
  br i1 %410, label %411, label %412, !prof !2

411:                                              ; preds = %403, %399
  store i32 -1, i32* %388, align 8
  br label %472

412:                                              ; preds = %403
  store i8* %409, i8** %405, align 8
  store i32 %397, i32* %388, align 8
  br label %413

413:                                              ; preds = %412, %391
  %414 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = icmp ugt i32 %387, %415
  br i1 %416, label %417, label %426

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 2
  %419 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %418, align 8
  %420 = zext i32 %415 to i64
  %421 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %419, i64 %420
  %422 = bitcast %"struct.CFF::cff2_private_dict_values_base_t"* %421 to i8*
  %423 = sub i32 %387, %415
  %424 = zext i32 %423 to i64
  %425 = mul nuw nsw i64 %424, 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %422, i8 0, i64 %425, i1 false) #10
  br label %426

426:                                              ; preds = %413, %417
  store i32 %387, i32* %414, align 4
  %427 = load i32, i32* %385, align 8
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %872, label %429

429:                                              ; preds = %426
  %430 = bitcast %"struct.CFF::CFF2FDArray"** %230 to %"struct.CFF::CFFIndexOf.107"**
  %431 = load i8*, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), align 16
  %432 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 1), align 8
  %433 = bitcast %"struct.CFF::dict_interpreter_t.360"* %4 to i8*
  %434 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0
  %435 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %437 = bitcast i32* %436 to i64*
  %438 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %439 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %440 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %442 = bitcast i32* %441 to i8*
  %443 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %444 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %445 = bitcast %"struct.CFF::number_t"** %444 to i8**
  %446 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %447 = ptrtoint i8* %431 to i64
  %448 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.360", %"struct.CFF::dict_interpreter_t.360"* %4, i64 0, i32 0, i32 0, i32 2
  %449 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10, i32 1
  %450 = getelementptr inbounds %struct.hb_vector_t.112, %struct.hb_vector_t.112* %10, i64 0, i32 0
  %451 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10, i32 2
  %452 = bitcast %"struct.CFF::cff2_font_dict_values_t"** %451 to i8**
  %453 = trunc i64 %447 to i32
  %454 = and i32 %453, 255
  %455 = or i32 %454, 256
  %456 = bitcast %"struct.CFF::dict_interpreter_t.361"* %5 to i8*
  %457 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %459 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %460 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %461 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %462 = bitcast i32* %461 to i8*
  %463 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %464 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %465 = bitcast %"struct.CFF::number_t"** %464 to i8**
  %466 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %467 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %468 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 2
  %469 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %5, i64 0, i32 0, i32 0, i32 3
  %470 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 2
  %471 = bitcast i32* %459 to i8*
  br label %477

472:                                              ; preds = %411, %365
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

473:                                              ; preds = %867
  %474 = load i32, i32* %385, align 8
  %475 = zext i32 %474 to i64
  %476 = icmp ult i64 %871, %475
  br i1 %476, label %477, label %872

477:                                              ; preds = %429, %473
  %478 = phi i64 [ 0, %429 ], [ %871, %473 ]
  %479 = load %"struct.CFF::CFFIndexOf.107"*, %"struct.CFF::CFFIndexOf.107"** %430, align 8
  %480 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0
  %481 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %482 = load i8, i8* %481, align 1
  %483 = zext i8 %482 to i64
  %484 = shl nuw nsw i64 %483, 24
  %485 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i64
  %488 = shl nuw nsw i64 %487, 16
  %489 = or i64 %488, %484
  %490 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i64
  %493 = shl nuw nsw i64 %492, 8
  %494 = or i64 %489, %493
  %495 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i64
  %498 = or i64 %494, %497
  %499 = icmp ugt i64 %498, %478
  br i1 %499, label %500, label %583, !prof !3

500:                                              ; preds = %477
  %501 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 1, i32 0, i32 0
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i64
  %504 = zext i8 %482 to i64
  %505 = shl nuw nsw i64 %504, 24
  %506 = zext i8 %486 to i64
  %507 = shl nuw nsw i64 %506, 16
  %508 = or i64 %507, %505
  %509 = zext i8 %491 to i64
  %510 = shl nuw nsw i64 %509, 8
  %511 = or i64 %508, %510
  %512 = zext i8 %496 to i64
  %513 = or i64 %511, %512
  %514 = add nuw nsw i64 %513, 1
  %515 = mul nuw nsw i64 %514, %503
  %516 = and i64 %515, 4294967295
  %517 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 0, i32 0, i32 0, i64 4
  %518 = zext i8 %502 to i32
  %519 = icmp eq i8 %502, 0
  %520 = trunc i64 %478 to i32
  br i1 %519, label %577, label %521

521:                                              ; preds = %500
  %522 = mul i32 %520, %518
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds %"struct.CFF::CFFIndexOf.107", %"struct.CFF::CFFIndexOf.107"* %479, i64 0, i32 0, i32 2, i64 %523
  %525 = add nsw i32 %518, -1
  %526 = and i32 %518, 3
  %527 = icmp ult i32 %525, 3
  br i1 %527, label %557, label %528

528:                                              ; preds = %521
  %529 = sub nsw i32 %518, %526
  br label %530

530:                                              ; preds = %530, %528
  %531 = phi i32 [ 0, %528 ], [ %554, %530 ]
  %532 = phi %"struct.OT::IntType.6"* [ %524, %528 ], [ %550, %530 ]
  %533 = phi i32 [ %529, %528 ], [ %555, %530 ]
  %534 = shl i32 %531, 8
  %535 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %532, i64 0, i32 0, i32 0
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i32
  %538 = or i32 %534, %537
  %539 = shl i32 %538, 8
  %540 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %532, i64 1, i32 0, i32 0
  %541 = load i8, i8* %540, align 1
  %542 = zext i8 %541 to i32
  %543 = or i32 %539, %542
  %544 = shl i32 %543, 8
  %545 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %532, i64 2, i32 0, i32 0
  %546 = load i8, i8* %545, align 1
  %547 = zext i8 %546 to i32
  %548 = or i32 %544, %547
  %549 = shl i32 %548, 8
  %550 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %532, i64 4
  %551 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %532, i64 3, i32 0, i32 0
  %552 = load i8, i8* %551, align 1
  %553 = zext i8 %552 to i32
  %554 = or i32 %549, %553
  %555 = add i32 %533, -4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %530

557:                                              ; preds = %530, %521
  %558 = phi i32 [ undef, %521 ], [ %554, %530 ]
  %559 = phi i32 [ 0, %521 ], [ %554, %530 ]
  %560 = phi %"struct.OT::IntType.6"* [ %524, %521 ], [ %550, %530 ]
  %561 = icmp eq i32 %526, 0
  br i1 %561, label %574, label %562

562:                                              ; preds = %557, %562
  %563 = phi i32 [ %571, %562 ], [ %559, %557 ]
  %564 = phi %"struct.OT::IntType.6"* [ %567, %562 ], [ %560, %557 ]
  %565 = phi i32 [ %572, %562 ], [ %526, %557 ]
  %566 = shl i32 %563, 8
  %567 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %564, i64 1
  %568 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %564, i64 0, i32 0, i32 0
  %569 = load i8, i8* %568, align 1
  %570 = zext i8 %569 to i32
  %571 = or i32 %566, %570
  %572 = add i32 %565, -1
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %562, !llvm.loop !134

574:                                              ; preds = %562, %557
  %575 = phi i32 [ %558, %557 ], [ %571, %562 ]
  %576 = zext i32 %575 to i64
  br label %577

577:                                              ; preds = %500, %574
  %578 = phi i64 [ %576, %574 ], [ 0, %500 ]
  %579 = getelementptr inbounds i8, i8* %517, i64 %516
  %580 = getelementptr inbounds i8, i8* %579, i64 %578
  %581 = call i32 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj(%"struct.CFF::CFFIndex.102"* %480, i32 %520) #10
  %582 = zext i32 %581 to i64
  br label %583

583:                                              ; preds = %477, %577
  %584 = phi i64 [ %582, %577 ], [ %432, %477 ]
  %585 = phi i8* [ %580, %577 ], [ %431, %477 ]
  %586 = trunc i64 %584 to i32
  switch i32 %586, label %587 [
    i32 -1, label %603
    i32 0, label %604
  ]

587:                                              ; preds = %583
  %588 = load i8*, i8** %28, align 8
  %589 = icmp ugt i8* %588, %585
  br i1 %589, label %603, label %590, !prof !2

590:                                              ; preds = %587
  %591 = load i8*, i8** %33, align 8
  %592 = icmp ult i8* %591, %585
  br i1 %592, label %603, label %593, !prof !2

593:                                              ; preds = %590
  %594 = ptrtoint i8* %591 to i64
  %595 = ptrtoint i8* %585 to i64
  %596 = sub i64 %594, %595
  %597 = trunc i64 %596 to i32
  %598 = icmp ugt i32 %586, %597
  br i1 %598, label %603, label %599, !prof !2

599:                                              ; preds = %593
  %600 = load i32, i32* %43, align 8
  %601 = sub i32 %600, %586
  store i32 %601, i32* %43, align 8
  %602 = icmp sgt i32 %601, 0
  br i1 %602, label %604, label %603, !prof !3

603:                                              ; preds = %599, %583, %593, %590, %587
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %872

604:                                              ; preds = %583, %599
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %433) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %433, i8 -86, i64 56, i1 false)
  store i8* %585, i8** %435, align 8
  store i64 %584, i64* %437, align 8
  store i32 0, i32* %438, align 8
  store i8 0, i8* %439, align 4
  store i8 0, i8* %440, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %442, i8 0, i64 20, i1 false) #10
  %605 = call i8* @malloc(i64 4744) #10
  %606 = icmp eq i8* %605, null
  br i1 %606, label %607, label %608, !prof !2

607:                                              ; preds = %604
  store i32 -1, i32* %443, align 8
  br label %625

608:                                              ; preds = %604
  store i8* %605, i8** %445, align 8
  store i32 593, i32* %443, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %605, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %446, align 4
  br label %609

609:                                              ; preds = %618, %608
  %610 = phi i32 [ 513, %608 ], [ %622, %618 ]
  %611 = phi i64 [ 0, %608 ], [ %621, %618 ]
  %612 = zext i32 %610 to i64
  %613 = icmp ult i64 %611, %612
  br i1 %613, label %615, label %614, !prof !3

614:                                              ; preds = %609
  store i64 %447, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %618

615:                                              ; preds = %609
  %616 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %444, align 8
  %617 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %616, i64 %611
  br label %618

618:                                              ; preds = %615, %614
  %619 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %614 ], [ %617, %615 ]
  %620 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %619, i64 0, i32 0
  store double 0.000000e+00, double* %620, align 8
  %621 = add nuw nsw i64 %611, 1
  %622 = load i32, i32* %446, align 4
  %623 = zext i32 %622 to i64
  %624 = icmp ult i64 %621, %623
  br i1 %624, label %609, label %625

625:                                              ; preds = %618, %607
  store i8 0, i8* %448, align 8
  %626 = load i32, i32* %449, align 4
  %627 = add i32 %626, 1
  %628 = icmp sgt i32 %627, 0
  %629 = select i1 %628, i32 %627, i32 0
  %630 = load i32, i32* %450, align 8
  %631 = icmp slt i32 %630, 0
  br i1 %631, label %664, label %632, !prof !2

632:                                              ; preds = %625
  %633 = icmp ult i32 %630, %629
  br i1 %633, label %634, label %653, !prof !2

634:                                              ; preds = %632, %634
  %635 = phi i32 [ %638, %634 ], [ %630, %632 ]
  %636 = lshr i32 %635, 1
  %637 = add i32 %635, 8
  %638 = add i32 %637, %636
  %639 = icmp ugt i32 %638, %629
  br i1 %639, label %640, label %634

640:                                              ; preds = %634
  %641 = icmp uge i32 %638, %630
  %642 = icmp ult i32 %638, 107374182
  %643 = and i1 %641, %642
  br i1 %643, label %644, label %650, !prof !21

644:                                              ; preds = %640
  %645 = load i8*, i8** %452, align 8
  %646 = zext i32 %638 to i64
  %647 = mul nuw nsw i64 %646, 40
  %648 = call i8* @realloc(i8* %645, i64 %647) #10
  %649 = icmp eq i8* %648, null
  br i1 %649, label %650, label %651, !prof !2

650:                                              ; preds = %644, %640
  store i32 -1, i32* %450, align 8
  br label %664

651:                                              ; preds = %644
  store i8* %648, i8** %452, align 8
  store i32 %638, i32* %450, align 8
  %652 = load i32, i32* %449, align 4
  br label %653

653:                                              ; preds = %651, %632
  %654 = phi i32 [ %652, %651 ], [ %626, %632 ]
  %655 = icmp ugt i32 %629, %654
  br i1 %655, label %656, label %665

656:                                              ; preds = %653
  %657 = load %"struct.CFF::cff2_font_dict_values_t"*, %"struct.CFF::cff2_font_dict_values_t"** %451, align 8
  %658 = zext i32 %654 to i64
  %659 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %657, i64 %658
  %660 = bitcast %"struct.CFF::cff2_font_dict_values_t"* %659 to i8*
  %661 = sub i32 %629, %654
  %662 = zext i32 %661 to i64
  %663 = mul nuw nsw i64 %662, 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %660, i8 0, i64 %663, i1 false) #10
  br label %665

664:                                              ; preds = %625, %650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  br label %671

665:                                              ; preds = %653, %656
  store i32 %629, i32* %449, align 4
  %666 = load %"struct.CFF::cff2_font_dict_values_t"*, %"struct.CFF::cff2_font_dict_values_t"** %451, align 8
  %667 = add nsw i32 %629, -1
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %666, i64 %668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 40, i1 false) #10
  %670 = icmp eq %"struct.CFF::cff2_font_dict_values_t"* %669, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_font_dict_values_t"*)
  br i1 %670, label %671, label %672, !prof !2

671:                                              ; preds = %664, %665
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %867

672:                                              ; preds = %665
  %673 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %669, i64 0, i32 0, i32 0, i32 0
  %674 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %666, i64 %668, i32 0, i32 0, i32 1
  store i32 0, i32* %673, align 8
  %675 = bitcast %struct.hb_vector_t.84* %674 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %675, i8 0, i64 28, i1 false)
  %676 = load i8, i8* %439, align 4, !range !4
  %677 = icmp eq i8 %676, 0
  br i1 %677, label %678, label %738

678:                                              ; preds = %672, %726
  %679 = phi i8 [ %729, %726 ], [ 0, %672 ]
  %680 = load i32, i32* %438, align 8
  %681 = add i32 %680, 1
  %682 = load i32, i32* %436, align 8
  %683 = icmp ugt i32 %681, %682
  br i1 %683, label %738, label %684

684:                                              ; preds = %678
  %685 = icmp eq i8 %679, 0
  br i1 %685, label %686, label %726, !prof !5

686:                                              ; preds = %684
  %687 = icmp ult i32 %680, %682
  br i1 %687, label %689, label %688, !prof !3

688:                                              ; preds = %686
  store i8 1, i8* %439, align 4
  br label %693

689:                                              ; preds = %686
  %690 = load i8*, i8** %435, align 8
  %691 = zext i32 %680 to i64
  %692 = getelementptr inbounds i8, i8* %690, i64 %691
  br label %693

693:                                              ; preds = %689, %688
  %694 = phi i1 [ false, %688 ], [ true, %689 ]
  %695 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %688 ], [ %692, %689 ]
  %696 = load i8, i8* %695, align 1
  %697 = zext i8 %696 to i32
  %698 = icmp eq i8 %696, 12
  br i1 %698, label %699, label %715

699:                                              ; preds = %693
  br i1 %694, label %700, label %726, !prof !59

700:                                              ; preds = %699
  %701 = icmp ult i32 %681, %682
  br i1 %701, label %703, label %702, !prof !3

702:                                              ; preds = %700
  store i8 1, i8* %439, align 4
  br label %713

703:                                              ; preds = %700
  %704 = load i8*, i8** %435, align 8
  %705 = zext i32 %681 to i64
  %706 = getelementptr inbounds i8, i8* %704, i64 %705
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i32
  %709 = or i32 %708, 256
  %710 = icmp ugt i32 %680, %682
  br i1 %710, label %713, label %711, !prof !6

711:                                              ; preds = %703
  store i32 %681, i32* %438, align 8
  %712 = add i32 %680, 2
  br label %716

713:                                              ; preds = %703, %702
  %714 = phi i32 [ %709, %703 ], [ %455, %702 ]
  store i32 %682, i32* %438, align 8
  store i8 1, i8* %439, align 4
  br label %724

715:                                              ; preds = %693
  br i1 %694, label %716, label %724, !prof !3

716:                                              ; preds = %715, %711
  %717 = phi i32 [ %681, %715 ], [ %712, %711 ]
  %718 = phi i32 [ %697, %715 ], [ %709, %711 ]
  %719 = phi i32 [ %680, %715 ], [ %681, %711 ]
  %720 = icmp ule i32 %719, %682
  %721 = icmp ule i32 %717, %682
  %722 = and i1 %720, %721
  br i1 %722, label %723, label %724, !prof !21

723:                                              ; preds = %716
  store i32 %717, i32* %438, align 8
  br label %726

724:                                              ; preds = %716, %715, %713
  %725 = phi i32 [ %718, %716 ], [ %714, %713 ], [ %697, %715 ]
  store i32 %682, i32* %438, align 8
  store i8 1, i8* %439, align 4
  br label %726

726:                                              ; preds = %684, %699, %723, %724
  %727 = phi i32 [ %718, %723 ], [ %725, %724 ], [ 65535, %684 ], [ 65535, %699 ]
  call void @_ZN3CFF22cff2_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff2_font_dict_values_tE(i32 %727, %"struct.CFF::interp_env_t"* nonnull dereferenceable(56) %434, %"struct.CFF::cff2_font_dict_values_t"* dereferenceable(40) %669) #10
  %728 = load i8, i8* %448, align 8, !range !4
  %729 = load i8, i8* %439, align 4
  %730 = or i8 %729, %728
  %731 = load i8, i8* %440, align 8
  %732 = or i8 %730, %731
  %733 = icmp ne i8 %732, 0
  %734 = load i32, i32* %443, align 8
  %735 = icmp slt i32 %734, 0
  %736 = or i1 %733, %735
  br i1 %736, label %737, label %678, !prof !133

737:                                              ; preds = %726
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %867

738:                                              ; preds = %678, %672
  %739 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %666, i64 %668, i32 1, i32 0
  %740 = load i32, i32* %739, align 8
  %741 = icmp eq i32 %740, 0
  %742 = zext i32 %740 to i64
  %743 = getelementptr inbounds i8, i8* %57, i64 %742
  %744 = bitcast i8* %743 to %"struct.CFF::UnsizedByteStr"*
  %745 = select i1 %741, %"struct.CFF::UnsizedByteStr"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::UnsizedByteStr"*), %"struct.CFF::UnsizedByteStr"* %744
  %746 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %666, i64 %668, i32 1, i32 1
  %747 = load i32, i32* %746, align 4
  %748 = getelementptr inbounds %"struct.CFF::UnsizedByteStr", %"struct.CFF::UnsizedByteStr"* %745, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  switch i32 %747, label %749 [
    i32 -1, label %765
    i32 0, label %766
  ]

749:                                              ; preds = %738
  %750 = load i8*, i8** %28, align 8
  %751 = icmp ugt i8* %750, %748
  br i1 %751, label %765, label %752, !prof !2

752:                                              ; preds = %749
  %753 = load i8*, i8** %33, align 8
  %754 = icmp ult i8* %753, %748
  br i1 %754, label %765, label %755, !prof !2

755:                                              ; preds = %752
  %756 = ptrtoint i8* %753 to i64
  %757 = ptrtoint %"struct.CFF::UnsizedByteStr"* %745 to i64
  %758 = sub i64 %756, %757
  %759 = trunc i64 %758 to i32
  %760 = icmp ugt i32 %747, %759
  br i1 %760, label %765, label %761, !prof !2

761:                                              ; preds = %755
  %762 = load i32, i32* %43, align 8
  %763 = sub i32 %762, %747
  store i32 %763, i32* %43, align 8
  %764 = icmp sgt i32 %763, 0
  br i1 %764, label %766, label %765, !prof !3

765:                                              ; preds = %749, %752, %755, %738, %761
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %867

766:                                              ; preds = %738, %761
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %456) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %456, i8 -86, i64 64, i1 false)
  store i8* %748, i8** %457, align 8
  store i32 %747, i32* %458, align 8
  store i8 0, i8* %460, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %462, i8 0, i64 20, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 4 %471, i8 0, i64 9, i1 false)
  %767 = call i8* @malloc(i64 4744) #10
  %768 = icmp eq i8* %767, null
  br i1 %768, label %769, label %770, !prof !2

769:                                              ; preds = %766
  store i32 -1, i32* %463, align 8
  br label %787

770:                                              ; preds = %766
  store i8* %767, i8** %465, align 8
  store i32 593, i32* %463, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %767, i8 0, i64 4104, i1 false) #10
  store i32 513, i32* %466, align 4
  br label %771

771:                                              ; preds = %780, %770
  %772 = phi i32 [ 513, %770 ], [ %784, %780 ]
  %773 = phi i64 [ 0, %770 ], [ %783, %780 ]
  %774 = zext i32 %772 to i64
  %775 = icmp ult i64 %773, %774
  br i1 %775, label %777, label %776, !prof !3

776:                                              ; preds = %771
  store i64 %447, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %780

777:                                              ; preds = %771
  %778 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %464, align 8
  %779 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %778, i64 %773
  br label %780

780:                                              ; preds = %777, %776
  %781 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %776 ], [ %779, %777 ]
  %782 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %781, i64 0, i32 0
  store double 0.000000e+00, double* %782, align 8
  %783 = add nuw nsw i64 %773, 1
  %784 = load i32, i32* %466, align 4
  %785 = zext i32 %784 to i64
  %786 = icmp ult i64 %783, %785
  br i1 %786, label %771, label %787

787:                                              ; preds = %780, %769
  store i8 0, i8* %467, align 8
  store i32 0, i32* %468, align 4
  store i8 0, i8* %469, align 8
  %788 = load i32, i32* %414, align 4
  %789 = zext i32 %788 to i64
  %790 = icmp ult i64 %478, %789
  br i1 %790, label %792, label %791, !prof !3

791:                                              ; preds = %787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  br label %795

792:                                              ; preds = %787
  %793 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %470, align 8
  %794 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %793, i64 %478
  br label %795

795:                                              ; preds = %791, %792
  %796 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %791 ], [ %794, %792 ]
  %797 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %796, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %797, align 8
  %798 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %796, i64 0, i32 0, i32 0, i32 1
  %799 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %796, i64 0, i32 3
  %800 = bitcast %struct.hb_vector_t.88* %798 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %800, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs.101"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*), %"struct.CFF::Subrs.101"** %799, align 8
  %801 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %796, i64 0, i32 4
  store i32 0, i32* %801, align 8
  %802 = load i32, i32* %414, align 4
  %803 = zext i32 %802 to i64
  %804 = icmp ult i64 %478, %803
  br i1 %804, label %806, label %805, !prof !3

805:                                              ; preds = %795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  br label %809

806:                                              ; preds = %795
  %807 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %470, align 8
  %808 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %807, i64 %478
  br label %809

809:                                              ; preds = %805, %806
  %810 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %805 ], [ %808, %806 ]
  %811 = call zeroext i1 @_ZN3CFF18dict_interpreter_tINS_25cff2_private_dict_opset_tENS_31cff2_private_dict_values_base_tINS_10dict_val_tEEENS_27cff2_priv_dict_interp_env_tEE9interpretERS4_(%"struct.CFF::dict_interpreter_t.361"* nonnull %5, %"struct.CFF::cff2_private_dict_values_base_t"* dereferenceable(48) %810)
  br i1 %811, label %813, label %812, !prof !3

812:                                              ; preds = %809
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %864

813:                                              ; preds = %809
  %814 = icmp eq i32 %747, 0
  %815 = select i1 %814, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), i8* %748, !prof !2
  %816 = load i32, i32* %414, align 4
  %817 = zext i32 %816 to i64
  %818 = icmp ult i64 %478, %817
  br i1 %818, label %826, label %819, !prof !3

819:                                              ; preds = %813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  %820 = load i32, i32* bitcast (i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 3) to i32*), align 8
  %821 = icmp eq i32 %820, 0
  %822 = zext i32 %820 to i64
  %823 = getelementptr inbounds i8, i8* %815, i64 %822
  %824 = bitcast i8* %823 to %"struct.CFF::Subrs.101"*
  %825 = select i1 %821, %"struct.CFF::Subrs.101"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*), %"struct.CFF::Subrs.101"* %824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  br label %836

826:                                              ; preds = %813
  %827 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %470, align 8
  %828 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %827, i64 %478, i32 1
  %829 = load i32, i32* %828, align 8
  %830 = icmp eq i32 %829, 0
  %831 = zext i32 %829 to i64
  %832 = getelementptr inbounds i8, i8* %815, i64 %831
  %833 = bitcast i8* %832 to %"struct.CFF::Subrs.101"*
  %834 = select i1 %830, %"struct.CFF::Subrs.101"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*), %"struct.CFF::Subrs.101"* %833
  %835 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %827, i64 %478
  br label %836

836:                                              ; preds = %819, %826
  %837 = phi %"struct.CFF::Subrs.101"* [ %825, %819 ], [ %834, %826 ]
  %838 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %819 ], [ %835, %826 ]
  %839 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %838, i64 0, i32 3
  store %"struct.CFF::Subrs.101"* %837, %"struct.CFF::Subrs.101"** %839, align 8
  %840 = load i32, i32* %414, align 4
  %841 = zext i32 %840 to i64
  %842 = icmp ult i64 %478, %841
  br i1 %842, label %844, label %843, !prof !3

843:                                              ; preds = %836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  br label %847

844:                                              ; preds = %836
  %845 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %470, align 8
  %846 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %845, i64 %478
  br label %847

847:                                              ; preds = %843, %844
  %848 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %843 ], [ %846, %844 ]
  %849 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %848, i64 0, i32 3
  %850 = load %"struct.CFF::Subrs.101"*, %"struct.CFF::Subrs.101"** %849, align 8
  %851 = icmp eq %"struct.CFF::Subrs.101"* %850, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*)
  br i1 %851, label %864, label %852

852:                                              ; preds = %847
  br i1 %842, label %854, label %853, !prof !3

853:                                              ; preds = %852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 48, i1 false) #10
  br label %857

854:                                              ; preds = %852
  %855 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %470, align 8
  %856 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %855, i64 %478
  br label %857

857:                                              ; preds = %853, %854
  %858 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %853 ], [ %856, %854 ]
  %859 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %858, i64 0, i32 3
  %860 = bitcast %"struct.CFF::Subrs.101"** %859 to %"struct.CFF::CFFIndex.102"**
  %861 = load %"struct.CFF::CFFIndex.102"*, %"struct.CFF::CFFIndex.102"** %860, align 8
  %862 = call zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex.102"* %861, %struct.hb_sanitize_context_t* %11)
  br i1 %862, label %864, label %863, !prof !3

863:                                              ; preds = %857
  call void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"* %0)
  br label %864

864:                                              ; preds = %847, %857, %863, %812
  %865 = phi i32 [ 1, %812 ], [ 1, %863 ], [ 0, %857 ], [ 0, %847 ]
  %866 = load i8*, i8** %465, align 8
  call void @free(i8* %866) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %456) #10
  br label %867

867:                                              ; preds = %671, %737, %864, %765
  %868 = phi i32 [ 1, %671 ], [ 1, %737 ], [ 1, %765 ], [ %865, %864 ]
  %869 = load i8*, i8** %445, align 8
  call void @free(i8* %869) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %433) #10
  %870 = icmp eq i32 %868, 0
  %871 = add nuw nsw i64 %478, 1
  br i1 %870, label %473, label %872

872:                                              ; preds = %473, %867, %426, %190, %603, %81, %472, %364, %339, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cff219accelerator_templ_tIN3CFF25cff2_private_dict_opset_tENS2_31cff2_private_dict_values_base_tINS2_10dict_val_tEEEE4finiEv(%"struct.OT::cff2::accelerator_templ_t"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 2
  %3 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 1, i32 9
  %4 = load %struct.hb_blob_t*, %struct.hb_blob_t** %3, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %4) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %3, align 8
  %5 = bitcast i8** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  %6 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 2
  %8 = bitcast %"struct.CFF::op_str_t"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #10
  %10 = bitcast %struct.hb_vector_t.84* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 10, i32 2
  br i1 %14, label %28, label %16

16:                                               ; preds = %1
  %17 = zext i32 %13 to i64
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %26, %18 ]
  %20 = load %"struct.CFF::cff2_font_dict_values_t"*, %"struct.CFF::cff2_font_dict_values_t"** %15, align 8
  %21 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %20, i64 %19, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %20, i64 %19, i32 0, i32 0, i32 1, i32 2
  %23 = bitcast %"struct.CFF::op_str_t"** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #10
  %25 = bitcast %struct.hb_vector_t.84* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  %26 = add nuw nsw i64 %19, 1
  %27 = icmp eq i64 %26, %17
  br i1 %27, label %28, label %18

28:                                               ; preds = %18, %1
  %29 = bitcast %"struct.CFF::cff2_font_dict_values_t"** %15 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @free(i8* %30) #10
  %31 = bitcast %struct.hb_vector_t.112* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11
  %33 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 11, i32 2
  br i1 %35, label %49, label %37

37:                                               ; preds = %28
  %38 = zext i32 %34 to i64
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %47, %39 ]
  %41 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %36, align 8
  %42 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %41, i64 %40, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %41, i64 %40, i32 0, i32 0, i32 1, i32 2
  %44 = bitcast %"struct.CFF::dict_val_t"** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @free(i8* %45) #10
  %46 = bitcast %struct.hb_vector_t.88* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  %47 = add nuw nsw i64 %40, 1
  %48 = icmp eq i64 %47, %38
  br i1 %48, label %49, label %39

49:                                               ; preds = %39, %28
  %50 = bitcast %"struct.CFF::cff2_private_dict_values_base_t"** %36 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @free(i8* %51) #10
  %52 = bitcast %struct.hb_vector_t.113* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = getelementptr inbounds %"struct.OT::cff2::accelerator_templ_t", %"struct.OT::cff2::accelerator_templ_t"* %0, i64 0, i32 0
  %54 = load %struct.hb_blob_t*, %struct.hb_blob_t** %53, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %54) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF18CFF2VariationStore8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFF2VariationStore"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::VariationStore"*, align 8
  %4 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %72, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %72, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.CFF::CFF2VariationStore"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 10
  br i1 %17, label %72, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -10
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %72, !prof !3

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %24, i64 0, i32 0, i32 0, i32 0, i64 0
  %26 = bitcast %"struct.CFF::CFF2VariationStore"* %0 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #10
  %29 = zext i16 %28 to i32
  %30 = icmp eq i16 %27, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %23
  %32 = icmp ugt i8* %6, %25
  %33 = icmp ult i8* %10, %25
  %34 = or i1 %32, %33
  br i1 %34, label %72, label %35, !prof !6

35:                                               ; preds = %31
  %36 = ptrtoint %"struct.OT::VariationStore"* %24 to i64
  %37 = sub i64 %13, %36
  %38 = trunc i64 %37 to i32
  %39 = icmp ult i32 %38, %29
  br i1 %39, label %72, label %40, !prof !2

40:                                               ; preds = %35
  %41 = sub nsw i32 %21, %29
  store i32 %41, i32* %19, align 8
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %72

43:                                               ; preds = %23, %40
  %44 = phi i32 [ %21, %23 ], [ %41, %40 ]
  %45 = icmp ugt i8* %6, %25
  %46 = icmp ult i8* %10, %25
  %47 = or i1 %45, %46
  br i1 %47, label %53, label %48, !prof !6

48:                                               ; preds = %43
  %49 = ptrtoint %"struct.OT::VariationStore"* %24 to i64
  %50 = sub i64 %13, %49
  %51 = trunc i64 %50 to i32
  %52 = icmp ult i32 %51, 8
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48, %43
  %54 = bitcast %"struct.OT::VariationStore"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  br label %69

55:                                               ; preds = %48
  %56 = add nsw i32 %44, -8
  store i32 %56, i32* %19, align 8
  %57 = icmp sgt i32 %56, 0
  %58 = bitcast %"struct.OT::VariationStore"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  br i1 %57, label %59, label %69

59:                                               ; preds = %55
  %60 = bitcast %"struct.OT::VariationStore"* %24 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = icmp eq i16 %61, 256
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %0, i64 0, i32 1, i32 1
  %65 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_13VarRegionListENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.103"* %64, %struct.hb_sanitize_context_t* %1, i8* %25) #10
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %0, i64 0, i32 1, i32 2
  store %"struct.OT::VariationStore"* %24, %"struct.OT::VariationStore"** %3, align 8
  %68 = call zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_7VarDataENS_7IntTypeIjLj4EEELb1EEENS3_ItLj2EEEE8sanitizeIJPKNS_14VariationStoreEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.104"* %67, %struct.hb_sanitize_context_t* %1, %"struct.OT::VariationStore"** nonnull dereferenceable(8) %3) #10
  br label %69

69:                                               ; preds = %53, %55, %59, %63, %66
  %70 = phi i8* [ %58, %63 ], [ %58, %59 ], [ %58, %55 ], [ %58, %66 ], [ %54, %53 ]
  %71 = phi i1 [ false, %63 ], [ false, %59 ], [ false, %55 ], [ %68, %66 ], [ false, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  br label %72

72:                                               ; preds = %31, %35, %2, %8, %12, %69, %40, %18
  %73 = phi i1 [ false, %40 ], [ false, %18 ], [ %71, %69 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ false, %35 ], [ false, %31 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE8sanitizeEP21hb_sanitize_context_t(%"struct.CFF::CFFIndex.102"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %225, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %225, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.CFF::CFFIndex.102"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 5
  br i1 %16, label %41, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -5
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %17
  %23 = load i8, i8* %3, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw i32 %24, 24
  %26 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %29, %25
  %31 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = or i32 %30, %34
  %36 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %35, %38
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %225, label %41

41:                                               ; preds = %11, %17, %22
  %42 = ptrtoint i8* %9 to i64
  %43 = ptrtoint %"struct.CFF::CFFIndex.102"* %0 to i64
  %44 = sub i64 %42, %43
  %45 = trunc i64 %44 to i32
  %46 = icmp ult i32 %45, 5
  br i1 %46, label %225, label %47, !prof !2

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, -5
  store i32 %50, i32* %48, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %225, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = add i8 %54, -1
  %57 = icmp ult i8 %56, 4
  br i1 %57, label %58, label %225, !prof !21

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 0
  %60 = load i8, i8* %3, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw i32 %61, 24
  %63 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 16
  %67 = or i32 %66, %62
  %68 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %67, %71
  %73 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = add i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %58
  %80 = udiv i32 -1, %77
  %81 = icmp ugt i32 %80, %55
  br i1 %81, label %82, label %225, !prof !5

82:                                               ; preds = %79, %58
  %83 = mul i32 %77, %55
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %225, label %85, !prof !7

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %59, i64 0, i32 0, i32 0
  %87 = icmp eq i32 %83, 0
  br i1 %87, label %116, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i8* %5, %86
  %90 = icmp ult i8* %9, %86
  %91 = or i1 %89, %90
  br i1 %91, label %225, label %92, !prof !6

92:                                               ; preds = %88
  %93 = ptrtoint %"struct.OT::IntType.6"* %59 to i64
  %94 = sub i64 %42, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %83, %95
  br i1 %96, label %225, label %97, !prof !2

97:                                               ; preds = %92
  %98 = sub i32 %50, %83
  store i32 %98, i32* %48, align 8
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %225, !prof !3

100:                                              ; preds = %97
  %101 = load i8, i8* %53, align 1
  %102 = load i8, i8* %3, align 1
  %103 = load i8, i8* %63, align 1
  %104 = load i8, i8* %68, align 1
  %105 = load i8, i8* %73, align 1
  %106 = zext i8 %102 to i32
  %107 = shl nuw i32 %106, 24
  %108 = zext i8 %103 to i32
  %109 = shl nuw nsw i32 %108, 16
  %110 = or i32 %109, %107
  %111 = zext i8 %104 to i32
  %112 = shl nuw nsw i32 %111, 8
  %113 = or i32 %110, %112
  %114 = zext i8 %105 to i32
  %115 = or i32 %113, %114
  br label %116

116:                                              ; preds = %100, %85
  %117 = phi i32 [ %115, %100 ], [ %76, %85 ]
  %118 = phi i32 [ %98, %100 ], [ %50, %85 ]
  %119 = phi i8 [ %105, %100 ], [ %74, %85 ]
  %120 = phi i8 [ %104, %100 ], [ %69, %85 ]
  %121 = phi i8 [ %103, %100 ], [ %64, %85 ]
  %122 = phi i8 [ %102, %100 ], [ %60, %85 ]
  %123 = phi i8 [ %101, %100 ], [ %54, %85 ]
  %124 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 5
  %125 = zext i8 %123 to i64
  %126 = zext i8 %122 to i64
  %127 = shl nuw nsw i64 %126, 24
  %128 = zext i8 %121 to i64
  %129 = shl nuw nsw i64 %128, 16
  %130 = or i64 %129, %127
  %131 = zext i8 %120 to i64
  %132 = shl nuw nsw i64 %131, 8
  %133 = or i64 %130, %132
  %134 = zext i8 %119 to i64
  %135 = or i64 %133, %134
  %136 = add nuw nsw i64 %135, 1
  %137 = mul nuw nsw i64 %136, %125
  %138 = and i64 %137, 4294967295
  %139 = getelementptr inbounds i8, i8* %124, i64 %138
  %140 = icmp eq i32 %117, -1
  br i1 %140, label %225, label %141

141:                                              ; preds = %116
  %142 = zext i8 %123 to i32
  %143 = icmp eq i8 %123, 0
  br i1 %143, label %225, label %144

144:                                              ; preds = %141
  %145 = add nuw i32 %117, 1
  %146 = zext i32 %145 to i64
  %147 = add nsw i32 %142, -1
  %148 = and i32 %142, 3
  %149 = icmp ult i32 %147, 3
  %150 = sub nsw i32 %142, %148
  %151 = icmp eq i32 %148, 0
  br label %152

152:                                              ; preds = %202, %144
  %153 = phi i64 [ 0, %144 ], [ %206, %202 ]
  %154 = phi i32 [ 0, %144 ], [ %205, %202 ]
  %155 = trunc i64 %153 to i32
  %156 = mul i32 %155, %142
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %157
  br i1 %149, label %186, label %159

159:                                              ; preds = %152, %159
  %160 = phi i32 [ %183, %159 ], [ 0, %152 ]
  %161 = phi %"struct.OT::IntType.6"* [ %179, %159 ], [ %158, %152 ]
  %162 = phi i32 [ %184, %159 ], [ %150, %152 ]
  %163 = shl i32 %160, 8
  %164 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %161, i64 0, i32 0, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = or i32 %163, %166
  %168 = shl i32 %167, 8
  %169 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %161, i64 1, i32 0, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = or i32 %168, %171
  %173 = shl i32 %172, 8
  %174 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %161, i64 2, i32 0, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = or i32 %173, %176
  %178 = shl i32 %177, 8
  %179 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %161, i64 4
  %180 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %161, i64 3, i32 0, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = or i32 %178, %182
  %184 = add i32 %162, -4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %159

186:                                              ; preds = %159, %152
  %187 = phi i32 [ undef, %152 ], [ %183, %159 ]
  %188 = phi i32 [ 0, %152 ], [ %183, %159 ]
  %189 = phi %"struct.OT::IntType.6"* [ %158, %152 ], [ %179, %159 ]
  br i1 %151, label %202, label %190

190:                                              ; preds = %186, %190
  %191 = phi i32 [ %199, %190 ], [ %188, %186 ]
  %192 = phi %"struct.OT::IntType.6"* [ %195, %190 ], [ %189, %186 ]
  %193 = phi i32 [ %200, %190 ], [ %148, %186 ]
  %194 = shl i32 %191, 8
  %195 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %192, i64 1
  %196 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %192, i64 0, i32 0, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = or i32 %194, %198
  %200 = add i32 %193, -1
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %190, !llvm.loop !135

202:                                              ; preds = %190, %186
  %203 = phi i32 [ %187, %186 ], [ %199, %190 ]
  %204 = icmp ugt i32 %203, %154
  %205 = select i1 %204, i32 %203, i32 %154
  %206 = add nuw nsw i64 %153, 1
  %207 = icmp ult i64 %206, %146
  br i1 %207, label %152, label %208

208:                                              ; preds = %202
  %209 = add i32 %205, -1
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %225, label %211

211:                                              ; preds = %208
  %212 = icmp slt i32 %209, 0
  %213 = icmp ugt i8* %5, %139
  %214 = or i1 %213, %212
  %215 = icmp ult i8* %9, %139
  %216 = or i1 %214, %215
  br i1 %216, label %225, label %217, !prof !58

217:                                              ; preds = %211
  %218 = ptrtoint i8* %139 to i64
  %219 = sub i64 %42, %218
  %220 = trunc i64 %219 to i32
  %221 = icmp ugt i32 %209, %220
  br i1 %221, label %225, label %222, !prof !2

222:                                              ; preds = %217
  %223 = sub i32 %118, %209
  store i32 %223, i32* %48, align 8
  %224 = icmp sgt i32 %223, 0
  br label %225

225:                                              ; preds = %141, %116, %7, %222, %217, %208, %211, %52, %88, %92, %82, %79, %2, %41, %47, %97, %22
  %226 = phi i1 [ true, %22 ], [ false, %97 ], [ false, %52 ], [ false, %47 ], [ false, %41 ], [ false, %2 ], [ false, %79 ], [ false, %82 ], [ false, %92 ], [ false, %88 ], [ false, %211 ], [ false, %217 ], [ %224, %222 ], [ true, %208 ], [ false, %7 ], [ false, %116 ], [ false, %141 ]
  ret i1 %226
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3CFF18dict_interpreter_tINS_25cff2_private_dict_opset_tENS_31cff2_private_dict_values_base_tINS_10dict_val_tEEENS_27cff2_priv_dict_interp_env_tEE9interpretERS4_(%"struct.CFF::dict_interpreter_t.361"*, %"struct.CFF::cff2_private_dict_values_base_t"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %1, i64 0, i32 3
  %6 = bitcast %struct.hb_vector_t.88* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  store %"struct.CFF::Subrs.101"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Subrs.101"*), %"struct.CFF::Subrs.101"** %5, align 8
  %7 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %1, i64 0, i32 4
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %16 = zext i8 %15 to i32
  %17 = or i32 %16, 256
  %18 = getelementptr inbounds %"struct.CFF::dict_interpreter_t.361", %"struct.CFF::dict_interpreter_t.361"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i8, i8* %11, align 4, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %79

21:                                               ; preds = %2, %76
  %22 = load i32, i32* %8, align 8
  %23 = add i32 %22, 1
  %24 = load i32, i32* %12, align 8
  %25 = icmp ugt i32 %23, %24
  br i1 %25, label %79, label %26

26:                                               ; preds = %21
  %27 = icmp ult i32 %22, %24
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %26
  store i8 1, i8* %11, align 4
  br label %33

29:                                               ; preds = %26
  %30 = load i8*, i8** %14, align 8
  %31 = zext i32 %22 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  br label %33

33:                                               ; preds = %29, %28
  %34 = phi i1 [ false, %28 ], [ true, %29 ]
  %35 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %28 ], [ %32, %29 ]
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i8 %36, 12
  br i1 %38, label %39, label %55

39:                                               ; preds = %33
  br i1 %34, label %40, label %66, !prof !59

40:                                               ; preds = %39
  %41 = icmp ult i32 %23, %24
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %40
  store i8 1, i8* %11, align 4
  br label %53

43:                                               ; preds = %40
  %44 = load i8*, i8** %14, align 8
  %45 = zext i32 %23 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %48, 256
  %50 = icmp ugt i32 %22, %24
  br i1 %50, label %53, label %51, !prof !6

51:                                               ; preds = %43
  store i32 %23, i32* %8, align 8
  %52 = add i32 %22, 2
  br label %56

53:                                               ; preds = %43, %42
  %54 = phi i32 [ %49, %43 ], [ %17, %42 ]
  store i32 %24, i32* %8, align 8
  store i8 1, i8* %11, align 4
  br label %64

55:                                               ; preds = %33
  br i1 %34, label %56, label %64, !prof !3

56:                                               ; preds = %55, %51
  %57 = phi i32 [ %23, %55 ], [ %52, %51 ]
  %58 = phi i32 [ %37, %55 ], [ %49, %51 ]
  %59 = phi i32 [ %22, %55 ], [ %23, %51 ]
  %60 = icmp ule i32 %59, %24
  %61 = icmp ule i32 %57, %24
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %64, !prof !21

63:                                               ; preds = %56
  store i32 %57, i32* %8, align 8
  br label %66

64:                                               ; preds = %56, %55, %53
  %65 = phi i32 [ %58, %56 ], [ %54, %53 ], [ %37, %55 ]
  store i32 %24, i32* %8, align 8
  store i8 1, i8* %11, align 4
  br label %66

66:                                               ; preds = %39, %63, %64
  %67 = phi i32 [ %58, %63 ], [ %65, %64 ], [ 65535, %39 ]
  tail call void @_ZN3CFF25cff2_private_dict_opset_t10process_opEjRNS_27cff2_priv_dict_interp_env_tERNS_31cff2_private_dict_values_base_tINS_10dict_val_tEEE(i32 %67, %"struct.CFF::cff2_priv_dict_interp_env_t"* dereferenceable(64) %13, %"struct.CFF::cff2_private_dict_values_base_t"* dereferenceable(48) %1)
  %68 = load i8, i8* %18, align 8, !range !4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %79, !prof !5

70:                                               ; preds = %66
  %71 = load i8, i8* %11, align 4, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %79, !prof !5

73:                                               ; preds = %70
  %74 = load i8, i8* %9, align 8, !range !4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %79, !prof !5

76:                                               ; preds = %73
  %77 = load i32, i32* %10, align 8
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %21, !prof !2

79:                                               ; preds = %21, %73, %66, %70, %76, %2
  %80 = phi i1 [ true, %2 ], [ false, %76 ], [ true, %21 ], [ false, %70 ], [ false, %66 ], [ false, %73 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cff2EEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %41

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 5
  br i1 %30, label %37, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -5
  store i32 %32, i32* %23, align 8
  %33 = load i8, i8* %8, align 1
  %34 = icmp eq i8 %33, 2
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %35 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #10
  br i1 %34, label %36, label %39

36:                                               ; preds = %31
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %41

37:                                               ; preds = %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %38 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  br label %39

39:                                               ; preds = %37, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %40 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %41

41:                                               ; preds = %36, %39, %27
  %42 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %36 ], [ %40, %39 ]
  ret %struct.hb_blob_t* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF21cff2_top_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_22cff2_top_dict_values_tE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56), %"struct.CFF::cff2_top_dict_values_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %136 [
    i32 263, label %4
    i32 24, label %8
    i32 293, label %40
    i32 17, label %72
    i32 292, label %104
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  tail call void @_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE(%"struct.CFF::parsed_values_t.83"* %5, i32 263, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %6)
  %7 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  br label %140

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13, !prof !2

13:                                               ; preds = %8
  %14 = add i32 %11, -1
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, %14
  br i1 %17, label %21, label %18, !prof !3

18:                                               ; preds = %13
  %19 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %19, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %20 = bitcast i64 %19 to double
  br label %31

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %23 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %22, align 8
  %24 = zext i32 %14 to i64
  %25 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %23, i64 %24, i32 0
  %26 = load double, double* %25, align 8
  br label %31

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %9, i64 0, i32 0, i32 0
  store i8 1, i8* %28, align 8
  %29 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %29, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %30 = bitcast i64 %29 to double
  br label %31

31:                                               ; preds = %27, %21, %18
  %32 = phi double [ %30, %27 ], [ %20, %18 ], [ %26, %21 ]
  %33 = fptosi double %32 to i32
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %9, i64 0, i32 0, i32 0
  store i8 1, i8* %36, align 8
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi i32 [ 0, %35 ], [ %33, %31 ]
  %39 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 1
  store i32 %38, i32* %39, align 8
  br label %140

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %59, label %45, !prof !2

45:                                               ; preds = %40
  %46 = add i32 %43, -1
  store i32 %46, i32* %42, align 4
  %47 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, %46
  br i1 %49, label %53, label %50, !prof !3

50:                                               ; preds = %45
  %51 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %51, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %52 = bitcast i64 %51 to double
  br label %63

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %55 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %54, align 8
  %56 = zext i32 %46 to i64
  %57 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %56, i32 0
  %58 = load double, double* %57, align 8
  br label %63

59:                                               ; preds = %40
  %60 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %41, i64 0, i32 0, i32 0
  store i8 1, i8* %60, align 8
  %61 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %61, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %62 = bitcast i64 %61 to double
  br label %63

63:                                               ; preds = %59, %53, %50
  %64 = phi double [ %62, %59 ], [ %52, %50 ], [ %58, %53 ]
  %65 = fptosi double %64 to i32
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %41, i64 0, i32 0, i32 0
  store i8 1, i8* %68, align 8
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ 0, %67 ], [ %65, %63 ]
  %71 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 2
  store i32 %70, i32* %71, align 4
  br label %140

72:                                               ; preds = %3
  %73 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %91, label %77, !prof !2

77:                                               ; preds = %72
  %78 = add i32 %75, -1
  store i32 %78, i32* %74, align 4
  %79 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp ugt i32 %80, %78
  br i1 %81, label %85, label %82, !prof !3

82:                                               ; preds = %77
  %83 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %83, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %84 = bitcast i64 %83 to double
  br label %95

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %87 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %86, align 8
  %88 = zext i32 %78 to i64
  %89 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %87, i64 %88, i32 0
  %90 = load double, double* %89, align 8
  br label %95

91:                                               ; preds = %72
  %92 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %73, i64 0, i32 0, i32 0
  store i8 1, i8* %92, align 8
  %93 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %93, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %94 = bitcast i64 %93 to double
  br label %95

95:                                               ; preds = %91, %85, %82
  %96 = phi double [ %94, %91 ], [ %84, %82 ], [ %90, %85 ]
  %97 = fptosi double %96 to i32
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %101, !prof !2

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %73, i64 0, i32 0, i32 0
  store i8 1, i8* %100, align 8
  br label %101

101:                                              ; preds = %99, %95
  %102 = phi i32 [ 0, %99 ], [ %97, %95 ]
  %103 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 0, i32 1
  store i32 %102, i32* %103, align 8
  br label %140

104:                                              ; preds = %3
  %105 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %123, label %109, !prof !2

109:                                              ; preds = %104
  %110 = add i32 %107, -1
  store i32 %110, i32* %106, align 4
  %111 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp ugt i32 %112, %110
  br i1 %113, label %117, label %114, !prof !3

114:                                              ; preds = %109
  %115 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %115, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %116 = bitcast i64 %115 to double
  br label %127

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %119 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %118, align 8
  %120 = zext i32 %110 to i64
  %121 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %119, i64 %120, i32 0
  %122 = load double, double* %121, align 8
  br label %127

123:                                              ; preds = %104
  %124 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %105, i64 0, i32 0, i32 0
  store i8 1, i8* %124, align 8
  %125 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %125, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %126 = bitcast i64 %125 to double
  br label %127

127:                                              ; preds = %123, %117, %114
  %128 = phi double [ %126, %123 ], [ %116, %114 ], [ %122, %117 ]
  %129 = fptosi double %128 to i32
  %130 = icmp slt i32 %129, 0
  br i1 %130, label %131, label %133, !prof !2

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %105, i64 0, i32 0, i32 0
  store i8 1, i8* %132, align 8
  br label %133

133:                                              ; preds = %131, %127
  %134 = phi i32 [ 0, %131 ], [ %129, %127 ]
  %135 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 0, i32 2
  store i32 %134, i32* %135, align 4
  br label %140

136:                                              ; preds = %3
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %1) #10
  %137 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %161

140:                                              ; preds = %4, %37, %69, %101, %133
  %141 = phi i32* [ %106, %133 ], [ %74, %101 ], [ %42, %69 ], [ %10, %37 ], [ %7, %4 ]
  store i32 0, i32* %141, align 4
  br label %142

142:                                              ; preds = %140, %136
  %143 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  %144 = load i8, i8* %143, align 8, !range !4
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %161, !prof !5

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %148 = load i8, i8* %147, align 4, !range !4
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %161, !prof !5

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  %152 = load i8, i8* %151, align 8, !range !4
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %161, !prof !5

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %161, label %158, !prof !2

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::cff2_top_dict_values_t"* %2, i64 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  tail call void @_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE(%"struct.CFF::parsed_values_t.83"* %159, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %160)
  br label %161

161:                                              ; preds = %150, %142, %146, %154, %136, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3CFF11FDSelect3_4IN2OT7IntTypeIjLj4EEENS2_ItLj2EEEE8sanitizeEP21hb_sanitize_context_tj(%"struct.CFF::FDSelect3_4.109"*, %struct.hb_sanitize_context_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ugt i8* %8, %6
  br i1 %9, label %20, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ult i8* %12, %6
  br i1 %13, label %20, label %14, !prof !2

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = ptrtoint %"struct.CFF::FDSelect3_4.109"* %0 to i64
  %17 = sub i64 %15, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %14, %10, %3
  %21 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  br label %81

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -4
  store i32 %25, i32* %23, align 8
  %26 = icmp sgt i32 %25, 0
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  br i1 %26, label %28, label %81, !prof !3

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0
  store i8* null, i8** %5, align 8
  %30 = call zeroext i1 @_ZNK2OT7ArrayOfIN3CFF17FDSelect3_4_RangeINS_7IntTypeIjLj4EEENS3_ItLj2EEEEES4_E8sanitizeIJDnRjEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.110"* %29, %struct.hb_sanitize_context_t* %1, i8** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %4)
  br i1 %30, label %31, label %80, !prof !3

31:                                               ; preds = %28
  %32 = bitcast %"struct.CFF::FDSelect3_4.109"* %0 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = call i32 @llvm.bswap.i32(i32 %33)
  %35 = icmp eq i32 %33, 0
  br i1 %35, label %79, label %36, !prof !2

36:                                               ; preds = %31
  %37 = shl i32 %33, 24
  %38 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 16
  %42 = or i32 %41, %37
  %43 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %42, %46
  %48 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 1, i64 0
  %54 = select i1 %52, %"struct.CFF::FDSelect3_4_Range.111"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.111"*), %"struct.CFF::FDSelect3_4_Range.111"* %53, !prof !2
  %55 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %54, i64 0, i32 0, i32 0, i32 0, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw i32 %57, 24
  %59 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %54, i64 0, i32 0, i32 0, i32 0, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 16
  %63 = or i32 %62, %58
  %64 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %54, i64 0, i32 0, i32 0, i32 0, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = or i32 %63, %67
  %69 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %54, i64 0, i32 0, i32 0, i32 0, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %68, %71
  %73 = icmp eq i32 %72, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br i1 %73, label %74, label %201, !prof !3

74:                                               ; preds = %36
  %75 = icmp ugt i32 %34, 1
  br i1 %75, label %76, label %134

76:                                               ; preds = %74
  %77 = zext i32 %51 to i64
  %78 = zext i32 %34 to i64
  br label %85

79:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %201

80:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %201

81:                                               ; preds = %20, %22
  %82 = phi i8* [ %21, %20 ], [ %27, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  br label %201

83:                                               ; preds = %85
  %84 = icmp eq i64 %133, %78
  br i1 %84, label %134, label %85

85:                                               ; preds = %83, %76
  %86 = phi i64 [ 1, %76 ], [ %133, %83 ]
  %87 = trunc i64 %86 to i32
  %88 = add i32 %87, -1
  %89 = icmp ugt i32 %51, %88
  %90 = zext i32 %88 to i64
  %91 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 1, i64 %90
  %92 = select i1 %89, %"struct.CFF::FDSelect3_4_Range.111"* %91, %"struct.CFF::FDSelect3_4_Range.111"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.111"*), !prof !3
  %93 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %92, i64 0, i32 0, i32 0, i32 0, i64 0
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw i32 %95, 24
  %97 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %92, i64 0, i32 0, i32 0, i32 0, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 16
  %101 = or i32 %100, %96
  %102 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %92, i64 0, i32 0, i32 0, i32 0, i64 2
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = or i32 %101, %105
  %107 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %92, i64 0, i32 0, i32 0, i32 0, i64 3
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = or i32 %106, %109
  %111 = icmp ult i64 %86, %77
  %112 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 1, i64 %86
  %113 = select i1 %111, %"struct.CFF::FDSelect3_4_Range.111"* %112, %"struct.CFF::FDSelect3_4_Range.111"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.111"*), !prof !3
  %114 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %113, i64 0, i32 0, i32 0, i32 0, i64 0
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw i32 %116, 24
  %118 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %113, i64 0, i32 0, i32 0, i32 0, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 16
  %122 = or i32 %121, %117
  %123 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %113, i64 0, i32 0, i32 0, i32 0, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl nuw nsw i32 %125, 8
  %127 = or i32 %122, %126
  %128 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %113, i64 0, i32 0, i32 0, i32 0, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = or i32 %127, %130
  %132 = icmp ult i32 %110, %131
  %133 = add nuw nsw i64 %86, 1
  br i1 %132, label %83, label %201, !prof !3

134:                                              ; preds = %83, %74
  %135 = add i32 %34, -1
  %136 = shl i32 %33, 24
  %137 = or i32 %41, %136
  %138 = or i32 %137, %46
  %139 = or i32 %138, %50
  %140 = icmp ugt i32 %139, %135
  %141 = zext i32 %135 to i64
  %142 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 1, i64 %141
  %143 = select i1 %140, %"struct.CFF::FDSelect3_4_Range.111"* %142, %"struct.CFF::FDSelect3_4_Range.111"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.111"*), !prof !3
  %144 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %143, i64 0, i32 0, i32 0, i32 0, i64 6
  %145 = load i8*, i8** %7, align 8
  %146 = icmp ugt i8* %145, %144
  br i1 %146, label %201, label %147, !prof !2

147:                                              ; preds = %134
  %148 = load i8*, i8** %11, align 8
  %149 = icmp ult i8* %148, %144
  br i1 %149, label %201, label %150, !prof !2

150:                                              ; preds = %147
  %151 = ptrtoint i8* %148 to i64
  %152 = ptrtoint i8* %144 to i64
  %153 = sub i64 %151, %152
  %154 = trunc i64 %153 to i32
  %155 = icmp ult i32 %154, 4
  br i1 %155, label %201, label %156, !prof !2

156:                                              ; preds = %150
  %157 = load i32, i32* %23, align 8
  %158 = add i32 %157, -4
  store i32 %158, i32* %23, align 8
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %201, !prof !3

160:                                              ; preds = %156
  %161 = load i32, i32* %32, align 1
  %162 = call i32 @llvm.bswap.i32(i32 %161) #10
  %163 = add i32 %162, -1
  %164 = shl i32 %161, 24
  %165 = load i8, i8* %38, align 1
  %166 = zext i8 %165 to i32
  %167 = shl nuw nsw i32 %166, 16
  %168 = or i32 %167, %164
  %169 = load i8, i8* %43, align 1
  %170 = zext i8 %169 to i32
  %171 = shl nuw nsw i32 %170, 8
  %172 = or i32 %168, %171
  %173 = load i8, i8* %48, align 1
  %174 = zext i8 %173 to i32
  %175 = or i32 %172, %174
  %176 = icmp ugt i32 %175, %163
  %177 = zext i32 %163 to i64
  %178 = getelementptr inbounds %"struct.CFF::FDSelect3_4.109", %"struct.CFF::FDSelect3_4.109"* %0, i64 0, i32 0, i32 1, i64 %177
  %179 = select i1 %176, %"struct.CFF::FDSelect3_4_Range.111"* %178, %"struct.CFF::FDSelect3_4_Range.111"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.111"*), !prof !3
  %180 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %179, i64 0, i32 0, i32 0, i32 0, i64 6
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = shl nuw i32 %182, 24
  %184 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %179, i64 0, i32 0, i32 0, i32 0, i64 7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = shl nuw nsw i32 %186, 16
  %188 = or i32 %187, %183
  %189 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %179, i64 0, i32 0, i32 0, i32 0, i64 8
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = shl nuw nsw i32 %191, 8
  %193 = or i32 %188, %192
  %194 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %179, i64 0, i32 0, i32 0, i32 0, i64 9
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = or i32 %193, %196
  %198 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %197, %199
  ret i1 %200

201:                                              ; preds = %85, %36, %134, %147, %150, %156, %79, %80, %81
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfIN3CFF17FDSelect3_4_RangeINS_7IntTypeIjLj4EEENS3_ItLj2EEEEES4_E8sanitizeIJDnRjEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.110"*, %struct.hb_sanitize_context_t*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %5
  br i1 %8, label %114, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %11, %5
  br i1 %12, label %114, label %13, !prof !2

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint %"struct.OT::ArrayOf.110"* %0 to i64
  %16 = sub i64 %14, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 4
  br i1 %18, label %114, label %19, !prof !2

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -4
  store i32 %22, i32* %20, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %114, !prof !5

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 0
  %26 = load i8, i8* %5, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 %27, 24
  %29 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 16
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %33, %37
  %39 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %38, %41
  %43 = icmp ult i32 %42, 715827882
  br i1 %43, label %44, label %114, !prof !5

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.111", %"struct.CFF::FDSelect3_4_Range.111"* %25, i64 0, i32 0, i32 0, i32 0, i64 0
  %46 = mul i32 %42, 6
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %44
  %49 = icmp ugt i8* %7, %45
  %50 = icmp ult i8* %11, %45
  %51 = or i1 %49, %50
  br i1 %51, label %114, label %52, !prof !6

52:                                               ; preds = %48
  %53 = ptrtoint %"struct.CFF::FDSelect3_4_Range.111"* %25 to i64
  %54 = sub i64 %14, %53
  %55 = trunc i64 %54 to i32
  %56 = icmp ugt i32 %46, %55
  br i1 %56, label %114, label %57, !prof !2

57:                                               ; preds = %52
  %58 = sub i32 %22, %46
  store i32 %58, i32* %20, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %114, !prof !3

60:                                               ; preds = %57
  %61 = load i8, i8* %5, align 1
  %62 = load i8, i8* %29, align 1
  %63 = load i8, i8* %34, align 1
  %64 = load i8, i8* %39, align 1
  %65 = zext i8 %61 to i32
  %66 = shl nuw i32 %65, 24
  %67 = zext i8 %62 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = or i32 %68, %66
  %70 = zext i8 %63 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %69, %71
  %73 = zext i8 %64 to i32
  %74 = or i32 %72, %73
  br label %75

75:                                               ; preds = %60, %44
  %76 = phi i32 [ %74, %60 ], [ %42, %44 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %114, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %80 = load i32, i32* %79, align 8
  %81 = load i32, i32* %3, align 4
  %82 = zext i32 %76 to i64
  br label %85

83:                                               ; preds = %106
  %84 = icmp eq i64 %113, %82
  br i1 %84, label %114, label %85

85:                                               ; preds = %83, %78
  %86 = phi i64 [ 0, %78 ], [ %113, %83 ]
  %87 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 %86, i32 0, i32 0, i32 0, i64 0
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = shl nuw i32 %89, 24
  %91 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 %86, i32 0, i32 0, i32 0, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw nsw i32 %93, 16
  %95 = or i32 %94, %90
  %96 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 %86, i32 0, i32 0, i32 0, i64 2
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 8
  %100 = or i32 %95, %99
  %101 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 %86, i32 0, i32 0, i32 0, i64 3
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %100, %103
  %105 = icmp ult i32 %104, %80
  br i1 %105, label %106, label %114, !prof !5

106:                                              ; preds = %85
  %107 = getelementptr inbounds %"struct.OT::ArrayOf.110", %"struct.OT::ArrayOf.110"* %0, i64 0, i32 1, i64 %86, i32 1
  %108 = bitcast %"struct.OT::IntType"* %107 to i16*
  %109 = load i16, i16* %108, align 1
  %110 = tail call i16 @llvm.bswap.i16(i16 %109) #10
  %111 = zext i16 %110 to i32
  %112 = icmp ugt i32 %81, %111
  %113 = add nuw nsw i64 %86, 1
  br i1 %112, label %83, label %114, !prof !3

114:                                              ; preds = %106, %85, %83, %75, %48, %52, %24, %4, %9, %13, %19, %57
  %115 = phi i1 [ false, %57 ], [ false, %19 ], [ false, %13 ], [ false, %9 ], [ false, %4 ], [ false, %24 ], [ false, %52 ], [ false, %48 ], [ true, %75 ], [ true, %83 ], [ false, %106 ], [ false, %85 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj(%"struct.CFF::CFFIndex.102"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i8 %5, 0
  br i1 %7, label %352, label %8

8:                                                ; preds = %2
  %9 = mul i32 %3, %6
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %10
  %12 = add nsw i32 %6, -1
  %13 = and i32 %6, 3
  %14 = icmp ult i32 %12, 3
  br i1 %14, label %44, label %15

15:                                               ; preds = %8
  %16 = sub nsw i32 %6, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %41, %17 ]
  %19 = phi %"struct.OT::IntType.6"* [ %11, %15 ], [ %37, %17 ]
  %20 = phi i32 [ %16, %15 ], [ %42, %17 ]
  %21 = shl i32 %18, 8
  %22 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %19, i64 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = or i32 %21, %24
  %26 = shl i32 %25, 8
  %27 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %19, i64 1, i32 0, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = or i32 %26, %29
  %31 = shl i32 %30, 8
  %32 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %19, i64 2, i32 0, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  %36 = shl i32 %35, 8
  %37 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %19, i64 4
  %38 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %19, i64 3, i32 0, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %36, %40
  %42 = add i32 %20, -4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %17

44:                                               ; preds = %17, %8
  %45 = phi i32 [ undef, %8 ], [ %41, %17 ]
  %46 = phi i32 [ 0, %8 ], [ %41, %17 ]
  %47 = phi %"struct.OT::IntType.6"* [ %11, %8 ], [ %37, %17 ]
  %48 = icmp eq i32 %13, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %44, %49
  %50 = phi i32 [ %58, %49 ], [ %46, %44 ]
  %51 = phi %"struct.OT::IntType.6"* [ %54, %49 ], [ %47, %44 ]
  %52 = phi i32 [ %59, %49 ], [ %13, %44 ]
  %53 = shl i32 %50, 8
  %54 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %51, i64 1
  %55 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %51, i64 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %53, %57
  %59 = add i32 %52, -1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %49, !llvm.loop !136

61:                                               ; preds = %49, %44
  %62 = phi i32 [ %45, %44 ], [ %58, %49 ]
  %63 = mul i32 %6, %1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %64
  %66 = add nsw i32 %6, -1
  %67 = and i32 %6, 3
  %68 = icmp ult i32 %66, 3
  br i1 %68, label %98, label %69

69:                                               ; preds = %61
  %70 = sub nsw i32 %6, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i32 [ 0, %69 ], [ %95, %71 ]
  %73 = phi %"struct.OT::IntType.6"* [ %65, %69 ], [ %91, %71 ]
  %74 = phi i32 [ %70, %69 ], [ %96, %71 ]
  %75 = shl i32 %72, 8
  %76 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %73, i64 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = shl i32 %79, 8
  %81 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %73, i64 1, i32 0, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = or i32 %80, %83
  %85 = shl i32 %84, 8
  %86 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %73, i64 2, i32 0, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  %90 = shl i32 %89, 8
  %91 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %73, i64 4
  %92 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %73, i64 3, i32 0, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = or i32 %90, %94
  %96 = add i32 %74, -4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %71

98:                                               ; preds = %71, %61
  %99 = phi i32 [ undef, %61 ], [ %95, %71 ]
  %100 = phi i32 [ 0, %61 ], [ %95, %71 ]
  %101 = phi %"struct.OT::IntType.6"* [ %65, %61 ], [ %91, %71 ]
  %102 = icmp eq i32 %67, 0
  br i1 %102, label %115, label %103

103:                                              ; preds = %98, %103
  %104 = phi i32 [ %112, %103 ], [ %100, %98 ]
  %105 = phi %"struct.OT::IntType.6"* [ %108, %103 ], [ %101, %98 ]
  %106 = phi i32 [ %113, %103 ], [ %67, %98 ]
  %107 = shl i32 %104, 8
  %108 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %105, i64 1
  %109 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %105, i64 0, i32 0, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = or i32 %107, %111
  %113 = add i32 %106, -1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %103, !llvm.loop !137

115:                                              ; preds = %103, %98
  %116 = phi i32 [ %99, %98 ], [ %112, %103 ]
  %117 = icmp ult i32 %62, %116
  br i1 %117, label %356, label %118, !prof !2

118:                                              ; preds = %115
  %119 = add nsw i32 %6, -1
  %120 = and i32 %6, 3
  %121 = icmp ult i32 %119, 3
  br i1 %121, label %151, label %122

122:                                              ; preds = %118
  %123 = sub nsw i32 %6, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i32 [ 0, %122 ], [ %148, %124 ]
  %126 = phi %"struct.OT::IntType.6"* [ %11, %122 ], [ %144, %124 ]
  %127 = phi i32 [ %123, %122 ], [ %149, %124 ]
  %128 = shl i32 %125, 8
  %129 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %126, i64 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %128, %131
  %133 = shl i32 %132, 8
  %134 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %126, i64 1, i32 0, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = or i32 %133, %136
  %138 = shl i32 %137, 8
  %139 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %126, i64 2, i32 0, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = or i32 %138, %141
  %143 = shl i32 %142, 8
  %144 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %126, i64 4
  %145 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %126, i64 3, i32 0, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = or i32 %143, %147
  %149 = add i32 %127, -4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %124

151:                                              ; preds = %124, %118
  %152 = phi i32 [ undef, %118 ], [ %148, %124 ]
  %153 = phi i32 [ 0, %118 ], [ %148, %124 ]
  %154 = phi %"struct.OT::IntType.6"* [ %11, %118 ], [ %144, %124 ]
  %155 = icmp eq i32 %120, 0
  br i1 %155, label %168, label %156

156:                                              ; preds = %151, %156
  %157 = phi i32 [ %165, %156 ], [ %153, %151 ]
  %158 = phi %"struct.OT::IntType.6"* [ %161, %156 ], [ %154, %151 ]
  %159 = phi i32 [ %166, %156 ], [ %120, %151 ]
  %160 = shl i32 %157, 8
  %161 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %158, i64 1
  %162 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %158, i64 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = or i32 %160, %164
  %166 = add i32 %159, -1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %156, !llvm.loop !138

168:                                              ; preds = %156, %151
  %169 = phi i32 [ %152, %151 ], [ %165, %156 ]
  br i1 %7, label %241, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl nuw nsw i32 %173, 16
  %175 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = shl nuw i32 %177, 24
  %179 = or i32 %178, %174
  %180 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = shl nuw nsw i32 %182, 8
  %184 = or i32 %179, %183
  %185 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = or i32 %184, %187
  %189 = mul i32 %188, %6
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %190
  %192 = add nsw i32 %6, -1
  %193 = and i32 %6, 3
  %194 = icmp ult i32 %192, 3
  br i1 %194, label %224, label %195

195:                                              ; preds = %170
  %196 = sub nsw i32 %6, %193
  br label %197

197:                                              ; preds = %197, %195
  %198 = phi i32 [ 0, %195 ], [ %221, %197 ]
  %199 = phi %"struct.OT::IntType.6"* [ %191, %195 ], [ %217, %197 ]
  %200 = phi i32 [ %196, %195 ], [ %222, %197 ]
  %201 = shl i32 %198, 8
  %202 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %199, i64 0, i32 0, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = or i32 %201, %204
  %206 = shl i32 %205, 8
  %207 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %199, i64 1, i32 0, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = or i32 %206, %209
  %211 = shl i32 %210, 8
  %212 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %199, i64 2, i32 0, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = or i32 %211, %214
  %216 = shl i32 %215, 8
  %217 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %199, i64 4
  %218 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %199, i64 3, i32 0, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = or i32 %216, %220
  %222 = add i32 %200, -4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %197

224:                                              ; preds = %197, %170
  %225 = phi i32 [ undef, %170 ], [ %221, %197 ]
  %226 = phi i32 [ 0, %170 ], [ %221, %197 ]
  %227 = phi %"struct.OT::IntType.6"* [ %191, %170 ], [ %217, %197 ]
  %228 = icmp eq i32 %193, 0
  br i1 %228, label %241, label %229

229:                                              ; preds = %224, %229
  %230 = phi i32 [ %238, %229 ], [ %226, %224 ]
  %231 = phi %"struct.OT::IntType.6"* [ %234, %229 ], [ %227, %224 ]
  %232 = phi i32 [ %239, %229 ], [ %193, %224 ]
  %233 = shl i32 %230, 8
  %234 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %231, i64 1
  %235 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %231, i64 0, i32 0, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = or i32 %233, %237
  %239 = add i32 %232, -1
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %229, !llvm.loop !139

241:                                              ; preds = %224, %229, %168
  %242 = phi i32 [ 0, %168 ], [ %225, %224 ], [ %238, %229 ]
  %243 = icmp ugt i32 %169, %242
  br i1 %243, label %356, label %244, !prof !2

244:                                              ; preds = %241
  br i1 %7, label %352, label %245

245:                                              ; preds = %244
  %246 = mul i32 %3, %6
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %247
  %249 = add nsw i32 %6, -1
  %250 = and i32 %6, 3
  %251 = icmp ult i32 %249, 3
  br i1 %251, label %281, label %252

252:                                              ; preds = %245
  %253 = sub nsw i32 %6, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i32 [ 0, %252 ], [ %278, %254 ]
  %256 = phi %"struct.OT::IntType.6"* [ %248, %252 ], [ %274, %254 ]
  %257 = phi i32 [ %253, %252 ], [ %279, %254 ]
  %258 = shl i32 %255, 8
  %259 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %256, i64 0, i32 0, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = or i32 %258, %261
  %263 = shl i32 %262, 8
  %264 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %256, i64 1, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %263, %266
  %268 = shl i32 %267, 8
  %269 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %256, i64 2, i32 0, i32 0
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = or i32 %268, %271
  %273 = shl i32 %272, 8
  %274 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %256, i64 4
  %275 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %256, i64 3, i32 0, i32 0
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = or i32 %273, %277
  %279 = add i32 %257, -4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %254

281:                                              ; preds = %254, %245
  %282 = phi i32 [ undef, %245 ], [ %278, %254 ]
  %283 = phi i32 [ 0, %245 ], [ %278, %254 ]
  %284 = phi %"struct.OT::IntType.6"* [ %248, %245 ], [ %274, %254 ]
  %285 = icmp eq i32 %250, 0
  br i1 %285, label %298, label %286

286:                                              ; preds = %281, %286
  %287 = phi i32 [ %295, %286 ], [ %283, %281 ]
  %288 = phi %"struct.OT::IntType.6"* [ %291, %286 ], [ %284, %281 ]
  %289 = phi i32 [ %296, %286 ], [ %250, %281 ]
  %290 = shl i32 %287, 8
  %291 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %288, i64 1
  %292 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %288, i64 0, i32 0, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i32
  %295 = or i32 %290, %294
  %296 = add i32 %289, -1
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %286, !llvm.loop !140

298:                                              ; preds = %286, %281
  %299 = phi i32 [ %282, %281 ], [ %295, %286 ]
  %300 = mul i32 %6, %1
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds %"struct.CFF::CFFIndex.102", %"struct.CFF::CFFIndex.102"* %0, i64 0, i32 2, i64 %301
  %303 = add nsw i32 %6, -1
  %304 = and i32 %6, 3
  %305 = icmp ult i32 %303, 3
  br i1 %305, label %335, label %306

306:                                              ; preds = %298
  %307 = sub nsw i32 %6, %304
  br label %308

308:                                              ; preds = %308, %306
  %309 = phi i32 [ 0, %306 ], [ %332, %308 ]
  %310 = phi %"struct.OT::IntType.6"* [ %302, %306 ], [ %328, %308 ]
  %311 = phi i32 [ %307, %306 ], [ %333, %308 ]
  %312 = shl i32 %309, 8
  %313 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %310, i64 0, i32 0, i32 0
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = or i32 %312, %315
  %317 = shl i32 %316, 8
  %318 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %310, i64 1, i32 0, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = or i32 %317, %320
  %322 = shl i32 %321, 8
  %323 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %310, i64 2, i32 0, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = or i32 %322, %325
  %327 = shl i32 %326, 8
  %328 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %310, i64 4
  %329 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %310, i64 3, i32 0, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = or i32 %327, %331
  %333 = add i32 %311, -4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %308

335:                                              ; preds = %308, %298
  %336 = phi i32 [ undef, %298 ], [ %332, %308 ]
  %337 = phi i32 [ 0, %298 ], [ %332, %308 ]
  %338 = phi %"struct.OT::IntType.6"* [ %302, %298 ], [ %328, %308 ]
  %339 = icmp eq i32 %304, 0
  br i1 %339, label %352, label %340

340:                                              ; preds = %335, %340
  %341 = phi i32 [ %349, %340 ], [ %337, %335 ]
  %342 = phi %"struct.OT::IntType.6"* [ %345, %340 ], [ %338, %335 ]
  %343 = phi i32 [ %350, %340 ], [ %304, %335 ]
  %344 = shl i32 %341, 8
  %345 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %342, i64 1
  %346 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %342, i64 0, i32 0, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = or i32 %344, %348
  %350 = add i32 %343, -1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %340, !llvm.loop !141

352:                                              ; preds = %335, %340, %2, %244
  %353 = phi i32 [ 0, %244 ], [ 0, %2 ], [ %299, %340 ], [ %299, %335 ]
  %354 = phi i32 [ 0, %244 ], [ 0, %2 ], [ %336, %335 ], [ %349, %340 ]
  %355 = sub i32 %353, %354
  br label %356

356:                                              ; preds = %115, %241, %352
  %357 = phi i32 [ %355, %352 ], [ 0, %241 ], [ 0, %115 ]
  ret i32 %357
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF22cff2_font_dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEERNS_23cff2_font_dict_values_tE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56), %"struct.CFF::cff2_font_dict_values_t"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %0, 18
  br i1 %4, label %5, label %66

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10, !prof !2

10:                                               ; preds = %5
  %11 = add i32 %8, -1
  store i32 %11, i32* %7, align 4
  %12 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %11
  br i1 %14, label %18, label %15, !prof !3

15:                                               ; preds = %10
  %16 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %16, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %17 = bitcast i64 %16 to double
  br label %28

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %20 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %19, align 8
  %21 = zext i32 %11 to i64
  %22 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %20, i64 %21, i32 0
  %23 = load double, double* %22, align 8
  br label %28

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %6, i64 0, i32 0, i32 0
  store i8 1, i8* %25, align 8
  %26 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %26, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %27 = bitcast i64 %26 to double
  br label %28

28:                                               ; preds = %24, %18, %15
  %29 = phi double [ %27, %24 ], [ %17, %15 ], [ %23, %18 ]
  %30 = fptosi double %29 to i32
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %6, i64 0, i32 0, i32 0
  store i8 1, i8* %33, align 8
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi i32 [ 0, %32 ], [ %30, %28 ]
  %36 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %2, i64 0, i32 1, i32 0
  store i32 %35, i32* %36, align 8
  %37 = load i32, i32* %7, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %53, label %39, !prof !2

39:                                               ; preds = %34
  %40 = add i32 %37, -1
  store i32 %40, i32* %7, align 4
  %41 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %42, %40
  br i1 %43, label %47, label %44, !prof !3

44:                                               ; preds = %39
  %45 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %45, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %46 = bitcast i64 %45 to double
  br label %57

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %49 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %48, align 8
  %50 = zext i32 %40 to i64
  %51 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %50, i32 0
  %52 = load double, double* %51, align 8
  br label %57

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %6, i64 0, i32 0, i32 0
  store i8 1, i8* %54, align 8
  %55 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %55, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %56 = bitcast i64 %55 to double
  br label %57

57:                                               ; preds = %53, %47, %44
  %58 = phi double [ %56, %53 ], [ %46, %44 ], [ %52, %47 ]
  %59 = fptosi double %58 to i32
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %63, !prof !2

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %6, i64 0, i32 0, i32 0
  store i8 1, i8* %62, align 8
  br label %63

63:                                               ; preds = %57, %61
  %64 = phi i32 [ 0, %61 ], [ %59, %57 ]
  %65 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %2, i64 0, i32 1, i32 1
  store i32 %64, i32* %65, align 4
  store i32 0, i32* %7, align 4
  br label %70

66:                                               ; preds = %3
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %1)
  %67 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %89

70:                                               ; preds = %66, %63
  %71 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  %72 = load i8, i8* %71, align 8, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %89, !prof !5

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %76 = load i8, i8* %75, align 4, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %89, !prof !5

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %89, !prof !5

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %89, label %86, !prof !2

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.CFF::cff2_font_dict_values_t", %"struct.CFF::cff2_font_dict_values_t"* %2, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0
  tail call void @_ZN3CFF15parsed_values_tINS_8op_str_tEE6add_opEjRKNS_14byte_str_ref_tE(%"struct.CFF::parsed_values_t.83"* %87, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %88)
  br label %89

89:                                               ; preds = %78, %70, %74, %82, %66, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF25cff2_private_dict_opset_t10process_opEjRNS_27cff2_priv_dict_interp_env_tERNS_31cff2_private_dict_values_base_tINS_10dict_val_tEEE(i32, %"struct.CFF::cff2_priv_dict_interp_env_t"* dereferenceable(64), %"struct.CFF::cff2_private_dict_values_base_t"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.CFF::dict_val_t", align 8
  %5 = bitcast %"struct.CFF::dict_val_t"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = bitcast %"struct.CFF::dict_val_t"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.CFF::byte_str_t"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  switch i32 %0, label %111 [
    i32 10, label %9
    i32 11, label %9
    i32 265, label %9
    i32 266, label %9
    i32 267, label %9
    i32 274, label %9
    i32 273, label %9
    i32 6, label %34
    i32 7, label %34
    i32 8, label %34
    i32 9, label %34
    i32 268, label %34
    i32 269, label %34
    i32 19, label %36
    i32 22, label %68
    i32 23, label %116
  ]

9:                                                ; preds = %3, %3, %3, %3, %3, %3, %3
  %10 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13, !prof !2

13:                                               ; preds = %9
  %14 = add i32 %11, -1
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, %14
  br i1 %17, label %20, label %18, !prof !3

18:                                               ; preds = %13
  %19 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %19, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %30

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %22 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %21, align 8
  %23 = zext i32 %14 to i64
  %24 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %22, i64 %23
  %25 = bitcast %"struct.CFF::number_t"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  br label %30

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %28, align 8
  %29 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %29, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %30

30:                                               ; preds = %18, %20, %27
  %31 = phi i64 [ %29, %27 ], [ %19, %18 ], [ %26, %20 ]
  %32 = getelementptr inbounds %"struct.CFF::dict_val_t", %"struct.CFF::dict_val_t"* %4, i64 0, i32 1
  %33 = bitcast %"struct.CFF::number_t"* %32 to i64*
  store i64 %31, i64* %33, align 8
  store i32 0, i32* %10, align 4
  br label %116

34:                                               ; preds = %3, %3, %3, %3, %3, %3
  %35 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %35, align 4
  br label %116

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %55, label %41, !prof !2

41:                                               ; preds = %36
  %42 = add i32 %39, -1
  store i32 %42, i32* %38, align 4
  %43 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ugt i32 %44, %42
  br i1 %45, label %49, label %46, !prof !3

46:                                               ; preds = %41
  %47 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %47, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %48 = bitcast i64 %47 to double
  br label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %51 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %50, align 8
  %52 = zext i32 %42 to i64
  %53 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %51, i64 %52, i32 0
  %54 = load double, double* %53, align 8
  br label %59

55:                                               ; preds = %36
  %56 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %37, i64 0, i32 0, i32 0
  store i8 1, i8* %56, align 8
  %57 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %57, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %58 = bitcast i64 %57 to double
  br label %59

59:                                               ; preds = %55, %49, %46
  %60 = phi double [ %58, %55 ], [ %48, %46 ], [ %54, %49 ]
  %61 = fptosi double %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %37, i64 0, i32 0, i32 0
  store i8 1, i8* %64, align 8
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i32 [ 0, %63 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %2, i64 0, i32 1
  store i32 %66, i32* %67, align 8
  store i32 0, i32* %38, align 4
  br label %116

68:                                               ; preds = %3
  %69 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 3
  %70 = load i8, i8* %69, align 8, !range !4
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %72, label %75, !prof !2

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  br label %107

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %94, label %80, !prof !2

80:                                               ; preds = %75
  %81 = add i32 %78, -1
  store i32 %81, i32* %77, align 4
  %82 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp ugt i32 %83, %81
  br i1 %84, label %88, label %85, !prof !3

85:                                               ; preds = %80
  %86 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %86, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %87 = bitcast i64 %86 to double
  br label %98

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %90 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %89, align 8
  %91 = zext i32 %81 to i64
  %92 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %90, i64 %91, i32 0
  %93 = load double, double* %92, align 8
  br label %98

94:                                               ; preds = %75
  %95 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %76, i64 0, i32 0, i32 0
  store i8 1, i8* %95, align 8
  %96 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %96, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %97 = bitcast i64 %96 to double
  br label %98

98:                                               ; preds = %94, %88, %85
  %99 = phi double [ %97, %94 ], [ %87, %85 ], [ %93, %88 ]
  %100 = fptosi double %99 to i32
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %102, label %104, !prof !2

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %76, i64 0, i32 0, i32 0
  store i8 1, i8* %103, align 8
  br label %104

104:                                              ; preds = %102, %98
  %105 = phi i32 [ 0, %102 ], [ %100, %98 ]
  %106 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 2
  store i32 %105, i32* %106, align 4
  br label %107

107:                                              ; preds = %72, %104
  %108 = phi i32 [ %74, %72 ], [ %105, %104 ]
  store i8 1, i8* %69, align 8
  %109 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %2, i64 0, i32 4
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %110, align 4
  br label %116

111:                                              ; preds = %3
  %112 = bitcast %"struct.CFF::cff2_priv_dict_interp_env_t"* %1 to %"struct.CFF::interp_env_t"*
  tail call void @_ZN3CFF12dict_opset_t10process_opEjRNS_12interp_env_tINS_8number_tEEE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %112)
  %113 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %135

116:                                              ; preds = %111, %3, %107, %65, %34, %30
  %117 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 2
  %118 = load i8, i8* %117, align 8, !range !4
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %135, !prof !5

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %135, !prof !5

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %126 = load i8, i8* %125, align 8, !range !4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %135, !prof !5

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp slt i32 %130, 0
  br i1 %131, label %135, label %132, !prof !2

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %2, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.CFF::cff2_priv_dict_interp_env_t", %"struct.CFF::cff2_priv_dict_interp_env_t"* %1, i64 0, i32 0, i32 0
  call void @_ZN3CFF15parsed_values_tINS_10dict_val_tEE6add_opEjRKNS_14byte_str_ref_tERKS1_(%"struct.CFF::parsed_values_t.87"* %133, i32 %0, %"struct.CFF::byte_str_ref_t"* dereferenceable(24) %134, %"struct.CFF::dict_val_t"* nonnull dereferenceable(32) %4)
  br label %135

135:                                              ; preds = %124, %116, %120, %128, %111, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::CBDT_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18CBDT_accelerator_tE21hb_face_lazy_loader_tIS1_Lj34EE9hb_face_tLj34ES1_E10get_storedEv(%struct.hb_lazy_loader_t.176*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = getelementptr inbounds %struct.hb_lazy_loader_t.176, %struct.hb_lazy_loader_t.176* %0, i64 -34
  %5 = bitcast %struct.hb_lazy_loader_t.176* %4 to %struct.hb_face_t**
  %6 = bitcast %struct.hb_lazy_loader_t.176* %0 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"struct.OT::CBDT_accelerator_t"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %70, !prof !2

10:                                               ; preds = %1
  %11 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %16 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %17 = bitcast i8** %13 to i8*
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  %19 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %22 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %25 = bitcast i8** %21 to i8*
  %26 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  br label %27

27:                                               ; preds = %10, %65
  %28 = load %struct.hb_face_t*, %struct.hb_face_t** %5, align 8
  %29 = icmp eq %struct.hb_face_t* %28, null
  br i1 %29, label %70, label %30, !prof !2

30:                                               ; preds = %27
  %31 = call noalias i8* @calloc(i64 1, i64 24) #10
  %32 = bitcast i8* %31 to %"struct.OT::CBDT_accelerator_t"*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #10
  store i32 0, i32* %12, align 8
  store i32 0, i32* %14, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %15, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false) #10
  %35 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %28) #10
  store i32 %35, i32* %16, align 8
  store i8 1, i8* %18, align 4
  %36 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %28, i32 1128418371) #10
  %37 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBLCEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %36) #10
  %38 = bitcast i8* %31 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %37, %struct.hb_blob_t** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #10
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8
  store i32 0, i32* %22, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %23, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 25, i1 false) #10
  %39 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %28) #10
  store i32 %39, i32* %24, align 8
  store i8 1, i8* %26, align 4
  %40 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %28, i32 1128416340) #10
  %41 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBDTEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %40) #10
  %42 = getelementptr inbounds i8, i8* %31, i64 8
  %43 = bitcast i8* %42 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %41, %struct.hb_blob_t** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #10
  %44 = call i32 @hb_face_get_upem(%struct.hb_face_t* nonnull %28) #10
  %45 = getelementptr inbounds i8, i8* %31, i64 16
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 8
  br label %47

47:                                               ; preds = %30, %34
  %48 = select i1 %33, %"struct.OT::CBDT_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CBDT_accelerator_t"*), %"struct.OT::CBDT_accelerator_t"* %32, !prof !2
  %49 = ptrtoint %"struct.OT::CBDT_accelerator_t"* %48 to i64
  %50 = cmpxchg weak i64* %6, i64 0, i64 %49 acq_rel monotonic
  %51 = extractvalue { i64, i1 } %50, 1
  br i1 %51, label %70, label %52, !prof !3

52:                                               ; preds = %47
  %53 = icmp eq %"struct.OT::CBDT_accelerator_t"* %48, null
  %54 = or i1 %33, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.OT::CBDT_accelerator_t", %"struct.OT::CBDT_accelerator_t"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %struct.hb_blob_t*, %struct.hb_blob_t** %56, align 8
  %58 = icmp eq %struct.hb_blob_t* %57, null
  %59 = select i1 %58, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %57
  call void @hb_blob_destroy(%struct.hb_blob_t* %59) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %56, align 8
  %60 = getelementptr inbounds %"struct.OT::CBDT_accelerator_t", %"struct.OT::CBDT_accelerator_t"* %48, i64 0, i32 0, i32 1, i32 0, i32 0
  %61 = load %struct.hb_blob_t*, %struct.hb_blob_t** %60, align 8
  %62 = icmp eq %struct.hb_blob_t* %61, null
  %63 = select i1 %62, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %61
  call void @hb_blob_destroy(%struct.hb_blob_t* %63) #10
  %64 = bitcast %"struct.OT::CBDT_accelerator_t"* %48 to i8*
  call void @free(i8* %64) #10
  br label %65

65:                                               ; preds = %55, %52
  %66 = load atomic i64, i64* %6 acquire, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %27, label %68, !prof !2

68:                                               ; preds = %65
  %69 = inttoptr i64 %66 to %"struct.OT::CBDT_accelerator_t"*
  br label %70

70:                                               ; preds = %27, %47, %68, %1
  %71 = phi %"struct.OT::CBDT_accelerator_t"* [ %69, %68 ], [ %8, %1 ], [ %48, %47 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CBDT_accelerator_t"*), %27 ]
  ret %"struct.OT::CBDT_accelerator_t"* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBLCEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::CBLC"*, align 8
  %4 = alloca %"struct.OT::CBLC"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.OT::CBLC"** %4 to i8*
  %14 = bitcast %"struct.OT::CBLC"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %95, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %101, %95 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %95 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  br label %116

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 8
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  br label %110

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -8
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %42 = bitcast i8* %20 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = and i16 %43, -257
  %45 = icmp eq i16 %44, 512
  br i1 %45, label %46, label %110, !prof !142

46:                                               ; preds = %40
  %47 = getelementptr inbounds i8, i8* %20, i64 4
  %48 = bitcast i8* %47 to %"struct.OT::ArrayOf.363"*
  store i8* %20, i8** %14, align 8
  %49 = call zeroext i1 @_ZNK2OT7ArrayOfINS_15BitmapSizeTableENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4CBLCEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.363"* %48, %struct.hb_sanitize_context_t* %0, %"struct.OT::CBLC"** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %50 = load i32, i32* %11, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %49, label %52, label %91

52:                                               ; preds = %46
  %53 = bitcast i8* %20 to i16*
  %54 = bitcast i8* %47 to %"struct.OT::ArrayOf.363"*
  br i1 %51, label %55, label %102

55:                                               ; preds = %52
  store i32 0, i32* %11, align 4
  %56 = load i8*, i8** %8, align 8
  %57 = icmp ugt i8* %56, %20
  br i1 %57, label %67, label %58, !prof !2

58:                                               ; preds = %55
  %59 = load i8*, i8** %9, align 8
  %60 = icmp ult i8* %59, %20
  br i1 %60, label %67, label %61, !prof !2

61:                                               ; preds = %58
  %62 = ptrtoint i8* %59 to i64
  %63 = ptrtoint i8* %20 to i64
  %64 = sub i64 %62, %63
  %65 = trunc i64 %64 to i32
  %66 = icmp ult i32 %65, 8
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %61, %58, %55
  %68 = bitcast %"struct.OT::CBLC"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  br label %84

69:                                               ; preds = %61
  %70 = load i32, i32* %10, align 8
  %71 = add i32 %70, -8
  store i32 %71, i32* %10, align 8
  %72 = icmp sgt i32 %71, 0
  %73 = bitcast %"struct.OT::CBLC"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #10
  br i1 %72, label %74, label %84

74:                                               ; preds = %69
  %75 = load i16, i16* %53, align 1
  %76 = and i16 %75, -257
  %77 = icmp eq i16 %76, 512
  br i1 %77, label %78, label %84, !prof !142

78:                                               ; preds = %74
  %79 = bitcast %"struct.OT::CBLC"** %3 to i8**
  store i8* %20, i8** %79, align 8
  %80 = call zeroext i1 @_ZNK2OT7ArrayOfINS_15BitmapSizeTableENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4CBLCEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.363"* %54, %struct.hb_sanitize_context_t* %0, %"struct.OT::CBLC"** nonnull dereferenceable(8) %3) #10
  %81 = xor i1 %80, true
  %82 = load i32, i32* %11, align 4
  %83 = icmp ne i32 %82, 0
  br label %84

84:                                               ; preds = %67, %69, %74, %78
  %85 = phi i1 [ false, %69 ], [ %83, %78 ], [ false, %67 ], [ false, %74 ]
  %86 = phi i8* [ %73, %69 ], [ %73, %78 ], [ %68, %67 ], [ %73, %74 ]
  %87 = phi i1 [ true, %69 ], [ %81, %78 ], [ true, %67 ], [ true, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #10
  %88 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %88) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %89 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #10
  %90 = or i1 %87, %85
  br i1 %90, label %114, label %105

91:                                               ; preds = %46
  br i1 %51, label %92, label %108

92:                                               ; preds = %91
  %93 = load i8, i8* %7, align 8, !range !4
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %106

95:                                               ; preds = %92
  %96 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %96, i8** %8, align 8
  %97 = load i32, i32* %15, align 8
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  store i8* %99, i8** %9, align 8
  %100 = icmp eq i8* %96, null
  %101 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %100, label %111, label %16

102:                                              ; preds = %52
  %103 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %103) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %104 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #10
  br label %105

105:                                              ; preds = %84, %102
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %116

106:                                              ; preds = %92
  %107 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %111

108:                                              ; preds = %91
  %109 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %111

110:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %111

111:                                              ; preds = %95, %106, %108, %110
  %112 = phi %struct.hb_blob_t* [ %17, %110 ], [ %109, %108 ], [ %107, %106 ], [ %101, %95 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %112) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %113 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #10
  br label %114

114:                                              ; preds = %111, %84
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %115 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %116

116:                                              ; preds = %114, %105, %35
  %117 = phi %struct.hb_blob_t* [ %1, %35 ], [ %115, %114 ], [ %1, %105 ]
  ret %struct.hb_blob_t* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_15BitmapSizeTableENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4CBLCEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.363"*, %struct.hb_sanitize_context_t*, %"struct.OT::CBLC"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %140, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %140, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.363"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %140, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %140, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 89478485
  br i1 %42, label %43, label %140, !prof !5

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = mul i32 %41, 48
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %140, label %51, !prof !6

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::BitmapSizeTable"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %140, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %140, !prof !3

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = phi i32 [ %57, %59 ], [ %21, %43 ]
  %77 = icmp eq i32 %75, 0
  br i1 %77, label %140, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.OT::CBLC"** %2 to i8**
  %80 = zext i32 %75 to i64
  br label %83

81:                                               ; preds = %136
  %82 = icmp eq i64 %139, %80
  br i1 %82, label %140, label %83

83:                                               ; preds = %81, %78
  %84 = phi i32 [ %76, %78 ], [ %137, %81 ]
  %85 = phi i8* [ %10, %78 ], [ %113, %81 ]
  %86 = phi i8* [ %6, %78 ], [ %110, %81 ]
  %87 = phi i64 [ 0, %78 ], [ %139, %81 ]
  %88 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 1, i64 %87
  %89 = load i8*, i8** %79, align 8
  %90 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %91 = icmp ugt i8* %86, %90
  %92 = icmp ult i8* %85, %90
  %93 = or i1 %91, %92
  br i1 %93, label %140, label %94, !prof !6

94:                                               ; preds = %83
  %95 = ptrtoint i8* %85 to i64
  %96 = ptrtoint %"struct.OT::BitmapSizeTable"* %88 to i64
  %97 = sub i64 %95, %96
  %98 = trunc i64 %97 to i32
  %99 = icmp ult i32 %98, 48
  br i1 %99, label %140, label %100, !prof !2

100:                                              ; preds = %94
  %101 = add nsw i32 %84, -48
  store i32 %101, i32* %19, align 8
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %140, !prof !5

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"struct.OT::BitmapSizeTable", %"struct.OT::BitmapSizeTable"* %88, i64 0, i32 0
  %105 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 1, i64 %87, i32 2
  %106 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_18IndexSubtableArrayENS_7IntTypeIjLj4EEELb0EE8sanitizeIJRKS3_EEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.364"* %104, %struct.hb_sanitize_context_t* %1, i8* %89, %"struct.OT::IntType.9"* dereferenceable(4) %105) #10
  br i1 %106, label %107, label %140, !prof !5

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 1, i64 %87, i32 4
  %109 = getelementptr inbounds %"struct.OT::SBitLineMetrics", %"struct.OT::SBitLineMetrics"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %5, align 8
  %111 = icmp ugt i8* %110, %109
  br i1 %111, label %140, label %112, !prof !2

112:                                              ; preds = %107
  %113 = load i8*, i8** %9, align 8
  %114 = icmp ult i8* %113, %109
  br i1 %114, label %140, label %115, !prof !2

115:                                              ; preds = %112
  %116 = ptrtoint i8* %113 to i64
  %117 = ptrtoint %"struct.OT::SBitLineMetrics"* %108 to i64
  %118 = sub i64 %116, %117
  %119 = trunc i64 %118 to i32
  %120 = icmp ult i32 %119, 12
  br i1 %120, label %140, label %121, !prof !2

121:                                              ; preds = %115
  %122 = load i32, i32* %19, align 8
  %123 = add i32 %122, -12
  store i32 %123, i32* %19, align 8
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %140, !prof !5

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"struct.OT::ArrayOf.363", %"struct.OT::ArrayOf.363"* %0, i64 0, i32 1, i64 %87, i32 5
  %127 = getelementptr inbounds %"struct.OT::SBitLineMetrics", %"struct.OT::SBitLineMetrics"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = icmp ugt i8* %110, %127
  %129 = icmp ult i8* %113, %127
  %130 = or i1 %128, %129
  br i1 %130, label %140, label %131, !prof !6

131:                                              ; preds = %125
  %132 = ptrtoint %"struct.OT::SBitLineMetrics"* %126 to i64
  %133 = sub i64 %116, %132
  %134 = trunc i64 %133 to i32
  %135 = icmp ult i32 %134, 12
  br i1 %135, label %140, label %136, !prof !2

136:                                              ; preds = %131
  %137 = add i32 %122, -24
  store i32 %137, i32* %19, align 8
  %138 = icmp sgt i32 %137, 0
  %139 = add nuw nsw i64 %87, 1
  br i1 %138, label %81, label %140, !prof !3

140:                                              ; preds = %136, %121, %103, %100, %94, %83, %115, %112, %107, %131, %125, %81, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %141 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ true, %81 ], [ false, %136 ], [ false, %121 ], [ false, %103 ], [ false, %100 ], [ false, %94 ], [ false, %83 ], [ false, %115 ], [ false, %112 ], [ false, %107 ], [ false, %131 ], [ false, %125 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_18IndexSubtableArrayENS_7IntTypeIjLj4EEELb0EE8sanitizeIJRKS3_EEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.364"*, %struct.hb_sanitize_context_t*, i8*, %"struct.OT::IntType.9"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::OffsetTo.364", %"struct.OT::OffsetTo.364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %5
  br i1 %8, label %89, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %11, %5
  br i1 %12, label %89, label %13, !prof !2

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint %"struct.OT::OffsetTo.364"* %0 to i64
  %16 = sub i64 %14, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 4
  br i1 %18, label %89, label %19, !prof !2

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -4
  store i32 %22, i32* %20, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %89

24:                                               ; preds = %19
  %25 = load i8, i8* %5, align 1
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 24
  %28 = getelementptr inbounds %"struct.OT::OffsetTo.364", %"struct.OT::OffsetTo.364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 16
  %32 = or i64 %31, %27
  %33 = getelementptr inbounds %"struct.OT::OffsetTo.364", %"struct.OT::OffsetTo.364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %32, %36
  %38 = getelementptr inbounds %"struct.OT::OffsetTo.364", %"struct.OT::OffsetTo.364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  %42 = getelementptr inbounds i8, i8* %2, i64 %41
  %43 = bitcast i8* %42 to %"struct.OT::IndexSubtableArray"*
  %44 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %3, i64 0, i32 0, i32 0, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw i32 %46, 24
  %48 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %3, i64 0, i32 0, i32 0, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 16
  %52 = or i32 %51, %47
  %53 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %3, i64 0, i32 0, i32 0, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 8
  %57 = or i32 %52, %56
  %58 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %3, i64 0, i32 0, i32 0, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = or i32 %57, %60
  %62 = icmp ult i32 %61, 536870911
  br i1 %62, label %63, label %89, !prof !5

63:                                               ; preds = %24
  %64 = shl i32 %61, 3
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %78, label %66

66:                                               ; preds = %63
  %67 = icmp ugt i8* %7, %42
  %68 = icmp ult i8* %11, %42
  %69 = or i1 %67, %68
  br i1 %69, label %89, label %70, !prof !6

70:                                               ; preds = %66
  %71 = ptrtoint i8* %42 to i64
  %72 = sub i64 %14, %71
  %73 = trunc i64 %72 to i32
  %74 = icmp ugt i32 %64, %73
  br i1 %74, label %89, label %75, !prof !2

75:                                               ; preds = %70
  %76 = sub i32 %22, %64
  store i32 %76, i32* %20, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %89, !prof !3

78:                                               ; preds = %75, %63
  %79 = icmp eq i32 %61, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %78
  %81 = zext i32 %61 to i64
  br label %84

82:                                               ; preds = %84
  %83 = icmp eq i64 %88, %81
  br i1 %83, label %89, label %84

84:                                               ; preds = %82, %80
  %85 = phi i64 [ 0, %80 ], [ %88, %82 ]
  %86 = getelementptr inbounds %"struct.OT::IndexSubtableArray", %"struct.OT::IndexSubtableArray"* %43, i64 0, i32 0, i32 0, i64 %85
  %87 = tail call zeroext i1 @_ZNK2OT19IndexSubtableRecord8sanitizeEP21hb_sanitize_context_tPKv(%"struct.OT::IndexSubtableRecord"* %86, %struct.hb_sanitize_context_t* %1, i8* %42) #10
  %88 = add nuw nsw i64 %85, 1
  br i1 %87, label %82, label %89, !prof !3

89:                                               ; preds = %84, %82, %4, %9, %13, %66, %70, %24, %75, %78, %19
  %90 = phi i1 [ false, %19 ], [ true, %78 ], [ false, %75 ], [ false, %24 ], [ false, %70 ], [ false, %66 ], [ false, %13 ], [ false, %9 ], [ false, %4 ], [ false, %84 ], [ true, %82 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT19IndexSubtableRecord8sanitizeEP21hb_sanitize_context_tPKv(%"struct.OT::IndexSubtableRecord"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %94, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %94, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::IndexSubtableRecord"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 8
  br i1 %17, label %94, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -8
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %94

23:                                               ; preds = %18
  %24 = bitcast %"struct.OT::IndexSubtableRecord"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #10
  %27 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 1, i32 0
  %28 = bitcast %"struct.OT::IntType"* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #10
  %31 = icmp ult i16 %30, %26
  br i1 %31, label %94, label %32

32:                                               ; preds = %23
  %33 = zext i16 %30 to i32
  %34 = zext i16 %26 to i32
  %35 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 2
  %36 = sub nsw i32 1, %34
  %37 = add nsw i32 %36, %33
  %38 = getelementptr inbounds %"struct.OT::OffsetTo.366", %"struct.OT::OffsetTo.366"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %39 = icmp ugt i8* %6, %38
  %40 = icmp ult i8* %10, %38
  %41 = or i1 %39, %40
  br i1 %41, label %94, label %42, !prof !6

42:                                               ; preds = %32
  %43 = ptrtoint %"struct.OT::OffsetTo.366"* %35 to i64
  %44 = sub i64 %13, %43
  %45 = trunc i64 %44 to i32
  %46 = icmp ult i32 %45, 4
  br i1 %46, label %94, label %47, !prof !2

47:                                               ; preds = %42
  %48 = add i32 %20, -12
  store i32 %48, i32* %19, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %94

50:                                               ; preds = %47
  %51 = load i8, i8* %38, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::IndexSubtableRecord", %"struct.OT::IndexSubtableRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %94, label %69

69:                                               ; preds = %50
  %70 = zext i8 %51 to i64
  %71 = shl nuw nsw i64 %70, 24
  %72 = zext i8 %55 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %71
  %75 = zext i8 %60 to i64
  %76 = shl nuw nsw i64 %75, 8
  %77 = or i64 %74, %76
  %78 = zext i8 %65 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds i8, i8* %2, i64 %79
  %81 = bitcast i8* %80 to %"struct.OT::IndexSubtable"*
  %82 = tail call zeroext i1 @_ZNK2OT13IndexSubtable8sanitizeEP21hb_sanitize_context_tj(%"struct.OT::IndexSubtable"* %81, %struct.hb_sanitize_context_t* %1, i32 %37) #10
  br i1 %82, label %94, label %83

83:                                               ; preds = %69
  %84 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %85 = load i32, i32* %84, align 4
  %86 = icmp ugt i32 %85, 31
  br i1 %86, label %94, label %87

87:                                               ; preds = %83
  %88 = add nuw nsw i32 %85, 1
  store i32 %88, i32* %84, align 4
  %89 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %90 = load i8, i8* %89, align 8, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.OT::OffsetTo.366"* %35 to i32*
  store i32 0, i32* %93, align 1
  br label %94

94:                                               ; preds = %92, %87, %83, %69, %50, %47, %42, %32, %3, %8, %12, %23, %18
  %95 = phi i1 [ false, %23 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %47 ], [ true, %69 ], [ true, %50 ], [ false, %42 ], [ false, %32 ], [ true, %92 ], [ false, %87 ], [ false, %83 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT13IndexSubtable8sanitizeEP21hb_sanitize_context_tj(%"struct.OT::IndexSubtable"*, %struct.hb_sanitize_context_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %75, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %75, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::IndexSubtable"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 8
  br i1 %17, label %75, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -8
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %75

23:                                               ; preds = %18
  %24 = bitcast %"struct.OT::IndexSubtable"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #10
  switch i16 %26, label %75 [
    i16 1, label %27
    i16 3, label %51
  ]

27:                                               ; preds = %23
  %28 = add i32 %20, -16
  store i32 %28, i32* %19, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %75

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = add i32 %2, 1
  %33 = icmp ult i32 %32, 1073741823
  br i1 %33, label %34, label %75, !prof !5

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.368", %"struct.OT::UnsizedArrayOf.368"* %31, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i64 0
  %36 = shl i32 %32, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = icmp ugt i8* %6, %35
  %40 = icmp ult i8* %10, %35
  %41 = or i1 %39, %40
  br i1 %41, label %75, label %42, !prof !6

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.OT::UnsizedArrayOf.368"* %31 to i64
  %44 = sub i64 %13, %43
  %45 = trunc i64 %44 to i32
  %46 = icmp ugt i32 %36, %45
  br i1 %46, label %75, label %47, !prof !2

47:                                               ; preds = %42
  %48 = sub i32 %28, %36
  store i32 %48, i32* %19, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %75, !prof !3

50:                                               ; preds = %47, %34
  br label %75

51:                                               ; preds = %23
  %52 = add i32 %20, -16
  store i32 %52, i32* %19, align 8
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %75

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.OT::IndexSubtable", %"struct.OT::IndexSubtable"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = add i32 %2, 1
  %57 = icmp ult i32 %56, 2147483647
  br i1 %57, label %58, label %75, !prof !5

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.368", %"struct.OT::UnsizedArrayOf.368"* %55, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i64 0
  %60 = shl i32 %56, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = icmp ugt i8* %6, %59
  %64 = icmp ult i8* %10, %59
  %65 = or i1 %63, %64
  br i1 %65, label %75, label %66, !prof !6

66:                                               ; preds = %62
  %67 = ptrtoint %"struct.OT::UnsizedArrayOf.368"* %55 to i64
  %68 = sub i64 %13, %67
  %69 = trunc i64 %68 to i32
  %70 = icmp ugt i32 %60, %69
  br i1 %70, label %75, label %71, !prof !2

71:                                               ; preds = %66
  %72 = sub i32 %52, %60
  store i32 %72, i32* %19, align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %71, %58
  br label %75

75:                                               ; preds = %74, %71, %66, %62, %54, %51, %50, %47, %42, %38, %30, %27, %3, %8, %12, %23, %18
  %76 = phi i1 [ false, %18 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %27 ], [ true, %50 ], [ false, %47 ], [ false, %30 ], [ false, %42 ], [ false, %38 ], [ false, %51 ], [ true, %74 ], [ false, %71 ], [ false, %54 ], [ false, %66 ], [ false, %62 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4CBDTEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %43

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 4
  br i1 %30, label %39, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -4
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = or i16 %34, 256
  %36 = icmp eq i16 %35, 768
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %37 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #10
  br i1 %36, label %38, label %41

38:                                               ; preds = %31
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %43

39:                                               ; preds = %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %40 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  br label %41

41:                                               ; preds = %39, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %42 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %43

43:                                               ; preds = %38, %41, %27
  %44 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %38 ], [ %42, %41 ]
  ret %struct.hb_blob_t* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::post_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18post_accelerator_tE21hb_face_lazy_loader_tIS1_Lj6EE9hb_face_tLj6ES1_E10get_storedEv(%struct.hb_lazy_loader_t.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.34, %struct.hb_lazy_loader_t.34* %0, i64 -6
  %3 = bitcast %struct.hb_lazy_loader_t.34* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.34* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::post_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %45, !prof !2

8:                                                ; preds = %1, %40
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %45, label %11, !prof !2

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 56) #10
  %13 = bitcast i8* %12 to %"struct.OT::post_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::post::accelerator_t"*
  tail call void @_ZN2OT4post13accelerator_t4initEP9hb_face_t(%"struct.OT::post::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::post_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::post_accelerator_t"*), %"struct.OT::post_accelerator_t"* %13, !prof !2
  %19 = ptrtoint %"struct.OT::post_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %45, label %22, !prof !3

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::post_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %40, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %18, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %18, i64 0, i32 0, i32 3, i32 2
  %28 = bitcast i32** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #10
  %30 = bitcast %struct.hb_vector_t.39* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  %31 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %18, i64 0, i32 0, i32 5
  %32 = bitcast %struct.hb_atomic_ptr_t.40* %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  %34 = inttoptr i64 %33 to i8*
  tail call void @free(i8* %34) #10
  %35 = getelementptr inbounds %"struct.OT::post_accelerator_t", %"struct.OT::post_accelerator_t"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %struct.hb_blob_t*, %struct.hb_blob_t** %35, align 8
  %37 = icmp eq %struct.hb_blob_t* %36, null
  %38 = select i1 %37, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %36
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %38) #10
  %39 = bitcast %"struct.OT::post_accelerator_t"* %18 to i8*
  tail call void @free(i8* %39) #10
  br label %40

40:                                               ; preds = %25, %22
  %41 = load atomic i64, i64* %4 acquire, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %8, label %43, !prof !2

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to %"struct.OT::post_accelerator_t"*
  br label %45

45:                                               ; preds = %8, %17, %43, %1
  %46 = phi %"struct.OT::post_accelerator_t"* [ %44, %43 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::post_accelerator_t"*), %8 ]
  ret %"struct.OT::post_accelerator_t"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4post13accelerator_t4initEP9hb_face_t(%"struct.OT::post::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 3
  %5 = bitcast %struct.hb_vector_t.39* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  %6 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %10, align 8
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %12 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false) #10
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  %14 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #10
  store i32 %14, i32* %11, align 8
  store i8 1, i8* %13, align 4
  %15 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1886352244) #10
  %16 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4postEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %15) #10
  %17 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.hb_blob_t* %16, %struct.hb_blob_t** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #10
  %18 = icmp eq %struct.hb_blob_t* %16, null
  %19 = select i1 %18, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %16
  %20 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 1
  %23 = bitcast i8** %22 to %"struct.OT::post"**
  %24 = load %"struct.OT::post"*, %"struct.OT::post"** %23, align 8
  %25 = icmp ult i32 %21, 32
  %26 = select i1 %25, %"struct.OT::post"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::post"*), %"struct.OT::post"* %24
  %27 = bitcast %"struct.OT::post"* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = call i16 @llvm.bswap.i16(i16 %28) #10
  %30 = zext i16 %29 to i32
  %31 = shl nuw i32 %30, 16
  %32 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %26, i64 0, i32 0, i32 1
  %33 = bitcast %"struct.OT::IntType"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = call i16 @llvm.bswap.i16(i16 %34) #10
  %36 = zext i16 %35 to i32
  %37 = or i32 %31, %36
  %38 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 1
  store i32 %37, i32* %38, align 8
  %39 = icmp eq i32 %37, 131072
  br i1 %39, label %40, label %137

40:                                               ; preds = %2
  %41 = load %"struct.OT::post"*, %"struct.OT::post"** %23, align 8
  %42 = load i32, i32* %20, align 8
  %43 = icmp ult i32 %42, 32
  %44 = select i1 %43, %"struct.OT::post"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::post"*), %"struct.OT::post"* %41
  %45 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %44, i64 0, i32 9, i32 0
  %46 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 2
  store %"struct.OT::ArrayOf.38"* %45, %"struct.OT::ArrayOf.38"** %46, align 8
  %47 = bitcast %"struct.OT::ArrayOf.38"* %45 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = call i16 @llvm.bswap.i16(i16 %48) #10
  %50 = zext i16 %49 to i64
  %51 = shl nuw nsw i64 %50, 1
  %52 = add nuw nsw i64 %51, 2
  %53 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %44, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i64 %52
  %54 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 4
  store i8* %53, i8** %54, align 8
  %55 = load %"struct.OT::post"*, %"struct.OT::post"** %23, align 8
  %56 = load i32, i32* %20, align 8
  %57 = icmp ult i32 %56, 32
  %58 = select i1 %57, %"struct.OT::post"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::post"*), %"struct.OT::post"* %55
  %59 = zext i32 %21 to i64
  %60 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %59
  %61 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %62, 65535
  %64 = icmp ult i8* %53, %60
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %137

66:                                               ; preds = %40
  %67 = bitcast i8** %54 to i64*
  %68 = getelementptr inbounds %struct.hb_vector_t.39, %struct.hb_vector_t.39* %4, i64 0, i32 0
  %69 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 3, i32 2
  %70 = bitcast i32** %69 to i8**
  %71 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  br label %72

72:                                               ; preds = %66, %128
  %73 = phi i32 [ %62, %66 ], [ %133, %128 ]
  %74 = phi i8* [ %53, %66 ], [ %132, %128 ]
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = icmp ult i8* %77, %60
  br i1 %78, label %79, label %137

79:                                               ; preds = %72
  %80 = load i64, i64* %67, align 8
  %81 = ptrtoint i8* %74 to i64
  %82 = sub i64 %81, %80
  %83 = icmp sgt i32 %73, -1
  %84 = select i1 %83, i32 %73, i32 -1
  %85 = add nsw i32 %84, 1
  %86 = load i32, i32* %68, align 8
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %120, label %88, !prof !2

88:                                               ; preds = %79
  %89 = icmp ult i32 %86, %85
  br i1 %89, label %90, label %109, !prof !2

90:                                               ; preds = %88, %90
  %91 = phi i32 [ %94, %90 ], [ %86, %88 ]
  %92 = lshr i32 %91, 1
  %93 = add i32 %91, 8
  %94 = add i32 %93, %92
  %95 = icmp ugt i32 %94, %85
  br i1 %95, label %96, label %90

96:                                               ; preds = %90
  %97 = icmp uge i32 %94, %86
  %98 = icmp ult i32 %94, 1073741823
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %106, !prof !21

100:                                              ; preds = %96
  %101 = load i8*, i8** %70, align 8
  %102 = zext i32 %94 to i64
  %103 = shl nuw nsw i64 %102, 2
  %104 = call i8* @realloc(i8* %101, i64 %103) #10
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %100, %96
  store i32 -1, i32* %68, align 8
  br label %120

107:                                              ; preds = %100
  store i8* %104, i8** %70, align 8
  store i32 %94, i32* %68, align 8
  %108 = load i32, i32* %61, align 4
  br label %109

109:                                              ; preds = %107, %88
  %110 = phi i32 [ %108, %107 ], [ %73, %88 ]
  %111 = icmp ugt i32 %85, %110
  br i1 %111, label %112, label %121

112:                                              ; preds = %109
  %113 = load i32*, i32** %69, align 8
  %114 = zext i32 %110 to i64
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  %116 = bitcast i32* %115 to i8*
  %117 = sub i32 %85, %110
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 %119, i1 false) #10
  br label %121

120:                                              ; preds = %106, %79
  store i32 %71, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %128

121:                                              ; preds = %112, %109
  store i32 %85, i32* %61, align 4
  %122 = load i32*, i32** %69, align 8
  %123 = zext i32 %84 to i64
  %124 = getelementptr inbounds i32, i32* %122, i64 %123
  store i32 %71, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  %125 = icmp eq i32* %124, bitcast ([48 x i64]* @_hb_CrapPool to i32*)
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  %127 = trunc i64 %82 to i32
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %120, %121, %126
  %129 = load i8, i8* %74, align 1
  %130 = zext i8 %129 to i64
  %131 = add nuw nsw i64 %130, 1
  %132 = getelementptr inbounds i8, i8* %74, i64 %131
  %133 = load i32, i32* %61, align 4
  %134 = icmp ult i32 %133, 65535
  %135 = icmp ult i8* %132, %60
  %136 = and i1 %135, %134
  br i1 %136, label %72, label %137

137:                                              ; preds = %128, %72, %40, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4postEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::post"*
  %35 = tail call zeroext i1 @_ZNK2OT4post8sanitizeEP21hb_sanitize_context_t(%"struct.OT::post"* nonnull %34, %struct.hb_sanitize_context_t* %0)
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::post"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT4post8sanitizeEP21hb_sanitize_context_t(%"struct.OT::post"* nonnull %40, %struct.hb_sanitize_context_t* %0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #10
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #10
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4post8sanitizeEP21hb_sanitize_context_t(%"struct.OT::post"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %79, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %79, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.OT::post"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 32
  br i1 %16, label %79, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -32
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %79, !prof !3

22:                                               ; preds = %17
  %23 = bitcast %"struct.OT::post"* %0 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #10
  %26 = zext i16 %25 to i32
  %27 = shl nuw i32 %26, 16
  %28 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %0, i64 0, i32 0, i32 1
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = zext i16 %31 to i32
  %33 = or i32 %27, %32
  switch i32 %33, label %69 [
    i32 65536, label %79
    i32 131072, label %34
  ]

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"struct.OT::postV2Tail", %"struct.OT::postV2Tail"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %37 = icmp ugt i8* %5, %36
  %38 = icmp ult i8* %9, %36
  %39 = or i1 %37, %38
  br i1 %39, label %69, label %40, !prof !6

40:                                               ; preds = %34
  %41 = ptrtoint %"struct.OT::postV2Tail"* %35 to i64
  %42 = sub i64 %12, %41
  %43 = trunc i64 %42 to i32
  %44 = icmp ult i32 %43, 2
  br i1 %44, label %69, label %45, !prof !2

45:                                               ; preds = %40
  %46 = add i32 %19, -34
  store i32 %46, i32* %18, align 8
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %69, !prof !5

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"struct.OT::post", %"struct.OT::post"* %0, i64 0, i32 9, i32 0, i32 1, i64 0
  %50 = bitcast %"struct.OT::postV2Tail"* %35 to i16*
  %51 = load i16, i16* %50, align 1
  %52 = tail call i16 @llvm.bswap.i16(i16 %51) #10
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %49, i64 0, i32 0, i32 0, i64 0
  %55 = shl nuw nsw i32 %53, 1
  %56 = icmp eq i16 %51, 0
  br i1 %56, label %79, label %57

57:                                               ; preds = %48
  %58 = icmp ugt i8* %5, %54
  %59 = icmp ult i8* %9, %54
  %60 = or i1 %58, %59
  br i1 %60, label %69, label %61, !prof !6

61:                                               ; preds = %57
  %62 = ptrtoint %"struct.OT::IntType"* %49 to i64
  %63 = sub i64 %12, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp ugt i32 %55, %64
  br i1 %65, label %69, label %66, !prof !2

66:                                               ; preds = %61
  %67 = sub nsw i32 %46, %55
  store i32 %67, i32* %18, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %79, label %69, !prof !3

69:                                               ; preds = %22, %57, %61, %34, %40, %45, %66
  %70 = load i16, i16* %23, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #10
  %72 = zext i16 %71 to i32
  %73 = shl nuw i32 %72, 16
  %74 = load i16, i16* %29, align 1
  %75 = tail call i16 @llvm.bswap.i16(i16 %74) #10
  %76 = zext i16 %75 to i32
  %77 = or i32 %73, %76
  %78 = icmp eq i32 %77, 196608
  br label %79

79:                                               ; preds = %22, %2, %7, %11, %66, %48, %69, %17
  %80 = phi i1 [ false, %17 ], [ true, %22 ], [ %78, %69 ], [ true, %48 ], [ true, %66 ], [ false, %11 ], [ false, %7 ], [ false, %2 ]
  ret i1 %80
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4post13accelerator_t19get_glyph_from_nameEPKciPj(%"struct.OT::post::accelerator_t"*, i8*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %294 [
    i32 65536, label %15
    i32 131072, label %7
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 2
  %9 = bitcast %"struct.OT::ArrayOf.38"** %8 to i16**
  %10 = load i16*, i16** %9, align 8
  %11 = load i16, i16* %10, align 1
  %12 = tail call i16 @llvm.bswap.i16(i16 %11) #10
  %13 = zext i16 %12 to i32
  %14 = icmp eq i16 %11, 0
  br i1 %14, label %294, label %15, !prof !2

15:                                               ; preds = %4, %7
  %16 = phi i32 [ %13, %7 ], [ 258, %4 ]
  %17 = icmp slt i32 %2, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = tail call i64 @strlen(i8* %1) #11
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i32 [ %20, %18 ], [ %2, %15 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %294, label %24, !prof !2

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 5
  %26 = bitcast %struct.hb_atomic_ptr_t.40* %25 to i64*
  %27 = load atomic i64, i64* %26 acquire, align 8
  %28 = inttoptr i64 %27 to i16*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %138, !prof !2

30:                                               ; preds = %24
  %31 = zext i32 %16 to i64
  %32 = shl nuw nsw i32 %16, 1
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %16, 0
  %35 = bitcast %"struct.OT::post::accelerator_t"* %0 to i8*
  br i1 %34, label %124, label %36

36:                                               ; preds = %30
  %37 = and i64 %31, 65520
  %38 = add nsw i64 %37, -16
  %39 = lshr exact i64 %38, 4
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i32 %16, 16
  %42 = and i64 %31, 65520
  %43 = trunc i64 %42 to i32
  %44 = and i64 %40, 3
  %45 = icmp ult i64 %38, 48
  %46 = sub nsw i64 %40, %44
  %47 = icmp eq i64 %44, 0
  %48 = icmp eq i64 %42, %31
  br label %49

49:                                               ; preds = %36, %109
  %50 = tail call noalias i8* @malloc(i64 %33) #10
  %51 = bitcast i8* %50 to i16*
  %52 = icmp eq i8* %50, null
  br i1 %52, label %294, label %53, !prof !2

53:                                               ; preds = %49
  br i1 %41, label %54, label %57

54:                                               ; preds = %108, %53
  %55 = phi i64 [ 0, %53 ], [ %42, %108 ]
  %56 = phi i32 [ 0, %53 ], [ %43, %108 ]
  br label %112

57:                                               ; preds = %53
  br i1 %45, label %92, label %58

58:                                               ; preds = %57, %58
  %59 = phi i64 [ %88, %58 ], [ 0, %57 ]
  %60 = phi <8 x i16> [ %89, %58 ], [ <i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7>, %57 ]
  %61 = phi i64 [ %90, %58 ], [ %46, %57 ]
  %62 = add <8 x i16> %60, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %63 = getelementptr inbounds i16, i16* %51, i64 %59
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %60, <8 x i16>* %64, align 2
  %65 = getelementptr inbounds i16, i16* %63, i64 8
  %66 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %62, <8 x i16>* %66, align 2
  %67 = or i64 %59, 16
  %68 = add <8 x i16> %60, <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>
  %69 = add <8 x i16> %60, <i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24>
  %70 = getelementptr inbounds i16, i16* %51, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %71, align 2
  %72 = getelementptr inbounds i16, i16* %70, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2
  %74 = or i64 %59, 32
  %75 = add <8 x i16> %60, <i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32>
  %76 = add <8 x i16> %60, <i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40>
  %77 = getelementptr inbounds i16, i16* %51, i64 %74
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2
  %79 = getelementptr inbounds i16, i16* %77, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2
  %81 = or i64 %59, 48
  %82 = add <8 x i16> %60, <i16 48, i16 48, i16 48, i16 48, i16 48, i16 48, i16 48, i16 48>
  %83 = add <8 x i16> %60, <i16 56, i16 56, i16 56, i16 56, i16 56, i16 56, i16 56, i16 56>
  %84 = getelementptr inbounds i16, i16* %51, i64 %81
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2
  %86 = getelementptr inbounds i16, i16* %84, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2
  %88 = add i64 %59, 64
  %89 = add <8 x i16> %60, <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>
  %90 = add i64 %61, -4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %58, !llvm.loop !143

92:                                               ; preds = %58, %57
  %93 = phi i64 [ 0, %57 ], [ %88, %58 ]
  %94 = phi <8 x i16> [ <i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7>, %57 ], [ %89, %58 ]
  br i1 %47, label %108, label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %104, %95 ], [ %93, %92 ]
  %97 = phi <8 x i16> [ %105, %95 ], [ %94, %92 ]
  %98 = phi i64 [ %106, %95 ], [ %44, %92 ]
  %99 = add <8 x i16> %97, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %100 = getelementptr inbounds i16, i16* %51, i64 %96
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2
  %102 = getelementptr inbounds i16, i16* %100, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2
  %104 = add i64 %96, 16
  %105 = add <8 x i16> %97, <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !144

108:                                              ; preds = %95, %92
  br i1 %48, label %120, label %54

109:                                              ; preds = %120
  tail call void @free(i8* %50) #10
  %110 = load atomic i64, i64* %26 acquire, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %49, label %133, !prof !2

112:                                              ; preds = %54, %112
  %113 = phi i64 [ %117, %112 ], [ %55, %54 ]
  %114 = phi i32 [ %118, %112 ], [ %56, %54 ]
  %115 = trunc i32 %114 to i16
  %116 = getelementptr inbounds i16, i16* %51, i64 %113
  store i16 %115, i16* %116, align 2
  %117 = add nuw nsw i64 %113, 1
  %118 = add nuw nsw i32 %114, 1
  %119 = icmp eq i64 %117, %31
  br i1 %119, label %120, label %112, !llvm.loop !145

120:                                              ; preds = %112, %108
  tail call fastcc void @_ZL13sort_r_simpleIJPvEEvS0_mmPFiPKvS2_DpT_ES4_(i8* nonnull %50, i64 %31, i8* %35) #10
  %121 = ptrtoint i8* %50 to i64
  %122 = cmpxchg weak i64* %26, i64 0, i64 %121 acq_rel monotonic
  %123 = extractvalue { i64, i1 } %122, 1
  br i1 %123, label %136, label %109, !prof !3

124:                                              ; preds = %30, %291
  %125 = tail call noalias i8* @malloc(i64 %33) #10
  %126 = icmp eq i8* %125, null
  br i1 %126, label %294, label %127, !prof !2

127:                                              ; preds = %124
  tail call fastcc void @_ZL13sort_r_simpleIJPvEEvS0_mmPFiPKvS2_DpT_ES4_(i8* nonnull %125, i64 %31, i8* %35) #10
  %128 = ptrtoint i8* %125 to i64
  %129 = cmpxchg weak i64* %26, i64 0, i64 %128 acq_rel monotonic
  %130 = extractvalue { i64, i1 } %129, 1
  br i1 %130, label %131, label %291, !prof !3

131:                                              ; preds = %127
  %132 = bitcast i8* %125 to i16*
  br label %138

133:                                              ; preds = %109, %291
  %134 = phi i64 [ %292, %291 ], [ %110, %109 ]
  %135 = inttoptr i64 %134 to i16*
  br label %138

136:                                              ; preds = %120
  %137 = bitcast i8* %50 to i16*
  br label %138

138:                                              ; preds = %136, %131, %133, %24
  %139 = phi i16* [ %135, %133 ], [ %28, %24 ], [ %132, %131 ], [ %137, %136 ]
  %140 = add nsw i32 %16, -1
  %141 = icmp eq i32 %16, 0
  br i1 %141, label %294, label %142

142:                                              ; preds = %138
  %143 = bitcast i16* %139 to i8*
  %144 = load i32, i32* %5, align 8
  %145 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 2
  %146 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 3, i32 1
  %147 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 3, i32 2
  %148 = getelementptr inbounds %"struct.OT::post::accelerator_t", %"struct.OT::post::accelerator_t"* %0, i64 0, i32 4
  %149 = icmp eq i32 %144, 65536
  br i1 %149, label %232, label %150

150:                                              ; preds = %142
  %151 = icmp eq i32 %144, 131072
  %152 = zext i32 %22 to i64
  br i1 %151, label %160, label %153

153:                                              ; preds = %150
  %154 = icmp slt i32 %22, 0
  br i1 %154, label %155, label %277

155:                                              ; preds = %153, %155
  %156 = phi i32 [ %158, %155 ], [ %140, %153 ]
  %157 = lshr i32 %156, 1
  %158 = add nsw i32 %157, -1
  %159 = icmp eq i32 %157, 0
  br i1 %159, label %294, label %155

160:                                              ; preds = %150
  %161 = load %"struct.OT::ArrayOf.38"*, %"struct.OT::ArrayOf.38"** %145, align 8
  %162 = bitcast %"struct.OT::ArrayOf.38"* %161 to i16*
  %163 = load i16, i16* %162, align 1
  %164 = tail call i16 @llvm.bswap.i16(i16 %163) #10
  br label %165

165:                                              ; preds = %160, %228
  %166 = phi i32 [ %230, %228 ], [ %140, %160 ]
  %167 = phi i32 [ %229, %228 ], [ 0, %160 ]
  %168 = add i32 %167, %166
  %169 = lshr i32 %168, 1
  %170 = and i32 %168, -2
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %143, i64 %171
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 2
  %175 = icmp ugt i16 %164, %174
  br i1 %175, label %176, label %211

176:                                              ; preds = %165
  %177 = zext i16 %174 to i64
  %178 = getelementptr inbounds %"struct.OT::ArrayOf.38", %"struct.OT::ArrayOf.38"* %161, i64 0, i32 1, i64 %177
  %179 = bitcast %"struct.OT::IntType"* %178 to i16*
  %180 = load i16, i16* %179, align 1
  %181 = tail call i16 @llvm.bswap.i16(i16 %180) #10
  %182 = zext i16 %181 to i32
  %183 = icmp ult i16 %181, 258
  br i1 %183, label %199, label %184

184:                                              ; preds = %176
  %185 = add nsw i32 %182, -258
  %186 = load i32, i32* %146, align 4
  %187 = icmp ult i32 %185, %186
  br i1 %187, label %188, label %211

188:                                              ; preds = %184
  %189 = load i32*, i32** %147, align 8
  %190 = zext i32 %185 to i64
  %191 = getelementptr inbounds i32, i32* %189, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = load i8*, i8** %148, align 8
  %194 = zext i32 %192 to i64
  %195 = getelementptr inbounds i8, i8* %193, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds i8, i8* %195, i64 1
  %198 = zext i8 %196 to i32
  br label %211

199:                                              ; preds = %176
  %200 = zext i16 %181 to i64
  %201 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %203
  %205 = add nuw nsw i32 %182, 1
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = xor i32 %202, -1
  %210 = add i32 %208, %209
  br label %211

211:                                              ; preds = %199, %188, %184, %165
  %212 = phi i8* [ %204, %199 ], [ %197, %188 ], [ null, %165 ], [ null, %184 ]
  %213 = phi i32 [ %210, %199 ], [ %198, %188 ], [ 0, %165 ], [ 0, %184 ]
  %214 = icmp eq i32 %22, %213
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = sub nsw i32 %22, %213
  br label %219

217:                                              ; preds = %211
  %218 = tail call i32 @memcmp(i8* %1, i8* %212, i64 %152) #11
  br label %219

219:                                              ; preds = %217, %215
  %220 = phi i32 [ %216, %215 ], [ %218, %217 ]
  %221 = icmp slt i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %219
  %223 = icmp eq i32 %220, 0
  br i1 %223, label %283, label %224

224:                                              ; preds = %222
  %225 = add nuw nsw i32 %169, 1
  br label %228

226:                                              ; preds = %219
  %227 = add nsw i32 %169, -1
  br label %228

228:                                              ; preds = %226, %224
  %229 = phi i32 [ %167, %226 ], [ %225, %224 ]
  %230 = phi i32 [ %227, %226 ], [ %166, %224 ]
  %231 = icmp sgt i32 %229, %230
  br i1 %231, label %294, label %165

232:                                              ; preds = %142
  %233 = zext i32 %22 to i64
  br label %234

234:                                              ; preds = %232, %273
  %235 = phi i32 [ %275, %273 ], [ %140, %232 ]
  %236 = phi i32 [ %274, %273 ], [ 0, %232 ]
  %237 = add i32 %236, %235
  %238 = lshr i32 %237, 1
  %239 = and i32 %237, -2
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %143, i64 %240
  %242 = bitcast i8* %241 to i16*
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i64
  %245 = icmp ugt i16 %243, 257
  br i1 %245, label %256, label %246

246:                                              ; preds = %234
  %247 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %244
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %249
  %251 = add nuw nsw i64 %244, 1
  %252 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %248, -1
  %255 = add i32 %253, %254
  br label %256

256:                                              ; preds = %246, %234
  %257 = phi i8* [ %250, %246 ], [ null, %234 ]
  %258 = phi i32 [ %255, %246 ], [ 0, %234 ]
  %259 = icmp eq i32 %22, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = sub nsw i32 %22, %258
  br label %264

262:                                              ; preds = %256
  %263 = tail call i32 @memcmp(i8* %1, i8* %257, i64 %233) #11
  br label %264

264:                                              ; preds = %262, %260
  %265 = phi i32 [ %261, %260 ], [ %263, %262 ]
  %266 = icmp slt i32 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %264
  %268 = icmp eq i32 %265, 0
  br i1 %268, label %283, label %269

269:                                              ; preds = %267
  %270 = add nuw nsw i32 %238, 1
  br label %273

271:                                              ; preds = %264
  %272 = add nsw i32 %238, -1
  br label %273

273:                                              ; preds = %271, %269
  %274 = phi i32 [ %236, %271 ], [ %270, %269 ]
  %275 = phi i32 [ %272, %271 ], [ %235, %269 ]
  %276 = icmp sgt i32 %274, %275
  br i1 %276, label %294, label %234

277:                                              ; preds = %153, %277
  %278 = phi i32 [ %281, %277 ], [ 0, %153 ]
  %279 = add i32 %278, %140
  %280 = lshr i32 %279, 1
  %281 = add nuw nsw i32 %280, 1
  %282 = icmp slt i32 %280, %140
  br i1 %282, label %277, label %294

283:                                              ; preds = %222, %267
  %284 = phi i32 [ %238, %267 ], [ %169, %222 ]
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds i16, i16* %139, i64 %285
  %287 = icmp eq i16* %286, null
  br i1 %287, label %294, label %288

288:                                              ; preds = %283
  %289 = load i16, i16* %286, align 2
  %290 = zext i16 %289 to i32
  store i32 %290, i32* %3, align 4
  br label %294

291:                                              ; preds = %127
  tail call void @free(i8* nonnull %125) #10
  %292 = load atomic i64, i64* %26 acquire, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %124, label %133, !prof !2

294:                                              ; preds = %49, %124, %277, %155, %228, %273, %138, %288, %283, %4, %21, %7
  %295 = phi i1 [ false, %7 ], [ false, %21 ], [ false, %4 ], [ false, %283 ], [ true, %288 ], [ false, %138 ], [ false, %273 ], [ false, %228 ], [ false, %155 ], [ false, %277 ], [ false, %124 ], [ false, %49 ]
  ret i1 %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4cff113accelerator_t19get_glyph_from_nameEPKciPj(%"struct.OT::cff1::accelerator_t"*, i8*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp slt i32 %2, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = tail call i64 @strlen(i8* %1) #11
  %8 = trunc i64 %7 to i32
  br label %9

9:                                                ; preds = %6, %4
  %10 = phi i32 [ %8, %6 ], [ %2, %4 ]
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %82, label %12, !prof !2

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 2
  %14 = load %"struct.OT::cff1::accelerator_t::gname_t"*, %"struct.OT::cff1::accelerator_t::gname_t"** %13, align 8
  %15 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %82, label %18

18:                                               ; preds = %12
  %19 = add nsw i32 %16, -1
  br label %20

20:                                               ; preds = %44, %18
  %21 = phi i32 [ %19, %18 ], [ %46, %44 ]
  %22 = phi i32 [ 0, %18 ], [ %45, %44 ]
  %23 = add i32 %22, %21
  %24 = lshr i32 %23, 1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %14, i64 %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %10, %27
  %29 = select i1 %28, i32 %27, i32 %10
  %30 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %14, i64 %25, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = tail call i32 @strncmp(i8* %1, i8* %31, i64 %32) #11
  %34 = icmp eq i32 %33, 0
  %35 = sub i32 %10, %27
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %20
  %39 = add nsw i32 %24, -1
  br label %44

40:                                               ; preds = %20
  %41 = icmp eq i32 %36, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i32 %24, 1
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i32 [ %22, %38 ], [ %43, %42 ]
  %46 = phi i32 [ %39, %38 ], [ %21, %42 ]
  %47 = icmp sgt i32 %45, %46
  br i1 %47, label %82, label %20

48:                                               ; preds = %40
  %49 = zext i32 %24 to i64
  %50 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %14, i64 %49
  %51 = icmp eq %"struct.OT::cff1::accelerator_t::gname_t"* %50, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.OT::cff1::accelerator_t::gname_t", %"struct.OT::cff1::accelerator_t::gname_t"* %14, i64 %49, i32 1
  %54 = load i16, i16* %53, align 8
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 3
  %57 = load %"struct.CFF::Charset"*, %"struct.CFF::Charset"** %56, align 8
  %58 = icmp eq %"struct.CFF::Charset"* %57, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::Charset"*)
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 16
  %61 = load i32, i32* %60, align 8
  %62 = tail call i32 @_ZNK3CFF7Charset9get_glyphEjj(%"struct.CFF::Charset"* %57, i32 %55, i32 %61) #10
  br label %72

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"struct.OT::cff1::accelerator_t", %"struct.OT::cff1::accelerator_t"* %0, i64 0, i32 0, i32 13, i32 6
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %77 [
    i32 0, label %66
    i32 1, label %68
    i32 2, label %70
  ]

66:                                               ; preds = %63
  %67 = icmp ult i16 %54, 229
  br i1 %67, label %72, label %82

68:                                               ; preds = %63
  %69 = tail call i32 @_ZN2OT4cff131lookup_expert_charset_for_glyphEj(i32 %55) #10
  br label %72

70:                                               ; preds = %63
  %71 = tail call i32 @_ZN2OT4cff138lookup_expert_subset_charset_for_glyphEj(i32 %55) #10
  br label %72

72:                                               ; preds = %66, %59, %68, %70
  %73 = phi i32 [ %62, %59 ], [ %71, %70 ], [ %69, %68 ], [ %55, %66 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %72
  %76 = load i16, i16* %53, align 8
  br label %77

77:                                               ; preds = %75, %63
  %78 = phi i16 [ %76, %75 ], [ %54, %63 ]
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77, %72
  %81 = phi i32 [ 0, %77 ], [ %73, %72 ]
  store i32 %81, i32* %3, align 4
  br label %82

82:                                               ; preds = %44, %66, %12, %48, %77, %80, %9
  %83 = phi i1 [ false, %9 ], [ false, %48 ], [ true, %80 ], [ false, %77 ], [ false, %12 ], [ false, %66 ], [ false, %44 ]
  ret i1 %83
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8* %0 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = bitcast i8* %1 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i64
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %134 [
    i32 65536, label %12
    i32 131072, label %25
  ]

12:                                               ; preds = %3
  %13 = icmp ugt i16 %7, 257
  br i1 %13, label %78, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %8
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %17
  %19 = add nuw nsw i64 %8, 1
  %20 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = xor i32 %16, -1
  %23 = add i32 %21, %22
  %24 = zext i32 %23 to i64
  br label %78

25:                                               ; preds = %3
  %26 = getelementptr inbounds i8, i8* %2, i64 16
  %27 = bitcast i8* %26 to %"struct.OT::ArrayOf.38"**
  %28 = load %"struct.OT::ArrayOf.38"*, %"struct.OT::ArrayOf.38"** %27, align 8
  %29 = bitcast %"struct.OT::ArrayOf.38"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = icmp ugt i16 %31, %7
  br i1 %32, label %33, label %74

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"struct.OT::ArrayOf.38", %"struct.OT::ArrayOf.38"* %28, i64 0, i32 1, i64 %8
  %35 = bitcast %"struct.OT::IntType"* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #10
  %38 = zext i16 %37 to i32
  %39 = icmp ult i16 %37, 258
  br i1 %39, label %40, label %53

40:                                               ; preds = %33
  %41 = zext i16 %37 to i64
  %42 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %44
  %46 = add nuw nsw i32 %38, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = xor i32 %43, -1
  %51 = add i32 %49, %50
  %52 = zext i32 %51 to i64
  br label %74

53:                                               ; preds = %33
  %54 = add nsw i32 %38, -258
  %55 = getelementptr inbounds i8, i8* %2, i64 28
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %54, %57
  br i1 %58, label %59, label %74

59:                                               ; preds = %53
  %60 = getelementptr inbounds i8, i8* %2, i64 32
  %61 = bitcast i8* %60 to i32**
  %62 = load i32*, i32** %61, align 8
  %63 = zext i32 %54 to i64
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i8, i8* %2, i64 40
  %67 = bitcast i8* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = zext i32 %65 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = zext i8 %71 to i64
  br label %74

74:                                               ; preds = %25, %40, %53, %59
  %75 = phi i8* [ null, %53 ], [ null, %25 ], [ %72, %59 ], [ %45, %40 ]
  %76 = phi i64 [ 0, %53 ], [ 0, %25 ], [ %73, %59 ], [ %52, %40 ]
  %77 = icmp ugt i16 %31, %5
  br i1 %77, label %93, label %134

78:                                               ; preds = %12, %14
  %79 = phi i8* [ null, %12 ], [ %18, %14 ]
  %80 = phi i64 [ 0, %12 ], [ %24, %14 ]
  %81 = icmp ugt i16 %5, 257
  br i1 %81, label %134, label %82

82:                                               ; preds = %78
  %83 = zext i16 %5 to i64
  %84 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %86
  %88 = add nuw nsw i64 %83, 1
  %89 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %85, -1
  %92 = add i32 %90, %91
  br label %134

93:                                               ; preds = %74
  %94 = zext i16 %5 to i64
  %95 = getelementptr inbounds %"struct.OT::ArrayOf.38", %"struct.OT::ArrayOf.38"* %28, i64 0, i32 1, i64 %94
  %96 = bitcast %"struct.OT::IntType"* %95 to i16*
  %97 = load i16, i16* %96, align 1
  %98 = tail call i16 @llvm.bswap.i16(i16 %97) #10
  %99 = zext i16 %98 to i32
  %100 = icmp ult i16 %98, 258
  br i1 %100, label %101, label %113

101:                                              ; preds = %93
  %102 = zext i16 %98 to i64
  %103 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %union.format1_names_msgstr_t, %union.format1_names_msgstr_t* @_ZL20format1_names_msgstr, i64 0, i32 0, i32 0, i64 %105
  %107 = add nuw nsw i32 %99, 1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds [259 x i32], [259 x i32]* @_ZL20format1_names_msgidx, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = xor i32 %104, -1
  %112 = add i32 %110, %111
  br label %134

113:                                              ; preds = %93
  %114 = add nsw i32 %99, -258
  %115 = getelementptr inbounds i8, i8* %2, i64 28
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = icmp ult i32 %114, %117
  br i1 %118, label %119, label %134

119:                                              ; preds = %113
  %120 = getelementptr inbounds i8, i8* %2, i64 32
  %121 = bitcast i8* %120 to i32**
  %122 = load i32*, i32** %121, align 8
  %123 = zext i32 %114 to i64
  %124 = getelementptr inbounds i32, i32* %122, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds i8, i8* %2, i64 40
  %127 = bitcast i8* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = zext i32 %125 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %130, i64 1
  %133 = zext i8 %131 to i32
  br label %134

134:                                              ; preds = %3, %78, %82, %74, %101, %113, %119
  %135 = phi i64 [ %76, %101 ], [ %76, %119 ], [ %80, %82 ], [ %80, %78 ], [ %76, %74 ], [ %76, %113 ], [ 0, %3 ]
  %136 = phi i8* [ %75, %101 ], [ %75, %119 ], [ %79, %82 ], [ %79, %78 ], [ %75, %74 ], [ %75, %113 ], [ null, %3 ]
  %137 = phi i8* [ %106, %101 ], [ %132, %119 ], [ %87, %82 ], [ null, %78 ], [ null, %74 ], [ null, %113 ], [ null, %3 ]
  %138 = phi i32 [ %112, %101 ], [ %133, %119 ], [ %92, %82 ], [ 0, %78 ], [ 0, %74 ], [ 0, %113 ], [ 0, %3 ]
  %139 = trunc i64 %135 to i32
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %134
  %142 = sub nsw i32 %138, %139
  br label %148

143:                                              ; preds = %134
  %144 = icmp eq i32 %138, 0
  br i1 %144, label %148, label %145, !prof !2

145:                                              ; preds = %143
  %146 = and i64 %135, 4294967295
  %147 = tail call i32 @memcmp(i8* %137, i8* %136, i64 %146) #11
  br label %148

148:                                              ; preds = %141, %143, %145
  %149 = phi i32 [ %142, %141 ], [ %147, %145 ], [ 0, %143 ]
  ret i32 %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZL13sort_r_simpleIJPvEEvS0_mmPFiPKvS2_DpT_ES4_(i8*, i64, i8*) unnamed_addr #9 {
  %4 = shl i64 %1, 1
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = icmp ult i64 %1, 10
  br i1 %6, label %7, label %31

7:                                                ; preds = %527, %3
  %8 = phi i8* [ %0, %3 ], [ %530, %527 ]
  %9 = phi i8* [ %5, %3 ], [ %533, %527 ]
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = icmp ult i8* %10, %9
  br i1 %11, label %12, label %535

12:                                               ; preds = %7, %28
  %13 = phi i8* [ %29, %28 ], [ %10, %7 ]
  %14 = icmp ugt i8* %13, %8
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %20
  %16 = phi i8* [ %17, %20 ], [ %13, %12 ]
  %17 = getelementptr inbounds i8, i8* %16, i64 -2
  %18 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %17, i8* %16, i8* %2) #10
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = load i8, i8* %17, align 1, !alias.scope !146, !noalias !151
  %22 = load i8, i8* %16, align 1, !alias.scope !151, !noalias !146
  store i8 %22, i8* %17, align 1, !alias.scope !146, !noalias !151
  store i8 %21, i8* %16, align 1, !alias.scope !151, !noalias !146
  %23 = getelementptr inbounds i8, i8* %16, i64 1
  %24 = getelementptr inbounds i8, i8* %16, i64 -1
  %25 = load i8, i8* %24, align 1, !alias.scope !146, !noalias !151
  %26 = load i8, i8* %23, align 1, !alias.scope !151, !noalias !146
  store i8 %26, i8* %24, align 1, !alias.scope !146, !noalias !151
  store i8 %25, i8* %23, align 1, !alias.scope !151, !noalias !146
  %27 = icmp ugt i8* %17, %8
  br i1 %27, label %15, label %28

28:                                               ; preds = %20, %15, %12
  %29 = getelementptr inbounds i8, i8* %13, i64 2
  %30 = icmp ult i8* %29, %9
  br i1 %30, label %12, label %535

31:                                               ; preds = %3, %527
  %32 = phi i8* [ %533, %527 ], [ %5, %3 ]
  %33 = phi i64 [ %532, %527 ], [ %4, %3 ]
  %34 = phi i64 [ %531, %527 ], [ %1, %3 ]
  %35 = phi i8* [ %530, %527 ], [ %0, %3 ]
  %36 = ptrtoint i8* %35 to i64
  %37 = add i64 %33, -2
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = getelementptr inbounds i8, i8* %35, i64 2
  %40 = and i64 %34, -2
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  %42 = getelementptr inbounds i8, i8* %38, i64 -2
  %43 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %39, i8* %41, i8* %2)
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i8* %39, i8* %41
  %46 = select i1 %44, i8* %41, i8* %39
  %47 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %45, i8* %42, i8* %2)
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %31
  %50 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %46, i8* %42, i8* %2)
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i8* %46, i8* %42
  br label %53

53:                                               ; preds = %49, %31
  %54 = phi i8* [ %45, %31 ], [ %52, %49 ]
  %55 = icmp eq i8* %54, %38
  br i1 %55, label %63, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %54, align 1, !alias.scope !154, !noalias !157
  %58 = load i8, i8* %38, align 1, !alias.scope !157, !noalias !154
  store i8 %58, i8* %54, align 1, !alias.scope !154, !noalias !157
  store i8 %57, i8* %38, align 1, !alias.scope !157, !noalias !154
  %59 = getelementptr inbounds i8, i8* %38, i64 1
  %60 = getelementptr inbounds i8, i8* %54, i64 1
  %61 = load i8, i8* %60, align 1, !alias.scope !154, !noalias !157
  %62 = load i8, i8* %59, align 1, !alias.scope !157, !noalias !154
  store i8 %62, i8* %60, align 1, !alias.scope !154, !noalias !157
  store i8 %61, i8* %59, align 1, !alias.scope !157, !noalias !154
  br label %63

63:                                               ; preds = %56, %53
  %64 = icmp sgt i64 %37, 0
  br i1 %64, label %65, label %132

65:                                               ; preds = %63, %127
  %66 = phi i8* [ %128, %127 ], [ %38, %63 ]
  %67 = phi i8* [ %130, %127 ], [ %38, %63 ]
  %68 = phi i8* [ %72, %127 ], [ %35, %63 ]
  %69 = phi i8* [ %129, %127 ], [ %35, %63 ]
  %70 = icmp ult i8* %69, %67
  br i1 %70, label %71, label %132

71:                                               ; preds = %65, %91
  %72 = phi i8* [ %92, %91 ], [ %68, %65 ]
  %73 = phi i8* [ %93, %91 ], [ %69, %65 ]
  %74 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %73, i8* %38, i8* %2)
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  %77 = icmp ult i8* %73, %67
  br i1 %77, label %95, label %127

78:                                               ; preds = %71
  %79 = icmp eq i32 %74, 0
  br i1 %79, label %80, label %91

80:                                               ; preds = %78
  %81 = icmp ult i8* %72, %73
  br i1 %81, label %82, label %89

82:                                               ; preds = %80
  %83 = load i8, i8* %72, align 1, !alias.scope !159, !noalias !162
  %84 = load i8, i8* %73, align 1, !alias.scope !162, !noalias !159
  store i8 %84, i8* %72, align 1, !alias.scope !159, !noalias !162
  store i8 %83, i8* %73, align 1, !alias.scope !162, !noalias !159
  %85 = getelementptr inbounds i8, i8* %73, i64 1
  %86 = getelementptr inbounds i8, i8* %72, i64 1
  %87 = load i8, i8* %86, align 1, !alias.scope !159, !noalias !162
  %88 = load i8, i8* %85, align 1, !alias.scope !162, !noalias !159
  store i8 %88, i8* %86, align 1, !alias.scope !159, !noalias !162
  store i8 %87, i8* %85, align 1, !alias.scope !162, !noalias !159
  br label %89

89:                                               ; preds = %82, %80
  %90 = getelementptr inbounds i8, i8* %72, i64 2
  br label %91

91:                                               ; preds = %89, %78
  %92 = phi i8* [ %90, %89 ], [ %72, %78 ]
  %93 = getelementptr inbounds i8, i8* %73, i64 2
  %94 = icmp ult i8* %93, %67
  br i1 %94, label %71, label %132

95:                                               ; preds = %76, %124
  %96 = phi i8* [ %125, %124 ], [ %66, %76 ]
  %97 = phi i8* [ %98, %124 ], [ %67, %76 ]
  %98 = getelementptr inbounds i8, i8* %97, i64 -2
  %99 = tail call i32 @_ZN2OT4post13accelerator_t8cmp_gidsEPKvS3_Pv(i8* %98, i8* %38, i8* %2)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds i8, i8* %96, i64 -2
  %103 = icmp ult i8* %97, %96
  br i1 %103, label %117, label %124

104:                                              ; preds = %95
  %105 = icmp slt i32 %99, 0
  br i1 %105, label %106, label %124

106:                                              ; preds = %104
  %107 = icmp ult i8* %73, %98
  br i1 %107, label %108, label %115

108:                                              ; preds = %106
  %109 = load i8, i8* %73, align 1, !alias.scope !164, !noalias !167
  %110 = load i8, i8* %98, align 1, !alias.scope !167, !noalias !164
  store i8 %110, i8* %73, align 1, !alias.scope !164, !noalias !167
  store i8 %109, i8* %98, align 1, !alias.scope !167, !noalias !164
  %111 = getelementptr inbounds i8, i8* %97, i64 -1
  %112 = getelementptr inbounds i8, i8* %73, i64 1
  %113 = load i8, i8* %112, align 1, !alias.scope !164, !noalias !167
  %114 = load i8, i8* %111, align 1, !alias.scope !167, !noalias !164
  store i8 %114, i8* %112, align 1, !alias.scope !164, !noalias !167
  store i8 %113, i8* %111, align 1, !alias.scope !167, !noalias !164
  br label %115

115:                                              ; preds = %108, %106
  %116 = getelementptr inbounds i8, i8* %73, i64 2
  br label %127

117:                                              ; preds = %101
  %118 = load i8, i8* %98, align 1, !alias.scope !169, !noalias !172
  %119 = load i8, i8* %102, align 1, !alias.scope !172, !noalias !169
  store i8 %119, i8* %98, align 1, !alias.scope !169, !noalias !172
  store i8 %118, i8* %102, align 1, !alias.scope !172, !noalias !169
  %120 = getelementptr inbounds i8, i8* %97, i64 -1
  %121 = getelementptr inbounds i8, i8* %96, i64 -1
  %122 = load i8, i8* %120, align 1, !alias.scope !169, !noalias !172
  %123 = load i8, i8* %121, align 1, !alias.scope !172, !noalias !169
  store i8 %123, i8* %120, align 1, !alias.scope !169, !noalias !172
  store i8 %122, i8* %121, align 1, !alias.scope !172, !noalias !169
  br label %124

124:                                              ; preds = %117, %104, %101
  %125 = phi i8* [ %102, %101 ], [ %96, %104 ], [ %102, %117 ]
  %126 = icmp ult i8* %73, %98
  br i1 %126, label %95, label %127

127:                                              ; preds = %124, %76, %115
  %128 = phi i8* [ %96, %115 ], [ %66, %76 ], [ %125, %124 ]
  %129 = phi i8* [ %116, %115 ], [ %73, %76 ], [ %73, %124 ]
  %130 = phi i8* [ %98, %115 ], [ %67, %76 ], [ %98, %124 ]
  %131 = icmp ult i8* %129, %130
  br i1 %131, label %65, label %132

132:                                              ; preds = %127, %65, %91, %63
  %133 = phi i8* [ %38, %63 ], [ %67, %91 ], [ %67, %65 ], [ %130, %127 ]
  %134 = phi i8* [ %38, %63 ], [ %66, %91 ], [ %66, %65 ], [ %128, %127 ]
  %135 = phi i8* [ %35, %63 ], [ %92, %91 ], [ %68, %65 ], [ %72, %127 ]
  %136 = ptrtoint i8* %133 to i64
  %137 = ptrtoint i8* %135 to i64
  %138 = sub i64 %137, %36
  %139 = sub i64 %136, %137
  %140 = icmp ne i64 %138, 0
  %141 = icmp ne i64 %139, 0
  %142 = and i1 %140, %141
  br i1 %142, label %143, label %331

143:                                              ; preds = %132
  %144 = icmp ugt i64 %138, %139
  br i1 %144, label %145, label %238

145:                                              ; preds = %143
  %146 = getelementptr inbounds i8, i8* %35, i64 %139
  %147 = icmp sgt i64 %139, 0
  br i1 %147, label %148, label %331

148:                                              ; preds = %145
  %149 = getelementptr i8, i8* %35, i64 1
  %150 = icmp ugt i8* %146, %149
  %151 = select i1 %150, i8* %146, i8* %149
  %152 = ptrtoint i8* %151 to i64
  %153 = sub i64 %152, %36
  %154 = icmp ult i64 %153, 32
  br i1 %154, label %227, label %155

155:                                              ; preds = %148
  %156 = and i64 %153, -32
  %157 = getelementptr i8, i8* %35, i64 %156
  %158 = getelementptr i8, i8* %135, i64 %156
  %159 = add i64 %156, -32
  %160 = lshr exact i64 %159, 5
  %161 = add nuw nsw i64 %160, 1
  %162 = and i64 %161, 1
  %163 = icmp eq i64 %159, 0
  br i1 %163, label %205, label %164

164:                                              ; preds = %155
  %165 = sub nuw nsw i64 %161, %162
  br label %166

166:                                              ; preds = %166, %164
  %167 = phi i64 [ 0, %164 ], [ %202, %166 ]
  %168 = phi i64 [ %165, %164 ], [ %203, %166 ]
  %169 = getelementptr i8, i8* %35, i64 %167
  %170 = getelementptr i8, i8* %135, i64 %167
  %171 = bitcast i8* %169 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !174, !noalias !177
  %173 = getelementptr i8, i8* %169, i64 16
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !174, !noalias !177
  %176 = bitcast i8* %170 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !177, !noalias !174
  %178 = getelementptr i8, i8* %170, i64 16
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 1, !alias.scope !177, !noalias !174
  %181 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %181, align 1, !alias.scope !174, !noalias !177
  %182 = bitcast i8* %173 to <16 x i8>*
  store <16 x i8> %180, <16 x i8>* %182, align 1, !alias.scope !174, !noalias !177
  %183 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %172, <16 x i8>* %183, align 1, !alias.scope !177, !noalias !174
  %184 = bitcast i8* %178 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %184, align 1, !alias.scope !177, !noalias !174
  %185 = or i64 %167, 32
  %186 = getelementptr i8, i8* %35, i64 %185
  %187 = getelementptr i8, i8* %135, i64 %185
  %188 = bitcast i8* %186 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !alias.scope !174, !noalias !177
  %190 = getelementptr i8, i8* %186, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  %192 = load <16 x i8>, <16 x i8>* %191, align 1, !alias.scope !174, !noalias !177
  %193 = bitcast i8* %187 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !177, !noalias !174
  %195 = getelementptr i8, i8* %187, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !177, !noalias !174
  %198 = bitcast i8* %186 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !174, !noalias !177
  %199 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %199, align 1, !alias.scope !174, !noalias !177
  %200 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %189, <16 x i8>* %200, align 1, !alias.scope !177, !noalias !174
  %201 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %192, <16 x i8>* %201, align 1, !alias.scope !177, !noalias !174
  %202 = add i64 %167, 64
  %203 = add i64 %168, -2
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %166, !llvm.loop !179

205:                                              ; preds = %166, %155
  %206 = phi i64 [ 0, %155 ], [ %202, %166 ]
  %207 = icmp eq i64 %162, 0
  br i1 %207, label %225, label %208

208:                                              ; preds = %205
  %209 = getelementptr i8, i8* %35, i64 %206
  %210 = getelementptr i8, i8* %135, i64 %206
  %211 = bitcast i8* %209 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1, !alias.scope !174, !noalias !177
  %213 = getelementptr i8, i8* %209, i64 16
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1, !alias.scope !174, !noalias !177
  %216 = bitcast i8* %210 to <16 x i8>*
  %217 = load <16 x i8>, <16 x i8>* %216, align 1, !alias.scope !177, !noalias !174
  %218 = getelementptr i8, i8* %210, i64 16
  %219 = bitcast i8* %218 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1, !alias.scope !177, !noalias !174
  %221 = bitcast i8* %209 to <16 x i8>*
  store <16 x i8> %217, <16 x i8>* %221, align 1, !alias.scope !174, !noalias !177
  %222 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %220, <16 x i8>* %222, align 1, !alias.scope !174, !noalias !177
  %223 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %212, <16 x i8>* %223, align 1, !alias.scope !177, !noalias !174
  %224 = bitcast i8* %218 to <16 x i8>*
  store <16 x i8> %215, <16 x i8>* %224, align 1, !alias.scope !177, !noalias !174
  br label %225

225:                                              ; preds = %205, %208
  %226 = icmp eq i64 %153, %156
  br i1 %226, label %331, label %227

227:                                              ; preds = %225, %148
  %228 = phi i8* [ %35, %148 ], [ %157, %225 ]
  %229 = phi i8* [ %135, %148 ], [ %158, %225 ]
  br label %230

230:                                              ; preds = %227, %230
  %231 = phi i8* [ %235, %230 ], [ %228, %227 ]
  %232 = phi i8* [ %236, %230 ], [ %229, %227 ]
  %233 = load i8, i8* %231, align 1, !alias.scope !174, !noalias !177
  %234 = load i8, i8* %232, align 1, !alias.scope !177, !noalias !174
  store i8 %234, i8* %231, align 1, !alias.scope !174, !noalias !177
  store i8 %233, i8* %232, align 1, !alias.scope !177, !noalias !174
  %235 = getelementptr inbounds i8, i8* %231, i64 1
  %236 = getelementptr inbounds i8, i8* %232, i64 1
  %237 = icmp ult i8* %235, %146
  br i1 %237, label %230, label %331, !llvm.loop !180

238:                                              ; preds = %143
  %239 = icmp sgt i64 %138, 0
  br i1 %239, label %240, label %331

240:                                              ; preds = %238
  %241 = getelementptr inbounds i8, i8* %35, i64 %139
  %242 = getelementptr i8, i8* %35, i64 1
  %243 = icmp ugt i8* %135, %242
  %244 = select i1 %243, i8* %135, i8* %242
  %245 = ptrtoint i8* %244 to i64
  %246 = sub i64 %245, %36
  %247 = icmp ult i64 %246, 32
  br i1 %247, label %320, label %248

248:                                              ; preds = %240
  %249 = and i64 %246, -32
  %250 = getelementptr i8, i8* %35, i64 %249
  %251 = getelementptr i8, i8* %241, i64 %249
  %252 = add i64 %249, -32
  %253 = lshr exact i64 %252, 5
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 1
  %256 = icmp eq i64 %252, 0
  br i1 %256, label %298, label %257

257:                                              ; preds = %248
  %258 = sub nuw nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %295, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %296, %259 ]
  %262 = getelementptr i8, i8* %35, i64 %260
  %263 = getelementptr i8, i8* %241, i64 %260
  %264 = bitcast i8* %262 to <16 x i8>*
  %265 = load <16 x i8>, <16 x i8>* %264, align 1, !alias.scope !181, !noalias !184
  %266 = getelementptr i8, i8* %262, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !181, !noalias !184
  %269 = bitcast i8* %263 to <16 x i8>*
  %270 = load <16 x i8>, <16 x i8>* %269, align 1, !alias.scope !184, !noalias !181
  %271 = getelementptr i8, i8* %263, i64 16
  %272 = bitcast i8* %271 to <16 x i8>*
  %273 = load <16 x i8>, <16 x i8>* %272, align 1, !alias.scope !184, !noalias !181
  %274 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %270, <16 x i8>* %274, align 1, !alias.scope !181, !noalias !184
  %275 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %273, <16 x i8>* %275, align 1, !alias.scope !181, !noalias !184
  %276 = bitcast i8* %263 to <16 x i8>*
  store <16 x i8> %265, <16 x i8>* %276, align 1, !alias.scope !184, !noalias !181
  %277 = bitcast i8* %271 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %277, align 1, !alias.scope !184, !noalias !181
  %278 = or i64 %260, 32
  %279 = getelementptr i8, i8* %35, i64 %278
  %280 = getelementptr i8, i8* %241, i64 %278
  %281 = bitcast i8* %279 to <16 x i8>*
  %282 = load <16 x i8>, <16 x i8>* %281, align 1, !alias.scope !181, !noalias !184
  %283 = getelementptr i8, i8* %279, i64 16
  %284 = bitcast i8* %283 to <16 x i8>*
  %285 = load <16 x i8>, <16 x i8>* %284, align 1, !alias.scope !181, !noalias !184
  %286 = bitcast i8* %280 to <16 x i8>*
  %287 = load <16 x i8>, <16 x i8>* %286, align 1, !alias.scope !184, !noalias !181
  %288 = getelementptr i8, i8* %280, i64 16
  %289 = bitcast i8* %288 to <16 x i8>*
  %290 = load <16 x i8>, <16 x i8>* %289, align 1, !alias.scope !184, !noalias !181
  %291 = bitcast i8* %279 to <16 x i8>*
  store <16 x i8> %287, <16 x i8>* %291, align 1, !alias.scope !181, !noalias !184
  %292 = bitcast i8* %283 to <16 x i8>*
  store <16 x i8> %290, <16 x i8>* %292, align 1, !alias.scope !181, !noalias !184
  %293 = bitcast i8* %280 to <16 x i8>*
  store <16 x i8> %282, <16 x i8>* %293, align 1, !alias.scope !184, !noalias !181
  %294 = bitcast i8* %288 to <16 x i8>*
  store <16 x i8> %285, <16 x i8>* %294, align 1, !alias.scope !184, !noalias !181
  %295 = add i64 %260, 64
  %296 = add i64 %261, -2
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %259, !llvm.loop !186

298:                                              ; preds = %259, %248
  %299 = phi i64 [ 0, %248 ], [ %295, %259 ]
  %300 = icmp eq i64 %255, 0
  br i1 %300, label %318, label %301

301:                                              ; preds = %298
  %302 = getelementptr i8, i8* %35, i64 %299
  %303 = getelementptr i8, i8* %241, i64 %299
  %304 = bitcast i8* %302 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !181, !noalias !184
  %306 = getelementptr i8, i8* %302, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !181, !noalias !184
  %309 = bitcast i8* %303 to <16 x i8>*
  %310 = load <16 x i8>, <16 x i8>* %309, align 1, !alias.scope !184, !noalias !181
  %311 = getelementptr i8, i8* %303, i64 16
  %312 = bitcast i8* %311 to <16 x i8>*
  %313 = load <16 x i8>, <16 x i8>* %312, align 1, !alias.scope !184, !noalias !181
  %314 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %310, <16 x i8>* %314, align 1, !alias.scope !181, !noalias !184
  %315 = bitcast i8* %306 to <16 x i8>*
  store <16 x i8> %313, <16 x i8>* %315, align 1, !alias.scope !181, !noalias !184
  %316 = bitcast i8* %303 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %316, align 1, !alias.scope !184, !noalias !181
  %317 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %317, align 1, !alias.scope !184, !noalias !181
  br label %318

318:                                              ; preds = %298, %301
  %319 = icmp eq i64 %246, %249
  br i1 %319, label %331, label %320

320:                                              ; preds = %318, %240
  %321 = phi i8* [ %35, %240 ], [ %250, %318 ]
  %322 = phi i8* [ %241, %240 ], [ %251, %318 ]
  br label %323

323:                                              ; preds = %320, %323
  %324 = phi i8* [ %328, %323 ], [ %321, %320 ]
  %325 = phi i8* [ %329, %323 ], [ %322, %320 ]
  %326 = load i8, i8* %324, align 1, !alias.scope !181, !noalias !184
  %327 = load i8, i8* %325, align 1, !alias.scope !184, !noalias !181
  store i8 %327, i8* %324, align 1, !alias.scope !181, !noalias !184
  store i8 %326, i8* %325, align 1, !alias.scope !184, !noalias !181
  %328 = getelementptr inbounds i8, i8* %324, i64 1
  %329 = getelementptr inbounds i8, i8* %325, i64 1
  %330 = icmp ult i8* %328, %135
  br i1 %330, label %323, label %331, !llvm.loop !187

331:                                              ; preds = %323, %230, %318, %225, %132, %145, %238
  %332 = ptrtoint i8* %134 to i64
  %333 = sub i64 %332, %136
  %334 = ptrtoint i8* %32 to i64
  %335 = sub i64 %334, %332
  %336 = icmp ne i64 %333, 0
  %337 = icmp ne i64 %335, 0
  %338 = and i1 %336, %337
  br i1 %338, label %339, label %527

339:                                              ; preds = %331
  %340 = icmp ugt i64 %333, %335
  br i1 %340, label %341, label %434

341:                                              ; preds = %339
  %342 = getelementptr inbounds i8, i8* %133, i64 %335
  %343 = icmp sgt i64 %335, 0
  br i1 %343, label %344, label %527

344:                                              ; preds = %341
  %345 = getelementptr i8, i8* %133, i64 1
  %346 = icmp ugt i8* %342, %345
  %347 = select i1 %346, i8* %342, i8* %345
  %348 = ptrtoint i8* %347 to i64
  %349 = sub i64 %348, %136
  %350 = icmp ult i64 %349, 32
  br i1 %350, label %423, label %351

351:                                              ; preds = %344
  %352 = and i64 %349, -32
  %353 = getelementptr i8, i8* %133, i64 %352
  %354 = getelementptr i8, i8* %134, i64 %352
  %355 = add i64 %352, -32
  %356 = lshr exact i64 %355, 5
  %357 = add nuw nsw i64 %356, 1
  %358 = and i64 %357, 1
  %359 = icmp eq i64 %355, 0
  br i1 %359, label %401, label %360

360:                                              ; preds = %351
  %361 = sub nuw nsw i64 %357, %358
  br label %362

362:                                              ; preds = %362, %360
  %363 = phi i64 [ 0, %360 ], [ %398, %362 ]
  %364 = phi i64 [ %361, %360 ], [ %399, %362 ]
  %365 = getelementptr i8, i8* %133, i64 %363
  %366 = getelementptr i8, i8* %134, i64 %363
  %367 = bitcast i8* %365 to <16 x i8>*
  %368 = load <16 x i8>, <16 x i8>* %367, align 1, !alias.scope !188, !noalias !191
  %369 = getelementptr i8, i8* %365, i64 16
  %370 = bitcast i8* %369 to <16 x i8>*
  %371 = load <16 x i8>, <16 x i8>* %370, align 1, !alias.scope !188, !noalias !191
  %372 = bitcast i8* %366 to <16 x i8>*
  %373 = load <16 x i8>, <16 x i8>* %372, align 1, !alias.scope !191, !noalias !188
  %374 = getelementptr i8, i8* %366, i64 16
  %375 = bitcast i8* %374 to <16 x i8>*
  %376 = load <16 x i8>, <16 x i8>* %375, align 1, !alias.scope !191, !noalias !188
  %377 = bitcast i8* %365 to <16 x i8>*
  store <16 x i8> %373, <16 x i8>* %377, align 1, !alias.scope !188, !noalias !191
  %378 = bitcast i8* %369 to <16 x i8>*
  store <16 x i8> %376, <16 x i8>* %378, align 1, !alias.scope !188, !noalias !191
  %379 = bitcast i8* %366 to <16 x i8>*
  store <16 x i8> %368, <16 x i8>* %379, align 1, !alias.scope !191, !noalias !188
  %380 = bitcast i8* %374 to <16 x i8>*
  store <16 x i8> %371, <16 x i8>* %380, align 1, !alias.scope !191, !noalias !188
  %381 = or i64 %363, 32
  %382 = getelementptr i8, i8* %133, i64 %381
  %383 = getelementptr i8, i8* %134, i64 %381
  %384 = bitcast i8* %382 to <16 x i8>*
  %385 = load <16 x i8>, <16 x i8>* %384, align 1, !alias.scope !188, !noalias !191
  %386 = getelementptr i8, i8* %382, i64 16
  %387 = bitcast i8* %386 to <16 x i8>*
  %388 = load <16 x i8>, <16 x i8>* %387, align 1, !alias.scope !188, !noalias !191
  %389 = bitcast i8* %383 to <16 x i8>*
  %390 = load <16 x i8>, <16 x i8>* %389, align 1, !alias.scope !191, !noalias !188
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  %393 = load <16 x i8>, <16 x i8>* %392, align 1, !alias.scope !191, !noalias !188
  %394 = bitcast i8* %382 to <16 x i8>*
  store <16 x i8> %390, <16 x i8>* %394, align 1, !alias.scope !188, !noalias !191
  %395 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %393, <16 x i8>* %395, align 1, !alias.scope !188, !noalias !191
  %396 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %385, <16 x i8>* %396, align 1, !alias.scope !191, !noalias !188
  %397 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %388, <16 x i8>* %397, align 1, !alias.scope !191, !noalias !188
  %398 = add i64 %363, 64
  %399 = add i64 %364, -2
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %362, !llvm.loop !193

401:                                              ; preds = %362, %351
  %402 = phi i64 [ 0, %351 ], [ %398, %362 ]
  %403 = icmp eq i64 %358, 0
  br i1 %403, label %421, label %404

404:                                              ; preds = %401
  %405 = getelementptr i8, i8* %133, i64 %402
  %406 = getelementptr i8, i8* %134, i64 %402
  %407 = bitcast i8* %405 to <16 x i8>*
  %408 = load <16 x i8>, <16 x i8>* %407, align 1, !alias.scope !188, !noalias !191
  %409 = getelementptr i8, i8* %405, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  %411 = load <16 x i8>, <16 x i8>* %410, align 1, !alias.scope !188, !noalias !191
  %412 = bitcast i8* %406 to <16 x i8>*
  %413 = load <16 x i8>, <16 x i8>* %412, align 1, !alias.scope !191, !noalias !188
  %414 = getelementptr i8, i8* %406, i64 16
  %415 = bitcast i8* %414 to <16 x i8>*
  %416 = load <16 x i8>, <16 x i8>* %415, align 1, !alias.scope !191, !noalias !188
  %417 = bitcast i8* %405 to <16 x i8>*
  store <16 x i8> %413, <16 x i8>* %417, align 1, !alias.scope !188, !noalias !191
  %418 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %416, <16 x i8>* %418, align 1, !alias.scope !188, !noalias !191
  %419 = bitcast i8* %406 to <16 x i8>*
  store <16 x i8> %408, <16 x i8>* %419, align 1, !alias.scope !191, !noalias !188
  %420 = bitcast i8* %414 to <16 x i8>*
  store <16 x i8> %411, <16 x i8>* %420, align 1, !alias.scope !191, !noalias !188
  br label %421

421:                                              ; preds = %401, %404
  %422 = icmp eq i64 %349, %352
  br i1 %422, label %527, label %423

423:                                              ; preds = %421, %344
  %424 = phi i8* [ %133, %344 ], [ %353, %421 ]
  %425 = phi i8* [ %134, %344 ], [ %354, %421 ]
  br label %426

426:                                              ; preds = %423, %426
  %427 = phi i8* [ %431, %426 ], [ %424, %423 ]
  %428 = phi i8* [ %432, %426 ], [ %425, %423 ]
  %429 = load i8, i8* %427, align 1, !alias.scope !188, !noalias !191
  %430 = load i8, i8* %428, align 1, !alias.scope !191, !noalias !188
  store i8 %430, i8* %427, align 1, !alias.scope !188, !noalias !191
  store i8 %429, i8* %428, align 1, !alias.scope !191, !noalias !188
  %431 = getelementptr inbounds i8, i8* %427, i64 1
  %432 = getelementptr inbounds i8, i8* %428, i64 1
  %433 = icmp ult i8* %431, %342
  br i1 %433, label %426, label %527, !llvm.loop !194

434:                                              ; preds = %339
  %435 = icmp sgt i64 %333, 0
  br i1 %435, label %436, label %527

436:                                              ; preds = %434
  %437 = getelementptr inbounds i8, i8* %133, i64 %335
  %438 = getelementptr i8, i8* %133, i64 1
  %439 = icmp ugt i8* %134, %438
  %440 = select i1 %439, i8* %134, i8* %438
  %441 = ptrtoint i8* %440 to i64
  %442 = sub i64 %441, %136
  %443 = icmp ult i64 %442, 32
  br i1 %443, label %516, label %444

444:                                              ; preds = %436
  %445 = and i64 %442, -32
  %446 = getelementptr i8, i8* %133, i64 %445
  %447 = getelementptr i8, i8* %437, i64 %445
  %448 = add i64 %445, -32
  %449 = lshr exact i64 %448, 5
  %450 = add nuw nsw i64 %449, 1
  %451 = and i64 %450, 1
  %452 = icmp eq i64 %448, 0
  br i1 %452, label %494, label %453

453:                                              ; preds = %444
  %454 = sub nuw nsw i64 %450, %451
  br label %455

455:                                              ; preds = %455, %453
  %456 = phi i64 [ 0, %453 ], [ %491, %455 ]
  %457 = phi i64 [ %454, %453 ], [ %492, %455 ]
  %458 = getelementptr i8, i8* %133, i64 %456
  %459 = getelementptr i8, i8* %437, i64 %456
  %460 = bitcast i8* %458 to <16 x i8>*
  %461 = load <16 x i8>, <16 x i8>* %460, align 1, !alias.scope !195, !noalias !198
  %462 = getelementptr i8, i8* %458, i64 16
  %463 = bitcast i8* %462 to <16 x i8>*
  %464 = load <16 x i8>, <16 x i8>* %463, align 1, !alias.scope !195, !noalias !198
  %465 = bitcast i8* %459 to <16 x i8>*
  %466 = load <16 x i8>, <16 x i8>* %465, align 1, !alias.scope !198, !noalias !195
  %467 = getelementptr i8, i8* %459, i64 16
  %468 = bitcast i8* %467 to <16 x i8>*
  %469 = load <16 x i8>, <16 x i8>* %468, align 1, !alias.scope !198, !noalias !195
  %470 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %466, <16 x i8>* %470, align 1, !alias.scope !195, !noalias !198
  %471 = bitcast i8* %462 to <16 x i8>*
  store <16 x i8> %469, <16 x i8>* %471, align 1, !alias.scope !195, !noalias !198
  %472 = bitcast i8* %459 to <16 x i8>*
  store <16 x i8> %461, <16 x i8>* %472, align 1, !alias.scope !198, !noalias !195
  %473 = bitcast i8* %467 to <16 x i8>*
  store <16 x i8> %464, <16 x i8>* %473, align 1, !alias.scope !198, !noalias !195
  %474 = or i64 %456, 32
  %475 = getelementptr i8, i8* %133, i64 %474
  %476 = getelementptr i8, i8* %437, i64 %474
  %477 = bitcast i8* %475 to <16 x i8>*
  %478 = load <16 x i8>, <16 x i8>* %477, align 1, !alias.scope !195, !noalias !198
  %479 = getelementptr i8, i8* %475, i64 16
  %480 = bitcast i8* %479 to <16 x i8>*
  %481 = load <16 x i8>, <16 x i8>* %480, align 1, !alias.scope !195, !noalias !198
  %482 = bitcast i8* %476 to <16 x i8>*
  %483 = load <16 x i8>, <16 x i8>* %482, align 1, !alias.scope !198, !noalias !195
  %484 = getelementptr i8, i8* %476, i64 16
  %485 = bitcast i8* %484 to <16 x i8>*
  %486 = load <16 x i8>, <16 x i8>* %485, align 1, !alias.scope !198, !noalias !195
  %487 = bitcast i8* %475 to <16 x i8>*
  store <16 x i8> %483, <16 x i8>* %487, align 1, !alias.scope !195, !noalias !198
  %488 = bitcast i8* %479 to <16 x i8>*
  store <16 x i8> %486, <16 x i8>* %488, align 1, !alias.scope !195, !noalias !198
  %489 = bitcast i8* %476 to <16 x i8>*
  store <16 x i8> %478, <16 x i8>* %489, align 1, !alias.scope !198, !noalias !195
  %490 = bitcast i8* %484 to <16 x i8>*
  store <16 x i8> %481, <16 x i8>* %490, align 1, !alias.scope !198, !noalias !195
  %491 = add i64 %456, 64
  %492 = add i64 %457, -2
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %455, !llvm.loop !200

494:                                              ; preds = %455, %444
  %495 = phi i64 [ 0, %444 ], [ %491, %455 ]
  %496 = icmp eq i64 %451, 0
  br i1 %496, label %514, label %497

497:                                              ; preds = %494
  %498 = getelementptr i8, i8* %133, i64 %495
  %499 = getelementptr i8, i8* %437, i64 %495
  %500 = bitcast i8* %498 to <16 x i8>*
  %501 = load <16 x i8>, <16 x i8>* %500, align 1, !alias.scope !195, !noalias !198
  %502 = getelementptr i8, i8* %498, i64 16
  %503 = bitcast i8* %502 to <16 x i8>*
  %504 = load <16 x i8>, <16 x i8>* %503, align 1, !alias.scope !195, !noalias !198
  %505 = bitcast i8* %499 to <16 x i8>*
  %506 = load <16 x i8>, <16 x i8>* %505, align 1, !alias.scope !198, !noalias !195
  %507 = getelementptr i8, i8* %499, i64 16
  %508 = bitcast i8* %507 to <16 x i8>*
  %509 = load <16 x i8>, <16 x i8>* %508, align 1, !alias.scope !198, !noalias !195
  %510 = bitcast i8* %498 to <16 x i8>*
  store <16 x i8> %506, <16 x i8>* %510, align 1, !alias.scope !195, !noalias !198
  %511 = bitcast i8* %502 to <16 x i8>*
  store <16 x i8> %509, <16 x i8>* %511, align 1, !alias.scope !195, !noalias !198
  %512 = bitcast i8* %499 to <16 x i8>*
  store <16 x i8> %501, <16 x i8>* %512, align 1, !alias.scope !198, !noalias !195
  %513 = bitcast i8* %507 to <16 x i8>*
  store <16 x i8> %504, <16 x i8>* %513, align 1, !alias.scope !198, !noalias !195
  br label %514

514:                                              ; preds = %494, %497
  %515 = icmp eq i64 %442, %445
  br i1 %515, label %527, label %516

516:                                              ; preds = %514, %436
  %517 = phi i8* [ %133, %436 ], [ %446, %514 ]
  %518 = phi i8* [ %437, %436 ], [ %447, %514 ]
  br label %519

519:                                              ; preds = %516, %519
  %520 = phi i8* [ %524, %519 ], [ %517, %516 ]
  %521 = phi i8* [ %525, %519 ], [ %518, %516 ]
  %522 = load i8, i8* %520, align 1, !alias.scope !195, !noalias !198
  %523 = load i8, i8* %521, align 1, !alias.scope !198, !noalias !195
  store i8 %523, i8* %520, align 1, !alias.scope !195, !noalias !198
  store i8 %522, i8* %521, align 1, !alias.scope !198, !noalias !195
  %524 = getelementptr inbounds i8, i8* %520, i64 1
  %525 = getelementptr inbounds i8, i8* %521, i64 1
  %526 = icmp ult i8* %524, %134
  br i1 %526, label %519, label %527, !llvm.loop !201

527:                                              ; preds = %519, %426, %514, %421, %331, %341, %434
  %528 = lshr i64 %139, 1
  tail call fastcc void @_ZL13sort_r_simpleIJPvEEvS0_mmPFiPKvS2_DpT_ES4_(i8* %35, i64 %528, i8* %2)
  %529 = sub i64 0, %333
  %530 = getelementptr inbounds i8, i8* %32, i64 %529
  %531 = lshr i64 %333, 1
  %532 = and i64 %333, -2
  %533 = getelementptr inbounds i8, i8* %530, i64 %532
  %534 = icmp ult i64 %333, 20
  br i1 %534, label %7, label %31

535:                                              ; preds = %28, %7
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3CFF7Charset9get_glyphEjj(%"struct.CFF::Charset"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %89 [
    i8 0, label %6
    i8 1, label %29
    i8 2, label %59
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.74* %7 to %"struct.CFF::Charset0"*
  %9 = icmp ne i32 %1, 0
  %10 = icmp ugt i32 %2, 1
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %89

12:                                               ; preds = %6
  %13 = zext i32 %2 to i64
  br label %14

14:                                               ; preds = %24, %12
  %15 = phi i64 [ 1, %12 ], [ %25, %24 ]
  %16 = add nuw i64 %15, 4294967295
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds %"struct.CFF::Charset0", %"struct.CFF::Charset0"* %8, i64 0, i32 0, i64 %17
  %19 = bitcast %"struct.OT::IntType"* %18 to i16*
  %20 = load i16, i16* %19, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #10
  %22 = zext i16 %21 to i32
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %27, label %24

24:                                               ; preds = %14
  %25 = add nuw nsw i64 %15, 1
  %26 = icmp eq i64 %25, %13
  br i1 %26, label %89, label %14

27:                                               ; preds = %14
  %28 = trunc i64 %15 to i32
  br label %89

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1
  %31 = bitcast %union.anon.74* %30 to %"struct.CFF::Charset1_2"*
  %32 = icmp ne i32 %1, 0
  %33 = icmp ugt i32 %2, 1
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %89

35:                                               ; preds = %29, %54
  %36 = phi i32 [ %57, %54 ], [ 0, %29 ]
  %37 = phi i32 [ %56, %54 ], [ 1, %29 ]
  %38 = zext i32 %36 to i64
  %39 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %31, i64 0, i32 0, i64 %38, i32 0
  %40 = bitcast %"struct.OT::IntType"* %39 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = tail call i16 @llvm.bswap.i16(i16 %41) #10
  %43 = zext i16 %42 to i32
  %44 = icmp ugt i32 %43, %1
  %45 = getelementptr inbounds %"struct.CFF::Charset1_2", %"struct.CFF::Charset1_2"* %31, i64 0, i32 0, i64 %38, i32 1, i32 0, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = add nuw nsw i32 %47, %43
  %49 = icmp ult i32 %48, %1
  %50 = or i1 %44, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %35
  %52 = add i32 %37, %1
  %53 = sub i32 %52, %43
  br label %89

54:                                               ; preds = %35
  %55 = add nuw i32 %37, 1
  %56 = add i32 %55, %47
  %57 = add i32 %36, 1
  %58 = icmp ult i32 %56, %2
  br i1 %58, label %35, label %89

59:                                               ; preds = %3
  %60 = icmp ne i32 %1, 0
  %61 = icmp ugt i32 %2, 1
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %89

63:                                               ; preds = %59, %84
  %64 = phi i32 [ %87, %84 ], [ 0, %59 ]
  %65 = phi i32 [ %86, %84 ], [ 1, %59 ]
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1, i32 0, i32 0, i64 %66, i32 0
  %68 = bitcast %"struct.OT::IntType"* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #10
  %71 = zext i16 %70 to i32
  %72 = icmp ugt i32 %71, %1
  %73 = getelementptr inbounds %"struct.CFF::Charset", %"struct.CFF::Charset"* %0, i64 0, i32 1, i32 0, i32 0, i64 %66, i32 1
  %74 = bitcast %"struct.OT::IntType"* %73 to i16*
  %75 = load i16, i16* %74, align 1
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #10
  %77 = zext i16 %76 to i32
  %78 = add nuw nsw i32 %77, %71
  %79 = icmp ult i32 %78, %1
  %80 = or i1 %72, %79
  br i1 %80, label %84, label %81

81:                                               ; preds = %63
  %82 = add i32 %65, %1
  %83 = sub i32 %82, %71
  br label %89

84:                                               ; preds = %63
  %85 = add nuw i32 %65, 1
  %86 = add i32 %85, %77
  %87 = add i32 %64, 1
  %88 = icmp ult i32 %86, %2
  br i1 %88, label %63, label %89

89:                                               ; preds = %84, %54, %24, %81, %59, %51, %29, %27, %6, %3
  %90 = phi i32 [ 0, %3 ], [ 0, %6 ], [ %28, %27 ], [ 0, %29 ], [ %53, %51 ], [ 0, %59 ], [ %83, %81 ], [ 0, %24 ], [ 0, %54 ], [ 0, %84 ]
  ret i32 %90
}

declare hidden i32 @_ZN2OT4cff131lookup_expert_charset_for_glyphEj(i32) local_unnamed_addr #1

declare hidden i32 @_ZN2OT4cff138lookup_expert_subset_charset_for_glyphEj(i32) local_unnamed_addr #1

declare void @hb_font_funcs_destroy(%struct.hb_font_funcs_t*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::glyf_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18glyf_accelerator_tE21hb_face_lazy_loader_tIS1_Lj12EE9hb_face_tLj12ES1_E10get_storedEv(%struct.hb_lazy_loader_t.61*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.61, %struct.hb_lazy_loader_t.61* %0, i64 -12
  %3 = bitcast %struct.hb_lazy_loader_t.61* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.61* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::glyf_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %40, !prof !2

8:                                                ; preds = %1, %35
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 56) #10
  %13 = bitcast i8* %12 to %"struct.OT::glyf_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::glyf::accelerator_t"*
  tail call void @_ZN2OT4glyf13accelerator_t4initEP9hb_face_t(%"struct.OT::glyf::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::glyf_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::glyf_accelerator_t"*), %"struct.OT::glyf_accelerator_t"* %13, !prof !2
  %19 = ptrtoint %"struct.OT::glyf_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %40, label %22, !prof !3

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::glyf_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %18, i64 0, i32 0, i32 5, i32 0, i32 0
  %27 = load %struct.hb_blob_t*, %struct.hb_blob_t** %26, align 8
  %28 = icmp eq %struct.hb_blob_t* %27, null
  %29 = select i1 %28, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %27
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %29) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %26, align 8
  %30 = getelementptr inbounds %"struct.OT::glyf_accelerator_t", %"struct.OT::glyf_accelerator_t"* %18, i64 0, i32 0, i32 6, i32 0, i32 0
  %31 = load %struct.hb_blob_t*, %struct.hb_blob_t** %30, align 8
  %32 = icmp eq %struct.hb_blob_t* %31, null
  %33 = select i1 %32, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %33) #10
  %34 = bitcast %"struct.OT::glyf_accelerator_t"* %18 to i8*
  tail call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %25, %22
  %36 = load atomic i64, i64* %4 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %8, label %38, !prof !2

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.OT::glyf_accelerator_t"*
  br label %40

40:                                               ; preds = %8, %17, %38, %1
  %41 = phi %"struct.OT::glyf_accelerator_t"* [ %39, %38 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::glyf_accelerator_t"*), %8 ]
  ret %"struct.OT::glyf_accelerator_t"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4glyf13accelerator_t4initEP9hb_face_t(%"struct.OT::glyf::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.OT::glyf::accelerator_t", %"struct.OT::glyf::accelerator_t"* %0, i64 0, i32 7
  %11 = bitcast %"struct.OT::glyf::accelerator_t"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false)
  %12 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 20, i1 false)
  store %struct.hb_face_t* %1, %struct.hb_face_t** %10, align 8
  %13 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 8, i32 1, i32 0
  %14 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.1* %13) #10
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 1
  %16 = bitcast i8** %15 to %"struct.OT::head"**
  %17 = load %"struct.OT::head"*, %"struct.OT::head"** %16, align 8
  %18 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 54
  %21 = select i1 %20, %"struct.OT::head"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::head"*), %"struct.OT::head"* %17
  %22 = getelementptr inbounds %"struct.OT::head", %"struct.OT::head"* %21, i64 0, i32 15
  %23 = bitcast %"struct.OT::IntType"* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #10
  %26 = icmp ugt i16 %25, 1
  br i1 %26, label %86, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.OT::head", %"struct.OT::head"* %21, i64 0, i32 16
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %86

32:                                               ; preds = %27
  %33 = icmp eq i16 %24, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %3, align 8
  %35 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %36 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %35) #10
  %37 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %35, i32 1819239265) #10
  %38 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %37) #10
  %39 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %38, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %38) #10
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %32
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %37) #10
  br label %43

43:                                               ; preds = %32, %42
  store %struct.hb_blob_t* %37, %struct.hb_blob_t** %5, align 8
  %44 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %45 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %44) #10
  %46 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %44, i32 1735162214) #10
  %47 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %46) #10
  %48 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %47, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %47) #10
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %43
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %46) #10
  br label %52

52:                                               ; preds = %43, %51
  store %struct.hb_blob_t* %46, %struct.hb_blob_t** %6, align 8
  %53 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %54 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %53, i64 0, i32 8, i32 18, i32 0
  %55 = tail call %"struct.OT::gvar_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18gvar_accelerator_tE21hb_face_lazy_loader_tIS1_Lj18EE9hb_face_tLj18ES1_E3getEv(%struct.hb_lazy_loader_t.124* %54) #10
  store %"struct.OT::gvar_accelerator_t"* %55, %"struct.OT::gvar_accelerator_t"** %7, align 8
  %56 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %57 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %56, i64 0, i32 8, i32 4, i32 0
  %58 = tail call %"struct.OT::hmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18hmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj4EE9hb_face_tLj4ES1_E10get_storedEv(%struct.hb_lazy_loader_t.25* %57) #10
  store %"struct.OT::hmtx_accelerator_t"* %58, %"struct.OT::hmtx_accelerator_t"** %8, align 8
  %59 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %60 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %59, i64 0, i32 8, i32 11, i32 0
  %61 = tail call %"struct.OT::vmtx_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18vmtx_accelerator_tE21hb_face_lazy_loader_tIS1_Lj11EE9hb_face_tLj11ES1_E10get_storedEv(%struct.hb_lazy_loader_t.56* %60) #10
  store %"struct.OT::vmtx_accelerator_t"* %61, %"struct.OT::vmtx_accelerator_t"** %9, align 8
  %62 = load %struct.hb_blob_t*, %struct.hb_blob_t** %5, align 8
  %63 = icmp eq %struct.hb_blob_t* %62, null
  %64 = select i1 %63, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %62
  %65 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %64, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = load i8, i8* %3, align 8, !range !4
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, i32 2, i32 1
  %70 = lshr i32 %66, %69
  %71 = icmp ugt i32 %70, 1
  %72 = select i1 %71, i32 %70, i32 1
  %73 = add nsw i32 %72, -1
  store i32 %73, i32* %4, align 4
  %74 = load %struct.hb_face_t*, %struct.hb_face_t** %10, align 8
  %75 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %74, i64 0, i32 6, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %78, label %81, !prof !2

78:                                               ; preds = %52
  %79 = tail call i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t* %74) #10
  %80 = load i32, i32* %4, align 4
  br label %81

81:                                               ; preds = %52, %78
  %82 = phi i32 [ %80, %78 ], [ %73, %52 ]
  %83 = phi i32 [ %79, %78 ], [ %76, %52 ]
  %84 = icmp ugt i32 %82, %83
  %85 = select i1 %84, i32 %83, i32 %82
  store i32 %85, i32* %4, align 4
  br label %86

86:                                               ; preds = %2, %27, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.1* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.1, %struct.hb_lazy_loader_t.1* %0, i64 -1
  %9 = bitcast %struct.hb_lazy_loader_t.1* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #10
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1751474532) #10
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #10
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #10
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #10
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  br label %62

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 54
  br i1 %30, label %58, label %31, !prof !2

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -54
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 256
  br i1 %35, label %36, label %58

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %8, i64 12
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 %39, 24
  %41 = getelementptr inbounds i8, i8* %8, i64 13
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds i8, i8* %8, i64 14
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %45, %49
  %51 = getelementptr inbounds i8, i8* %8, i64 15
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = icmp eq i32 %54, 1594834165
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %56 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #10
  br i1 %55, label %57, label %60

57:                                               ; preds = %36
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %62

58:                                               ; preds = %29, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %59 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #10
  br label %60

60:                                               ; preds = %58, %36
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %61 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %62

62:                                               ; preds = %57, %60, %27
  %63 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %57 ], [ %61, %60 ]
  ret %struct.hb_blob_t* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::gvar_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18gvar_accelerator_tE21hb_face_lazy_loader_tIS1_Lj18EE9hb_face_tLj18ES1_E3getEv(%struct.hb_lazy_loader_t.124*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = getelementptr inbounds %struct.hb_lazy_loader_t.124, %struct.hb_lazy_loader_t.124* %0, i64 -18
  %4 = bitcast %struct.hb_lazy_loader_t.124* %3 to %struct.hb_face_t**
  %5 = bitcast %struct.hb_lazy_loader_t.124* %0 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = inttoptr i64 %6 to %"struct.OT::gvar_accelerator_t"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %47, !prof !2

9:                                                ; preds = %1
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %9, %42
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %4, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %47, label %21, !prof !2

21:                                               ; preds = %18
  %22 = call noalias i8* @calloc(i64 1, i64 8) #10
  %23 = bitcast i8* %22 to %"struct.OT::gvar_accelerator_t"*
  %24 = icmp eq i8* %22, null
  br i1 %24, label %30, label %25, !prof !2

25:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10
  %26 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #10
  store i32 %26, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %27 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1735811442) #10
  %28 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4gvarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %27) #10
  %29 = bitcast i8* %22 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %28, %struct.hb_blob_t** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #10
  br label %30

30:                                               ; preds = %21, %25
  %31 = select i1 %24, %"struct.OT::gvar_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar_accelerator_t"*), %"struct.OT::gvar_accelerator_t"* %23, !prof !2
  %32 = ptrtoint %"struct.OT::gvar_accelerator_t"* %31 to i64
  %33 = cmpxchg weak i64* %5, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %47, label %35, !prof !3

35:                                               ; preds = %30
  br i1 %24, label %42, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"struct.OT::gvar_accelerator_t", %"struct.OT::gvar_accelerator_t"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %struct.hb_blob_t*, %struct.hb_blob_t** %37, align 8
  %39 = icmp eq %struct.hb_blob_t* %38, null
  %40 = select i1 %39, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %38
  call void @hb_blob_destroy(%struct.hb_blob_t* %40) #10
  %41 = bitcast %"struct.OT::gvar_accelerator_t"* %31 to i8*
  call void @free(i8* %41) #10
  br label %42

42:                                               ; preds = %36, %35
  %43 = load atomic i64, i64* %5 acquire, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %18, label %45, !prof !2

45:                                               ; preds = %42
  %46 = inttoptr i64 %43 to %"struct.OT::gvar_accelerator_t"*
  br label %47

47:                                               ; preds = %18, %30, %1, %45
  %48 = phi %"struct.OT::gvar_accelerator_t"* [ %46, %45 ], [ %7, %1 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::gvar_accelerator_t"*), %18 ], [ %31, %30 ]
  ret %"struct.OT::gvar_accelerator_t"* %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4gvarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #10
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::gvar"*
  %35 = tail call zeroext i1 @_ZNK2OT4gvar16sanitize_shallowEP21hb_sanitize_context_t(%"struct.OT::gvar"* nonnull %34, %struct.hb_sanitize_context_t* %0) #10
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::gvar"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT4gvar16sanitize_shallowEP21hb_sanitize_context_t(%"struct.OT::gvar"* nonnull %40, %struct.hb_sanitize_context_t* %0) #10
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #10
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #10
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #10
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #10
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #10
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #10
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #10
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4gvar16sanitize_shallowEP21hb_sanitize_context_t(%"struct.OT::gvar"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %265, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %265, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.OT::gvar"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 20
  br i1 %16, label %265, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -20
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %265

22:                                               ; preds = %17
  %23 = bitcast %"struct.OT::gvar"* %0 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = icmp eq i16 %24, 256
  br i1 %25, label %26, label %265

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 4
  %28 = bitcast %"struct.OT::IntType"* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #10
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 10
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %31
  br i1 %34, label %35, label %265

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 1
  %38 = bitcast %"struct.OT::IntType"* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #10
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 2
  %43 = bitcast %"struct.OT::IntType"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #10
  %46 = zext i16 %45 to i32
  %47 = mul nuw i32 %46, %41
  %48 = getelementptr inbounds %"struct.OT::OffsetTo.303", %"struct.OT::OffsetTo.303"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %49 = icmp ugt i8* %5, %48
  %50 = icmp ult i8* %9, %48
  %51 = or i1 %49, %50
  br i1 %51, label %265, label %52, !prof !6

52:                                               ; preds = %35
  %53 = ptrtoint %"struct.OT::OffsetTo.303"* %36 to i64
  %54 = sub i64 %12, %53
  %55 = trunc i64 %54 to i32
  %56 = icmp ult i32 %55, 4
  br i1 %56, label %265, label %57, !prof !2

57:                                               ; preds = %52
  %58 = add i32 %19, -24
  store i32 %58, i32* %18, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %265

60:                                               ; preds = %57
  %61 = load i8, i8* %48, align 1
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 24
  %64 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = shl nuw nsw i64 %66, 16
  %68 = or i64 %67, %63
  %69 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 8
  %73 = or i64 %68, %72
  %74 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = or i64 %73, %76
  %78 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %77
  %79 = icmp ult i32 %47, 2147483647
  br i1 %79, label %80, label %265, !prof !5

80:                                               ; preds = %60
  %81 = shl i32 %47, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %95, label %83

83:                                               ; preds = %80
  %84 = icmp ugt i8* %5, %78
  %85 = icmp ult i8* %9, %78
  %86 = or i1 %84, %85
  br i1 %86, label %265, label %87, !prof !6

87:                                               ; preds = %83
  %88 = ptrtoint i8* %78 to i64
  %89 = sub i64 %12, %88
  %90 = trunc i64 %89 to i32
  %91 = icmp ugt i32 %81, %90
  br i1 %91, label %265, label %92, !prof !2

92:                                               ; preds = %87
  %93 = sub i32 %58, %81
  store i32 %93, i32* %18, align 8
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %265, !prof !3

95:                                               ; preds = %92, %80
  %96 = phi i32 [ %93, %92 ], [ %58, %80 ]
  %97 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 5
  %98 = bitcast %"struct.OT::IntType"* %97 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = and i16 %99, 256
  %101 = icmp eq i16 %100, 0
  %102 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 7
  %103 = load i16, i16* %28, align 1
  %104 = tail call i16 @llvm.bswap.i16(i16 %103) #10
  %105 = zext i16 %104 to i32
  %106 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.287", %"struct.OT::UnsizedArrayOf.287"* %102, i64 0, i32 0, i64 0, i32 0, i32 0
  br i1 %101, label %121, label %107

107:                                              ; preds = %95
  %108 = shl nuw nsw i32 %105, 2
  %109 = add nuw nsw i32 %108, 4
  %110 = icmp ugt i8* %5, %106
  %111 = icmp ult i8* %9, %106
  %112 = or i1 %110, %111
  br i1 %112, label %265, label %113, !prof !6

113:                                              ; preds = %107
  %114 = ptrtoint %"struct.OT::UnsizedArrayOf.287"* %102 to i64
  %115 = sub i64 %12, %114
  %116 = trunc i64 %115 to i32
  %117 = icmp ugt i32 %109, %116
  br i1 %117, label %265, label %118, !prof !2

118:                                              ; preds = %113
  %119 = sub nsw i32 %96, %109
  store i32 %119, i32* %18, align 8
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %135, label %265

121:                                              ; preds = %95
  %122 = shl nuw nsw i32 %105, 1
  %123 = add nuw nsw i32 %122, 2
  %124 = icmp ugt i8* %5, %106
  %125 = icmp ult i8* %9, %106
  %126 = or i1 %124, %125
  br i1 %126, label %265, label %127, !prof !6

127:                                              ; preds = %121
  %128 = ptrtoint %"struct.OT::UnsizedArrayOf.287"* %102 to i64
  %129 = sub i64 %12, %128
  %130 = trunc i64 %129 to i32
  %131 = icmp ugt i32 %123, %130
  br i1 %131, label %265, label %132, !prof !2

132:                                              ; preds = %127
  %133 = sub nsw i32 %96, %123
  store i32 %133, i32* %18, align 8
  %134 = icmp sgt i32 %133, 0
  br i1 %134, label %135, label %265

135:                                              ; preds = %132, %118
  %136 = phi i32 [ %133, %132 ], [ %119, %118 ]
  %137 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 0
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw i32 %139, 24
  %141 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 1
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %144, %140
  %146 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 2
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl nuw nsw i32 %148, 8
  %150 = or i32 %145, %149
  %151 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i64 3
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = or i32 %150, %153
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %169, label %156, !prof !2

156:                                              ; preds = %135
  %157 = zext i8 %138 to i64
  %158 = shl nuw nsw i64 %157, 24
  %159 = zext i8 %142 to i64
  %160 = shl nuw nsw i64 %159, 16
  %161 = or i64 %160, %158
  %162 = zext i8 %147 to i64
  %163 = shl nuw nsw i64 %162, 8
  %164 = or i64 %161, %163
  %165 = zext i8 %152 to i64
  %166 = or i64 %164, %165
  %167 = getelementptr inbounds %"struct.OT::gvar", %"struct.OT::gvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %166
  %168 = bitcast i8* %167 to %"struct.OT::GlyphVariationData"*
  br label %169

169:                                              ; preds = %135, %156
  %170 = phi %"struct.OT::GlyphVariationData"* [ %168, %156 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::GlyphVariationData"*), %135 ]
  %171 = bitcast %"struct.OT::GlyphVariationData"* %170 to %"struct.OT::IntType.6"*
  %172 = load i16, i16* %98, align 1
  %173 = and i16 %172, 256
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %225, label %175

175:                                              ; preds = %169
  %176 = load i8, i8* %106, align 1
  %177 = zext i8 %176 to i64
  %178 = shl nuw nsw i64 %177, 24
  %179 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.287", %"struct.OT::UnsizedArrayOf.287"* %102, i64 1, i32 0, i64 0, i32 0, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  %182 = shl nuw nsw i64 %181, 16
  %183 = or i64 %182, %178
  %184 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.287", %"struct.OT::UnsizedArrayOf.287"* %102, i64 2, i32 0, i64 0, i32 0, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = shl nuw nsw i64 %186, 8
  %188 = or i64 %183, %187
  %189 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.287", %"struct.OT::UnsizedArrayOf.287"* %102, i64 3, i32 0, i64 0, i32 0, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i64
  %192 = or i64 %188, %191
  %193 = load i16, i16* %28, align 1
  %194 = tail call i16 @llvm.bswap.i16(i16 %193) #10
  %195 = bitcast %"struct.OT::UnsizedArrayOf.287"* %102 to %"struct.OT::IntType.9"*
  %196 = zext i16 %194 to i64
  %197 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %195, i64 %196, i32 0, i32 0, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = shl nuw i32 %199, 24
  %201 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %195, i64 %196, i32 0, i32 0, i64 1
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl nuw nsw i32 %203, 16
  %205 = or i32 %204, %200
  %206 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %195, i64 %196, i32 0, i32 0, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %205, %209
  %211 = getelementptr inbounds %"struct.OT::IntType.9", %"struct.OT::IntType.9"* %195, i64 %196, i32 0, i32 0, i64 3
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = or i32 %210, %213
  %215 = zext i8 %176 to i32
  %216 = shl nuw i32 %215, 24
  %217 = zext i8 %180 to i32
  %218 = shl nuw nsw i32 %217, 16
  %219 = or i32 %218, %216
  %220 = zext i8 %185 to i32
  %221 = shl nuw nsw i32 %220, 8
  %222 = or i32 %219, %221
  %223 = zext i8 %190 to i32
  %224 = or i32 %222, %223
  br label %243

225:                                              ; preds = %169
  %226 = bitcast %"struct.OT::UnsizedArrayOf.287"* %102 to i16*
  %227 = load i16, i16* %226, align 1
  %228 = tail call i16 @llvm.bswap.i16(i16 %227) #10
  %229 = zext i16 %228 to i64
  %230 = shl nuw nsw i64 %229, 1
  %231 = load i16, i16* %28, align 1
  %232 = tail call i16 @llvm.bswap.i16(i16 %231) #10
  %233 = bitcast %"struct.OT::UnsizedArrayOf.287"* %102 to %"struct.OT::IntType"*
  %234 = zext i16 %232 to i64
  %235 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %233, i64 %234
  %236 = bitcast %"struct.OT::IntType"* %235 to i16*
  %237 = load i16, i16* %236, align 1
  %238 = tail call i16 @llvm.bswap.i16(i16 %237) #10
  %239 = zext i16 %238 to i32
  %240 = shl nuw nsw i32 %239, 1
  %241 = zext i16 %228 to i32
  %242 = shl nuw nsw i32 %241, 1
  br label %243

243:                                              ; preds = %175, %225
  %244 = phi i32 [ %214, %175 ], [ %240, %225 ]
  %245 = phi i64 [ %192, %175 ], [ %230, %225 ]
  %246 = phi i32 [ %224, %175 ], [ %242, %225 ]
  %247 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %171, i64 %245
  %248 = sub i32 %244, %246
  %249 = icmp eq i32 %248, -1
  br i1 %249, label %265, label %250

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"struct.OT::IntType.6", %"struct.OT::IntType.6"* %247, i64 0, i32 0, i32 0
  %252 = icmp eq i32 %248, 0
  br i1 %252, label %265, label %253

253:                                              ; preds = %250
  %254 = icmp ugt i8* %5, %251
  %255 = icmp ult i8* %9, %251
  %256 = or i1 %254, %255
  br i1 %256, label %265, label %257, !prof !6

257:                                              ; preds = %253
  %258 = ptrtoint %"struct.OT::IntType.6"* %247 to i64
  %259 = sub i64 %12, %258
  %260 = trunc i64 %259 to i32
  %261 = icmp ugt i32 %248, %260
  br i1 %261, label %265, label %262, !prof !2

262:                                              ; preds = %257
  %263 = sub i32 %136, %248
  store i32 %263, i32* %18, align 8
  %264 = icmp sgt i32 %263, 0
  br label %265

265:                                              ; preds = %262, %257, %253, %250, %243, %121, %127, %107, %113, %60, %83, %87, %92, %35, %52, %57, %2, %7, %11, %132, %118, %26, %22, %17
  %266 = phi i1 [ false, %132 ], [ false, %118 ], [ false, %26 ], [ false, %22 ], [ false, %17 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ false, %57 ], [ false, %52 ], [ false, %35 ], [ false, %92 ], [ false, %87 ], [ false, %83 ], [ false, %60 ], [ false, %113 ], [ false, %107 ], [ false, %127 ], [ false, %121 ], [ false, %243 ], [ true, %250 ], [ false, %257 ], [ false, %253 ], [ %264, %262 ]
  ret i1 %266
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #4

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 4001, i32 4000000}
!7 = !{!"branch_weights", i32 1073205, i32 2146410443}
!8 = !{!"branch_weights", i32 6003000, i32 -294967296}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12trim_paddingEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12trim_paddingEv"}
!12 = distinct !{!12, !13, !"_ZNK2OT4glyf5Glyph12trim_paddingEv: argument 0"}
!13 = distinct !{!13, !"_ZNK2OT4glyf5Glyph12trim_paddingEv"}
!14 = !{!12}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12get_iteratorEv: argument 0"}
!17 = distinct !{!17, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12get_iteratorEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN9hb_iter_tIN2OT4glyf16composite_iter_tERKNS1_19CompositeGlyphChainEEppEi: argument 0"}
!20 = distinct !{!20, !"_ZN9hb_iter_tIN2OT4glyf16composite_iter_tERKNS1_19CompositeGlyphChainEEppEi"}
!21 = !{!"branch_weights", i32 4000000, i32 4001}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK2OT4glyf5Glyph22get_composite_iteratorEv: argument 0"}
!24 = distinct !{!24, !"_ZNK2OT4glyf5Glyph22get_composite_iteratorEv"}
!25 = !{!26, !23}
!26 = distinct !{!26, !27, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12get_iteratorEv: argument 0"}
!27 = distinct !{!27, !"_ZNK2OT4glyf5Glyph14CompositeGlyph12get_iteratorEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK24hb_iter_fallback_mixin_tIN2OT4glyf16composite_iter_tERKNS1_19CompositeGlyphChainEE7__end__Ev: argument 0"}
!30 = distinct !{!30, !"_ZNK24hb_iter_fallback_mixin_tIN2OT4glyf16composite_iter_tERKNS1_19CompositeGlyphChainEE7__end__Ev"}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = distinct !{!33, !32}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !32}
!36 = distinct !{!36, !32}
!37 = distinct !{!37, !32}
!38 = distinct !{!38, !32}
!39 = distinct !{!39, !32}
!40 = distinct !{!40, !32}
!41 = distinct !{!41, !32}
!42 = distinct !{!42, !32}
!43 = distinct !{!43, !32}
!44 = distinct !{!44, !32}
!45 = distinct !{!45, !32}
!46 = distinct !{!46, !32}
!47 = distinct !{!47, !32}
!48 = distinct !{!48, !32}
!49 = distinct !{!49, !32}
!50 = distinct !{!50, !32}
!51 = distinct !{!51, !32}
!52 = distinct !{!52, !32}
!53 = distinct !{!53, !32}
!54 = distinct !{!54, !32}
!55 = distinct !{!55, !32}
!56 = distinct !{!56, !32}
!57 = distinct !{!57, !32}
!58 = !{!"branch_weights", i32 4008002, i32 4000000}
!59 = !{!"branch_weights", i32 -102759400, i32 4193255}
!60 = !{!"branch_weights", i32 -294967296, i32 6003000}
!61 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 0"}
!64 = distinct !{!64, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_"}
!65 = !{!66}
!66 = distinct !{!66, !64, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 1"}
!67 = !{!63, !66}
!68 = !{!69, !63}
!69 = distinct !{!69, !70, !"_ZL11sort_r_swapPcS_m: argument 0"}
!70 = distinct !{!70, !"_ZL11sort_r_swapPcS_m"}
!71 = !{!72, !66}
!72 = distinct !{!72, !70, !"_ZL11sort_r_swapPcS_m: argument 1"}
!73 = distinct !{!73, !74}
!74 = !{!"llvm.loop.isvectorized", i32 1}
!75 = distinct !{!75, !76, !74}
!76 = !{!"llvm.loop.unroll.runtime.disable"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZL11sort_r_swapPcS_m: argument 0"}
!79 = distinct !{!79, !"_ZL11sort_r_swapPcS_m"}
!80 = !{!81}
!81 = distinct !{!81, !79, !"_ZL11sort_r_swapPcS_m: argument 1"}
!82 = distinct !{!82, !74}
!83 = distinct !{!83, !76, !74}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZL11sort_r_swapPcS_m: argument 0"}
!86 = distinct !{!86, !"_ZL11sort_r_swapPcS_m"}
!87 = !{!88}
!88 = distinct !{!88, !86, !"_ZL11sort_r_swapPcS_m: argument 1"}
!89 = distinct !{!89, !74}
!90 = distinct !{!90, !76, !74}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZL11sort_r_swapPcS_m: argument 1"}
!93 = distinct !{!93, !"_ZL11sort_r_swapPcS_m"}
!94 = !{!95}
!95 = distinct !{!95, !93, !"_ZL11sort_r_swapPcS_m: argument 0"}
!96 = distinct !{!96, !74}
!97 = distinct !{!97, !76, !74}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZL11sort_r_swapPcS_m: argument 0"}
!100 = distinct !{!100, !"_ZL11sort_r_swapPcS_m"}
!101 = !{!102}
!102 = distinct !{!102, !100, !"_ZL11sort_r_swapPcS_m: argument 1"}
!103 = distinct !{!103, !74}
!104 = distinct !{!104, !76, !74}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZL11sort_r_swapPcS_m: argument 0"}
!107 = distinct !{!107, !"_ZL11sort_r_swapPcS_m"}
!108 = !{!109}
!109 = distinct !{!109, !107, !"_ZL11sort_r_swapPcS_m: argument 1"}
!110 = distinct !{!110, !74}
!111 = distinct !{!111, !76, !74}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZL11sort_r_swapPcS_m: argument 0"}
!114 = distinct !{!114, !"_ZL11sort_r_swapPcS_m"}
!115 = !{!116}
!116 = distinct !{!116, !114, !"_ZL11sort_r_swapPcS_m: argument 1"}
!117 = distinct !{!117, !74}
!118 = distinct !{!118, !76, !74}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZL11sort_r_swapPcS_m: argument 0"}
!121 = distinct !{!121, !"_ZL11sort_r_swapPcS_m"}
!122 = !{!123}
!123 = distinct !{!123, !121, !"_ZL11sort_r_swapPcS_m: argument 1"}
!124 = distinct !{!124, !74}
!125 = distinct !{!125, !76, !74}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZL11sort_r_swapPcS_m: argument 0"}
!128 = distinct !{!128, !"_ZL11sort_r_swapPcS_m"}
!129 = !{!130}
!130 = distinct !{!130, !128, !"_ZL11sort_r_swapPcS_m: argument 1"}
!131 = distinct !{!131, !74}
!132 = distinct !{!132, !76, !74}
!133 = !{!"branch_weights", i32 8382319, i32 -106948466}
!134 = distinct !{!134, !32}
!135 = distinct !{!135, !32}
!136 = distinct !{!136, !32}
!137 = distinct !{!137, !32}
!138 = distinct !{!138, !32}
!139 = distinct !{!139, !32}
!140 = distinct !{!140, !32}
!141 = distinct !{!141, !32}
!142 = !{!"branch_weights", i32 4001, i32 1}
!143 = distinct !{!143, !74}
!144 = distinct !{!144, !32}
!145 = distinct !{!145, !76, !74}
!146 = !{!147, !149}
!147 = distinct !{!147, !148, !"_ZL11sort_r_swapPcS_m: argument 0"}
!148 = distinct !{!148, !"_ZL11sort_r_swapPcS_m"}
!149 = distinct !{!149, !150, !"_ZL14sort_r_cmpswapIJPvEEiPcS1_mPFiPKvS3_DpT_ES5_: argument 0"}
!150 = distinct !{!150, !"_ZL14sort_r_cmpswapIJPvEEiPcS1_mPFiPKvS3_DpT_ES5_"}
!151 = !{!152, !153}
!152 = distinct !{!152, !148, !"_ZL11sort_r_swapPcS_m: argument 1"}
!153 = distinct !{!153, !150, !"_ZL14sort_r_cmpswapIJPvEEiPcS1_mPFiPKvS3_DpT_ES5_: argument 1"}
!154 = !{!155}
!155 = distinct !{!155, !156, !"_ZL11sort_r_swapPcS_m: argument 0"}
!156 = distinct !{!156, !"_ZL11sort_r_swapPcS_m"}
!157 = !{!158}
!158 = distinct !{!158, !156, !"_ZL11sort_r_swapPcS_m: argument 1"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZL11sort_r_swapPcS_m: argument 0"}
!161 = distinct !{!161, !"_ZL11sort_r_swapPcS_m"}
!162 = !{!163}
!163 = distinct !{!163, !161, !"_ZL11sort_r_swapPcS_m: argument 1"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZL11sort_r_swapPcS_m: argument 0"}
!166 = distinct !{!166, !"_ZL11sort_r_swapPcS_m"}
!167 = !{!168}
!168 = distinct !{!168, !166, !"_ZL11sort_r_swapPcS_m: argument 1"}
!169 = !{!170}
!170 = distinct !{!170, !171, !"_ZL11sort_r_swapPcS_m: argument 0"}
!171 = distinct !{!171, !"_ZL11sort_r_swapPcS_m"}
!172 = !{!173}
!173 = distinct !{!173, !171, !"_ZL11sort_r_swapPcS_m: argument 1"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZL11sort_r_swapPcS_m: argument 0"}
!176 = distinct !{!176, !"_ZL11sort_r_swapPcS_m"}
!177 = !{!178}
!178 = distinct !{!178, !176, !"_ZL11sort_r_swapPcS_m: argument 1"}
!179 = distinct !{!179, !74}
!180 = distinct !{!180, !76, !74}
!181 = !{!182}
!182 = distinct !{!182, !183, !"_ZL11sort_r_swapPcS_m: argument 0"}
!183 = distinct !{!183, !"_ZL11sort_r_swapPcS_m"}
!184 = !{!185}
!185 = distinct !{!185, !183, !"_ZL11sort_r_swapPcS_m: argument 1"}
!186 = distinct !{!186, !74}
!187 = distinct !{!187, !76, !74}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZL11sort_r_swapPcS_m: argument 0"}
!190 = distinct !{!190, !"_ZL11sort_r_swapPcS_m"}
!191 = !{!192}
!192 = distinct !{!192, !190, !"_ZL11sort_r_swapPcS_m: argument 1"}
!193 = distinct !{!193, !74}
!194 = distinct !{!194, !76, !74}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZL11sort_r_swapPcS_m: argument 0"}
!197 = distinct !{!197, !"_ZL11sort_r_swapPcS_m"}
!198 = !{!199}
!199 = distinct !{!199, !197, !"_ZL11sort_r_swapPcS_m: argument 1"}
!200 = distinct !{!200, !74}
!201 = distinct !{!201, !76, !74}
