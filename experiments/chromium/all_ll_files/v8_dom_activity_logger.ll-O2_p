; ModuleID = '../../third_party/blink/renderer/platform/bindings/v8_dom_activity_logger.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/v8_dom_activity_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<int, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> >, WTF::IntHash<int>, WTF::UnsignedWithZeroKeyHashTraits<int>, WTF::HashTraits<std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<int, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> >, WTF::IntHash<int>, WTF::UnsignedWithZeroKeyHashTraits<int>, WTF::HashTraits<std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.265" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::String, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::String, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::V8DOMActivityLogger" = type { i32 (...)** }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::V8DOMActivityLogger"* }
%"struct.WTF::KeyValuePair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.8" = type { %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::HashTable.5" = type <{ %"struct.WTF::KeyValuePair.8"*, i32, i32, i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.13" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::KURL"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Isolate" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.259, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.259 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.28" }
%"class.blink::HeapHashMap.28" = type { %"class.WTF::HashMap.31" }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.34"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.34" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.37", i32, [4 x i8], %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.214", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.153", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.147", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { i64 }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { float }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.156", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.165" }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.195" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.91"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.98"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.252" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.213 }
%class.scoped_refptr.213 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.220", %"class.std::__1::unique_ptr.230", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.242", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.245" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.22" }
%"class.WTF::HashMap.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ %"struct.WTF::KeyValuePair.25"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.25" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.220" = type { %"class.WTF::HashMap.223" }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.227" }
%"class.blink::TraceWrapperV8Reference.227" = type { %"class.v8::TracedReference.228" }
%"class.v8::TracedReference.228" = type { %"class.v8::BasicTracedReference.229" }
%"class.v8::BasicTracedReference.229" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.233" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.242" = type { %"class.v8::Persistent.243" }
%"class.v8::Persistent.243" = type { %"class.v8::PersistentBase.244" }
%"class.v8::PersistentBase.244" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::HeapHashMap.245" = type { %"class.WTF::HashMap.248" }
%"class.WTF::HashMap.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"struct.WTF::KeyValuePair.251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.251" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.261" }
%"class.blink::Persistent.261" = type { %"class.blink::PersistentBase.262" }
%"class.blink::PersistentBase.262" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERiS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"chrome-extension\00", align 1
@_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map = internal global i64 0, align 8
@_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map = internal global %"class.WTF::StaticSingleton.265" zeroinitializer, align 8
@_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v85LocalINS1_5ValueEEEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = v8::Local<v8::Value>]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEEEEPKcv = private unnamed_addr constant [176 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [184 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, std::__1::unique_ptr<blink::V8DOMActivityLogger, std::__1::default_delete<blink::V8DOMActivityLogger> > >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8DOMActivityLogger9LogMethodEPKcN2v820FunctionCallbackInfoINS3_5ValueEEE(%"class.blink::V8DOMActivityLogger"*, i8*, %"class.v8::FunctionCallbackInfo"* nocapture readonly byval(%"class.v8::FunctionCallbackInfo") align 8) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %103, label %8

8:                                                ; preds = %3
  %9 = zext i32 %6 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm(i64 %9) #8
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v85LocalINS1_5ValueEEEEEPKcv, i64 0, i64 0)) #8
  %12 = bitcast i8* %11 to %"class.v8::Local"*
  %13 = icmp sgt i32 %6, 0
  br i1 %13, label %14, label %103

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %2, i64 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = sext i32 %6 to i64
  %18 = icmp ult i32 %6, 4
  br i1 %18, label %19, label %21

19:                                               ; preds = %101, %14
  %20 = phi i64 [ 0, %14 ], [ %22, %101 ]
  br label %136

21:                                               ; preds = %14
  %22 = and i64 %17, -4
  %23 = add nsw i64 %22, -4
  %24 = lshr exact i64 %23, 2
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 3
  %27 = icmp ult i64 %23, 12
  br i1 %27, label %80, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %76, %30 ]
  %32 = phi <2 x i64> [ <i64 0, i64 1>, %28 ], [ %77, %30 ]
  %33 = phi i64 [ %29, %28 ], [ %78, %30 ]
  %34 = add <2 x i64> %32, <i64 2, i64 2>
  %35 = getelementptr inbounds i64, i64* %16, <2 x i64> %32
  %36 = getelementptr inbounds i64, i64* %16, <2 x i64> %34
  %37 = ptrtoint <2 x i64*> %35 to <2 x i64>
  %38 = ptrtoint <2 x i64*> %36 to <2 x i64>
  %39 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %31
  %40 = bitcast %"class.v8::Local"* %39 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %39, i64 2
  %42 = bitcast %"class.v8::Local"* %41 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %42, align 8
  %43 = or i64 %31, 4
  %44 = add <2 x i64> %32, <i64 4, i64 4>
  %45 = add <2 x i64> %32, <i64 6, i64 6>
  %46 = getelementptr inbounds i64, i64* %16, <2 x i64> %44
  %47 = getelementptr inbounds i64, i64* %16, <2 x i64> %45
  %48 = ptrtoint <2 x i64*> %46 to <2 x i64>
  %49 = ptrtoint <2 x i64*> %47 to <2 x i64>
  %50 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %43
  %51 = bitcast %"class.v8::Local"* %50 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %51, align 8
  %52 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %50, i64 2
  %53 = bitcast %"class.v8::Local"* %52 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %53, align 8
  %54 = or i64 %31, 8
  %55 = add <2 x i64> %32, <i64 8, i64 8>
  %56 = add <2 x i64> %32, <i64 10, i64 10>
  %57 = getelementptr inbounds i64, i64* %16, <2 x i64> %55
  %58 = getelementptr inbounds i64, i64* %16, <2 x i64> %56
  %59 = ptrtoint <2 x i64*> %57 to <2 x i64>
  %60 = ptrtoint <2 x i64*> %58 to <2 x i64>
  %61 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %54
  %62 = bitcast %"class.v8::Local"* %61 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %61, i64 2
  %64 = bitcast %"class.v8::Local"* %63 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %64, align 8
  %65 = or i64 %31, 12
  %66 = add <2 x i64> %32, <i64 12, i64 12>
  %67 = add <2 x i64> %32, <i64 14, i64 14>
  %68 = getelementptr inbounds i64, i64* %16, <2 x i64> %66
  %69 = getelementptr inbounds i64, i64* %16, <2 x i64> %67
  %70 = ptrtoint <2 x i64*> %68 to <2 x i64>
  %71 = ptrtoint <2 x i64*> %69 to <2 x i64>
  %72 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %65
  %73 = bitcast %"class.v8::Local"* %72 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %73, align 8
  %74 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %72, i64 2
  %75 = bitcast %"class.v8::Local"* %74 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8
  %76 = add i64 %31, 16
  %77 = add <2 x i64> %32, <i64 16, i64 16>
  %78 = add i64 %33, -4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %30, !llvm.loop !2

80:                                               ; preds = %30, %21
  %81 = phi i64 [ 0, %21 ], [ %76, %30 ]
  %82 = phi <2 x i64> [ <i64 0, i64 1>, %21 ], [ %77, %30 ]
  %83 = icmp eq i64 %26, 0
  br i1 %83, label %101, label %84

84:                                               ; preds = %80, %84
  %85 = phi i64 [ %97, %84 ], [ %81, %80 ]
  %86 = phi <2 x i64> [ %98, %84 ], [ %82, %80 ]
  %87 = phi i64 [ %99, %84 ], [ %26, %80 ]
  %88 = add <2 x i64> %86, <i64 2, i64 2>
  %89 = getelementptr inbounds i64, i64* %16, <2 x i64> %86
  %90 = getelementptr inbounds i64, i64* %16, <2 x i64> %88
  %91 = ptrtoint <2 x i64*> %89 to <2 x i64>
  %92 = ptrtoint <2 x i64*> %90 to <2 x i64>
  %93 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %85
  %94 = bitcast %"class.v8::Local"* %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8
  %95 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %93, i64 2
  %96 = bitcast %"class.v8::Local"* %95 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8
  %97 = add i64 %85, 4
  %98 = add <2 x i64> %86, <i64 4, i64 4>
  %99 = add i64 %87, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %84, !llvm.loop !4

101:                                              ; preds = %84, %80
  %102 = icmp eq i64 %22, %17
  br i1 %102, label %103, label %19

103:                                              ; preds = %136, %101, %3, %8
  %104 = phi %"class.v8::Local"* [ %12, %8 ], [ null, %3 ], [ %12, %101 ], [ %12, %136 ]
  %105 = phi i8* [ %11, %8 ], [ null, %3 ], [ %11, %101 ], [ %11, %136 ]
  %106 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #8
  %107 = icmp eq i8* %1, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %103
  %109 = tail call i64 @strlen(i8* nonnull %1) #9
  br label %110

110:                                              ; preds = %103, %108
  %111 = phi i64 [ %109, %108 ], [ 0, %103 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %1, i64 %111) #8
  %112 = bitcast %"class.blink::V8DOMActivityLogger"* %0 to void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)***
  %113 = load void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)**, void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)*, void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)** %113, i64 4
  %115 = load void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)*, void (%"class.blink::V8DOMActivityLogger"*, %"class.WTF::String"*, i32, %"class.v8::Local"*)** %114, align 8
  call void %115(%"class.blink::V8DOMActivityLogger"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %6, %"class.v8::Local"* %104) #8
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #8
  br label %132

132:                                              ; preds = %110, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  %133 = icmp eq %"class.v8::Local"* %104, null
  br i1 %133, label %135, label %134, !prof !6

134:                                              ; preds = %132
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %105) #8
  br label %135

135:                                              ; preds = %132, %134
  ret void

136:                                              ; preds = %19, %136
  %137 = phi i64 [ %142, %136 ], [ %20, %19 ]
  %138 = getelementptr inbounds i64, i64* %16, i64 %137
  %139 = ptrtoint i64* %138 to i64
  %140 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %12, i64 %137
  %141 = bitcast %"class.v8::Local"* %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp slt i64 %142, %17
  br i1 %143, label %136, label %103, !llvm.loop !7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8DOMActivityLogger17SetActivityLoggerEiRKN3WTF6StringENSt3__110unique_ptrIS0_NS5_14default_deleteIS0_EEEE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::V8DOMActivityLogger"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::V8DOMActivityLogger"* %2, %"class.blink::V8DOMActivityLogger"** %6, align 8
  store i32 %0, i32* %5, align 4
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !9

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  br label %15

15:                                               ; preds = %8, %11, %14
  %16 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERiS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map to %"class.WTF::HashTable"*), i32* nonnull dereferenceable(4) %5, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #8
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %16, 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %60

20:                                               ; preds = %15
  %21 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %16, 0
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %6, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.blink::V8DOMActivityLogger"* %26, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::V8DOMActivityLogger"* %26 to void (%"class.blink::V8DOMActivityLogger"*)***
  %31 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %31, i64 1
  %33 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %32, align 8
  call void %33(%"class.blink::V8DOMActivityLogger"* nonnull %26) #8
  br label %60

34:                                               ; preds = %3
  %35 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to i8*) acquire, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %41, !prof !9

37:                                               ; preds = %34
  %38 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.265", %"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  br label %41

41:                                               ; preds = %34, %37, %40
  %42 = call { %"struct.WTF::KeyValuePair.8"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.5"* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to %"class.WTF::HashTable.5"*), %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #8
  %43 = extractvalue { %"struct.WTF::KeyValuePair.8"*, i8 } %42, 1
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %41
  %47 = extractvalue { %"struct.WTF::KeyValuePair.8"*, i8 } %42, 0
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %47, i64 0, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %6, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %"class.blink::V8DOMActivityLogger"* %52, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::V8DOMActivityLogger"* %52 to void (%"class.blink::V8DOMActivityLogger"*)***
  %57 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %57, i64 1
  %59 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %58, align 8
  call void %59(%"class.blink::V8DOMActivityLogger"* nonnull %52) #8
  br label %60

60:                                               ; preds = %55, %46, %41, %29, %20, %15
  %61 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %6, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %6, align 8
  %62 = icmp eq %"class.blink::V8DOMActivityLogger"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::V8DOMActivityLogger"* %61 to void (%"class.blink::V8DOMActivityLogger"*)***
  %65 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %65, i64 1
  %67 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %66, align 8
  call void %67(%"class.blink::V8DOMActivityLogger"* nonnull %61) #8
  br label %68

68:                                               ; preds = %60, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger14ActivityLoggerEiRKN3WTF6StringE(i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %81, label %4

4:                                                ; preds = %2
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !9

7:                                                ; preds = %4
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  br label %11

11:                                               ; preds = %4, %7, %10
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map to %"struct.WTF::KeyValuePair"**), align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %13, label %70, label %15

15:                                               ; preds = %11
  %16 = add i32 %14, -1
  %17 = zext i32 %16 to i64
  %18 = shl i32 %0, 15
  %19 = xor i32 %18, -1
  %20 = add i32 %19, %0
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = and i32 %16, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %0
  br i1 %36, label %65, label %37

37:                                               ; preds = %15
  %38 = xor i32 %30, -1
  %39 = lshr i32 %28, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i32 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i32 %52, 2147483647
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %17
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %0
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %15
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %15 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = zext i32 %14 to i64
  br label %73

70:                                               ; preds = %51, %65, %11
  %71 = zext i32 %14 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %71
  br label %73

73:                                               ; preds = %68, %70
  %74 = phi i64 [ %69, %68 ], [ %71, %70 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ %66, %68 ], [ %72, %70 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %74
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %75, %76
  br i1 %77, label %107, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %79, align 8
  br label %107

81:                                               ; preds = %2
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %107, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %85
  %90 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to i8*) acquire, align 8
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %96, !prof !9

92:                                               ; preds = %89
  %93 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.265", %"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  br label %96

96:                                               ; preds = %89, %92, %95
  %97 = tail call { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.5"* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to %"class.WTF::HashTable.5"*), %"class.WTF::String"* dereferenceable(8) %1) #8
  %98 = extractvalue { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } %97, 0
  %99 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to %"struct.WTF::KeyValuePair.8"**), align 8
  %100 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.265", %"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %99, i64 %101
  %103 = icmp eq %"struct.WTF::KeyValuePair.8"* %98, %102
  br i1 %103, label %107, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %105, align 8
  br label %107

107:                                              ; preds = %81, %104, %96, %78, %73, %85
  %108 = phi %"class.blink::V8DOMActivityLogger"* [ null, %85 ], [ %80, %78 ], [ null, %73 ], [ %106, %104 ], [ null, %96 ], [ null, %81 ]
  ret %"class.blink::V8DOMActivityLogger"* %108
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger14ActivityLoggerEiRKNS_4KURLE(i32, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = call %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger14ActivityLoggerEiRKN3WTF6StringE(i32 %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %76, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %76

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #8
  br label %76

26:                                               ; preds = %2
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 16, i32* %30, align 8
  %31 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %1, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #8
  br i1 %31, label %32, label %79

32:                                               ; preds = %26
  %33 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %1) #8
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  %42 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to i8*) acquire, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48, !prof !9

44:                                               ; preds = %41
  %45 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.265", %"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map) #8
  br label %48

48:                                               ; preds = %47, %44, %41
  %49 = call { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.5"* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to %"class.WTF::HashTable.5"*), %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %50 = extractvalue { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } %49, 0
  %51 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map to %"struct.WTF::KeyValuePair.8"**), align 8
  %52 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.265", %"class.WTF::StaticSingleton.265"* @_ZZN5blinkL30DomActivityLoggersForMainWorldEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %51, i64 %53
  %55 = icmp eq %"struct.WTF::KeyValuePair.8"* %50, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %57, align 8
  br label %59

59:                                               ; preds = %37, %48, %56
  %60 = phi %"class.blink::V8DOMActivityLogger"* [ null, %48 ], [ %58, %56 ], [ null, %37 ]
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #8
  br label %76

76:                                               ; preds = %75, %72, %59, %32, %25, %22, %7
  %77 = phi i8* [ %8, %7 ], [ %8, %22 ], [ %8, %25 ], [ %33, %32 ], [ %33, %59 ], [ %33, %72 ], [ %33, %75 ]
  %78 = phi %"class.blink::V8DOMActivityLogger"* [ %10, %7 ], [ %10, %22 ], [ %10, %25 ], [ null, %32 ], [ %60, %59 ], [ %60, %72 ], [ %60, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  br label %79

79:                                               ; preds = %76, %26
  %80 = phi %"class.blink::V8DOMActivityLogger"* [ null, %26 ], [ %78, %76 ]
  ret %"class.blink::V8DOMActivityLogger"* %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger21CurrentActivityLoggerEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.v8::HandleScope", align 8
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %3 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %2) #8
  br i1 %3, label %4, label %17

4:                                                ; preds = %0
  %5 = bitcast %"class.v8::HandleScope"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %"class.v8::HandleScope"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %1, %"class.v8::Isolate"* %2) #8
  %7 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %8 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7)
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %9, align 8
  %11 = icmp eq %"class.blink::V8PerContextData"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %10, i64 0, i32 6
  %14 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %13, align 8
  br label %15

15:                                               ; preds = %4, %12
  %16 = phi %"class.blink::V8DOMActivityLogger"* [ %14, %12 ], [ null, %4 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  br label %17

17:                                               ; preds = %0, %15
  %18 = phi %"class.blink::V8DOMActivityLogger"* [ %16, %15 ], [ null, %0 ]
  ret %"class.blink::V8DOMActivityLogger"* %18
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger36CurrentActivityLoggerIfIsolatedWorldEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %0) #8
  br i1 %2, label %3, label %19

3:                                                ; preds = %1
  %4 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %5 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %4)
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 2, i32 0
  %7 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %12, label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %13, align 8
  %15 = icmp eq %"class.blink::V8PerContextData"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %14, i64 0, i32 6
  %18 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %17, align 8
  br label %19

19:                                               ; preds = %3, %12, %16, %1
  %20 = phi %"class.blink::V8DOMActivityLogger"* [ null, %1 ], [ null, %3 ], [ %18, %16 ], [ null, %12 ]
  ret %"class.blink::V8DOMActivityLogger"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger36CurrentActivityLoggerIfIsolatedWorldEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %2 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #8
  br i1 %2, label %3, label %19

3:                                                ; preds = %0
  %4 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %5 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %4) #8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 2, i32 0
  %7 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %12, label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %13, align 8
  %15 = icmp eq %"class.blink::V8PerContextData"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %14, i64 0, i32 6
  %18 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %17, align 8
  br label %19

19:                                               ; preds = %0, %3, %12, %16
  %20 = phi %"class.blink::V8DOMActivityLogger"* [ null, %0 ], [ null, %3 ], [ %18, %16 ], [ null, %12 ]
  ret %"class.blink::V8DOMActivityLogger"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8DOMActivityLogger"* @_ZN5blink19V8DOMActivityLogger49CurrentActivityLoggerIfIsolatedWorldForMainThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !9

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map) #8
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL34DomActivityLoggersForIsolatedWorldEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #8
  %12 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %11) #8
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %11) #8
  %15 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %14) #8
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %15, i64 0, i32 2, i32 0
  %17 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %29

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %15, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %23, align 8
  %25 = icmp eq %"class.blink::V8PerContextData"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %24, i64 0, i32 6
  %28 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %27, align 8
  br label %29

29:                                               ; preds = %26, %22, %13, %10, %7
  %30 = phi %"class.blink::V8DOMActivityLogger"* [ null, %7 ], [ null, %10 ], [ null, %13 ], [ %28, %26 ], [ null, %22 ]
  ret %"class.blink::V8DOMActivityLogger"* %30
}

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERiS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483647
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %110, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, 2147483646
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 2147483647
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 2147483647, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %86, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %89, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %88, i64* %91, align 8
  %92 = icmp eq %"class.blink::V8DOMActivityLogger"* %90, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %81
  %94 = bitcast %"class.blink::V8DOMActivityLogger"* %90 to void (%"class.blink::V8DOMActivityLogger"*)***
  %95 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %95, i64 1
  %97 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %96, align 8
  tail call void %97(%"class.blink::V8DOMActivityLogger"* nonnull %90) #8
  br label %98

98:                                               ; preds = %81, %93
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, %101
  %105 = shl i32 %104, 1
  %106 = load i32, i32* %12, align 8
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %110

110:                                              ; preds = %50, %98, %108
  %111 = phi i8 [ 1, %98 ], [ 1, %108 ], [ 0, %50 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %83, %98 ], [ %109, %108 ], [ %52, %50 ]
  %113 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %112, 0
  %114 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %113, i8 %111, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 2147483647, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 2147483647, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 2147483647, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 2147483647, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 2147483647, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %78
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %54

18:                                               ; preds = %154
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %155, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %158, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %156, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %50, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %48, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %45, %29
  %32 = phi i64 [ 0, %29 ], [ %46, %45 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483646
  br i1 %35, label %45, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %37, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %37, align 8
  %39 = icmp eq %"class.blink::V8DOMActivityLogger"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::V8DOMActivityLogger"* %38 to void (%"class.blink::V8DOMActivityLogger"*)***
  %42 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %42, i64 1
  %44 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %43, align 8
  tail call void %44(%"class.blink::V8DOMActivityLogger"* nonnull %38) #8
  br label %45

45:                                               ; preds = %40, %36, %31
  %46 = add nuw nsw i64 %32, 1
  %47 = icmp eq i64 %46, %30
  br i1 %47, label %48, label %31

48:                                               ; preds = %45, %27
  %49 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #8
  br label %50

50:                                               ; preds = %20, %48
  %51 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, -2147483648
  store i32 %53, i32* %51, align 8
  ret %"struct.WTF::KeyValuePair"* %23

54:                                               ; preds = %13, %154
  %55 = phi i64 [ %17, %13 ], [ %155, %154 ]
  %56 = phi i32 [ %7, %13 ], [ %156, %154 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %157, %154 ]
  %58 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %158, %154 ]
  %59 = phi i32 [ 0, %13 ], [ %159, %154 ]
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 %60, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = or i32 %62, 1
  %64 = icmp eq i32 %63, 2147483647
  br i1 %64, label %154, label %65

65:                                               ; preds = %54
  %66 = shl i32 %62, 15
  %67 = xor i32 %66, -1
  %68 = add i32 %62, %67
  %69 = lshr i32 %68, 10
  %70 = xor i32 %69, %68
  %71 = mul i32 %70, 9
  %72 = lshr i32 %71, 6
  %73 = xor i32 %72, %71
  %74 = shl i32 %73, 11
  %75 = xor i32 %74, -1
  %76 = add i32 %73, %75
  %77 = lshr i32 %76, 16
  %78 = xor i32 %77, %76
  %79 = and i32 %78, %14
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %80
  %82 = ptrtoint %"struct.WTF::KeyValuePair"* %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 2147483647
  br i1 %85, label %103, label %86

86:                                               ; preds = %65
  %87 = xor i32 %78, -1
  %88 = lshr i32 %76, 23
  %89 = add i32 %88, %87
  %90 = shl i32 %89, 12
  %91 = xor i32 %90, %89
  %92 = lshr i32 %91, 7
  %93 = xor i32 %92, %91
  %94 = shl i32 %93, 2
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 20
  %97 = xor i32 %96, %95
  %98 = or i32 %97, 1
  %99 = zext i32 %98 to i64
  br label %109

100:                                              ; preds = %116
  %101 = ptrtoint %"struct.WTF::KeyValuePair"* %123 to i64
  %102 = inttoptr i64 %118 to %"struct.WTF::KeyValuePair"*
  br label %103

103:                                              ; preds = %100, %65
  %104 = phi i64 [ %101, %100 ], [ %82, %65 ]
  %105 = phi %"struct.WTF::KeyValuePair"* [ %102, %100 ], [ null, %65 ]
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %105, null
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %108 = select i1 %106, i64 %104, i64 %107
  br label %128

109:                                              ; preds = %116, %86
  %110 = phi i64 [ 0, %86 ], [ %118, %116 ]
  %111 = phi i32 [ %84, %86 ], [ %126, %116 ]
  %112 = phi i64 [ %82, %86 ], [ %124, %116 ]
  %113 = phi i64 [ %80, %86 ], [ %122, %116 ]
  %114 = phi i64 [ 0, %86 ], [ %120, %116 ]
  %115 = icmp eq i32 %111, %62
  br i1 %115, label %128, label %116

116:                                              ; preds = %109
  %117 = icmp eq i32 %111, 2147483646
  %118 = select i1 %117, i64 %112, i64 %110
  %119 = icmp eq i64 %114, 0
  %120 = select i1 %119, i64 %99, i64 %114
  %121 = add i64 %120, %113
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %122
  %124 = ptrtoint %"struct.WTF::KeyValuePair"* %123 to i64
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 2147483647
  br i1 %127, label %100, label %109

128:                                              ; preds = %109, %103
  %129 = phi i64 [ %108, %103 ], [ %112, %109 ]
  %130 = inttoptr i64 %129 to %"struct.WTF::KeyValuePair"*
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %131, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %131, align 8
  %133 = icmp eq %"class.blink::V8DOMActivityLogger"* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %128
  %135 = bitcast %"class.blink::V8DOMActivityLogger"* %132 to void (%"class.blink::V8DOMActivityLogger"*)***
  %136 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %136, i64 1
  %138 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %137, align 8
  tail call void %138(%"class.blink::V8DOMActivityLogger"* nonnull %132) #8
  br label %139

139:                                              ; preds = %128, %134
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 0
  %141 = load i32, i32* %61, align 8
  store i32 %141, i32* %140, align 8
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 %60, i32 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %148, i64 %60
  %150 = icmp eq %"struct.WTF::KeyValuePair"* %149, %3
  %151 = select i1 %150, %"struct.WTF::KeyValuePair"* %130, %"struct.WTF::KeyValuePair"* %58
  %152 = load i32, i32* %6, align 8
  %153 = ptrtoint %"struct.WTF::KeyValuePair"* %148 to i64
  br label %154

154:                                              ; preds = %54, %139
  %155 = phi i64 [ %55, %54 ], [ %153, %139 ]
  %156 = phi i32 [ %56, %54 ], [ %152, %139 ]
  %157 = phi %"struct.WTF::KeyValuePair"* [ %57, %54 ], [ %148, %139 ]
  %158 = phi %"struct.WTF::KeyValuePair"* [ %58, %54 ], [ %151, %139 ]
  %159 = add i32 %59, 1
  %160 = icmp eq i32 %159, %156
  br i1 %160, label %18, label %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.8"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.5"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.8"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.8"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.5"* %0, %"struct.WTF::KeyValuePair.8"* null)
  %9 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.8"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.8"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.8"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.8"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %144, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.8"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.8"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.8"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.8"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #8
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !11

96:                                               ; preds = %87
  tail call void @llvm.trap() #8
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.8"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %79, i64 0, i32 1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %120, align 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  store i64 %122, i64* %125, align 8
  %126 = icmp eq %"class.blink::V8DOMActivityLogger"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.blink::V8DOMActivityLogger"* %124 to void (%"class.blink::V8DOMActivityLogger"*)***
  %129 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %129, i64 1
  %131 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %130, align 8
  tail call void %131(%"class.blink::V8DOMActivityLogger"* nonnull %124) #8
  br label %132

132:                                              ; preds = %118, %127
  %133 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %135
  %139 = shl i32 %138, 1
  %140 = load i32, i32* %12, align 8
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = tail call %"struct.WTF::KeyValuePair.8"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.5"* %0, %"struct.WTF::KeyValuePair.8"* %79)
  br label %144

144:                                              ; preds = %54, %132, %142
  %145 = phi i8 [ 1, %132 ], [ 1, %142 ], [ 0, %54 ]
  %146 = phi %"struct.WTF::KeyValuePair.8"* [ %79, %132 ], [ %143, %142 ], [ %47, %54 ]
  %147 = insertvalue { %"struct.WTF::KeyValuePair.8"*, i8 } undef, %"struct.WTF::KeyValuePair.8"* %146, 0
  %148 = insertvalue { %"struct.WTF::KeyValuePair.8"*, i8 } %147, i8 %145, 1
  ret { %"struct.WTF::KeyValuePair.8"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.8"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.5"*, %"struct.WTF::KeyValuePair.8"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([184 x i8], [184 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.8"*
  %37 = call %"struct.WTF::KeyValuePair.8"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.5"* %0, %"struct.WTF::KeyValuePair.8"* %36, i32 %32, %"struct.WTF::KeyValuePair.8"* %1) #8
  ret %"struct.WTF::KeyValuePair.8"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.8"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.5"*, %"struct.WTF::KeyValuePair.8"*, i32, %"struct.WTF::KeyValuePair.8"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.5", align 8
  %6 = bitcast %"class.WTF::HashTable.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.5"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.8"* %1, %"struct.WTF::KeyValuePair.8"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.8"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.5"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.5"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.8"* %22 to i64
  br label %84

24:                                               ; preds = %139
  %25 = bitcast %"class.WTF::HashTable.5"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.5"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %140, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.8"* [ null, %16 ], [ %143, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %141, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.8"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.8"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %49, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %49, align 8
  %51 = icmp eq %"class.blink::V8DOMActivityLogger"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::V8DOMActivityLogger"* %50 to void (%"class.blink::V8DOMActivityLogger"*)***
  %54 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %54, i64 1
  %56 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %55, align 8
  call void %56(%"class.blink::V8DOMActivityLogger"* nonnull %50) #8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %43, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  br label %59

59:                                               ; preds = %52, %47
  %60 = phi %"class.WTF::StringImpl"* [ %58, %52 ], [ %48, %47 ]
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %75

75:                                               ; preds = %74, %71, %59, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.8"* %33

84:                                               ; preds = %21, %139
  %85 = phi i64 [ %140, %139 ], [ %23, %21 ]
  %86 = phi i32 [ %141, %139 ], [ %13, %21 ]
  %87 = phi %"struct.WTF::KeyValuePair.8"* [ %142, %139 ], [ %22, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair.8"* [ %143, %139 ], [ null, %21 ]
  %89 = phi i32 [ %144, %139 ], [ 0, %21 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %87, i64 %90
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"struct.WTF::KeyValuePair.8"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %95 [
    i64 -1, label %139
    i64 0, label %139
  ]

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %91, i64 0, i32 0
  %97 = call { %"struct.WTF::KeyValuePair.8"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.5"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %96) #8
  %98 = extractvalue { %"struct.WTF::KeyValuePair.8"*, i8 } %97, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.blink::V8DOMActivityLogger"*, %"class.blink::V8DOMActivityLogger"** %99, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %99, align 8
  %101 = icmp eq %"class.blink::V8DOMActivityLogger"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %95
  %103 = bitcast %"class.blink::V8DOMActivityLogger"* %100 to void (%"class.blink::V8DOMActivityLogger"*)***
  %104 = load void (%"class.blink::V8DOMActivityLogger"*)**, void (%"class.blink::V8DOMActivityLogger"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %104, i64 1
  %106 = load void (%"class.blink::V8DOMActivityLogger"*)*, void (%"class.blink::V8DOMActivityLogger"*)** %105, align 8
  call void %106(%"class.blink::V8DOMActivityLogger"* nonnull %100) #8
  br label %107

107:                                              ; preds = %102, %95
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %98, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #8
  br label %124

124:                                              ; preds = %107, %120, %123
  %125 = load i64, i64* %93, align 8
  %126 = bitcast %"struct.WTF::KeyValuePair.8"* %98 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %98, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %87, i64 %90, i32 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.blink::V8DOMActivityLogger"* null, %"class.blink::V8DOMActivityLogger"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %15, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %133, i64 %90
  %135 = icmp eq %"struct.WTF::KeyValuePair.8"* %134, %3
  %136 = select i1 %135, %"struct.WTF::KeyValuePair.8"* %98, %"struct.WTF::KeyValuePair.8"* %88
  %137 = load i32, i32* %12, align 8
  %138 = ptrtoint %"struct.WTF::KeyValuePair.8"* %133 to i64
  br label %139

139:                                              ; preds = %84, %84, %124
  %140 = phi i64 [ %85, %84 ], [ %138, %124 ], [ %85, %84 ]
  %141 = phi i32 [ %86, %84 ], [ %137, %124 ], [ %86, %84 ]
  %142 = phi %"struct.WTF::KeyValuePair.8"* [ %87, %84 ], [ %133, %124 ], [ %87, %84 ]
  %143 = phi %"struct.WTF::KeyValuePair.8"* [ %88, %84 ], [ %136, %124 ], [ %88, %84 ]
  %144 = add i32 %89, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %24, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.8"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.5"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.8"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.8"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.8"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.8"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.8"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.8"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.8"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.8"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.8"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.8"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.8"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.8"*, i8 } undef, %"struct.WTF::KeyValuePair.8"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.8"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.8"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink19V8DOMActivityLoggerENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.5"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.8"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.8"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.8"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.8"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.8", %"struct.WTF::KeyValuePair.8"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.8"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.8"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } undef, %"struct.WTF::KeyValuePair.8"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } %77, %"struct.WTF::KeyValuePair.8"* %76, 1
  ret { %"struct.WTF::KeyValuePair.8"*, %"struct.WTF::KeyValuePair.8"* } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = distinct !{!7, !8, !3}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!"branch_weights", i32 1, i32 1048575}
!10 = distinct !{!10, !5}
!11 = !{!"branch_weights", i32 1, i32 2000}
