; ModuleID = '../../third_party/blink/renderer/platform/exported/interface_registry.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/interface_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::(anonymous namespace)::EmptyInterfaceRegistry>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::(anonymous namespace)::EmptyInterfaceRegistry>::InstanceStorage" = type { [8 x i8] }
%"class.blink::InterfaceRegistry" = type { i32 (...)** }
%"class.blink::(anonymous namespace)::EmptyInterfaceRegistry" = type { %"class.blink::InterfaceRegistry" }
%"class.base::RepeatingCallback" = type opaque
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RepeatingCallback.3" = type opaque

@_ZZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry = internal global i64 0, align 8
@_ZTVN5blink12_GLOBAL__N_122EmptyInterfaceRegistryE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::EmptyInterfaceRegistry"*, i8*, %"class.base::RepeatingCallback"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_122EmptyInterfaceRegistry12AddInterfaceEPKcRKN4base17RepeatingCallbackIFvN4mojo16ScopedHandleBaseINS6_17MessagePipeHandleEEEEEE13scoped_refptrINS4_22SingleThreadTaskRunnerEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::EmptyInterfaceRegistry"*, i8*, %"class.base::RepeatingCallback.3"*)* @_ZN5blink12_GLOBAL__N_122EmptyInterfaceRegistry22AddAssociatedInterfaceEPKcRKN4base17RepeatingCallbackIFvN4mojo29ScopedInterfaceEndpointHandleEEEE to i8*)] }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.blink::InterfaceRegistry"* @_ZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122EmptyInterfaceRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry) #5
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.blink::InterfaceRegistry"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17InterfaceRegistry25GetEmptyInterfaceRegistryEvE26s_empty_interface_registry to %"class.blink::InterfaceRegistry"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122EmptyInterfaceRegistry12AddInterfaceEPKcRKN4base17RepeatingCallbackIFvN4mojo16ScopedHandleBaseINS6_17MessagePipeHandleEEEEEE13scoped_refptrINS4_22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::EmptyInterfaceRegistry"* nocapture readnone, i8* nocapture readnone, %"class.base::RepeatingCallback"* nocapture readnone, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2 align 2 {
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #5
  br label %14

14:                                               ; preds = %4, %6, %11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122EmptyInterfaceRegistry22AddAssociatedInterfaceEPKcRKN4base17RepeatingCallbackIFvN4mojo29ScopedInterfaceEndpointHandleEEEE(%"class.blink::(anonymous namespace)::EmptyInterfaceRegistry"* nocapture, i8* nocapture, %"class.base::RepeatingCallback.3"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
