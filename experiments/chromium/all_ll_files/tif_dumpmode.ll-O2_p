; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_dumpmode.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_dumpmode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.0, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.0 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }

@DumpModeDecode.module = internal constant [15 x i8] c"DumpModeDecode\00", align 1
@.str = private unnamed_addr constant [106 x i8] c"Not enough data for scanline %lu, expected a request for at most %lld bytes, got a request for %lld bytes\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @TIFFInitDumpMode(%struct.tiff* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 24
  store i32 (%struct.tiff*)* @DumpFixupTags, i32 (%struct.tiff*)** %3, align 8
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  %7 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %4 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeDecode, i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %7, align 8
  %8 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %5 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeDecode, i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %8, align 8
  %9 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %6 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeDecode, i32 (%struct.tiff*, i8*, i64, i16)* @DumpModeEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %9, align 8
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 38
  store i32 (%struct.tiff*, i32)* @DumpModeSeek, i32 (%struct.tiff*, i32)** %10, align 8
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @DumpFixupTags(%struct.tiff* nocapture readnone) #1 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @DumpModeDecode(%struct.tiff* nocapture, i8*, i64, i16 zeroext) #2 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %2
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @DumpModeDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str, i64 0, i64 0), i64 %13, i64 %6, i64 %2) #5
  br label %26

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  tail call void @_TIFFmemcpy(i8* %1, i8* %16, i64 %2) #5
  %19 = load i8*, i8** %15, align 8
  %20 = load i64, i64* %5, align 8
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i64 [ %6, %14 ], [ %20, %18 ]
  %23 = phi i8* [ %1, %14 ], [ %19, %18 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 %2
  store i8* %24, i8** %15, align 8
  %25 = sub nsw i64 %22, %2
  store i64 %25, i64* %5, align 8
  br label %26

26:                                               ; preds = %21, %8
  %27 = phi i32 [ 0, %8 ], [ 1, %21 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @DumpModeEncode(%struct.tiff*, i8*, i64, i16 zeroext) #2 {
  %5 = icmp sgt i64 %2, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  br label %10

10:                                               ; preds = %6, %37
  %11 = phi i64 [ %2, %6 ], [ %32, %37 ]
  %12 = phi i8* [ %1, %6 ], [ %31, %37 ]
  %13 = load i64, i64* %7, align 8
  %14 = add nsw i64 %13, %11
  %15 = load i64, i64* %8, align 8
  %16 = icmp sgt i64 %14, %15
  %17 = sub nsw i64 %15, %13
  %18 = select i1 %16, i64 %17, i64 %11
  %19 = load i8*, i8** %9, align 8
  %20 = icmp eq i8* %19, %12
  br i1 %20, label %25, label %21

21:                                               ; preds = %10
  tail call void @_TIFFmemcpy(i8* %19, i8* %12, i64 %18) #5
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i64, i64* %8, align 8
  br label %25

25:                                               ; preds = %10, %21
  %26 = phi i64 [ %15, %10 ], [ %24, %21 ]
  %27 = phi i64 [ %13, %10 ], [ %23, %21 ]
  %28 = phi i8* [ %12, %10 ], [ %22, %21 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %18
  store i8* %29, i8** %9, align 8
  %30 = add nsw i64 %27, %18
  store i64 %30, i64* %7, align 8
  %31 = getelementptr inbounds i8, i8* %12, i64 %18
  %32 = sub nsw i64 %11, %18
  %33 = icmp slt i64 %30, %26
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34, %25
  %38 = icmp sgt i64 %32, 0
  br i1 %38, label %10, label %39

39:                                               ; preds = %34, %37, %4
  %40 = phi i32 [ 1, %4 ], [ 1, %37 ], [ 0, %34 ]
  ret i32 %40
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @DumpModeSeek(%struct.tiff* nocapture, i32) #3 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 43
  %5 = load i64, i64* %4, align 8
  %6 = mul nsw i64 %5, %3
  %7 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 %6
  store i8* %9, i8** %7, align 8
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %11, %6
  store i64 %12, i64* %10, align 8
  ret i32 1
}

declare void @TIFFErrorExt(i8*, i8*, i8*, ...) local_unnamed_addr #4

declare void @_TIFFmemcpy(i8*, i8*, i64) local_unnamed_addr #4

declare i32 @TIFFFlushData1(%struct.tiff*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
