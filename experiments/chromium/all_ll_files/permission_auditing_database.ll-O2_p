; ModuleID = '../../components/permissions/permission_auditing_database.cc'
source_filename = "../../components/permissions/permission_auditing_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.permissions::PermissionAuditingDatabase" = type { %"class.sql::Database" }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>
%"struct.permissions::PermissionUsageSession" = type <{ %"class.url::Origin", i32, [4 x i8], %"class.base::Time", %"class.base::Time", i8, i8, i8, [5 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.19, i8, i8, [6 x i8] }>
%class.scoped_refptr.19 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.permissions::PermissionUsageSession"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN11permissions22PermissionUsageSessionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [25 x i8] c"Permission Auditing Logs\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"uses\00", align 1
@.str.2 = private unnamed_addr constant [293 x i8] c"CREATE TABLE uses(  id INTEGER PRIMARY KEY AUTOINCREMENT,  origin TEXT NOT NULL,  content_setting_type INTEGER NOT NULL,  usage_start_time INTEGER NOT NULL,  usage_end_time INTEGER NOT NULL,  had_user_activation INTEGER NOT NULL,  was_foreground INTEGER NOT NULL,  had_focus INTEGER NOT NULL)\00", align 1
@.str.3 = private unnamed_addr constant [101 x i8] c"CREATE UNIQUE INDEX setting_origin_start_time ON uses(origin, content_setting_type,usage_start_time)\00", align 1
@.str.4 = private unnamed_addr constant [90 x i8] c"CREATE INDEX setting_origin_end_time ON uses(origin, content_setting_type,usage_end_time)\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"CREATE INDEX start_time ON uses(usage_start_time)\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"CREATE INDEX end_time ON uses(usage_end_time)\00", align 1
@.str.7 = private unnamed_addr constant [61 x i8] c"../../components/permissions/permission_auditing_database.cc\00", align 1
@.str.8 = private unnamed_addr constant [155 x i8] c"INSERT INTO uses(origin, content_setting_type,usage_start_time, usage_end_time,had_user_activation, was_foreground, had_focus)VALUES (?, ?, ?, ?, ?, ?, ?)\00", align 1
@.str.9 = private unnamed_addr constant [167 x i8] c"SELECT usage_start_time, usage_end_time, had_user_activation,was_foreground, had_focus FROM uses WHERE origin = ? AND content_setting_type = ? AND usage_end_time >= ?\00", align 1
@.str.10 = private unnamed_addr constant [115 x i8] c"SELECT usage_end_time FROM uses WHERE origin = ? AND content_setting_type = ? ORDER BY usage_end_time DESC LIMIT 1\00", align 1
@.str.11 = private unnamed_addr constant [106 x i8] c"UPDATE uses SET usage_end_time = ? WHERE origin = ? AND content_setting_type = ? AND usage_start_time = ?\00", align 1
@.str.12 = private unnamed_addr constant [90 x i8] c"DELETE FROM uses WHERE usage_start_time BETWEEN ? AND ? OR usage_end_time BETWEEN ? AND ?\00", align 1

@_ZN11permissions26PermissionAuditingDatabaseC1Ev = hidden unnamed_addr alias void (%"class.permissions::PermissionAuditingDatabase"*), void (%"class.permissions::PermissionAuditingDatabase"*)* @_ZN11permissions26PermissionAuditingDatabaseC2Ev
@_ZN11permissions26PermissionAuditingDatabaseD1Ev = hidden unnamed_addr alias void (%"class.permissions::PermissionAuditingDatabase"*), void (%"class.permissions::PermissionAuditingDatabase"*)* @_ZN11permissions26PermissionAuditingDatabaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions26PermissionAuditingDatabaseC2Ev(%"class.permissions::PermissionAuditingDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  tail call void @_ZN3sql8DatabaseC1Ev(%"class.sql::Database"* %2) #8
  ret void
}

declare void @_ZN3sql8DatabaseC1Ev(%"class.sql::Database"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions26PermissionAuditingDatabaseD2Ev(%"class.permissions::PermissionAuditingDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  tail call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions26PermissionAuditingDatabase4InitERKN4base8FilePathE(%"class.permissions::PermissionAuditingDatabase"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.sql::MetaTable", align 8
  %5 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = tail call i8* @_Znwm(i64 32) #9
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 0, i8* %11, align 1
  call void @_ZN3sql8Database17set_histogram_tagERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Database"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %19 = call zeroext i1 @_ZN3sql8Database4OpenERKN4base8FilePathE(%"class.sql::Database"* %5, %"class.base::FilePath"* dereferenceable(24) %1) #8
  br i1 %19, label %20, label %36

20:                                               ; preds = %18
  %21 = bitcast %"class.sql::MetaTable"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %4, i64 0, i32 0
  store %"class.sql::Database"* inttoptr (i64 -6148914691236517206 to %"class.sql::Database"*), %"class.sql::Database"** %22, align 8
  call void @_ZN3sql9MetaTableC1Ev(%"class.sql::MetaTable"* nonnull %4) #8
  %23 = call zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"* nonnull %4, %"class.sql::Database"* %5, i32 1, i32 1) #8
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  call void @_ZN3sql8Database6PoisonEv(%"class.sql::Database"* %5) #8
  br label %34

25:                                               ; preds = %20
  %26 = call i32 @_ZN3sql9MetaTable26GetCompatibleVersionNumberEv(%"class.sql::MetaTable"* nonnull %4) #8
  %27 = icmp sgt i32 %26, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZN3sql8Database6PoisonEv(%"class.sql::Database"* %5) #8
  br label %34

29:                                               ; preds = %25
  %30 = call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #8
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = call zeroext i1 @_ZN11permissions26PermissionAuditingDatabase12CreateSchemaEv(%"class.permissions::PermissionAuditingDatabase"* %0)
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  call void @_ZN3sql8Database6PoisonEv(%"class.sql::Database"* %5) #8
  br label %34

34:                                               ; preds = %29, %31, %33, %28, %24
  %35 = phi i1 [ false, %28 ], [ false, %33 ], [ false, %24 ], [ true, %31 ], [ true, %29 ]
  call void @_ZN3sql9MetaTableD1Ev(%"class.sql::MetaTable"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %36

36:                                               ; preds = %18, %34
  %37 = phi i1 [ %35, %34 ], [ false, %18 ]
  ret i1 %37
}

declare void @_ZN3sql8Database17set_histogram_tagERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Database"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN3sql8Database4OpenERKN4base8FilePathE(%"class.sql::Database"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3sql9MetaTableC1Ev(%"class.sql::MetaTable"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"*, %"class.sql::Database"*, i32, i32) local_unnamed_addr #1

declare void @_ZN3sql8Database6PoisonEv(%"class.sql::Database"*) local_unnamed_addr #1

declare i32 @_ZN3sql9MetaTable26GetCompatibleVersionNumberEv(%"class.sql::MetaTable"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions26PermissionAuditingDatabase12CreateSchemaEv(%"class.permissions::PermissionAuditingDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %5 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %4) #8
  %6 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #8
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([293 x i8], [293 x i8]* @.str.2, i64 0, i64 0)) #8
  br i1 %8, label %9, label %19

9:                                                ; preds = %7
  %10 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.3, i64 0, i64 0)) #8
  br i1 %10, label %11, label %19

11:                                               ; preds = %9
  %12 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.4, i64 0, i64 0)) #8
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #8
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0)) #8
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #8
  br label %19

19:                                               ; preds = %15, %13, %11, %9, %7, %1, %17
  %20 = phi i1 [ %18, %17 ], [ false, %1 ], [ false, %7 ], [ false, %9 ], [ false, %11 ], [ false, %13 ], [ false, %15 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8
  ret i1 %20
}

; Function Attrs: nounwind
declare void @_ZN3sql9MetaTableD1Ev(%"class.sql::MetaTable"*) unnamed_addr #2

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions26PermissionAuditingDatabase20StorePermissionUsageERKNS_22PermissionUsageSessionE(%"class.permissions::PermissionAuditingDatabase"*, %"struct.permissions::PermissionUsageSession"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Time", align 8
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.sql::Transaction", align 8
  %8 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %10 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i64 120, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.8, i64 0, i64 0)) #8
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %11) #8
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 0
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.url::Origin"* %13) #8
  %14 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %5, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #8
  %15 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %5, i32 1, i32 %24) #8
  %26 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 3, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::Time"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %27, i64* %29, align 8
  %30 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %31 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %30) #8
  %32 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 4, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %33, i64* %35, align 8
  %36 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %37 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 3, i64 %36) #8
  %38 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 5
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %5, i32 4, i1 zeroext %40) #8
  %42 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 6
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %5, i32 5, i1 zeroext %44) #8
  %46 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 7
  %47 = load i8, i8* %46, align 2, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %5, i32 6, i1 zeroext %48) #8
  %50 = bitcast %"class.sql::Transaction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  %51 = bitcast %"class.sql::Transaction"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %7, %"class.sql::Database"* %9) #8
  %52 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %7) #8
  br i1 %52, label %53, label %57

53:                                               ; preds = %22
  %54 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #8
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %7) #8
  br label %57

57:                                               ; preds = %53, %22, %55
  %58 = phi i1 [ %56, %55 ], [ false, %22 ], [ false, %53 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %58
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #1

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"*, i32, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions26PermissionAuditingDatabase25GetPermissionUsageHistoryE19ContentSettingsTypeRKN3url6OriginEN4base4TimeE(%"class.std::__1::vector.20"* noalias sret, %"class.permissions::PermissionAuditingDatabase"*, i32, %"class.url::Origin"* dereferenceable(80), i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.permissions::PermissionUsageSession", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  %13 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %1, i64 0, i32 0
  %15 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %14, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i64 150, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.9, i64 0, i64 0)) #8
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %16) #8
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.url::Origin"* %3) #8
  %18 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #8
  %19 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %5, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  %27 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %7, i32 1, i32 %2) #8
  %28 = icmp eq i64 %4, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 %4, i64* %31, align 8
  %32 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i64 [ %32, %29 ], [ -9223372036854775808, %26 ]
  %35 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 2, i64 %34) #8
  %36 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #8
  br i1 %36, label %37, label %71

37:                                               ; preds = %33
  %38 = bitcast %"struct.permissions::PermissionUsageSession"* %9 to i8*
  %39 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 3, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 4, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 6
  %45 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %9, i64 0, i32 7
  %46 = bitcast i32* %40 to i8*
  %47 = bitcast %"struct.permissions::PermissionUsageSession"** %10 to i64*
  br label %48

48:                                               ; preds = %37, %69
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %38) #8
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %39, %"class.url::Origin"* dereferenceable(80) %3) #8
  store i32 %2, i32* %40, align 8
  %49 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #8
  %50 = call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %49) #8
  store i64 %50, i64* %41, align 8
  %51 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 1) #8
  %52 = call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %51) #8
  store i64 %52, i64* %42, align 8
  %53 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* nonnull %7, i32 2) #8
  %54 = zext i1 %53 to i8
  store i8 %54, i8* %43, align 8
  %55 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* nonnull %7, i32 3) #8
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %44, align 1
  %57 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* nonnull %7, i32 4) #8
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %45, align 2
  %59 = load %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"** %10, align 8
  %60 = load %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"** %11, align 8
  %61 = icmp ult %"struct.permissions::PermissionUsageSession"* %59, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %59, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %63, %"class.url::Origin"* nonnull dereferenceable(80) %39) #8
  %64 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %59, i64 0, i32 1
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %46, i64 27, i1 false) #8
  %66 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %59, i64 1
  %67 = ptrtoint %"struct.permissions::PermissionUsageSession"* %66 to i64
  store i64 %67, i64* %47, align 8
  br label %69

68:                                               ; preds = %48
  call void @_ZNSt3__16vectorIN11permissions22PermissionUsageSessionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"* %0, %"struct.permissions::PermissionUsageSession"* nonnull dereferenceable(112) %9) #8
  br label %69

69:                                               ; preds = %62, %68
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %38) #8
  %70 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #8
  br i1 %70, label %48, label %71

71:                                               ; preds = %69, %33
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  ret void
}

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #1

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN11permissions26PermissionAuditingDatabase26GetLastPermissionUsageTimeE19ContentSettingsTypeRKN3url6OriginE(%"class.permissions::PermissionAuditingDatabase"*, i32, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %8 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i64 180, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.10, i64 0, i64 0)) #8
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #8
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.url::Origin"* %2) #8
  %11 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %3, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %20 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 1, i32 %1) #8
  %21 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #8
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #8
  %24 = call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %23) #8
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i8 [ 1, %22 ], [ 0, %19 ]
  %27 = phi i64 [ %24, %22 ], [ -6148914691236517206, %19 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  %28 = insertvalue { i8, i64 } undef, i8 %26, 0
  %29 = insertvalue { i8, i64 } %28, i64 %27, 1
  ret { i8, i64 } %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions26PermissionAuditingDatabase13UpdateEndTimeE19ContentSettingsTypeRKN3url6OriginEN4base4TimeES7_(%"class.permissions::PermissionAuditingDatabase"*, i32, %"class.url::Origin"* dereferenceable(80), i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.base::Time", align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.sql::Transaction", align 8
  %11 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %13 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i64 204, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.11, i64 0, i64 0)) #8
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %14) #8
  %15 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 %4, i64* %16, align 8
  %17 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %18 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %8, i32 0, i64 %17) #8
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.url::Origin"* %2) #8
  %20 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %8, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #8
  %21 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %5, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %29 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %8, i32 2, i32 %1) #8
  %30 = bitcast %"class.base::Time"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %7, i64 0, i32 0, i32 0
  store i64 %3, i64* %31, align 8
  %32 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %33 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %8, i32 3, i64 %32) #8
  %34 = bitcast %"class.sql::Transaction"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  %35 = bitcast %"class.sql::Transaction"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %10, %"class.sql::Database"* %12) #8
  %36 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %10) #8
  br i1 %36, label %37, label %41

37:                                               ; preds = %28
  %38 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %8) #8
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %10) #8
  br label %41

41:                                               ; preds = %37, %28, %39
  %42 = phi i1 [ %40, %39 ], [ false, %28 ], [ false, %37 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions26PermissionAuditingDatabase21DeleteSessionsBetweenEN4base4TimeES2_(%"class.permissions::PermissionAuditingDatabase"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.sql::Transaction", align 8
  %8 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.permissions::PermissionAuditingDatabase", %"class.permissions::PermissionAuditingDatabase"* %0, i64 0, i32 0
  %10 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0), i64 228, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.12, i64 0, i64 0)) #8
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %11) #8
  %12 = icmp eq i64 %1, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %15, align 8
  %16 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i64 [ %16, %13 ], [ -9223372036854775808, %3 ]
  %19 = icmp eq i64 %2, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %22, align 8
  %23 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi i64 [ %23, %20 ], [ 9223372036854775807, %17 ]
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %18) #8
  %27 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 1, i64 %25) #8
  %28 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 2, i64 %18) #8
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 3, i64 %25) #8
  %30 = bitcast %"class.sql::Transaction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %31 = bitcast %"class.sql::Transaction"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %7, %"class.sql::Database"* %9) #8
  %32 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %7) #8
  br i1 %32, label %33, label %37

33:                                               ; preds = %24
  %34 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %6) #8
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %7) #8
  br label %37

37:                                               ; preds = %35, %24, %33
  %38 = phi i1 [ %36, %35 ], [ false, %24 ], [ false, %33 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %38
}

declare i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11permissions22PermissionUsageSessionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"*, %"struct.permissions::PermissionUsageSession"* dereferenceable(112)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.permissions::PermissionUsageSession"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.permissions::PermissionUsageSession"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"struct.permissions::PermissionUsageSession"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.permissions::PermissionUsageSession"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %33, i64 %32
  %36 = ptrtoint %"struct.permissions::PermissionUsageSession"* %35 to i64
  %37 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %37, %"class.url::Origin"* dereferenceable(80) %38) #8
  %39 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 1
  %41 = bitcast i32* %39 to i8*
  %42 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 27, i1 false) #8
  %43 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %34, i64 1
  %44 = ptrtoint %"struct.permissions::PermissionUsageSession"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"** %45, align 8
  %47 = load %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"** %3, align 8
  %48 = icmp eq %"struct.permissions::PermissionUsageSession"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.permissions::PermissionUsageSession"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.permissions::PermissionUsageSession"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"struct.permissions::PermissionUsageSession"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %54, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %55, %"class.url::Origin"* dereferenceable(80) %56) #8
  %57 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %53, i64 -1, i32 1
  %59 = bitcast i32* %57 to i8*
  %60 = bitcast i32* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 27, i1 false) #8
  %61 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %52, i64 -1
  %62 = icmp eq %"struct.permissions::PermissionUsageSession"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.permissions::PermissionUsageSession"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.permissions::PermissionUsageSession"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.permissions::PermissionUsageSession"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.permissions::PermissionUsageSession"*
  %72 = icmp eq %"struct.permissions::PermissionUsageSession"* %67, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"struct.permissions::PermissionUsageSession"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %75, i64 0, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %76) #8
  %77 = icmp eq %"struct.permissions::PermissionUsageSession"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %66
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %81) #9
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
