; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/suppression_gain.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/suppression_gain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::SuppressionGain" = type { %"class.std::__1::unique_ptr", i32, %"struct.webrtc::EchoCanceller3Config", i64, i32, %"struct.std::__1::array", %"class.std::__1::vector", %"class.std::__1::vector", %"class.webrtc::SuppressionGain::LowNoiseRenderDetector", i8, i32, %"class.std::__1::vector.4", %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters", %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::array"* }
%"class.webrtc::SuppressionGain::LowNoiseRenderDetector" = type { float }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"*, %"class.std::__1::__compressed_pair.13" }
%"class.webrtc::aec3::MovingAverage" = type { i64, i64, float, %"class.std::__1::vector.6", i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { float*, float*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { float* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.webrtc::aec3::MovingAverage"* }
%"struct.webrtc::SuppressionGain::GainParameters" = type { float, float, %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.webrtc::NearendDetector"* }
%"class.webrtc::NearendDetector" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::vector.6"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::vector.26"* }
%"class.rtc::ArrayView.40" = type { %"class.rtc::impl::ArrayViewBase.41" }
%"class.rtc::impl::ArrayViewBase.41" = type { float*, i64 }
%"class.rtc::ArrayView.42" = type { %"class.rtc::impl::ArrayViewBase.43" }
%"class.rtc::impl::ArrayViewBase.43" = type { float*, i64 }
%"class.webrtc::AecState" = type { %"class.std::__1::unique_ptr", %"struct.webrtc::EchoCanceller3Config", i64, i8, i8, i8, %"class.webrtc::AecState::InitialState", %"class.webrtc::AecState::FilterDelay", %"class.std::__1::unique_ptr.56", %"class.webrtc::AecState::FilteringQualityAnalyzer", %"class.webrtc::AecState::SaturationDetector", %"class.webrtc::ErlEstimator", %"class.webrtc::ErleEstimator", i64, i64, i8, [7 x i8], %"class.webrtc::FilterAnalyzer", %"class.webrtc::EchoAudibility", %"class.webrtc::ReverbModelEstimator", %"class.webrtc::ReverbModel", %"class.webrtc::SubtractorOutputAnalyzer" }
%"class.webrtc::AecState::InitialState" = type { i8, float, i8, i8, i64 }
%"class.webrtc::AecState::FilterDelay" = type { i32, i8, %"class.std::__1::vector.44", i32, %"class.absl::optional.51" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i32*, i32*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i32* }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.webrtc::DelayEstimate" }
%"struct.webrtc::DelayEstimate" = type { i32, i64, i64, i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.webrtc::TransparentMode"* }
%"class.webrtc::TransparentMode" = type { i32 (...)** }
%"class.webrtc::AecState::FilteringQualityAnalyzer" = type { i8, i8, i64, i64, i8, %"class.std::__1::vector.62" }
%"class.std::__1::vector.62" = type { i64*, i64, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i64 }
%"class.webrtc::AecState::SaturationDetector" = type { i8 }
%"class.webrtc::ErlEstimator" = type { i64, %"struct.std::__1::array", %"struct.std::__1::array.68", float, i32, i64 }
%"struct.std::__1::array.68" = type { [63 x i32] }
%"class.webrtc::ErleEstimator" = type { i64, %"class.webrtc::FullBandErleEstimator", %"class.webrtc::SubbandErleEstimator", %"class.std::__1::unique_ptr.104", i64 }
%"class.webrtc::FullBandErleEstimator" = type { float, float, %"class.std::__1::vector.44", %"class.std::__1::vector.6", %"class.std::__1::vector.69", %"class.std::__1::vector.81" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.std::__1::__compressed_pair.76" }
%"class.webrtc::FullBandErleEstimator::ErleInstantaneous" = type { i8, i8, %"class.absl::optional.71", float, float, float, float, float, i32 }
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { float }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.absl::optional.71"*, %"class.absl::optional.71"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.absl::optional.71"* }
%"class.webrtc::SubbandErleEstimator" = type { i8, float, %"struct.std::__1::array", i8, %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.88", %"class.std::__1::vector.96" }
%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.88", %"class.std::__1::vector.44" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.std::__1::array.90"*, %"struct.std::__1::array.90"*, %"class.std::__1::__compressed_pair.91" }
%"struct.std::__1::array.90" = type { [65 x i8] }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::array.90"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.std::__1::array.98"*, %"struct.std::__1::array.98"*, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::array.98" = type { [65 x i32] }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::array.98"* }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.webrtc::SignalDependentErleEstimator"* }
%"class.webrtc::SignalDependentErleEstimator" = type { float, i64, i64, i64, %"struct.std::__1::array.107", %"struct.std::__1::array.108", %"class.std::__1::vector.109", i8, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.113", %"class.std::__1::vector.120", %"class.std::__1::vector.122", %"class.std::__1::vector.120", %"class.std::__1::vector.134", %"class.std::__1::vector.142" }
%"struct.std::__1::array.107" = type { [65 x i64] }
%"struct.std::__1::array.108" = type { [6 x float] }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i64*, i64*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64* }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::array.108"*, %"struct.std::__1::array.108"*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::array.108"* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.std::__1::vector.122"*, %"class.std::__1::vector.122"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::vector.122"* }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::array.136"*, %"struct.std::__1::array.136"*, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::array.136" = type opaque
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::array.136"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.std::__1::array.107"*, %"struct.std::__1::array.107"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::array.107"* }
%"class.webrtc::FilterAnalyzer" = type <{ %"class.std::__1::unique_ptr", i8, [3 x i8], float, %"class.std::__1::vector.26", i64, %"struct.webrtc::FilterAnalyzer::FilterRegion", %"class.std::__1::vector.152", %"class.std::__1::vector.44", i32, [4 x i8] }>
%"struct.webrtc::FilterAnalyzer::FilterRegion" = type { i64, i64 }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"class.std::__1::__compressed_pair.154" }
%"struct.webrtc::FilterAnalyzer::FilterAnalysisState" = type { float, i64, i32, i8, [3 x i8], %"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" }
%"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" = type <{ i8, [3 x i8], float, float, [4 x i8], i64, i64, float, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"* }
%"class.webrtc::EchoAudibility" = type { %"class.absl::optional", i32, i8, i8, [2 x i8], %"class.webrtc::StationarityEstimator" }
%"class.webrtc::StationarityEstimator" = type <{ %"class.std::__1::unique_ptr", %"class.webrtc::StationarityEstimator::NoiseSpectrum", %"struct.std::__1::array.98", %"struct.std::__1::array.90", [3 x i8] }>
%"class.webrtc::StationarityEstimator::NoiseSpectrum" = type { %"struct.std::__1::array", i64 }
%"class.webrtc::ReverbModelEstimator" = type { %"class.std::__1::vector.159", %"class.std::__1::vector.172" }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"class.std::__1::unique_ptr.161"*, %"class.std::__1::unique_ptr.161"*, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.webrtc::ReverbDecayEstimator"* }
%"class.webrtc::ReverbDecayEstimator" = type <{ i32, i32, i8, [3 x i8], %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", i32, i32, i32, i32, i8, [7 x i8], %"class.std::__1::vector.6", float, float, float, [4 x i8] }>
%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor" = type { float, float, float, i32, i32 }
%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator" = type <{ %"class.std::__1::vector.6", %"class.std::__1::vector.6", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::unique_ptr.161"* }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.webrtc::ReverbFrequencyResponse"*, %"class.webrtc::ReverbFrequencyResponse"*, %"class.std::__1::__compressed_pair.174" }
%"class.webrtc::ReverbFrequencyResponse" = type { float, %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.webrtc::ReverbFrequencyResponse"* }
%"class.webrtc::ReverbModel" = type { %"struct.std::__1::array" }
%"class.webrtc::SubtractorOutputAnalyzer" = type { %"class.std::__1::vector.62" }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { %"struct.std::__1::array"*, i64 }
%"class.webrtc::aec3::VectorMath" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.webrtc::SubbandNearendDetector" = type <{ %"class.webrtc::NearendDetector", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i64, %"class.std::__1::vector.4", float, float, i8, [7 x i8] }>
%"class.webrtc::DominantNearendDetector" = type { %"class.webrtc::NearendDetector", float, float, float, i32, i32, i8, i64, i8, %"class.std::__1::vector.44", %"class.std::__1::vector.44" }
%"class.webrtc::RenderSignalAnalyzer" = type { i32, %"struct.std::__1::array.191", %"class.absl::optional", i64 }
%"struct.std::__1::array.191" = type { [63 x i64] }

@_ZN6webrtc15SuppressionGain15instance_count_E = hidden global i32 0, align 4

@_ZN6webrtc15SuppressionGainC1ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEim = hidden unnamed_addr alias void (%"class.webrtc::SuppressionGain"*, %"struct.webrtc::EchoCanceller3Config"*, i32, i32, i64), void (%"class.webrtc::SuppressionGain"*, %"struct.webrtc::EchoCanceller3Config"*, i32, i32, i64)* @_ZN6webrtc15SuppressionGainC2ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEim
@_ZN6webrtc15SuppressionGainD1Ev = hidden unnamed_addr alias void (%"class.webrtc::SuppressionGain"*), void (%"class.webrtc::SuppressionGain"*)* @_ZN6webrtc15SuppressionGainD2Ev
@_ZN6webrtc15SuppressionGain14GainParametersC1ERKNS_20EchoCanceller3Config10Suppressor6TuningE = hidden unnamed_addr alias void (%"struct.webrtc::SuppressionGain::GainParameters"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"*), void (%"struct.webrtc::SuppressionGain::GainParameters"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"*)* @_ZN6webrtc15SuppressionGain14GainParametersC2ERKNS_20EchoCanceller3Config10Suppressor6TuningE

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK6webrtc15SuppressionGain14UpperBandsGainEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEES7_RKN4absl8optionalIiEEbRKNS3_6vectorINSD_INSD_IfNS3_9allocatorIfEEEENSE_ISG_EEEENSE_ISI_EEEERS6_(%"class.webrtc::SuppressionGain"* nocapture readonly, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.absl::optional"* nocapture readonly dereferenceable(8), i1 zeroext, %"class.std::__1::vector.24"* nocapture readonly dereferenceable(24), %"struct.std::__1::array"* readonly dereferenceable(260)) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %7, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.26"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.24"* %7 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 24
  %17 = icmp eq i64 %15, 24
  %18 = inttoptr i64 %14 to %"class.std::__1::vector.26"*
  br i1 %17, label %522, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %18, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector.6"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = inttoptr i64 %14 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 24
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 55
  br i1 %33, label %522, label %34

34:                                               ; preds = %19, %30
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 32
  %36 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 33
  %37 = load float, float* %36, align 4
  %38 = load float, float* %35, align 4
  %39 = fcmp olt float %37, %38
  %40 = select i1 %39, float* %36, float* %35
  %41 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 34
  %42 = load float, float* %41, align 4
  %43 = load float, float* %40, align 4
  %44 = fcmp olt float %42, %43
  %45 = select i1 %44, float* %41, float* %40
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 35
  %47 = load float, float* %46, align 4
  %48 = load float, float* %45, align 4
  %49 = fcmp olt float %47, %48
  %50 = select i1 %49, float* %46, float* %45
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 36
  %52 = load float, float* %51, align 4
  %53 = load float, float* %50, align 4
  %54 = fcmp olt float %52, %53
  %55 = select i1 %54, float* %51, float* %50
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 37
  %57 = load float, float* %56, align 4
  %58 = load float, float* %55, align 4
  %59 = fcmp olt float %57, %58
  %60 = select i1 %59, float* %56, float* %55
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 38
  %62 = load float, float* %61, align 4
  %63 = load float, float* %60, align 4
  %64 = fcmp olt float %62, %63
  %65 = select i1 %64, float* %61, float* %60
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 39
  %67 = load float, float* %66, align 4
  %68 = load float, float* %65, align 4
  %69 = fcmp olt float %67, %68
  %70 = select i1 %69, float* %66, float* %65
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 40
  %72 = load float, float* %71, align 4
  %73 = load float, float* %70, align 4
  %74 = fcmp olt float %72, %73
  %75 = select i1 %74, float* %71, float* %70
  %76 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 41
  %77 = load float, float* %76, align 4
  %78 = load float, float* %75, align 4
  %79 = fcmp olt float %77, %78
  %80 = select i1 %79, float* %76, float* %75
  %81 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 42
  %82 = load float, float* %81, align 4
  %83 = load float, float* %80, align 4
  %84 = fcmp olt float %82, %83
  %85 = select i1 %84, float* %81, float* %80
  %86 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 43
  %87 = load float, float* %86, align 4
  %88 = load float, float* %85, align 4
  %89 = fcmp olt float %87, %88
  %90 = select i1 %89, float* %86, float* %85
  %91 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 44
  %92 = load float, float* %91, align 4
  %93 = load float, float* %90, align 4
  %94 = fcmp olt float %92, %93
  %95 = select i1 %94, float* %91, float* %90
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 45
  %97 = load float, float* %96, align 4
  %98 = load float, float* %95, align 4
  %99 = fcmp olt float %97, %98
  %100 = select i1 %99, float* %96, float* %95
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 46
  %102 = load float, float* %101, align 4
  %103 = load float, float* %100, align 4
  %104 = fcmp olt float %102, %103
  %105 = select i1 %104, float* %101, float* %100
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 47
  %107 = load float, float* %106, align 4
  %108 = load float, float* %105, align 4
  %109 = fcmp olt float %107, %108
  %110 = select i1 %109, float* %106, float* %105
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 48
  %112 = load float, float* %111, align 4
  %113 = load float, float* %110, align 4
  %114 = fcmp olt float %112, %113
  %115 = select i1 %114, float* %111, float* %110
  %116 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 49
  %117 = load float, float* %116, align 4
  %118 = load float, float* %115, align 4
  %119 = fcmp olt float %117, %118
  %120 = select i1 %119, float* %116, float* %115
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 50
  %122 = load float, float* %121, align 4
  %123 = load float, float* %120, align 4
  %124 = fcmp olt float %122, %123
  %125 = select i1 %124, float* %121, float* %120
  %126 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 51
  %127 = load float, float* %126, align 4
  %128 = load float, float* %125, align 4
  %129 = fcmp olt float %127, %128
  %130 = select i1 %129, float* %126, float* %125
  %131 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 52
  %132 = load float, float* %131, align 4
  %133 = load float, float* %130, align 4
  %134 = fcmp olt float %132, %133
  %135 = select i1 %134, float* %131, float* %130
  %136 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 53
  %137 = load float, float* %136, align 4
  %138 = load float, float* %135, align 4
  %139 = fcmp olt float %137, %138
  %140 = select i1 %139, float* %136, float* %135
  %141 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 54
  %142 = load float, float* %141, align 4
  %143 = load float, float* %140, align 4
  %144 = fcmp olt float %142, %143
  %145 = select i1 %144, float* %141, float* %140
  %146 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 55
  %147 = load float, float* %146, align 4
  %148 = load float, float* %145, align 4
  %149 = fcmp olt float %147, %148
  %150 = select i1 %149, float* %146, float* %145
  %151 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 56
  %152 = load float, float* %151, align 4
  %153 = load float, float* %150, align 4
  %154 = fcmp olt float %152, %153
  %155 = select i1 %154, float* %151, float* %150
  %156 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 57
  %157 = load float, float* %156, align 4
  %158 = load float, float* %155, align 4
  %159 = fcmp olt float %157, %158
  %160 = select i1 %159, float* %156, float* %155
  %161 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 58
  %162 = load float, float* %161, align 4
  %163 = load float, float* %160, align 4
  %164 = fcmp olt float %162, %163
  %165 = select i1 %164, float* %161, float* %160
  %166 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 59
  %167 = load float, float* %166, align 4
  %168 = load float, float* %165, align 4
  %169 = fcmp olt float %167, %168
  %170 = select i1 %169, float* %166, float* %165
  %171 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 60
  %172 = load float, float* %171, align 4
  %173 = load float, float* %170, align 4
  %174 = fcmp olt float %172, %173
  %175 = select i1 %174, float* %171, float* %170
  %176 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 61
  %177 = load float, float* %176, align 4
  %178 = load float, float* %175, align 4
  %179 = fcmp olt float %177, %178
  %180 = select i1 %179, float* %176, float* %175
  %181 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 62
  %182 = load float, float* %181, align 4
  %183 = load float, float* %180, align 4
  %184 = fcmp olt float %182, %183
  %185 = select i1 %184, float* %181, float* %180
  %186 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 63
  %187 = load float, float* %186, align 4
  %188 = load float, float* %185, align 4
  %189 = fcmp olt float %187, %188
  %190 = select i1 %189, float* %186, float* %185
  %191 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %192 = load float, float* %191, align 4
  %193 = load float, float* %190, align 4
  %194 = fcmp olt float %192, %193
  %195 = select i1 %194, float* %191, float* %190
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  br i1 %6, label %198, label %202

198:                                              ; preds = %34
  %199 = bitcast i32 %197 to float
  %200 = fcmp olt float %199, 0x3F50624DE0000000
  %201 = select i1 %200, float %199, float 0x3F50624DE0000000
  br label %522

202:                                              ; preds = %34
  %203 = icmp eq i64 %25, 0
  br i1 %203, label %221, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %18, i64 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %206, i64 0, i32 0, i32 0
  %208 = load float*, float** %207, align 8
  %209 = ptrtoint float* %208 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %206, i64 0, i32 0, i32 1
  %211 = load float*, float** %210, align 8
  %212 = icmp eq float* %208, %211
  %213 = getelementptr float, float* %211, i64 -1
  %214 = ptrtoint float* %213 to i64
  %215 = sub i64 %214, %209
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = and i64 %217, 7
  %219 = icmp eq i64 %218, 0
  %220 = icmp ult i64 %215, 28
  br label %224

221:                                              ; preds = %278, %202
  %222 = phi float [ 0.000000e+00, %202 ], [ %281, %278 ]
  %223 = icmp ugt i64 %16, 1
  br i1 %223, label %284, label %290

224:                                              ; preds = %204, %278
  %225 = phi float [ 0.000000e+00, %204 ], [ %281, %278 ]
  %226 = phi i64 [ 0, %204 ], [ %282, %278 ]
  br i1 %212, label %278, label %227

227:                                              ; preds = %224
  br i1 %219, label %238, label %228

228:                                              ; preds = %227, %228
  %229 = phi float [ %234, %228 ], [ 0.000000e+00, %227 ]
  %230 = phi float* [ %235, %228 ], [ %208, %227 ]
  %231 = phi i64 [ %236, %228 ], [ %218, %227 ]
  %232 = load float, float* %230, align 4
  %233 = fmul float %232, %232
  %234 = fadd float %229, %233
  %235 = getelementptr inbounds float, float* %230, i64 1
  %236 = add i64 %231, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %228, !llvm.loop !3

238:                                              ; preds = %228, %227
  %239 = phi float [ undef, %227 ], [ %234, %228 ]
  %240 = phi float [ 0.000000e+00, %227 ], [ %234, %228 ]
  %241 = phi float* [ %208, %227 ], [ %235, %228 ]
  br i1 %220, label %278, label %242

242:                                              ; preds = %238, %242
  %243 = phi float [ %275, %242 ], [ %240, %238 ]
  %244 = phi float* [ %276, %242 ], [ %241, %238 ]
  %245 = load float, float* %244, align 4
  %246 = fmul float %245, %245
  %247 = fadd float %243, %246
  %248 = getelementptr inbounds float, float* %244, i64 1
  %249 = load float, float* %248, align 4
  %250 = fmul float %249, %249
  %251 = fadd float %247, %250
  %252 = getelementptr inbounds float, float* %244, i64 2
  %253 = load float, float* %252, align 4
  %254 = fmul float %253, %253
  %255 = fadd float %251, %254
  %256 = getelementptr inbounds float, float* %244, i64 3
  %257 = load float, float* %256, align 4
  %258 = fmul float %257, %257
  %259 = fadd float %255, %258
  %260 = getelementptr inbounds float, float* %244, i64 4
  %261 = load float, float* %260, align 4
  %262 = fmul float %261, %261
  %263 = fadd float %259, %262
  %264 = getelementptr inbounds float, float* %244, i64 5
  %265 = load float, float* %264, align 4
  %266 = fmul float %265, %265
  %267 = fadd float %263, %266
  %268 = getelementptr inbounds float, float* %244, i64 6
  %269 = load float, float* %268, align 4
  %270 = fmul float %269, %269
  %271 = fadd float %267, %270
  %272 = getelementptr inbounds float, float* %244, i64 7
  %273 = load float, float* %272, align 4
  %274 = fmul float %273, %273
  %275 = fadd float %271, %274
  %276 = getelementptr inbounds float, float* %244, i64 8
  %277 = icmp eq float* %276, %211
  br i1 %277, label %278, label %242

278:                                              ; preds = %238, %242, %224
  %279 = phi float [ 0.000000e+00, %224 ], [ %239, %238 ], [ %275, %242 ]
  %280 = fcmp olt float %225, %279
  %281 = select i1 %280, float %279, float %225
  %282 = add nuw i64 %226, 1
  %283 = icmp ult i64 %282, %26
  br i1 %283, label %224, label %221

284:                                              ; preds = %221, %298
  %285 = phi float [ %299, %298 ], [ 0.000000e+00, %221 ]
  %286 = phi i64 [ %300, %298 ], [ 1, %221 ]
  br i1 %203, label %298, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %18, i64 %286, i32 0, i32 0
  %289 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %288, align 8
  br label %302

290:                                              ; preds = %298, %221
  %291 = phi float [ 0.000000e+00, %221 ], [ %299, %298 ]
  %292 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 7, i32 2
  %293 = load float, float* %292, align 4
  %294 = fmul float %293, 6.400000e+01
  %295 = fcmp olt float %222, %294
  %296 = select i1 %295, float %294, float %222
  %297 = fcmp olt float %291, %296
  br i1 %297, label %382, label %376

298:                                              ; preds = %370, %284
  %299 = phi float [ %285, %284 ], [ %373, %370 ]
  %300 = add nuw i64 %286, 1
  %301 = icmp eq i64 %300, %16
  br i1 %301, label %290, label %284

302:                                              ; preds = %287, %370
  %303 = phi float [ %285, %287 ], [ %373, %370 ]
  %304 = phi i64 [ 0, %287 ], [ %374, %370 ]
  %305 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %289, i64 %304, i32 0, i32 0
  %306 = load float*, float** %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %289, i64 %304, i32 0, i32 1
  %308 = load float*, float** %307, align 8
  %309 = icmp eq float* %306, %308
  br i1 %309, label %370, label %310

310:                                              ; preds = %302
  %311 = ptrtoint float* %306 to i64
  %312 = getelementptr float, float* %308, i64 -1
  %313 = ptrtoint float* %312 to i64
  %314 = sub i64 %313, %311
  %315 = lshr i64 %314, 2
  %316 = add nuw nsw i64 %315, 1
  %317 = and i64 %316, 7
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %329, label %319

319:                                              ; preds = %310, %319
  %320 = phi float [ %325, %319 ], [ 0.000000e+00, %310 ]
  %321 = phi float* [ %326, %319 ], [ %306, %310 ]
  %322 = phi i64 [ %327, %319 ], [ %317, %310 ]
  %323 = load float, float* %321, align 4
  %324 = fmul float %323, %323
  %325 = fadd float %320, %324
  %326 = getelementptr inbounds float, float* %321, i64 1
  %327 = add i64 %322, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %319, !llvm.loop !5

329:                                              ; preds = %319, %310
  %330 = phi float [ undef, %310 ], [ %325, %319 ]
  %331 = phi float [ 0.000000e+00, %310 ], [ %325, %319 ]
  %332 = phi float* [ %306, %310 ], [ %326, %319 ]
  %333 = icmp ult i64 %314, 28
  br i1 %333, label %370, label %334

334:                                              ; preds = %329, %334
  %335 = phi float [ %367, %334 ], [ %331, %329 ]
  %336 = phi float* [ %368, %334 ], [ %332, %329 ]
  %337 = load float, float* %336, align 4
  %338 = fmul float %337, %337
  %339 = fadd float %335, %338
  %340 = getelementptr inbounds float, float* %336, i64 1
  %341 = load float, float* %340, align 4
  %342 = fmul float %341, %341
  %343 = fadd float %339, %342
  %344 = getelementptr inbounds float, float* %336, i64 2
  %345 = load float, float* %344, align 4
  %346 = fmul float %345, %345
  %347 = fadd float %343, %346
  %348 = getelementptr inbounds float, float* %336, i64 3
  %349 = load float, float* %348, align 4
  %350 = fmul float %349, %349
  %351 = fadd float %347, %350
  %352 = getelementptr inbounds float, float* %336, i64 4
  %353 = load float, float* %352, align 4
  %354 = fmul float %353, %353
  %355 = fadd float %351, %354
  %356 = getelementptr inbounds float, float* %336, i64 5
  %357 = load float, float* %356, align 4
  %358 = fmul float %357, %357
  %359 = fadd float %355, %358
  %360 = getelementptr inbounds float, float* %336, i64 6
  %361 = load float, float* %360, align 4
  %362 = fmul float %361, %361
  %363 = fadd float %359, %362
  %364 = getelementptr inbounds float, float* %336, i64 7
  %365 = load float, float* %364, align 4
  %366 = fmul float %365, %365
  %367 = fadd float %363, %366
  %368 = getelementptr inbounds float, float* %336, i64 8
  %369 = icmp eq float* %368, %308
  br i1 %369, label %370, label %334

370:                                              ; preds = %329, %334, %302
  %371 = phi float [ 0.000000e+00, %302 ], [ %330, %329 ], [ %367, %334 ]
  %372 = fcmp olt float %303, %371
  %373 = select i1 %372, float %371, float %303
  %374 = add nuw i64 %304, 1
  %375 = icmp ult i64 %374, %26
  br i1 %375, label %302, label %298

376:                                              ; preds = %290
  %377 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 7, i32 3
  %378 = load float, float* %377, align 4
  %379 = fdiv float %222, %291
  %380 = tail call float @sqrtf(float %379) #11
  %381 = fmul float %378, %380
  br label %382

382:                                              ; preds = %290, %376
  %383 = phi float [ %381, %376 ], [ 1.000000e+00, %290 ]
  %384 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %385 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %384, align 8
  %386 = bitcast %"class.webrtc::NearendDetector"* %385 to i1 (%"class.webrtc::NearendDetector"*)***
  %387 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %386, align 8
  %388 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %387, i64 2
  %389 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %388, align 8
  %390 = tail call zeroext i1 %389(%"class.webrtc::NearendDetector"* %385) #11
  br i1 %390, label %515, label %391

391:                                              ; preds = %382
  %392 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 3
  %393 = load i64, i64* %392, align 8
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %515, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 7, i32 0
  %397 = load float, float* %396, align 4
  br label %400

398:                                              ; preds = %400
  %399 = icmp ult i64 %511, %393
  br i1 %399, label %400, label %515

400:                                              ; preds = %395, %398
  %401 = phi i64 [ 0, %395 ], [ %511, %398 ]
  %402 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 1
  %403 = load float, float* %402, align 4
  %404 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 2
  %405 = load float, float* %404, align 4
  %406 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 3
  %407 = load float, float* %406, align 4
  %408 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 4
  %409 = load float, float* %408, align 4
  %410 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 5
  %411 = load float, float* %410, align 4
  %412 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 6
  %413 = load float, float* %412, align 4
  %414 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 7
  %415 = load float, float* %414, align 4
  %416 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 8
  %417 = load float, float* %416, align 4
  %418 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 9
  %419 = load float, float* %418, align 4
  %420 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 10
  %421 = load float, float* %420, align 4
  %422 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 11
  %423 = load float, float* %422, align 4
  %424 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 12
  %425 = load float, float* %424, align 4
  %426 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 13
  %427 = load float, float* %426, align 4
  %428 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 14
  %429 = load float, float* %428, align 4
  %430 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %401, i32 0, i64 15
  %431 = load float, float* %430, align 4
  %432 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 1
  %433 = load float, float* %432, align 4
  %434 = fadd float %433, 0.000000e+00
  %435 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 2
  %436 = load float, float* %435, align 4
  %437 = insertelement <2 x float> undef, float %403, i32 0
  %438 = insertelement <2 x float> %437, float %434, i32 1
  %439 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %436, i32 1
  %440 = fadd <2 x float> %438, %439
  %441 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 3
  %442 = load float, float* %441, align 4
  %443 = insertelement <2 x float> undef, float %405, i32 0
  %444 = insertelement <2 x float> %443, float %442, i32 1
  %445 = fadd <2 x float> %440, %444
  %446 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 4
  %447 = load float, float* %446, align 4
  %448 = insertelement <2 x float> undef, float %407, i32 0
  %449 = insertelement <2 x float> %448, float %447, i32 1
  %450 = fadd <2 x float> %445, %449
  %451 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 5
  %452 = load float, float* %451, align 4
  %453 = insertelement <2 x float> undef, float %409, i32 0
  %454 = insertelement <2 x float> %453, float %452, i32 1
  %455 = fadd <2 x float> %450, %454
  %456 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 6
  %457 = load float, float* %456, align 4
  %458 = insertelement <2 x float> undef, float %411, i32 0
  %459 = insertelement <2 x float> %458, float %457, i32 1
  %460 = fadd <2 x float> %455, %459
  %461 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 7
  %462 = load float, float* %461, align 4
  %463 = insertelement <2 x float> undef, float %413, i32 0
  %464 = insertelement <2 x float> %463, float %462, i32 1
  %465 = fadd <2 x float> %460, %464
  %466 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 8
  %467 = load float, float* %466, align 4
  %468 = insertelement <2 x float> undef, float %415, i32 0
  %469 = insertelement <2 x float> %468, float %467, i32 1
  %470 = fadd <2 x float> %465, %469
  %471 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 9
  %472 = load float, float* %471, align 4
  %473 = insertelement <2 x float> undef, float %417, i32 0
  %474 = insertelement <2 x float> %473, float %472, i32 1
  %475 = fadd <2 x float> %470, %474
  %476 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 10
  %477 = load float, float* %476, align 4
  %478 = insertelement <2 x float> undef, float %419, i32 0
  %479 = insertelement <2 x float> %478, float %477, i32 1
  %480 = fadd <2 x float> %475, %479
  %481 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 11
  %482 = load float, float* %481, align 4
  %483 = insertelement <2 x float> undef, float %421, i32 0
  %484 = insertelement <2 x float> %483, float %482, i32 1
  %485 = fadd <2 x float> %480, %484
  %486 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 12
  %487 = load float, float* %486, align 4
  %488 = insertelement <2 x float> undef, float %423, i32 0
  %489 = insertelement <2 x float> %488, float %487, i32 1
  %490 = fadd <2 x float> %485, %489
  %491 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 13
  %492 = load float, float* %491, align 4
  %493 = insertelement <2 x float> undef, float %425, i32 0
  %494 = insertelement <2 x float> %493, float %492, i32 1
  %495 = fadd <2 x float> %490, %494
  %496 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 14
  %497 = load float, float* %496, align 4
  %498 = insertelement <2 x float> undef, float %427, i32 0
  %499 = insertelement <2 x float> %498, float %497, i32 1
  %500 = fadd <2 x float> %495, %499
  %501 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %401, i32 0, i64 15
  %502 = load float, float* %501, align 4
  %503 = insertelement <2 x float> undef, float %429, i32 0
  %504 = insertelement <2 x float> %503, float %502, i32 1
  %505 = fadd <2 x float> %500, %504
  %506 = extractelement <2 x float> %505, i32 0
  %507 = fadd float %506, %431
  %508 = extractelement <2 x float> %505, i32 1
  %509 = fmul float %508, %397
  %510 = fcmp ogt float %507, %509
  %511 = add nuw i64 %401, 1
  br i1 %510, label %512, label %398

512:                                              ; preds = %400
  %513 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 7, i32 1
  %514 = load float, float* %513, align 4
  br label %515

515:                                              ; preds = %398, %391, %512, %382
  %516 = phi float [ 1.000000e+00, %382 ], [ %514, %512 ], [ 1.000000e+00, %391 ], [ 1.000000e+00, %398 ]
  %517 = bitcast i32 %197 to float
  %518 = fcmp olt float %383, %517
  %519 = select i1 %518, float %383, float %517
  %520 = fcmp olt float %516, %519
  %521 = select i1 %520, float %516, float %519
  br label %522

522:                                              ; preds = %198, %515, %30, %9
  %523 = phi float [ 1.000000e+00, %9 ], [ 0x3F50624DE0000000, %30 ], [ %201, %198 ], [ %521, %515 ]
  ret float %523
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15SuppressionGain19GainToNoAudibleEchoERKNSt3__15arrayIfLm65EEES5_S5_PS3_(%"class.webrtc::SuppressionGain"* nocapture readonly, %"struct.std::__1::array"* nocapture readonly dereferenceable(260), %"struct.std::__1::array"* nocapture readonly dereferenceable(260), %"struct.std::__1::array"* nocapture readonly dereferenceable(260), %"struct.std::__1::array"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %6, align 8
  %8 = bitcast %"class.webrtc::NearendDetector"* %7 to i1 (%"class.webrtc::NearendDetector"*)***
  %9 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %9, i64 2
  %11 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.webrtc::NearendDetector"* %7) #11
  %13 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12
  %14 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13
  %15 = select i1 %12, %"struct.webrtc::SuppressionGain::GainParameters"* %13, %"struct.webrtc::SuppressionGain::GainParameters"* %14
  br label %17

16:                                               ; preds = %51
  ret void

17:                                               ; preds = %51, %5
  %18 = phi i64 [ 0, %5 ], [ %55, %51 ]
  %19 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 %18
  %22 = load float, float* %21, align 4
  %23 = fadd float %22, 1.000000e+00
  %24 = fdiv float %20, %23
  %25 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 %18
  %26 = load float, float* %25, align 4
  %27 = fadd float %26, 1.000000e+00
  %28 = fdiv float %20, %27
  %29 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %15, i64 0, i32 2, i32 0, i64 %18
  %30 = load float, float* %29, align 4
  %31 = fcmp ogt float %24, %30
  br i1 %31, label %32, label %51

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %15, i64 0, i32 4, i32 0, i64 %18
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %28, %34
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %15, i64 0, i32 3, i32 0, i64 %18
  %38 = load float, float* %37, align 4
  %39 = fsub float %38, %24
  %40 = fsub float %38, %30
  %41 = insertelement <2 x float> undef, float %39, i32 0
  %42 = insertelement <2 x float> %41, float %34, i32 1
  %43 = insertelement <2 x float> undef, float %40, i32 0
  %44 = insertelement <2 x float> %43, float %28, i32 1
  %45 = fdiv <2 x float> %42, %44
  %46 = extractelement <2 x float> %45, i32 0
  %47 = extractelement <2 x float> %45, i32 1
  %48 = fcmp olt float %46, %47
  %49 = select i1 %48, float %47, float %46
  %50 = bitcast float %49 to i32
  br label %51

51:                                               ; preds = %36, %32, %17
  %52 = phi i32 [ %50, %36 ], [ 1065353216, %32 ], [ 1065353216, %17 ]
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %18
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 4
  %55 = add nuw nsw i64 %18, 1
  %56 = icmp eq i64 %55, 65
  br i1 %56, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15SuppressionGain10GetMinGainEN3rtc9ArrayViewIKfLln4711EEES4_S4_bbNS2_IfLln4711EEE(%"class.webrtc::SuppressionGain"* nocapture readonly, float*, i64, float*, i64, %"class.rtc::ArrayView.40"* nocapture readonly byval(%"class.rtc::ArrayView.40") align 8, i1 zeroext, i1 zeroext, %"class.rtc::ArrayView.42"* nocapture readonly byval(%"class.rtc::ArrayView.42") align 8) local_unnamed_addr #0 align 2 {
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  br i1 %7, label %80, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 0
  %15 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 1
  %16 = select i1 %6, float* %14, float* %15
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"class.rtc::ArrayView.42", %"class.rtc::ArrayView.42"* %8, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = getelementptr inbounds %"class.rtc::ArrayView.42", %"class.rtc::ArrayView.42"* %8, i64 0, i32 0, i32 0
  %22 = load float*, float** %21, align 8
  br i1 %20, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast float* %10 to i8*
  br label %43

25:                                               ; preds = %43, %13
  %26 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %26, align 8
  %28 = bitcast %"class.webrtc::NearendDetector"* %27 to i1 (%"class.webrtc::NearendDetector"*)***
  %29 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %29, i64 2
  %31 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.webrtc::NearendDetector"* %27) #11
  %33 = getelementptr inbounds %"class.rtc::ArrayView.40", %"class.rtc::ArrayView.40"* %5, i64 0, i32 0, i32 0
  %34 = load float*, float** %33, align 8
  %35 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 1
  %36 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 1
  %37 = select i1 %32, float* %35, float* %36
  %38 = bitcast float* %11 to i8*
  %39 = bitcast float* %12 to i8*
  %40 = load float, float* %3, align 4
  %41 = load float, float* %34, align 4
  %42 = fcmp ogt float %40, %41
  br i1 %42, label %58, label %74

43:                                               ; preds = %23, %43
  %44 = phi i64 [ 0, %23 ], [ %56, %43 ]
  %45 = getelementptr inbounds float, float* %1, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fcmp ogt float %46, 0.000000e+00
  %48 = fdiv float %17, %46
  %49 = select i1 %47, float %48, float 1.000000e+00
  %50 = getelementptr inbounds float, float* %22, i64 %44
  store float %49, float* %50, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  store float 1.000000e+00, float* %10, align 4
  %51 = fcmp ogt float %49, 1.000000e+00
  %52 = select i1 %51, float* %10, float* %50
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = bitcast float* %50 to i32*
  store i32 %54, i32* %55, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  %56 = add nuw i64 %44, 1
  %57 = icmp ult i64 %56, %19
  br i1 %57, label %43, label %25

58:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %59 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 0
  %60 = load float, float* %59, align 4
  %61 = load float, float* %37, align 4
  %62 = fmul float %60, %61
  store float %62, float* %11, align 4
  %63 = load float, float* %22, align 4
  %64 = fcmp olt float %63, %62
  %65 = select i1 %64, float* %11, float* %22
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = bitcast float* %22 to i32*
  store i32 %67, i32* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %69 = bitcast i32 %67 to float
  %70 = fcmp ogt float %69, 1.000000e+00
  %71 = select i1 %70, float* %12, float* %22
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %74

74:                                               ; preds = %58, %25
  %75 = getelementptr inbounds float, float* %3, i64 1
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds float, float* %34, i64 1
  %78 = load float, float* %77, align 4
  %79 = fcmp ogt float %76, %78
  br i1 %79, label %94, label %111

80:                                               ; preds = %9
  %81 = getelementptr inbounds %"class.rtc::ArrayView.42", %"class.rtc::ArrayView.42"* %8, i64 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = shl i64 %82, 2
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %93

85:                                               ; preds = %80
  %86 = bitcast %"class.rtc::ArrayView.42"* %8 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = icmp slt i64 %82, 1
  %89 = select i1 %88, i64 %82, i64 1
  %90 = shl i64 %89, 2
  %91 = add i64 %90, -4
  %92 = sub i64 %83, %91
  call void @llvm.memset.p0i8.i64(i8* align 4 %87, i8 0, i64 %92, i1 false)
  br label %93

93:                                               ; preds = %180, %186, %85, %80
  ret void

94:                                               ; preds = %74
  %95 = getelementptr inbounds float, float* %22, i64 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %96 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 1
  %97 = load float, float* %96, align 4
  %98 = load float, float* %37, align 4
  %99 = fmul float %97, %98
  store float %99, float* %11, align 4
  %100 = load float, float* %95, align 4
  %101 = fcmp olt float %100, %99
  %102 = select i1 %101, float* %11, float* %95
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = bitcast float* %95 to i32*
  store i32 %104, i32* %105, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %106 = bitcast i32 %104 to float
  %107 = fcmp ogt float %106, 1.000000e+00
  %108 = select i1 %107, float* %12, float* %95
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %105, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %111

111:                                              ; preds = %94, %74
  %112 = getelementptr inbounds float, float* %3, i64 2
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds float, float* %34, i64 2
  %115 = load float, float* %114, align 4
  %116 = fcmp ogt float %113, %115
  br i1 %116, label %117, label %134

117:                                              ; preds = %111
  %118 = getelementptr inbounds float, float* %22, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %119 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 2
  %120 = load float, float* %119, align 4
  %121 = load float, float* %37, align 4
  %122 = fmul float %120, %121
  store float %122, float* %11, align 4
  %123 = load float, float* %118, align 4
  %124 = fcmp olt float %123, %122
  %125 = select i1 %124, float* %11, float* %118
  %126 = bitcast float* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = bitcast float* %118 to i32*
  store i32 %127, i32* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %129 = bitcast i32 %127 to float
  %130 = fcmp ogt float %129, 1.000000e+00
  %131 = select i1 %130, float* %12, float* %118
  %132 = bitcast float* %131 to i32*
  %133 = load i32, i32* %132, align 4
  store i32 %133, i32* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %134

134:                                              ; preds = %117, %111
  %135 = getelementptr inbounds float, float* %3, i64 3
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds float, float* %34, i64 3
  %138 = load float, float* %137, align 4
  %139 = fcmp ogt float %136, %138
  br i1 %139, label %140, label %157

140:                                              ; preds = %134
  %141 = getelementptr inbounds float, float* %22, i64 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %142 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 3
  %143 = load float, float* %142, align 4
  %144 = load float, float* %37, align 4
  %145 = fmul float %143, %144
  store float %145, float* %11, align 4
  %146 = load float, float* %141, align 4
  %147 = fcmp olt float %146, %145
  %148 = select i1 %147, float* %11, float* %141
  %149 = bitcast float* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = bitcast float* %141 to i32*
  store i32 %150, i32* %151, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %152 = bitcast i32 %150 to float
  %153 = fcmp ogt float %152, 1.000000e+00
  %154 = select i1 %153, float* %12, float* %141
  %155 = bitcast float* %154 to i32*
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %151, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %157

157:                                              ; preds = %140, %134
  %158 = getelementptr inbounds float, float* %3, i64 4
  %159 = load float, float* %158, align 4
  %160 = getelementptr inbounds float, float* %34, i64 4
  %161 = load float, float* %160, align 4
  %162 = fcmp ogt float %159, %161
  br i1 %162, label %163, label %180

163:                                              ; preds = %157
  %164 = getelementptr inbounds float, float* %22, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %165 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 4
  %166 = load float, float* %165, align 4
  %167 = load float, float* %37, align 4
  %168 = fmul float %166, %167
  store float %168, float* %11, align 4
  %169 = load float, float* %164, align 4
  %170 = fcmp olt float %169, %168
  %171 = select i1 %170, float* %11, float* %164
  %172 = bitcast float* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = bitcast float* %164 to i32*
  store i32 %173, i32* %174, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %175 = bitcast i32 %173 to float
  %176 = fcmp ogt float %175, 1.000000e+00
  %177 = select i1 %176, float* %12, float* %164
  %178 = bitcast float* %177 to i32*
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %174, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %180

180:                                              ; preds = %163, %157
  %181 = getelementptr inbounds float, float* %3, i64 5
  %182 = load float, float* %181, align 4
  %183 = getelementptr inbounds float, float* %34, i64 5
  %184 = load float, float* %183, align 4
  %185 = fcmp ogt float %182, %184
  br i1 %185, label %186, label %93

186:                                              ; preds = %180
  %187 = getelementptr inbounds float, float* %22, i64 5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %188 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 5
  %189 = load float, float* %188, align 4
  %190 = load float, float* %37, align 4
  %191 = fmul float %189, %190
  store float %191, float* %11, align 4
  %192 = load float, float* %187, align 4
  %193 = fcmp olt float %192, %191
  %194 = select i1 %193, float* %11, float* %187
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = bitcast float* %187 to i32*
  store i32 %196, i32* %197, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store float 1.000000e+00, float* %12, align 4
  %198 = bitcast i32 %196 to float
  %199 = fcmp ogt float %198, 1.000000e+00
  %200 = select i1 %199, float* %12, float* %187
  %201 = bitcast float* %200 to i32*
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %197, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  br label %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15SuppressionGain10GetMaxGainEN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::SuppressionGain"* nocapture readonly, float*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %6, align 8
  %8 = bitcast %"class.webrtc::NearendDetector"* %7 to i1 (%"class.webrtc::NearendDetector"*)***
  %9 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %9, i64 2
  %11 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.webrtc::NearendDetector"* %7) #11
  %13 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 0
  %14 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 0
  %15 = select i1 %12, float* %13, float* %14
  %16 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 8
  %17 = icmp eq i64 %2, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = bitcast float* %4 to i8*
  %20 = bitcast float* %5 to i8*
  br label %22

21:                                               ; preds = %22, %3
  ret void

22:                                               ; preds = %22, %18
  %23 = phi i64 [ 0, %18 ], [ %38, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  %24 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load float, float* %15, align 4
  %27 = fmul float %25, %26
  store float %27, float* %4, align 4
  %28 = load float, float* %16, align 4
  %29 = fcmp olt float %27, %28
  %30 = select i1 %29, float* %16, float* %4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store float 1.000000e+00, float* %5, align 4
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 1.000000e+00
  %33 = select i1 %32, float* %5, float* %30
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds float, float* %1, i64 %23
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  %38 = add nuw i64 %23, 1
  %39 = icmp eq i64 %38, %2
  br i1 %39, label %21, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGain13LowerBandGainEbRKNS_8AecStateEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEESA_SA_bPS8_(%"class.webrtc::SuppressionGain"* nocapture, i1 zeroext, %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, i1 zeroext, %"struct.std::__1::array"*) local_unnamed_addr #3 align 2 {
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"struct.std::__1::array", align 4
  %13 = alloca %"struct.std::__1::array", align 4
  %14 = alloca %"struct.std::__1::array", align 4
  %15 = alloca %"struct.std::__1::array", align 4
  %16 = alloca %"struct.std::__1::array", align 4
  %17 = alloca %"class.rtc::ArrayView.40", align 8
  %18 = alloca %"class.rtc::ArrayView.42", align 8
  %19 = alloca %"class.webrtc::aec3::VectorMath", align 4
  %20 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 0
  %21 = bitcast %"struct.std::__1::array"* %8 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %21, align 4
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 4
  %23 = bitcast float* %22 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %23, align 4
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 8
  %25 = bitcast float* %24 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %25, align 4
  %26 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 12
  %27 = bitcast float* %26 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %27, align 4
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 16
  %29 = bitcast float* %28 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %29, align 4
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 20
  %31 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %31, align 4
  %32 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 24
  %33 = bitcast float* %32 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %33, align 4
  %34 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 28
  %35 = bitcast float* %34 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %35, align 4
  %36 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 32
  %37 = bitcast float* %36 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %37, align 4
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 36
  %39 = bitcast float* %38 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %39, align 4
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 40
  %41 = bitcast float* %40 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 44
  %43 = bitcast float* %42 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %43, align 4
  %44 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 48
  %45 = bitcast float* %44 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %45, align 4
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 52
  %47 = bitcast float* %46 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %47, align 4
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 56
  %49 = bitcast float* %48 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 60
  %51 = bitcast float* %50 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %53 = bitcast float* %52 to i32*
  store i32 1065353216, i32* %53, align 4
  %54 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 10, i32 0
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = bitcast %"struct.std::__1::array"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 -1, i64 260, i1 false)
  %57 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %57, align 8
  %59 = bitcast %"class.webrtc::NearendDetector"* %58 to i1 (%"class.webrtc::NearendDetector"*)***
  %60 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %60, i64 2
  %62 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.webrtc::NearendDetector"* %58) #11
  %64 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 0
  %65 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 0
  %66 = select i1 %63, float* %64, float* %65
  %67 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 8
  %68 = bitcast float* %10 to i8*
  %69 = bitcast float* %11 to i8*
  %70 = load float, float* %66, align 4
  %71 = load float, float* %67, align 4
  br label %72

72:                                               ; preds = %653, %9
  %73 = phi i64 [ 0, %9 ], [ %666, %653 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  %74 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 %73
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %70
  store float %76, float* %10, align 4
  %77 = fcmp olt float %76, %71
  %78 = select i1 %77, float* %67, float* %10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store float 1.000000e+00, float* %11, align 4
  %79 = load float, float* %78, align 4
  %80 = fcmp ogt float %79, 1.000000e+00
  %81 = select i1 %80, float* %11, float* %78
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %73
  %85 = bitcast float* %84 to i32*
  store i32 %83, i32* %85, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  %86 = or i64 %73, 1
  %87 = icmp eq i64 %86, 65
  br i1 %87, label %88, label %653

88:                                               ; preds = %72
  %89 = icmp ne i8 %55, 0
  %90 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %126, label %93

93:                                               ; preds = %88
  %94 = bitcast %"struct.std::__1::array"* %13 to i8*
  %95 = bitcast %"struct.std::__1::array"* %14 to i8*
  %96 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 0
  %98 = bitcast %"struct.std::__1::array"* %15 to i8*
  %99 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %100 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 0
  %102 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 2
  %103 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 3
  %104 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 1
  %105 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 2
  %106 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 4
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 3
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 4
  %109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 5
  %110 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 6
  %111 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 5, i32 5
  %112 = bitcast %"struct.std::__1::array"* %16 to i8*
  %113 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6, i32 0, i32 0
  %114 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7, i32 0, i32 0
  %115 = getelementptr inbounds %"class.rtc::ArrayView.40", %"class.rtc::ArrayView.40"* %17, i64 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.rtc::ArrayView.40", %"class.rtc::ArrayView.40"* %17, i64 0, i32 0, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %16, i64 0, i32 0, i64 0
  %118 = getelementptr inbounds %"class.rtc::ArrayView.42", %"class.rtc::ArrayView.42"* %18, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.rtc::ArrayView.42", %"class.rtc::ArrayView.42"* %18, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %6, i64 0, i32 0, i32 0
  %121 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %120, align 8
  %122 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12
  %123 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13
  %124 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 7
  %125 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 1, i32 0, i64 0
  br label %143

126:                                              ; preds = %354, %88
  %127 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 1
  %128 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 2
  %129 = load float, float* %128, align 4
  %130 = load float, float* %127, align 4
  %131 = fcmp olt float %129, %130
  %132 = select i1 %131, float %129, float %130
  store float %132, float* %127, align 4
  store float %132, float* %20, align 4
  %133 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %57, align 8
  %134 = bitcast %"class.webrtc::NearendDetector"* %133 to i1 (%"class.webrtc::NearendDetector"*)***
  %135 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %135, i64 2
  %137 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %136, align 8
  %138 = call zeroext i1 %137(%"class.webrtc::NearendDetector"* %133) #11
  %139 = xor i1 %138, true
  %140 = or i1 %139, %7
  %141 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 9
  %142 = load i8, i8* %141, align 8, !range !2
  br i1 %140, label %387, label %385

143:                                              ; preds = %93, %354
  %144 = phi i64 [ 0, %93 ], [ %361, %354 ]
  %145 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 7
  %146 = add i64 %144, 1
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %94) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 -1, i64 260, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %95) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %95, i8 -1, i64 260, i1 false)
  %147 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %96, align 8
  %148 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %147, i64 %144
  %149 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %144, i32 0, i64 0
  call void @_ZN6webrtc4aec313MovingAverage7AverageEN3rtc9ArrayViewIKfLln4711EEENS3_IfLln4711EEE(%"class.webrtc::aec3::MovingAverage"* %148, float* %149, i64 65, float* nonnull %97, i64 65) #11
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %98) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 -1, i64 260, i1 false)
  %150 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 0
  %151 = load float, float* %102, align 4
  %152 = load float, float* %103, align 4
  %153 = fmul float %151, %152
  %154 = fsub float %153, %151
  %155 = fdiv float 1.000000e+00, %154
  %156 = load float, float* %150, align 4
  %157 = fcmp olt float %156, %153
  br i1 %157, label %158, label %166

158:                                              ; preds = %143
  %159 = fsub float %153, %156
  %160 = fmul float %159, %155
  %161 = fmul float %160, %160
  %162 = fsub float 1.000000e+00, %161
  %163 = fcmp ogt float %162, 0.000000e+00
  %164 = select i1 %163, float %162, float 0.000000e+00
  %165 = fmul float %156, %164
  br label %166

166:                                              ; preds = %158, %143
  %167 = phi float [ %165, %158 ], [ %156, %143 ]
  store float %167, float* %101, align 4
  %168 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 1
  %169 = load float, float* %168, align 4
  %170 = fcmp olt float %169, %153
  br i1 %170, label %272, label %280

171:                                              ; preds = %293
  %172 = fsub float %296, %300
  %173 = fmul float %172, %298
  %174 = fmul float %173, %173
  %175 = fsub float 1.000000e+00, %174
  %176 = fcmp ogt float %175, 0.000000e+00
  %177 = select i1 %176, float %175, float 0.000000e+00
  %178 = fmul float %300, %177
  br label %179

179:                                              ; preds = %293, %171
  %180 = phi float [ %178, %171 ], [ %300, %293 ]
  store float %180, float* %107, align 4
  %181 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 4
  %182 = load float, float* %181, align 4
  %183 = fcmp olt float %182, %296
  br i1 %183, label %202, label %210

184:                                              ; preds = %246, %197
  %185 = phi i64 [ %200, %197 ], [ %247, %246 ]
  %186 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 %185
  %187 = load float, float* %186, align 4
  %188 = fcmp olt float %187, %239
  br i1 %188, label %189, label %197

189:                                              ; preds = %184
  %190 = fsub float %239, %187
  %191 = fmul float %241, %190
  %192 = fmul float %191, %191
  %193 = fsub float 1.000000e+00, %192
  %194 = fcmp ogt float %193, 0.000000e+00
  %195 = select i1 %194, float %193, float 0.000000e+00
  %196 = fmul float %187, %195
  br label %197

197:                                              ; preds = %189, %184
  %198 = phi float [ %196, %189 ], [ %187, %184 ]
  %199 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 %185
  store float %198, float* %199, align 4
  %200 = add nuw nsw i64 %185, 1
  %201 = icmp eq i64 %200, 65
  br i1 %201, label %302, label %184, !llvm.loop !6

202:                                              ; preds = %179
  %203 = fsub float %296, %182
  %204 = fmul float %298, %203
  %205 = fmul float %204, %204
  %206 = fsub float 1.000000e+00, %205
  %207 = fcmp ogt float %206, 0.000000e+00
  %208 = select i1 %207, float %206, float 0.000000e+00
  %209 = fmul float %182, %208
  br label %210

210:                                              ; preds = %202, %179
  %211 = phi float [ %209, %202 ], [ %182, %179 ]
  store float %211, float* %108, align 4
  %212 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 5
  %213 = load float, float* %212, align 4
  %214 = fcmp olt float %213, %296
  br i1 %214, label %215, label %223

215:                                              ; preds = %210
  %216 = fsub float %296, %213
  %217 = fmul float %298, %216
  %218 = fmul float %217, %217
  %219 = fsub float 1.000000e+00, %218
  %220 = fcmp ogt float %219, 0.000000e+00
  %221 = select i1 %220, float %219, float 0.000000e+00
  %222 = fmul float %213, %221
  br label %223

223:                                              ; preds = %215, %210
  %224 = phi float [ %222, %215 ], [ %213, %210 ]
  store float %224, float* %109, align 4
  %225 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 6
  %226 = load float, float* %225, align 4
  %227 = fcmp olt float %226, %296
  br i1 %227, label %228, label %236

228:                                              ; preds = %223
  %229 = fsub float %296, %226
  %230 = fmul float %298, %229
  %231 = fmul float %230, %230
  %232 = fsub float 1.000000e+00, %231
  %233 = fcmp ogt float %232, 0.000000e+00
  %234 = select i1 %233, float %232, float 0.000000e+00
  %235 = fmul float %226, %234
  br label %236

236:                                              ; preds = %228, %223
  %237 = phi float [ %235, %228 ], [ %226, %223 ]
  store float %237, float* %110, align 4
  %238 = load float, float* %111, align 4
  %239 = fmul float %151, %238
  %240 = fsub float %239, %151
  %241 = fdiv float 1.000000e+00, %240
  %242 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %146, i32 0, i64 0
  %243 = icmp ult float* %124, %242
  %244 = icmp ult float* %145, %125
  %245 = and i1 %243, %244
  br i1 %245, label %246, label %248

246:                                              ; preds = %253, %236
  %247 = phi i64 [ 7, %236 ], [ 63, %253 ]
  br label %184

248:                                              ; preds = %236
  %249 = insertelement <4 x float> undef, float %239, i32 0
  %250 = shufflevector <4 x float> %249, <4 x float> undef, <4 x i32> zeroinitializer
  %251 = insertelement <4 x float> undef, float %241, i32 0
  %252 = shufflevector <4 x float> %251, <4 x float> undef, <4 x i32> zeroinitializer
  br label %253

253:                                              ; preds = %253, %248
  %254 = phi i64 [ 0, %248 ], [ %270, %253 ]
  %255 = add i64 %254, 7
  %256 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 %255
  %257 = bitcast float* %256 to <4 x float>*
  %258 = load <4 x float>, <4 x float>* %257, align 4, !alias.scope !8
  %259 = fcmp uge <4 x float> %258, %250
  %260 = fsub <4 x float> %250, %258
  %261 = fmul <4 x float> %252, %260
  %262 = fmul <4 x float> %261, %261
  %263 = fsub <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %262
  %264 = fcmp ogt <4 x float> %263, zeroinitializer
  %265 = select <4 x i1> %264, <4 x float> %263, <4 x float> zeroinitializer
  %266 = fmul <4 x float> %258, %265
  %267 = select <4 x i1> %259, <4 x float> %258, <4 x float> %266
  %268 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 %255
  %269 = bitcast float* %268 to <4 x float>*
  store <4 x float> %267, <4 x float>* %269, align 4, !alias.scope !11, !noalias !8
  %270 = add i64 %254, 4
  %271 = icmp eq i64 %270, 56
  br i1 %271, label %246, label %253, !llvm.loop !13

272:                                              ; preds = %166
  %273 = fsub float %153, %169
  %274 = fmul float %155, %273
  %275 = fmul float %274, %274
  %276 = fsub float 1.000000e+00, %275
  %277 = fcmp ogt float %276, 0.000000e+00
  %278 = select i1 %277, float %276, float 0.000000e+00
  %279 = fmul float %169, %278
  br label %280

280:                                              ; preds = %272, %166
  %281 = phi float [ %279, %272 ], [ %169, %166 ]
  store float %281, float* %104, align 4
  %282 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 2
  %283 = load float, float* %282, align 4
  %284 = fcmp olt float %283, %153
  br i1 %284, label %285, label %293

285:                                              ; preds = %280
  %286 = fsub float %153, %283
  %287 = fmul float %155, %286
  %288 = fmul float %287, %287
  %289 = fsub float 1.000000e+00, %288
  %290 = fcmp ogt float %289, 0.000000e+00
  %291 = select i1 %290, float %289, float 0.000000e+00
  %292 = fmul float %283, %291
  br label %293

293:                                              ; preds = %285, %280
  %294 = phi float [ %292, %285 ], [ %283, %280 ]
  store float %294, float* %105, align 4
  %295 = load float, float* %106, align 4
  %296 = fmul float %151, %295
  %297 = fsub float %296, %151
  %298 = fdiv float 1.000000e+00, %297
  %299 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %100, i64 %144, i32 0, i64 3
  %300 = load float, float* %299, align 4
  %301 = fcmp olt float %300, %296
  br i1 %301, label %171, label %179

302:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %112) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 -1, i64 260, i1 false)
  %303 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %113, align 8
  %304 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %303, i64 %144, i32 0, i64 0
  %305 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %114, align 8
  %306 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %305, i64 %144, i32 0, i64 0
  store float* %306, float** %115, align 8
  store i64 65, i64* %116, align 8
  store float* %117, float** %118, align 8
  store i64 65, i64* %119, align 8
  call void @_ZNK6webrtc15SuppressionGain10GetMinGainEN3rtc9ArrayViewIKfLln4711EEES4_S4_bbNS2_IfLln4711EEE(%"class.webrtc::SuppressionGain"* %0, float* nonnull %101, i64 65, float* %304, i64 65, %"class.rtc::ArrayView.40"* nonnull byval(%"class.rtc::ArrayView.40") align 8 %17, i1 zeroext %1, i1 zeroext %89, %"class.rtc::ArrayView.42"* nonnull byval(%"class.rtc::ArrayView.42") align 8 %18)
  %307 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %57, align 8
  %308 = bitcast %"class.webrtc::NearendDetector"* %307 to i1 (%"class.webrtc::NearendDetector"*)***
  %309 = load i1 (%"class.webrtc::NearendDetector"*)**, i1 (%"class.webrtc::NearendDetector"*)*** %308, align 8
  %310 = getelementptr inbounds i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %309, i64 2
  %311 = load i1 (%"class.webrtc::NearendDetector"*)*, i1 (%"class.webrtc::NearendDetector"*)** %310, align 8
  %312 = call zeroext i1 %311(%"class.webrtc::NearendDetector"* %307) #11
  %313 = select i1 %312, %"struct.webrtc::SuppressionGain::GainParameters"* %122, %"struct.webrtc::SuppressionGain::GainParameters"* %123
  br label %314

314:                                              ; preds = %348, %302
  %315 = phi i64 [ 0, %302 ], [ %352, %348 ]
  %316 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 0, i32 0, i64 %315
  %317 = load float, float* %316, align 4
  %318 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 %315
  %319 = load float, float* %318, align 4
  %320 = fadd float %319, 1.000000e+00
  %321 = fdiv float %317, %320
  %322 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %121, i64 0, i32 0, i64 %315
  %323 = load float, float* %322, align 4
  %324 = fadd float %323, 1.000000e+00
  %325 = fdiv float %317, %324
  %326 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %313, i64 0, i32 2, i32 0, i64 %315
  %327 = load float, float* %326, align 4
  %328 = fcmp ogt float %321, %327
  br i1 %328, label %329, label %348

329:                                              ; preds = %314
  %330 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %313, i64 0, i32 4, i32 0, i64 %315
  %331 = load float, float* %330, align 4
  %332 = fcmp ogt float %325, %331
  br i1 %332, label %333, label %348

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %313, i64 0, i32 3, i32 0, i64 %315
  %335 = load float, float* %334, align 4
  %336 = fsub float %335, %321
  %337 = fsub float %335, %327
  %338 = insertelement <2 x float> undef, float %336, i32 0
  %339 = insertelement <2 x float> %338, float %331, i32 1
  %340 = insertelement <2 x float> undef, float %337, i32 0
  %341 = insertelement <2 x float> %340, float %325, i32 1
  %342 = fdiv <2 x float> %339, %341
  %343 = extractelement <2 x float> %342, i32 0
  %344 = extractelement <2 x float> %342, i32 1
  %345 = fcmp olt float %343, %344
  %346 = select i1 %345, float %344, float %343
  %347 = bitcast float %346 to i32
  br label %348

348:                                              ; preds = %333, %329, %314
  %349 = phi i32 [ %347, %333 ], [ 1065353216, %329 ], [ 1065353216, %314 ]
  %350 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %13, i64 0, i32 0, i64 %315
  %351 = bitcast float* %350 to i32*
  store i32 %349, i32* %351, align 4
  %352 = add nuw nsw i64 %315, 1
  %353 = icmp eq i64 %352, 65
  br i1 %353, label %364, label %314

354:                                              ; preds = %364
  %355 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %113, align 8
  %356 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %355, i64 %144, i32 0, i64 0
  %357 = bitcast float* %356 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %357, i8* nonnull align 4 %95, i64 260, i1 false) #11
  %358 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %114, align 8
  %359 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %358, i64 %144, i32 0, i64 0
  %360 = bitcast float* %359 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %360, i8* nonnull align 4 %98, i64 260, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %98) #11
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %94) #11
  %361 = add nuw i64 %144, 1
  %362 = load i64, i64* %90, align 8
  %363 = icmp ult i64 %361, %362
  br i1 %363, label %143, label %126

364:                                              ; preds = %348, %364
  %365 = phi i64 [ %383, %364 ], [ 0, %348 ]
  %366 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %13, i64 0, i32 0, i64 %365
  %367 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %365
  %368 = load float, float* %367, align 4
  %369 = load float, float* %366, align 4
  %370 = fcmp olt float %368, %369
  %371 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %16, i64 0, i32 0, i64 %365
  %372 = select i1 %370, float %368, float %369
  %373 = load float, float* %371, align 4
  %374 = fcmp olt float %372, %373
  %375 = select i1 %374, float %373, float %372
  store float %375, float* %366, align 4
  %376 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 %365
  %377 = load float, float* %376, align 4
  %378 = fcmp olt float %375, %377
  %379 = select i1 %378, float* %366, float* %376
  %380 = bitcast float* %379 to i32*
  %381 = load i32, i32* %380, align 4
  %382 = bitcast float* %376 to i32*
  store i32 %381, i32* %382, align 4
  %383 = add nuw nsw i64 %365, 1
  %384 = icmp eq i64 %383, 65
  br i1 %384, label %354, label %364

385:                                              ; preds = %126
  %386 = icmp eq i8 %142, 0
  br i1 %386, label %556, label %387

387:                                              ; preds = %126, %385
  %388 = phi i8 [ 1, %385 ], [ %142, %126 ]
  %389 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 17
  %390 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 16
  %391 = load float, float* %390, align 4
  %392 = insertelement <4 x float> undef, float %391, i32 0
  %393 = shufflevector <4 x float> %392, <4 x float> undef, <4 x i32> zeroinitializer
  %394 = bitcast float* %389 to <4 x float>*
  %395 = load <4 x float>, <4 x float>* %394, align 4
  %396 = fcmp ogt <4 x float> %395, %393
  %397 = select <4 x i1> %396, <4 x float> %393, <4 x float> %395
  %398 = bitcast float* %389 to <4 x float>*
  store <4 x float> %397, <4 x float>* %398, align 4
  %399 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 21
  %400 = bitcast float* %399 to <4 x float>*
  %401 = load <4 x float>, <4 x float>* %400, align 4
  %402 = fcmp ogt <4 x float> %401, %393
  %403 = select <4 x i1> %402, <4 x float> %393, <4 x float> %401
  %404 = bitcast float* %399 to <4 x float>*
  store <4 x float> %403, <4 x float>* %404, align 4
  %405 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 25
  %406 = bitcast float* %405 to <4 x float>*
  %407 = load <4 x float>, <4 x float>* %406, align 4
  %408 = fcmp ogt <4 x float> %407, %393
  %409 = select <4 x i1> %408, <4 x float> %393, <4 x float> %407
  %410 = bitcast float* %405 to <4 x float>*
  store <4 x float> %409, <4 x float>* %410, align 4
  %411 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 29
  %412 = bitcast float* %411 to <4 x float>*
  %413 = load <4 x float>, <4 x float>* %412, align 4
  %414 = fcmp ogt <4 x float> %413, %393
  %415 = select <4 x i1> %414, <4 x float> %393, <4 x float> %413
  %416 = bitcast float* %411 to <4 x float>*
  store <4 x float> %415, <4 x float>* %416, align 4
  %417 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 33
  %418 = bitcast float* %417 to <4 x float>*
  %419 = load <4 x float>, <4 x float>* %418, align 4
  %420 = fcmp ogt <4 x float> %419, %393
  %421 = select <4 x i1> %420, <4 x float> %393, <4 x float> %419
  %422 = bitcast float* %417 to <4 x float>*
  store <4 x float> %421, <4 x float>* %422, align 4
  %423 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 37
  %424 = bitcast float* %423 to <4 x float>*
  %425 = load <4 x float>, <4 x float>* %424, align 4
  %426 = fcmp ogt <4 x float> %425, %393
  %427 = select <4 x i1> %426, <4 x float> %393, <4 x float> %425
  %428 = bitcast float* %423 to <4 x float>*
  store <4 x float> %427, <4 x float>* %428, align 4
  %429 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 41
  %430 = bitcast float* %429 to <4 x float>*
  %431 = load <4 x float>, <4 x float>* %430, align 4
  %432 = fcmp ogt <4 x float> %431, %393
  %433 = select <4 x i1> %432, <4 x float> %393, <4 x float> %431
  %434 = bitcast float* %429 to <4 x float>*
  store <4 x float> %433, <4 x float>* %434, align 4
  %435 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 45
  %436 = bitcast float* %435 to <4 x float>*
  %437 = load <4 x float>, <4 x float>* %436, align 4
  %438 = fcmp ogt <4 x float> %437, %393
  %439 = select <4 x i1> %438, <4 x float> %393, <4 x float> %437
  %440 = bitcast float* %435 to <4 x float>*
  store <4 x float> %439, <4 x float>* %440, align 4
  %441 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 49
  %442 = bitcast float* %441 to <4 x float>*
  %443 = load <4 x float>, <4 x float>* %442, align 4
  %444 = fcmp ogt <4 x float> %443, %393
  %445 = select <4 x i1> %444, <4 x float> %393, <4 x float> %443
  %446 = bitcast float* %441 to <4 x float>*
  store <4 x float> %445, <4 x float>* %446, align 4
  %447 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 53
  %448 = bitcast float* %447 to <4 x float>*
  %449 = load <4 x float>, <4 x float>* %448, align 4
  %450 = fcmp ogt <4 x float> %449, %393
  %451 = select <4 x i1> %450, <4 x float> %393, <4 x float> %449
  %452 = bitcast float* %447 to <4 x float>*
  store <4 x float> %451, <4 x float>* %452, align 4
  %453 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 57
  %454 = bitcast float* %453 to <4 x float>*
  %455 = load <4 x float>, <4 x float>* %454, align 4
  %456 = fcmp ogt <4 x float> %455, %393
  %457 = select <4 x i1> %456, <4 x float> %393, <4 x float> %455
  %458 = bitcast float* %453 to <4 x float>*
  store <4 x float> %457, <4 x float>* %458, align 4
  %459 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 61
  %460 = bitcast float* %459 to <4 x float>*
  %461 = load <4 x float>, <4 x float>* %460, align 4
  %462 = fcmp ogt <4 x float> %461, %393
  %463 = select <4 x i1> %462, <4 x float> %393, <4 x float> %461
  %464 = bitcast float* %459 to <4 x float>*
  store <4 x float> %463, <4 x float>* %464, align 4
  %465 = icmp eq i8 %388, 0
  %466 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 63
  %467 = bitcast float* %466 to i32*
  %468 = load i32, i32* %467, align 4
  %469 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %470 = bitcast float* %469 to i32*
  store i32 %468, i32* %470, align 4
  br i1 %465, label %556, label %471

471:                                              ; preds = %387
  %472 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 20
  %473 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 29
  %474 = load float, float* %472, align 4
  %475 = fadd float %474, 0.000000e+00
  %476 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 21
  %477 = load float, float* %476, align 4
  %478 = fadd float %475, %477
  %479 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 22
  %480 = load float, float* %479, align 4
  %481 = fadd float %478, %480
  %482 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 23
  %483 = load float, float* %482, align 4
  %484 = fadd float %481, %483
  %485 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 24
  %486 = load float, float* %485, align 4
  %487 = fadd float %484, %486
  %488 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 25
  %489 = load float, float* %488, align 4
  %490 = fadd float %487, %489
  %491 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 26
  %492 = load float, float* %491, align 4
  %493 = fadd float %490, %492
  %494 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 27
  %495 = load float, float* %494, align 4
  %496 = fadd float %493, %495
  %497 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 28
  %498 = load float, float* %497, align 4
  %499 = fadd float %496, %498
  %500 = fmul float %499, 0x3FBC71C720000000
  %501 = bitcast float* %473 to <4 x float>*
  %502 = load <4 x float>, <4 x float>* %501, align 4
  %503 = insertelement <4 x float> undef, float %500, i32 0
  %504 = shufflevector <4 x float> %503, <4 x float> undef, <4 x i32> zeroinitializer
  %505 = fcmp ogt <4 x float> %502, %504
  %506 = select <4 x i1> %505, <4 x float> %504, <4 x float> %502
  %507 = bitcast float* %473 to <4 x float>*
  store <4 x float> %506, <4 x float>* %507, align 4
  %508 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 33
  %509 = bitcast float* %508 to <4 x float>*
  %510 = load <4 x float>, <4 x float>* %509, align 4
  %511 = fcmp ogt <4 x float> %510, %504
  %512 = select <4 x i1> %511, <4 x float> %504, <4 x float> %510
  %513 = bitcast float* %508 to <4 x float>*
  store <4 x float> %512, <4 x float>* %513, align 4
  %514 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 37
  %515 = bitcast float* %514 to <4 x float>*
  %516 = load <4 x float>, <4 x float>* %515, align 4
  %517 = fcmp ogt <4 x float> %516, %504
  %518 = select <4 x i1> %517, <4 x float> %504, <4 x float> %516
  %519 = bitcast float* %514 to <4 x float>*
  store <4 x float> %518, <4 x float>* %519, align 4
  %520 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 41
  %521 = bitcast float* %520 to <4 x float>*
  %522 = load <4 x float>, <4 x float>* %521, align 4
  %523 = fcmp ogt <4 x float> %522, %504
  %524 = select <4 x i1> %523, <4 x float> %504, <4 x float> %522
  %525 = bitcast float* %520 to <4 x float>*
  store <4 x float> %524, <4 x float>* %525, align 4
  %526 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 45
  %527 = bitcast float* %526 to <4 x float>*
  %528 = load <4 x float>, <4 x float>* %527, align 4
  %529 = fcmp ogt <4 x float> %528, %504
  %530 = select <4 x i1> %529, <4 x float> %504, <4 x float> %528
  %531 = bitcast float* %526 to <4 x float>*
  store <4 x float> %530, <4 x float>* %531, align 4
  %532 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 49
  %533 = bitcast float* %532 to <4 x float>*
  %534 = load <4 x float>, <4 x float>* %533, align 4
  %535 = fcmp ogt <4 x float> %534, %504
  %536 = select <4 x i1> %535, <4 x float> %504, <4 x float> %534
  %537 = bitcast float* %532 to <4 x float>*
  store <4 x float> %536, <4 x float>* %537, align 4
  %538 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 53
  %539 = bitcast float* %538 to <4 x float>*
  %540 = load <4 x float>, <4 x float>* %539, align 4
  %541 = fcmp ogt <4 x float> %540, %504
  %542 = select <4 x i1> %541, <4 x float> %504, <4 x float> %540
  %543 = bitcast float* %538 to <4 x float>*
  store <4 x float> %542, <4 x float>* %543, align 4
  %544 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 57
  %545 = bitcast float* %544 to <4 x float>*
  %546 = load <4 x float>, <4 x float>* %545, align 4
  %547 = fcmp ogt <4 x float> %546, %504
  %548 = select <4 x i1> %547, <4 x float> %504, <4 x float> %546
  %549 = bitcast float* %544 to <4 x float>*
  store <4 x float> %548, <4 x float>* %549, align 4
  %550 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 61
  %551 = bitcast float* %550 to <4 x float>*
  %552 = load <4 x float>, <4 x float>* %551, align 4
  %553 = fcmp ogt <4 x float> %552, %504
  %554 = select <4 x i1> %553, <4 x float> %504, <4 x float> %552
  %555 = bitcast float* %550 to <4 x float>*
  store <4 x float> %554, <4 x float>* %555, align 4
  br label %556

556:                                              ; preds = %387, %471, %385
  %557 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 0
  %558 = bitcast float* %557 to i8*
  %559 = bitcast %"struct.std::__1::array"* %8 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %558, i8* align 4 %559, i64 260, i1 false) #11
  %560 = bitcast %"class.webrtc::aec3::VectorMath"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %560) #11
  %561 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 1
  %562 = load i32, i32* %561, align 8
  %563 = getelementptr inbounds %"class.webrtc::aec3::VectorMath", %"class.webrtc::aec3::VectorMath"* %19, i64 0, i32 0
  store i32 %562, i32* %563, align 4
  switch i32 %562, label %632 [
    i32 1, label %564
    i32 2, label %631
  ]

564:                                              ; preds = %556
  %565 = bitcast %"struct.std::__1::array"* %8 to <4 x float>*
  %566 = load <4 x float>, <4 x float>* %565, align 1
  %567 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %566) #11
  store <4 x float> %567, <4 x float>* %565, align 1
  %568 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 4
  %569 = bitcast float* %568 to <4 x float>*
  %570 = load <4 x float>, <4 x float>* %569, align 1
  %571 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %570) #11
  store <4 x float> %571, <4 x float>* %569, align 1
  %572 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 8
  %573 = bitcast float* %572 to <4 x float>*
  %574 = load <4 x float>, <4 x float>* %573, align 1
  %575 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %574) #11
  store <4 x float> %575, <4 x float>* %573, align 1
  %576 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 12
  %577 = bitcast float* %576 to <4 x float>*
  %578 = load <4 x float>, <4 x float>* %577, align 1
  %579 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %578) #11
  store <4 x float> %579, <4 x float>* %577, align 1
  %580 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 16
  %581 = bitcast float* %580 to <4 x float>*
  %582 = load <4 x float>, <4 x float>* %581, align 1
  %583 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %582) #11
  store <4 x float> %583, <4 x float>* %581, align 1
  %584 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 20
  %585 = bitcast float* %584 to <4 x float>*
  %586 = load <4 x float>, <4 x float>* %585, align 1
  %587 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %586) #11
  store <4 x float> %587, <4 x float>* %585, align 1
  %588 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 24
  %589 = bitcast float* %588 to <4 x float>*
  %590 = load <4 x float>, <4 x float>* %589, align 1
  %591 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %590) #11
  store <4 x float> %591, <4 x float>* %589, align 1
  %592 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 28
  %593 = bitcast float* %592 to <4 x float>*
  %594 = load <4 x float>, <4 x float>* %593, align 1
  %595 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %594) #11
  store <4 x float> %595, <4 x float>* %593, align 1
  %596 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 32
  %597 = bitcast float* %596 to <4 x float>*
  %598 = load <4 x float>, <4 x float>* %597, align 1
  %599 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %598) #11
  store <4 x float> %599, <4 x float>* %597, align 1
  %600 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 36
  %601 = bitcast float* %600 to <4 x float>*
  %602 = load <4 x float>, <4 x float>* %601, align 1
  %603 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %602) #11
  store <4 x float> %603, <4 x float>* %601, align 1
  %604 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 40
  %605 = bitcast float* %604 to <4 x float>*
  %606 = load <4 x float>, <4 x float>* %605, align 1
  %607 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %606) #11
  store <4 x float> %607, <4 x float>* %605, align 1
  %608 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 44
  %609 = bitcast float* %608 to <4 x float>*
  %610 = load <4 x float>, <4 x float>* %609, align 1
  %611 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %610) #11
  store <4 x float> %611, <4 x float>* %609, align 1
  %612 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 48
  %613 = bitcast float* %612 to <4 x float>*
  %614 = load <4 x float>, <4 x float>* %613, align 1
  %615 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %614) #11
  store <4 x float> %615, <4 x float>* %613, align 1
  %616 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 52
  %617 = bitcast float* %616 to <4 x float>*
  %618 = load <4 x float>, <4 x float>* %617, align 1
  %619 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %618) #11
  store <4 x float> %619, <4 x float>* %617, align 1
  %620 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 56
  %621 = bitcast float* %620 to <4 x float>*
  %622 = load <4 x float>, <4 x float>* %621, align 1
  %623 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %622) #11
  store <4 x float> %623, <4 x float>* %621, align 1
  %624 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 60
  %625 = bitcast float* %624 to <4 x float>*
  %626 = load <4 x float>, <4 x float>* %625, align 1
  %627 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %626) #11
  store <4 x float> %627, <4 x float>* %625, align 1
  %628 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %629 = load float, float* %628, align 4
  %630 = call float @sqrtf(float %629) #11
  store float %630, float* %628, align 4
  br label %652

631:                                              ; preds = %556
  call void @_ZN6webrtc4aec310VectorMath8SqrtAVX2EN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::aec3::VectorMath"* nonnull %19, float* %20, i64 65) #11
  br label %652

632:                                              ; preds = %556
  %633 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 65
  br label %634

634:                                              ; preds = %634, %632
  %635 = phi float* [ %20, %632 ], [ %650, %634 ]
  %636 = load float, float* %635, align 4
  %637 = call float @sqrtf(float %636) #11
  store float %637, float* %635, align 4
  %638 = getelementptr inbounds float, float* %635, i64 1
  %639 = load float, float* %638, align 4
  %640 = call float @sqrtf(float %639) #11
  store float %640, float* %638, align 4
  %641 = getelementptr inbounds float, float* %635, i64 2
  %642 = load float, float* %641, align 4
  %643 = call float @sqrtf(float %642) #11
  store float %643, float* %641, align 4
  %644 = getelementptr inbounds float, float* %635, i64 3
  %645 = load float, float* %644, align 4
  %646 = call float @sqrtf(float %645) #11
  store float %646, float* %644, align 4
  %647 = getelementptr inbounds float, float* %635, i64 4
  %648 = load float, float* %647, align 4
  %649 = call float @sqrtf(float %648) #11
  store float %649, float* %647, align 4
  %650 = getelementptr inbounds float, float* %635, i64 5
  %651 = icmp eq float* %650, %633
  br i1 %651, label %652, label %634

652:                                              ; preds = %634, %564, %631
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %560) #11
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %56) #11
  ret void

653:                                              ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  %654 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 %86
  %655 = load float, float* %654, align 4
  %656 = fmul float %655, %70
  store float %656, float* %10, align 4
  %657 = fcmp olt float %656, %71
  %658 = select i1 %657, float* %67, float* %10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store float 1.000000e+00, float* %11, align 4
  %659 = load float, float* %658, align 4
  %660 = fcmp ogt float %659, 1.000000e+00
  %661 = select i1 %660, float* %11, float* %658
  %662 = bitcast float* %661 to i32*
  %663 = load i32, i32* %662, align 4
  %664 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %86
  %665 = bitcast float* %664 to i32*
  store i32 %663, i32* %665, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  %666 = add nuw nsw i64 %73, 2
  br label %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6webrtc4aec313MovingAverage7AverageEN3rtc9ArrayViewIKfLln4711EEENS3_IfLln4711EEE(%"class.webrtc::aec3::MovingAverage"*, float*, i64, float*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGainC2ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEim(%"class.webrtc::SuppressionGain"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560), i32, i32, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.webrtc::aec3::MovingAverage", align 8
  %7 = tail call i8* @_Znwm(i64 1) #12
  %8 = bitcast i8* %7 to %"class.webrtc::ApmDataDumper"*
  %9 = atomicrmw add i32* @_ZN6webrtc15SuppressionGain15instance_count_E, i32 1 seq_cst
  %10 = add i32 %9, 1
  tail call void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"* nonnull %8, i32 %10) #11
  %11 = ptrtoint i8* %7 to i64
  %12 = bitcast %"class.webrtc::SuppressionGain"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 1
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"* %14, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560) %1) #11
  %15 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 3
  store i64 %4, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 2, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 8
  %20 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6
  %21 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  %22 = icmp eq i64 %4, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7
  %25 = bitcast %"class.std::__1::vector"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #11
  br label %73

26:                                               ; preds = %5
  %27 = icmp ugt i64 %4, 70949015668113660
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %26
  %31 = mul i64 %4, 260
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.std::__1::array"*
  %34 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6, i32 0, i32 1
  %35 = bitcast %"struct.std::__1::array"** %34 to i8**
  store i8* %32, i8** %35, align 8
  %36 = bitcast %"class.std::__1::vector"* %20 to i8**
  store i8* %32, i8** %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %33, i64 %4
  %38 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %37, %"struct.std::__1::array"** %38, align 8
  br label %39

39:                                               ; preds = %39, %30
  %40 = phi %"struct.std::__1::array"* [ %33, %30 ], [ %42, %39 ]
  %41 = bitcast %"struct.std::__1::array"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 260, i1 false)
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %40, i64 1
  %43 = icmp eq %"struct.std::__1::array"* %42, %37
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  %45 = bitcast %"struct.std::__1::array"** %34 to i64*
  %46 = ptrtoint %"struct.std::__1::array"* %37 to i64
  store i64 %46, i64* %45, align 8
  %47 = load i64, i64* %15, align 8
  %48 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7
  %49 = bitcast %"class.std::__1::vector"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %44
  %52 = icmp ugt i64 %47, 70949015668113660
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #13
  unreachable

55:                                               ; preds = %51
  %56 = mul i64 %47, 260
  %57 = tail call i8* @_Znwm(i64 %56) #12
  %58 = bitcast i8* %57 to %"struct.std::__1::array"*
  %59 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7, i32 0, i32 1
  %60 = bitcast %"struct.std::__1::array"** %59 to i8**
  store i8* %57, i8** %60, align 8
  %61 = bitcast %"class.std::__1::vector"* %48 to i8**
  store i8* %57, i8** %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %58, i64 %47
  %63 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %62, %"struct.std::__1::array"** %63, align 8
  br label %64

64:                                               ; preds = %64, %55
  %65 = phi %"struct.std::__1::array"* [ %58, %55 ], [ %67, %64 ]
  %66 = bitcast %"struct.std::__1::array"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 260, i1 false)
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %65, i64 1
  %68 = icmp eq %"struct.std::__1::array"* %67, %62
  br i1 %68, label %69, label %64

69:                                               ; preds = %64
  %70 = bitcast %"struct.std::__1::array"** %59 to i64*
  %71 = ptrtoint %"struct.std::__1::array"* %62 to i64
  store i64 %71, i64* %70, align 8
  %72 = load i64, i64* %15, align 8
  br label %73

73:                                               ; preds = %23, %44, %69
  %74 = phi i64 [ 0, %44 ], [ %72, %69 ], [ 0, %23 ]
  %75 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 8, i32 0
  store float 0x41D0000000000000, float* %75, align 4
  %76 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 9
  store i8 1, i8* %76, align 4
  %77 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 10
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11
  %79 = bitcast %"class.webrtc::aec3::MovingAverage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 12, i32 0
  %81 = load i64, i64* %80, align 8
  call void @_ZN6webrtc4aec313MovingAverageC1Emm(%"class.webrtc::aec3::MovingAverage"* nonnull %6, i64 65, i64 %81) #11
  %82 = bitcast %"class.std::__1::vector.4"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #11
  %83 = icmp eq i64 %74, 0
  br i1 %83, label %144, label %84

84:                                               ; preds = %73
  %85 = icmp ugt i64 %74, 329406144173384850
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::vector.4"* %78 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %87) #13
  unreachable

88:                                               ; preds = %84
  %89 = mul i64 %74, 56
  %90 = call i8* @_Znwm(i64 %89) #12
  %91 = bitcast i8* %90 to %"class.webrtc::aec3::MovingAverage"*
  %92 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11, i32 0, i32 1
  %93 = bitcast %"class.webrtc::aec3::MovingAverage"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector.4"* %78 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %91, i64 %74
  %96 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::aec3::MovingAverage"* %95, %"class.webrtc::aec3::MovingAverage"** %96, align 8
  %97 = bitcast %"class.webrtc::aec3::MovingAverage"** %92 to i64*
  %98 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %6, i64 0, i32 3
  %99 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %6, i64 0, i32 3, i32 0, i32 1
  %100 = bitcast float** %99 to i64*
  %101 = bitcast %"class.std::__1::vector.6"* %98 to i64*
  %102 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %6, i64 0, i32 4
  br label %103

103:                                              ; preds = %137, %88
  %104 = phi %"class.webrtc::aec3::MovingAverage"* [ %91, %88 ], [ %140, %137 ]
  %105 = bitcast %"class.webrtc::aec3::MovingAverage"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %79, i64 20, i1 false) #11
  %106 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %104, i64 0, i32 3
  %107 = bitcast %"class.std::__1::vector.6"* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #11
  %108 = load i64, i64* %100, align 8
  %109 = load i64, i64* %101, align 8
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 2
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %137, label %113

113:                                              ; preds = %103
  %114 = icmp ugt i64 %111, 4611686018427387903
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = bitcast %"class.std::__1::vector.6"* %106 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #13
  unreachable

117:                                              ; preds = %113
  %118 = call i8* @_Znwm(i64 %110) #12
  %119 = bitcast i8* %118 to float*
  %120 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %104, i64 0, i32 3, i32 0, i32 1
  %121 = bitcast float** %120 to i8**
  store i8* %118, i8** %121, align 8
  %122 = bitcast %"class.std::__1::vector.6"* %106 to i8**
  store i8* %118, i8** %122, align 8
  %123 = getelementptr inbounds float, float* %119, i64 %111
  %124 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %104, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store float* %123, float** %124, align 8
  %125 = load i64, i64* %100, align 8
  %126 = bitcast float** %120 to i64*
  %127 = ptrtoint i8* %118 to i64
  %128 = sub i64 %125, %109
  %129 = icmp sgt i64 %128, 0
  br i1 %129, label %130, label %135

130:                                              ; preds = %117
  %131 = lshr exact i64 %128, 2
  %132 = inttoptr i64 %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* align 4 %132, i64 %128, i1 false) #11
  %133 = getelementptr inbounds float, float* %119, i64 %131
  %134 = ptrtoint float* %133 to i64
  br label %135

135:                                              ; preds = %130, %117
  %136 = phi i64 [ %134, %130 ], [ %127, %117 ]
  store i64 %136, i64* %126, align 8
  br label %137

137:                                              ; preds = %135, %103
  %138 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %104, i64 0, i32 4
  %139 = load i64, i64* %102, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %104, i64 1
  %141 = icmp eq %"class.webrtc::aec3::MovingAverage"* %140, %95
  br i1 %141, label %142, label %103

142:                                              ; preds = %137
  %143 = ptrtoint %"class.webrtc::aec3::MovingAverage"* %95 to i64
  store i64 %143, i64* %97, align 8
  br label %144

144:                                              ; preds = %73, %142
  call void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %79) #11
  %145 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12
  %146 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 2
  %147 = bitcast float* %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = bitcast %"struct.webrtc::SuppressionGain::GainParameters"* %145 to i32*
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 1
  %151 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 3
  %152 = bitcast float* %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = bitcast float* %150 to i32*
  store i32 %153, i32* %154, align 4
  %155 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 0, i32 0
  %156 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 1, i32 0
  %157 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 0, i32 1
  %158 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 1, i32 1
  %159 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 0, i32 2
  %160 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 2, i32 1, i32 2
  br label %161

161:                                              ; preds = %170, %144
  %162 = phi i64 [ 0, %144 ], [ %191, %170 ]
  %163 = icmp ult i64 %162, 6
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = icmp ult i64 %162, 8
  br i1 %165, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %162, -5
  %168 = uitofp i64 %167 to float
  %169 = fdiv float %168, 3.000000e+00
  br label %170

170:                                              ; preds = %166, %164, %161
  %171 = phi float [ %169, %166 ], [ 0.000000e+00, %161 ], [ 1.000000e+00, %164 ]
  %172 = fsub float 1.000000e+00, %171
  %173 = load float, float* %155, align 4
  %174 = fmul float %172, %173
  %175 = load float, float* %156, align 4
  %176 = fmul float %171, %175
  %177 = fadd float %174, %176
  %178 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 2, i32 0, i64 %162
  store float %177, float* %178, align 4
  %179 = load float, float* %157, align 4
  %180 = fmul float %172, %179
  %181 = load float, float* %158, align 4
  %182 = fmul float %171, %181
  %183 = fadd float %180, %182
  %184 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 3, i32 0, i64 %162
  store float %183, float* %184, align 4
  %185 = load float, float* %159, align 4
  %186 = fmul float %172, %185
  %187 = load float, float* %160, align 4
  %188 = fmul float %171, %187
  %189 = fadd float %186, %188
  %190 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 12, i32 4, i32 0, i64 %162
  store float %189, float* %190, align 4
  %191 = add nuw nsw i64 %162, 1
  %192 = icmp eq i64 %191, 65
  br i1 %192, label %193, label %161

193:                                              ; preds = %170
  %194 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13
  %195 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 2
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = bitcast %"struct.webrtc::SuppressionGain::GainParameters"* %194 to i32*
  store i32 %197, i32* %198, align 4
  %199 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 1
  %200 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 3
  %201 = bitcast float* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = bitcast float* %199 to i32*
  store i32 %202, i32* %203, align 4
  %204 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 0, i32 0
  %205 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 1, i32 0
  %206 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 0, i32 1
  %207 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 1, i32 1
  %208 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 0, i32 2
  %209 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 1, i32 1, i32 2
  br label %210

210:                                              ; preds = %219, %193
  %211 = phi i64 [ 0, %193 ], [ %240, %219 ]
  %212 = icmp ult i64 %211, 6
  br i1 %212, label %219, label %213

213:                                              ; preds = %210
  %214 = icmp ult i64 %211, 8
  br i1 %214, label %215, label %219

215:                                              ; preds = %213
  %216 = add nsw i64 %211, -5
  %217 = uitofp i64 %216 to float
  %218 = fdiv float %217, 3.000000e+00
  br label %219

219:                                              ; preds = %215, %213, %210
  %220 = phi float [ %218, %215 ], [ 0.000000e+00, %210 ], [ 1.000000e+00, %213 ]
  %221 = fsub float 1.000000e+00, %220
  %222 = load float, float* %204, align 4
  %223 = fmul float %221, %222
  %224 = load float, float* %205, align 4
  %225 = fmul float %220, %224
  %226 = fadd float %223, %225
  %227 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 2, i32 0, i64 %211
  store float %226, float* %227, align 4
  %228 = load float, float* %206, align 4
  %229 = fmul float %221, %228
  %230 = load float, float* %207, align 4
  %231 = fmul float %220, %230
  %232 = fadd float %229, %231
  %233 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 3, i32 0, i64 %211
  store float %232, float* %233, align 4
  %234 = load float, float* %208, align 4
  %235 = fmul float %221, %234
  %236 = load float, float* %209, align 4
  %237 = fmul float %220, %236
  %238 = fadd float %235, %237
  %239 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 13, i32 4, i32 0, i64 %211
  store float %238, float* %239, align 4
  %240 = add nuw nsw i64 %211, 1
  %241 = icmp eq i64 %240, 65
  br i1 %241, label %242, label %210

242:                                              ; preds = %219
  %243 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14
  %244 = bitcast %"class.std::__1::unique_ptr.18"* %243 to i64*
  store i64 0, i64* %244, align 8
  %245 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 0
  %246 = bitcast float* %245 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %246, align 4
  %247 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 4
  %248 = bitcast float* %247 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %248, align 4
  %249 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 8
  %250 = bitcast float* %249 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %250, align 4
  %251 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 12
  %252 = bitcast float* %251 to i32*
  store i32 1065353216, i32* %252, align 4
  %253 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 13
  %254 = bitcast float* %253 to i32*
  store i32 1065353216, i32* %254, align 4
  %255 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 14
  %256 = bitcast float* %255 to i32*
  store i32 1065353216, i32* %256, align 4
  %257 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 15
  %258 = bitcast float* %257 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %258, align 4
  %259 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 19
  %260 = bitcast float* %259 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %260, align 4
  %261 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 23
  %262 = bitcast float* %261 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %262, align 4
  %263 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 27
  %264 = bitcast float* %263 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %264, align 4
  %265 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 31
  %266 = bitcast float* %265 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %266, align 4
  %267 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 35
  %268 = bitcast float* %267 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 39
  %270 = bitcast float* %269 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %270, align 4
  %271 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 43
  %272 = bitcast float* %271 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %272, align 4
  %273 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 47
  %274 = bitcast float* %273 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %274, align 4
  %275 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 51
  %276 = bitcast float* %275 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %276, align 4
  %277 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 55
  %278 = bitcast float* %277 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %278, align 4
  %279 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 59
  %280 = bitcast float* %279 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %280, align 4
  %281 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 63
  %282 = bitcast float* %281 to i32*
  store i32 1065353216, i32* %282, align 4
  %283 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 5, i32 0, i64 64
  %284 = bitcast float* %283 to i32*
  store i32 1065353216, i32* %284, align 4
  %285 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 5
  %286 = load i8, i8* %285, align 8, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %302, label %288

288:                                              ; preds = %242
  %289 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 4
  %290 = call i8* @_Znwm(i64 104) #12
  %291 = bitcast i8* %290 to %"class.webrtc::SubbandNearendDetector"*
  %292 = load i64, i64* %15, align 8
  call void @_ZN6webrtc22SubbandNearendDetectorC1ERKNS_20EchoCanceller3Config10Suppressor23SubbandNearendDetectionEm(%"class.webrtc::SubbandNearendDetector"* nonnull %291, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* dereferenceable(48) %289, i64 %292) #11
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %243, i64 0, i32 0, i32 0, i32 0
  %294 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %293, align 8
  %295 = bitcast %"class.std::__1::unique_ptr.18"* %243 to i8**
  store i8* %290, i8** %295, align 8
  %296 = icmp eq %"class.webrtc::NearendDetector"* %294, null
  br i1 %296, label %316, label %297

297:                                              ; preds = %288
  %298 = bitcast %"class.webrtc::NearendDetector"* %294 to void (%"class.webrtc::NearendDetector"*)***
  %299 = load void (%"class.webrtc::NearendDetector"*)**, void (%"class.webrtc::NearendDetector"*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %299, i64 1
  %301 = load void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %300, align 8
  call void %301(%"class.webrtc::NearendDetector"* nonnull %294) #11
  br label %316

302:                                              ; preds = %242
  %303 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 2, i32 12, i32 3
  %304 = call i8* @_Znwm(i64 96) #12
  %305 = bitcast i8* %304 to %"class.webrtc::DominantNearendDetector"*
  %306 = load i64, i64* %15, align 8
  call void @_ZN6webrtc23DominantNearendDetectorC1ERKNS_20EchoCanceller3Config10Suppressor24DominantNearendDetectionEm(%"class.webrtc::DominantNearendDetector"* nonnull %305, %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection"* dereferenceable(24) %303, i64 %306) #11
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %243, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %307, align 8
  %309 = bitcast %"class.std::__1::unique_ptr.18"* %243 to i8**
  store i8* %304, i8** %309, align 8
  %310 = icmp eq %"class.webrtc::NearendDetector"* %308, null
  br i1 %310, label %316, label %311

311:                                              ; preds = %302
  %312 = bitcast %"class.webrtc::NearendDetector"* %308 to void (%"class.webrtc::NearendDetector"*)***
  %313 = load void (%"class.webrtc::NearendDetector"*)**, void (%"class.webrtc::NearendDetector"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %313, i64 1
  %315 = load void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %314, align 8
  call void %315(%"class.webrtc::NearendDetector"* nonnull %308) #11
  br label %316

316:                                              ; preds = %302, %311, %288, %297
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #4

declare void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560)) unnamed_addr #4

declare void @_ZN6webrtc4aec313MovingAverageC1Emm(%"class.webrtc::aec3::MovingAverage"*, i64, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGainD2Ev(%"class.webrtc::SuppressionGain"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %2, align 8
  store %"class.webrtc::NearendDetector"* null, %"class.webrtc::NearendDetector"** %2, align 8
  %4 = icmp eq %"class.webrtc::NearendDetector"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::NearendDetector"* %3 to void (%"class.webrtc::NearendDetector"*)***
  %7 = load void (%"class.webrtc::NearendDetector"*)**, void (%"class.webrtc::NearendDetector"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %7, i64 1
  %9 = load void (%"class.webrtc::NearendDetector"*)*, void (%"class.webrtc::NearendDetector"*)** %8, align 8
  tail call void %9(%"class.webrtc::NearendDetector"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %12, align 8
  %14 = icmp eq %"class.webrtc::aec3::MovingAverage"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.webrtc::aec3::MovingAverage"* %13 to i8*
  %17 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 11, i32 0, i32 1
  %18 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %17, align 8
  %19 = icmp eq %"class.webrtc::aec3::MovingAverage"* %18, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi %"class.webrtc::aec3::MovingAverage"* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %21, i64 -1
  tail call void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"* %22) #11
  %23 = icmp eq %"class.webrtc::aec3::MovingAverage"* %22, %13
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::vector.4"* %11 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi i8* [ %26, %24 ], [ %16, %15 ]
  store %"class.webrtc::aec3::MovingAverage"* %13, %"class.webrtc::aec3::MovingAverage"** %17, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %10, %27
  %30 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %30, align 8
  %32 = icmp eq %"struct.std::__1::array"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.std::__1::array"* %31 to i64
  %35 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 7, i32 0, i32 1
  %36 = bitcast %"struct.std::__1::array"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::array"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6, i32 0, i32 0
  %40 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %39, align 8
  %41 = icmp eq %"struct.std::__1::array"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.std::__1::array"* %40 to i64
  %44 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 6, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::array"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"struct.std::__1::array"* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %48, align 8
  store %"class.webrtc::ApmDataDumper"* null, %"class.webrtc::ApmDataDumper"** %48, align 8
  %50 = icmp eq %"class.webrtc::ApmDataDumper"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  tail call void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"* nonnull %49) #11
  %52 = getelementptr inbounds %"class.webrtc::ApmDataDumper", %"class.webrtc::ApmDataDumper"* %49, i64 0, i32 0
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGain7GetGainEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEES7_S7_S7_RKNS_20RenderSignalAnalyzerERKNS_8AecStateERKNS3_6vectorINSE_INSE_IfNS3_9allocatorIfEEEENSF_ISH_EEEENSF_ISJ_EEEEbPfPS5_(%"class.webrtc::SuppressionGain"* nocapture, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, %"class.webrtc::RenderSignalAnalyzer"* nocapture readonly dereferenceable(528), %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), %"class.std::__1::vector.24"* nocapture readonly dereferenceable(24), i1 zeroext, float* nocapture, %"struct.std::__1::array"*) local_unnamed_addr #0 align 2 {
  %14 = alloca %"class.rtc::ArrayView", align 8
  %15 = alloca %"class.rtc::ArrayView", align 8
  %16 = alloca %"class.rtc::ArrayView", align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.absl::optional"*
  %19 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %20 = load %"class.webrtc::NearendDetector"*, %"class.webrtc::NearendDetector"** %19, align 8
  %21 = icmp eq i64 %2, 0
  %22 = select i1 %21, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %1
  %23 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %24 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %23, align 8
  %25 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = select i1 %27, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %24
  %29 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %6, i64 0, i32 0, i32 0
  %30 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %29, align 8
  %31 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %6, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %14, i64 0, i32 0, i32 0
  %34 = icmp eq i64 %32, 0
  %35 = select i1 %34, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %30
  store %"struct.std::__1::array"* %35, %"struct.std::__1::array"** %33, align 8
  %36 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %14, i64 0, i32 0, i32 1
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 9
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp ne i8 %38, 0
  %40 = bitcast %"class.webrtc::NearendDetector"* %20 to void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)***
  %41 = load void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)**, void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)*, void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)** %41, i64 3
  %43 = load void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)*, void (%"class.webrtc::NearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)** %42, align 8
  tail call void %43(%"class.webrtc::NearendDetector"* %20, %"struct.std::__1::array"* %22, i64 %2, %"struct.std::__1::array"* %28, i64 %26, %"class.rtc::ArrayView"* nonnull byval(%"class.rtc::ArrayView") align 8 %14, i1 zeroext %39) #11
  %44 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %9, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %45, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.6"* %47, %49
  %51 = ptrtoint %"class.std::__1::vector.6"* %49 to i64
  %52 = ptrtoint %"class.std::__1::vector.6"* %47 to i64
  br i1 %50, label %125, label %53

53:                                               ; preds = %13, %91
  %54 = phi float [ %92, %91 ], [ 0.000000e+00, %13 ]
  %55 = phi float [ %93, %91 ], [ 0.000000e+00, %13 ]
  %56 = phi %"class.std::__1::vector.6"* [ %94, %91 ], [ %47, %13 ]
  %57 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %56, i64 0, i32 0, i32 0
  %58 = load float*, float** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %56, i64 0, i32 0, i32 1
  %60 = load float*, float** %59, align 8
  %61 = icmp eq float* %58, %60
  br i1 %61, label %91, label %62

62:                                               ; preds = %53
  %63 = ptrtoint float* %58 to i64
  %64 = getelementptr float, float* %60, i64 -1
  %65 = ptrtoint float* %64 to i64
  %66 = sub i64 %65, %63
  %67 = lshr i64 %66, 2
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %84, label %71

71:                                               ; preds = %62, %71
  %72 = phi float [ %80, %71 ], [ %54, %62 ]
  %73 = phi float [ %78, %71 ], [ %55, %62 ]
  %74 = phi float* [ %81, %71 ], [ %58, %62 ]
  %75 = phi i64 [ %82, %71 ], [ %69, %62 ]
  %76 = load float, float* %74, align 4
  %77 = fmul float %76, %76
  %78 = fadd float %73, %77
  %79 = fcmp olt float %72, %77
  %80 = select i1 %79, float %77, float %72
  %81 = getelementptr inbounds float, float* %74, i64 1
  %82 = add i64 %75, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %71, !llvm.loop !14

84:                                               ; preds = %71, %62
  %85 = phi float [ undef, %62 ], [ %78, %71 ]
  %86 = phi float [ undef, %62 ], [ %80, %71 ]
  %87 = phi float [ %54, %62 ], [ %80, %71 ]
  %88 = phi float [ %55, %62 ], [ %78, %71 ]
  %89 = phi float* [ %58, %62 ], [ %81, %71 ]
  %90 = icmp ult i64 %66, 12
  br i1 %90, label %91, label %96

91:                                               ; preds = %84, %96, %53
  %92 = phi float [ %54, %53 ], [ %86, %84 ], [ %122, %96 ]
  %93 = phi float [ %55, %53 ], [ %85, %84 ], [ %120, %96 ]
  %94 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %56, i64 1
  %95 = icmp eq %"class.std::__1::vector.6"* %94, %49
  br i1 %95, label %125, label %53

96:                                               ; preds = %84, %96
  %97 = phi float [ %122, %96 ], [ %87, %84 ]
  %98 = phi float [ %120, %96 ], [ %88, %84 ]
  %99 = phi float* [ %123, %96 ], [ %89, %84 ]
  %100 = load float, float* %99, align 4
  %101 = fmul float %100, %100
  %102 = fadd float %98, %101
  %103 = fcmp olt float %97, %101
  %104 = select i1 %103, float %101, float %97
  %105 = getelementptr inbounds float, float* %99, i64 1
  %106 = load float, float* %105, align 4
  %107 = fmul float %106, %106
  %108 = fadd float %102, %107
  %109 = fcmp olt float %104, %107
  %110 = select i1 %109, float %107, float %104
  %111 = getelementptr inbounds float, float* %99, i64 2
  %112 = load float, float* %111, align 4
  %113 = fmul float %112, %112
  %114 = fadd float %108, %113
  %115 = fcmp olt float %110, %113
  %116 = select i1 %115, float %113, float %110
  %117 = getelementptr inbounds float, float* %99, i64 3
  %118 = load float, float* %117, align 4
  %119 = fmul float %118, %118
  %120 = fadd float %114, %119
  %121 = fcmp olt float %116, %119
  %122 = select i1 %121, float %119, float %116
  %123 = getelementptr inbounds float, float* %99, i64 4
  %124 = icmp eq float* %123, %60
  br i1 %124, label %91, label %96

125:                                              ; preds = %91, %13
  %126 = phi float [ 0.000000e+00, %13 ], [ %92, %91 ]
  %127 = phi float [ 0.000000e+00, %13 ], [ %93, %91 ]
  %128 = sub i64 %51, %52
  %129 = sdiv exact i64 %128, 24
  %130 = uitofp i64 %129 to float
  %131 = fdiv float %127, %130
  %132 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 8, i32 0
  %133 = load float, float* %132, align 4
  %134 = fcmp olt float %133, 1.600000e+05
  %135 = fmul float %133, 3.000000e+00
  %136 = fcmp olt float %126, %135
  %137 = and i1 %134, %136
  %138 = fmul float %133, 0x3FECCCCCC0000000
  %139 = fmul float %131, 0x3FB99999A0000000
  %140 = fadd float %138, %139
  store float %140, float* %132, align 4
  %141 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %15, i64 0, i32 0, i32 0
  store %"struct.std::__1::array"* %28, %"struct.std::__1::array"** %141, align 8
  %142 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %15, i64 0, i32 0, i32 1
  store i64 %26, i64* %142, align 8
  %143 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %16, i64 0, i32 0, i32 0
  store %"struct.std::__1::array"* %35, %"struct.std::__1::array"** %143, align 8
  %144 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %16, i64 0, i32 0, i32 1
  store i64 %32, i64* %144, align 8
  tail call void @_ZN6webrtc15SuppressionGain13LowerBandGainEbRKNS_8AecStateEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEESA_SA_bPS8_(%"class.webrtc::SuppressionGain"* %0, i1 zeroext %137, %"class.webrtc::AecState"* dereferenceable(3016) %8, %"struct.std::__1::array"* %22, i64 %2, %"class.rtc::ArrayView"* nonnull byval(%"class.rtc::ArrayView") align 8 %15, %"class.rtc::ArrayView"* nonnull byval(%"class.rtc::ArrayView") align 8 %16, i1 zeroext %10, %"struct.std::__1::array"* %12)
  %145 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #11
  %146 = getelementptr inbounds %"class.webrtc::RenderSignalAnalyzer", %"class.webrtc::RenderSignalAnalyzer"* %7, i64 0, i32 2
  %147 = bitcast %"class.absl::optional"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %17, align 8
  %149 = icmp eq i64 %4, 0
  %150 = select i1 %149, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %3
  %151 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %8, i64 0, i32 10, i32 0
  %152 = load i8, i8* %151, align 1, !range !2
  %153 = icmp ne i8 %152, 0
  %154 = call float @_ZNK6webrtc15SuppressionGain14UpperBandsGainEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEES7_RKN4absl8optionalIiEEbRKNS3_6vectorINSD_INSD_IfNS3_9allocatorIfEEEENSE_ISG_EEEENSE_ISI_EEEERS6_(%"class.webrtc::SuppressionGain"* %0, %"struct.std::__1::array"* %150, i64 %4, %"struct.std::__1::array"* %35, i64 %32, %"class.absl::optional"* nonnull dereferenceable(8) %18, i1 zeroext %153, %"class.std::__1::vector.24"* dereferenceable(24) %9, %"struct.std::__1::array"* dereferenceable(260) %12)
  store float %154, float* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15SuppressionGain22LowNoiseRenderDetector6DetectERKNSt3__16vectorINS3_INS3_IfNS2_9allocatorIfEEEENS4_IS6_EEEENS4_IS8_EEEE(%"class.webrtc::SuppressionGain::LowNoiseRenderDetector"* nocapture, %"class.std::__1::vector.24"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %7, align 8
  %9 = icmp eq %"class.std::__1::vector.6"* %6, %8
  %10 = ptrtoint %"class.std::__1::vector.6"* %8 to i64
  %11 = ptrtoint %"class.std::__1::vector.6"* %6 to i64
  br i1 %9, label %12, label %28

12:                                               ; preds = %66, %2
  %13 = phi float [ 0.000000e+00, %2 ], [ %67, %66 ]
  %14 = phi float [ 0.000000e+00, %2 ], [ %68, %66 ]
  %15 = sub i64 %10, %11
  %16 = sdiv exact i64 %15, 24
  %17 = uitofp i64 %16 to float
  %18 = fdiv float %14, %17
  %19 = getelementptr inbounds %"class.webrtc::SuppressionGain::LowNoiseRenderDetector", %"class.webrtc::SuppressionGain::LowNoiseRenderDetector"* %0, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 1.600000e+05
  %22 = fmul float %20, 3.000000e+00
  %23 = fcmp olt float %13, %22
  %24 = and i1 %21, %23
  %25 = fmul float %20, 0x3FECCCCCC0000000
  %26 = fmul float %18, 0x3FB99999A0000000
  %27 = fadd float %25, %26
  store float %27, float* %19, align 4
  ret i1 %24

28:                                               ; preds = %2, %66
  %29 = phi float [ %67, %66 ], [ 0.000000e+00, %2 ]
  %30 = phi float [ %68, %66 ], [ 0.000000e+00, %2 ]
  %31 = phi %"class.std::__1::vector.6"* [ %69, %66 ], [ %6, %2 ]
  %32 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %31, i64 0, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %31, i64 0, i32 0, i32 1
  %35 = load float*, float** %34, align 8
  %36 = icmp eq float* %33, %35
  br i1 %36, label %66, label %37

37:                                               ; preds = %28
  %38 = ptrtoint float* %33 to i64
  %39 = getelementptr float, float* %35, i64 -1
  %40 = ptrtoint float* %39 to i64
  %41 = sub i64 %40, %38
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %37, %46
  %47 = phi float [ %55, %46 ], [ %29, %37 ]
  %48 = phi float [ %53, %46 ], [ %30, %37 ]
  %49 = phi float* [ %56, %46 ], [ %33, %37 ]
  %50 = phi i64 [ %57, %46 ], [ %44, %37 ]
  %51 = load float, float* %49, align 4
  %52 = fmul float %51, %51
  %53 = fadd float %48, %52
  %54 = fcmp olt float %47, %52
  %55 = select i1 %54, float %52, float %47
  %56 = getelementptr inbounds float, float* %49, i64 1
  %57 = add i64 %50, -1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %46, !llvm.loop !15

59:                                               ; preds = %46, %37
  %60 = phi float [ undef, %37 ], [ %53, %46 ]
  %61 = phi float [ undef, %37 ], [ %55, %46 ]
  %62 = phi float [ %29, %37 ], [ %55, %46 ]
  %63 = phi float [ %30, %37 ], [ %53, %46 ]
  %64 = phi float* [ %33, %37 ], [ %56, %46 ]
  %65 = icmp ult i64 %41, 12
  br i1 %65, label %66, label %71

66:                                               ; preds = %59, %71, %28
  %67 = phi float [ %29, %28 ], [ %61, %59 ], [ %97, %71 ]
  %68 = phi float [ %30, %28 ], [ %60, %59 ], [ %95, %71 ]
  %69 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %31, i64 1
  %70 = icmp eq %"class.std::__1::vector.6"* %69, %8
  br i1 %70, label %12, label %28

71:                                               ; preds = %59, %71
  %72 = phi float [ %97, %71 ], [ %62, %59 ]
  %73 = phi float [ %95, %71 ], [ %63, %59 ]
  %74 = phi float* [ %98, %71 ], [ %64, %59 ]
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %75
  %77 = fadd float %73, %76
  %78 = fcmp olt float %72, %76
  %79 = select i1 %78, float %76, float %72
  %80 = getelementptr inbounds float, float* %74, i64 1
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %81
  %83 = fadd float %77, %82
  %84 = fcmp olt float %79, %82
  %85 = select i1 %84, float %82, float %79
  %86 = getelementptr inbounds float, float* %74, i64 2
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %87
  %89 = fadd float %83, %88
  %90 = fcmp olt float %85, %88
  %91 = select i1 %90, float %88, float %85
  %92 = getelementptr inbounds float, float* %74, i64 3
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %93
  %95 = fadd float %89, %94
  %96 = fcmp olt float %91, %94
  %97 = select i1 %96, float %94, float %91
  %98 = getelementptr inbounds float, float* %74, i64 4
  %99 = icmp eq float* %98, %35
  br i1 %99, label %66, label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGain15SetInitialStateEb(%"class.webrtc::SuppressionGain"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 9
  store i8 %3, i8* %4, align 4
  br i1 %1, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %2 ]
  %10 = getelementptr inbounds %"class.webrtc::SuppressionGain", %"class.webrtc::SuppressionGain"* %0, i64 0, i32 10
  store i32 %9, i32* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15SuppressionGain14GainParametersC2ERKNS_20EchoCanceller3Config10Suppressor6TuningE(%"struct.webrtc::SuppressionGain::GainParameters"* nocapture, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* nocapture readonly dereferenceable(32)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 2
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %"struct.webrtc::SuppressionGain::GainParameters"* %0 to i32*
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 3
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast float* %7 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 1, i32 2
  %18 = getelementptr %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 2, i32 0, i64 0
  %19 = bitcast float* %18 to i8*
  %20 = getelementptr %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning"* %1, i64 0, i32 1, i32 2
  %21 = bitcast float* %20 to i8*
  %22 = getelementptr i8, i8* %21, i64 1
  %23 = icmp ugt i8* %22, %19
  %24 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 1, i32 0
  %25 = icmp ult float* %17, %24
  %26 = and i1 %23, %25
  br i1 %26, label %46, label %27

27:                                               ; preds = %2
  %28 = load float, float* %12, align 4, !alias.scope !16
  %29 = insertelement <4 x float> undef, float %28, i32 0
  %30 = shufflevector <4 x float> %29, <4 x float> undef, <4 x i32> zeroinitializer
  %31 = load float, float* %13, align 4, !alias.scope !16
  %32 = insertelement <4 x float> undef, float %31, i32 0
  %33 = shufflevector <4 x float> %32, <4 x float> undef, <4 x i32> zeroinitializer
  %34 = load float, float* %14, align 4, !alias.scope !16
  %35 = insertelement <4 x float> undef, float %34, i32 0
  %36 = shufflevector <4 x float> %35, <4 x float> undef, <4 x i32> zeroinitializer
  %37 = load float, float* %15, align 4, !alias.scope !16
  %38 = insertelement <4 x float> undef, float %37, i32 0
  %39 = shufflevector <4 x float> %38, <4 x float> undef, <4 x i32> zeroinitializer
  %40 = load float, float* %16, align 4, !alias.scope !16
  %41 = insertelement <4 x float> undef, float %40, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = load float, float* %17, align 4, !alias.scope !16
  %44 = insertelement <4 x float> undef, float %43, i32 0
  %45 = shufflevector <4 x float> %44, <4 x float> undef, <4 x i32> zeroinitializer
  br label %48

46:                                               ; preds = %48, %2
  %47 = phi i64 [ 0, %2 ], [ 64, %48 ]
  br label %78

48:                                               ; preds = %27, %48
  %49 = phi i64 [ %74, %48 ], [ 0, %27 ]
  %50 = phi <4 x i64> [ %75, %48 ], [ <i64 0, i64 1, i64 2, i64 3>, %27 ]
  %51 = icmp ult <4 x i64> %50, <i64 6, i64 6, i64 6, i64 6>
  %52 = icmp ugt <4 x i64> %50, <i64 7, i64 7, i64 7, i64 7>
  %53 = add nsw <4 x i64> %50, <i64 -5, i64 -5, i64 -5, i64 -5>
  %54 = uitofp <4 x i64> %53 to <4 x float>
  %55 = fdiv <4 x float> %54, <float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00>
  %56 = select <4 x i1> %51, <4 x float> zeroinitializer, <4 x float> %55
  %57 = select <4 x i1> %52, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float> %56
  %58 = fsub <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %57
  %59 = fmul <4 x float> %58, %30
  %60 = fmul <4 x float> %57, %33
  %61 = fadd <4 x float> %59, %60
  %62 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 2, i32 0, i64 %49
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 4, !alias.scope !19, !noalias !16
  %64 = fmul <4 x float> %58, %36
  %65 = fmul <4 x float> %57, %39
  %66 = fadd <4 x float> %64, %65
  %67 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 3, i32 0, i64 %49
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %66, <4 x float>* %68, align 4, !alias.scope !19, !noalias !16
  %69 = fmul <4 x float> %58, %42
  %70 = fmul <4 x float> %57, %45
  %71 = fadd <4 x float> %69, %70
  %72 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 4, i32 0, i64 %49
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 4, !alias.scope !19, !noalias !16
  %74 = add i64 %49, 4
  %75 = add <4 x i64> %50, <i64 4, i64 4, i64 4, i64 4>
  %76 = icmp eq i64 %74, 64
  br i1 %76, label %46, label %48, !llvm.loop !21

77:                                               ; preds = %87
  ret void

78:                                               ; preds = %46, %87
  %79 = phi i64 [ %108, %87 ], [ %47, %46 ]
  %80 = icmp ult i64 %79, 6
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = icmp ult i64 %79, 8
  br i1 %82, label %83, label %87

83:                                               ; preds = %81
  %84 = add nsw i64 %79, -5
  %85 = uitofp i64 %84 to float
  %86 = fdiv float %85, 3.000000e+00
  br label %87

87:                                               ; preds = %81, %78, %83
  %88 = phi float [ %86, %83 ], [ 0.000000e+00, %78 ], [ 1.000000e+00, %81 ]
  %89 = fsub float 1.000000e+00, %88
  %90 = load float, float* %12, align 4
  %91 = fmul float %89, %90
  %92 = load float, float* %13, align 4
  %93 = fmul float %88, %92
  %94 = fadd float %91, %93
  %95 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 2, i32 0, i64 %79
  store float %94, float* %95, align 4
  %96 = load float, float* %14, align 4
  %97 = fmul float %89, %96
  %98 = load float, float* %15, align 4
  %99 = fmul float %88, %98
  %100 = fadd float %97, %99
  %101 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 3, i32 0, i64 %79
  store float %100, float* %101, align 4
  %102 = load float, float* %16, align 4
  %103 = fmul float %89, %102
  %104 = load float, float* %17, align 4
  %105 = fmul float %88, %104
  %106 = fadd float %103, %105
  %107 = getelementptr inbounds %"struct.webrtc::SuppressionGain::GainParameters", %"struct.webrtc::SuppressionGain::GainParameters"* %0, i64 0, i32 4, i32 0, i64 %79
  store float %106, float* %107, align 4
  %108 = add nuw nsw i64 %79, 1
  %109 = icmp eq i64 %108, 65
  br i1 %109, label %77, label %78, !llvm.loop !22
}

declare void @_ZN6webrtc4aec310VectorMath8SqrtAVX2EN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::aec3::VectorMath"*, float*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"*) unnamed_addr #6

declare void @_ZN6webrtc22SubbandNearendDetectorC1ERKNS_20EchoCanceller3Config10Suppressor23SubbandNearendDetectionEm(%"class.webrtc::SubbandNearendDetector"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* dereferenceable(48), i64) unnamed_addr #4

declare void @_ZN6webrtc23DominantNearendDetectorC1ERKNS_20EchoCanceller3Config10Suppressor24DominantNearendDetectionEm(%"class.webrtc::DominantNearendDetector"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection"* dereferenceable(24), i64) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !4}
!15 = distinct !{!15, !4}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
