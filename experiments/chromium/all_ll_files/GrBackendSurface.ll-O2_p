; ModuleID = '../../third_party/skia/src/gpu/GrBackendSurface.cpp'
source_filename = "../../third_party/skia/src/gpu/GrBackendSurface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.1, %class.sk_sp }
%union.anon.1 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrBackendSurfaceMutableState = type <{ %union.anon.3, i32, i8, [3 x i8] }>
%union.anon.3 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%class.sk_sp.13 = type { %class.GrGLTextureParameters* }
%struct.GrMockTextureInfo = type { i32, i32, i32 }
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.14, %class.sk_sp }
%union.anon.14 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%struct.GrMockRenderTargetInfo = type { i32, i32 }
%class.GrColorFormatDesc = type { i32, i32, i32, i32, i32, i32 }
%struct.GrVkBackendSurfaceInfo = type { %struct.GrVkImageInfo }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN32GrBackendSurfaceMutableStateImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTV32GrBackendSurfaceMutableStateImpl = comdat any

@.str = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/gpu/GrBackendSurface.cpp\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Unknown GrBackend\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Unexpected texture target\00", align 1
@_ZTV32GrBackendSurfaceMutableStateImpl = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.GrBackendSurfaceMutableStateImpl*)* @_ZN32GrBackendSurfaceMutableStateImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@switch.table._ZNK15GrBackendFormat11channelMaskEv = private unnamed_addr constant [27 x i32] [i32 0, i32 15, i32 1, i32 8, i32 16, i32 24, i32 15, i32 7, i32 15, i32 1, i32 7, i32 3, i32 15, i32 15, i32 15, i32 7, i32 7, i32 7, i32 15, i32 1, i32 3, i32 15, i32 3, i32 16, i32 0, i32 0, i32 0], align 4
@switch.table._ZNK15GrBackendFormat11channelMaskEv.3 = private unnamed_addr constant [31 x i32] [i32 0, i32 8, i32 7, i32 15, i32 15, i32 15, i32 7, i32 3, i32 15, i32 15, i32 15, i32 16, i32 24, i32 8, i32 15, i32 15, i32 15, i32 8, i32 3, i32 3, i32 15, i32 8, i32 8, i32 16, i32 7, i32 1, i32 1, i32 1, i32 16, i32 15, i32 15], align 4

@_ZN15GrBackendFormatC1ERKS_ = hidden unnamed_addr alias void (%class.GrBackendFormat*, %class.GrBackendFormat*), void (%class.GrBackendFormat*, %class.GrBackendFormat*)* @_ZN15GrBackendFormatC2ERKS_
@_ZN15GrBackendFormatC1Ejj = hidden unnamed_addr alias void (%class.GrBackendFormat*, i32, i32), void (%class.GrBackendFormat*, i32, i32)* @_ZN15GrBackendFormatC2Ejj
@_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo = hidden unnamed_addr alias void (%class.GrBackendFormat*, i32, %struct.GrVkYcbcrConversionInfo*), void (%class.GrBackendFormat*, i32, %struct.GrVkYcbcrConversionInfo*)* @_ZN15GrBackendFormatC2E8VkFormatRK23GrVkYcbcrConversionInfo
@_ZN15GrBackendFormatC1E11GrColorTypeN7SkImage15CompressionTypeEb = hidden unnamed_addr alias void (%class.GrBackendFormat*, i32, i32, i1), void (%class.GrBackendFormat*, i32, i32, i1)* @_ZN15GrBackendFormatC2E11GrColorTypeN7SkImage15CompressionTypeEb
@_ZN16GrBackendTextureC1Ev = hidden unnamed_addr alias void (%class.GrBackendTexture*), void (%class.GrBackendTexture*)* @_ZN16GrBackendTextureC2Ev
@_ZN16GrBackendTextureC1EiiRK13GrVkImageInfo = hidden unnamed_addr alias void (%class.GrBackendTexture*, i32, i32, %struct.GrVkImageInfo*), void (%class.GrBackendTexture*, i32, i32, %struct.GrVkImageInfo*)* @_ZN16GrBackendTextureC2EiiRK13GrVkImageInfo
@_ZN16GrBackendTextureC1EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE = hidden unnamed_addr alias void (%class.GrBackendTexture*, i32, i32, %struct.GrVkImageInfo*, %class.sk_sp*), void (%class.GrBackendTexture*, i32, i32, %struct.GrVkImageInfo*, %class.sk_sp*)* @_ZN16GrBackendTextureC2EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE
@_ZN16GrBackendTextureC1Eii11GrMipmapped15GrGLTextureInfo5sk_spI21GrGLTextureParametersE = hidden unnamed_addr alias void (%class.GrBackendTexture*, i32, i32, i1, i64, i32, %class.sk_sp.13*), void (%class.GrBackendTexture*, i32, i32, i1, i64, i32, %class.sk_sp.13*)* @_ZN16GrBackendTextureC2Eii11GrMipmapped15GrGLTextureInfo5sk_spI21GrGLTextureParametersE
@_ZN16GrBackendTextureC1Eii11GrMipmappedRK15GrGLTextureInfo = hidden unnamed_addr alias void (%class.GrBackendTexture*, i32, i32, i1, %struct.GrGLTextureInfo*), void (%class.GrBackendTexture*, i32, i32, i1, %struct.GrGLTextureInfo*)* @_ZN16GrBackendTextureC2Eii11GrMipmappedRK15GrGLTextureInfo
@_ZN16GrBackendTextureC1Eii11GrMipmappedRK17GrMockTextureInfo = hidden unnamed_addr alias void (%class.GrBackendTexture*, i32, i32, i1, %struct.GrMockTextureInfo*), void (%class.GrBackendTexture*, i32, i32, i1, %struct.GrMockTextureInfo*)* @_ZN16GrBackendTextureC2Eii11GrMipmappedRK17GrMockTextureInfo
@_ZN16GrBackendTextureD1Ev = hidden unnamed_addr alias void (%class.GrBackendTexture*), void (%class.GrBackendTexture*)* @_ZN16GrBackendTextureD2Ev
@_ZN16GrBackendTextureC1ERKS_ = hidden unnamed_addr alias void (%class.GrBackendTexture*, %class.GrBackendTexture*), void (%class.GrBackendTexture*, %class.GrBackendTexture*)* @_ZN16GrBackendTextureC2ERKS_
@_ZN21GrBackendRenderTargetC1Ev = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*), void (%class.GrBackendRenderTarget*)* @_ZN21GrBackendRenderTargetC2Ev
@_ZN21GrBackendRenderTargetC1EiiiRK13GrVkImageInfo = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, i32, i32, i32, %struct.GrVkImageInfo*), void (%class.GrBackendRenderTarget*, i32, i32, i32, %struct.GrVkImageInfo*)* @_ZN21GrBackendRenderTargetC2EiiiRK13GrVkImageInfo
@_ZN21GrBackendRenderTargetC1EiiRK13GrVkImageInfo = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, i32, i32, %struct.GrVkImageInfo*), void (%class.GrBackendRenderTarget*, i32, i32, %struct.GrVkImageInfo*)* @_ZN21GrBackendRenderTargetC2EiiRK13GrVkImageInfo
@_ZN21GrBackendRenderTargetC1EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, i32, i32, %struct.GrVkImageInfo*, %class.sk_sp*), void (%class.GrBackendRenderTarget*, i32, i32, %struct.GrVkImageInfo*, %class.sk_sp*)* @_ZN21GrBackendRenderTargetC2EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE
@_ZN21GrBackendRenderTargetC1EiiiiRK19GrGLFramebufferInfo = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, i32, i32, i32, i32, %struct.GrGLFramebufferInfo*), void (%class.GrBackendRenderTarget*, i32, i32, i32, i32, %struct.GrGLFramebufferInfo*)* @_ZN21GrBackendRenderTargetC2EiiiiRK19GrGLFramebufferInfo
@_ZN21GrBackendRenderTargetC1EiiiiRK22GrMockRenderTargetInfo = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, i32, i32, i32, i32, %struct.GrMockRenderTargetInfo*), void (%class.GrBackendRenderTarget*, i32, i32, i32, i32, %struct.GrMockRenderTargetInfo*)* @_ZN21GrBackendRenderTargetC2EiiiiRK22GrMockRenderTargetInfo
@_ZN21GrBackendRenderTargetD1Ev = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*), void (%class.GrBackendRenderTarget*)* @_ZN21GrBackendRenderTargetD2Ev
@_ZN21GrBackendRenderTargetC1ERKS_ = hidden unnamed_addr alias void (%class.GrBackendRenderTarget*, %class.GrBackendRenderTarget*), void (%class.GrBackendRenderTarget*, %class.GrBackendRenderTarget*)* @_ZN21GrBackendRenderTargetC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrBackendFormatC2ERKS_(%class.GrBackendFormat* nocapture, %class.GrBackendFormat* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  store i8 %8, i8* %6, align 4
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = icmp eq i8 %8, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %2
  switch i32 %5, label %28 [
    i32 0, label %14
    i32 1, label %18
    i32 5, label %23
  ]

14:                                               ; preds = %13
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %16, i32* %17, align 8
  br label %29

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0
  %21 = bitcast %struct.anon* %20 to i8*
  %22 = bitcast %struct.anon* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 56, i1 false)
  br label %29

23:                                               ; preds = %13
  %24 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2
  %25 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2
  %26 = bitcast %union.anon* %25 to i8*
  %27 = bitcast %union.anon* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 12, i1 false)
  br label %29

28:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

29:                                               ; preds = %2, %23, %18, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat* returned, %class.GrBackendFormat* readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.GrBackendFormat* %0, %1
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 4, !range !2
  store i8 %10, i8* %8, align 4
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = icmp eq i8 %10, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %4
  switch i32 %7, label %30 [
    i32 0, label %16
    i32 1, label %20
    i32 5, label %25
  ]

16:                                               ; preds = %15
  %17 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %18, i32* %19, align 8
  br label %31

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0
  %23 = bitcast %struct.anon* %22 to i8*
  %24 = bitcast %struct.anon* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 56, i1 false) #13
  br label %31

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2
  %27 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2
  %28 = bitcast %union.anon* %27 to i8*
  %29 = bitcast %union.anon* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 12, i1 false) #13
  br label %31

30:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

31:                                               ; preds = %25, %20, %16, %4, %2
  ret %class.GrBackendFormat* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrBackendFormatC2Ejj(%class.GrBackendFormat* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  switch i32 %2, label %11 [
    i32 0, label %12
    i32 3553, label %8
    i32 34037, label %9
    i32 36197, label %10
  ]

8:                                                ; preds = %3
  br label %12

9:                                                ; preds = %3
  br label %12

10:                                               ; preds = %3
  br label %12

11:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %3, %10, %9, %8
  %13 = phi i32 [ 3, %10 ], [ 2, %9 ], [ 1, %8 ], [ %2, %3 ]
  store i32 %13, i32* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = tail call fastcc i32 @_ZL20GrGLFormatFromGLEnumj(i32 %11)
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal fastcc i32 @_ZL20GrGLFormatFromGLEnumj(i32) unnamed_addr #4 {
  switch i32 %0, label %27 [
    i32 32856, label %28
    i32 33321, label %2
    i32 32828, label %3
    i32 32832, label %4
    i32 32837, label %5
    i32 37793, label %6
    i32 36194, label %7
    i32 34842, label %8
    i32 34846, label %9
    i32 33325, label %10
    i32 32849, label %11
    i32 33323, label %12
    i32 32857, label %13
    i32 32854, label %14
    i32 35907, label %15
    i32 36196, label %16
    i32 37492, label %17
    i32 33776, label %18
    i32 33777, label %19
    i32 33322, label %20
    i32 33324, label %21
    i32 32859, label %22
    i32 33327, label %23
    i32 36168, label %24
    i32 36169, label %25
    i32 35056, label %26
  ]

2:                                                ; preds = %1
  br label %28

3:                                                ; preds = %1
  br label %28

4:                                                ; preds = %1
  br label %28

5:                                                ; preds = %1
  br label %28

6:                                                ; preds = %1
  br label %28

7:                                                ; preds = %1
  br label %28

8:                                                ; preds = %1
  br label %28

9:                                                ; preds = %1
  br label %28

10:                                               ; preds = %1
  br label %28

11:                                               ; preds = %1
  br label %28

12:                                               ; preds = %1
  br label %28

13:                                               ; preds = %1
  br label %28

14:                                               ; preds = %1
  br label %28

15:                                               ; preds = %1
  br label %28

16:                                               ; preds = %1
  br label %28

17:                                               ; preds = %1
  br label %28

18:                                               ; preds = %1
  br label %28

19:                                               ; preds = %1
  br label %28

20:                                               ; preds = %1
  br label %28

21:                                               ; preds = %1
  br label %28

22:                                               ; preds = %1
  br label %28

23:                                               ; preds = %1
  br label %28

24:                                               ; preds = %1
  br label %28

25:                                               ; preds = %1
  br label %28

26:                                               ; preds = %1
  br label %28

27:                                               ; preds = %1
  br label %28

28:                                               ; preds = %1, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %29 = phi i32 [ 0, %27 ], [ 26, %26 ], [ 25, %25 ], [ 24, %24 ], [ 22, %23 ], [ 21, %22 ], [ 20, %21 ], [ 19, %20 ], [ 18, %19 ], [ 17, %18 ], [ 16, %17 ], [ 15, %16 ], [ 14, %15 ], [ 13, %14 ], [ 12, %13 ], [ 11, %12 ], [ 10, %11 ], [ 9, %10 ], [ 23, %9 ], [ 8, %8 ], [ 7, %7 ], [ 6, %6 ], [ 5, %5 ], [ 4, %4 ], [ 3, %3 ], [ 2, %2 ], [ 1, %1 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* noalias nocapture sret, %struct.GrVkYcbcrConversionInfo* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.GrVkYcbcrConversionInfo, %struct.GrVkYcbcrConversionInfo* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %4, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %10 = bitcast %struct.GrVkYcbcrConversionInfo* %9 to i8*
  %11 = bitcast %struct.GrVkYcbcrConversionInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 44, i1 false) #13
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  store i32 3, i32* %7, align 8
  br label %20

20:                                               ; preds = %2, %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrBackendFormatC2E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* nocapture, i32, %struct.GrVkYcbcrConversionInfo* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %9 = bitcast %struct.GrVkYcbcrConversionInfo* %8 to i8*
  %10 = bitcast %struct.GrVkYcbcrConversionInfo* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 44, i1 false)
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  store i32 3, i32* %6, align 8
  br label %19

19:                                               ; preds = %3, %14, %18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* nocapture readonly, i32* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %1, align 4
  br label %13

13:                                               ; preds = %2, %6, %10
  %14 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.GrVkYcbcrConversionInfo* @_ZNK15GrBackendFormat24getVkYcbcrConversionInfoEv(%class.GrBackendFormat* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %10 = select i1 %8, %struct.GrVkYcbcrConversionInfo* %9, %struct.GrVkYcbcrConversionInfo* null
  ret %struct.GrVkYcbcrConversionInfo* %10

11:                                               ; preds = %1
  ret %struct.GrVkYcbcrConversionInfo* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15GrBackendFormatC2E11GrColorTypeN7SkImage15CompressionTypeEb(%class.GrBackendFormat* nocapture, i32, i32, i1 zeroext) unnamed_addr #6 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast [4 x i8]* %10 to i32*
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %13 = bitcast %struct.GrVkYcbcrConversionInfo* %12 to i8*
  store i8 %5, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15GrBackendFormat11channelMaskEv(%class.GrBackendFormat* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %44 [
    i32 0, label %8
    i32 1, label %14
    i32 5, label %31
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = tail call fastcc i32 @_ZL20GrGLFormatFromGLEnumj(i32 %10)
  %12 = icmp ult i32 %11, 27
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  tail call void @llvm.trap() #13
  unreachable

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %30 [
    i32 37, label %44
    i32 9, label %17
    i32 44, label %44
    i32 4, label %18
    i32 97, label %44
    i32 76, label %19
    i32 23, label %20
    i32 16, label %21
    i32 64, label %44
    i32 58, label %44
    i32 3, label %44
    i32 2, label %44
    i32 43, label %44
    i32 147, label %22
    i32 131, label %23
    i32 133, label %44
    i32 70, label %24
    i32 77, label %25
    i32 91, label %44
    i32 83, label %26
    i32 127, label %27
    i32 129, label %28
    i32 130, label %29
  ]

17:                                               ; preds = %14
  br label %44

18:                                               ; preds = %14
  br label %44

19:                                               ; preds = %14
  br label %44

20:                                               ; preds = %14
  br label %44

21:                                               ; preds = %14
  br label %44

22:                                               ; preds = %14
  br label %44

23:                                               ; preds = %14
  br label %44

24:                                               ; preds = %14
  br label %44

25:                                               ; preds = %14
  br label %44

26:                                               ; preds = %14
  br label %44

27:                                               ; preds = %14
  br label %44

28:                                               ; preds = %14
  br label %44

29:                                               ; preds = %14
  br label %44

30:                                               ; preds = %14
  br label %44

31:                                               ; preds = %5
  %32 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %33, 31
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %8
  %37 = sext i32 %11 to i64
  %38 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZNK15GrBackendFormat11channelMaskEv, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  ret i32 %39

40:                                               ; preds = %31
  %41 = sext i32 %33 to i64
  %42 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZNK15GrBackendFormat11channelMaskEv.3, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  ret i32 %43

44:                                               ; preds = %1, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %5
  %45 = phi i32 [ 0, %1 ], [ 0, %5 ], [ 0, %30 ], [ 0, %29 ], [ 0, %28 ], [ 0, %27 ], [ 3, %26 ], [ 3, %25 ], [ 1, %24 ], [ 7, %23 ], [ 7, %22 ], [ 3, %21 ], [ 7, %20 ], [ 1, %19 ], [ 7, %18 ], [ 1, %17 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ], [ 15, %14 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15GrBackendFormat4descEv(%class.GrColorFormatDesc* noalias sret, %class.GrBackendFormat* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 24, i1 false) #13, !alias.scope !3
  br label %330

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %328 [
    i32 0, label %11
    i32 1, label %111
    i32 5, label %199
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = tail call fastcc i32 @_ZL20GrGLFormatFromGLEnumj(i32 %13)
  switch i32 %14, label %110 [
    i32 0, label %15
    i32 1, label %17
    i32 2, label %21
    i32 3, label %25
    i32 4, label %29
    i32 5, label %33
    i32 6, label %37
    i32 7, label %41
    i32 8, label %45
    i32 9, label %49
    i32 10, label %54
    i32 11, label %58
    i32 12, label %63
    i32 13, label %67
    i32 14, label %71
    i32 19, label %75
    i32 20, label %79
    i32 21, label %84
    i32 22, label %88
    i32 23, label %92
    i32 15, label %96
    i32 16, label %98
    i32 17, label %100
    i32 18, label %102
    i32 24, label %104
    i32 25, label %106
    i32 26, label %108
  ]

15:                                               ; preds = %11
  %16 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 24, i1 false) #13, !alias.scope !6
  br label %330

17:                                               ; preds = %11
  %18 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %18, align 4, !alias.scope !11
  %19 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %19, align 4, !alias.scope !11
  %20 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %20, align 4, !alias.scope !11
  br label %330

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %22, align 4, !alias.scope !14
  %23 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %24 = bitcast i32* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 20, i1 false) #13, !alias.scope !17
  br label %330

25:                                               ; preds = %11
  %26 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 8>, <4 x i32>* %26, align 4, !alias.scope !18
  %27 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %27, align 4, !alias.scope !18
  %28 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %28, align 4, !alias.scope !18
  br label %330

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %31 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 16, i1 false) #13, !alias.scope !21
  store i32 8, i32* %30, align 4, !alias.scope !21
  %32 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %32, align 4, !alias.scope !21
  br label %330

33:                                               ; preds = %11
  %34 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %35 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 16, i1 false) #13, !alias.scope !24
  store i32 8, i32* %34, align 4, !alias.scope !24
  %36 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %36, align 4, !alias.scope !24
  br label %330

37:                                               ; preds = %11
  %38 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %38, align 4, !alias.scope !27
  %39 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %39, align 4, !alias.scope !27
  %40 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %40, align 4, !alias.scope !27
  br label %330

41:                                               ; preds = %11
  %42 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 5, i32 6, i32 5, i32 0>, <4 x i32>* %42, align 4, !alias.scope !30
  %43 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %43, align 4, !alias.scope !30
  %44 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %44, align 4, !alias.scope !30
  br label %330

45:                                               ; preds = %11
  %46 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %46, align 4, !alias.scope !33
  %47 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %47, align 4, !alias.scope !33
  %48 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %48, align 4, !alias.scope !33
  br label %330

49:                                               ; preds = %11
  %50 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %50, align 4, !alias.scope !36
  %51 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %52 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  %53 = bitcast i32* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 16, i1 false) #13, !alias.scope !36
  store i32 2, i32* %52, align 4, !alias.scope !36
  br label %330

54:                                               ; preds = %11
  %55 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 0>, <4 x i32>* %55, align 4, !alias.scope !39
  %56 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %56, align 4, !alias.scope !39
  %57 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %57, align 4, !alias.scope !39
  br label %330

58:                                               ; preds = %11
  %59 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %59, align 4, !alias.scope !42
  %60 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 8, i32* %60, align 4, !alias.scope !42
  %61 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %62 = bitcast i32* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #13, !alias.scope !17
  br label %330

63:                                               ; preds = %11
  %64 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 2>, <4 x i32>* %64, align 4, !alias.scope !45
  %65 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %65, align 4, !alias.scope !45
  %66 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %66, align 4, !alias.scope !45
  br label %330

67:                                               ; preds = %11
  %68 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %68, align 4, !alias.scope !48
  %69 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %69, align 4, !alias.scope !48
  %70 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %70, align 4, !alias.scope !48
  br label %330

71:                                               ; preds = %11
  %72 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %72, align 4, !alias.scope !51
  %73 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %73, align 4, !alias.scope !51
  %74 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 1, i32* %74, align 4, !alias.scope !51
  br label %330

75:                                               ; preds = %11
  %76 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %76, align 4, !alias.scope !54
  %77 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %78 = bitcast i32* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 20, i1 false) #13, !alias.scope !17
  br label %330

79:                                               ; preds = %11
  %80 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %80, align 4, !alias.scope !57
  %81 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 16, i32* %81, align 4, !alias.scope !57
  %82 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #13, !alias.scope !17
  br label %330

84:                                               ; preds = %11
  %85 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %85, align 4, !alias.scope !60
  %86 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %86, align 4, !alias.scope !60
  %87 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %87, align 4, !alias.scope !60
  br label %330

88:                                               ; preds = %11
  %89 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 0, i32 0>, <4 x i32>* %89, align 4, !alias.scope !63
  %90 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %90, align 4, !alias.scope !63
  %91 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %91, align 4, !alias.scope !63
  br label %330

92:                                               ; preds = %11
  %93 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %94 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 16, i1 false) #13, !alias.scope !66
  store i32 16, i32* %93, align 4, !alias.scope !66
  %95 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %95, align 4, !alias.scope !66
  br label %330

96:                                               ; preds = %11
  %97 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 24, i1 false) #13, !alias.scope !69
  br label %330

98:                                               ; preds = %11
  %99 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 24, i1 false) #13, !alias.scope !72
  br label %330

100:                                              ; preds = %11
  %101 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 0, i64 24, i1 false) #13, !alias.scope !75
  br label %330

102:                                              ; preds = %11
  %103 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %103, i8 0, i64 24, i1 false) #13, !alias.scope !78
  br label %330

104:                                              ; preds = %11
  %105 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 24, i1 false) #13, !alias.scope !81
  br label %330

106:                                              ; preds = %11
  %107 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 24, i1 false) #13, !alias.scope !84
  br label %330

108:                                              ; preds = %11
  %109 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %109, i8 0, i64 24, i1 false) #13, !alias.scope !87
  br label %330

110:                                              ; preds = %11
  tail call void @llvm.trap() #13
  unreachable

111:                                              ; preds = %8
  %112 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  switch i32 %113, label %197 [
    i32 37, label %114
    i32 9, label %118
    i32 44, label %122
    i32 4, label %126
    i32 97, label %130
    i32 76, label %134
    i32 23, label %139
    i32 16, label %143
    i32 64, label %148
    i32 58, label %152
    i32 3, label %156
    i32 2, label %160
    i32 43, label %164
    i32 70, label %168
    i32 77, label %172
    i32 91, label %177
    i32 83, label %181
    i32 147, label %185
    i32 131, label %187
    i32 133, label %189
    i32 127, label %191
    i32 129, label %193
    i32 130, label %195
  ]

114:                                              ; preds = %111
  %115 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %115, align 4, !alias.scope !90
  %116 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %116, align 4, !alias.scope !90
  %117 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %117, align 4, !alias.scope !90
  br label %330

118:                                              ; preds = %111
  %119 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %119, align 4, !alias.scope !95
  %120 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %121 = bitcast i32* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 20, i1 false) #13, !alias.scope !98
  br label %330

122:                                              ; preds = %111
  %123 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %123, align 4, !alias.scope !99
  %124 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %124, align 4, !alias.scope !99
  %125 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %125, align 4, !alias.scope !99
  br label %330

126:                                              ; preds = %111
  %127 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 5, i32 6, i32 5, i32 0>, <4 x i32>* %127, align 4, !alias.scope !102
  %128 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %128, align 4, !alias.scope !102
  %129 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %129, align 4, !alias.scope !102
  br label %330

130:                                              ; preds = %111
  %131 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %131, align 4, !alias.scope !105
  %132 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %132, align 4, !alias.scope !105
  %133 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %133, align 4, !alias.scope !105
  br label %330

134:                                              ; preds = %111
  %135 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %135, align 4, !alias.scope !108
  %136 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %137 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  %138 = bitcast i32* %136 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %138, i8 0, i64 16, i1 false) #13, !alias.scope !108
  store i32 2, i32* %137, align 4, !alias.scope !108
  br label %330

139:                                              ; preds = %111
  %140 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 0>, <4 x i32>* %140, align 4, !alias.scope !111
  %141 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %141, align 4, !alias.scope !111
  %142 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %142, align 4, !alias.scope !111
  br label %330

143:                                              ; preds = %111
  %144 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %144, align 4, !alias.scope !114
  %145 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 8, i32* %145, align 4, !alias.scope !114
  %146 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %147 = bitcast i32* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %147, i8 0, i64 16, i1 false) #13, !alias.scope !98
  br label %330

148:                                              ; preds = %111
  %149 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 2>, <4 x i32>* %149, align 4, !alias.scope !117
  %150 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %150, align 4, !alias.scope !117
  %151 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %151, align 4, !alias.scope !117
  br label %330

152:                                              ; preds = %111
  %153 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 2>, <4 x i32>* %153, align 4, !alias.scope !120
  %154 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %154, align 4, !alias.scope !120
  %155 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %155, align 4, !alias.scope !120
  br label %330

156:                                              ; preds = %111
  %157 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %157, align 4, !alias.scope !123
  %158 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %158, align 4, !alias.scope !123
  %159 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %159, align 4, !alias.scope !123
  br label %330

160:                                              ; preds = %111
  %161 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %161, align 4, !alias.scope !126
  %162 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %162, align 4, !alias.scope !126
  %163 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %163, align 4, !alias.scope !126
  br label %330

164:                                              ; preds = %111
  %165 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %165, align 4, !alias.scope !129
  %166 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %166, align 4, !alias.scope !129
  %167 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 1, i32* %167, align 4, !alias.scope !129
  br label %330

168:                                              ; preds = %111
  %169 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %169, align 4, !alias.scope !132
  %170 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %171 = bitcast i32* %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %171, i8 0, i64 20, i1 false) #13, !alias.scope !98
  br label %330

172:                                              ; preds = %111
  %173 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %173, align 4, !alias.scope !135
  %174 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 16, i32* %174, align 4, !alias.scope !135
  %175 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %176 = bitcast i32* %175 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %176, i8 0, i64 16, i1 false) #13, !alias.scope !98
  br label %330

177:                                              ; preds = %111
  %178 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %178, align 4, !alias.scope !138
  %179 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %179, align 4, !alias.scope !138
  %180 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %180, align 4, !alias.scope !138
  br label %330

181:                                              ; preds = %111
  %182 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 0, i32 0>, <4 x i32>* %182, align 4, !alias.scope !141
  %183 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %183, align 4, !alias.scope !141
  %184 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %184, align 4, !alias.scope !141
  br label %330

185:                                              ; preds = %111
  %186 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %186, i8 0, i64 24, i1 false) #13, !alias.scope !144
  br label %330

187:                                              ; preds = %111
  %188 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %188, i8 0, i64 24, i1 false) #13, !alias.scope !147
  br label %330

189:                                              ; preds = %111
  %190 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %190, i8 0, i64 24, i1 false) #13, !alias.scope !150
  br label %330

191:                                              ; preds = %111
  %192 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %192, i8 0, i64 24, i1 false) #13, !alias.scope !153
  br label %330

193:                                              ; preds = %111
  %194 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %194, i8 0, i64 24, i1 false) #13, !alias.scope !156
  br label %330

195:                                              ; preds = %111
  %196 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %196, i8 0, i64 24, i1 false) #13, !alias.scope !159
  br label %330

197:                                              ; preds = %111
  %198 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %198, i8 0, i64 24, i1 false) #13, !alias.scope !162
  br label %330

199:                                              ; preds = %8
  %200 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %201 = load i32, i32* %200, align 8
  switch i32 %201, label %327 [
    i32 0, label %202
    i32 1, label %204
    i32 2, label %208
    i32 3, label %212
    i32 4, label %216
    i32 5, label %220
    i32 6, label %224
    i32 7, label %228
    i32 8, label %233
    i32 9, label %237
    i32 10, label %241
    i32 11, label %245
    i32 12, label %249
    i32 13, label %253
    i32 14, label %257
    i32 15, label %261
    i32 16, label %265
    i32 21, label %269
    i32 22, label %273
    i32 23, label %277
    i32 17, label %281
    i32 18, label %285
    i32 20, label %290
    i32 19, label %294
    i32 24, label %298
    i32 25, label %302
    i32 26, label %306
    i32 27, label %310
    i32 28, label %315
    i32 30, label %319
    i32 29, label %323
  ]

202:                                              ; preds = %199
  %203 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %203, i8 0, i64 24, i1 false) #13, !alias.scope !165
  br label %330

204:                                              ; preds = %199
  %205 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 8>, <4 x i32>* %205, align 4, !alias.scope !170
  %206 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %206, align 4, !alias.scope !170
  %207 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %207, align 4, !alias.scope !170
  br label %330

208:                                              ; preds = %199
  %209 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 5, i32 6, i32 5, i32 0>, <4 x i32>* %209, align 4, !alias.scope !173
  %210 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %210, align 4, !alias.scope !173
  %211 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %211, align 4, !alias.scope !173
  br label %330

212:                                              ; preds = %199
  %213 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %213, align 4, !alias.scope !176
  %214 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %214, align 4, !alias.scope !176
  %215 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %215, align 4, !alias.scope !176
  br label %330

216:                                              ; preds = %199
  %217 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %217, align 4, !alias.scope !179
  %218 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %218, align 4, !alias.scope !179
  %219 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %219, align 4, !alias.scope !179
  br label %330

220:                                              ; preds = %199
  %221 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %221, align 4, !alias.scope !182
  %222 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %222, align 4, !alias.scope !182
  %223 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 1, i32* %223, align 4, !alias.scope !182
  br label %330

224:                                              ; preds = %199
  %225 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 0>, <4 x i32>* %225, align 4, !alias.scope !185
  %226 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %226, align 4, !alias.scope !185
  %227 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %227, align 4, !alias.scope !185
  br label %330

228:                                              ; preds = %199
  %229 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %229, align 4, !alias.scope !188
  %230 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 8, i32* %230, align 4, !alias.scope !188
  %231 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %232 = bitcast i32* %231 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %232, i8 0, i64 16, i1 false) #13, !alias.scope !191
  br label %330

233:                                              ; preds = %199
  %234 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32>* %234, align 4, !alias.scope !192
  %235 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %235, align 4, !alias.scope !192
  %236 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %236, align 4, !alias.scope !192
  br label %330

237:                                              ; preds = %199
  %238 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 2>, <4 x i32>* %238, align 4, !alias.scope !195
  %239 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %239, align 4, !alias.scope !195
  %240 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %240, align 4, !alias.scope !195
  br label %330

241:                                              ; preds = %199
  %242 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 2>, <4 x i32>* %242, align 4, !alias.scope !198
  %243 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %243, align 4, !alias.scope !198
  %244 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %244, align 4, !alias.scope !198
  br label %330

245:                                              ; preds = %199
  %246 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %247 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %247, i8 0, i64 16, i1 false) #13, !alias.scope !201
  store i32 8, i32* %246, align 4, !alias.scope !201
  %248 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %248, align 4, !alias.scope !201
  br label %330

249:                                              ; preds = %199
  %250 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %251 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %251, i8 0, i64 16, i1 false) #13, !alias.scope !204
  store i32 8, i32* %250, align 4, !alias.scope !204
  %252 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %252, align 4, !alias.scope !204
  br label %330

253:                                              ; preds = %199
  %254 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 16>, <4 x i32>* %254, align 4, !alias.scope !207
  %255 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %255, align 4, !alias.scope !207
  %256 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %256, align 4, !alias.scope !207
  br label %330

257:                                              ; preds = %199
  %258 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %258, align 4, !alias.scope !210
  %259 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %259, align 4, !alias.scope !210
  %260 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %260, align 4, !alias.scope !210
  br label %330

261:                                              ; preds = %199
  %262 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %262, align 4, !alias.scope !213
  %263 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %263, align 4, !alias.scope !213
  %264 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %264, align 4, !alias.scope !213
  br label %330

265:                                              ; preds = %199
  %266 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 32, i32 32, i32 32, i32 32>, <4 x i32>* %266, align 4, !alias.scope !216
  %267 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %267, align 4, !alias.scope !216
  %268 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %268, align 4, !alias.scope !216
  br label %330

269:                                              ; preds = %199
  %270 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 8>, <4 x i32>* %270, align 4, !alias.scope !219
  %271 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %271, align 4, !alias.scope !219
  %272 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %272, align 4, !alias.scope !219
  br label %330

273:                                              ; preds = %199
  %274 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 32>, <4 x i32>* %274, align 4, !alias.scope !222
  %275 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %275, align 4, !alias.scope !222
  %276 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %276, align 4, !alias.scope !222
  br label %330

277:                                              ; preds = %199
  %278 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %279 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %279, i8 0, i64 16, i1 false) #13, !alias.scope !225
  store i32 8, i32* %278, align 4, !alias.scope !225
  %280 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %280, align 4, !alias.scope !225
  br label %330

281:                                              ; preds = %199
  %282 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 16>, <4 x i32>* %282, align 4, !alias.scope !228
  %283 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %283, align 4, !alias.scope !228
  %284 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %284, align 4, !alias.scope !228
  br label %330

285:                                              ; preds = %199
  %286 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %286, align 4, !alias.scope !231
  %287 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  store i32 16, i32* %287, align 4, !alias.scope !231
  %288 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 2
  %289 = bitcast i32* %288 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %289, i8 0, i64 16, i1 false) #13, !alias.scope !191
  br label %330

290:                                              ; preds = %199
  %291 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* %291, align 4, !alias.scope !234
  %292 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %292, align 4, !alias.scope !234
  %293 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %293, align 4, !alias.scope !234
  br label %330

294:                                              ; preds = %199
  %295 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 16, i32 0, i32 0>, <4 x i32>* %295, align 4, !alias.scope !237
  %296 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %296, align 4, !alias.scope !237
  %297 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %297, align 4, !alias.scope !237
  br label %330

298:                                              ; preds = %199
  %299 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 8, i32 8, i32 8, i32 0>, <4 x i32>* %299, align 4, !alias.scope !240
  %300 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %300, align 4, !alias.scope !240
  %301 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %301, align 4, !alias.scope !240
  br label %330

302:                                              ; preds = %199
  %303 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 8, i32* %303, align 4, !alias.scope !243
  %304 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %305 = bitcast i32* %304 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %305, i8 0, i64 20, i1 false) #13, !alias.scope !191
  br label %330

306:                                              ; preds = %199
  %307 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %307, align 4, !alias.scope !246
  %308 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %309 = bitcast i32* %308 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %309, i8 0, i64 20, i1 false) #13, !alias.scope !191
  br label %330

310:                                              ; preds = %199
  %311 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 0
  store i32 16, i32* %311, align 4, !alias.scope !249
  %312 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 1
  %313 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  %314 = bitcast i32* %312 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %314, i8 0, i64 16, i1 false) #13, !alias.scope !249
  store i32 2, i32* %313, align 4, !alias.scope !249
  br label %330

315:                                              ; preds = %199
  %316 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  %317 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %317, i8 0, i64 16, i1 false) #13, !alias.scope !252
  store i32 16, i32* %316, align 4, !alias.scope !252
  %318 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 2, i32* %318, align 4, !alias.scope !252
  br label %330

319:                                              ; preds = %199
  %320 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %320, align 4, !alias.scope !255
  %321 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %321, align 4, !alias.scope !255
  %322 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %322, align 4, !alias.scope !255
  br label %330

323:                                              ; preds = %199
  %324 = bitcast %class.GrColorFormatDesc* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %324, align 4, !alias.scope !258
  %325 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 4
  store i32 0, i32* %325, align 4, !alias.scope !258
  %326 = getelementptr inbounds %class.GrColorFormatDesc, %class.GrColorFormatDesc* %0, i64 0, i32 5
  store i32 0, i32* %326, align 4, !alias.scope !258
  br label %330

327:                                              ; preds = %199
  tail call void @llvm.trap() #13
  unreachable

328:                                              ; preds = %8
  %329 = bitcast %class.GrColorFormatDesc* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %329, i8 0, i64 24, i1 false) #13, !alias.scope !261
  br label %330

330:                                              ; preds = %323, %319, %315, %310, %306, %302, %298, %294, %290, %285, %281, %277, %273, %269, %265, %261, %257, %253, %249, %245, %241, %237, %233, %228, %224, %220, %216, %212, %208, %204, %202, %197, %195, %193, %191, %189, %187, %185, %181, %177, %172, %168, %164, %160, %156, %152, %148, %143, %139, %134, %130, %126, %122, %118, %114, %108, %106, %104, %102, %100, %98, %96, %92, %88, %84, %79, %75, %71, %67, %63, %58, %54, %49, %45, %41, %37, %33, %29, %25, %21, %17, %15, %328, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrBackendFormat15asMockColorTypeEv(%class.GrBackendFormat* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %1, %5, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrBackendFormat21asMockCompressionTypeEv(%class.GrBackendFormat* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast [4 x i8]* %10 to i32*
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15GrBackendFormat19isMockStencilFormatEv(%class.GrBackendFormat* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %11 = bitcast %struct.GrVkYcbcrConversionInfo* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %1, %5, %9
  %15 = phi i1 [ %13, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15GrBackendFormat13makeTexture2DEv(%class.GrBackendFormat* noalias nocapture sret, %class.GrBackendFormat* readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrBackendFormat* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 72, i1 false)
  %4 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 4, !range !2
  store i8 %9, i8* %7, align 4
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = icmp eq i8 %9, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %2
  switch i32 %6, label %24 [
    i32 0, label %15
    i32 1, label %25
    i32 5, label %19
  ]

15:                                               ; preds = %14
  %16 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %17, i32* %18, align 8
  br label %40

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2
  %21 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2
  %22 = bitcast %union.anon* %21 to i8*
  %23 = bitcast %union.anon* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %23, i64 12, i1 false) #13
  br label %40

24:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

25:                                               ; preds = %14
  %26 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0
  %28 = bitcast %struct.anon* %27 to i8*
  %29 = bitcast %struct.anon* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 56, i1 false) #13
  %30 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2
  %31 = icmp eq %struct.GrVkYcbcrConversionInfo* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 44, i1 false)
  %39 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 37, i32* %39, align 8
  br label %40

40:                                               ; preds = %32, %19, %15, %2, %25, %36
  store i32 1, i32* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15GrBackendFormat8MakeMockE11GrColorTypeN7SkImage15CompressionTypeEb(%class.GrBackendFormat* noalias nocapture sret, i32, i32, i1 zeroext) local_unnamed_addr #6 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast [4 x i8]* %10 to i32*
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %13 = bitcast %struct.GrVkYcbcrConversionInfo* %12 to i8*
  store i8 %5, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* nocapture readonly, %class.GrBackendFormat* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %98, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %98, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %98

16:                                               ; preds = %10
  switch i32 %12, label %97 [
    i32 0, label %17
    i32 1, label %23
    i32 5, label %83
  ]

17:                                               ; preds = %16
  %18 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br label %98

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %98

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %98, label %37

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %98

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  br i1 %48, label %49, label %98

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %31, %51
  br i1 %52, label %53, label %98

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %59, label %98

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %65, label %98

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 6
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 6
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %98

71:                                               ; preds = %65
  %72 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 7
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 7
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %98

77:                                               ; preds = %71
  %78 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 8
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 2, i32 8
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br label %98

83:                                               ; preds = %16
  %84 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %85, %87
  br i1 %88, label %89, label %98

89:                                               ; preds = %83
  %90 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 1
  %91 = bitcast [4 x i8]* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 2, i32 0, i32 1
  %94 = bitcast [4 x i8]* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %92, %95
  br label %98

97:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

98:                                               ; preds = %77, %71, %65, %59, %53, %49, %43, %37, %33, %83, %89, %23, %10, %2, %6, %17
  %99 = phi i1 [ %22, %17 ], [ false, %6 ], [ false, %2 ], [ false, %10 ], [ false, %23 ], [ false, %83 ], [ %96, %89 ], [ true, %33 ], [ false, %71 ], [ false, %65 ], [ false, %59 ], [ false, %53 ], [ false, %49 ], [ false, %43 ], [ false, %37 ], [ %82, %77 ]
  ret i1 %99
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16GrBackendTextureC2Ev(%class.GrBackendTexture* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2EiiRK13GrVkImageInfo(%class.GrBackendTexture* nocapture, i32, i32, %struct.GrVkImageInfo* nocapture readonly dereferenceable(144)) unnamed_addr #0 align 2 {
  %5 = alloca [72 x i8], align 8
  %6 = tail call i8* @_Znwm(i64 32) #14
  %7 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV32GrBackendSurfaceMutableStateImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %8, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %10, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %6, i64 20
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 1, i8* %20, align 4
  %21 = ptrtoint i8* %6 to i64
  %22 = getelementptr inbounds [72 x i8], [72 x i8]* %5, i64 0, i64 0
  %23 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 1, i8* %23, align 8
  %24 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %1, i32* %24, align 4
  %25 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %2, i32* %25, align 8
  %26 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  %27 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, 1
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %26, align 4
  %31 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 1, i32* %31, align 8
  %32 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %33 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 5
  %34 = load i32, i32* %33, align 4, !noalias !264
  %35 = icmp eq i32 %34, 0
  %36 = bitcast %struct.GrVkImageInfo* %3 to i8*
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  %38 = bitcast i32* %37 to i8*
  %39 = select i1 %35, i32 23, i32 %34
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %38, i64 72, i1 false) #13
  %40 = bitcast %union.anon.1* %32 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %36, i64 68, i1 false) #13
  %41 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 1, i64 44
  %42 = bitcast i8* %41 to i32*
  store i32 %39, i32* %42, align 4
  %43 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 1, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %22, i64 72, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22)
  %44 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6
  %45 = bitcast %class.sk_sp* %44 to i64*
  store i64 %21, i64* %45, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.GrBackendTexture* nocapture, i32, i32, %struct.GrVkImageInfo* nocapture readonly dereferenceable(144), %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca [72 x i8], align 8
  %7 = getelementptr inbounds [72 x i8], [72 x i8]* %6, i64 0, i64 0
  %8 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, 1
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %11, align 4
  %16 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !noalias !267
  %20 = icmp eq i32 %19, 0
  %21 = bitcast %struct.GrVkImageInfo* %3 to i8*
  %22 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  %23 = bitcast i32* %22 to i8*
  %24 = select i1 %20, i32 23, i32 %19
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %23, i64 72, i1 false)
  %25 = bitcast %union.anon.1* %17 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %21, i64 68, i1 false)
  %26 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 1, i64 44
  %27 = bitcast i8* %26 to i32*
  store i32 %24, i32* %27, align 4
  %28 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 1, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %7, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7)
  %29 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %31 = bitcast %class.sk_sp* %4 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  %33 = bitcast %class.sk_sp* %29 to i64*
  store i64 %32, i64* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2Eii11GrMipmapped15GrGLTextureInfo5sk_spI21GrGLTextureParametersE(%class.GrBackendTexture* nocapture, i32, i32, i1 zeroext, i64, i32, %class.sk_sp.13* nocapture) unnamed_addr #0 align 2 {
  %8 = zext i1 %3 to i8
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  store i8 %8, i8* %12, align 4
  %13 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %6, i64 0, i32 0
  %15 = bitcast %class.sk_sp.13* %6 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.GrGLTextureParameters* null, %class.GrGLTextureParameters** %14, align 8
  %17 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %18 = bitcast %union.anon.1* %17 to i64*
  store i64 %4, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %5, i32* %19, align 8
  %20 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 1
  %21 = bitcast %class.GrGLTextureParameters** %20 to i64*
  store i64 %16, i64* %21, align 8
  %22 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %22, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16GrBackendTexture18getGLTextureParamsEv(%class.sk_sp.13* noalias nocapture sret, %class.GrBackendTexture* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0, i32 1
  %8 = load %class.GrGLTextureParameters*, %class.GrGLTextureParameters** %7, align 8, !noalias !270
  %9 = icmp eq %class.GrGLTextureParameters* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrGLTextureParameters, %class.GrGLTextureParameters* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic, !noalias !273
  br label %13

13:                                               ; preds = %10, %6, %2
  %14 = phi %class.GrGLTextureParameters* [ null, %2 ], [ %8, %6 ], [ %8, %10 ]
  %15 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %0, i64 0, i32 0
  store %class.GrGLTextureParameters* %14, %class.GrGLTextureParameters** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2Eii11GrMipmappedRK15GrGLTextureInfo(%class.GrBackendTexture* nocapture, i32, i32, i1 zeroext, %struct.GrGLTextureInfo* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %6 = bitcast %struct.GrGLTextureInfo* %4 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %4, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call i8* @_Znwm(i64 56) #14, !noalias !276
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 56, i1 false) #13, !noalias !276
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4, !noalias !276
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  %13 = bitcast i8* %12 to %"struct.GrGLTextureParameters::SamplerOverriddenState"*
  tail call void @_ZN21GrGLTextureParameters22SamplerOverriddenStateC1Ev(%"struct.GrGLTextureParameters::SamplerOverriddenState"* %13) #13, !noalias !276
  %14 = getelementptr inbounds i8, i8* %10, i64 32
  %15 = bitcast i8* %14 to %"struct.GrGLTextureParameters::NonsamplerState"*
  tail call void @_ZN21GrGLTextureParameters15NonsamplerStateC1Ev(%"struct.GrGLTextureParameters::NonsamplerState"* %15) #13, !noalias !276
  %16 = getelementptr inbounds i8, i8* %10, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8, !noalias !276
  %18 = ptrtoint i8* %10 to i64
  %19 = zext i1 %3 to i8
  %20 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %1, i32* %21, align 4
  %22 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %2, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  store i8 %19, i8* %23, align 4
  %24 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %26 = bitcast %union.anon.1* %25 to i64*
  store i64 %7, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %9, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 1
  %29 = bitcast %class.GrGLTextureParameters** %28 to i64*
  store i64 %18, i64* %29, align 8
  %30 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  %31 = bitcast i8* %10 to %class.GrGLTextureParameters*
  tail call void @_ZN21GrGLTextureParameters10invalidateEv(%class.GrGLTextureParameters* nonnull %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTexture27glTextureParametersModifiedEv(%class.GrBackendTexture* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 1
  %11 = load %class.GrGLTextureParameters*, %class.GrGLTextureParameters** %10, align 8
  tail call void @_ZN21GrGLTextureParameters10invalidateEv(%class.GrGLTextureParameters* %11) #13
  br label %12

12:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2Eii11GrMipmappedRK17GrMockTextureInfo(%class.GrBackendTexture* nocapture, i32, i32, i1 zeroext, %struct.GrMockTextureInfo* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  store i8 %6, i8* %10, align 4
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 5, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %13 = bitcast %union.anon.1* %12 to i8*
  %14 = bitcast %struct.GrMockTextureInfo* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureD2Ev(%class.GrBackendTexture*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0
  tail call void @_ZN22GrGLBackendTextureInfo7cleanupEv(%class.GrGLBackendTextureInfo* %10) #13
  %11 = load i8, i8* %2, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %13, %5
  %16 = phi i32 [ %14, %13 ], [ %7, %5 ]
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %20 = bitcast %union.anon.1* %19 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %20) #13
  br label %21

21:                                               ; preds = %1, %9, %15, %18
  %22 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %23 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %22, align 8
  %24 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.GrBackendSurfaceMutableStateImpl* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.GrBackendSurfaceMutableStateImpl* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  tail call void %34(%class.SkRefCntBase* nonnull %30) #13
  br label %35

35:                                               ; preds = %21, %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTexture7cleanupEv(%class.GrBackendTexture*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0
  tail call void @_ZN22GrGLBackendTextureInfo7cleanupEv(%class.GrGLBackendTextureInfo* %10) #13
  %11 = load i8, i8* %2, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %5, %13
  %16 = phi i32 [ %14, %13 ], [ %7, %5 ]
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %20 = bitcast %union.anon.1* %19 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %20) #13
  br label %21

21:                                               ; preds = %9, %1, %18, %15
  ret void
}

declare void @_ZN22GrGLBackendTextureInfo7cleanupEv(%class.GrGLBackendTextureInfo*) local_unnamed_addr #8

declare void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTextureC2ERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %4, align 8
  %5 = tail call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %0, %class.GrBackendTexture* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* returned, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %26

9:                                                ; preds = %2
  br i1 %8, label %102, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0
  tail call void @_ZN22GrGLBackendTextureInfo7cleanupEv(%class.GrGLBackendTextureInfo* %15) #13
  %16 = load i8, i8* %6, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %102, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* %11, align 8
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %12, %10 ]
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %102

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %25 = bitcast %union.anon.1* %24 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %25) #13
  br label %102

26:                                               ; preds = %2
  br i1 %8, label %48, label %27

27:                                               ; preds = %26
  %28 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %27
  %34 = icmp eq i32 %29, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0
  tail call void @_ZN22GrGLBackendTextureInfo7cleanupEv(%class.GrGLBackendTextureInfo* %36) #13
  %37 = load i8, i8* %6, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = load i32, i32* %28, align 8
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i32 [ %40, %39 ], [ %29, %33 ]
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %46 = bitcast %union.anon.1* %45 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %46) #13
  br label %47

47:                                               ; preds = %35, %41, %44
  store i8 0, i8* %6, align 8
  br label %48

48:                                               ; preds = %27, %26, %47
  %49 = phi i8 [ 1, %27 ], [ 0, %26 ], [ 0, %47 ]
  %50 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 1
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 2
  store i32 %54, i32* %55, align 8
  %56 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 3
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 3
  store i8 %57, i8* %58, align 4
  %59 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  store i32 %60, i32* %61, align 8
  %62 = load i32, i32* %59, align 8
  switch i32 %62, label %78 [
    i32 0, label %63
    i32 1, label %67
    i32 5, label %73
  ]

63:                                               ; preds = %48
  %64 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0
  %65 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0
  %66 = icmp ne i8 %49, 0
  tail call void @_ZN22GrGLBackendTextureInfo6assignERKS_b(%class.GrGLBackendTextureInfo* %64, %class.GrGLBackendTextureInfo* dereferenceable(24) %65, i1 zeroext %66) #13
  br label %79

67:                                               ; preds = %48
  %68 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %69 = bitcast %union.anon.1* %68 to %struct.GrVkBackendSurfaceInfo*
  %70 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5
  %71 = bitcast %union.anon.1* %70 to %struct.GrVkBackendSurfaceInfo*
  %72 = icmp ne i8 %49, 0
  tail call void @_ZN22GrVkBackendSurfaceInfo6assignERKS_b(%struct.GrVkBackendSurfaceInfo* %69, %struct.GrVkBackendSurfaceInfo* dereferenceable(144) %71, i1 zeroext %72) #13
  br label %79

73:                                               ; preds = %48
  %74 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5
  %75 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %76 = bitcast %union.anon.1* %75 to i8*
  %77 = bitcast %union.anon.1* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 4 %77, i64 12, i1 false)
  br label %79

78:                                               ; preds = %48
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

79:                                               ; preds = %73, %67, %63
  %80 = icmp eq %class.GrBackendTexture* %0, %1
  br i1 %80, label %102, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 6, i32 0
  %83 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %82, align 8
  %84 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic
  br label %88

88:                                               ; preds = %85, %81
  %89 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %90 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %89, align 8
  store %class.GrBackendSurfaceMutableStateImpl* %83, %class.GrBackendSurfaceMutableStateImpl** %89, align 8
  %91 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.GrBackendSurfaceMutableStateImpl* %90 to %class.SkRefCntBase*
  %98 = bitcast %class.GrBackendSurfaceMutableStateImpl* %90 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  tail call void %101(%class.SkRefCntBase* nonnull %97) #13
  br label %102

102:                                              ; preds = %96, %92, %88, %79, %23, %20, %14, %9
  %103 = phi i8 [ 0, %9 ], [ 0, %14 ], [ 0, %20 ], [ 0, %23 ], [ 1, %79 ], [ 1, %88 ], [ 1, %92 ], [ 1, %96 ]
  store i8 %103, i8* %6, align 8
  ret %class.GrBackendTexture* %0
}

declare void @_ZN22GrGLBackendTextureInfo6assignERKS_b(%class.GrGLBackendTextureInfo*, %class.GrGLBackendTextureInfo* dereferenceable(24), i1 zeroext) local_unnamed_addr #8

declare void @_ZN22GrVkBackendSurfaceInfo6assignERKS_b(%struct.GrVkBackendSurfaceInfo*, %struct.GrVkBackendSurfaceInfo* dereferenceable(144), i1 zeroext) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp* noalias nocapture sret, %class.GrBackendTexture* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 6, i32 0
  %5 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %4, align 8
  %6 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.GrBackendSurfaceMutableStateImpl* %5, %class.GrBackendSurfaceMutableStateImpl** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture*, %struct.GrVkImageInfo* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %12) #13
  %13 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %14 = bitcast %union.anon.1* %13 to %struct.GrVkBackendSurfaceInfo*
  %15 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %16 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %15, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %3, %struct.GrVkBackendSurfaceInfo* %14, %class.GrBackendSurfaceMutableStateImpl* %16) #13
  %17 = bitcast %struct.GrVkImageInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %12, i64 140, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %12) #13
  br label %18

18:                                               ; preds = %2, %7, %11
  %19 = phi i1 [ true, %11 ], [ false, %7 ], [ false, %2 ]
  ret i1 %19
}

declare void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* sret, %struct.GrVkBackendSurfaceInfo*, %class.GrBackendSurfaceMutableStateImpl*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16GrBackendTexture16setVkImageLayoutE13VkImageLayout(%class.GrBackendTexture* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %12 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %11, align 8
  %13 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %13 seq_cst, align 4
  br label %14

14:                                               ; preds = %2, %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16GrBackendTexture16getGLTextureInfoEP15GrGLTextureInfo(%class.GrBackendTexture* nocapture readonly, %struct.GrGLTextureInfo* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %19 [
    i32 0, label %9
    i32 5, label %13
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0
  %11 = bitcast %struct.GrGLTextureInfo* %1 to i8*
  %12 = bitcast %struct.GrGLTextureInfo* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false)
  br label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %1, i64 0, i32 0
  store i32 3553, i32* %16, align 4
  %17 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %1, i64 0, i32 1
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %1, i64 0, i32 2
  store i32 32856, i32* %18, align 4
  br label %19

19:                                               ; preds = %6, %2, %13, %9
  %20 = phi i1 [ true, %9 ], [ true, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %20
}

declare void @_ZN21GrGLTextureParameters10invalidateEv(%class.GrGLTextureParameters*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16GrBackendTexture18getMockTextureInfoEP17GrMockTextureInfo(%class.GrBackendTexture* nocapture readonly, %struct.GrMockTextureInfo* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %12 = bitcast %struct.GrMockTextureInfo* %1 to i8*
  %13 = bitcast %union.anon.1* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 12, i1 false)
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBackendTexture15setMutableStateERK28GrBackendSurfaceMutableState(%class.GrBackendTexture* nocapture readonly, %class.GrBackendSurfaceMutableState* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %4 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %3, align 8
  %5 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %4, i64 0, i32 1
  %6 = tail call dereferenceable(16) %class.GrBackendSurfaceMutableState* @_ZN28GrBackendSurfaceMutableStateaSERKS_(%class.GrBackendSurfaceMutableState* %5, %class.GrBackendSurfaceMutableState* dereferenceable(16) %1) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 1, i64 60
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16GrBackendTexture13isSameTextureERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = alloca %struct.GrVkImageInfo, align 8
  %5 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %47

18:                                               ; preds = %12
  switch i32 %14, label %47 [
    i32 0, label %19
    i32 1, label %25
    i32 5, label %41
  ]

19:                                               ; preds = %18
  %20 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br label %47

25:                                               ; preds = %18
  %26 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %26) #13
  %27 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5
  %28 = bitcast %union.anon.1* %27 to %struct.GrVkBackendSurfaceInfo*
  %29 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 6, i32 0
  %30 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %29, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %3, %struct.GrVkBackendSurfaceInfo* %28, %class.GrBackendSurfaceMutableStateImpl* %30) #13
  %31 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 0
  %32 = load %struct.VkImage_T*, %struct.VkImage_T** %31, align 8
  %33 = bitcast %struct.GrVkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %33) #13
  %34 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5
  %35 = bitcast %union.anon.1* %34 to %struct.GrVkBackendSurfaceInfo*
  %36 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 6, i32 0
  %37 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %36, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %4, %struct.GrVkBackendSurfaceInfo* %35, %class.GrBackendSurfaceMutableStateImpl* %37) #13
  %38 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 0
  %39 = load %struct.VkImage_T*, %struct.VkImage_T** %38, align 8
  %40 = icmp eq %struct.VkImage_T* %32, %39
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %26) #13
  br label %47

41:                                               ; preds = %18
  %42 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br label %47

47:                                               ; preds = %8, %2, %18, %12, %41, %25, %19
  %48 = phi i1 [ %46, %41 ], [ %40, %25 ], [ %24, %19 ], [ false, %8 ], [ false, %2 ], [ false, %12 ], [ false, %18 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrBackendTexture*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  br label %73

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %69 [
    i32 0, label %14
    i32 1, label %28
    i32 5, label %66
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 0, i32* %19, align 8, !alias.scope !279
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %20, align 4, !alias.scope !279
  %21 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %16, i32* %21, align 8, !alias.scope !279
  %22 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %22, align 8, !alias.scope !279
  switch i32 %18, label %27 [
    i32 0, label %23
    i32 3553, label %24
    i32 34037, label %25
    i32 36197, label %26
  ]

23:                                               ; preds = %14
  store i32 0, i32* %22, align 8, !alias.scope !279
  br label %73

24:                                               ; preds = %14
  store i32 1, i32* %22, align 8, !alias.scope !279
  br label %73

25:                                               ; preds = %14
  store i32 2, i32* %22, align 8, !alias.scope !279
  br label %73

26:                                               ; preds = %14
  store i32 3, i32* %22, align 8, !alias.scope !279
  br label %73

27:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #12, !noalias !279
  unreachable

28:                                               ; preds = %11
  %29 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 144, i1 false)
  %30 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5
  %31 = bitcast %union.anon.1* %30 to %struct.GrVkBackendSurfaceInfo*
  %32 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 6, i32 0
  %33 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %32, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %3, %struct.GrVkBackendSurfaceInfo* %31, %class.GrBackendSurfaceMutableStateImpl* %33) #13
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11
  %35 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.GrVkYcbcrConversionInfo, %struct.GrVkYcbcrConversionInfo* %34, i64 0, i32 0
  %40 = load i32, i32* %39, align 8, !noalias !282
  %41 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %41, align 8, !alias.scope !282
  %42 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %42, align 4, !alias.scope !282
  %43 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %43, align 8, !alias.scope !282
  %44 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %40, i32* %44, align 8, !alias.scope !282
  %45 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %46 = bitcast %struct.GrVkYcbcrConversionInfo* %45 to i8*
  %47 = bitcast %struct.GrVkYcbcrConversionInfo* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 44, i1 false) #13
  %48 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 3
  %49 = load i32, i32* %48, align 8, !alias.scope !282
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 2
  %53 = load i64, i64* %52, align 8, !alias.scope !282
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  store i32 3, i32* %43, align 8, !alias.scope !282
  br label %65

56:                                               ; preds = %28
  %57 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %59, align 8, !alias.scope !285
  %60 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %60, align 4, !alias.scope !285
  %61 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %61, align 8, !alias.scope !285
  %62 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %58, i32* %62, align 8, !alias.scope !285
  %63 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %64 = bitcast i32* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 44, i1 false) #13, !alias.scope !285
  br label %65

65:                                               ; preds = %56, %55, %51, %38
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %29) #13
  br label %73

66:                                               ; preds = %11
  %67 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 5
  %68 = bitcast %union.anon.1* %67 to %struct.GrMockTextureInfo*
  tail call void @_ZNK17GrMockTextureInfo16getBackendFormatEv(%class.GrBackendFormat* sret %0, %struct.GrMockTextureInfo* %68) #13
  br label %73

69:                                               ; preds = %11
  %70 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %70, align 8
  %71 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %72, align 8
  br label %73

73:                                               ; preds = %26, %25, %24, %23, %69, %66, %65, %7
  ret void
}

declare void @_ZNK17GrMockTextureInfo16getBackendFormatEv(%class.GrBackendFormat* sret, %struct.GrMockTextureInfo*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21GrBackendRenderTargetC2Ev(%class.GrBackendRenderTarget* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2EiiiRK13GrVkImageInfo(%class.GrBackendRenderTarget* nocapture, i32, i32, i32, %struct.GrVkImageInfo* nocapture readonly dereferenceable(144)) unnamed_addr #0 align 2 {
  %6 = alloca [60 x i8], align 8
  %7 = alloca <{ i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>, align 4
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8)
  %9 = getelementptr inbounds <{ i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>, <{ i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %9)
  %10 = bitcast %struct.GrVkImageInfo* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %10, i64 60, i1 false)
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 8
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %22, i64 60, i1 false)
  %23 = load i32, i32* %17, align 8, !noalias !288
  %24 = icmp ult i32 %23, %3
  %25 = select i1 %24, i32 %3, i32 %23
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 1, i32 %25
  %28 = tail call i8* @_Znwm(i64 32) #14
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4
  %31 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV32GrBackendSurfaceMutableStateImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 12
  %33 = bitcast i8* %32 to i32*
  store i32 %12, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %28, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %21, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %28, i64 20
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %28, i64 24
  store i8 1, i8* %38, align 4
  %39 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %1, i32* %41, align 4
  %42 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %2, i32* %42, align 8
  %43 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  %44 = icmp ugt i32 %27, 1
  %45 = select i1 %44, i32 %27, i32 1
  store i32 %45, i32* %43, align 4
  %46 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  store i32 1, i32* %47, align 4
  %48 = icmp eq i32 %16, 0
  %49 = select i1 %48, i32 19, i32 %16
  %50 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %51 = bitcast %union.anon.14* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %8, i64 60, i1 false)
  %52 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 52
  %53 = bitcast i8* %52 to i32*
  store i32 %12, i32* %53, align 4
  %54 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 56
  %55 = bitcast i8* %54 to i32*
  store i32 %14, i32* %55, align 8
  %56 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 60
  %57 = bitcast i8* %56 to i32*
  store i32 %49, i32* %57, align 4
  %58 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 64
  %59 = bitcast i8* %58 to i32*
  store i32 %27, i32* %59, align 8
  %60 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 68
  %61 = bitcast i8* %60 to i32*
  store i32 %19, i32* %61, align 4
  %62 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 72
  %63 = bitcast i8* %62 to i32*
  store i32 %21, i32* %63, align 8
  %64 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 76
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 4 %9, i64 60, i1 false)
  %65 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %66 = atomicrmw add i32* %30, i32 1 monotonic
  %67 = bitcast %class.GrBackendSurfaceMutableStateImpl** %65 to i8**
  store i8* %28, i8** %67, align 8
  %68 = atomicrmw add i32* %30, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %5
  %71 = bitcast i8* %28 to %class.SkRefCntBase*
  %72 = bitcast i8* %28 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  tail call void %75(%class.SkRefCntBase* nonnull %71) #13
  br label %76

76:                                               ; preds = %5, %70
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2EiiRK13GrVkImageInfo(%class.GrBackendRenderTarget* nocapture, i32, i32, %struct.GrVkImageInfo* nocapture readonly dereferenceable(144)) unnamed_addr #0 align 2 {
  %5 = alloca [72 x i8], align 8
  %6 = tail call i8* @_Znwm(i64 32) #14
  %7 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV32GrBackendSurfaceMutableStateImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %8, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %10, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %6, i64 20
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds [72 x i8], [72 x i8]* %5, i64 0, i64 0
  %22 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %1, i32* %24, align 4
  %25 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %2, i32* %25, align 8
  %26 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  %27 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, 1
  %30 = select i1 %29, i32 %28, i32 1
  store i32 %30, i32* %26, align 4
  %31 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 5
  %35 = load i32, i32* %34, align 4, !noalias !291
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %struct.GrVkImageInfo* %3 to i8*
  %38 = bitcast i32* %27 to i8*
  %39 = select i1 %36, i32 19, i32 %35
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 72, i1 false) #13
  %40 = bitcast %union.anon.14* %33 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %37, i64 68, i1 false) #13
  %41 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 60
  %42 = bitcast i8* %41 to i32*
  store i32 %39, i32* %42, align 4
  %43 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %21, i64 72, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21)
  %44 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %45 = atomicrmw add i32* %12, i32 1 monotonic
  %46 = bitcast %class.GrBackendSurfaceMutableStateImpl** %44 to i8**
  store i8* %6, i8** %46, align 8
  %47 = atomicrmw add i32* %12, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %4
  %50 = bitcast i8* %6 to %class.SkRefCntBase*
  %51 = bitcast i8* %6 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  tail call void %54(%class.SkRefCntBase* nonnull %50) #13
  br label %55

55:                                               ; preds = %4, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.GrBackendRenderTarget* nocapture, i32, i32, %struct.GrVkImageInfo* nocapture readonly dereferenceable(144), %class.sk_sp* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca [72 x i8], align 8
  %7 = getelementptr inbounds [72 x i8], [72 x i8]* %6, i64 0, i64 0
  %8 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, 1
  %16 = select i1 %15, i32 %14, i32 1
  store i32 %16, i32* %12, align 4
  %17 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 5
  %21 = load i32, i32* %20, align 4, !noalias !294
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %struct.GrVkImageInfo* %3 to i8*
  %24 = bitcast i32* %13 to i8*
  %25 = select i1 %22, i32 19, i32 %21
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %24, i64 72, i1 false)
  %26 = bitcast %union.anon.14* %19 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %23, i64 68, i1 false)
  %27 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 60
  %28 = bitcast i8* %27 to i32*
  store i32 %25, i32* %28, align 4
  %29 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %7, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7)
  %30 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %32 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %31, align 8
  %33 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %5
  %35 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %5, %34
  store %class.GrBackendSurfaceMutableStateImpl* %32, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2EiiiiRK19GrGLFramebufferInfo(%class.GrBackendRenderTarget* nocapture, i32, i32, i32, i32, %struct.GrGLFramebufferInfo* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  %11 = icmp sgt i32 %3, 1
  %12 = select i1 %11, i32 %3, i32 1
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 %4, i32* %13, align 8
  %14 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 0
  %16 = bitcast %struct.GrGLFramebufferInfo* %5 to i64*
  %17 = bitcast %struct.GrGLFramebufferInfo* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %19, align 8
  %20 = getelementptr inbounds %struct.GrGLFramebufferInfo, %struct.GrGLFramebufferInfo* %5, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2EiiiiRK22GrMockRenderTargetInfo(%class.GrBackendRenderTarget* nocapture, i32, i32, i32, i32, %struct.GrMockRenderTargetInfo* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  %12 = icmp sgt i32 %3, 1
  %13 = select i1 %12, i32 %3, i32 1
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 %4, i32* %14, align 8
  %15 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %16 = bitcast %struct.GrMockRenderTargetInfo* %5 to i64*
  %17 = bitcast %union.anon.14* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetD2Ev(%class.GrBackendRenderTarget*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %11 = bitcast %union.anon.14* %10 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %11) #13
  br label %12

12:                                               ; preds = %1, %5, %9
  %13 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %14 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %13, align 8
  %15 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.GrBackendSurfaceMutableStateImpl* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.GrBackendSurfaceMutableStateImpl* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #13
  br label %26

26:                                               ; preds = %12, %16, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTarget7cleanupEv(%class.GrBackendRenderTarget*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %11 = bitcast %union.anon.14* %10 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %11) #13
  br label %12

12:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTargetC2ERKS_(%class.GrBackendRenderTarget*, %class.GrBackendRenderTarget* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %5, align 8
  %6 = tail call dereferenceable(176) %class.GrBackendRenderTarget* @_ZN21GrBackendRenderTargetaSERKS_(%class.GrBackendRenderTarget* %0, %class.GrBackendRenderTarget* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(176) %class.GrBackendRenderTarget* @_ZN21GrBackendRenderTargetaSERKS_(%class.GrBackendRenderTarget* returned, %class.GrBackendRenderTarget* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %17

9:                                                ; preds = %2
  br i1 %8, label %92, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %92

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %16 = bitcast %union.anon.14* %15 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %16) #13
  br label %92

17:                                               ; preds = %2
  br i1 %8, label %30, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = icmp eq i32 %20, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %28 = bitcast %union.anon.14* %27 to %struct.GrVkBackendSurfaceInfo*
  tail call void @_ZN22GrVkBackendSurfaceInfo7cleanupEv(%struct.GrVkBackendSurfaceInfo* %28) #13
  br label %29

29:                                               ; preds = %24, %26
  store i8 0, i8* %6, align 8
  br label %30

30:                                               ; preds = %18, %17, %29
  %31 = phi i8 [ 1, %18 ], [ 0, %17 ], [ 0, %29 ]
  %32 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 3
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 4
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 5
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 6
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  store i32 %45, i32* %46, align 4
  %47 = load i32, i32* %44, align 4
  switch i32 %47, label %66 [
    i32 0, label %48
    i32 1, label %54
    i32 5, label %60
  ]

48:                                               ; preds = %30
  %49 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7, i32 0
  %50 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 0
  %51 = bitcast %struct.GrGLFramebufferInfo* %49 to i64*
  %52 = bitcast %struct.GrGLFramebufferInfo* %50 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 8
  br label %67

54:                                               ; preds = %30
  %55 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %56 = bitcast %union.anon.14* %55 to %struct.GrVkBackendSurfaceInfo*
  %57 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7
  %58 = bitcast %union.anon.14* %57 to %struct.GrVkBackendSurfaceInfo*
  %59 = icmp ne i8 %31, 0
  tail call void @_ZN22GrVkBackendSurfaceInfo6assignERKS_b(%struct.GrVkBackendSurfaceInfo* %56, %struct.GrVkBackendSurfaceInfo* dereferenceable(144) %58, i1 zeroext %59) #13
  br label %67

60:                                               ; preds = %30
  %61 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7
  %62 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %63 = bitcast %union.anon.14* %61 to i64*
  %64 = bitcast %union.anon.14* %62 to i64*
  %65 = load i64, i64* %63, align 4
  store i64 %65, i64* %64, align 8
  br label %67

66:                                               ; preds = %30
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 1085, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

67:                                               ; preds = %60, %54, %48
  %68 = icmp eq %class.GrBackendRenderTarget* %0, %1
  br i1 %68, label %90, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 8, i32 0
  %71 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %70, align 8
  %72 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %73, %69
  %77 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %78 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %77, align 8
  store %class.GrBackendSurfaceMutableStateImpl* %71, %class.GrBackendSurfaceMutableStateImpl** %77, align 8
  %79 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.GrBackendSurfaceMutableStateImpl* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.GrBackendSurfaceMutableStateImpl* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  tail call void %89(%class.SkRefCntBase* nonnull %85) #13
  br label %90

90:                                               ; preds = %67, %76, %80, %84
  %91 = load i8, i8* %3, align 8, !range !2
  br label %92

92:                                               ; preds = %14, %10, %9, %90
  %93 = phi i8 [ %91, %90 ], [ 0, %9 ], [ 0, %10 ], [ 0, %14 ]
  store i8 %93, i8* %6, align 8
  ret %class.GrBackendRenderTarget* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK21GrBackendRenderTarget15getMutableStateEv(%class.sk_sp* noalias nocapture sret, %class.GrBackendRenderTarget* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 8, i32 0
  %5 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %4, align 8
  %6 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.GrBackendSurfaceMutableStateImpl* %5, %class.GrBackendSurfaceMutableStateImpl** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget*, %struct.GrVkImageInfo* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %12) #13
  %13 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %14 = bitcast %union.anon.14* %13 to %struct.GrVkBackendSurfaceInfo*
  %15 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %16 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %15, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %3, %struct.GrVkBackendSurfaceInfo* %14, %class.GrBackendSurfaceMutableStateImpl* %16) #13
  %17 = bitcast %struct.GrVkImageInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %12, i64 140, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %12) #13
  br label %18

18:                                               ; preds = %2, %7, %11
  %19 = phi i1 [ true, %11 ], [ false, %7 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTarget16setVkImageLayoutE13VkImageLayout(%class.GrBackendRenderTarget* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %12 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %11, align 8
  %13 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %13 seq_cst, align 4
  br label %14

14:                                               ; preds = %2, %10, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21GrBackendRenderTarget20getGLFramebufferInfoEP19GrGLFramebufferInfo(%class.GrBackendRenderTarget* nocapture readonly, %struct.GrGLFramebufferInfo* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 0
  %12 = bitcast %struct.GrGLFramebufferInfo* %11 to i64*
  %13 = bitcast %struct.GrGLFramebufferInfo* %1 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  br label %15

15:                                               ; preds = %2, %6, %10
  %16 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrBackendRenderTarget*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  br label %66

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %62 [
    i32 0, label %14
    i32 1, label %21
    i32 5, label %59
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 0, i32* %17, align 8, !alias.scope !297
  %18 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %18, align 4, !alias.scope !297
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %16, i32* %19, align 8, !alias.scope !297
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %20, align 8, !alias.scope !297
  br label %66

21:                                               ; preds = %11
  %22 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 144, i1 false)
  %23 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7
  %24 = bitcast %union.anon.14* %23 to %struct.GrVkBackendSurfaceInfo*
  %25 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 8, i32 0
  %26 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %25, align 8
  call void @_ZNK22GrVkBackendSurfaceInfo13snapImageInfoEPK32GrBackendSurfaceMutableStateImpl(%struct.GrVkImageInfo* nonnull sret %3, %struct.GrVkBackendSurfaceInfo* %24, %class.GrBackendSurfaceMutableStateImpl* %26) #13
  %27 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11
  %28 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.GrVkYcbcrConversionInfo, %struct.GrVkYcbcrConversionInfo* %27, i64 0, i32 0
  %33 = load i32, i32* %32, align 8, !noalias !300
  %34 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %34, align 8, !alias.scope !300
  %35 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %35, align 4, !alias.scope !300
  %36 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %36, align 8, !alias.scope !300
  %37 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %33, i32* %37, align 8, !alias.scope !300
  %38 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2
  %39 = bitcast %struct.GrVkYcbcrConversionInfo* %38 to i8*
  %40 = bitcast %struct.GrVkYcbcrConversionInfo* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 44, i1 false) #13
  %41 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 3
  %42 = load i32, i32* %41, align 8, !alias.scope !300
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %31
  %45 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 2
  %46 = load i64, i64* %45, align 8, !alias.scope !300
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  store i32 3, i32* %36, align 8, !alias.scope !300
  br label %58

49:                                               ; preds = %21
  %50 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 1, i32* %52, align 8, !alias.scope !303
  %53 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 1, i8* %53, align 4, !alias.scope !303
  %54 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 1, i32* %54, align 8, !alias.scope !303
  %55 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %51, i32* %55, align 8, !alias.scope !303
  %56 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %57 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 44, i1 false) #13, !alias.scope !303
  br label %58

58:                                               ; preds = %49, %48, %44, %31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %22) #13
  br label %66

59:                                               ; preds = %11
  %60 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 7
  %61 = bitcast %union.anon.14* %60 to %struct.GrMockRenderTargetInfo*
  tail call void @_ZNK22GrMockRenderTargetInfo16getBackendFormatEv(%class.GrBackendFormat* sret %0, %struct.GrMockRenderTargetInfo* %61) #13
  br label %66

62:                                               ; preds = %11
  %63 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %63, align 8
  %64 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %65, align 8
  br label %66

66:                                               ; preds = %62, %59, %58, %14, %7
  ret void
}

declare void @_ZNK22GrMockRenderTargetInfo16getBackendFormatEv(%class.GrBackendFormat* sret, %struct.GrMockRenderTargetInfo*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21GrBackendRenderTarget23getMockRenderTargetInfoEP22GrMockRenderTargetInfo(%class.GrBackendRenderTarget* nocapture readonly, %struct.GrMockRenderTargetInfo* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7
  %12 = bitcast %union.anon.14* %11 to i64*
  %13 = bitcast %struct.GrMockRenderTargetInfo* %1 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  br label %15

15:                                               ; preds = %2, %6, %10
  %16 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrBackendRenderTarget15setMutableStateERK28GrBackendSurfaceMutableState(%class.GrBackendRenderTarget* nocapture readonly, %class.GrBackendSurfaceMutableState* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 8, i32 0
  %4 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %3, align 8
  %5 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %4, i64 0, i32 1
  %6 = tail call dereferenceable(16) %class.GrBackendSurfaceMutableState* @_ZN28GrBackendSurfaceMutableStateaSERKS_(%class.GrBackendSurfaceMutableState* %5, %class.GrBackendSurfaceMutableState* dereferenceable(16) %1) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK21GrBackendRenderTarget11isProtectedEv(%class.GrBackendRenderTarget* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %0, i64 0, i32 7, i32 1, i64 76
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN32GrBackendSurfaceMutableStateImplD0Ev(%class.GrBackendSurfaceMutableStateImpl*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %class.GrBackendSurfaceMutableStateImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare dereferenceable(16) %class.GrBackendSurfaceMutableState* @_ZN28GrBackendSurfaceMutableStateaSERKS_(%class.GrBackendSurfaceMutableState*, %class.GrBackendSurfaceMutableState* dereferenceable(16)) local_unnamed_addr #8

declare void @_ZN21GrGLTextureParameters22SamplerOverriddenStateC1Ev(%"struct.GrGLTextureParameters::SamplerOverriddenState"*) unnamed_addr #8

declare void @_ZN21GrGLTextureParameters15NonsamplerStateC1Ev(%"struct.GrGLTextureParameters::NonsamplerState"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!5 = distinct !{!5, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!8 = distinct !{!8, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!9 = distinct !{!9, !10, !"_ZL14GrGLFormatDesc10GrGLFormat: argument 0"}
!10 = distinct !{!10, !"_ZL14GrGLFormatDesc10GrGLFormat"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!13 = distinct !{!13, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!14 = !{!15, !9}
!15 = distinct !{!15, !16, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!16 = distinct !{!16, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!17 = !{!9}
!18 = !{!19, !9}
!19 = distinct !{!19, !20, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!20 = distinct !{!20, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!21 = !{!22, !9}
!22 = distinct !{!22, !23, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding: argument 0"}
!23 = distinct !{!23, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding"}
!24 = !{!25, !9}
!25 = distinct !{!25, !26, !"_ZN17GrColorFormatDesc13MakeGrayAlphaEi19GrColorTypeEncoding: argument 0"}
!26 = distinct !{!26, !"_ZN17GrColorFormatDesc13MakeGrayAlphaEi19GrColorTypeEncoding"}
!27 = !{!28, !9}
!28 = distinct !{!28, !29, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!29 = distinct !{!29, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!30 = !{!31, !9}
!31 = distinct !{!31, !32, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding: argument 0"}
!32 = distinct !{!32, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding"}
!33 = !{!34, !9}
!34 = distinct !{!34, !35, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!35 = distinct !{!35, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!36 = !{!37, !9}
!37 = distinct !{!37, !38, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!38 = distinct !{!38, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!39 = !{!40, !9}
!40 = distinct !{!40, !41, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding: argument 0"}
!41 = distinct !{!41, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding"}
!42 = !{!43, !9}
!43 = distinct !{!43, !44, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!44 = distinct !{!44, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!45 = !{!46, !9}
!46 = distinct !{!46, !47, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding: argument 0"}
!47 = distinct !{!47, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding"}
!48 = !{!49, !9}
!49 = distinct !{!49, !50, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!50 = distinct !{!50, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!51 = !{!52, !9}
!52 = distinct !{!52, !53, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!53 = distinct !{!53, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!54 = !{!55, !9}
!55 = distinct !{!55, !56, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!56 = distinct !{!56, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!57 = !{!58, !9}
!58 = distinct !{!58, !59, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!59 = distinct !{!59, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!60 = !{!61, !9}
!61 = distinct !{!61, !62, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!62 = distinct !{!62, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!63 = !{!64, !9}
!64 = distinct !{!64, !65, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!65 = distinct !{!65, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!66 = !{!67, !9}
!67 = distinct !{!67, !68, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding: argument 0"}
!68 = distinct !{!68, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding"}
!69 = !{!70, !9}
!70 = distinct !{!70, !71, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!71 = distinct !{!71, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!72 = !{!73, !9}
!73 = distinct !{!73, !74, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!74 = distinct !{!74, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!75 = !{!76, !9}
!76 = distinct !{!76, !77, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!77 = distinct !{!77, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!78 = !{!79, !9}
!79 = distinct !{!79, !80, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!80 = distinct !{!80, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!81 = !{!82, !9}
!82 = distinct !{!82, !83, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!83 = distinct !{!83, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!84 = !{!85, !9}
!85 = distinct !{!85, !86, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!86 = distinct !{!86, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!87 = !{!88, !9}
!88 = distinct !{!88, !89, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!89 = distinct !{!89, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!90 = !{!91, !93}
!91 = distinct !{!91, !92, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!92 = distinct !{!92, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!93 = distinct !{!93, !94, !"_ZL14GrVkFormatDesc8VkFormat: argument 0"}
!94 = distinct !{!94, !"_ZL14GrVkFormatDesc8VkFormat"}
!95 = !{!96, !93}
!96 = distinct !{!96, !97, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!97 = distinct !{!97, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!98 = !{!93}
!99 = !{!100, !93}
!100 = distinct !{!100, !101, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!101 = distinct !{!101, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!102 = !{!103, !93}
!103 = distinct !{!103, !104, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding: argument 0"}
!104 = distinct !{!104, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding"}
!105 = !{!106, !93}
!106 = distinct !{!106, !107, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!107 = distinct !{!107, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!108 = !{!109, !93}
!109 = distinct !{!109, !110, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!110 = distinct !{!110, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!111 = !{!112, !93}
!112 = distinct !{!112, !113, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding: argument 0"}
!113 = distinct !{!113, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding"}
!114 = !{!115, !93}
!115 = distinct !{!115, !116, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!116 = distinct !{!116, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!117 = !{!118, !93}
!118 = distinct !{!118, !119, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding: argument 0"}
!119 = distinct !{!119, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding"}
!120 = !{!121, !93}
!121 = distinct !{!121, !122, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding: argument 0"}
!122 = distinct !{!122, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding"}
!123 = !{!124, !93}
!124 = distinct !{!124, !125, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!125 = distinct !{!125, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!126 = !{!127, !93}
!127 = distinct !{!127, !128, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!128 = distinct !{!128, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!129 = !{!130, !93}
!130 = distinct !{!130, !131, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!131 = distinct !{!131, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!132 = !{!133, !93}
!133 = distinct !{!133, !134, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!134 = distinct !{!134, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!135 = !{!136, !93}
!136 = distinct !{!136, !137, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!137 = distinct !{!137, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!138 = !{!139, !93}
!139 = distinct !{!139, !140, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!140 = distinct !{!140, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!141 = !{!142, !93}
!142 = distinct !{!142, !143, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!143 = distinct !{!143, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!144 = !{!145, !93}
!145 = distinct !{!145, !146, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!146 = distinct !{!146, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!147 = !{!148, !93}
!148 = distinct !{!148, !149, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!149 = distinct !{!149, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!150 = !{!151, !93}
!151 = distinct !{!151, !152, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!152 = distinct !{!152, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!153 = !{!154, !93}
!154 = distinct !{!154, !155, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!155 = distinct !{!155, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!156 = !{!157, !93}
!157 = distinct !{!157, !158, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!158 = distinct !{!158, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!159 = !{!160, !93}
!160 = distinct !{!160, !161, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!161 = distinct !{!161, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!162 = !{!163, !93}
!163 = distinct !{!163, !164, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!164 = distinct !{!164, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!165 = !{!166, !168}
!166 = distinct !{!166, !167, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!167 = distinct !{!167, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!168 = distinct !{!168, !169, !"_ZL18GrGetColorTypeDesc11GrColorType: argument 0"}
!169 = distinct !{!169, !"_ZL18GrGetColorTypeDesc11GrColorType"}
!170 = !{!171, !168}
!171 = distinct !{!171, !172, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!172 = distinct !{!172, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!173 = !{!174, !168}
!174 = distinct !{!174, !175, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding: argument 0"}
!175 = distinct !{!175, !"_ZN17GrColorFormatDesc7MakeRGBEiii19GrColorTypeEncoding"}
!176 = !{!177, !168}
!177 = distinct !{!177, !178, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!178 = distinct !{!178, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!179 = !{!180, !168}
!180 = distinct !{!180, !181, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!181 = distinct !{!181, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!182 = !{!183, !168}
!183 = distinct !{!183, !184, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!184 = distinct !{!184, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!185 = !{!186, !168}
!186 = distinct !{!186, !187, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding: argument 0"}
!187 = distinct !{!187, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding"}
!188 = !{!189, !168}
!189 = distinct !{!189, !190, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!190 = distinct !{!190, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!191 = !{!168}
!192 = !{!193, !168}
!193 = distinct !{!193, !194, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!194 = distinct !{!194, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!195 = !{!196, !168}
!196 = distinct !{!196, !197, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding: argument 0"}
!197 = distinct !{!197, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding"}
!198 = !{!199, !168}
!199 = distinct !{!199, !200, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding: argument 0"}
!200 = distinct !{!200, !"_ZN17GrColorFormatDesc8MakeRGBAEii19GrColorTypeEncoding"}
!201 = !{!202, !168}
!202 = distinct !{!202, !203, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding: argument 0"}
!203 = distinct !{!203, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding"}
!204 = !{!205, !168}
!205 = distinct !{!205, !206, !"_ZN17GrColorFormatDesc13MakeGrayAlphaEi19GrColorTypeEncoding: argument 0"}
!206 = distinct !{!206, !"_ZN17GrColorFormatDesc13MakeGrayAlphaEi19GrColorTypeEncoding"}
!207 = !{!208, !168}
!208 = distinct !{!208, !209, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!209 = distinct !{!209, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!210 = !{!211, !168}
!211 = distinct !{!211, !212, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!212 = distinct !{!212, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!213 = !{!214, !168}
!214 = distinct !{!214, !215, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!215 = distinct !{!215, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!216 = !{!217, !168}
!217 = distinct !{!217, !218, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!218 = distinct !{!218, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!219 = !{!220, !168}
!220 = distinct !{!220, !221, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!221 = distinct !{!221, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!222 = !{!223, !168}
!223 = distinct !{!223, !224, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!224 = distinct !{!224, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!225 = !{!226, !168}
!226 = distinct !{!226, !227, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding: argument 0"}
!227 = distinct !{!227, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding"}
!228 = !{!229, !168}
!229 = distinct !{!229, !230, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding: argument 0"}
!230 = distinct !{!230, !"_ZN17GrColorFormatDesc9MakeAlphaEi19GrColorTypeEncoding"}
!231 = !{!232, !168}
!232 = distinct !{!232, !233, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!233 = distinct !{!233, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!234 = !{!235, !168}
!235 = distinct !{!235, !236, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!236 = distinct !{!236, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!237 = !{!238, !168}
!238 = distinct !{!238, !239, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding: argument 0"}
!239 = distinct !{!239, !"_ZN17GrColorFormatDesc6MakeRGEi19GrColorTypeEncoding"}
!240 = !{!241, !168}
!241 = distinct !{!241, !242, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding: argument 0"}
!242 = distinct !{!242, !"_ZN17GrColorFormatDesc7MakeRGBEi19GrColorTypeEncoding"}
!243 = !{!244, !168}
!244 = distinct !{!244, !245, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!245 = distinct !{!245, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!246 = !{!247, !168}
!247 = distinct !{!247, !248, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!248 = distinct !{!248, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!249 = !{!250, !168}
!250 = distinct !{!250, !251, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding: argument 0"}
!251 = distinct !{!251, !"_ZN17GrColorFormatDesc5MakeREi19GrColorTypeEncoding"}
!252 = !{!253, !168}
!253 = distinct !{!253, !254, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding: argument 0"}
!254 = distinct !{!254, !"_ZN17GrColorFormatDesc8MakeGrayEi19GrColorTypeEncoding"}
!255 = !{!256, !168}
!256 = distinct !{!256, !257, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!257 = distinct !{!257, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!258 = !{!259, !168}
!259 = distinct !{!259, !260, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding: argument 0"}
!260 = distinct !{!260, !"_ZN17GrColorFormatDesc8MakeRGBAEi19GrColorTypeEncoding"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZN17GrColorFormatDesc11MakeInvalidEv: argument 0"}
!263 = distinct !{!263, !"_ZN17GrColorFormatDesc11MakeInvalidEv"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj: argument 0"}
!266 = distinct !{!266, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj: argument 0"}
!269 = distinct !{!269, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZNK22GrGLBackendTextureInfo13refParametersEv: argument 0"}
!272 = distinct !{!272, !"_ZNK22GrGLBackendTextureInfo13refParametersEv"}
!273 = !{!274, !271}
!274 = distinct !{!274, !275, !"_Z9sk_ref_spI21GrGLTextureParametersE5sk_spIT_EPS2_: argument 0"}
!275 = distinct !{!275, !"_Z9sk_ref_spI21GrGLTextureParametersE5sk_spIT_EPS2_"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_Z10sk_make_spI21GrGLTextureParametersJEE5sk_spIT_EDpOT0_: argument 0"}
!278 = distinct !{!278, !"_Z10sk_make_spI21GrGLTextureParametersJEE5sk_spIT_EDpOT0_"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN15GrBackendFormat6MakeGLEjj: argument 0"}
!281 = distinct !{!281, !"_ZN15GrBackendFormat6MakeGLEjj"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo: argument 0"}
!284 = distinct !{!284, !"_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!287 = distinct !{!287, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZL25resolve_vkii_sample_countRK13GrVkImageInfoi: argument 0"}
!290 = distinct !{!290, !"_ZL25resolve_vkii_sample_countRK13GrVkImageInfoi"}
!291 = !{!292}
!292 = distinct !{!292, !293, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj: argument 0"}
!293 = distinct !{!293, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj"}
!294 = !{!295}
!295 = distinct !{!295, !296, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj: argument 0"}
!296 = distinct !{!296, !"_ZL25apply_default_usage_flagsRK13GrVkImageInfoj"}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN15GrBackendFormat6MakeGLEjj: argument 0"}
!299 = distinct !{!299, !"_ZN15GrBackendFormat6MakeGLEjj"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo: argument 0"}
!302 = distinct !{!302, !"_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!305 = distinct !{!305, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
