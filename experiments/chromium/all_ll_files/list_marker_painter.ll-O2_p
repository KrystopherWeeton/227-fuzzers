; ModuleID = '../../third_party/blink/renderer/core/paint/list_marker_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/list_marker_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1722", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1802", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1647, %class.scoped_refptr.1647, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1702", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1707", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1647 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1648", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1655" }
%"class.WTF::RefCounted.1648" = type { %"class.base::RefCounted.1649" }
%"class.base::RefCounted.1649" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1650", i32, [4 x i8] }>
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1658", %"class.std::__1::unique_ptr.1674", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.785, %class.scoped_refptr.837, %class.scoped_refptr.836 }
%class.scoped_refptr.785 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.783", i8, i8, %class.scoped_refptr.785, i32, i32 }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.837 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.874" }
%"class.blink::PaintPropertyNode.874" = type { %"class.WTF::RefCounted.875", i8, i8, %class.scoped_refptr.837, i32, i32 }
%"class.WTF::RefCounted.875" = type { %"class.base::RefCounted.876" }
%"class.base::RefCounted.876" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.836 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.833" }
%"class.blink::PaintPropertyNode.833" = type { %"class.WTF::RefCounted.834", i8, i8, %class.scoped_refptr.836, i32, i32 }
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1661", %"class.WTF::Vector.1666", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1661" = type { %"class.WTF::VectorBuffer.1662" }
%"class.WTF::VectorBuffer.1662" = type { %"class.WTF::VectorBufferBase.1663" }
%"class.WTF::VectorBufferBase.1663" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668" }
%"class.WTF::VectorBufferBase.1668" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.799" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.792, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.793", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.786" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.792 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.818", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.818" = type { %"class.WTF::RefCounted.819", i8, i8, %class.scoped_refptr.792, i32, i32 }
%"class.WTF::RefCounted.819" = type { %"class.base::RefCounted.820" }
%"class.base::RefCounted.820" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.821" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.826" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.808", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1677", %"class.absl::optional.1677" }
%"class.absl::optional.1677" = type { %"class.absl::optional_internal::optional_data.1678" }
%"class.absl::optional_internal::optional_data.1678" = type { %"class.absl::optional_internal::optional_data_base.1679" }
%"class.absl::optional_internal::optional_data_base.1679" = type { %"class.absl::optional_internal::optional_data_dtor_base.1680" }
%"class.absl::optional_internal::optional_data_dtor_base.1680" = type { i8, [3 x i8], %union.anon.1681 }
%union.anon.1681 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1655"*, %"class.absl::optional.1687", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1687" = type { %"class.absl::optional_internal::optional_data.1688" }
%"class.absl::optional_internal::optional_data.1688" = type { %"class.absl::optional_internal::optional_data_base.1689" }
%"class.absl::optional_internal::optional_data_base.1689" = type { %"class.absl::optional_internal::optional_data_dtor_base.1690" }
%"class.absl::optional_internal::optional_data_dtor_base.1690" = type { i8, %union.anon.1691 }
%union.anon.1691 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1692", %"class.WTF::Vector.1697" }
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694", [128 x i8] }
%"class.WTF::VectorBufferBase.1694" = type { i32*, i32, i32 }
%"class.WTF::Vector.1697" = type { %"class.WTF::VectorBuffer.1698" }
%"class.WTF::VectorBuffer.1698" = type { %"class.WTF::VectorBufferBase.1699", [128 x i8] }
%"class.WTF::VectorBufferBase.1699" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704" }
%"class.WTF::VectorBufferBase.1704" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1707" = type { %"class.WTF::HashTable.1708" }
%"class.WTF::HashTable.1708" = type <{ %"struct.WTF::KeyValuePair.1711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1711" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1712", %"class.WTF::Vector.1717" }
%"class.WTF::HashMap.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %"struct.WTF::KeyValuePair.1716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1716" = type opaque
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.1719" }
%"class.WTF::VectorBufferBase.1719" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"class.std::__1::unique_ptr.1725"*, i32, i32 }
%"class.std::__1::unique_ptr.1725" = type { %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.1727" }
%"struct.std::__1::__compressed_pair_elem.1727" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1728, %class.sk_sp.1729, %class.sk_sp.1767, %class.sk_sp.1768, %class.sk_sp.1769, %class.sk_sp.840, i32, float, float, i32, %union.anon.1770, [4 x i8] }>
%class.sk_sp.1728 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.sk_sp.1729 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1730", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1738, i32, %"class.absl::optional.1754", %"class.std::__1::vector.865", %"class.std::__1::vector.1759", %class.sk_sp.1766, %class.sk_sp.1735, i32, [4 x i8] }>
%"class.absl::optional.1730" = type { %"class.absl::optional_internal::optional_data.1731" }
%"class.absl::optional_internal::optional_data.1731" = type { %"class.absl::optional_internal::optional_data_base.1732" }
%"class.absl::optional_internal::optional_data_base.1732" = type { %"class.absl::optional_internal::optional_data_dtor_base.1733" }
%"class.absl::optional_internal::optional_data_dtor_base.1733" = type { i8, %union.anon.1734 }
%union.anon.1734 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.1735, %class.sk_sp.1738, %"class.gfx::Rect", i32, %class.sk_sp.1743, %class.sk_sp.1751, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1735, %class.scoped_refptr.1752 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.1743 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1744" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1736, i32, i32 }
%class.sk_sp.1736 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1737, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1737 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1744" = type { %"class.std::__1::__vector_base.1745" }
%"class.std::__1::__vector_base.1745" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1746" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.1746" = type { %"struct.std::__1::__compressed_pair_elem.1747" }
%"struct.std::__1::__compressed_pair_elem.1747" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1751 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1752 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1753", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1753" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%class.sk_sp.1738 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1739", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1739" = type { %"class.std::__1::__compressed_pair.1740" }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { i8* }
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, %union.anon.1758 }
%union.anon.1758 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.std::__1::vector.1759" = type { %"class.std::__1::__vector_base.1760" }
%"class.std::__1::__vector_base.1760" = type { float*, float*, %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { float* }
%class.sk_sp.1766 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%class.sk_sp.1735 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1767 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1768 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1769 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.840 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.841, i32, %"class.absl::optional.842", i8, i32 }
%class.sk_sp.841 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, %union.anon.846 }
%union.anon.846 = type { %struct.SkRect }
%union.anon.1770 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1728 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1776, %"class.std::__1::unique_ptr.1777" }
%class.scoped_refptr.1776 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1780", %struct.SkRect }
%"class.absl::optional.1780" = type { %"class.absl::optional_internal::optional_data.1781" }
%"class.absl::optional_internal::optional_data.1781" = type { %"class.absl::optional_internal::optional_data_base.1782" }
%"class.absl::optional_internal::optional_data_base.1782" = type { %"class.absl::optional_internal::optional_data_dtor_base.1783" }
%"class.absl::optional_internal::optional_data_dtor_base.1783" = type { i8, %union.anon.1784 }
%union.anon.1784 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1785, [384 x i64], %class.sk_sp.1786, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1787", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1793" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1785 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1786 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1787" = type { %"class.std::__1::__compressed_pair.1788" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1793" = type { %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.1795" }
%"struct.std::__1::__compressed_pair_elem.1795" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1823", %"class.std::__1::unique_ptr.1828" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1805", %"class.std::__1::unique_ptr.1805", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1817", %class.sk_sp.1768 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1823" = type { %"class.absl::optional_internal::optional_data.1824" }
%"class.absl::optional_internal::optional_data.1824" = type { %"class.absl::optional_internal::optional_data_base.1825" }
%"class.absl::optional_internal::optional_data_base.1825" = type { %"class.absl::optional_internal::optional_data_dtor_base.1826" }
%"class.absl::optional_internal::optional_data_dtor_base.1826" = type { i8, %union.anon.1827 }
%union.anon.1827 = type { i32 }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.929", %"class.WTF::Vector.929", i8, i32, %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.942", %"class.blink::Member.944", %"class.blink::Member.946", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.954", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.965", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.990", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.999", double, double, i64, i64, %"class.blink::HeapHashSet.1001", %"class.blink::HeapHashSet.1008", i16, i8, %"class.blink::Member.1015", %"class.blink::Member.1017", %"class.blink::Member.1334", %"class.blink::Member.1336", %"class.blink::TextLinkColors", %"class.blink::Member.1338", i8, [7 x i8], %"class.blink::HeapHashMap.1340", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1347", %"class.blink::Member.1352", %"class.blink::Member.1354", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1356", %"class.blink::HeapVector.1358", %"class.std::__1::unique_ptr.1366", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1372", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1385", %"class.WTF::Vector.1387", i8, i8, %"class.std::__1::unique_ptr.1392", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1398", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1406", i8, i32, %"class.blink::Member.1408", %"class.blink::Member.1410", %"class.blink::Member.1412", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1414", %"class.WTF::HashMap.1416", %"class.blink::Member.1421", %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1429", i8, i32, %"class.blink::Member.1436", %"class.blink::Member.1438", i32, %"class.blink::Member.1440", %"class.blink::Member.1442", %"class.blink::Member.1444", %"class.std::__1::unique_ptr.1446", i64, %"class.std::__1::unique_ptr.1452", i32, i32, %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1469", %"class.WTF::Vector.1471", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1476", %"class.blink::Member.1483", %"class.std::__1::unique_ptr.1485", %"class.blink::Member.1491", i8, i8, %"class.WTF::String", %"class.blink::Member.1493", i8, [7 x i8], %"class.blink::HeapHashMap.1495", %"class.blink::HeapObserverSet", %"class.blink::Member.1509", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1511", i32, i8, i8, %"class.blink::WeakMember.1513", %"class.blink::Member.1514" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.922" }
%"class.blink::HeapHashMap.922" = type { %"class.WTF::HashMap.925" }
%"class.WTF::HashMap.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.932 }
%class.scoped_refptr.932 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.933", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.933" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1538", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1579", i32, i8, [3 x i8], %"class.blink::HeapVector.1581", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1589", %"class.blink::Member.1591", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1600", %"class.blink::Member.1606", %"class.blink::Member.1608", i8, [7 x i8] }>
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1554" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1546" }
%"class.blink::HeapObserverSet.1546" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1547" }
%"class.blink::HeapHashSet.1547" = type { %"class.WTF::HashSet.1550" }
%"class.WTF::HashSet.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"class.blink::WeakMember.1553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1553" = type opaque
%"class.blink::Supplementable.1554" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1555" }
%"class.blink::HeapHashMap.1555" = type { %"class.WTF::HashMap.1558" }
%"class.WTF::HashMap.1558" = type { %"class.WTF::HashTable.1559" }
%"class.WTF::HashTable.1559" = type <{ %"struct.WTF::KeyValuePair.1561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1561" = type { i8*, %"class.blink::Member.1952" }
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1954" }
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1562, %"class.std::__1::unique_ptr.1563", %"class.std::__1::unique_ptr.1563", %"class.std::__1::unique_ptr.1569", %"class.std::__1::unique_ptr.1569", %"class.blink::Member.938", i32, [4 x i8], %"class.WTF::HashSet.1575", i32, i32 }
%class.scoped_refptr.1562 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1639", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1641", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1646 }
%"class.WTF::RefCounted.1639" = type { %"class.base::RefCounted.1640" }
%"class.base::RefCounted.1640" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1646 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1563" = type { %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1569" = type { %"class.std::__1::__compressed_pair.1570" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1571" }
%"struct.std::__1::__compressed_pair_elem.1571" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1575" = type { %"class.WTF::HashTable.1576" }
%"class.WTF::HashTable.1576" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1581" = type { %"class.WTF::Vector.1584" }
%"class.WTF::Vector.1584" = type { %"class.WTF::VectorBuffer.1585" }
%"class.WTF::VectorBuffer.1585" = type { %"class.WTF::VectorBufferBase.1586" }
%"class.WTF::VectorBufferBase.1586" = type { %"class.blink::Member.1587"*, i32, i32 }
%"class.blink::Member.1587" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1593", i32, i32 }
%"class.blink::HeapHashMap.1593" = type { %"class.WTF::HashMap.1596" }
%"class.WTF::HashMap.1596" = type { %"class.WTF::HashTable.1597" }
%"class.WTF::HashTable.1597" = type <{ %"struct.WTF::KeyValuePair.1599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1599" = type opaque
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.948" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.blink::KURL"* }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.964 }
%class.scoped_refptr.964 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.968 }
%class.scoped_refptr.968 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.969", i32, i32, %"class.blink::Persistent.971" }
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.971" = type { %"class.blink::PersistentBase.972" }
%"class.blink::PersistentBase.972" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.975" }
%"class.blink::HeapHashMap.975" = type { %"class.WTF::HashMap.978" }
%"class.WTF::HashMap.978" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"struct.WTF::KeyValuePair.981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.981" = type { %"class.blink::WeakMember.982", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1610", i64 }
%"class.std::__1::vector.1610" = type { %"class.std::__1::__vector_base.1611" }
%"class.std::__1::__vector_base.1611" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1612" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.992" }
%"class.blink::HeapHashMap.992" = type { %"class.WTF::HashMap.995" }
%"class.WTF::HashMap.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"struct.WTF::KeyValuePair.998"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.998" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1001" = type { %"class.WTF::HashSet.1004" }
%"class.WTF::HashSet.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"class.blink::WeakMember.1007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1007" = type opaque
%"class.blink::HeapHashSet.1008" = type { %"class.WTF::HashSet.1011" }
%"class.WTF::HashSet.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"class.blink::WeakMember.1014"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1014" = type opaque
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1021", %"class.blink::Member.1048", %"class.blink::HeapHashMap.1050", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1057", %"class.blink::HeapHashSet.1057", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1063", %"class.blink::Member.1075", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::Member.1111", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1267", %"class.blink::Member.1273", %"class.blink::HeapHashMap.1275", %"class.blink::HeapHashMap.1282", %"class.std::__1::unique_ptr.1289", i32, %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1033", %"class.blink::HeapHashSet.1303", %"class.blink::HeapHashMap.1310", %"class.blink::Member.1317", %"class.blink::HeapHashMap.1319", %class.scoped_refptr.1326, %class.scoped_refptr.259, %"class.blink::Member.449", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1327", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1025", %"class.blink::HeapVector.1033", i8 }>
%"class.blink::HeapVector.1025" = type { %"class.WTF::Vector.1028" }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.blink::Member.1031"*, i32, i32 }
%"class.blink::Member.1031" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1044", %"class.blink::Member.1046", %"class.blink::Member.1046", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1044" = type <{ %"class.blink::Member.1046"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1046", %"class.blink::Member.1046" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1050" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1056" = type opaque
%"class.blink::HeapHashSet.1057" = type { %"class.WTF::HashSet.1060" }
%"class.WTF::HashSet.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1065", %"class.blink::Member.1067" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.710" }
%"class.blink::HeapHashMap.710" = type { %"class.WTF::HashMap.713" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1071", %"class.blink::Member.1073" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1529", %"class.blink::Member.1067", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.840] }
%"class.blink::HeapVector.1529" = type { %"class.WTF::Vector.1532" }
%"class.WTF::Vector.1532" = type { %"class.WTF::VectorBuffer.1533" }
%"class.WTF::VectorBuffer.1533" = type { %"class.WTF::VectorBufferBase.1534" }
%"class.WTF::VectorBufferBase.1534" = type { %"class.blink::Member.1073"*, i32, i32 }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1048", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1079" }
%"class.blink::HeapHashMap.1079" = type { %"class.WTF::HashMap.1082" }
%"class.WTF::HashMap.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1086", %"class.std::__1::unique_ptr.1097" }
%"class.blink::HeapVector.1086" = type { %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1092" }
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.462", [16 x i8] }
%"class.WTF::VectorBufferBase.462" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1109", i8, [7 x i8] }>
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1133", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1120", %class.scoped_refptr.1125, %class.scoped_refptr.1132, %class.scoped_refptr.1131, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1975 }
%class.scoped_refptr.1975 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1126" = type { %"class.base::RefCounted.1127" }
%"class.base::RefCounted.1127" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1128" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1129" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1130" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%class.scoped_refptr.1125 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1131, %class.scoped_refptr.1131 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1132 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1131 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1178", %"class.blink::HeapVector.1186", %"class.blink::HeapVector.1194", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1219", %"class.blink::HeapVector.1227", %"class.blink::HeapVector.1236", %"class.WTF::Vector.1243", i32, %"class.blink::Member.1249" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type { %"class.WTF::AtomicString", %"class.blink::Member.1985" }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::HeapVector.1144"* }
%"class.blink::HeapVector.1144" = type { %"class.WTF::Vector.1147" }
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.1149" }
%"class.WTF::VectorBufferBase.1149" = type { %"class.blink::Member.1150"*, i32, i32 }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1154", i64, [4 x i32] }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1173" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1178" = type { %"class.WTF::Vector.1181" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::Member.1184"*, i32, i32 }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1186" = type { %"class.WTF::Vector.1189" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::Member.1192"*, i32, i32 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1194" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1202", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1208"*, i32, i32 }
%"class.blink::Member.1208" = type opaque
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1219" = type { %"class.WTF::Vector.1222" }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.blink::Member.1225"*, i32, i32 }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", i32, [4 x i8] }>
%"class.blink::HeapVector.1227" = type { %"class.WTF::Vector.1230" }
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"class.blink::Member.1233"*, i32, i32 }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449" }
%"class.blink::HeapVector.1236" = type { %"class.WTF::Vector.1239" }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1154", i32, i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1246, i8, [7 x i8] }>
%class.scoped_refptr.1246 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253" }
%"class.blink::HeapHashMap.1253" = type { %"class.WTF::HashMap.1256" }
%"class.WTF::HashMap.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"struct.WTF::KeyValuePair.1259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1259" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1260" }
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1976", %"class.WTF::Vector.1976" }
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { %class.scoped_refptr.1975*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1275" = type { %"class.WTF::HashMap.1278" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1281" = type opaque
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type opaque
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1295" = type { %"class.WTF::Vector.1298" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"struct.std::__1::pair.1301"*, i32, i32 }
%"struct.std::__1::pair.1301" = type opaque
%"class.blink::HeapVector.1033" = type { %"class.WTF::Vector.1036" }
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"struct.std::__1::pair.1039"*, i32, i32 }
%"struct.std::__1::pair.1039" = type opaque
%"class.blink::HeapHashSet.1303" = type { %"class.WTF::HashSet.1306" }
%"class.WTF::HashSet.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"class.blink::WeakMember.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1309" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1310" = type { %"class.WTF::HashMap.1313" }
%"class.WTF::HashMap.1313" = type { %"class.WTF::HashTable.1314" }
%"class.WTF::HashTable.1314" = type <{ %"struct.WTF::KeyValuePair.1316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1316" = type { %"class.WTF::AtomicString", %"class.blink::Member.1200" }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1319" = type { %"class.WTF::HashMap.1322" }
%"class.WTF::HashMap.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"struct.WTF::KeyValuePair.1325"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1325" = type opaque
%class.scoped_refptr.1326 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1961 }
%class.scoped_refptr.1961 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1962", %"class.WTF::Vector.455", %"class.WTF::Vector.1964", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1962" = type { %"class.base::RefCounted.1963" }
%"class.base::RefCounted.1963" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1964" = type { %"class.WTF::VectorBuffer.1965" }
%"class.WTF::VectorBuffer.1965" = type { %"class.WTF::VectorBufferBase.1966" }
%"class.WTF::VectorBufferBase.1966" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1967 }
%union.anon.1967 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1327" = type { %"class.WTF::HashSet.1330" }
%"class.WTF::HashSet.1330" = type { %"class.WTF::HashTable.1331" }
%"class.WTF::HashTable.1331" = type <{ %"class.blink::Member.1333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1333" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1340" = type { %"class.WTF::HashMap.1343" }
%"class.WTF::HashMap.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"struct.WTF::KeyValuePair.1346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1346" = type opaque
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1358" = type { %"class.WTF::Vector.1361" }
%"class.WTF::Vector.1361" = type { %"class.WTF::VectorBuffer.1362" }
%"class.WTF::VectorBuffer.1362" = type { %"class.WTF::VectorBufferBase.1363" }
%"class.WTF::VectorBufferBase.1363" = type { %"class.blink::Member.1364"*, i32, i32 }
%"class.blink::Member.1364" = type opaque
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1372" = type { %"class.WTF::HashSet.1375" }
%"class.WTF::HashSet.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"class.blink::WeakMember.1378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1378" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1379", i32, [4 x i8] }>
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"struct.std::__1::pair.1382"*, i32, i32 }
%"struct.std::__1::pair.1382" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1398" = type { %"class.WTF::Vector.1401" }
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.WTF::VectorBufferBase.1403" = type { %"class.blink::Member.1404"*, i32, i32 }
%"class.blink::Member.1404" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1420"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1420" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.989", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.986, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.986 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.987" }>
%"class.base::RefCountedThreadSafe.987" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::WeakMember.989" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1429" = type { %"class.WTF::HashSet.1432" }
%"class.WTF::HashSet.1432" = type { %"class.WTF::HashTable.1433" }
%"class.WTF::HashTable.1433" = type <{ %"class.blink::Member.1435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1435" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"struct.WTF::KeyValuePair.1459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1459" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1471" = type { %"class.WTF::VectorBuffer.1472" }
%"class.WTF::VectorBuffer.1472" = type { %"class.WTF::VectorBufferBase.1473" }
%"class.WTF::VectorBufferBase.1473" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1476" = type { %"class.WTF::HashMap.1479" }
%"class.WTF::HashMap.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"struct.WTF::KeyValuePair.1482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1482" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1495" = type { %"class.WTF::HashMap.1498" }
%"class.WTF::HashMap.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"struct.WTF::KeyValuePair.1501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1501" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1502" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::WeakMember.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1518", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1525", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1518" = type { %"class.WTF::HashSet.1521" }
%"class.WTF::HashSet.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"class.blink::Member.1524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1524" = type opaque
%"class.blink::HeapTaskRunnerTimer.1525" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1526", { i64, i64 } }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1512" }
%"class.blink::WeakMember.1513" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.770" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.773", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.900", i8, %"class.absl::optional.906", %class.scoped_refptr.882, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.911" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.817, %class.scoped_refptr.831, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.872, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.896 }
%class.scoped_refptr.782 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.817 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.831 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.832 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.785, %class.scoped_refptr.837, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.859", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.838" }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.854" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.840, [20 x float], i32, [4 x i8], %"class.std::__1::vector.847", i32, [4 x i8] }>
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.865" }
%class.scoped_refptr.872 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.885" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.785, %"class.absl::optional.877", %class.scoped_refptr.882, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, [3 x i8], %union.anon.881 }
%union.anon.881 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.888", i32, [4 x i8] }>
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.896 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.906" = type { %"class.absl::optional_internal::optional_data.907" }
%"class.absl::optional_internal::optional_data.907" = type { %"class.absl::optional_internal::optional_data_base.908" }
%"class.absl::optional_internal::optional_data_base.908" = type { %"class.absl::optional_internal::optional_data_dtor_base.909" }
%"class.absl::optional_internal::optional_data_dtor_base.909" = type { i8, %union.anon.910 }
%union.anon.910 = type { %"class.blink::IntRect" }
%class.scoped_refptr.882 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.883", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.692, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.692 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.693, %class.SkTDArray.694, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.693 = type { i8*, i32, i32 }
%class.SkTDArray.694 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.695 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.695 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.883" = type { %"class.base::RefCounted.884" }
%"class.base::RefCounted.884" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.754", %"class.std::__1::unique_ptr.756" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.471", %"class.blink::DataRef.475", %"class.blink::DataRef.670", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1617", [4 x i8] }>
%"class.WTF::RefCounted.1617" = type { %"class.base::RefCounted.1618" }
%"class.base::RefCounted.1618" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type <{ %"class.blink::Member.445", i32, i32, %"class.WTF::AtomicString", %"class.blink::Member.453", %"class.WTF::AtomicString", %"class.blink::Member.453", i8, [7 x i8], %"class.WTF::Vector.455", %"class.WTF::Vector.460", %"class.WTF::Vector.465", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CounterStyle"* }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"struct.std::__1::pair.468"*, i32, i32 }
%"struct.std::__1::pair.468" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.471" = type { %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.473", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.473" = type { %"class.base::RefCounted.474" }
%"class.base::RefCounted.474" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.475" = type { %class.scoped_refptr.476 }
%class.scoped_refptr.476 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.477", [4 x i8], %"class.blink::DataRef.479", %"class.blink::DataRef.545", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.664", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.477" = type { %"class.base::RefCounted.478" }
%"class.base::RefCounted.478" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.479" = type { %class.scoped_refptr.480 }
%class.scoped_refptr.480 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.481", [4 x i8], %"class.blink::DataRef.483", %"class.blink::Persistent.521", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.481" = type { %"class.base::RefCounted.482" }
%"class.base::RefCounted.482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.483" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.485", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.503, %class.scoped_refptr.506, %class.scoped_refptr.509, %class.scoped_refptr.512, %class.scoped_refptr.513, %class.scoped_refptr.514, %"class.blink::Persistent.521", %"class.blink::Persistent.536", %"class.absl::optional.540", %"class.absl::optional.540", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.487", %"class.std::__1::unique_ptr.492" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.495", %"class.WTF::Vector.487", i32, i32 }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.503 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.504", [4 x i8] }>
%"class.WTF::RefCounted.504" = type { %"class.base::RefCounted.505" }
%"class.base::RefCounted.505" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.506 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.507", [4 x i8] }>
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.509 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.510" }>
%"class.WTF::RefCounted.510" = type { %"class.base::RefCounted.511" }
%"class.base::RefCounted.511" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.512 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.513 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.514 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.515", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.517" }
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.519" }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.536" = type { %"class.blink::PersistentBase.537" }
%"class.blink::PersistentBase.537" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.506, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, [3 x i8], %union.anon.544 }
%union.anon.544 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.521" = type { %"class.blink::PersistentBase.522" }
%"class.blink::PersistentBase.522" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.525" }
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.531"*, i32, i32 }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.545" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.547", %"class.blink::DataRef.549", %"class.blink::DataRef.553", %"class.blink::DataRef.562", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.630", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.652", %"class.WTF::Vector.455", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.547" = type { %"class.base::RefCounted.548" }
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.549" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.551", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.551" = type { %"class.base::RefCounted.552" }
%"class.base::RefCounted.552" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.553" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.555", [4 x i8], %"class.WTF::Vector.557", i8, [7 x i8] }>
%"class.WTF::RefCounted.555" = type { %"class.base::RefCounted.556" }
%"class.base::RefCounted.556" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { i32*, i32, i32 }
%"class.blink::DataRef.562" = type { %class.scoped_refptr.563 }
%class.scoped_refptr.563 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.564", [4 x i8], %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.576", %"class.WTF::Vector.487", %"class.WTF::Vector.487", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.564" = type { %"class.base::RefCounted.565" }
%"class.base::RefCounted.565" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type { %"class.WTF::String", %"class.WTF::Vector.1956" }
%"class.WTF::Vector.1956" = type { %"class.WTF::VectorBuffer.1957" }
%"class.WTF::VectorBuffer.1957" = type { %"class.WTF::VectorBufferBase.1958" }
%"class.WTF::VectorBufferBase.1958" = type { i64*, i32, i32 }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { i64, %"class.WTF::Vector.455" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1891", %"class.absl::optional.1891", %"class.absl::optional.1891" }
%"class.absl::optional.1891" = type { %"class.absl::optional_internal::optional_data.1892" }
%"class.absl::optional_internal::optional_data.1892" = type { %"class.absl::optional_internal::optional_data_base.1893" }
%"class.absl::optional_internal::optional_data_base.1893" = type { %"class.absl::optional_internal::optional_data_dtor_base.1894" }
%"class.absl::optional_internal::optional_data_dtor_base.1894" = type { i8, %union.anon.1895 }
%union.anon.1895 = type { i32 }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.607", %"class.WTF::Vector.595", %"class.WTF::Vector.612", %"class.WTF::Vector.617", %"class.WTF::Vector.622" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.595", %"class.WTF::Vector.595", %"class.WTF::Vector.600" }
%"class.WTF::Vector.600" = type { %"class.WTF::VectorBuffer.601" }
%"class.WTF::VectorBuffer.601" = type { %"class.WTF::VectorBufferBase.602" }
%"class.WTF::VectorBufferBase.602" = type { %class.scoped_refptr.603*, i32, i32 }
%class.scoped_refptr.603 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.604" }
%"class.base::RefCountedThreadSafe.604" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { double*, i32, i32 }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { i32*, i32, i32 }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { i32*, i32, i32 }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %class.scoped_refptr.661*, i32, i32 }
%class.scoped_refptr.661 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.510", [4 x i8] }>
%"class.blink::Persistent.664" = type { %"class.blink::PersistentBase.665" }
%"class.blink::PersistentBase.665" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.668" }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.670" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.672", [4 x i8], %"class.blink::DataRef.674", %"class.blink::DataRef.678", %"class.blink::DataRef.699", %"class.blink::DataRef.717", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %class.scoped_refptr.703, i32, [4 x i8] }>
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.676", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.678" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.680", %class.scoped_refptr.682, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.682 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.689", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.507" }>
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::Path"* }
%"class.blink::DataRef.699" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.701", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.703, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.719", [4 x i8], %class.scoped_refptr.721, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.base::RefCountedData.722"* }
%"class.base::RefCountedData.722" = type { %"class.base::RefCountedThreadSafe.723", %"class.WTF::Vector.724" }
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.731", %class.scoped_refptr.703, %class.scoped_refptr.703, %class.scoped_refptr.703 }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.735", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.703 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.704", %"class.blink::Persistent.706", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.706" = type { %"class.blink::PersistentBase.707" }
%"class.blink::PersistentBase.707" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.739", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.741" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.743", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.745" = type { %class.scoped_refptr.746 }
%class.scoped_refptr.746 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.747", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.749" = type { %class.scoped_refptr.750 }
%class.scoped_refptr.750 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.751", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.751" = type { %"class.base::RefCounted.752" }
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.753 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.920", %"class.blink::StyleVariables", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.920" = type { %"class.base::RefCounted.921" }
%"class.base::RefCounted.921" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.1971" }
%"class.WTF::VectorBuffer.1971" = type { %"class.WTF::VectorBufferBase.1972", [32 x i8] }
%"class.WTF::VectorBufferBase.1972" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ScopedDarkModeElementRoleOverride" = type { %"class.blink::GraphicsContext"*, %"class.absl::optional.1823" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::ListMarkerPainter" = type { %"class.blink::LayoutListMarker"* }
%"class.blink::LayoutListMarker" = type <{ %"class.blink::LayoutBox", %"class.WTF::String", %"class.blink::Persistent.306", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1837, %"class.WTF::Vector.1838", %"class.std::__1::unique_ptr.1843", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1864, %"class.blink::Persistent.1865" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1837 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1838" = type { %"class.WTF::VectorBuffer.1839" }
%"class.WTF::VectorBuffer.1839" = type { %"class.WTF::VectorBufferBase.1840", [8 x i8] }
%"class.WTF::VectorBufferBase.1840" = type { %class.scoped_refptr.1837*, i32, i32 }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1846", %"class.absl::optional.1851", %"class.absl::optional.1856" }
%"class.absl::optional.1846" = type { %"class.absl::optional_internal::optional_data.1847" }
%"class.absl::optional_internal::optional_data.1847" = type { %"class.absl::optional_internal::optional_data_base.1848" }
%"class.absl::optional_internal::optional_data_base.1848" = type { %"class.absl::optional_internal::optional_data_dtor_base.1849" }
%"class.absl::optional_internal::optional_data_dtor_base.1849" = type { i8, %union.anon.1850 }
%union.anon.1850 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1851" = type { %"class.absl::optional_internal::optional_data.1852" }
%"class.absl::optional_internal::optional_data.1852" = type { %"class.absl::optional_internal::optional_data_base.1853" }
%"class.absl::optional_internal::optional_data_base.1853" = type { %"class.absl::optional_internal::optional_data_dtor_base.1854" }
%"class.absl::optional_internal::optional_data_dtor_base.1854" = type { i8, [3 x i8], %union.anon.1855 }
%union.anon.1855 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, %union.anon.1860 }
%union.anon.1860 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1864 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1619", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1622", %"class.absl::optional.1631" }
%"class.absl::optional.1622" = type { %"class.absl::optional_internal::optional_data.1623" }
%"class.absl::optional_internal::optional_data.1623" = type { %"class.absl::optional_internal::optional_data_base.1624" }
%"class.absl::optional_internal::optional_data_base.1624" = type { %"class.absl::optional_internal::optional_data_dtor_base.1625" }
%"class.absl::optional_internal::optional_data_dtor_base.1625" = type { i8, %union.anon.1626 }
%union.anon.1626 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, %union.anon.1635 }
%union.anon.1635 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1865" = type { %"class.blink::PersistentBase.1866" }
%"class.blink::PersistentBase.1866" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1869", %"struct.blink::PhysicalRect", %"class.blink::Member.1879" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1869" = type { %"class.std::__1::__compressed_pair.1870" }
%"class.std::__1::__compressed_pair.1870" = type { %"struct.std::__1::__compressed_pair_elem.1871" }
%"struct.std::__1::__compressed_pair_elem.1871" = type { %"class.WTF::HashSet.1872"* }
%"class.WTF::HashSet.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::BoxPainter" = type { %"class.blink::LayoutBox"* }
%"class.blink::ScopedPaintState" = type <{ %"class.blink::FragmentData"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset", %"class.absl::optional.1881", %"class.absl::optional.1886", i8, [7 x i8] }>
%"class.absl::optional.1881" = type { %"class.absl::optional_internal::optional_data.1882" }
%"class.absl::optional_internal::optional_data.1882" = type { %"class.absl::optional_internal::optional_data_base.1883" }
%"class.absl::optional_internal::optional_data_base.1883" = type { %"class.absl::optional_internal::optional_data_dtor_base.1884" }
%"class.absl::optional_internal::optional_data_dtor_base.1884" = type { i8, [7 x i8], %union.anon.1885 }
%union.anon.1885 = type { %"struct.blink::PaintInfo" }
%"class.absl::optional.1886" = type { %"class.absl::optional_internal::optional_data.1887" }
%"class.absl::optional_internal::optional_data.1887" = type { %"class.absl::optional_internal::optional_data_base.1888" }
%"class.absl::optional_internal::optional_data_base.1888" = type { %"class.absl::optional_internal::optional_data_dtor_base.1889" }
%"class.absl::optional_internal::optional_data_dtor_base.1889" = type { i8, %union.anon.1890 }
%union.anon.1890 = type { %"class.blink::ScopedPaintChunkProperties" }
%"class.blink::ScopedPaintChunkProperties" = type { %"class.blink::PaintController"*, %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::BoxDrawingRecorder" = type { %"class.blink::DrawingRecorder.base", [4 x i8] }
%"class.blink::DrawingRecorder.base" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.1891" }>
%"class.blink::TextRun" = type <{ %union.anon.1921, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.1921 = type { i8* }
%"struct.blink::TextRunPaintInfo" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1922, i32, i8, i8, [2 x i8] }>
%union.anon.1922 = type { %"class.WTF::Vector.1923" }
%"class.WTF::Vector.1923" = type { %"class.WTF::VectorBuffer.1924" }
%"class.WTF::VectorBuffer.1924" = type { %"class.WTF::VectorBufferBase.1925", [16 x i8] }
%"class.WTF::VectorBufferBase.1925" = type { i8*, i32, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.471", %"class.blink::DataRef.475", %"class.blink::DataRef.670", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8], [4 x i8] }>
%"class.blink::DrawingRecorder" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.1891", [4 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1896", i8, %class.scoped_refptr.1898, %"class.blink::WeakPersistent.1912", i32, i8, %"class.std::__1::unique_ptr.1914" }
%"class.WTF::ThreadSafeRefCounted.1896" = type { %"class.base::RefCountedThreadSafe.1897" }
%"class.base::RefCountedThreadSafe.1897" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1898 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1899", i64, %"class.WTF::Vector.1901", %"class.WTF::Vector.1906" }
%"class.WTF::RefCounted.1899" = type { %"class.base::RefCounted.1900" }
%"class.base::RefCounted.1900" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903" }
%"class.WTF::VectorBufferBase.1903" = type { i8*, i32, i32 }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"class.std::__1::unique_ptr.1909"*, i32, i32 }
%"class.std::__1::unique_ptr.1909" = type opaque
%"class.blink::WeakPersistent.1912" = type { %"class.blink::PersistentBase.1913" }
%"class.blink::PersistentBase.1913" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1914" = type { %"class.std::__1::__compressed_pair.1915" }
%"class.std::__1::__compressed_pair.1915" = type { %"struct.std::__1::__compressed_pair_elem.1916" }
%"struct.std::__1::__compressed_pair_elem.1916" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashSet.1933" = type opaque
%"class.WTF::Vector.1928" = type { %"class.WTF::VectorBuffer.1929" }
%"class.WTF::VectorBuffer.1929" = type { %"class.WTF::VectorBufferBase.1930", [16 x i8] }
%"class.WTF::VectorBufferBase.1930" = type { i16*, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.41", [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN5blink15GraphicsContext16RealizePaintSaveEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

@.str = private unnamed_addr constant [5 x i8] c"disc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"circle\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"square\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"disclosure-open\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"disclosure-closed\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::GraphicsContextState, std::__1::default_delete<blink::GraphicsContextState> >]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.10 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ListMarkerPainter11PaintSymbolERKNS_9PaintInfoEPKNS_12LayoutObjectERKNS_13ComputedStyleERKNS_10LayoutRectE(%"struct.blink::PaintInfo"* nocapture readonly dereferenceable(56), %"class.blink::LayoutObject"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.blink::FloatPoint", align 4
  %18 = alloca %"class.blink::FloatPoint", align 4
  %19 = alloca %"class.blink::FloatPoint", align 4
  %20 = alloca %"class.blink::FloatPoint", align 4
  %21 = alloca %"class.blink::FloatPoint", align 4
  %22 = alloca %"class.blink::FloatPoint", align 4
  %23 = alloca %"class.blink::FloatPoint", align 4
  %24 = alloca %"class.blink::FloatPoint", align 4
  %25 = alloca %"class.blink::ScopedDarkModeElementRoleOverride", align 8
  %26 = alloca %"class.blink::Color", align 4
  %27 = alloca { i64, i64 }, align 8
  %28 = bitcast { i64, i64 }* %27 to %"class.blink::IntRect"*
  %29 = alloca %"class.blink::FloatRect", align 4
  %30 = alloca %"class.blink::FloatRect", align 4
  %31 = alloca %"class.blink::Path", align 8
  %32 = alloca %"class.blink::AffineTransform", align 8
  %33 = alloca %"class.blink::FloatSize", align 4
  %34 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %0, i64 0, i32 0
  %35 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %34, align 8
  %36 = bitcast %"class.blink::ScopedDarkModeElementRoleOverride"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false)
  call void @_ZN5blink33ScopedDarkModeElementRoleOverrideC1EPNS_15GraphicsContextENS_14DarkModeFilter11ElementRoleE(%"class.blink::ScopedDarkModeElementRoleOverride"* nonnull %25, %"class.blink::GraphicsContext"* %35, i32 1) #10
  %37 = bitcast %"class.blink::Color"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %26, i64 0, i32 0
  %39 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #10
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %41, %"class.blink::CSSProperty"* dereferenceable(24) %39) #10
  store i32 %42, i32* %38, align 4
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %46, label %53

46:                                               ; preds = %4, %46
  %47 = phi %"class.blink::LayoutObject"* [ %49, %46 ], [ %1, %4 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 7
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %46, label %53

53:                                               ; preds = %46, %4
  %54 = phi %"class.blink::Node"* [ %44, %4 ], [ %51, %46 ]
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = call zeroext i1 @_ZN5blink14BoxPainterBase41ShouldForceWhiteBackgroundForPrintEconomyERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848) %58, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #10
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = load i32, i32* %38, align 4
  %62 = call i32 @_ZN5blink15TextPainterBase27TextColorForWhiteBackgroundENS_5ColorE(i32 %61) #10
  store i32 %62, i32* %38, align 4
  br label %63

63:                                               ; preds = %60, %53
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %35) #10
  %64 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %35, i64 0, i32 4
  %65 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %64, align 8
  call void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %65, %"class.blink::Color"* nonnull dereferenceable(4) %26) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %35) #10
  %66 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %64, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %66, %"class.blink::Color"* nonnull dereferenceable(4) %26) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %35) #10
  %67 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %64, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %67, i32 1) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %35) #10
  %68 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %64, align 8
  call void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"* %68, float 1.000000e+00) #10
  %69 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #10
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %71 = bitcast %"class.blink::LayoutRect"* %3 to i64*
  %72 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false)
  %73 = load i64, i64* %71, align 4
  %74 = trunc i64 %73 to i32
  %75 = lshr i64 %73, 32
  %76 = trunc i64 %75 to i32
  %77 = sdiv i32 %74, 64
  %78 = srem i32 %74, 64
  %79 = add nsw i32 %78, 32
  %80 = ashr i32 %79, 6
  %81 = add nsw i32 %80, %77
  %82 = sdiv i32 %76, 64
  %83 = srem i32 %76, 64
  %84 = add nsw i32 %83, 32
  %85 = ashr i32 %84, 6
  %86 = add nsw i32 %85, %82
  %87 = zext i32 %86 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %81 to i64
  %90 = or i64 %88, %89
  %91 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 1, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %92) #10
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = sdiv i32 %98, 64
  %100 = srem i32 %98, 64
  %101 = add nsw i32 %100, 32
  %102 = ashr i32 %101, 6
  %103 = sub nsw i32 %99, %80
  %104 = add nsw i32 %102, %103
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %63
  %107 = add i32 %92, 4
  %108 = icmp ugt i32 %107, 8
  br i1 %108, label %109, label %112, !prof !3

109:                                              ; preds = %106
  %110 = icmp sgt i32 %92, 0
  %111 = select i1 %110, i32 1, i32 -1
  br label %112

112:                                              ; preds = %109, %106, %63
  %113 = phi i32 [ %111, %109 ], [ %104, %63 ], [ 0, %106 ]
  %114 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 1, i32 1, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 0, i32 1, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = srem i32 %117, 64
  %119 = icmp slt i32 %115, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %118, i32 %115) #10
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  %125 = sdiv i32 %124, 64
  %126 = srem i32 %124, 64
  %127 = add nsw i32 %126, 32
  %128 = ashr i32 %127, 6
  %129 = add nsw i32 %118, 32
  %130 = ashr i32 %129, 6
  %131 = sub nsw i32 %125, %130
  %132 = add nsw i32 %128, %131
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %112
  %135 = add i32 %115, 4
  %136 = icmp ugt i32 %135, 8
  br i1 %136, label %137, label %140, !prof !3

137:                                              ; preds = %134
  %138 = icmp sgt i32 %115, 0
  %139 = select i1 %138, i32 1, i32 -1
  br label %140

140:                                              ; preds = %112, %134, %137
  %141 = phi i32 [ %139, %137 ], [ %132, %112 ], [ 0, %134 ]
  %142 = zext i32 %141 to i64
  %143 = shl nuw i64 %142, 32
  %144 = zext i32 %113 to i64
  %145 = or i64 %143, %144
  %146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  store i64 %90, i64* %146, align 8
  store i64 %145, i64* %70, align 8
  %147 = call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* %2) #10
  %148 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %149 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %147, i64 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %152, label %156

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %153, align 8
  %154 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %155 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %154, i64* %155, align 8
  br label %164

156:                                              ; preds = %140
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %157, align 8
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 1
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %162 = bitcast i8** %161 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %162, align 8
  %163 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %164

164:                                              ; preds = %156, %152
  %165 = phi i64 [ %163, %156 ], [ %154, %152 ]
  %166 = phi i32 [ %159, %156 ], [ 0, %152 ]
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %166, i32* %167, align 8
  %168 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #10
  %169 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %165, i64* %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 4, i32* %171, align 8
  %172 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  br i1 %172, label %173, label %183

173:                                              ; preds = %164
  %174 = bitcast %"class.blink::FloatRect"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #10
  %175 = sitofp i32 %81 to float
  %176 = sitofp i32 %86 to float
  %177 = sitofp i32 %113 to float
  %178 = sitofp i32 %141 to float
  %179 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %29, i64 0, i32 0, i32 0
  store float %175, float* %179, align 4
  %180 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %29, i64 0, i32 0, i32 1
  store float %176, float* %180, align 4
  %181 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %29, i64 0, i32 1, i32 0
  store float %177, float* %181, align 4
  %182 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %29, i64 0, i32 1, i32 1
  store float %178, float* %182, align 4
  call void @_ZN5blink15GraphicsContext11FillEllipseERKNS_9FloatRectE(%"class.blink::GraphicsContext"* %35, %"class.blink::FloatRect"* nonnull dereferenceable(16) %29) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10
  br label %398

183:                                              ; preds = %164
  %184 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #10
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %188, align 8
  %189 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %190 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %189, i64* %190, align 8
  br label %199

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 1
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %197 = bitcast i8** %196 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %197, align 8
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %199

199:                                              ; preds = %191, %187
  %200 = phi i64 [ %198, %191 ], [ %189, %187 ]
  %201 = phi i32 [ %194, %191 ], [ 0, %187 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #10
  %204 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %200, i64* %204, align 8
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 6, i32* %206, align 8
  %207 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #10
  br i1 %207, label %208, label %218

208:                                              ; preds = %199
  %209 = bitcast %"class.blink::FloatRect"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #10
  %210 = sitofp i32 %81 to float
  %211 = sitofp i32 %86 to float
  %212 = sitofp i32 %113 to float
  %213 = sitofp i32 %141 to float
  %214 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %30, i64 0, i32 0, i32 0
  store float %210, float* %214, align 4
  %215 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %30, i64 0, i32 0, i32 1
  store float %211, float* %215, align 4
  %216 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %30, i64 0, i32 1, i32 0
  store float %212, float* %216, align 4
  %217 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %30, i64 0, i32 1, i32 1
  store float %213, float* %217, align 4
  call void @_ZN5blink15GraphicsContext13StrokeEllipseERKNS_9FloatRectE(%"class.blink::GraphicsContext"* %35, %"class.blink::FloatRect"* nonnull dereferenceable(16) %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #10
  br label %398

218:                                              ; preds = %199
  %219 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #10
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %222, label %226

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %223, align 8
  %224 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %225 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %224, i64* %225, align 8
  br label %234

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %220, %"class.WTF::StringImpl"** %227, align 8
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 1
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %232 = bitcast i8** %231 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %232, align 8
  %233 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %234

234:                                              ; preds = %226, %222
  %235 = phi i64 [ %233, %226 ], [ %224, %222 ]
  %236 = phi i32 [ %229, %226 ], [ 0, %222 ]
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %236, i32* %237, align 8
  %238 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #10
  %239 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %235, i64* %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 6, i32* %241, align 8
  %242 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #10
  br i1 %242, label %243, label %244

243:                                              ; preds = %234
  call void @_ZN5blink15GraphicsContext8FillRectERKNS_7IntRectE(%"class.blink::GraphicsContext"* %35, %"class.blink::IntRect"* nonnull dereferenceable(16) %28) #10
  br label %398

244:                                              ; preds = %234
  %245 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #10
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %248, label %252

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %249, align 8
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %251 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %250, i64* %251, align 8
  br label %260

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %253, align 8
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 1
  %257 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %258 = bitcast i8** %257 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %258, align 8
  %259 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %260

260:                                              ; preds = %252, %248
  %261 = phi i64 [ %259, %252 ], [ %250, %248 ]
  %262 = phi i32 [ %255, %252 ], [ 0, %248 ]
  %263 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %262, i32* %263, align 8
  %264 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #10
  %265 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %261, i64* %265, align 8
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8** %266, align 8
  %267 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 15, i32* %267, align 8
  %268 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #10
  br i1 %268, label %294, label %269

269:                                              ; preds = %260
  %270 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %270) #10
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %273, label %277

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %274, align 8
  %275 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %276 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %275, i64* %276, align 8
  br label %285

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %271, %"class.WTF::StringImpl"** %278, align 8
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 1
  %282 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %283 = bitcast i8** %282 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %283, align 8
  %284 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %285

285:                                              ; preds = %277, %273
  %286 = phi i64 [ %284, %277 ], [ %275, %273 ]
  %287 = phi i32 [ %280, %277 ], [ 0, %273 ]
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %287, i32* %288, align 8
  %289 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #10
  %290 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %286, i64* %290, align 8
  %291 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8** %291, align 8
  %292 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 17, i32* %292, align 8
  %293 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %270) #10
  br i1 %293, label %294, label %398

294:                                              ; preds = %285, %260
  %295 = bitcast %"class.blink::Path"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #10
  %296 = bitcast %"class.WTF::StringView"* %5 to i8*
  %297 = bitcast %"class.blink::Path"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #10
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %300, label %304

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %301, align 8
  %302 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %303 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %302, i64* %303, align 8
  br label %312

304:                                              ; preds = %294
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %298, %"class.WTF::StringImpl"** %305, align 8
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 1
  %309 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %310 = bitcast i8** %309 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %310, align 8
  %311 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %312

312:                                              ; preds = %304, %300
  %313 = phi i64 [ %311, %304 ], [ %302, %300 ]
  %314 = phi i32 [ %307, %304 ], [ 0, %300 ]
  %315 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %314, i32* %315, align 8
  %316 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %316) #10
  %317 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %313, i64* %317, align 8
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 15, i32* %319, align 8
  %320 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %316) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #10
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %322 = bitcast [20 x i8]* %321 to i160*
  %323 = load i160, i160* %322, align 8, !noalias !4
  %324 = lshr i160 %323, 102
  %325 = trunc i160 %324 to i8
  %326 = and i8 %325, 3
  %327 = icmp eq i8 %326, 0
  br i1 %320, label %328, label %332

328:                                              ; preds = %312
  br i1 %327, label %369, label %329

329:                                              ; preds = %328
  %330 = icmp ne i8 %326, 1
  %331 = zext i1 %330 to i32
  br label %340

332:                                              ; preds = %312
  %333 = and i160 %323, 41538374868278621028243970633760768
  br i1 %327, label %334, label %338

334:                                              ; preds = %332
  %335 = lshr exact i160 %333, 115
  %336 = trunc i160 %335 to i32
  %337 = xor i32 %336, 1
  br label %340

338:                                              ; preds = %332
  %339 = icmp eq i160 %333, 0
  br i1 %339, label %369, label %360

340:                                              ; preds = %334, %329
  %341 = phi i32 [ %331, %329 ], [ %337, %334 ]
  switch i32 %341, label %378 [
    i32 0, label %342
    i32 1, label %351
  ]

342:                                              ; preds = %340
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 16, i1 false) #10, !alias.scope !7
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %31) #10
  %343 = bitcast %"class.blink::FloatPoint"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #10, !noalias !7
  %344 = bitcast %"class.blink::FloatPoint"* %21 to i32*
  store i32 1065353216, i32* %344, align 4, !noalias !7
  %345 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 1
  %346 = bitcast float* %345 to i32*
  store i32 0, i32* %346, align 4, !noalias !7
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #10, !noalias !7
  %347 = bitcast %"class.blink::FloatPoint"* %22 to i8*
  %348 = bitcast %"class.blink::FloatPoint"* %22 to i32*
  %349 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %22, i64 0, i32 1
  %350 = bitcast float* %349 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  store i32 1041194025, i32* %348, align 4, !noalias !7
  store i32 1056964608, i32* %350, align 4, !noalias !7
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  store i32 1065353216, i32* %348, align 4, !noalias !7
  store i32 1065353216, i32* %350, align 4, !noalias !7
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  store i32 1065353216, i32* %348, align 4, !noalias !7
  store i32 0, i32* %350, align 4, !noalias !7
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #10, !noalias !7
  br label %379

351:                                              ; preds = %340
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 16, i1 false) #10, !alias.scope !10
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %31) #10
  %352 = bitcast %"class.blink::FloatPoint"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #10, !noalias !10
  %353 = bitcast %"class.blink::FloatPoint"* %19 to i32*
  store i32 0, i32* %353, align 4, !noalias !10
  %354 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %19, i64 0, i32 1
  %355 = bitcast float* %354 to i32*
  store i32 0, i32* %355, align 4, !noalias !10
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %19) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #10, !noalias !10
  %356 = bitcast %"class.blink::FloatPoint"* %20 to i8*
  %357 = bitcast %"class.blink::FloatPoint"* %20 to i32*
  %358 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %20, i64 0, i32 1
  %359 = bitcast float* %358 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  store i32 1063004406, i32* %357, align 4, !noalias !10
  store i32 1056964608, i32* %359, align 4, !noalias !10
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  store i32 0, i32* %357, align 4, !noalias !10
  store i32 1065353216, i32* %359, align 4, !noalias !10
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  store i32 0, i32* %357, align 4, !noalias !10
  store i32 0, i32* %359, align 4, !noalias !10
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #10, !noalias !10
  br label %379

360:                                              ; preds = %338
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 16, i1 false) #10, !alias.scope !13
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %31) #10
  %361 = bitcast %"class.blink::FloatPoint"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %361) #10, !noalias !13
  %362 = bitcast %"class.blink::FloatPoint"* %17 to i32*
  store i32 0, i32* %362, align 4, !noalias !13
  %363 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %17, i64 0, i32 1
  %364 = bitcast float* %363 to i32*
  store i32 1064178811, i32* %364, align 4, !noalias !13
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %361) #10, !noalias !13
  %365 = bitcast %"class.blink::FloatPoint"* %18 to i8*
  %366 = bitcast %"class.blink::FloatPoint"* %18 to i32*
  %367 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %18, i64 0, i32 1
  %368 = bitcast float* %367 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  store i32 1056964608, i32* %366, align 4, !noalias !13
  store i32 1032805417, i32* %368, align 4, !noalias !13
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  store i32 1065353216, i32* %366, align 4, !noalias !13
  store i32 1064178811, i32* %368, align 4, !noalias !13
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  store i32 0, i32* %366, align 4, !noalias !13
  store i32 1064178811, i32* %368, align 4, !noalias !13
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #10, !noalias !13
  br label %379

369:                                              ; preds = %338, %328
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 16, i1 false) #10, !alias.scope !16
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %31) #10
  %370 = bitcast %"class.blink::FloatPoint"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370) #10, !noalias !16
  %371 = bitcast %"class.blink::FloatPoint"* %23 to i32*
  store i32 0, i32* %371, align 4, !noalias !16
  %372 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %23, i64 0, i32 1
  %373 = bitcast float* %372 to i32*
  store i32 1032805417, i32* %373, align 4, !noalias !16
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370) #10, !noalias !16
  %374 = bitcast %"class.blink::FloatPoint"* %24 to i8*
  %375 = bitcast %"class.blink::FloatPoint"* %24 to i32*
  %376 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %24, i64 0, i32 1
  %377 = bitcast float* %376 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  store i32 1056964608, i32* %375, align 4, !noalias !16
  store i32 1064178811, i32* %377, align 4, !noalias !16
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  store i32 1065353216, i32* %375, align 4, !noalias !16
  store i32 1032805417, i32* %377, align 4, !noalias !16
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  store i32 0, i32* %375, align 4, !noalias !16
  store i32 1032805417, i32* %377, align 4, !noalias !16
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #10, !noalias !16
  br label %379

378:                                              ; preds = %340
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %31) #10
  br label %379

379:                                              ; preds = %342, %351, %360, %369, %378
  %380 = bitcast %"class.blink::AffineTransform"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %380) #10
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %32) #10
  %381 = load i32, i32* %91, align 4
  %382 = sitofp i32 %381 to double
  %383 = fmul double %382, 1.562500e-02
  %384 = load i32, i32* %114, align 4
  %385 = sitofp i32 %384 to double
  %386 = fmul double %385, 1.562500e-02
  %387 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"* nonnull %32, double %383, double %386) #10
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %31, %"class.blink::AffineTransform"* dereferenceable(48) %387) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %380) #10
  %388 = bitcast %"class.blink::FloatSize"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #10
  %389 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 0, i32 0, i32 0
  %390 = load i32, i32* %389, align 4
  %391 = sitofp i32 %390 to float
  %392 = fmul float %391, 1.562500e-02
  %393 = load i32, i32* %116, align 4
  %394 = sitofp i32 %393 to float
  %395 = fmul float %394, 1.562500e-02
  %396 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %33, i64 0, i32 0
  store float %392, float* %396, align 4
  %397 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %33, i64 0, i32 1
  store float %395, float* %397, align 4
  call void @_ZN5blink4Path9TranslateERKNS_9FloatSizeE(%"class.blink::Path"* nonnull %31, %"class.blink::FloatSize"* nonnull dereferenceable(8) %33) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #10
  call void @_ZN5blink15GraphicsContext8FillPathERKNS_4PathE(%"class.blink::GraphicsContext"* %35, %"class.blink::Path"* nonnull dereferenceable(16) %31) #10
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #10
  br label %398

398:                                              ; preds = %208, %379, %285, %243, %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #10
  call void @_ZN5blink33ScopedDarkModeElementRoleOverrideD1Ev(%"class.blink::ScopedDarkModeElementRoleOverride"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink33ScopedDarkModeElementRoleOverrideC1EPNS_15GraphicsContextENS_14DarkModeFilter11ElementRoleE(%"class.blink::ScopedDarkModeElementRoleOverride"*, %"class.blink::GraphicsContext"*, i32) unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14BoxPainterBase41ShouldForceWhiteBackgroundForPrintEconomyERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink15TextPainterBase27TextColorForWhiteBackgroundENS_5ColorE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext11FillEllipseERKNS_9FloatRectE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext13StrokeEllipseERKNS_9FloatRectE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8FillRectERKNS_7IntRectE(%"class.blink::GraphicsContext"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink4Path9TranslateERKNS_9FloatSizeE(%"class.blink::Path"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8FillPathERKNS_4PathE(%"class.blink::GraphicsContext"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink33ScopedDarkModeElementRoleOverrideD1Ev(%"class.blink::ScopedDarkModeElementRoleOverride"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ListMarkerPainter5PaintERKNS_9PaintInfoE(%"class.blink::ListMarkerPainter"* readonly, %"struct.blink::PaintInfo"* dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.blink::BoxPainter", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::ScopedPaintState", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca %"class.blink::BoxDrawingRecorder", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::PhysicalOffset"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.blink::LayoutRect"*
  %14 = alloca <2 x float>, align 8
  %15 = bitcast <2 x float>* %14 to %"class.blink::FloatSize"*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = bitcast { <2 x float>, <2 x float> }* %16 to %"class.blink::FloatRect"*
  %18 = alloca %"class.blink::Color", align 4
  %19 = alloca %"class.blink::TextRun", align 8
  %20 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %21 = alloca %"class.blink::FloatPoint", align 4
  %22 = alloca %"class.WTF::StringBuilder", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.blink::TextRun", align 8
  %27 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %28 = alloca %"class.blink::TextRun", align 8
  %29 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %30 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 5
  br i1 %32, label %33, label %856

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.blink::ListMarkerPainter", %"class.blink::ListMarkerPainter"* %0, i64 0, i32 0
  %35 = bitcast %"class.blink::ListMarkerPainter"* %0 to %"class.blink::LayoutObject"**
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 3802951800684688204490109616128
  %44 = icmp eq i160 %43, 1267650600228229401496703205376
  br i1 %44, label %45, label %856

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %47 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 1
  %49 = bitcast %"class.blink::DisplayItemClient.base"* %48 to %"class.blink::DisplayItemClient"*
  %50 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %47, i64 0, i32 1
  %51 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %50, align 8
  %52 = tail call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %51, %"class.blink::DisplayItemClient"* dereferenceable(16) %49, i32 6) #10
  br i1 %52, label %856, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.blink::ScopedPaintState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %54) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 136, i1 false)
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 10
  %57 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 5, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = bitcast %"class.blink::LayoutObject"* %55 to %"class.blink::LayoutBox"*
  br label %60

60:                                               ; preds = %72, %53
  %61 = phi %"class.blink::FragmentData"* [ %56, %53 ], [ %74, %72 ]
  %62 = getelementptr inbounds %"class.blink::FragmentData", %"class.blink::FragmentData"* %61, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %62, align 8
  %64 = icmp eq %"struct.blink::FragmentData::RareData"* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = icmp eq i32 %58, 0
  %67 = select i1 %66, %"class.blink::FragmentData"* %61, %"class.blink::FragmentData"* null
  br label %76

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %63, i64 0, i32 3, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, %58
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %63, i64 0, i32 11, i32 0, i32 0, i32 0
  %74 = load %"class.blink::FragmentData"*, %"class.blink::FragmentData"** %73, align 8
  %75 = icmp eq %"class.blink::FragmentData"* %74, null
  br i1 %75, label %76, label %60

76:                                               ; preds = %72, %68, %65
  %77 = phi %"class.blink::FragmentData"* [ %67, %65 ], [ %61, %68 ], [ null, %72 ]
  %78 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 0
  store %"class.blink::FragmentData"* %77, %"class.blink::FragmentData"** %78, align 8
  %79 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 1
  store %"struct.blink::PaintInfo"* %1, %"struct.blink::PaintInfo"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 2
  %81 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %82 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %83 = icmp eq %"class.blink::FragmentData"* %77, null
  %84 = bitcast %"struct.blink::PhysicalOffset"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 9, i1 false) #10
  %85 = bitcast %union.anon.1885* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 57, i1 false) #10
  %86 = bitcast %union.anon.1890* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 33, i1 false) #10
  br i1 %83, label %87, label %89

87:                                               ; preds = %76
  %88 = bitcast %"struct.blink::PhysicalOffset"* %80 to i64*
  store i64 9223371897268338655, i64* %88, align 8
  br label %112

89:                                               ; preds = %76
  %90 = bitcast %"class.blink::FragmentData"* %77 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.blink::PhysicalOffset"* %80 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 4
  %94 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %94, i64 0, i32 0
  %96 = icmp eq %"class.blink::LayoutObject"* %95, %55
  br i1 %96, label %112, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::FragmentData", %"class.blink::FragmentData"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %98, align 8
  %100 = icmp eq %"struct.blink::FragmentData::RareData"* %99, null
  br i1 %100, label %112, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.blink::ObjectPaintProperties"*, %"class.blink::ObjectPaintProperties"** %102, align 8
  %104 = icmp eq %"class.blink::ObjectPaintProperties"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ObjectPaintProperties", %"class.blink::ObjectPaintProperties"* %103, i64 0, i32 0, i32 0
  %107 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %106, align 8
  %108 = icmp eq %"class.blink::TransformPaintPropertyNode"* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  call void @_ZN5blink16ScopedPaintState31AdjustForPaintOffsetTranslationERKNS_12LayoutObjectERKNS_26TransformPaintPropertyNodeE(%"class.blink::ScopedPaintState"* nonnull %6, %"class.blink::LayoutObject"* dereferenceable(88) %55, %"class.blink::TransformPaintPropertyNode"* nonnull dereferenceable(96) %107) #10
  %110 = bitcast %"class.blink::ListMarkerPainter"* %0 to %"class.blink::LayoutBox"**
  %111 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %110, align 8
  br label %112

112:                                              ; preds = %87, %89, %97, %101, %105, %109
  %113 = phi %"class.blink::LayoutBox"* [ %59, %87 ], [ %59, %89 ], [ %59, %97 ], [ %59, %101 ], [ %59, %105 ], [ %111, %109 ]
  %114 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #10
  %115 = bitcast %"class.blink::ListMarkerPainter"* %0 to %"class.blink::LayoutBox"**
  %116 = call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %113) #10
  %117 = extractvalue { i64, i64 } %116, 0
  %118 = trunc i64 %117 to i32
  %119 = and i64 %117, -4294967296
  %120 = extractvalue { i64, i64 } %116, 1
  %121 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %113, i64 0, i32 0, i32 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 5070602400912917605986812821504
  br i1 %127, label %128, label %136, !prof !2

128:                                              ; preds = %112
  %129 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %113, i64 0, i32 0, i32 0
  %130 = trunc i64 %120 to i32
  %131 = bitcast %"class.blink::LayoutBox"* %113 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %132 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %131, align 8
  %133 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %132, i64 106
  %134 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %133, align 8
  %135 = call i32 %134(%"class.blink::LayoutObject"* %129, i32 %118, i32 %130, %"class.blink::LayoutBox"* null) #10
  br label %136

136:                                              ; preds = %112, %128
  %137 = phi i32 [ %135, %128 ], [ %118, %112 ]
  %138 = zext i32 %137 to i64
  %139 = or i64 %119, %138
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %120, i64* %141, align 8
  %142 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %143 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %144 = load i8, i8* %143, align 8, !range !19
  %145 = icmp eq i8 %144, 0
  %146 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  %147 = load %"struct.blink::PaintInfo"*, %"struct.blink::PaintInfo"** %79, align 8
  %148 = select i1 %145, %"struct.blink::PaintInfo"* %147, %"struct.blink::PaintInfo"* %146
  %149 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #10
  %150 = bitcast %"struct.blink::PhysicalOffset"* %80 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %5, align 8
  %152 = call zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"* %148, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %142) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #10
  br i1 %152, label %153, label %842

153:                                              ; preds = %136
  %154 = load i8, i8* %143, align 8, !range !19
  %155 = icmp eq i8 %154, 0
  %156 = load %"struct.blink::PaintInfo"*, %"struct.blink::PaintInfo"** %79, align 8
  %157 = select i1 %155, %"struct.blink::PaintInfo"* %156, %"struct.blink::PaintInfo"* %146
  %158 = load i64, i64* %150, align 8
  %159 = lshr i64 %158, 32
  %160 = trunc i64 %159 to i32
  %161 = trunc i64 %158 to i32
  %162 = bitcast %"class.blink::BoxDrawingRecorder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %162) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 48, i1 false)
  %163 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %157, i64 0, i32 0
  %164 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %163, align 8
  %165 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %115, align 8
  %166 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %157, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #10
  store i64 %158, i64* %10, align 8
  %169 = add nsw i32 %167, 1
  %170 = bitcast { i64, i64 }* %3 to %"class.blink::IntRect"*
  %171 = bitcast %"class.blink::BoxDrawingRecorder"* %9 to %"class.blink::DrawingRecorder"*
  %172 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %165, i64 0, i32 0, i32 0, i32 1
  %173 = bitcast %"class.blink::DisplayItemClient.base"* %172 to %"class.blink::DisplayItemClient"*
  %174 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #10
  %175 = bitcast %"class.blink::BoxPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #10
  %176 = getelementptr inbounds %"class.blink::BoxPainter", %"class.blink::BoxPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutBox"* %165, %"class.blink::LayoutBox"** %176, align 8
  %177 = call { i64, i64 } @_ZN5blink10BoxPainter10VisualRectERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"* nonnull %4, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %11) #10
  %178 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %179 = extractvalue { i64, i64 } %177, 0
  store i64 %179, i64* %178, align 8
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %181 = extractvalue { i64, i64 } %177, 1
  store i64 %181, i64* %180, align 8
  call void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nonnull %171, %"class.blink::GraphicsContext"* dereferenceable(112) %164, %"class.blink::DisplayItemClient"* dereferenceable(16) %173, i32 %169, %"class.blink::IntRect"* nonnull dereferenceable(16) %170) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #10
  %182 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #10
  %183 = bitcast { i64, i64 }* %12 to i32*
  %184 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %13, i64 0, i32 0, i32 1, i32 0
  %185 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %186 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %187 = call { i64, i64 } @_ZNK5blink16LayoutListMarker21GetRelativeMarkerRectEv(%"class.blink::LayoutListMarker"* %186) #10
  %188 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %189 = extractvalue { i64, i64 } %187, 0
  %190 = extractvalue { i64, i64 } %187, 1
  store i64 %190, i64* %185, align 8
  %191 = trunc i64 %189 to i32
  %192 = icmp slt i32 %161, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %191, i32 %161) #10
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !2
  store i32 %197, i32* %183, align 8
  %198 = lshr i64 %189, 32
  %199 = trunc i64 %198 to i32
  %200 = icmp slt i32 %160, 0
  %201 = select i1 %200, i32 -2147483648, i32 2147483647
  %202 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %199, i32 %160) #10
  %203 = extractvalue { i32, i1 } %202, 1
  %204 = extractvalue { i32, i1 } %202, 0
  %205 = select i1 %203, i32 %201, i32 %204, !prof !2
  store i32 %205, i32* %184, align 4
  %206 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %163, align 8
  %207 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %208 = call zeroext i1 @_ZNK5blink16LayoutListMarker7IsImageEv(%"class.blink::LayoutListMarker"* %207) #10
  %209 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %210 = lshr i64 %190, 32
  %211 = trunc i64 %210 to i32
  %212 = trunc i64 %190 to i32
  br i1 %208, label %213, label %272

213:                                              ; preds = %153
  %214 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %209, i64 0, i32 2, i32 0, i32 0
  %215 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %209, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %218 = load %"class.blink::Node"*, %"class.blink::Node"** %217, align 8
  %219 = icmp eq %"class.blink::Node"* %218, null
  br i1 %219, label %220, label %229

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %209, i64 0, i32 0, i32 0, i32 0
  br label %222

222:                                              ; preds = %220, %222
  %223 = phi %"class.blink::LayoutObject"* [ %225, %222 ], [ %221, %220 ]
  %224 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %223, i64 0, i32 7
  %225 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %225, i64 0, i32 6, i32 0, i32 0
  %227 = load %"class.blink::Node"*, %"class.blink::Node"** %226, align 8
  %228 = icmp eq %"class.blink::Node"* %227, null
  br i1 %228, label %222, label %229

229:                                              ; preds = %222, %213
  %230 = phi %"class.blink::Node"* [ %218, %213 ], [ %227, %222 ]
  %231 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %230, i64 0, i32 3, i32 0, i32 0
  %232 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %232, i64 0, i32 2, i32 0, i32 0
  %234 = load %"class.blink::Document"*, %"class.blink::Document"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %209, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %236 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %235, align 8
  %237 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #10
  %238 = sitofp i32 %212 to float
  %239 = fmul float %238, 1.562500e-02
  %240 = sitofp i32 %211 to float
  %241 = fmul float %240, 1.562500e-02
  %242 = insertelement <2 x float> undef, float %239, i32 0
  %243 = insertelement <2 x float> %242, float %241, i32 1
  store <2 x float> %243, <2 x float>* %14, align 8
  %244 = bitcast %"class.blink::StyleImage"* %215 to %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)***
  %245 = load %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)**, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*** %244, align 8
  %246 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)** %245, i64 11
  %247 = load %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)** %246, align 8
  %248 = call %"class.blink::Image"* %247(%"class.blink::StyleImage"* %215, %"class.blink::ImageResourceObserver"* dereferenceable(8) %216, %"class.blink::Document"* dereferenceable(2848) %234, %"class.blink::ComputedStyle"* dereferenceable(104) %236, %"class.blink::FloatSize"* nonnull dereferenceable(8) %15) #10
  %249 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #10
  %250 = sitofp i32 %197 to float
  %251 = fmul float %250, 1.562500e-02
  %252 = sitofp i32 %205 to float
  %253 = fmul float %252, 1.562500e-02
  %254 = insertelement <2 x float> undef, float %251, i32 0
  %255 = insertelement <2 x float> %254, float %253, i32 1
  %256 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %255, <2 x float>* %256, align 8
  %257 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %243, <2 x float>* %257, align 8
  call void @_ZN5blink15GraphicsContext9DrawImageEPNS_5ImageENS1_17ImageDecodingModeERKNS_9FloatRectEPS5_b11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"* %206, %"class.blink::Image"* %248, i32 1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %17, %"class.blink::FloatRect"* null, i1 zeroext false, i32 3, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #10
  %258 = icmp eq %"class.blink::Image"* %248, null
  br i1 %258, label %271, label %259

259:                                              ; preds = %229
  %260 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %248, i64 0, i32 1, i32 0
  %261 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1897", %"class.base::RefCountedThreadSafe.1897"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = atomicrmw sub i32* %261, i32 1 acq_rel
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %271

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1897", %"class.base::RefCountedThreadSafe.1897"* %260, i64 -2
  %266 = bitcast %"class.base::RefCountedThreadSafe.1897"* %265 to %"class.blink::Image"*
  %267 = bitcast %"class.base::RefCountedThreadSafe.1897"* %265 to void (%"class.blink::Image"*)***
  %268 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %268, i64 1
  %270 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %269, align 8
  call void %270(%"class.blink::Image"* nonnull %266) #10
  br label %271

271:                                              ; preds = %229, %259, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #10
  br label %841

272:                                              ; preds = %153
  %273 = call i32 @_ZNK5blink16LayoutListMarker20GetListStyleCategoryEv(%"class.blink::LayoutListMarker"* %209) #10
  switch i32 %273, label %278 [
    i32 0, label %841
    i32 1, label %274
  ]

274:                                              ; preds = %272
  %275 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %276 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %275, i64 0, i32 5, i32 0
  %277 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %276, align 8
  call void @_ZN5blink17ListMarkerPainter11PaintSymbolERKNS_9PaintInfoEPKNS_12LayoutObjectERKNS_13ComputedStyleERKNS_10LayoutRectE(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"class.blink::LayoutObject"* %275, %"class.blink::ComputedStyle"* dereferenceable(104) %277, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %13)
  br label %841

278:                                              ; preds = %272
  %279 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %280 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %279, i64 0, i32 1, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %841, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %841, label %287

287:                                              ; preds = %283
  %288 = bitcast %"class.blink::Color"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %288) #10
  %289 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %18, i64 0, i32 0
  store i32 -1431655766, i32* %289, align 4
  %290 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #10
  %291 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %279, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %292 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %291, align 8
  %293 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %292, %"class.blink::CSSProperty"* dereferenceable(24) %290) #10
  store i32 %293, i32* %289, align 4
  %294 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %295 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %294, i64 0, i32 6, i32 0, i32 0
  %296 = load %"class.blink::Node"*, %"class.blink::Node"** %295, align 8
  %297 = icmp eq %"class.blink::Node"* %296, null
  br i1 %297, label %298, label %305

298:                                              ; preds = %287, %298
  %299 = phi %"class.blink::LayoutObject"* [ %301, %298 ], [ %294, %287 ]
  %300 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %299, i64 0, i32 7
  %301 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %301, i64 0, i32 6, i32 0, i32 0
  %303 = load %"class.blink::Node"*, %"class.blink::Node"** %302, align 8
  %304 = icmp eq %"class.blink::Node"* %303, null
  br i1 %304, label %298, label %305

305:                                              ; preds = %298, %287
  %306 = phi %"class.blink::Node"* [ %296, %287 ], [ %303, %298 ]
  %307 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %306, i64 0, i32 3, i32 0, i32 0
  %308 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %308, i64 0, i32 2, i32 0, i32 0
  %310 = load %"class.blink::Document"*, %"class.blink::Document"** %309, align 8
  %311 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %294, i64 0, i32 5, i32 0
  %312 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %311, align 8
  %313 = call zeroext i1 @_ZN5blink14BoxPainterBase41ShouldForceWhiteBackgroundForPrintEconomyERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848) %310, %"class.blink::ComputedStyle"* dereferenceable(104) %312) #10
  br i1 %313, label %314, label %317

314:                                              ; preds = %305
  %315 = load i32, i32* %289, align 4
  %316 = call i32 @_ZN5blink15TextPainterBase27TextColorForWhiteBackgroundENS_5ColorE(i32 %315) #10
  store i32 %316, i32* %289, align 4
  br label %317

317:                                              ; preds = %314, %305
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %206) #10
  %318 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %206, i64 0, i32 4
  %319 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %318, align 8
  call void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %319, %"class.blink::Color"* nonnull dereferenceable(4) %18) #10
  %320 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %321 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %320, i64 0, i32 5, i32 0
  %322 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %322, i64 0, i32 0, i32 0, i32 0, i32 0
  %324 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %324, i64 0, i32 1, i32 0, i32 0
  %326 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %326, i64 0, i32 1
  %328 = bitcast %"class.blink::TextRun"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %328) #10
  %329 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 2
  %330 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 3
  %331 = bitcast %"class.blink::TextRun"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %331, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %330, align 8
  %332 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %332, align 4
  %333 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 5
  store i16 -21846, i16* %333, align 8
  %334 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 0
  store i8 -86, i8* %334, align 2
  %335 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 1
  store i8 -86, i8* %335, align 1
  %336 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %336, align 4
  %337 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 1
  %338 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %320, i64 2, i32 6
  %339 = bitcast %"class.blink::UntracedMember"* %338 to %"class.WTF::String"*
  %340 = bitcast i8* %337 to i64*
  store i64 -6148914691236517206, i64* %340, align 4
  %341 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %321, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* nonnull sret %19, %"class.blink::Font"* dereferenceable(88) %327, %"class.WTF::String"* dereferenceable(8) %339, %"class.blink::ComputedStyle"* dereferenceable(104) %341, i32 0) #10
  %342 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %342, i64 0, i32 5, i32 0
  %344 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %344, i64 0, i32 0, i32 9
  %346 = bitcast [20 x i8]* %345 to i160*
  %347 = load i160, i160* %346, align 8
  %348 = and i160 %347, 15211807202738752817960438464512
  %349 = icmp eq i160 %348, 0
  br i1 %349, label %479, label %350

350:                                              ; preds = %317
  %351 = call i1 @llvm.is.constant.i32(i32 %161) #10
  br i1 %351, label %352, label %356

352:                                              ; preds = %350
  %353 = sub i32 0, %161
  %354 = icmp eq i32 %353, -2147483648
  %355 = select i1 %354, i32 2147483647, i32 %353
  br label %361

356:                                              ; preds = %350
  %357 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %161) #10
  %358 = extractvalue { i32, i1 } %357, 1
  %359 = extractvalue { i32, i1 } %357, 0
  %360 = select i1 %358, i32 2147483647, i32 %359
  br label %361

361:                                              ; preds = %356, %352
  %362 = phi i32 [ %355, %352 ], [ %360, %356 ]
  %363 = call i1 @llvm.is.constant.i32(i32 %160) #10
  br i1 %363, label %364, label %368

364:                                              ; preds = %361
  %365 = sub i32 0, %160
  %366 = icmp eq i32 %365, -2147483648
  %367 = select i1 %366, i32 2147483647, i32 %365
  br label %373

368:                                              ; preds = %361
  %369 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %160) #10
  %370 = extractvalue { i32, i1 } %369, 1
  %371 = extractvalue { i32, i1 } %369, 0
  %372 = select i1 %370, i32 2147483647, i32 %371
  br label %373

373:                                              ; preds = %364, %368
  %374 = phi i32 [ %367, %364 ], [ %372, %368 ]
  %375 = icmp slt i32 %362, 0
  %376 = select i1 %375, i32 -2147483648, i32 2147483647
  %377 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %197, i32 %362) #10
  %378 = extractvalue { i32, i1 } %377, 1
  %379 = extractvalue { i32, i1 } %377, 0
  %380 = select i1 %378, i32 %376, i32 %379, !prof !2
  %381 = icmp slt i32 %374, 0
  %382 = select i1 %381, i32 -2147483648, i32 2147483647
  %383 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %205, i32 %374) #10
  %384 = extractvalue { i32, i1 } %383, 1
  %385 = extractvalue { i32, i1 } %383, 0
  %386 = select i1 %384, i32 %382, i32 %385, !prof !2
  %387 = zext i32 %380 to i64
  %388 = shl nuw i64 %387, 32
  %389 = zext i32 %386 to i64
  %390 = or i64 %388, %389
  %391 = shl i64 %190, 32
  %392 = or i64 %391, %210
  store i64 %390, i64* %188, align 8
  store i64 %392, i64* %185, align 8
  %393 = sdiv i32 %161, 64
  %394 = srem i32 %161, 64
  %395 = add nsw i32 %394, 32
  %396 = ashr i32 %395, 6
  %397 = add nsw i32 %396, %393
  %398 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %342, i64 1, i32 4, i32 0, i64 4
  %399 = bitcast i8* %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = icmp sgt i32 %400, -1
  %402 = select i1 %401, i32 -2147483648, i32 2147483647
  %403 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %160, i32 %400) #10
  %404 = extractvalue { i32, i1 } %403, 1
  %405 = extractvalue { i32, i1 } %403, 0
  %406 = select i1 %404, i32 %402, i32 %405, !prof !2
  %407 = sdiv i32 %406, 64
  %408 = srem i32 %406, 64
  %409 = add nsw i32 %408, 32
  %410 = ashr i32 %409, 6
  %411 = add nsw i32 %410, %407
  %412 = icmp sgt i32 %397, 33554431
  br i1 %412, label %417, label %413

413:                                              ; preds = %373
  %414 = icmp slt i32 %397, -33554432
  %415 = shl i32 %397, 6
  %416 = select i1 %414, i32 -2147483648, i32 %415
  br label %417

417:                                              ; preds = %413, %373
  %418 = phi i32 [ 2147483647, %373 ], [ %416, %413 ]
  %419 = icmp sgt i32 %411, 33554431
  br i1 %419, label %424, label %420

420:                                              ; preds = %417
  %421 = icmp slt i32 %411, -33554432
  %422 = shl i32 %411, 6
  %423 = select i1 %421, i32 -2147483648, i32 %422
  br label %424

424:                                              ; preds = %420, %417
  %425 = phi i32 [ 2147483647, %417 ], [ %423, %420 ]
  %426 = icmp slt i32 %418, 0
  %427 = select i1 %426, i32 -2147483648, i32 2147483647
  %428 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %386, i32 %418) #10
  %429 = extractvalue { i32, i1 } %428, 1
  %430 = extractvalue { i32, i1 } %428, 0
  %431 = select i1 %429, i32 %427, i32 %430
  store i32 %431, i32* %183, align 8
  %432 = icmp slt i32 %425, 0
  %433 = select i1 %432, i32 -2147483648, i32 2147483647
  %434 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %380, i32 %425) #10
  %435 = extractvalue { i32, i1 } %434, 1
  %436 = extractvalue { i32, i1 } %434, 0
  %437 = select i1 %435, i32 %433, i32 %436, !prof !2
  store i32 %437, i32* %184, align 4
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %206) #10
  %438 = sitofp i32 %431 to float
  %439 = fmul float %438, 1.562500e-02
  %440 = icmp slt i32 %212, 0
  %441 = select i1 %440, i32 -2147483648, i32 2147483647
  %442 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %437, i32 %212) #10
  %443 = extractvalue { i32, i1 } %442, 1
  %444 = extractvalue { i32, i1 } %442, 0
  %445 = select i1 %443, i32 %441, i32 %444
  %446 = sitofp i32 %445 to float
  %447 = fmul float %446, 1.562500e-02
  call void @_ZN5blink15GraphicsContext9TranslateEff(%"class.blink::GraphicsContext"* %206, float %439, float %447) #10
  call void @_ZN5blink15GraphicsContext6RotateEf(%"class.blink::GraphicsContext"* %206, float 0x3FF921FB60000000) #10
  %448 = call i1 @llvm.is.constant.i32(i32 %431) #10
  br i1 %448, label %449, label %453

449:                                              ; preds = %424
  %450 = sub i32 0, %431
  %451 = icmp eq i32 %450, -2147483648
  %452 = select i1 %451, i32 2147483647, i32 %450
  br label %458

453:                                              ; preds = %424
  %454 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %431) #10
  %455 = extractvalue { i32, i1 } %454, 1
  %456 = extractvalue { i32, i1 } %454, 0
  %457 = select i1 %455, i32 2147483647, i32 %456
  br label %458

458:                                              ; preds = %449, %453
  %459 = phi i32 [ %452, %449 ], [ %457, %453 ]
  %460 = sitofp i32 %459 to float
  %461 = fmul float %460, 1.562500e-02
  %462 = call i1 @llvm.is.constant.i32(i32 %445) #10
  br i1 %462, label %463, label %467

463:                                              ; preds = %458
  %464 = sub i32 0, %445
  %465 = icmp eq i32 %464, -2147483648
  %466 = select i1 %465, i32 2147483647, i32 %464
  br label %472

467:                                              ; preds = %458
  %468 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %445) #10
  %469 = extractvalue { i32, i1 } %468, 1
  %470 = extractvalue { i32, i1 } %468, 0
  %471 = select i1 %469, i32 2147483647, i32 %470
  br label %472

472:                                              ; preds = %463, %467
  %473 = phi i32 [ %466, %463 ], [ %471, %467 ]
  %474 = sitofp i32 %473 to float
  %475 = fmul float %474, 1.562500e-02
  call void @_ZN5blink15GraphicsContext9TranslateEff(%"class.blink::GraphicsContext"* %206, float %461, float %475) #10
  %476 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %477 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %476, i64 0, i32 5, i32 0
  %478 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %477, align 8
  br label %479

479:                                              ; preds = %472, %317
  %480 = phi i32 [ %205, %317 ], [ %437, %472 ]
  %481 = phi i32 [ %197, %317 ], [ %431, %472 ]
  %482 = phi %"class.blink::ComputedStyle"* [ %344, %317 ], [ %478, %472 ]
  %483 = phi i8 [ 0, %317 ], [ 1, %472 ]
  %484 = bitcast %"struct.blink::TextRunPaintInfo"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %484) #10
  %485 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %20, i64 0, i32 0
  %486 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %20, i64 0, i32 1
  %487 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %20, i64 0, i32 2
  store %"class.blink::TextRun"* %19, %"class.blink::TextRun"** %485, align 8
  store i32 0, i32* %486, align 8
  %488 = load i32, i32* %329, align 4
  store i32 %488, i32* %487, align 4
  %489 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %482, i64 0, i32 0, i32 0, i32 0, i32 0
  %490 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %489, align 8
  %491 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %490, i64 0, i32 1, i32 0, i32 0
  %492 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %491, align 8
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %492, i64 0, i32 1
  %494 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %493) #10
  %495 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %494, i64 0, i32 2
  %496 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %495, align 8
  %497 = icmp eq %"class.blink::SimpleFontData"* %496, null
  br i1 %497, label %498, label %501

498:                                              ; preds = %479
  %499 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %493, i64 0, i32 0
  %500 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %494, %"class.blink::FontDescription"* dereferenceable(80) %499) #10
  store %"class.blink::SimpleFontData"* %500, %"class.blink::SimpleFontData"** %495, align 8
  br label %501

501:                                              ; preds = %479, %498
  %502 = phi %"class.blink::SimpleFontData"* [ %496, %479 ], [ %500, %498 ]
  %503 = bitcast %"class.blink::FloatPoint"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503) #10
  %504 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %504, align 4
  %505 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %505, align 4
  %506 = sdiv i32 %481, 64
  %507 = srem i32 %481, 64
  %508 = add nsw i32 %507, 32
  %509 = ashr i32 %508, 6
  %510 = add nsw i32 %509, %506
  %511 = sitofp i32 %510 to float
  %512 = sdiv i32 %480, 64
  %513 = srem i32 %480, 64
  %514 = add nsw i32 %513, 32
  %515 = ashr i32 %514, 6
  %516 = add nsw i32 %515, %512
  %517 = icmp eq %"class.blink::SimpleFontData"* %502, null
  br i1 %517, label %521, label %518

518:                                              ; preds = %501
  %519 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %502, i64 0, i32 1, i32 9
  %520 = load i32, i32* %519, align 4
  br label %521

521:                                              ; preds = %501, %518
  %522 = phi i32 [ %520, %518 ], [ 0, %501 ]
  %523 = add nsw i32 %516, %522
  %524 = sitofp i32 %523 to float
  store float %511, float* %504, align 4
  store float %524, float* %505, align 4
  %525 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %526 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %525, i64 0, i32 1, i32 0, i32 0
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %527, null
  br i1 %528, label %546, label %529

529:                                              ; preds = %521
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %546, label %533

533:                                              ; preds = %529
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = load atomic i32, i32* %534 monotonic, align 4
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 1
  br i1 %537, label %543, label %539

539:                                              ; preds = %533
  %540 = bitcast %"class.WTF::StringImpl"* %538 to i8*
  %541 = load i8, i8* %540, align 1
  %542 = zext i8 %541 to i16
  br label %546

543:                                              ; preds = %533
  %544 = bitcast %"class.WTF::StringImpl"* %538 to i16*
  %545 = load i16, i16* %544, align 2
  br label %546

546:                                              ; preds = %529, %521, %539, %543
  %547 = phi i16 [ 0, %529 ], [ 0, %521 ], [ %542, %539 ], [ %545, %543 ]
  %548 = zext i16 %547 to i32
  %549 = call i32 @u_charDirection_69(i32 %548) #10
  %550 = icmp eq i32 %549, 1
  %551 = bitcast %"class.WTF::StringBuilder"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %551) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %551, i8 -86, i64 48, i1 false)
  %552 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %552, align 8
  %553 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %22, i64 0, i32 1
  %554 = bitcast %union.anon.1922* %553 to i8*
  store i8 0, i8* %554, align 8
  %555 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %22, i64 0, i32 2
  store i32 0, i32* %555, align 8
  %556 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %22, i64 0, i32 3
  store i8 1, i8* %556, align 4
  %557 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %22, i64 0, i32 4
  store i8 0, i8* %557, align 1
  br i1 %550, label %558, label %620

558:                                              ; preds = %546
  %559 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %560 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %559, i64 0, i32 1, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %562, label %563, label %564

563:                                              ; preds = %558
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %22, i32 0) #10
  br label %569

564:                                              ; preds = %558
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 1
  %566 = load i32, i32* %565, align 4
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %22, i32 %566) #10
  %567 = add i32 %566, -1
  %568 = icmp sgt i32 %567, -1
  br i1 %568, label %589, label %569

569:                                              ; preds = %616, %563, %564
  %570 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570) #10
  %571 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %22) #10
  %572 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %571, %"class.WTF::StringImpl"** %572, align 8
  call void @_ZN5blink7TextRun7SetTextERKN3WTF6StringE(%"class.blink::TextRun"* nonnull %19, %"class.WTF::String"* nonnull dereferenceable(8) %23) #10
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %574, label %588, label %575

575:                                              ; preds = %569
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load atomic i32, i32* %576 monotonic, align 4
  %578 = and i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %581 = load i32, i32* %580, align 4
  br i1 %579, label %582, label %584

582:                                              ; preds = %575
  %583 = add i32 %581, -1
  store i32 %583, i32* %580, align 4
  br label %584

584:                                              ; preds = %582, %575
  %585 = phi i32 [ %583, %582 ], [ %581, %575 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %573) #10
  br label %588

588:                                              ; preds = %569, %584, %587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #10
  br label %620

589:                                              ; preds = %564, %616
  %590 = phi i32 [ %618, %616 ], [ %567, %564 ]
  %591 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %592 = getelementptr inbounds %"class.blink::LayoutListMarker", %"class.blink::LayoutListMarker"* %591, i64 0, i32 1, i32 0, i32 0
  %593 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %592, align 8
  %594 = icmp eq %"class.WTF::StringImpl"* %593, null
  br i1 %594, label %616, label %595

595:                                              ; preds = %589
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 1
  %597 = load i32, i32* %596, align 4
  %598 = icmp ugt i32 %597, %590
  br i1 %598, label %599, label %616

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 1
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 1
  br i1 %603, label %611, label %605

605:                                              ; preds = %599
  %606 = bitcast %"class.WTF::StringImpl"* %604 to i8*
  %607 = zext i32 %590 to i64
  %608 = getelementptr inbounds i8, i8* %606, i64 %607
  %609 = load i8, i8* %608, align 1
  %610 = zext i8 %609 to i16
  br label %616

611:                                              ; preds = %599
  %612 = bitcast %"class.WTF::StringImpl"* %604 to i16*
  %613 = zext i32 %590 to i64
  %614 = getelementptr inbounds i16, i16* %612, i64 %613
  %615 = load i16, i16* %614, align 2
  br label %616

616:                                              ; preds = %589, %595, %605, %611
  %617 = phi i16 [ 0, %595 ], [ 0, %589 ], [ %610, %605 ], [ %615, %611 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %22, i16 zeroext %617)
  %618 = add i32 %590, -1
  %619 = icmp sgt i32 %618, -1
  br i1 %619, label %589, label %569

620:                                              ; preds = %588, %546
  %621 = icmp eq i32 %273, 3
  br i1 %621, label %622, label %625

622:                                              ; preds = %620
  call void @_ZN5blink15GraphicsContext8DrawTextERKNS_4FontERKNS_16TextRunPaintInfoERKNS_10FloatPointEi(%"class.blink::GraphicsContext"* %206, %"class.blink::Font"* dereferenceable(88) %327, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %20, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, i32 0) #10
  %623 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %206, i64 0, i32 1
  %624 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %623, align 8
  call void @_ZN5blink15PaintController14SetTextPaintedEv(%"class.blink::PaintController"* %624) #10
  br label %821

625:                                              ; preds = %620
  %626 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %626) #10
  %627 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %627, align 8
  %628 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %628) #10
  %629 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %629, align 8
  %630 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %34, align 8
  %631 = call dereferenceable(160) %"class.blink::CounterStyle"* @_ZNK5blink16LayoutListMarker15GetCounterStyleEv(%"class.blink::LayoutListMarker"* %630) #10
  %632 = getelementptr inbounds %"class.blink::CounterStyle", %"class.blink::CounterStyle"* %631, i64 0, i32 12, i32 0, i32 0
  %633 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %632, align 8
  %634 = icmp eq %"class.WTF::StringImpl"* %633, null
  br i1 %634, label %650, label %635

635:                                              ; preds = %625
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %633, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %637 = load atomic i32, i32* %636 monotonic, align 4
  %638 = and i32 %637, 2
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %650

640:                                              ; preds = %635
  %641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %633, i64 0, i32 0
  %642 = load i32, i32* %641, align 4
  %643 = zext i32 %642 to i33
  %644 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %643, i33 1) #10
  %645 = extractvalue { i33, i1 } %644, 1
  %646 = extractvalue { i33, i1 } %644, 0
  %647 = icmp slt i33 %646, 0
  %648 = or i1 %645, %647
  br i1 %648, label %649, label %653, !prof !2

649:                                              ; preds = %640
  call void @llvm.trap() #10
  unreachable

650:                                              ; preds = %625, %635
  %651 = ptrtoint %"class.WTF::StringImpl"* %633 to i64
  %652 = bitcast %"class.WTF::String"* %24 to i64*
  store i64 %651, i64* %652, align 8
  br label %672

653:                                              ; preds = %640
  %654 = trunc i33 %646 to i32
  store i32 %654, i32* %641, align 4
  %655 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %627, align 8
  %656 = ptrtoint %"class.WTF::StringImpl"* %633 to i64
  %657 = bitcast %"class.WTF::String"* %24 to i64*
  store i64 %656, i64* %657, align 8
  %658 = icmp eq %"class.WTF::StringImpl"* %655, null
  br i1 %658, label %672, label %659

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load atomic i32, i32* %660 monotonic, align 4
  %662 = and i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %665 = load i32, i32* %664, align 4
  br i1 %663, label %666, label %668

666:                                              ; preds = %659
  %667 = add i32 %665, -1
  store i32 %667, i32* %664, align 4
  br label %668

668:                                              ; preds = %666, %659
  %669 = phi i32 [ %667, %666 ], [ %665, %659 ]
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %672

671:                                              ; preds = %668
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %655) #10
  br label %672

672:                                              ; preds = %650, %671, %668, %653
  %673 = getelementptr inbounds %"class.blink::CounterStyle", %"class.blink::CounterStyle"* %631, i64 0, i32 13, i32 0, i32 0
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %693, label %676

676:                                              ; preds = %672
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %693

681:                                              ; preds = %676
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  %684 = zext i32 %683 to i33
  %685 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #10
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !2

690:                                              ; preds = %681
  call void @llvm.trap() #10
  unreachable

691:                                              ; preds = %681
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %682, align 4
  br label %693

693:                                              ; preds = %672, %676, %691
  %694 = ptrtoint %"class.WTF::StringImpl"* %674 to i64
  %695 = bitcast %"class.WTF::String"* %25 to i64*
  %696 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %629, align 8
  store i64 %694, i64* %695, align 8
  %697 = icmp eq %"class.WTF::StringImpl"* %696, null
  br i1 %697, label %711, label %698

698:                                              ; preds = %693
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %698
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i32 [ %706, %705 ], [ %704, %698 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %696) #10
  br label %711

711:                                              ; preds = %710, %707, %693
  %712 = bitcast %"class.blink::TextRun"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %712) #10
  %713 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 2
  %714 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 3
  %715 = bitcast %"class.blink::TextRun"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %715, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %714, align 8
  %716 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %716, align 4
  %717 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 5
  store i16 -21846, i16* %717, align 8
  %718 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 6, i64 0
  store i8 -86, i8* %718, align 2
  %719 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 6, i64 1
  store i8 -86, i8* %719, align 1
  %720 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %720, align 4
  %721 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %26, i64 0, i32 7, i32 1
  %722 = bitcast i8* %721 to i64*
  store i64 -6148914691236517206, i64* %722, align 4
  %723 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %724 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %723, i64 0, i32 5, i32 0
  %725 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %724, align 8
  %726 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %725, i64 0, i32 0, i32 9
  %727 = bitcast [20 x i8]* %726 to i160*
  %728 = load i160, i160* %727, align 8
  %729 = lshr i160 %728, 115
  %730 = trunc i160 %729 to i8
  %731 = and i8 %730, 1
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %26, %"class.blink::Font"* dereferenceable(88) %327, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.blink::ComputedStyle"* dereferenceable(104) %725, i8 zeroext %731, i32 0) #10
  %732 = bitcast %"struct.blink::TextRunPaintInfo"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %732) #10
  %733 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %27, i64 0, i32 0
  %734 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %27, i64 0, i32 1
  %735 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %27, i64 0, i32 2
  store %"class.blink::TextRun"* %26, %"class.blink::TextRun"** %733, align 8
  store i32 0, i32* %734, align 8
  %736 = load i32, i32* %713, align 4
  store i32 %736, i32* %735, align 4
  %737 = bitcast %"class.blink::TextRun"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %737) #10
  %738 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 2
  %739 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 3
  %740 = bitcast %"class.blink::TextRun"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %740, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %739, align 8
  %741 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %741, align 4
  %742 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 5
  store i16 -21846, i16* %742, align 8
  %743 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 6, i64 0
  store i8 -86, i8* %743, align 2
  %744 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 6, i64 1
  store i8 -86, i8* %744, align 1
  %745 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %745, align 4
  %746 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %28, i64 0, i32 7, i32 1
  %747 = bitcast i8* %746 to i64*
  store i64 -6148914691236517206, i64* %747, align 4
  %748 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %749 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %748, i64 0, i32 5, i32 0
  %750 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %749, align 8
  %751 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %750, i64 0, i32 0, i32 9
  %752 = bitcast [20 x i8]* %751 to i160*
  %753 = load i160, i160* %752, align 8
  %754 = lshr i160 %753, 115
  %755 = trunc i160 %754 to i8
  %756 = and i8 %755, 1
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %28, %"class.blink::Font"* dereferenceable(88) %327, %"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.blink::ComputedStyle"* dereferenceable(104) %750, i8 zeroext %756, i32 0) #10
  %757 = bitcast %"struct.blink::TextRunPaintInfo"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %757) #10
  %758 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %29, i64 0, i32 0
  %759 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %29, i64 0, i32 1
  %760 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %29, i64 0, i32 2
  store %"class.blink::TextRun"* %28, %"class.blink::TextRun"** %758, align 8
  store i32 0, i32* %759, align 8
  %761 = load i32, i32* %738, align 4
  store i32 %761, i32* %760, align 4
  %762 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %763 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %762, i64 0, i32 5, i32 0
  %764 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %763, align 8
  %765 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %764, i64 0, i32 0, i32 9
  %766 = bitcast [20 x i8]* %765 to i160*
  %767 = load i160, i160* %766, align 8
  %768 = and i160 %767, 41538374868278621028243970633760768
  %769 = icmp eq i160 %768, 0
  %770 = select i1 %769, %"struct.blink::TextRunPaintInfo"* %27, %"struct.blink::TextRunPaintInfo"* %29
  %771 = select i1 %769, %"class.blink::TextRun"* %26, %"class.blink::TextRun"* %28
  %772 = select i1 %769, %"struct.blink::TextRunPaintInfo"* %29, %"struct.blink::TextRunPaintInfo"* %27
  call void @_ZN5blink15GraphicsContext8DrawTextERKNS_4FontERKNS_16TextRunPaintInfoERKNS_10FloatPointEi(%"class.blink::GraphicsContext"* %206, %"class.blink::Font"* dereferenceable(88) %327, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %770, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, i32 0) #10
  %773 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %327, %"class.blink::TextRun"* nonnull dereferenceable(40) %771, %"class.WTF::HashSet.1933"* null, %"class.blink::FloatRect"* null) #10
  %774 = fptosi float %773 to i32
  %775 = sitofp i32 %774 to float
  %776 = load float, float* %504, align 4
  %777 = fadd float %776, %775
  store float %777, float* %504, align 4
  %778 = load float, float* %505, align 4
  %779 = fadd float %778, 0.000000e+00
  store float %779, float* %505, align 4
  call void @_ZN5blink15GraphicsContext8DrawTextERKNS_4FontERKNS_16TextRunPaintInfoERKNS_10FloatPointEi(%"class.blink::GraphicsContext"* %206, %"class.blink::Font"* dereferenceable(88) %327, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %20, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, i32 0) #10
  %780 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %327, %"class.blink::TextRun"* nonnull dereferenceable(40) %19, %"class.WTF::HashSet.1933"* null, %"class.blink::FloatRect"* null) #10
  %781 = fptosi float %780 to i32
  %782 = sitofp i32 %781 to float
  %783 = load float, float* %504, align 4
  %784 = fadd float %783, %782
  store float %784, float* %504, align 4
  %785 = load float, float* %505, align 4
  %786 = fadd float %785, 0.000000e+00
  store float %786, float* %505, align 4
  call void @_ZN5blink15GraphicsContext8DrawTextERKNS_4FontERKNS_16TextRunPaintInfoERKNS_10FloatPointEi(%"class.blink::GraphicsContext"* %206, %"class.blink::Font"* dereferenceable(88) %327, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %772, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, i32 0) #10
  %787 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %206, i64 0, i32 1
  %788 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %787, align 8
  call void @_ZN5blink15PaintController14SetTextPaintedEv(%"class.blink::PaintController"* %788) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %757) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %737) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %732) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %712) #10
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %629, align 8
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %804, label %791

791:                                              ; preds = %711
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #10
  br label %804

804:                                              ; preds = %711, %800, %803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %628) #10
  %805 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %627, align 8
  %806 = icmp eq %"class.WTF::StringImpl"* %805, null
  br i1 %806, label %820, label %807

807:                                              ; preds = %804
  %808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %809 = load atomic i32, i32* %808 monotonic, align 4
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %813 = load i32, i32* %812, align 4
  br i1 %811, label %814, label %816

814:                                              ; preds = %807
  %815 = add i32 %813, -1
  store i32 %815, i32* %812, align 4
  br label %816

816:                                              ; preds = %814, %807
  %817 = phi i32 [ %815, %814 ], [ %813, %807 ]
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %820

819:                                              ; preds = %816
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %805) #10
  br label %820

820:                                              ; preds = %804, %816, %819
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %626) #10
  br label %821

821:                                              ; preds = %820, %622
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %22) #10
  %822 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %552, align 8
  %823 = icmp eq %"class.WTF::StringImpl"* %822, null
  br i1 %823, label %837, label %824

824:                                              ; preds = %821
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %826 = load atomic i32, i32* %825 monotonic, align 4
  %827 = and i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 0
  %830 = load i32, i32* %829, align 4
  br i1 %828, label %831, label %833

831:                                              ; preds = %824
  %832 = add i32 %830, -1
  store i32 %832, i32* %829, align 4
  br label %833

833:                                              ; preds = %831, %824
  %834 = phi i32 [ %832, %831 ], [ %830, %824 ]
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %837

836:                                              ; preds = %833
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %822) #10
  br label %837

837:                                              ; preds = %821, %833, %836
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %551) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %484) #10
  %838 = icmp eq i8 %483, 0
  br i1 %838, label %840, label %839

839:                                              ; preds = %837
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %206) #10
  br label %840

840:                                              ; preds = %837, %839
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %328) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %288) #10
  br label %841

841:                                              ; preds = %278, %274, %840, %272, %283, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #10
  call void @_ZN5blink15DrawingRecorderD2Ev(%"class.blink::DrawingRecorder"* nonnull %171) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %162) #10
  br label %842

842:                                              ; preds = %136, %841
  %843 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 5
  %844 = load i8, i8* %843, align 8, !range !19
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %847, label %846

846:                                              ; preds = %842
  call void @_ZN5blink16ScopedPaintState37FinishPaintOffsetTranslationAsDrawingEv(%"class.blink::ScopedPaintState"* nonnull %6) #10
  br label %847

847:                                              ; preds = %846, %842
  %848 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %849 = load i8, i8* %848, align 8, !range !19
  %850 = icmp eq i8 %849, 0
  br i1 %850, label %855, label %851

851:                                              ; preds = %847
  %852 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %853 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %852, align 8
  %854 = getelementptr inbounds %"class.blink::ScopedPaintState", %"class.blink::ScopedPaintState"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN5blink15PaintController33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintController"* %853, %"struct.blink::DisplayItem::Id"* null, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24) %854) #10
  store i8 0, i8* %848, align 8
  br label %855

855:                                              ; preds = %847, %851
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %54) #10
  br label %856

856:                                              ; preds = %33, %2, %45, %855
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { i64, i64 } @_ZNK5blink16LayoutListMarker21GetRelativeMarkerRectEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16LayoutListMarker7IsImageEv(%"class.blink::LayoutListMarker"*) unnamed_addr #2

declare void @_ZN5blink15GraphicsContext9DrawImageEPNS_5ImageENS1_17ImageDecodingModeERKNS_9FloatRectEPS5_b11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"*, %"class.blink::Image"*, i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"*, i1 zeroext, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink16LayoutListMarker20GetListStyleCategoryEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #2

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext9TranslateEff(%"class.blink::GraphicsContext"*, float, float) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext6RotateEf(%"class.blink::GraphicsContext"*, float) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !19
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !19
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1923"* %17, i8* nonnull dereferenceable(1) %3) #10
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !19
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %42
  %50 = bitcast %union.anon.1922* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.1922* %43 to %"class.WTF::Vector.1928"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1928"* %57, i16* nonnull dereferenceable(2) %4) #10
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare void @_ZN5blink7TextRun7SetTextERKN3WTF6StringE(%"class.blink::TextRun"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8DrawTextERKNS_4FontERKNS_16TextRunPaintInfoERKNS_10FloatPointEi(%"class.blink::GraphicsContext"*, %"class.blink::Font"* dereferenceable(88), %"struct.blink::TextRunPaintInfo"* dereferenceable(16), %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZN5blink15PaintController14SetTextPaintedEv(%"class.blink::PaintController"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.blink::CounterStyle"* @_ZNK5blink16LayoutListMarker15GetCounterStyleEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #2

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext, i32) local_unnamed_addr #2

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.1933"*, %"class.blink::FloatRect"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DrawingRecorderD2Ev(%"class.blink::DrawingRecorder"*) unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1725", align 8
  %3 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 4
  %4 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %4, i64 0, i32 5
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %1
  %9 = add i16 %6, -1
  store i16 %9, i16* %5, align 8
  %10 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %12
  br i1 %16, label %17, label %65

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::unique_ptr.1725"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %20 = tail call noalias i8* @malloc(i64 192) #10
  %21 = bitcast i8* %20 to %"class.blink::GraphicsContextState"*
  tail call void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"* %21, %"class.blink::GraphicsContextState"* dereferenceable(192) %19) #10
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.1725"* %2 to i8**
  store i8* %20, i8** %23, align 8
  %24 = load i32, i32* %14, align 4
  %25 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %37, label %28, !prof !2

28:                                               ; preds = %17
  %29 = ptrtoint i8* %20 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.1725"*, %"class.std::__1::unique_ptr.1725"** %30, align 8
  %32 = zext i32 %24 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %31, i64 %32
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.1725"* %33 to i64*
  store i64 %29, i64* %34, align 8
  %35 = load i32, i32* %14, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %14, align 4
  br label %38

37:                                               ; preds = %17
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1722"* %13, %"class.std::__1::unique_ptr.1725"* nonnull dereferenceable(8) %2) #10
  br label %38

38:                                               ; preds = %28, %37
  %39 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %22, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %40 = icmp eq %"class.blink::GraphicsContextState"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 2, i32 5, i32 0
  %43 = load %class.SkPathEffect*, %class.SkPathEffect** %42, align 8
  %44 = icmp eq %class.SkPathEffect* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkPathEffect* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkPathEffect* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #10
  br label %55

55:                                               ; preds = %49, %45, %41
  %56 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 1
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %56) #10
  %57 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 0
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %57) #10
  %58 = bitcast %"class.blink::GraphicsContextState"* %39 to i8*
  call void @free(i8* %58) #10
  br label %59

59:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %60 = load i32, i32* %10, align 8
  %61 = call dereferenceable(8) %"class.std::__1::unique_ptr.1725"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1722"* %13, i32 %60) #10
  %62 = bitcast %"class.std::__1::unique_ptr.1725"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::GraphicsContextState"** %3 to i64*
  store i64 %63, i64* %64, align 8
  br label %70

65:                                               ; preds = %8
  %66 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %67 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.1725"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1722"* %13, i32 %12) #10
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %68, align 8
  store %"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"** %3, align 8
  tail call void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"* dereferenceable(192) %66) #10
  br label %70

70:                                               ; preds = %1, %59, %65
  ret void
}

declare void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1722"*, %"class.std::__1::unique_ptr.1725"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1725"*, %"class.std::__1::unique_ptr.1725"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.1725"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.1725"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !20

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.1725"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1722"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1725"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.1725"*, %"class.std::__1::unique_ptr.1725"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.1725"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.1725"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !20

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.1722"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.1722"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1725"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.1725"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.1725"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !20

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.1725"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1722"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.1725"*, %"class.std::__1::unique_ptr.1725"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.1725"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.1725"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !20

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.1722"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.1722"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.1725"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.1725"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.1725"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.1725"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1725"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1725"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.1725"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1722"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1722", %"class.WTF::Vector.1722"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1725"*, %"class.std::__1::unique_ptr.1725"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1725"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.1725"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"*, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #2

declare void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink16ScopedPaintState31AdjustForPaintOffsetTranslationERKNS_12LayoutObjectERKNS_26TransformPaintPropertyNodeE(%"class.blink::ScopedPaintState"*, %"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %0, i64 0, i32 2
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %11) #10
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %21) #10
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !2
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %29 = bitcast %"struct.blink::PhysicalSize"* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = icmp slt i32 %17, -2147483584
  %32 = ashr i32 %17, 6
  %33 = select i1 %31, i32 -33554432, i32 %32, !prof !2
  %34 = icmp slt i32 %27, -2147483584
  %35 = ashr i32 %27, 6
  %36 = select i1 %34, i32 -33554432, i32 %35, !prof !2
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = trunc i64 %30 to i32
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %39) #10
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = lshr i64 %30, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %47) #10
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = icmp sgt i32 %45, 2147483583
  br i1 %54, label %62, label %55, !prof !2

55:                                               ; preds = %3
  %56 = icmp sgt i32 %45, -1
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = add nuw nsw i32 %45, 63
  %59 = sdiv i32 %58, 64
  br label %62

60:                                               ; preds = %55
  %61 = sdiv i32 %45, 64
  br label %62

62:                                               ; preds = %60, %57, %3
  %63 = phi i32 [ %59, %57 ], [ %61, %60 ], [ 33554431, %3 ]
  %64 = icmp sgt i32 %53, 2147483583
  br i1 %64, label %72, label %65, !prof !2

65:                                               ; preds = %62
  %66 = icmp sgt i32 %53, -1
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = add nuw nsw i32 %53, 63
  %69 = sdiv i32 %68, 64
  br label %72

70:                                               ; preds = %65
  %71 = sdiv i32 %53, 64
  br label %72

72:                                               ; preds = %62, %67, %70
  %73 = phi i32 [ %69, %67 ], [ %71, %70 ], [ 33554431, %62 ]
  %74 = sub nsw i32 %63, %33
  %75 = sub nsw i32 %73, %36
  %76 = zext i32 %75 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %74 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %33 to i64
  %81 = or i64 %38, %80
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %79, i64* %83, align 8
  %84 = call zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"* %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret i1 %84
}

declare zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink10BoxPainter10VisualRectERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare i32 @u_charDirection_69(i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1923"*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1923"* %0, i32 %5) #10
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1923"* %0, i32 %5) #10
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1923"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !20

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1923"* %0, i32 %27) #10
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1923"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #10
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1924"* %18, i8* nonnull %6) #10
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !20

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #10
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !20

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1924"* %46, i8* %42) #10
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1924"*, i8*) local_unnamed_addr #5 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #10
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1928"*, i16* dereferenceable(2)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1928"* %0, i32 %5) #10
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1928"* %0, i32 %5) #10
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1928"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !20

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1928"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1928"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1929"* %19, i16* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !20

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #10
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !20

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1929"* %53, i16* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1929"*, i16*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

declare void @_ZN5blink16ScopedPaintState37FinishPaintOffsetTranslationAsDrawingEv(%"class.blink::ScopedPaintState"*) local_unnamed_addr #2

declare void @_ZN5blink15PaintController33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintController"*, %"struct.blink::DisplayItem::Id"*, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind readnone }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 4001, i32 4000000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_126GetCanonicalDisclosurePathERKNS_13ComputedStyleEb: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_126GetCanonicalDisclosurePathERKNS_13ComputedStyleEb"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE"}
!10 = !{!11, !5}
!11 = distinct !{!11, !12, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE"}
!13 = !{!14, !5}
!14 = distinct !{!14, !15, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE"}
!16 = !{!17, !5}
!17 = distinct !{!17, !18, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink12_GLOBAL__N_110CreatePathEPKNS_10FloatPointE"}
!19 = !{i8 0, i8 2}
!20 = !{!"branch_weights", i32 2000, i32 1}
