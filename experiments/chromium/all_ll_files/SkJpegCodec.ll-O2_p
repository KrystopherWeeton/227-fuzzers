; ModuleID = '../../third_party/skia/src/codec/SkJpegCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkJpegCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%struct.skjpeg_source_mgr = type { %struct.jpeg_source_mgr, %class.SkStream*, [1024 x i8] }
%class.SkStream = type { i32 (...)** }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [32 x i8] }
%class.SkTArray = type { [1 x %struct.__jmp_buf_tag]**, i64 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%class.SkJpegCodec = type { %class.SkCodec.base, %"class.std::__1::unique_ptr.16", i32, %class.SkAutoTMalloc, i8*, i32*, %struct.SkIRect, %"class.std::__1::unique_ptr.26" }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.0, [8 x i8] }
%struct.anon.0 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.JpegDecoderMgr* }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.SkSwizzler* }
%class.SkSwizzler = type <{ %class.SkSampler.base, [4 x i8], void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.JpegDecoderMgr = type <{ %struct.jpeg_decompress_struct, %struct.skjpeg_source_mgr, %struct.skjpeg_error_mgr, %struct.jpeg_progress_mgr, i8, [7 x i8] }>
%struct.skjpeg_error_mgr = type { %struct.jpeg_error_mgr, %class.SkSTArray }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%"class.skjpeg_error_mgr::AutoPushJmpBuf" = type { %struct.skjpeg_error_mgr*, [1 x %struct.__jmp_buf_tag] }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.38", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.38" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.39", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.39" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque

$_ZN11SkJpegCodecD2Ev = comdat any

$_ZN11SkJpegCodecD0Ev = comdat any

$_ZNK11SkJpegCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK7SkCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN16SkYUVAPixmapInfoD2Ev = comdat any

$_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_ = comdat any

@_ZZN11SkJpegCodec6IsJpegEPKvmE7jpegSig = internal constant [3 x i8] c"\FF\D8\FF", align 1
@.str = private unnamed_addr constant [11 x i8] c"ReadHeader\00", align 1
@_ZTV11SkJpegCodec = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkJpegCodec*)* @_ZN11SkJpegCodecD2Ev to i8*), i8* bitcast (void (%class.SkJpegCodec*)* @_ZN11SkJpegCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkJpegCodec*, float)* @_ZNK11SkJpegCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkJpegCodec*, %struct.SkISize*)* @_ZN11SkJpegCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkJpegCodec*)* @_ZNK11SkJpegCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkJpegCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN11SkJpegCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkJpegCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK11SkJpegCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkJpegCodec*, %class.SkYUVAPixmaps*)* @_ZN11SkJpegCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkJpegCodec*)* @_ZN11SkJpegCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkJpegCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN11SkJpegCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkJpegCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN11SkJpegCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkJpegCodec*, i32)* @_ZN11SkJpegCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkJpegCodec*, i8*, i32, i64)* @_ZN11SkJpegCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkJpegCodec*, i1)* @_ZN11SkJpegCodec10getSamplerEb to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"onRewind\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"onDimensionsSupported\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"setjmp\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"startDecompress\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Incomplete image data\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"onSkipScanlines\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"onGetYUVAPlanes\00", align 1
@__const._Z13SkGetJpegInfoPKvmP7SkISizePN13SkEncodedInfo5ColorEP15SkEncodedOrigin.decoderMgr = private unnamed_addr constant <{ { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, [4 x i8], double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [4 x i8], [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, [4 x i8], %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, [1 x i8], i16, i16, i32, i8, [3 x i8], i32, [4 x i8], %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x i8], [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }, %struct.skjpeg_source_mgr, { { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, [4 x i8], i8**, i32, i32 }, %class.SkSTArray }, %struct.jpeg_progress_mgr, i8, [7 x i8] }> <{ { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, [4 x i8], double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [4 x i8], [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, [4 x i8], %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, [1 x i8], i16, i16, i32, i8, [3 x i8], i32, [4 x i8], %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x i8], [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* } { %struct.jpeg_error_mgr* inttoptr (i64 -6148914691236517206 to %struct.jpeg_error_mgr*), %struct.jpeg_memory_mgr* inttoptr (i64 -6148914691236517206 to %struct.jpeg_memory_mgr*), %struct.jpeg_progress_mgr* inttoptr (i64 -6148914691236517206 to %struct.jpeg_progress_mgr*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, %struct.jpeg_source_mgr* inttoptr (i64 -6148914691236517206 to %struct.jpeg_source_mgr*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8** inttoptr (i64 -6148914691236517206 to i8**), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", [64 x i32]* inttoptr (i64 -6148914691236517206 to [64 x i32]*), [4 x %struct.JQUANT_TBL*] [%struct.JQUANT_TBL* inttoptr (i64 -6148914691236517206 to %struct.JQUANT_TBL*), %struct.JQUANT_TBL* inttoptr (i64 -6148914691236517206 to %struct.JQUANT_TBL*), %struct.JQUANT_TBL* inttoptr (i64 -6148914691236517206 to %struct.JQUANT_TBL*), %struct.JQUANT_TBL* inttoptr (i64 -6148914691236517206 to %struct.JQUANT_TBL*)], [4 x %struct.JHUFF_TBL*] [%struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*)], [4 x %struct.JHUFF_TBL*] [%struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*), %struct.JHUFF_TBL* inttoptr (i64 -6148914691236517206 to %struct.JHUFF_TBL*)], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.jpeg_component_info* inttoptr (i64 -6148914691236517206 to %struct.jpeg_component_info*), i32 -1431655766, i32 -1431655766, [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i16 -21846, i16 -21846, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.jpeg_marker_struct* inttoptr (i64 -6148914691236517206 to %struct.jpeg_marker_struct*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", [4 x %struct.jpeg_component_info*] [%struct.jpeg_component_info* inttoptr (i64 -6148914691236517206 to %struct.jpeg_component_info*), %struct.jpeg_component_info* inttoptr (i64 -6148914691236517206 to %struct.jpeg_component_info*), %struct.jpeg_component_info* inttoptr (i64 -6148914691236517206 to %struct.jpeg_component_info*), %struct.jpeg_component_info* inttoptr (i64 -6148914691236517206 to %struct.jpeg_component_info*)], i32 -1431655766, i32 -1431655766, i32 -1431655766, [10 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %struct.jpeg_decomp_master* inttoptr (i64 -6148914691236517206 to %struct.jpeg_decomp_master*), %struct.jpeg_d_main_controller* inttoptr (i64 -6148914691236517206 to %struct.jpeg_d_main_controller*), %struct.jpeg_d_coef_controller* inttoptr (i64 -6148914691236517206 to %struct.jpeg_d_coef_controller*), %struct.jpeg_d_post_controller* inttoptr (i64 -6148914691236517206 to %struct.jpeg_d_post_controller*), %struct.jpeg_input_controller* inttoptr (i64 -6148914691236517206 to %struct.jpeg_input_controller*), %struct.jpeg_marker_reader* inttoptr (i64 -6148914691236517206 to %struct.jpeg_marker_reader*), %struct.jpeg_entropy_decoder* inttoptr (i64 -6148914691236517206 to %struct.jpeg_entropy_decoder*), %struct.jpeg_inverse_dct* inttoptr (i64 -6148914691236517206 to %struct.jpeg_inverse_dct*), %struct.jpeg_upsampler* inttoptr (i64 -6148914691236517206 to %struct.jpeg_upsampler*), %struct.jpeg_color_deconverter* inttoptr (i64 -6148914691236517206 to %struct.jpeg_color_deconverter*), %struct.jpeg_color_quantizer* inttoptr (i64 -6148914691236517206 to %struct.jpeg_color_quantizer*) }, %struct.skjpeg_source_mgr { %struct.jpeg_source_mgr { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, void (%struct.jpeg_decompress_struct*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_decompress_struct*)*), i32 (%struct.jpeg_decompress_struct*)* inttoptr (i64 -6148914691236517206 to i32 (%struct.jpeg_decompress_struct*)*), void (%struct.jpeg_decompress_struct*, i64)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_decompress_struct*, i64)*), i32 (%struct.jpeg_decompress_struct*, i32)* inttoptr (i64 -6148914691236517206 to i32 (%struct.jpeg_decompress_struct*, i32)*), void (%struct.jpeg_decompress_struct*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_decompress_struct*)*) }, %class.SkStream* inttoptr (i64 -6148914691236517206 to %class.SkStream*), [1024 x i8] c}, { { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, [4 x i8], i8**, i32, i32 }, %class.SkSTArray } { { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, [4 x i8], i8**, i32, i32 } { void (%struct.jpeg_common_struct*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_common_struct*)*), void (%struct.jpeg_common_struct*, i32)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_common_struct*, i32)*), void (%struct.jpeg_common_struct*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_common_struct*)*), void (%struct.jpeg_common_struct*, i8*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_common_struct*, i8*)*), void (%struct.jpeg_common_struct*)* inttoptr (i64 -6148914691236517206 to void (%struct.jpeg_common_struct*)*), i32 -1431655766, %union.anon { [8 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [48 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, i32 -1431655766, i64 -6148914691236517206, i8** inttoptr (i64 -6148914691236517206 to i8**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8** inttoptr (i64 -6148914691236517206 to i8**), i32 -1431655766, i32 -1431655766 }, %class.SkSTArray { %class.SkAlignedSTStorage { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { [1 x %struct.__jmp_buf_tag]** inttoptr (i64 -6148914691236517206 to [1 x %struct.__jmp_buf_tag]**), i64 -6148914691236517206 } } }, %struct.jpeg_progress_mgr { {}* inttoptr (i64 -6148914691236517206 to {}*), i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZL21is_orientation_markerP18jpeg_marker_structP15SkEncodedOriginE8kExifSig = internal constant [5 x i8] c"Exif\00", align 1
@_ZL7kICCSig = internal constant [12 x i8] c"ICC_PROFILE\00", align 1
@_ZTV14SkMemoryStream = external unnamed_addr constant { [18 x i8*] }, align 8

@_ZN11SkJpegCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP14JpegDecoderMgr15SkEncodedOrigin = hidden unnamed_addr alias void (%class.SkJpegCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %class.JpegDecoderMgr*, i32), void (%class.SkJpegCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %class.JpegDecoderMgr*, i32)* @_ZN11SkJpegCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP14JpegDecoderMgr15SkEncodedOrigin

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec6IsJpegEPKvm(i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 2
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN11SkJpegCodec6IsJpegEPKvmE7jpegSig, i64 0, i64 0), i64 3)
  %6 = icmp eq i32 %5, 0
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i1 [ false, %2 ], [ %6, %4 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec10ReadHeaderEP8SkStreamPP7SkCodecPP14JpegDecoderMgrNSt3__110unique_ptrIN13SkEncodedInfo10ICCProfileENS8_14default_deleteISB_EEEE(%class.SkStream*, %class.SkCodec**, %class.JpegDecoderMgr** nocapture, %"class.SkEncodedInfo::ICCProfile"*) local_unnamed_addr #1 align 2 {
  %5 = alloca [256 x %struct.jpeg_marker_struct*], align 16
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.SkEncodedInfo, align 8
  %12 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %3 to i64
  %13 = call i8* @_Znwm(i64 1976) #11
  %14 = bitcast i8* %13 to %class.JpegDecoderMgr*
  call void @_ZN14JpegDecoderMgrC1EP8SkStream(%class.JpegDecoderMgr* nonnull %14, %class.SkStream* %0) #12
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 1
  %18 = bitcast [1 x %struct.__jmp_buf_tag]* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 200, i1 false)
  %19 = getelementptr inbounds i8, i8* %13, i64 1720
  %20 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 0
  %21 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 1920
  %23 = bitcast i8* %22 to %class.SkTArray*
  %24 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 1
  %25 = ptrtoint [1 x %struct.__jmp_buf_tag]* %24 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %23, i32 1, i32 1) #12
  %26 = bitcast i8* %22 to [1 x %struct.__jmp_buf_tag]***
  %27 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %26, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 1928
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %27, i64 %32
  %34 = add i64 %30, 2
  %35 = and i64 %34, 4294967294
  %36 = and i64 %30, -4294967295
  %37 = or i64 %35, %36
  store i64 %37, i64* %29, align 8
  %38 = bitcast [1 x %struct.__jmp_buf_tag]** %33 to i64*
  store i64 %25, i64* %38, align 8
  %39 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %24, i64 0, i64 0
  %40 = call i32 @_setjmp(%struct.__jmp_buf_tag* %39) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %4
  %43 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6) #12
  br label %298

44:                                               ; preds = %4
  call void @_ZN14JpegDecoderMgr4initEv(%class.JpegDecoderMgr* nonnull %14) #12
  %45 = bitcast i8* %13 to %struct.jpeg_decompress_struct*
  %46 = icmp ne %class.SkCodec** %1, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @jpeg_save_markers(%struct.jpeg_decompress_struct* nonnull %45, i32 225, i32 65535) #12
  call void @jpeg_save_markers(%struct.jpeg_decompress_struct* nonnull %45, i32 226, i32 65535) #12
  br label %48

48:                                               ; preds = %47, %44
  %49 = call i32 @jpeg_read_header(%struct.jpeg_decompress_struct* nonnull %45, i32 1) #12
  switch i32 %49, label %52 [
    i32 1, label %54
    i32 0, label %50
  ]

50:                                               ; preds = %48
  %51 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1) #12
  br label %298

52:                                               ; preds = %48
  %53 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6) #12
  br label %298

54:                                               ; preds = %48
  br i1 %46, label %55, label %296

55:                                               ; preds = %54
  %56 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #12
  store i32 -1431655766, i32* %10, align 4
  %57 = call zeroext i1 @_ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE(%class.JpegDecoderMgr* nonnull %14, i32* nonnull %10) #12
  br i1 %57, label %58, label %295

58:                                               ; preds = %55
  %59 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #12
  store i32 -1431655766, i32* %8, align 4
  %60 = getelementptr inbounds i8, i8* %13, i64 400
  %61 = bitcast i8* %60 to %struct.jpeg_marker_struct**
  %62 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %61, align 8
  %63 = icmp eq %struct.jpeg_marker_struct* %62, null
  br i1 %63, label %89, label %64

64:                                               ; preds = %58, %83
  %65 = phi %struct.jpeg_marker_struct* [ %85, %83 ], [ %62, %58 ]
  %66 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %65, i64 0, i32 1
  %67 = load i8, i8* %66, align 8
  %68 = icmp eq i8 %67, -31
  br i1 %68, label %69, label %83

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %65, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp ult i32 %71, 14
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %65, i64 0, i32 4
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @bcmp(i8* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZL21is_orientation_markerP18jpeg_marker_structP15SkEncodedOriginE8kExifSig, i64 0, i64 0), i64 5) #12
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %73
  %79 = getelementptr inbounds i8, i8* %75, i64 6
  %80 = zext i32 %71 to i64
  %81 = add nsw i64 %80, -6
  %82 = call zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8* %79, i64 %81, i32* nonnull %8) #12
  br i1 %82, label %87, label %83

83:                                               ; preds = %78, %73, %69, %64
  %84 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %65, i64 0, i32 0
  %85 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %84, align 8
  %86 = icmp eq %struct.jpeg_marker_struct* %85, null
  br i1 %86, label %89, label %64

87:                                               ; preds = %78
  %88 = load i32, i32* %8, align 4
  br label %89

89:                                               ; preds = %83, %58, %87
  %90 = phi i32 [ %88, %87 ], [ 1, %58 ], [ 1, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #12
  %91 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast [256 x %struct.jpeg_marker_struct*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %92) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %92, i8 0, i64 2048, i1 false) #12
  %93 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %61, align 8
  %94 = icmp eq %struct.jpeg_marker_struct* %93, null
  br i1 %94, label %197, label %95

95:                                               ; preds = %89, %134
  %96 = phi %struct.jpeg_marker_struct* [ %138, %134 ], [ %93, %89 ]
  %97 = phi i8 [ %136, %134 ], [ 0, %89 ]
  %98 = phi i64 [ %135, %134 ], [ 0, %89 ]
  %99 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = icmp eq i8 %100, -30
  br i1 %101, label %102, label %134

102:                                              ; preds = %95
  %103 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp ult i32 %104, 14
  br i1 %105, label %134, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 4
  %108 = load i8*, i8** %107, align 8
  %109 = call i32 @bcmp(i8* %108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZL7kICCSig, i64 0, i64 0), i64 12) #12
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %134

111:                                              ; preds = %106
  %112 = icmp eq i8 %97, 0
  %113 = getelementptr inbounds i8, i8* %108, i64 13
  %114 = load i8, i8* %113, align 1
  br i1 %112, label %115, label %117

115:                                              ; preds = %111
  %116 = icmp eq i8 %114, 0
  br i1 %116, label %197, label %119

117:                                              ; preds = %111
  %118 = icmp eq i8 %97, %114
  br i1 %118, label %119, label %197

119:                                              ; preds = %117, %115
  %120 = phi i8 [ %114, %115 ], [ %97, %117 ]
  %121 = getelementptr inbounds i8, i8* %108, i64 12
  %122 = load i8, i8* %121, align 1
  %123 = add i8 %122, -1
  %124 = icmp ult i8 %123, %120
  br i1 %124, label %125, label %197

125:                                              ; preds = %119
  %126 = zext i8 %122 to i64
  %127 = getelementptr inbounds [256 x %struct.jpeg_marker_struct*], [256 x %struct.jpeg_marker_struct*]* %5, i64 0, i64 %126
  %128 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %127, align 8
  %129 = icmp eq %struct.jpeg_marker_struct* %128, null
  br i1 %129, label %130, label %197

130:                                              ; preds = %125
  store %struct.jpeg_marker_struct* %96, %struct.jpeg_marker_struct** %127, align 8
  %131 = add i32 %104, -14
  %132 = zext i32 %131 to i64
  %133 = add i64 %98, %132
  br label %134

134:                                              ; preds = %130, %106, %102, %95
  %135 = phi i64 [ %133, %130 ], [ %98, %106 ], [ %98, %95 ], [ %98, %102 ]
  %136 = phi i8 [ %120, %130 ], [ %97, %106 ], [ %97, %95 ], [ %97, %102 ]
  %137 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 0
  %138 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %137, align 8
  %139 = icmp eq %struct.jpeg_marker_struct* %138, null
  br i1 %139, label %140, label %95

140:                                              ; preds = %134
  %141 = icmp eq i64 %135, 0
  br i1 %141, label %197, label %142

142:                                              ; preds = %140
  %143 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #12
  %144 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %144, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* nonnull sret %6, i64 %135) #12
  %145 = load %class.SkData*, %class.SkData** %144, align 8
  %146 = icmp eq i8 %136, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %142
  %148 = ptrtoint %class.SkData* %145 to i64
  br label %173

149:                                              ; preds = %142
  %150 = getelementptr inbounds %class.SkData, %class.SkData* %145, i64 0, i32 3
  %151 = load i8*, i8** %150, align 8
  %152 = zext i8 %136 to i64
  br label %153

153:                                              ; preds = %159, %149
  %154 = phi i64 [ %168, %159 ], [ 1, %149 ]
  %155 = phi i8* [ %167, %159 ], [ %151, %149 ]
  %156 = getelementptr inbounds [256 x %struct.jpeg_marker_struct*], [256 x %struct.jpeg_marker_struct*]* %5, i64 0, i64 %154
  %157 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %156, align 8
  %158 = icmp eq %struct.jpeg_marker_struct* %157, null
  br i1 %158, label %187, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %157, i64 0, i32 4
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 14
  %163 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %157, i64 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, -14
  %166 = zext i32 %165 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %162, i64 %166, i1 false) #12
  %167 = getelementptr inbounds i8, i8* %155, i64 %166
  %168 = add nuw nsw i64 %154, 1
  %169 = icmp eq i64 %154, %152
  br i1 %169, label %170, label %153

170:                                              ; preds = %159
  %171 = bitcast %class.sk_sp* %6 to i64*
  %172 = load i64, i64* %171, align 8
  br label %173

173:                                              ; preds = %170, %147
  %174 = phi i64 [ %172, %170 ], [ %148, %147 ]
  store %class.SkData* null, %class.SkData** %144, align 8
  %175 = bitcast %class.sk_sp* %7 to i64*
  store i64 %174, i64* %175, align 8
  %176 = call %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp* nonnull %7) #12
  %177 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %176 to i64
  %178 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %179 = load %class.SkData*, %class.SkData** %178, align 8
  %180 = icmp eq %class.SkData* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %class.SkData, %class.SkData* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 -1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %179) #12
  %186 = bitcast %class.SkData* %179 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %186) #12
  br label %187

187:                                              ; preds = %153, %185, %181, %173
  %188 = phi i64 [ %177, %173 ], [ %177, %181 ], [ %177, %185 ], [ 0, %153 ]
  %189 = load %class.SkData*, %class.SkData** %144, align 8
  %190 = icmp eq %class.SkData* %189, null
  br i1 %190, label %198, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %class.SkData, %class.SkData* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %198

195:                                              ; preds = %191
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %189) #12
  %196 = bitcast %class.SkData* %189 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %196) #12
  br label %198

197:                                              ; preds = %115, %117, %125, %119, %140, %89
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %92) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  br label %248

198:                                              ; preds = %187, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #12
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %92) #12
  %199 = inttoptr i64 %188 to %"class.SkEncodedInfo::ICCProfile"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  %200 = icmp eq i64 %188, 0
  br i1 %200, label %248, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %199, i64 0, i32 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds i8, i8* %13, i64 60
  %205 = bitcast i8* %204 to i32*
  %206 = load i32, i32* %205, align 4
  switch i32 %206, label %234 [
    i32 4, label %207
    i32 5, label %207
    i32 1, label %221
  ]

207:                                              ; preds = %201, %201
  %208 = icmp eq i32 %203, 1129142603
  br i1 %208, label %248, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %199, i64 0, i32 1, i32 0
  %211 = load %class.SkData*, %class.SkData** %210, align 8
  %212 = icmp eq %class.SkData* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %class.SkData, %class.SkData* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 -1 acq_rel
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %211) #12
  %218 = bitcast %class.SkData* %211 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %218) #12
  br label %219

219:                                              ; preds = %209, %213, %217
  %220 = inttoptr i64 %188 to i8*
  call void @_ZdlPv(i8* %220) #11
  br label %248

221:                                              ; preds = %201
  switch i32 %203, label %222 [
    i32 1380401696, label %248
    i32 1196573017, label %248
  ]

222:                                              ; preds = %221
  %223 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %199, i64 0, i32 1, i32 0
  %224 = load %class.SkData*, %class.SkData** %223, align 8
  %225 = icmp eq %class.SkData* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %class.SkData, %class.SkData* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw add i32* %227, i32 -1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %224) #12
  %231 = bitcast %class.SkData* %224 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %231) #12
  br label %232

232:                                              ; preds = %222, %226, %230
  %233 = inttoptr i64 %188 to i8*
  call void @_ZdlPv(i8* %233) #11
  br label %248

234:                                              ; preds = %201
  %235 = icmp eq i32 %203, 1380401696
  br i1 %235, label %248, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %199, i64 0, i32 1, i32 0
  %238 = load %class.SkData*, %class.SkData** %237, align 8
  %239 = icmp eq %class.SkData* %238, null
  br i1 %239, label %246, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %class.SkData, %class.SkData* %238, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = atomicrmw add i32* %241, i32 -1 acq_rel
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %246

244:                                              ; preds = %240
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %238) #12
  %245 = bitcast %class.SkData* %238 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %245) #12
  br label %246

246:                                              ; preds = %236, %240, %244
  %247 = inttoptr i64 %188 to i8*
  call void @_ZdlPv(i8* %247) #11
  br label %248

248:                                              ; preds = %246, %232, %219, %197, %198, %221, %221, %234, %207
  %249 = phi i64 [ %188, %207 ], [ %188, %234 ], [ %188, %221 ], [ %188, %221 ], [ %12, %198 ], [ %12, %197 ], [ %12, %219 ], [ %12, %232 ], [ %12, %246 ]
  %250 = phi i64 [ %12, %207 ], [ %12, %234 ], [ %12, %221 ], [ %12, %221 ], [ 0, %198 ], [ 0, %197 ], [ 0, %219 ], [ 0, %232 ], [ 0, %246 ]
  %251 = inttoptr i64 %250 to %"class.SkEncodedInfo::ICCProfile"*
  %252 = bitcast %struct.SkEncodedInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %252) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 24, i1 false)
  %253 = getelementptr inbounds i8, i8* %13, i64 48
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds i8, i8* %13, i64 52
  %257 = bitcast i8* %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = load i32, i32* %10, align 4
  %260 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 0
  store i32 %255, i32* %260, align 8, !alias.scope !2
  %261 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 1
  store i32 %258, i32* %261, align 4, !alias.scope !2
  %262 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 2
  store i32 %259, i32* %262, align 8, !alias.scope !2
  %263 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 3
  store i32 0, i32* %263, align 4, !alias.scope !2
  %264 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 4
  store i8 8, i8* %264, align 8, !alias.scope !2
  %265 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 5
  %266 = bitcast %"class.std::__1::unique_ptr"* %265 to i64*
  store i64 %249, i64* %266, align 8, !alias.scope !2
  %267 = call i8* @_Znwm(i64 1208) #11
  %268 = bitcast i8* %267 to %class.SkCodec*
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %268, %struct.SkEncodedInfo* nonnull dereferenceable(32) %11, i32 12, %class.SkStream* %0, i32 %90) #12
  %269 = bitcast i8* %267 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkJpegCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %269, align 8
  %270 = getelementptr inbounds i8, i8* %267, i64 1144
  %271 = bitcast i8* %270 to i64*
  store i64 %15, i64* %271, align 8
  %272 = getelementptr inbounds i8, i8* %267, i64 1152
  %273 = bitcast i8* %272 to i32*
  %274 = getelementptr inbounds i8, i8* %13, i64 36
  %275 = bitcast i8* %274 to i32*
  %276 = load i32, i32* %275, align 4
  store i32 %276, i32* %273, align 8
  %277 = getelementptr inbounds i8, i8* %267, i64 1160
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 48, i1 false) #12
  %278 = bitcast %class.SkCodec** %1 to i8**
  store i8* %267, i8** %278, align 8
  %279 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %280 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %279, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %279, align 8
  %281 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %280, null
  br i1 %281, label %294, label %282

282:                                              ; preds = %248
  %283 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %280, i64 0, i32 1, i32 0
  %284 = load %class.SkData*, %class.SkData** %283, align 8
  %285 = icmp eq %class.SkData* %284, null
  br i1 %285, label %292, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %class.SkData, %class.SkData* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %292

290:                                              ; preds = %286
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %284) #12
  %291 = bitcast %class.SkData* %284 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %291) #12
  br label %292

292:                                              ; preds = %290, %286, %282
  %293 = bitcast %"class.SkEncodedInfo::ICCProfile"* %280 to i8*
  call void @_ZdlPv(i8* %293) #11
  br label %294

294:                                              ; preds = %292, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %252) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #12
  br label %298

295:                                              ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #12
  br label %298

296:                                              ; preds = %54
  %297 = bitcast %class.JpegDecoderMgr** %2 to i8**
  store i8* %13, i8** %297, align 8
  br label %298

298:                                              ; preds = %50, %52, %295, %294, %296, %42
  %299 = phi i64 [ %15, %52 ], [ %15, %50 ], [ 0, %294 ], [ %15, %295 ], [ 0, %296 ], [ %15, %42 ]
  %300 = phi %"class.SkEncodedInfo::ICCProfile"* [ %3, %52 ], [ %3, %50 ], [ %251, %294 ], [ %3, %295 ], [ %3, %296 ], [ %3, %42 ]
  %301 = phi i32 [ %53, %52 ], [ %51, %50 ], [ 0, %294 ], [ 6, %295 ], [ 0, %296 ], [ %43, %42 ]
  %302 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %20, align 8
  %303 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %302, i64 0, i32 1, i32 0, i32 0, i64 32
  %304 = bitcast i8* %303 to %class.SkTArray*
  %305 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %302, i64 0, i32 1, i32 0, i32 0, i64 40
  %306 = bitcast i8* %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = and i64 %307, 4294967294
  %309 = add nuw nsw i64 %308, 4294967294
  %310 = and i64 %309, 4294967294
  %311 = and i64 %307, -4294967295
  %312 = or i64 %310, %311
  store i64 %312, i64* %306, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %304, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %16) #12
  %313 = icmp eq i64 %299, 0
  br i1 %313, label %317, label %314

314:                                              ; preds = %298
  %315 = inttoptr i64 %299 to %class.JpegDecoderMgr*
  call void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr* nonnull %315) #12
  %316 = inttoptr i64 %299 to i8*
  call void @_ZdlPv(i8* %316) #11
  br label %317

317:                                              ; preds = %298, %314
  %318 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %300, null
  br i1 %318, label %331, label %319

319:                                              ; preds = %317
  %320 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %300, i64 0, i32 1, i32 0
  %321 = load %class.SkData*, %class.SkData** %320, align 8
  %322 = icmp eq %class.SkData* %321, null
  br i1 %322, label %329, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %class.SkData, %class.SkData* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw add i32* %324, i32 -1 acq_rel
  %326 = icmp eq i32 %325, 1
  br i1 %326, label %327, label %329

327:                                              ; preds = %323
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %321) #12
  %328 = bitcast %class.SkData* %321 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %328) #12
  br label %329

329:                                              ; preds = %327, %323, %319
  %330 = bitcast %"class.SkEncodedInfo::ICCProfile"* %300 to i8*
  call void @_ZdlPv(i8* %330) #11
  br label %331

331:                                              ; preds = %317, %329
  ret i32 %301
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN14JpegDecoderMgrC1EP8SkStream(%class.JpegDecoderMgr*, %class.SkStream*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #5

declare i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr*, i8*, i32) local_unnamed_addr #4

declare void @_ZN14JpegDecoderMgr4initEv(%class.JpegDecoderMgr*) local_unnamed_addr #4

declare void @jpeg_save_markers(%struct.jpeg_decompress_struct*, i32, i32) local_unnamed_addr #4

declare i32 @jpeg_read_header(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE(%class.JpegDecoderMgr*, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN11SkJpegCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.SkCodec*, align 8
  %4 = bitcast %class.SkCodec** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  store %class.SkCodec* null, %class.SkCodec** %3, align 8
  %5 = call i32 @_ZN11SkJpegCodec10ReadHeaderEP8SkStreamPP7SkCodecPP14JpegDecoderMgrNSt3__110unique_ptrIN13SkEncodedInfo10ICCProfileENS8_14default_deleteISB_EEEE(%class.SkStream* %0, %class.SkCodec** nonnull %3, %class.JpegDecoderMgr** null, %"class.SkEncodedInfo::ICCProfile"* null) #12
  store i32 %5, i32* %1, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  br label %16

9:                                                ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  %10 = icmp eq %class.SkStream* %0, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %13 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %13, i64 1
  %15 = load void (%class.SkStream*)*, void (%class.SkStream*)** %14, align 8
  call void %15(%class.SkStream* nonnull %0) #12
  br label %16

16:                                               ; preds = %11, %9, %7
  %17 = phi %class.SkCodec* [ %8, %7 ], [ null, %9 ], [ null, %11 ]
  ret %class.SkCodec* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN11SkJpegCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultENS1_IN13SkEncodedInfo10ICCProfileENS3_ISA_EEEE(%class.SkStream*, i32* nocapture, %"class.SkEncodedInfo::ICCProfile"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.SkCodec*, align 8
  %5 = bitcast %class.SkCodec** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store %class.SkCodec* null, %class.SkCodec** %4, align 8
  %6 = call i32 @_ZN11SkJpegCodec10ReadHeaderEP8SkStreamPP7SkCodecPP14JpegDecoderMgrNSt3__110unique_ptrIN13SkEncodedInfo10ICCProfileENS8_14default_deleteISB_EEEE(%class.SkStream* %0, %class.SkCodec** nonnull %4, %class.JpegDecoderMgr** null, %"class.SkEncodedInfo::ICCProfile"* %2)
  store i32 %6, i32* %1, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = load %class.SkCodec*, %class.SkCodec** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  br label %17

10:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %11 = icmp eq %class.SkStream* %0, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %14 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %14, i64 1
  %16 = load void (%class.SkStream*)*, void (%class.SkStream*)** %15, align 8
  call void %16(%class.SkStream* nonnull %0) #12
  br label %17

17:                                               ; preds = %8, %10, %12
  %18 = phi %class.SkCodec* [ %9, %8 ], [ null, %10 ], [ null, %12 ]
  ret %class.SkCodec* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkJpegCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP14JpegDecoderMgr15SkEncodedOrigin(%class.SkJpegCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, %class.JpegDecoderMgr*, i32) unnamed_addr #1 align 2 {
  %6 = bitcast %class.SkJpegCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %6, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 12, %class.SkStream* %2, i32 %4) #12
  %7 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkJpegCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1
  %9 = ptrtoint %class.JpegDecoderMgr* %3 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.16"* %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %3, i64 0, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 3
  %15 = bitcast %class.SkAutoTMalloc* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 48, i1 false)
  ret void
}

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22calc_output_dimensionsP22jpeg_decompress_structjj(%struct.jpeg_decompress_struct*, i32, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 12
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 13
  store i32 %2, i32* %6, align 8
  tail call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* %0) #12
  ret void
}

declare void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11SkJpegCodec21onGetScaledDimensionsEf(%class.SkJpegCodec* nocapture readonly, float) unnamed_addr #1 align 2 {
  %3 = alloca %struct.jpeg_decompress_struct, align 8
  %4 = fcmp ult float %1, 9.375000e-01
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = fcmp ult float %1, 8.125000e-01
  br i1 %6, label %7, label %18

7:                                                ; preds = %5
  %8 = fcmp ult float %1, 6.875000e-01
  br i1 %8, label %9, label %18

9:                                                ; preds = %7
  %10 = fcmp ult float %1, 5.625000e-01
  br i1 %10, label %11, label %18

11:                                               ; preds = %9
  %12 = fcmp ult float %1, 4.375000e-01
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = fcmp ult float %1, 3.125000e-01
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = fcmp ult float %1, 1.875000e-01
  %17 = select i1 %16, i32 1, i32 2
  br label %18

18:                                               ; preds = %15, %13, %11, %9, %7, %5, %2
  %19 = phi i32 [ 8, %2 ], [ 7, %5 ], [ 6, %7 ], [ 5, %9 ], [ 4, %11 ], [ 3, %13 ], [ %17, %15 ]
  %20 = bitcast %struct.jpeg_decompress_struct* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 632, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 632, i1 false) #12
  %21 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 7
  store i32 %22, i32* %25, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 8
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 5
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 9
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 12
  store i32 %19, i32* %31, align 4
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 13
  store i32 8, i32* %32, align 8
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* nonnull %3) #12
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 27
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 28
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %34 to i64
  %40 = or i64 %38, %39
  call void @llvm.lifetime.end.p0i8(i64 632, i8* nonnull %20) #12
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec8onRewindEv(%class.SkJpegCodec* nocapture) unnamed_addr #1 align 2 {
  %2 = alloca %class.JpegDecoderMgr*, align 8
  %3 = bitcast %class.JpegDecoderMgr** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  store %class.JpegDecoderMgr* null, %class.JpegDecoderMgr** %2, align 8
  %4 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %class.SkStream*, %class.SkStream** %4, align 8
  %6 = call i32 @_ZN11SkJpegCodec10ReadHeaderEP8SkStreamPP7SkCodecPP14JpegDecoderMgrNSt3__110unique_ptrIN13SkEncodedInfo10ICCProfileENS8_14default_deleteISB_EEEE(%class.SkStream* %5, %class.SkCodec** null, %class.JpegDecoderMgr** nonnull %2, %"class.SkEncodedInfo::ICCProfile"* null)
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %10, align 8
  %12 = tail call zeroext i1 @_ZN14JpegDecoderMgr11returnFalseEPKc(%class.JpegDecoderMgr* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #12
  br label %38

13:                                               ; preds = %1
  %14 = bitcast %class.JpegDecoderMgr** %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.16"* %8 to i64*
  store i64 %15, i64* %18, align 8
  %19 = icmp eq %class.JpegDecoderMgr* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  tail call void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr* nonnull %17) #12
  %21 = bitcast %class.JpegDecoderMgr* %17 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %13, %20
  %23 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %24 = load %class.SkSwizzler*, %class.SkSwizzler** %23, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %23, align 8
  %25 = icmp eq %class.SkSwizzler* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.SkSwizzler* %24 to void (%class.SkSwizzler*)***
  %28 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %28, i64 2
  %30 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %29, align 8
  tail call void %30(%class.SkSwizzler* nonnull %24) #12
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 4
  %33 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast i8** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  %35 = load i8*, i8** %33, align 8
  store i8* null, i8** %33, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  tail call void @_Z7sk_freePv(i8* nonnull %35) #12
  br label %38

38:                                               ; preds = %37, %31, %9
  %39 = phi i1 [ %12, %9 ], [ true, %31 ], [ true, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret i1 %39
}

declare zeroext i1 @_ZN14JpegDecoderMgr11returnFalseEPKc(%class.JpegDecoderMgr*, i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec19conversionSupportedERK11SkImageInfobb(%class.SkJpegCodec* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %9, align 8
  %11 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %42 [
    i32 4, label %15
    i32 6, label %17
    i32 2, label %21
    i32 11, label %28
    i32 13, label %34
  ]

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 11
  store i32 12, i32* %16, align 8
  br label %36

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 11
  br i1 %3, label %19, label %20

19:                                               ; preds = %17
  store i32 12, i32* %18, align 8
  br label %36

20:                                               ; preds = %17
  store i32 13, i32* %18, align 8
  br label %36

21:                                               ; preds = %8
  br i1 %3, label %22, label %24

22:                                               ; preds = %21
  %23 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 11
  store i32 12, i32* %23, align 8
  br label %36

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 21
  store i32 0, i32* %25, align 8
  %26 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %9, align 8
  %27 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %26, i64 0, i32 0, i32 11
  store i32 16, i32* %27, align 8
  br label %36

28:                                               ; preds = %8
  %29 = icmp eq i32 %12, 1
  br i1 %29, label %30, label %42

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 11
  br i1 %3, label %32, label %33

32:                                               ; preds = %30
  store i32 12, i32* %31, align 8
  br label %42

33:                                               ; preds = %30
  store i32 1, i32* %31, align 8
  br label %42

34:                                               ; preds = %8
  %35 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %10, i64 0, i32 0, i32 11
  store i32 12, i32* %35, align 8
  br label %36

36:                                               ; preds = %22, %24, %19, %20, %34, %15
  %37 = or i32 %12, 1
  %38 = icmp eq i32 %37, 5
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %9, align 8
  %41 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %40, i64 0, i32 0, i32 11
  store i32 4, i32* %41, align 8
  br label %42

42:                                               ; preds = %33, %32, %28, %8, %36, %39, %4
  %43 = phi i1 [ false, %4 ], [ false, %28 ], [ false, %8 ], [ true, %36 ], [ true, %39 ], [ true, %32 ], [ true, %33 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec21onDimensionsSupportedERK7SkISize(%class.SkJpegCodec* nocapture readonly, %struct.SkISize* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %4 = alloca %struct.jpeg_decompress_struct, align 8
  %5 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %7 = bitcast [1 x %struct.__jmp_buf_tag]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 200, i1 false)
  %8 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %8, align 8
  %10 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 2
  %11 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %10, %struct.skjpeg_error_mgr** %11, align 8
  %12 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %13 = bitcast i8* %12 to %class.SkTArray*
  %14 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %15 = ptrtoint [1 x %struct.__jmp_buf_tag]* %14 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %13, i32 1, i32 1) #12
  %16 = bitcast i8* %12 to [1 x %struct.__jmp_buf_tag]***
  %17 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %16, align 8
  %18 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %17, i64 %22
  %24 = add i64 %20, 2
  %25 = and i64 %24, 4294967294
  %26 = and i64 %20, -4294967295
  %27 = or i64 %25, %26
  store i64 %27, i64* %19, align 8
  %28 = bitcast [1 x %struct.__jmp_buf_tag]** %23 to i64*
  store i64 %15, i64* %28, align 8
  %29 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %14, i64 0, i64 0
  %30 = call i32 @_setjmp(%struct.__jmp_buf_tag* %29) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %2
  %33 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %8, align 8
  %34 = call zeroext i1 @_ZN14JpegDecoderMgr11returnFalseEPKc(%class.JpegDecoderMgr* %33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %84

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %struct.jpeg_decompress_struct* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 632, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 632, i1 false) #12
  %41 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 7
  store i32 %42, i32* %45, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 8
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 5
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 9
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 12
  store i32 8, i32* %51, align 4
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 13
  store i32 8, i32* %52, align 8
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* nonnull %4) #12
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 27
  %54 = load i32, i32* %53, align 8
  %55 = icmp ne i32 %54, %37
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 28
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, %39
  %59 = or i1 %55, %58
  br i1 %59, label %60, label %76

60:                                               ; preds = %35, %69
  %61 = phi i32 [ %73, %69 ], [ %57, %35 ]
  %62 = phi i32 [ %71, %69 ], [ %54, %35 ]
  %63 = phi i32 [ %70, %69 ], [ 8, %35 ]
  %64 = icmp eq i32 %63, 1
  %65 = icmp ugt i32 %37, %62
  %66 = or i1 %64, %65
  %67 = icmp ugt i32 %39, %61
  %68 = or i1 %66, %67
  br i1 %68, label %82, label %69

69:                                               ; preds = %60
  %70 = add nsw i32 %63, -1
  store i32 0, i32* %50, align 8
  store i32 %70, i32* %51, align 4
  store i32 8, i32* %52, align 8
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* nonnull %4) #12
  %71 = load i32, i32* %53, align 8
  %72 = icmp ne i32 %71, %37
  %73 = load i32, i32* %56, align 4
  %74 = icmp ne i32 %73, %39
  %75 = or i1 %72, %74
  br i1 %75, label %60, label %76

76:                                               ; preds = %69, %35
  %77 = phi i32 [ 8, %35 ], [ %70, %69 ]
  %78 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %8, align 8
  %79 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %78, i64 0, i32 0, i32 12
  store i32 %77, i32* %79, align 4
  %80 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %8, align 8
  %81 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %80, i64 0, i32 0, i32 13
  store i32 8, i32* %81, align 8
  br label %82

82:                                               ; preds = %60, %76
  %83 = phi i1 [ true, %76 ], [ false, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 632, i8* nonnull %40) #12
  br label %84

84:                                               ; preds = %82, %32
  %85 = phi i1 [ %34, %32 ], [ %83, %82 ]
  %86 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %11, align 8
  %87 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %86, i64 0, i32 1, i32 0, i32 0, i64 32
  %88 = bitcast i8* %87 to %class.SkTArray*
  %89 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %86, i64 0, i32 1, i32 0, i32 0, i64 40
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 4294967294
  %93 = add nuw nsw i64 %92, 4294967294
  %94 = and i64 %93, 4294967294
  %95 = and i64 %91, -4294967295
  %96 = or i64 %94, %95
  store i64 %96, i64* %90, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %88, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %5) #12
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec8readRowsERK11SkImageInfoPvmiRKN7SkCodec7OptionsE(%class.SkJpegCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i32, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %8 = alloca i8*, align 8
  %9 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 1
  %11 = bitcast [1 x %struct.__jmp_buf_tag]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 200, i1 false)
  %12 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %14 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2
  %15 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %14, %struct.skjpeg_error_mgr** %15, align 8
  %16 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %17 = bitcast i8* %16 to %class.SkTArray*
  %18 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 1
  %19 = ptrtoint [1 x %struct.__jmp_buf_tag]* %18 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %17, i32 1, i32 1) #12
  %20 = bitcast i8* %16 to [1 x %struct.__jmp_buf_tag]***
  %21 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %20, align 8
  %22 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %21, i64 %26
  %28 = add i64 %24, 2
  %29 = and i64 %28, 4294967294
  %30 = and i64 %24, -4294967295
  %31 = or i64 %29, %30
  store i64 %31, i64* %23, align 8
  %32 = bitcast [1 x %struct.__jmp_buf_tag]** %27 to i64*
  store i64 %19, i64* %32, align 8
  %33 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %18, i64 0, i64 0
  %34 = call i32 @_setjmp(%struct.__jmp_buf_tag* %33) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %109

36:                                               ; preds = %6
  %37 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i8* %2, i8** %8, align 8
  %38 = bitcast i8* %2 to i32*
  %39 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 1
  %40 = load %struct.SkIRect*, %struct.SkIRect** %39, align 8
  %41 = icmp eq %struct.SkIRect* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %44, %46
  br label %51

48:                                               ; preds = %36
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %42
  %52 = phi i32 [ %47, %42 ], [ %50, %48 ]
  %53 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 4
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  %56 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 5
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %55, label %66, label %59

59:                                               ; preds = %51
  store i8* %54, i8** %8, align 8
  %60 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %61 = load %class.SkSwizzler*, %class.SkSwizzler** %60, align 8
  %62 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %61, i64 0, i32 12
  %63 = load i32, i32* %62, align 8
  %64 = select i1 %58, i32* %38, i32* %57
  %65 = select i1 %58, i64 %3, i64 0
  br label %69

66:                                               ; preds = %51
  br i1 %58, label %69, label %67

67:                                               ; preds = %66
  %68 = bitcast i8** %8 to i32**
  store i32* %57, i32** %68, align 8
  br label %69

69:                                               ; preds = %59, %66, %67
  %70 = phi i32* [ %57, %67 ], [ %38, %66 ], [ %64, %59 ]
  %71 = phi i64 [ 0, %67 ], [ %3, %66 ], [ 0, %59 ]
  %72 = phi i64 [ 0, %67 ], [ %3, %66 ], [ %65, %59 ]
  %73 = phi i32 [ %52, %67 ], [ %52, %66 ], [ %63, %59 ]
  %74 = icmp sgt i32 %4, 0
  br i1 %74, label %75, label %107

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %78 = bitcast %class.SkJpegCodec* %0 to %class.SkCodec*
  br label %79

79:                                               ; preds = %99, %75
  %80 = phi i32 [ 0, %75 ], [ %105, %99 ]
  %81 = phi i32* [ %70, %75 ], [ %104, %99 ]
  %82 = phi i8* [ %2, %75 ], [ %100, %99 ]
  %83 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %84 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %83, i64 0, i32 0
  %85 = call i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct* %84, i8** nonnull %8, i32 1) #12
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %79
  %88 = load %class.SkSwizzler*, %class.SkSwizzler** %76, align 8
  %89 = icmp eq %class.SkSwizzler* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %81 to i8*
  %92 = load i8*, i8** %8, align 8
  call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* nonnull %88, i8* %91, i8* %92) #12
  br label %93

93:                                               ; preds = %87, %90
  %94 = load i32, i32* %77, align 8
  %95 = icmp eq i32 %94, 0
  %96 = bitcast i32* %81 to i8*
  br i1 %95, label %99, label %97

97:                                               ; preds = %93
  call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %78, i8* %82, i8* %96, i32 %73) #12
  %98 = getelementptr inbounds i8, i8* %82, i64 %3
  br label %99

99:                                               ; preds = %93, %97
  %100 = phi i8* [ %98, %97 ], [ %82, %93 ]
  %101 = load i8*, i8** %8, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %71
  store i8* %102, i8** %8, align 8
  %103 = getelementptr inbounds i8, i8* %96, i64 %72
  %104 = bitcast i8* %103 to i32*
  %105 = add nuw nsw i32 %80, 1
  %106 = icmp eq i32 %105, %4
  br i1 %106, label %107, label %79

107:                                              ; preds = %79, %99, %69
  %108 = phi i32 [ %4, %69 ], [ %4, %99 ], [ %80, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %109

109:                                              ; preds = %6, %107
  %110 = phi i32 [ %108, %107 ], [ 0, %6 ]
  %111 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %15, align 8
  %112 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %111, i64 0, i32 1, i32 0, i32 0, i64 32
  %113 = bitcast i8* %112 to %class.SkTArray*
  %114 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %111, i64 0, i32 1, i32 0, i32 0, i64 40
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 4294967294
  %118 = add nuw nsw i64 %117, 4294967294
  %119 = and i64 %118, 4294967294
  %120 = and i64 %116, -4294967295
  %121 = or i64 %119, %120
  store i64 %121, i64* %115, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %113, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %9) #12
  ret i32 %110
}

declare i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct*, i8**, i32) local_unnamed_addr #4

declare void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler*, i8*, i8*) local_unnamed_addr #4

declare void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkJpegCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), i32* nocapture) unnamed_addr #1 align 2 {
  %7 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %8 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %9 = load %struct.SkIRect*, %struct.SkIRect** %8, align 8
  %10 = icmp eq %struct.SkIRect* %9, null
  br i1 %10, label %11, label %90

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %14 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 1
  %16 = bitcast [1 x %struct.__jmp_buf_tag]* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 200, i1 false)
  %17 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2
  %18 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %17, %struct.skjpeg_error_mgr** %18, align 8
  %19 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %20 = bitcast i8* %19 to %class.SkTArray*
  %21 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %7, i64 0, i32 1
  %22 = ptrtoint [1 x %struct.__jmp_buf_tag]* %21 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %20, i32 1, i32 1) #12
  %23 = bitcast i8* %19 to [1 x %struct.__jmp_buf_tag]***
  %24 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %23, align 8
  %25 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %24, i64 %29
  %31 = add i64 %27, 2
  %32 = and i64 %31, 4294967294
  %33 = and i64 %27, -4294967295
  %34 = or i64 %32, %33
  store i64 %34, i64* %26, align 8
  %35 = bitcast [1 x %struct.__jmp_buf_tag]** %30 to i64*
  store i64 %22, i64* %35, align 8
  %36 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %21, i64 0, i64 0
  %37 = call i32 @_setjmp(%struct.__jmp_buf_tag* %36) #13
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %11
  %40 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %41 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 6) #12
  br label %77

42:                                               ; preds = %11
  %43 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 0
  %44 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %43) #12
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %48 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 6) #12
  br label %77

49:                                               ; preds = %42
  %50 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 0, i32 11
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %53 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %52, align 8
  %54 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  %57 = icmp eq i32 %51, 4
  br i1 %57, label %58, label %66

58:                                               ; preds = %49
  %59 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %53, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %53, i64 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp ne i32 %62, 1129142603
  %64 = or i1 %56, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %58, %60
  call void @_ZN11SkJpegCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4, i1 zeroext true)
  br label %66

66:                                               ; preds = %49, %65, %60
  %67 = call zeroext i1 @_ZN11SkJpegCodec15allocateStorageERK11SkImageInfo(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  br i1 %67, label %68, label %77

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = call i32 @_ZN11SkJpegCodec8readRowsERK11SkImageInfoPvmiRKN7SkCodec7OptionsE(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %70, %"struct.SkCodec::Options"* dereferenceable(24) %4)
  %72 = load i32, i32* %69, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  store i32 %71, i32* %5, align 4
  %75 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %76 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %75, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1) #12
  br label %77

77:                                               ; preds = %74, %68, %66, %46, %39
  %78 = phi i32 [ %41, %39 ], [ %48, %46 ], [ 8, %66 ], [ %76, %74 ], [ 0, %68 ]
  %79 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %18, align 8
  %80 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %79, i64 0, i32 1, i32 0, i32 0, i64 32
  %81 = bitcast i8* %80 to %class.SkTArray*
  %82 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %79, i64 0, i32 1, i32 0, i32 0, i64 40
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 4294967294
  %86 = add nuw nsw i64 %85, 4294967294
  %87 = and i64 %86, 4294967294
  %88 = and i64 %84, -4294967295
  %89 = or i64 %87, %88
  store i64 %89, i64* %83, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %81, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %14) #12
  br label %90

90:                                               ; preds = %6, %77
  %91 = phi i32 [ %78, %77 ], [ 9, %6 ]
  ret i32 %91
}

declare i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkJpegCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkJpegCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.SkCodec::Options", align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %struct.SkEncodedInfo, align 16
  %8 = bitcast %"struct.SkCodec::Options"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"struct.SkCodec::Options"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %11 = load %struct.SkIRect*, %struct.SkIRect** %10, align 8
  %12 = icmp eq %struct.SkIRect* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %5, i64 0, i32 1
  store %struct.SkIRect* %14, %struct.SkIRect** %15, align 8
  br label %16

16:                                               ; preds = %4, %13
  %17 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %16, %24
  store %class.SkColorSpace* %22, %class.SkColorSpace** %18, align 8
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %29 = bitcast i32* %28 to i64*
  %30 = bitcast i32* %19 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %34 = bitcast %struct.SkISize* %33 to i64*
  %35 = bitcast %struct.SkISize* %32 to i64*
  %36 = load i64, i64* %34, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  %40 = and i64 %31, -4294967296
  br i1 %39, label %62, label %41

41:                                               ; preds = %27
  br i1 %23, label %42, label %46

42:                                               ; preds = %41
  %43 = ptrtoint %class.SkColorSpace* %22 to i64
  %44 = or i64 %40, 4
  %45 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %43, i64* %45, align 8
  br label %60

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !5
  %49 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %50 = bitcast %class.SkColorSpace* %49 to i8*
  %51 = ptrtoint %class.SkColorSpace* %22 to i64
  %52 = or i64 %40, 4
  %53 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq %class.SkColorSpace* %49, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  tail call void @_ZdlPv(i8* %50) #11
  br label %60

60:                                               ; preds = %42, %59, %55, %46
  %61 = phi i64 [ %44, %42 ], [ %52, %59 ], [ %52, %55 ], [ %52, %46 ]
  store i64 %61, i64* %30, align 8
  store i64 %36, i64* %35, align 8
  br label %62

62:                                               ; preds = %27, %60
  br i1 %3, label %63, label %98

63:                                               ; preds = %62
  %64 = bitcast %struct.SkEncodedInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 24, i1 false)
  %65 = bitcast %struct.SkEncodedInfo* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 12, i32 0>, <4 x i32>* %65, align 16, !alias.scope !12
  %66 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 4
  store i8 8, i8* %66, align 16, !alias.scope !12
  %67 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 5
  %68 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 0, i64* %68, align 8, !alias.scope !12
  %69 = call %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* nonnull dereferenceable(32) %7, i32* null, %struct.SkImageInfo* nonnull dereferenceable(24) %6, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %5, %struct.SkIRect* null) #12
  %70 = ptrtoint %class.SkSwizzler* %69 to i64
  %71 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %class.SkSwizzler*, %class.SkSwizzler** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr.26"* %71 to i64*
  store i64 %70, i64* %74, align 8
  %75 = icmp eq %class.SkSwizzler* %73, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %63
  %77 = bitcast %class.SkSwizzler* %73 to void (%class.SkSwizzler*)***
  %78 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %78, i64 2
  %80 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %79, align 8
  call void %80(%class.SkSwizzler* nonnull %73) #12
  br label %81

81:                                               ; preds = %76, %63
  %82 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %83 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %82, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %82, align 8
  %84 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %83, i64 0, i32 1, i32 0
  %87 = load %class.SkData*, %class.SkData** %86, align 8
  %88 = icmp eq %class.SkData* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SkData, %class.SkData* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %87) #12
  %94 = bitcast %class.SkData* %87 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %94) #12
  br label %95

95:                                               ; preds = %93, %89, %85
  %96 = bitcast %"class.SkEncodedInfo::ICCProfile"* %83 to i8*
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %81, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #12
  br label %120

98:                                               ; preds = %62
  %99 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %99, align 8
  %101 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %100, i64 0, i32 0, i32 11
  %102 = load i32, i32* %101, align 8
  switch i32 %102, label %106 [
    i32 12, label %103
    i32 13, label %103
    i32 4, label %103
    i32 16, label %104
    i32 1, label %105
  ]

103:                                              ; preds = %98, %98, %98
  br label %106

104:                                              ; preds = %98
  br label %106

105:                                              ; preds = %98
  br label %106

106:                                              ; preds = %98, %105, %104, %103
  %107 = phi i32 [ 0, %98 ], [ 1, %105 ], [ 2, %104 ], [ 4, %103 ]
  %108 = call %class.SkSwizzler* @_ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE(i32 %107, %struct.SkImageInfo* nonnull dereferenceable(24) %6, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %5) #12
  %109 = ptrtoint %class.SkSwizzler* %108 to i64
  %110 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %class.SkSwizzler*, %class.SkSwizzler** %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.26"* %110 to i64*
  store i64 %109, i64* %113, align 8
  %114 = icmp eq %class.SkSwizzler* %112, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %106
  %116 = bitcast %class.SkSwizzler* %112 to void (%class.SkSwizzler*)***
  %117 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %117, i64 2
  %119 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %118, align 8
  call void %119(%class.SkSwizzler* nonnull %112) #12
  br label %120

120:                                              ; preds = %106, %115, %97
  %121 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %122 = icmp eq %class.SkColorSpace* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = bitcast %class.SkColorSpace* %121 to i8*
  call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %120, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec15allocateStorageERK11SkImageInfo(%class.SkJpegCodec* nocapture, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.SkSwizzler*, %class.SkSwizzler** %4, align 8
  %6 = icmp eq %class.SkSwizzler* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %8, align 8
  %10 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 16
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 0, i32 29
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  br label %17

17:                                               ; preds = %7, %13
  %18 = phi i64 [ %16, %13 ], [ 2, %7 ]
  %19 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %9, i64 0, i32 0, i32 27
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = mul nsw i64 %18, %21
  %23 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %5, i64 0, i32 12
  br label %24

24:                                               ; preds = %2, %17
  %25 = phi i32* [ %23, %17 ], [ %3, %2 ]
  %26 = phi i64 [ %22, %17 ], [ 0, %2 ]
  %27 = load i32, i32* %25, align 4
  %28 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %33 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %32) #12
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = sext i32 %27 to i64
  %37 = shl nsw i64 %36, 2
  br label %38

38:                                               ; preds = %24, %31, %35
  %39 = phi i64 [ %37, %35 ], [ 0, %31 ], [ 0, %24 ]
  %40 = add i64 %39, %26
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = tail call i8* @_Z15sk_malloc_throwmm(i64 %40, i64 1) #12
  %44 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8* %43, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  tail call void @_Z7sk_freePv(i8* nonnull %45) #12
  %48 = load i8*, i8** %44, align 8
  br label %49

49:                                               ; preds = %42, %47
  %50 = phi i8* [ %43, %42 ], [ %48, %47 ]
  %51 = icmp eq i8* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %49
  %53 = icmp eq i64 %26, 0
  %54 = select i1 %53, i8* null, i8* %50
  %55 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 4
  store i8* %54, i8** %55, align 8
  %56 = icmp eq i64 %39, 0
  %57 = getelementptr inbounds i8, i8* %50, i64 %26
  %58 = bitcast i8* %57 to i32*
  %59 = select i1 %56, i32* null, i32* %58
  %60 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 5
  store i32* %59, i32** %60, align 8
  br label %61

61:                                               ; preds = %52, %38, %49
  %62 = phi i1 [ false, %49 ], [ true, %38 ], [ true, %52 ]
  ret i1 %62
}

declare %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32), i32*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24), %struct.SkIRect*) local_unnamed_addr #4

declare %class.SkSwizzler* @_ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE(i32, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSampler* @_ZN11SkJpegCodec10getSamplerEb(%class.SkJpegCodec*, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  br i1 %1, label %7, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkSwizzler** %3 to %class.SkSampler**
  %6 = load %class.SkSampler*, %class.SkSampler** %5, align 8
  br label %38

7:                                                ; preds = %2
  %8 = load %class.SkSwizzler*, %class.SkSwizzler** %3, align 8
  %9 = icmp eq %class.SkSwizzler* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = bitcast %class.SkSwizzler* %8 to %class.SkSampler*
  br label %38

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %13, align 8
  %15 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %14, i64 0, i32 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %18 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %17, align 8
  %19 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = icmp eq i32 %16, 4
  br i1 %22, label %23, label %30

23:                                               ; preds = %12
  %24 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %18, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %18, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 1129142603
  %29 = or i1 %21, %28
  br label %30

30:                                               ; preds = %12, %23, %25
  %31 = phi i1 [ %29, %25 ], [ false, %12 ], [ true, %23 ]
  %32 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 8
  %33 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 9
  tail call void @_ZN11SkJpegCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %32, %"struct.SkCodec::Options"* dereferenceable(24) %33, i1 zeroext %31)
  %34 = tail call zeroext i1 @_ZN11SkJpegCodec15allocateStorageERK11SkImageInfo(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %32)
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = bitcast %class.SkSwizzler** %3 to %class.SkSampler**
  %37 = load %class.SkSampler*, %class.SkSampler** %36, align 8
  br label %38

38:                                               ; preds = %4, %10, %35, %30
  %39 = phi %class.SkSampler* [ %37, %35 ], [ null, %30 ], [ %6, %4 ], [ %11, %10 ]
  ret %class.SkSampler* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkJpegCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %4, i64 0, i32 1
  %9 = bitcast [1 x %struct.__jmp_buf_tag]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 200, i1 false)
  %10 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %10, align 8
  %12 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %11, i64 0, i32 2
  %13 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %4, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %12, %struct.skjpeg_error_mgr** %13, align 8
  %14 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %11, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %15 = bitcast i8* %14 to %class.SkTArray*
  %16 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %4, i64 0, i32 1
  %17 = ptrtoint [1 x %struct.__jmp_buf_tag]* %16 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %15, i32 1, i32 1) #12
  %18 = bitcast i8* %14 to [1 x %struct.__jmp_buf_tag]***
  %19 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %18, align 8
  %20 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %11, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 1
  %24 = and i64 %23, 2147483647
  %25 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %19, i64 %24
  %26 = add i64 %22, 2
  %27 = and i64 %26, 4294967294
  %28 = and i64 %22, -4294967295
  %29 = or i64 %27, %28
  store i64 %29, i64* %21, align 8
  %30 = bitcast [1 x %struct.__jmp_buf_tag]** %25 to i64*
  store i64 %17, i64* %30, align 8
  %31 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %16, i64 0, i64 0
  %32 = call i32 @_setjmp(%struct.__jmp_buf_tag* %31) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %124

34:                                               ; preds = %3
  %35 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %10, align 8
  %36 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %35, i64 0, i32 0
  %37 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %36) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %124, label %39

39:                                               ; preds = %34
  %40 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %10, align 8
  %41 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %40, i64 0, i32 0
  %42 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %40, i64 0, i32 0, i32 11
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %45 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %44, align 8
  %46 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 10
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  %49 = icmp eq i32 %43, 4
  br i1 %49, label %50, label %57

50:                                               ; preds = %39
  %51 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %45, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %45, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 1129142603
  %56 = or i1 %48, %55
  br label %57

57:                                               ; preds = %39, %50, %52
  %58 = phi i1 [ %56, %52 ], [ false, %39 ], [ true, %50 ]
  %59 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %60 = load %struct.SkIRect*, %struct.SkIRect** %59, align 8
  %61 = icmp eq %struct.SkIRect* %60, null
  br i1 %61, label %114, label %62

62:                                               ; preds = %57
  %63 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #12
  store i32 -1431655766, i32* %5, align 4
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %60, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %5, align 4
  %66 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #12
  store i32 -1431655766, i32* %6, align 4
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %60, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %64, align 4
  %70 = sub i32 %68, %69
  store i32 %70, i32* %6, align 4
  call void @jpeg_crop_scanline(%struct.jpeg_decompress_struct* %41, i32* nonnull %5, i32* nonnull %6) #12
  %71 = load %struct.SkIRect*, %struct.SkIRect** %59, align 8
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %5, align 4
  %75 = sub i32 %73, %74
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %77, %73
  %79 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 %80, %82
  %84 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 6, i32 0
  store i32 %75, i32* %84, align 4
  %85 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 6, i32 1
  store i32 0, i32* %85, align 4
  %86 = sext i32 %75 to i64
  %87 = sext i32 %78 to i64
  %88 = add nsw i64 %87, %86
  %89 = icmp slt i64 %88, 2147483647
  %90 = select i1 %89, i64 %88, i64 2147483647
  %91 = icmp sgt i64 %90, -2147483647
  %92 = select i1 %91, i64 %90, i64 -2147483647
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 6, i32 2
  store i32 %93, i32* %94, align 4
  %95 = sext i32 %83 to i64
  %96 = icmp slt i64 %95, 2147483647
  %97 = select i1 %96, i64 %95, i64 2147483647
  %98 = icmp sgt i64 %97, -2147483647
  %99 = select i1 %98, i64 %97, i64 -2147483647
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 6, i32 3
  store i32 %100, i32* %101, align 4
  %102 = load %struct.SkIRect*, %struct.SkIRect** %59, align 8
  %103 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %74, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %62
  %107 = load i32, i32* %6, align 4
  %108 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %102, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %109, %74
  %111 = icmp eq i32 %107, %110
  br i1 %111, label %113, label %112

112:                                              ; preds = %106, %62
  call void @_ZN11SkJpegCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2, i1 zeroext %58)
  br label %113

113:                                              ; preds = %106, %112
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #12
  br label %114

114:                                              ; preds = %57, %113
  %115 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %116 = load %class.SkSwizzler*, %class.SkSwizzler** %115, align 8
  %117 = icmp ne %class.SkSwizzler* %116, null
  %118 = xor i1 %58, true
  %119 = or i1 %117, %118
  br i1 %119, label %121, label %120

120:                                              ; preds = %114
  call void @_ZN11SkJpegCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2, i1 zeroext true)
  br label %121

121:                                              ; preds = %114, %120
  %122 = call zeroext i1 @_ZN11SkJpegCodec15allocateStorageERK11SkImageInfo(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  %123 = select i1 %122, i32 0, i32 8
  br label %124

124:                                              ; preds = %34, %3, %121
  %125 = phi i32 [ %123, %121 ], [ 6, %3 ], [ 6, %34 ]
  %126 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %13, align 8
  %127 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %126, i64 0, i32 1, i32 0, i32 0, i64 32
  %128 = bitcast i8* %127 to %class.SkTArray*
  %129 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %126, i64 0, i32 1, i32 0, i32 0, i64 40
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 4294967294
  %133 = add nuw nsw i64 %132, 4294967294
  %134 = and i64 %133, 4294967294
  %135 = and i64 %131, -4294967295
  %136 = or i64 %134, %135
  store i64 %136, i64* %130, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %128, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %7) #12
  ret i32 %125
}

declare void @jpeg_crop_scanline(%struct.jpeg_decompress_struct*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec14onGetScanlinesEPvim(%class.SkJpegCodec*, i8*, i32, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 8
  %6 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 9
  %7 = tail call i32 @_ZN11SkJpegCodec8readRowsERK11SkImageInfoPvmiRKN7SkCodec7OptionsE(%class.SkJpegCodec* %0, %struct.SkImageInfo* dereferenceable(24) %5, i8* %1, i64 %3, i32 %2, %"struct.SkCodec::Options"* dereferenceable(24) %6)
  %8 = icmp slt i32 %7, %2
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 8, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %12, align 8
  %14 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %13, i64 0, i32 0, i32 34
  store i32 %11, i32* %14, align 8
  br label %15

15:                                               ; preds = %9, %4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkJpegCodec15onSkipScanlinesEi(%class.SkJpegCodec* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %4 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %6 = bitcast [1 x %struct.__jmp_buf_tag]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 200, i1 false)
  %7 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %7, align 8
  %9 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2
  %10 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %9, %struct.skjpeg_error_mgr** %10, align 8
  %11 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %12 = bitcast i8* %11 to %class.SkTArray*
  %13 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %14 = ptrtoint [1 x %struct.__jmp_buf_tag]* %13 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %12, i32 1, i32 1) #12
  %15 = bitcast i8* %11 to [1 x %struct.__jmp_buf_tag]***
  %16 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %15, align 8
  %17 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %16, i64 %21
  %23 = add i64 %19, 2
  %24 = and i64 %23, 4294967294
  %25 = and i64 %19, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %18, align 8
  %27 = bitcast [1 x %struct.__jmp_buf_tag]** %22 to i64*
  store i64 %14, i64* %27, align 8
  %28 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %13, i64 0, i64 0
  %29 = call i32 @_setjmp(%struct.__jmp_buf_tag* %28) #13
  %30 = icmp eq i32 %29, 0
  %31 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %7, align 8
  br i1 %30, label %34, label %32

32:                                               ; preds = %2
  %33 = call zeroext i1 @_ZN14JpegDecoderMgr11returnFalseEPKc(%class.JpegDecoderMgr* %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %38

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %31, i64 0, i32 0
  %36 = call i32 @jpeg_skip_scanlines(%struct.jpeg_decompress_struct* %35, i32 %1) #12
  %37 = icmp eq i32 %36, %1
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i1 [ %33, %32 ], [ %37, %34 ]
  %40 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %10, align 8
  %41 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %40, i64 0, i32 1, i32 0, i32 0, i64 32
  %42 = bitcast i8* %41 to %class.SkTArray*
  %43 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %40, i64 0, i32 1, i32 0, i32 0, i64 40
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 4294967294
  %47 = add nuw nsw i64 %46, 4294967294
  %48 = and i64 %47, 4294967294
  %49 = and i64 %45, -4294967295
  %50 = or i64 %48, %49
  store i64 %50, i64* %44, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %42, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %4) #12
  ret i1 %39
}

declare i32 @jpeg_skip_scanlines(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkJpegCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkJpegCodec* nocapture readonly, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* readonly dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %4, align 8
  %6 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %5, i64 0, i32 0
  %7 = tail call fastcc zeroext i1 @_ZL16is_yuv_supportedPK22jpeg_decompress_structRK11SkJpegCodecPKN16SkYUVAPixmapInfo18SupportedDataTypesEPS5_(%struct.jpeg_decompress_struct* %6, %class.SkJpegCodec* dereferenceable(1208) %0, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %1, %class.SkYUVAPixmapInfo* %2)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL16is_yuv_supportedPK22jpeg_decompress_structRK11SkJpegCodecPKN16SkYUVAPixmapInfo18SupportedDataTypesEPS5_(%struct.jpeg_decompress_struct* nocapture readonly, %class.SkJpegCodec* nocapture readonly dereferenceable(1208), %"class.SkYUVAPixmapInfo::SupportedDataTypes"* readonly, %class.SkYUVAPixmapInfo*) unnamed_addr #1 {
  %5 = alloca [4 x i32], align 16
  %6 = alloca [4 x i64], align 16
  %7 = alloca %class.SkYUVAInfo, align 4
  %8 = alloca %class.SkYUVAPixmapInfo, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %105

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %14 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 1, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %105

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 1, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %105

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 2, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %105

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 2, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %105

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, 1
  %36 = icmp eq i32 %34, 1
  %37 = and i1 %35, %36
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = icmp eq i32 %32, 2
  %40 = and i1 %39, %36
  br i1 %40, label %51, label %41

41:                                               ; preds = %38
  %42 = icmp eq i32 %34, 2
  %43 = and i1 %39, %42
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = and i1 %35, %42
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = icmp eq i32 %32, 4
  %48 = and i1 %47, %36
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = and i1 %47, %42
  br i1 %50, label %51, label %105

51:                                               ; preds = %49, %46, %44, %41, %38, %30
  %52 = phi i32 [ 1, %30 ], [ 2, %38 ], [ 3, %41 ], [ 4, %44 ], [ 5, %46 ], [ 6, %49 ]
  %53 = icmp eq %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %2, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %2, i64 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %105, label %59

59:                                               ; preds = %54, %51
  %60 = icmp eq %class.SkYUVAPixmapInfo* %3, null
  br i1 %60, label %105, label %61

61:                                               ; preds = %59
  %62 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #12
  %63 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  %64 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  %65 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  %66 = bitcast [4 x i64]* %6 to i8*
  %67 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #12
  %68 = getelementptr inbounds [4 x i64], [4 x i64]* %6, i64 0, i64 0
  %69 = getelementptr inbounds [4 x i64], [4 x i64]* %6, i64 0, i64 1
  %70 = getelementptr inbounds [4 x i64], [4 x i64]* %6, i64 0, i64 2
  %71 = bitcast [4 x i64]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 32, i1 false)
  store i32 1, i32* %63, align 16
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = shl i32 %73, 3
  %75 = zext i32 %74 to i64
  store i64 %75, i64* %68, align 16
  store i32 1, i32* %64, align 4
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 1, i32 7
  %77 = load i32, i32* %76, align 4
  %78 = shl i32 %77, 3
  %79 = zext i32 %78 to i64
  store i64 %79, i64* %69, align 8
  store i32 1, i32* %65, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 2, i32 7
  %81 = load i32, i32* %80, align 4
  %82 = shl i32 %81, 3
  %83 = zext i32 %82 to i64
  store i64 %83, i64* %70, align 16
  %84 = bitcast %class.SkYUVAInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #12
  %85 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %1, i64 0, i32 0, i32 1, i32 0
  %86 = bitcast %class.SkYUVAInfo* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %86, i8 -86, i64 32, i1 false)
  %87 = load i32, i32* %85, align 8
  %88 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %1, i64 0, i32 0, i32 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %87 to i64
  %93 = or i64 %91, %92
  %94 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %1, i64 0, i32 0, i32 7
  %95 = load i32, i32* %94, align 4
  call void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo* nonnull %7, i64 %93, i32 1, i32 %52, i32 0, i32 %95, i32 0, i32 0) #12
  %96 = bitcast %class.SkYUVAPixmapInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %96) #12
  call void @_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo* nonnull %8, %class.SkYUVAInfo* nonnull dereferenceable(32) %7, i32* nonnull %63, i64* nonnull %68) #12
  %97 = bitcast %class.SkYUVAPixmapInfo* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* nonnull align 8 %96, i64 32, i1 false) #12
  %98 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %3, i64 0, i32 1
  %99 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1
  %100 = call dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"* %98, %"struct.std::__1::array"* dereferenceable(96) %99) #12
  %101 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %3, i64 0, i32 2
  %102 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 2
  %103 = bitcast %"struct.std::__1::array.38"* %101 to i8*
  %104 = bitcast %"struct.std::__1::array.38"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 36, i1 false) #12
  call void @_ZN16SkYUVAPixmapInfoD2Ev(%class.SkYUVAPixmapInfo* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #12
  br label %105

105:                                              ; preds = %54, %49, %59, %61, %12, %18, %22, %26, %4
  %106 = phi i1 [ false, %4 ], [ false, %26 ], [ false, %22 ], [ false, %18 ], [ false, %12 ], [ false, %49 ], [ true, %59 ], [ true, %61 ], [ false, %54 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkJpegCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkJpegCodec* nocapture readonly, %class.SkYUVAPixmaps* nocapture readonly dereferenceable(208)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %4 = alloca [3 x i8**], align 16
  %5 = alloca [32 x i8*], align 16
  %6 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %6, align 8
  %8 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0
  %9 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %44

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0, i32 44
  %14 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 1, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %44

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 1, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %44

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 2, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %44

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 2, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %14, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %32, -1
  %36 = add i32 %34, -1
  %37 = or i32 %35, %36
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %46, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %32, 4
  %41 = add i32 %34, -1
  %42 = icmp ult i32 %41, 2
  %43 = and i1 %40, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %39, %2, %26, %22, %18, %12
  %45 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 6) #12
  br label %501

46:                                               ; preds = %39, %30
  %47 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %49 = bitcast [1 x %struct.__jmp_buf_tag]* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 200, i1 false)
  %50 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 2
  %51 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %50, %struct.skjpeg_error_mgr** %51, align 8
  %52 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %53 = bitcast i8* %52 to %class.SkTArray*
  %54 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %55 = ptrtoint [1 x %struct.__jmp_buf_tag]* %54 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %53, i32 1, i32 1) #12
  %56 = bitcast i8* %52 to [1 x %struct.__jmp_buf_tag]***
  %57 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %56, align 8
  %58 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %57, i64 %62
  %64 = add i64 %60, 2
  %65 = and i64 %64, 4294967294
  %66 = and i64 %60, -4294967295
  %67 = or i64 %65, %66
  store i64 %67, i64* %59, align 8
  %68 = bitcast [1 x %struct.__jmp_buf_tag]** %63 to i64*
  store i64 %55, i64* %68, align 8
  %69 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %54, i64 0, i64 0
  %70 = call i32 @_setjmp(%struct.__jmp_buf_tag* %69) #13
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %46
  %73 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %6, align 8
  %74 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 6) #12
  br label %488

75:                                               ; preds = %46
  %76 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0, i32 16
  store i32 1, i32* %76, align 4
  %77 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %8) #12
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %6, align 8
  %81 = call i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr* %80, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 6) #12
  br label %488

82:                                               ; preds = %75
  %83 = bitcast [3 x i8**]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #12
  %84 = getelementptr inbounds [3 x i8**], [3 x i8**]* %4, i64 0, i64 0
  %85 = getelementptr inbounds [3 x i8**], [3 x i8**]* %4, i64 0, i64 1
  %86 = getelementptr inbounds [3 x i8**], [3 x i8**]* %4, i64 0, i64 2
  %87 = bitcast [32 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %87) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 256, i1 false)
  %88 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 0
  store i8** %88, i8*** %84, align 16
  %89 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 16
  store i8** %89, i8*** %85, align 8
  %90 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 24
  store i8** %90, i8*** %86, align 16
  %91 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = shl i32 %93, 3
  %95 = icmp sgt i32 %93, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %82
  %97 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = sext i32 %94 to i64
  br label %106

100:                                              ; preds = %82
  %101 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = sext i32 %94 to i64
  br label %179

106:                                              ; preds = %179, %96
  %107 = phi i64 [ %99, %96 ], [ %105, %179 ]
  %108 = phi i64 [ %98, %96 ], [ %104, %179 ]
  %109 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 1, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 2, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 2, i32 1
  %116 = load i64, i64* %115, align 8
  store i8* %110, i8** %89, align 16
  store i8* %114, i8** %90, align 16
  %117 = getelementptr inbounds i8, i8* %110, i64 %112
  %118 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 17
  store i8* %117, i8** %118, align 8
  %119 = getelementptr inbounds i8, i8* %114, i64 %116
  %120 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 25
  store i8* %119, i8** %120, align 8
  %121 = shl i64 %112, 1
  %122 = getelementptr inbounds i8, i8* %110, i64 %121
  %123 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 18
  store i8* %122, i8** %123, align 16
  %124 = shl i64 %116, 1
  %125 = getelementptr inbounds i8, i8* %114, i64 %124
  %126 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 26
  store i8* %125, i8** %126, align 16
  %127 = mul i64 %112, 3
  %128 = getelementptr inbounds i8, i8* %110, i64 %127
  %129 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 19
  store i8* %128, i8** %129, align 8
  %130 = mul i64 %116, 3
  %131 = getelementptr inbounds i8, i8* %114, i64 %130
  %132 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 27
  store i8* %131, i8** %132, align 8
  %133 = shl i64 %112, 2
  %134 = getelementptr inbounds i8, i8* %110, i64 %133
  %135 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 20
  store i8* %134, i8** %135, align 16
  %136 = shl i64 %116, 2
  %137 = getelementptr inbounds i8, i8* %114, i64 %136
  %138 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 28
  store i8* %137, i8** %138, align 16
  %139 = mul i64 %112, 5
  %140 = getelementptr inbounds i8, i8* %110, i64 %139
  %141 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 21
  store i8* %140, i8** %141, align 8
  %142 = mul i64 %116, 5
  %143 = getelementptr inbounds i8, i8* %114, i64 %142
  %144 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 29
  store i8* %143, i8** %144, align 8
  %145 = mul i64 %112, 6
  %146 = getelementptr inbounds i8, i8* %110, i64 %145
  %147 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 22
  store i8* %146, i8** %147, align 16
  %148 = mul i64 %116, 6
  %149 = getelementptr inbounds i8, i8* %114, i64 %148
  %150 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 30
  store i8* %149, i8** %150, align 16
  %151 = mul i64 %112, 7
  %152 = getelementptr inbounds i8, i8* %110, i64 %151
  %153 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 23
  store i8* %152, i8** %153, align 8
  %154 = mul i64 %116, 7
  %155 = getelementptr inbounds i8, i8* %114, i64 %154
  %156 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 31
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 1
  %158 = mul i64 %108, %107
  %159 = shl i64 %112, 3
  %160 = shl i64 %116, 3
  %161 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0, i32 28
  %162 = load i32, i32* %161, align 4
  %163 = udiv i32 %162, %94
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %307

165:                                              ; preds = %106
  %166 = icmp sgt i64 %107, 1
  %167 = select i1 %166, i64 %107, i64 1
  %168 = and i64 %167, 9223372036854775804
  %169 = add nsw i64 %168, -4
  %170 = lshr exact i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = icmp ult i64 %167, 4
  %173 = and i64 %167, 9223372036854775804
  %174 = and i64 %171, 3
  %175 = icmp ult i64 %169, 12
  %176 = sub nsw i64 %171, %174
  %177 = icmp eq i64 %174, 0
  %178 = icmp eq i64 %167, %173
  br label %186

179:                                              ; preds = %100, %179
  %180 = phi i64 [ 0, %100 ], [ %184, %179 ]
  %181 = mul i64 %104, %180
  %182 = getelementptr inbounds i8, i8* %102, i64 %181
  %183 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %180
  store i8* %182, i8** %183, align 8
  %184 = add nuw nsw i64 %180, 1
  %185 = icmp slt i64 %184, %105
  br i1 %185, label %179, label %106

186:                                              ; preds = %165, %263
  %187 = phi i32 [ %296, %263 ], [ 0, %165 ]
  %188 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %8, i8*** nonnull %84, i32 %94) #12
  %189 = icmp ult i32 %188, %94
  br i1 %189, label %486, label %190

190:                                              ; preds = %186
  br i1 %95, label %191, label %263

191:                                              ; preds = %190
  br i1 %172, label %192, label %194

192:                                              ; preds = %262, %191
  %193 = phi i64 [ 0, %191 ], [ %173, %262 ]
  br label %298

194:                                              ; preds = %191
  br i1 %175, label %244, label %195

195:                                              ; preds = %194, %195
  %196 = phi i64 [ %241, %195 ], [ 0, %194 ]
  %197 = phi i64 [ %242, %195 ], [ %176, %194 ]
  %198 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %196
  %199 = bitcast i8** %198 to <2 x i8*>*
  %200 = load <2 x i8*>, <2 x i8*>* %199, align 16
  %201 = getelementptr inbounds i8*, i8** %198, i64 2
  %202 = bitcast i8** %201 to <2 x i8*>*
  %203 = load <2 x i8*>, <2 x i8*>* %202, align 16
  %204 = getelementptr inbounds i8, <2 x i8*> %200, i64 %158
  %205 = getelementptr inbounds i8, <2 x i8*> %203, i64 %158
  %206 = bitcast i8** %198 to <2 x i8*>*
  store <2 x i8*> %204, <2 x i8*>* %206, align 16
  %207 = bitcast i8** %201 to <2 x i8*>*
  store <2 x i8*> %205, <2 x i8*>* %207, align 16
  %208 = or i64 %196, 4
  %209 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %208
  %210 = bitcast i8** %209 to <2 x i8*>*
  %211 = load <2 x i8*>, <2 x i8*>* %210, align 16
  %212 = getelementptr inbounds i8*, i8** %209, i64 2
  %213 = bitcast i8** %212 to <2 x i8*>*
  %214 = load <2 x i8*>, <2 x i8*>* %213, align 16
  %215 = getelementptr inbounds i8, <2 x i8*> %211, i64 %158
  %216 = getelementptr inbounds i8, <2 x i8*> %214, i64 %158
  %217 = bitcast i8** %209 to <2 x i8*>*
  store <2 x i8*> %215, <2 x i8*>* %217, align 16
  %218 = bitcast i8** %212 to <2 x i8*>*
  store <2 x i8*> %216, <2 x i8*>* %218, align 16
  %219 = or i64 %196, 8
  %220 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %219
  %221 = bitcast i8** %220 to <2 x i8*>*
  %222 = load <2 x i8*>, <2 x i8*>* %221, align 16
  %223 = getelementptr inbounds i8*, i8** %220, i64 2
  %224 = bitcast i8** %223 to <2 x i8*>*
  %225 = load <2 x i8*>, <2 x i8*>* %224, align 16
  %226 = getelementptr inbounds i8, <2 x i8*> %222, i64 %158
  %227 = getelementptr inbounds i8, <2 x i8*> %225, i64 %158
  %228 = bitcast i8** %220 to <2 x i8*>*
  store <2 x i8*> %226, <2 x i8*>* %228, align 16
  %229 = bitcast i8** %223 to <2 x i8*>*
  store <2 x i8*> %227, <2 x i8*>* %229, align 16
  %230 = or i64 %196, 12
  %231 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %230
  %232 = bitcast i8** %231 to <2 x i8*>*
  %233 = load <2 x i8*>, <2 x i8*>* %232, align 16
  %234 = getelementptr inbounds i8*, i8** %231, i64 2
  %235 = bitcast i8** %234 to <2 x i8*>*
  %236 = load <2 x i8*>, <2 x i8*>* %235, align 16
  %237 = getelementptr inbounds i8, <2 x i8*> %233, i64 %158
  %238 = getelementptr inbounds i8, <2 x i8*> %236, i64 %158
  %239 = bitcast i8** %231 to <2 x i8*>*
  store <2 x i8*> %237, <2 x i8*>* %239, align 16
  %240 = bitcast i8** %234 to <2 x i8*>*
  store <2 x i8*> %238, <2 x i8*>* %240, align 16
  %241 = add i64 %196, 16
  %242 = add i64 %197, -4
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %195, !llvm.loop !17

244:                                              ; preds = %195, %194
  %245 = phi i64 [ 0, %194 ], [ %241, %195 ]
  br i1 %177, label %262, label %246

246:                                              ; preds = %244, %246
  %247 = phi i64 [ %259, %246 ], [ %245, %244 ]
  %248 = phi i64 [ %260, %246 ], [ %174, %244 ]
  %249 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %247
  %250 = bitcast i8** %249 to <2 x i8*>*
  %251 = load <2 x i8*>, <2 x i8*>* %250, align 16
  %252 = getelementptr inbounds i8*, i8** %249, i64 2
  %253 = bitcast i8** %252 to <2 x i8*>*
  %254 = load <2 x i8*>, <2 x i8*>* %253, align 16
  %255 = getelementptr inbounds i8, <2 x i8*> %251, i64 %158
  %256 = getelementptr inbounds i8, <2 x i8*> %254, i64 %158
  %257 = bitcast i8** %249 to <2 x i8*>*
  store <2 x i8*> %255, <2 x i8*>* %257, align 16
  %258 = bitcast i8** %252 to <2 x i8*>*
  store <2 x i8*> %256, <2 x i8*>* %258, align 16
  %259 = add i64 %247, 4
  %260 = add i64 %248, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %246, !llvm.loop !19

262:                                              ; preds = %246, %244
  br i1 %178, label %263, label %192

263:                                              ; preds = %298, %262, %190
  %264 = load i8*, i8** %89, align 16
  %265 = getelementptr inbounds i8, i8* %264, i64 %159
  store i8* %265, i8** %89, align 16
  %266 = load i8*, i8** %90, align 16
  %267 = getelementptr inbounds i8, i8* %266, i64 %160
  store i8* %267, i8** %90, align 16
  %268 = load i8*, i8** %118, align 8
  %269 = getelementptr inbounds i8, i8* %268, i64 %159
  store i8* %269, i8** %118, align 8
  %270 = load i8*, i8** %120, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 %160
  store i8* %271, i8** %120, align 8
  %272 = load i8*, i8** %123, align 16
  %273 = getelementptr inbounds i8, i8* %272, i64 %159
  store i8* %273, i8** %123, align 16
  %274 = load i8*, i8** %126, align 16
  %275 = getelementptr inbounds i8, i8* %274, i64 %160
  store i8* %275, i8** %126, align 16
  %276 = load i8*, i8** %129, align 8
  %277 = getelementptr inbounds i8, i8* %276, i64 %159
  store i8* %277, i8** %129, align 8
  %278 = load i8*, i8** %132, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %160
  store i8* %279, i8** %132, align 8
  %280 = load i8*, i8** %135, align 16
  %281 = getelementptr inbounds i8, i8* %280, i64 %159
  store i8* %281, i8** %135, align 16
  %282 = load i8*, i8** %138, align 16
  %283 = getelementptr inbounds i8, i8* %282, i64 %160
  store i8* %283, i8** %138, align 16
  %284 = load i8*, i8** %141, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 %159
  store i8* %285, i8** %141, align 8
  %286 = load i8*, i8** %144, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 %160
  store i8* %287, i8** %144, align 8
  %288 = load i8*, i8** %147, align 16
  %289 = getelementptr inbounds i8, i8* %288, i64 %159
  store i8* %289, i8** %147, align 16
  %290 = load i8*, i8** %150, align 16
  %291 = getelementptr inbounds i8, i8* %290, i64 %160
  store i8* %291, i8** %150, align 16
  %292 = load i8*, i8** %153, align 8
  %293 = getelementptr inbounds i8, i8* %292, i64 %159
  store i8* %293, i8** %153, align 8
  %294 = load i8*, i8** %156, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 %160
  store i8* %295, i8** %156, align 8
  %296 = add nuw nsw i32 %187, 1
  %297 = icmp slt i32 %296, %163
  br i1 %297, label %186, label %305

298:                                              ; preds = %192, %298
  %299 = phi i64 [ %303, %298 ], [ %193, %192 ]
  %300 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %299
  %301 = load i8*, i8** %300, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 %158
  store i8* %302, i8** %300, align 8
  %303 = add nuw nsw i64 %299, 1
  %304 = icmp slt i64 %303, %107
  br i1 %304, label %298, label %263, !llvm.loop !21

305:                                              ; preds = %263
  %306 = load i32, i32* %161, align 4
  br label %307

307:                                              ; preds = %305, %106
  %308 = phi i32 [ %306, %305 ], [ %162, %106 ]
  %309 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %7, i64 0, i32 0, i32 34
  %310 = load i32, i32* %309, align 8
  %311 = sub i32 %308, %310
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %485, label %313

313:                                              ; preds = %307
  %314 = load i64, i64* %157, align 8
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %313
  %317 = call i8* @_Z15sk_malloc_throwmm(i64 %314, i64 1) #12
  br label %318

318:                                              ; preds = %313, %316
  %319 = phi i8* [ %317, %316 ], [ null, %313 ]
  %320 = icmp slt i32 %311, %94
  br i1 %320, label %321, label %386

321:                                              ; preds = %318
  %322 = sext i32 %311 to i64
  %323 = sub nsw i64 %107, %322
  %324 = icmp ult i64 %323, 4
  br i1 %324, label %325, label %327

325:                                              ; preds = %384, %321
  %326 = phi i64 [ %322, %321 ], [ %329, %384 ]
  br label %466

327:                                              ; preds = %321
  %328 = and i64 %323, -4
  %329 = add nsw i64 %328, %322
  %330 = insertelement <2 x i8*> undef, i8* %319, i32 0
  %331 = shufflevector <2 x i8*> %330, <2 x i8*> undef, <2 x i32> zeroinitializer
  %332 = insertelement <2 x i8*> undef, i8* %319, i32 0
  %333 = shufflevector <2 x i8*> %332, <2 x i8*> undef, <2 x i32> zeroinitializer
  %334 = add nsw i64 %328, -4
  %335 = lshr exact i64 %334, 2
  %336 = add nuw nsw i64 %335, 1
  %337 = and i64 %336, 3
  %338 = icmp ult i64 %334, 12
  br i1 %338, label %370, label %339

339:                                              ; preds = %327
  %340 = sub nsw i64 %336, %337
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi i64 [ 0, %339 ], [ %367, %341 ]
  %343 = phi i64 [ %340, %339 ], [ %368, %341 ]
  %344 = add i64 %342, %322
  %345 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %344
  %346 = bitcast i8** %345 to <2 x i8*>*
  store <2 x i8*> %331, <2 x i8*>* %346, align 8
  %347 = getelementptr inbounds i8*, i8** %345, i64 2
  %348 = bitcast i8** %347 to <2 x i8*>*
  store <2 x i8*> %333, <2 x i8*>* %348, align 8
  %349 = or i64 %342, 4
  %350 = add i64 %349, %322
  %351 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %350
  %352 = bitcast i8** %351 to <2 x i8*>*
  store <2 x i8*> %331, <2 x i8*>* %352, align 8
  %353 = getelementptr inbounds i8*, i8** %351, i64 2
  %354 = bitcast i8** %353 to <2 x i8*>*
  store <2 x i8*> %333, <2 x i8*>* %354, align 8
  %355 = or i64 %342, 8
  %356 = add i64 %355, %322
  %357 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %356
  %358 = bitcast i8** %357 to <2 x i8*>*
  store <2 x i8*> %331, <2 x i8*>* %358, align 8
  %359 = getelementptr inbounds i8*, i8** %357, i64 2
  %360 = bitcast i8** %359 to <2 x i8*>*
  store <2 x i8*> %333, <2 x i8*>* %360, align 8
  %361 = or i64 %342, 12
  %362 = add i64 %361, %322
  %363 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %362
  %364 = bitcast i8** %363 to <2 x i8*>*
  store <2 x i8*> %331, <2 x i8*>* %364, align 8
  %365 = getelementptr inbounds i8*, i8** %363, i64 2
  %366 = bitcast i8** %365 to <2 x i8*>*
  store <2 x i8*> %333, <2 x i8*>* %366, align 8
  %367 = add i64 %342, 16
  %368 = add i64 %343, -4
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %341, !llvm.loop !23

370:                                              ; preds = %341, %327
  %371 = phi i64 [ 0, %327 ], [ %367, %341 ]
  %372 = icmp eq i64 %337, 0
  br i1 %372, label %384, label %373

373:                                              ; preds = %370, %373
  %374 = phi i64 [ %381, %373 ], [ %371, %370 ]
  %375 = phi i64 [ %382, %373 ], [ %337, %370 ]
  %376 = add i64 %374, %322
  %377 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %376
  %378 = bitcast i8** %377 to <2 x i8*>*
  store <2 x i8*> %331, <2 x i8*>* %378, align 8
  %379 = getelementptr inbounds i8*, i8** %377, i64 2
  %380 = bitcast i8** %379 to <2 x i8*>*
  store <2 x i8*> %333, <2 x i8*>* %380, align 8
  %381 = add i64 %374, 4
  %382 = add i64 %375, -1
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %373, !llvm.loop !24

384:                                              ; preds = %373, %370
  %385 = icmp eq i64 %323, %328
  br i1 %385, label %386, label %325

386:                                              ; preds = %466, %384, %318
  %387 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %388 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %387, i64 1, i32 11
  %389 = load i32, i32* %388, align 4
  %390 = shl nsw i32 %163, 3
  %391 = sub i32 %389, %390
  %392 = icmp slt i32 %391, 8
  br i1 %392, label %393, label %471

393:                                              ; preds = %386
  %394 = sext i32 %391 to i64
  %395 = sub nsw i64 8, %394
  %396 = icmp ult i64 %395, 2
  br i1 %396, label %397, label %399

397:                                              ; preds = %464, %393
  %398 = phi i64 [ %394, %393 ], [ %401, %464 ]
  br label %477

399:                                              ; preds = %393
  %400 = and i64 %395, -2
  %401 = add nsw i64 %400, %394
  %402 = insertelement <2 x i8*> undef, i8* %319, i32 0
  %403 = shufflevector <2 x i8*> %402, <2 x i8*> undef, <2 x i32> zeroinitializer
  %404 = add nsw i64 %400, -2
  %405 = lshr exact i64 %404, 1
  %406 = add nuw i64 %405, 1
  %407 = and i64 %406, 3
  %408 = icmp ult i64 %404, 6
  br i1 %408, label %448, label %409

409:                                              ; preds = %399
  %410 = sub i64 %406, %407
  br label %411

411:                                              ; preds = %411, %409
  %412 = phi i64 [ 0, %409 ], [ %445, %411 ]
  %413 = phi i64 [ %410, %409 ], [ %446, %411 ]
  %414 = add i64 %412, %394
  %415 = add nsw i64 %414, 16
  %416 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %415
  %417 = bitcast i8** %416 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %417, align 8
  %418 = add nsw i64 %414, 24
  %419 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %418
  %420 = bitcast i8** %419 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %420, align 8
  %421 = or i64 %412, 2
  %422 = add i64 %421, %394
  %423 = add nsw i64 %422, 16
  %424 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %423
  %425 = bitcast i8** %424 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %425, align 8
  %426 = add nsw i64 %422, 24
  %427 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %426
  %428 = bitcast i8** %427 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %428, align 8
  %429 = or i64 %412, 4
  %430 = add i64 %429, %394
  %431 = add nsw i64 %430, 16
  %432 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %431
  %433 = bitcast i8** %432 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %433, align 8
  %434 = add nsw i64 %430, 24
  %435 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %434
  %436 = bitcast i8** %435 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %436, align 8
  %437 = or i64 %412, 6
  %438 = add i64 %437, %394
  %439 = add nsw i64 %438, 16
  %440 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %439
  %441 = bitcast i8** %440 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %441, align 8
  %442 = add nsw i64 %438, 24
  %443 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %442
  %444 = bitcast i8** %443 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %444, align 8
  %445 = add i64 %412, 8
  %446 = add i64 %413, -4
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %411, !llvm.loop !25

448:                                              ; preds = %411, %399
  %449 = phi i64 [ 0, %399 ], [ %445, %411 ]
  %450 = icmp eq i64 %407, 0
  br i1 %450, label %464, label %451

451:                                              ; preds = %448, %451
  %452 = phi i64 [ %461, %451 ], [ %449, %448 ]
  %453 = phi i64 [ %462, %451 ], [ %407, %448 ]
  %454 = add i64 %452, %394
  %455 = add nsw i64 %454, 16
  %456 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %455
  %457 = bitcast i8** %456 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %457, align 8
  %458 = add nsw i64 %454, 24
  %459 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %458
  %460 = bitcast i8** %459 to <2 x i8*>*
  store <2 x i8*> %403, <2 x i8*>* %460, align 8
  %461 = add i64 %452, 2
  %462 = add i64 %453, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %451, !llvm.loop !26

464:                                              ; preds = %451, %448
  %465 = icmp eq i64 %395, %400
  br i1 %465, label %471, label %397

466:                                              ; preds = %325, %466
  %467 = phi i64 [ %469, %466 ], [ %326, %325 ]
  %468 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %467
  store i8* %319, i8** %468, align 8
  %469 = add nsw i64 %467, 1
  %470 = icmp eq i64 %469, %107
  br i1 %470, label %386, label %466, !llvm.loop !27

471:                                              ; preds = %477, %464, %386
  %472 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %8, i8*** nonnull %84, i32 %94) #12
  %473 = icmp ult i32 %472, %311
  %474 = icmp eq i8* %319, null
  br i1 %474, label %476, label %475

475:                                              ; preds = %471
  call void @_Z7sk_freePv(i8* nonnull %319) #12
  br label %476

476:                                              ; preds = %471, %475
  br i1 %473, label %486, label %485

477:                                              ; preds = %397, %477
  %478 = phi i64 [ %483, %477 ], [ %398, %397 ]
  %479 = add nsw i64 %478, 16
  %480 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %479
  store i8* %319, i8** %480, align 8
  %481 = add nsw i64 %478, 24
  %482 = getelementptr inbounds [32 x i8*], [32 x i8*]* %5, i64 0, i64 %481
  store i8* %319, i8** %482, align 8
  %483 = add nsw i64 %478, 1
  %484 = icmp slt i64 %483, 8
  br i1 %484, label %477, label %471, !llvm.loop !28

485:                                              ; preds = %476, %307
  br label %486

486:                                              ; preds = %186, %476, %485
  %487 = phi i32 [ 0, %485 ], [ 6, %476 ], [ 6, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #12
  br label %488

488:                                              ; preds = %486, %79, %72
  %489 = phi i32 [ %74, %72 ], [ %487, %486 ], [ %81, %79 ]
  %490 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %51, align 8
  %491 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %490, i64 0, i32 1, i32 0, i32 0, i64 32
  %492 = bitcast i8* %491 to %class.SkTArray*
  %493 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %490, i64 0, i32 1, i32 0, i32 0, i64 40
  %494 = bitcast i8* %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = and i64 %495, 4294967294
  %497 = add nuw nsw i64 %496, 4294967294
  %498 = and i64 %497, 4294967294
  %499 = and i64 %495, -4294967295
  %500 = or i64 %498, %499
  store i64 %500, i64* %494, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %492, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %47) #12
  br label %501

501:                                              ; preds = %488, %44
  %502 = phi i32 [ %489, %488 ], [ %45, %44 ]
  ret i32 %502
}

declare i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct*, i8***, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z13SkGetJpegInfoPKvmP7SkISizePN13SkEncodedInfo5ColorEP15SkEncodedOrigin(i8*, i64, %struct.SkISize*, i32*, i32*) local_unnamed_addr #1 {
  %6 = alloca i32, align 4
  %7 = alloca %class.SkMemoryStream, align 8
  %8 = alloca %class.JpegDecoderMgr, align 8
  %9 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %10 = alloca i32, align 4
  %11 = icmp ugt i64 %1, 2
  br i1 %11, label %12, label %125

12:                                               ; preds = %5
  %13 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN11SkJpegCodec6IsJpegEPKvmE7jpegSig, i64 0, i64 0), i64 3) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %125

15:                                               ; preds = %12
  %16 = bitcast %class.SkMemoryStream* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %7, i64 0, i32 1, i32 0
  %19 = bitcast %class.SkMemoryStream* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream* nonnull %7, i8* %0, i64 %1, i1 zeroext false) #12
  %20 = bitcast %class.JpegDecoderMgr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1976, i8* nonnull %20) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast (<{ { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, [4 x i8], double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [4 x i8], [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, [4 x i8], %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, [1 x i8], i16, i16, i32, i8, [3 x i8], i32, [4 x i8], %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x i8], [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }, %struct.skjpeg_source_mgr, { { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, [4 x i8], i8**, i32, i32 }, %class.SkSTArray }, %struct.jpeg_progress_mgr, i8, [7 x i8] }>* @__const._Z13SkGetJpegInfoPKvmP7SkISizePN13SkEncodedInfo5ColorEP15SkEncodedOrigin.decoderMgr to i8*), i64 1976, i1 false)
  %21 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN14JpegDecoderMgrC1EP8SkStream(%class.JpegDecoderMgr* nonnull %8, %class.SkStream* nonnull %21) #12
  %22 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 1
  %24 = bitcast [1 x %struct.__jmp_buf_tag]* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 200, i1 false)
  %25 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %25, %struct.skjpeg_error_mgr** %26, align 8
  %27 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %28 = bitcast i8* %27 to %class.SkTArray*
  %29 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %9, i64 0, i32 1
  %30 = ptrtoint [1 x %struct.__jmp_buf_tag]* %29 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %28, i32 1, i32 1) #12
  %31 = bitcast i8* %27 to [1 x %struct.__jmp_buf_tag]***
  %32 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %31, align 8
  %33 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %35, 1
  %37 = and i64 %36, 2147483647
  %38 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %32, i64 %37
  %39 = add i64 %35, 2
  %40 = and i64 %39, 4294967294
  %41 = and i64 %35, -4294967295
  %42 = or i64 %40, %41
  store i64 %42, i64* %34, align 8
  %43 = bitcast [1 x %struct.__jmp_buf_tag]** %38 to i64*
  store i64 %30, i64* %43, align 8
  %44 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %29, i64 0, i64 0
  %45 = call i32 @_setjmp(%struct.__jmp_buf_tag* %44) #13
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %103

47:                                               ; preds = %15
  call void @_ZN14JpegDecoderMgr4initEv(%class.JpegDecoderMgr* nonnull %8) #12
  %48 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 0
  call void @jpeg_save_markers(%struct.jpeg_decompress_struct* nonnull %48, i32 225, i32 65535) #12
  call void @jpeg_save_markers(%struct.jpeg_decompress_struct* nonnull %48, i32 226, i32 65535) #12
  %49 = call i32 @jpeg_read_header(%struct.jpeg_decompress_struct* nonnull %48, i32 1) #12
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %103

51:                                               ; preds = %47
  %52 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #12
  store i32 -1431655766, i32* %10, align 4
  %53 = call zeroext i1 @_ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE(%class.JpegDecoderMgr* nonnull %8, i32* nonnull %10) #12
  br i1 %53, label %54, label %101

54:                                               ; preds = %51
  %55 = icmp eq i32* %3, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %10, align 4
  store i32 %57, i32* %3, align 4
  br label %58

58:                                               ; preds = %54, %56
  %59 = icmp eq i32* %4, null
  br i1 %59, label %92, label %60

60:                                               ; preds = %58
  %61 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #12
  store i32 -1431655766, i32* %6, align 4
  %62 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 0, i32 60
  %63 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %62, align 8
  %64 = icmp eq %struct.jpeg_marker_struct* %63, null
  br i1 %64, label %90, label %65

65:                                               ; preds = %60, %84
  %66 = phi %struct.jpeg_marker_struct* [ %86, %84 ], [ %63, %60 ]
  %67 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %66, i64 0, i32 1
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, -31
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %66, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %72, 14
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %66, i64 0, i32 4
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 @bcmp(i8* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZL21is_orientation_markerP18jpeg_marker_structP15SkEncodedOriginE8kExifSig, i64 0, i64 0), i64 5) #12
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = getelementptr inbounds i8, i8* %76, i64 6
  %81 = zext i32 %72 to i64
  %82 = add nsw i64 %81, -6
  %83 = call zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8* %80, i64 %82, i32* nonnull %6) #12
  br i1 %83, label %88, label %84

84:                                               ; preds = %79, %74, %70, %65
  %85 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %66, i64 0, i32 0
  %86 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %85, align 8
  %87 = icmp eq %struct.jpeg_marker_struct* %86, null
  br i1 %87, label %90, label %65

88:                                               ; preds = %79
  %89 = load i32, i32* %6, align 4
  br label %90

90:                                               ; preds = %84, %60, %88
  %91 = phi i32 [ %89, %88 ], [ 1, %60 ], [ 1, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #12
  store i32 %91, i32* %4, align 4
  br label %92

92:                                               ; preds = %58, %90
  %93 = icmp eq %struct.SkISize* %2, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 0, i32 7
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %8, i64 0, i32 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %2, i64 0, i32 0
  store i32 %96, i32* %99, align 4
  %100 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %2, i64 0, i32 1
  store i32 %98, i32* %100, align 4
  br label %101

101:                                              ; preds = %94, %92, %51
  %102 = phi i1 [ false, %51 ], [ true, %92 ], [ true, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #12
  br label %103

103:                                              ; preds = %101, %47, %15
  %104 = phi i1 [ false, %15 ], [ %102, %101 ], [ false, %47 ]
  %105 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %26, align 8
  %106 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %105, i64 0, i32 1, i32 0, i32 0, i64 32
  %107 = bitcast i8* %106 to %class.SkTArray*
  %108 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %105, i64 0, i32 1, i32 0, i32 0, i64 40
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 4294967294
  %112 = add nuw nsw i64 %111, 4294967294
  %113 = and i64 %112, 4294967294
  %114 = and i64 %110, -4294967295
  %115 = or i64 %113, %114
  store i64 %115, i64* %109, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %107, i32 0, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %22) #12
  call void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1976, i8* nonnull %20) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV14SkMemoryStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %116 = load %class.SkData*, %class.SkData** %18, align 8
  %117 = icmp eq %class.SkData* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %103
  %119 = getelementptr inbounds %class.SkData, %class.SkData* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %116) #12
  %123 = bitcast %class.SkData* %116 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %123) #12
  br label %124

124:                                              ; preds = %103, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %125

125:                                              ; preds = %5, %12, %124
  %126 = phi i1 [ %104, %124 ], [ false, %12 ], [ false, %5 ]
  ret i1 %126
}

declare void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream*, i8*, i64, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkJpegCodecD2Ev(%class.SkJpegCodec*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkJpegCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.SkSwizzler*, %class.SkSwizzler** %3, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %3, align 8
  %5 = icmp eq %class.SkSwizzler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkSwizzler* %4 to void (%class.SkSwizzler*)***
  %8 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %8, i64 2
  %10 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %9, align 8
  tail call void %10(%class.SkSwizzler* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* null, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_Z7sk_freePv(i8* nonnull %13) #12
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %17, align 8
  store %class.JpegDecoderMgr* null, %class.JpegDecoderMgr** %17, align 8
  %19 = icmp eq %class.JpegDecoderMgr* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr* nonnull %18) #12
  %21 = bitcast %class.JpegDecoderMgr* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %16, %20
  %23 = bitcast %class.SkJpegCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %23) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkJpegCodecD0Ev(%class.SkJpegCodec*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkJpegCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.SkSwizzler*, %class.SkSwizzler** %3, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %3, align 8
  %5 = icmp eq %class.SkSwizzler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkSwizzler* %4 to void (%class.SkSwizzler*)***
  %8 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %8, i64 2
  %10 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %9, align 8
  tail call void %10(%class.SkSwizzler* nonnull %4) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* null, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_Z7sk_freePv(i8* nonnull %13) #12
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %class.SkJpegCodec, %class.SkJpegCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %class.JpegDecoderMgr*, %class.JpegDecoderMgr** %17, align 8
  store %class.JpegDecoderMgr* null, %class.JpegDecoderMgr** %17, align 8
  %19 = icmp eq %class.JpegDecoderMgr* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN14JpegDecoderMgrD1Ev(%class.JpegDecoderMgr* nonnull %18) #12
  %21 = bitcast %class.JpegDecoderMgr* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %16, %20
  %23 = bitcast %class.SkJpegCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %23) #12
  %24 = bitcast %class.SkJpegCodec* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11SkJpegCodec18onGetEncodedFormatEv(%class.SkJpegCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK7SkCodec18onGetScanlineOrderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret %class.SkFrameHolder* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %49, align 8
  %55 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %54, i64 %51
  %56 = bitcast [1 x %struct.__jmp_buf_tag]** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

declare zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8*, i64, i32*) local_unnamed_addr #4

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* sret, i64) local_unnamed_addr #4

declare %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo*, i64, i32, i32, i32, i32, i32, i32) unnamed_addr #4

declare void @_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo* dereferenceable(32), i32*, i64*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkYUVAPixmapInfoD2Ev(%class.SkYUVAPixmapInfo*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  %4 = icmp eq %class.SkColorSpace* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = bitcast %class.SkColorSpace* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %5, %1
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %15, %11
  %22 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %25, %21
  %32 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %31, %35, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"*, %"struct.std::__1::array"* dereferenceable(96)) local_unnamed_addr #8 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::array"* %0, %1
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  store %class.SkColorSpace* %6, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %11, %15, %19
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = bitcast %struct.SkISize* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  br i1 %3, label %49, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %40, align 8
  store %class.SkColorSpace* %34, %class.SkColorSpace** %40, align 8
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %43, %39, %21
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %52 = bitcast i32* %51 to i64*
  %53 = bitcast i32* %50 to i64*
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1
  %57 = bitcast %struct.SkISize* %56 to i64*
  %58 = bitcast %struct.SkISize* %55 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  br i1 %3, label %77, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %62 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8
  %63 = icmp eq %class.SkColorSpace* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %60
  %68 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %68, align 8
  store %class.SkColorSpace* %62, %class.SkColorSpace** %68, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %75, %71, %67, %49
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %80 = bitcast i32* %79 to i64*
  %81 = bitcast i32* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1
  %85 = bitcast %struct.SkISize* %84 to i64*
  %86 = bitcast %struct.SkISize* %83 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  br i1 %3, label %105, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %89, align 8
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 1 monotonic
  br label %95

95:                                               ; preds = %92, %88
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %97 = load %class.SkColorSpace*, %class.SkColorSpace** %96, align 8
  store %class.SkColorSpace* %90, %class.SkColorSpace** %96, align 8
  %98 = icmp eq %class.SkColorSpace* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #11
  br label %105

105:                                              ; preds = %103, %99, %95, %77
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 1
  %108 = bitcast i32* %107 to i64*
  %109 = bitcast i32* %106 to i64*
  %110 = load i64, i64* %108, align 8
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1
  %113 = bitcast %struct.SkISize* %112 to i64*
  %114 = bitcast %struct.SkISize* %111 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  ret %"struct.std::__1::array"* %0
}

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!8 = distinct !{!8, !9, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!9 = distinct !{!9, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!10 = distinct !{!10, !11, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!14 = distinct !{!14, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!15 = distinct !{!15, !16, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!16 = distinct !{!16, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !22, !18}
!22 = !{!"llvm.loop.unroll.runtime.disable"}
!23 = distinct !{!23, !18}
!24 = distinct !{!24, !20}
!25 = distinct !{!25, !18}
!26 = distinct !{!26, !20}
!27 = distinct !{!27, !22, !18}
!28 = distinct !{!28, !22, !18}
