; ModuleID = '../../ui/accessibility/aura/aura_window_properties.cc'
source_filename = "../../ui/accessibility/aura/aura_window_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty.4" = type { %"class.std::__1::basic_string"*, i8*, void (i64)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::ClassProperty" = type { i32, i8*, void (i64)* }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN2ui12_GLOBAL__N_120kChildAXTreeID_ValueE = internal constant %"struct.ui::ClassProperty.4" { %"class.std::__1::basic_string"* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), void (i64)* @_ZN2ui12_GLOBAL__N_125DeallocatorkChildAXTreeIDEl }, align 8
@_ZN2ui14kChildAXTreeIDE = hidden local_unnamed_addr constant %"struct.ui::ClassProperty.4"* @_ZN2ui12_GLOBAL__N_120kChildAXTreeID_ValueE, align 8
@_ZN2uiL21kAXRoleOverride_ValueE = internal constant %"struct.ui::ClassProperty" { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), void (i64)* null }, align 8
@_ZN2ui15kAXRoleOverrideE = hidden local_unnamed_addr constant %"struct.ui::ClassProperty"* @_ZN2uiL21kAXRoleOverride_ValueE, align 8
@.str = private unnamed_addr constant [15 x i8] c"kChildAXTreeID\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"kAXRoleOverride\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15PropertyHandler11SetPropertyIN2ax5mojom4RoleEEEvPKNS_13ClassPropertyIT_EES6_(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %5 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %2
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %12 = load void (i64)*, void (i64)** %11, align 8
  br label %13

13:                                               ; preds = %10, %3
  %14 = phi void (i64)* [ %12, %10 ], [ null, %3 ]
  %15 = sext i32 %2 to i64
  %16 = sext i32 %8 to i64
  %17 = tail call i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"* %0, i8* %4, i8* %6, void (i64)* %14, i64 %15, i64 %16) #3
  %18 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %19 = load void (i64)*, void (i64)** %18, align 8
  %20 = icmp eq void (i64)* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %13
  %22 = load i32, i32* %7, align 8
  %23 = sext i32 %22 to i64
  %24 = icmp eq i64 %17, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void %19(i64 %17) #3
  br label %26

26:                                               ; preds = %13, %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui15PropertyHandler11GetPropertyIN2ax5mojom4RoleEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %4 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = tail call i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"* %0, i8* %3, i64 %6) #3
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15PropertyHandler13ClearPropertyIN2ax5mojom4RoleEEEvPKNS_13ClassPropertyIT_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %6 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %4 to i64
  %9 = tail call i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"* %0, i8* %5, i8* %7, void (i64)* null, i64 %8, i64 %8) #3
  %10 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %11 = load void (i64)*, void (i64)** %10, align 8
  %12 = icmp eq void (i64)* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load i32, i32* %3, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp eq i64 %9, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void %11(i64 %9) #3
  br label %18

18:                                               ; preds = %2, %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_125DeallocatorkChildAXTreeIDEl(i64) #0 {
  %2 = inttoptr i64 %0 to %"class.std::__1::basic_string"*
  %3 = icmp eq i64 %0, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #4
  br label %12

12:                                               ; preds = %4, %9
  %13 = inttoptr i64 %0 to i8*
  tail call void @_ZdlPv(i8* %13) #4
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

declare i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"*, i8*, i8*, void (i64)*, i64, i64) local_unnamed_addr #2

declare i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
