; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/inline_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/inline_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::InlinePass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.328", %"class.std::__1::set.158", %"class.std::__1::set.158", %"class.std::__1::set.158", i32, [4 x i8], %"class.std::__1::unordered_set.910" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.940" = type { %"class.std::__1::__function::__policy_func.944" }
%"class.std::__1::__function::__policy_func.944" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.945", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.945" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::analysis::DebugInlinedAtContext" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DebugScope", %"class.std::__1::unordered_map.249" }
%"class.std::__1::tuple.1073" = type { %"struct.std::__1::__tuple_impl.1074" }
%"struct.std::__1::__tuple_impl.1074" = type { %"class.std::__1::__tuple_leaf.1075" }
%"class.std::__1::__tuple_leaf.1075" = type { i32* }
%"class.std::__1::tuple.1054" = type { i8 }
%"struct.std::__1::default_delete.150" = type { i8 }
%"struct.std::__1::pair.960" = type { i32, i32 }
%"class.std::__1::function.946" = type { %"class.std::__1::__function::__policy_func.950" }
%"class.std::__1::__function::__policy_func.950" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.951", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.951" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::tuple.1051" = type { %"struct.std::__1::__tuple_impl.1052" }
%"struct.std::__1::__tuple_impl.1052" = type { %"class.std::__1::__tuple_leaf.1053" }
%"class.std::__1::__tuple_leaf.1053" = type { i32* }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.spvtools::opt::UptrVectorIterator" = type { %"class.std::__1::vector.38"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::function.953" = type { %"class.std::__1::__function::__policy_func.957" }
%"class.std::__1::__function::__policy_func.957" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.958", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.958" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.961" = type { %"class.std::__1::__function::__policy_func.965" }
%"class.std::__1::__function::__policy_func.965" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.966", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.966" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__tree_node.1042" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::function.974" = type { %"class.std::__1::__function::__policy_func.978" }
%"class.std::__1::__function::__policy_func.978" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.979", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.979" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1090" = type { %class.anon }
%class.anon = type { %"class.spvtools::opt::InstructionList::iterator"*, i32*, %"class.std::__1::unordered_map.249"** }
%"class.std::__1::__function::__default_alloc_func.1095" = type { %class.anon.952 }
%class.anon.952 = type { %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map"**, %"class.std::__1::unique_ptr.40"**, %"class.spvtools::opt::InlinePass"* }
%"class.std::__1::__function::__default_alloc_func.1115" = type { %class.anon.968 }
%class.anon.968 = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unordered_map.249"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*, %"class.spvtools::opt::InlinePass"* }
%"class.std::__1::__function::__default_alloc_func.1129" = type { %class.anon.980 }
%class.anon.980 = type { i32*, i32*, %"class.spvtools::opt::InlinePass"* }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt10InlinePassD2Ev = comdat any

$_ZN8spvtools3opt10InlinePassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN8spvtools3opt11InstructionC2ERKS1_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZTVN8spvtools3opt10InlinePassE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.str = private unnamed_addr constant [15 x i8] c"The function '\00", align 1
@.str.2 = private unnamed_addr constant [150 x i8] c"' could not be inlined because the return instruction is not at the end of the function. This could be fixed by running merge-return before inlining.\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.4 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt10InlinePassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InlinePass"*)* @_ZN8spvtools3opt10InlinePassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InlinePass"*)* @_ZN8spvtools3opt10InlinePassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.ref.tmp.6 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNS5_10BasicBlockEPKNS5_11InstructionEjE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_3FbPSH_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_5clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_5clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10InlinePass33ContainsKillOrTerminateInvocationEPNS5_8FunctionEE3$_6FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt10InlinePass16AddPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %11) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %282

20:                                               ; preds = %14
  %21 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %22 = getelementptr inbounds i8, i8* %21, i64 37
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 1, i32 0
  %24 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 0
  tail call void %24(%"union.std::__1::__function::__policy_storage"* %25, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %21) #13
  tail call void @_ZdlPv(i8* nonnull %21) #14
  br label %282

26:                                               ; preds = %3
  %27 = tail call i8* @_Znwm(i64 112) #14
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %29 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %30) #13
  %31 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %36 = bitcast i32** %34 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %35, %"struct.std::__1::aligned_storage<4, 4>::type"** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %38 = bitcast %"class.std::__1::unique_ptr.0"* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %35 to i32*
  store i64 1, i64* %33, align 8
  store i32 %2, i32* %39, align 8
  %40 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 16, i32* %40, align 8
  %41 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %41, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %41, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  %50 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %55 = bitcast i32** %53 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %54, %"struct.std::__1::aligned_storage<4, 4>::type"** %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %57 = bitcast %"class.std::__1::unique_ptr.0"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %54 to i32*
  store i64 1, i64* %52, align 8
  store i32 %1, i32* %58, align 8
  %59 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 0
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %60, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 2
  %64 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 3, i64 0
  %65 = bitcast i32** %63 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %64, %"struct.std::__1::aligned_storage<4, 4>::type"** %65, align 8
  %66 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 4
  %67 = bitcast %"class.std::__1::unique_ptr.0"* %66 to i64*
  store i64 0, i64* %67, align 8
  %68 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %60, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  %69 = call i8* @_Znwm(i64 96) #14
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %71 = bitcast %"struct.spvtools::opt::Operand"** %70 to i8**
  store i8* %69, i8** %71, align 8
  %72 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %69, i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %69, i64 96
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"struct.spvtools::opt::Operand"** %74 to i8**
  store i8* %73, i8** %75, align 8
  %76 = bitcast i8* %69 to i32*
  %77 = load i32, i32* %40, align 8
  store i32 %77, i32* %76, align 8
  %78 = getelementptr inbounds i8, i8* %69, i64 8
  %79 = bitcast i8* %78 to %"class.spvtools::utils::SmallVector"*
  %80 = bitcast i8* %78 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds i8, i8* %69, i64 16
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %69, i64 24
  %84 = getelementptr inbounds i8, i8* %69, i64 32
  %85 = bitcast i8* %83 to i8**
  store i8* %84, i8** %85, align 8
  %86 = getelementptr inbounds i8, i8* %69, i64 40
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #13
  %89 = getelementptr inbounds i8, i8* %69, i64 48
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %59, align 8
  store i32 %91, i32* %90, align 8
  %92 = getelementptr inbounds i8, i8* %69, i64 56
  %93 = bitcast i8* %92 to %"class.spvtools::utils::SmallVector"*
  %94 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %69, i64 64
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %69, i64 72
  %98 = getelementptr inbounds i8, i8* %69, i64 80
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %69, i64 88
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %93, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %60) #13
  %103 = bitcast i8* %27 to %"class.spvtools::opt::Instruction"*
  %104 = bitcast %"struct.spvtools::opt::Operand"** %70 to i64*
  %105 = ptrtoint i8* %73 to i64
  store i64 %105, i64* %104, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %103, %"class.spvtools::opt::IRContext"* %28, i32 32, i32 0, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #13
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %107 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %106, align 8
  %108 = icmp eq %"struct.spvtools::opt::Operand"* %107, null
  br i1 %108, label %137, label %109

109:                                              ; preds = %26
  %110 = bitcast %"struct.spvtools::opt::Operand"* %107 to i8*
  %111 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %70, align 8
  %112 = icmp eq %"struct.spvtools::opt::Operand"* %111, %107
  br i1 %112, label %135, label %113

113:                                              ; preds = %109, %131
  %114 = phi %"struct.spvtools::opt::Operand"* [ %115, %131 ], [ %111, %109 ]
  %115 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %114, i64 -1
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %114, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %114, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %124, %120
  %130 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %129, %113
  %132 = icmp eq %"struct.spvtools::opt::Operand"* %115, %107
  br i1 %132, label %133, label %113

133:                                              ; preds = %131
  %134 = load i8*, i8** %72, align 8
  br label %135

135:                                              ; preds = %133, %109
  %136 = phi i8* [ %134, %133 ], [ %110, %109 ]
  store %"struct.spvtools::opt::Operand"* %107, %"struct.spvtools::opt::Operand"** %70, align 8
  call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %26, %135
  %138 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %139, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %139, align 8
  %141 = icmp eq %"class.std::__1::vector.3"* %140, null
  br i1 %141, label %153, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %140, i64 0, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = ptrtoint i32* %144 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %140, i64 0, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast i32* %144 to i8*
  call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %146, %142
  %152 = bitcast %"class.std::__1::vector.3"* %140 to i8*
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %137, %151
  %154 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %155, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %155, align 8
  %157 = icmp eq %"class.std::__1::vector.3"* %156, null
  br i1 %157, label %294, label %283

158:                                              ; preds = %294
  %159 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %296, i64 0, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = ptrtoint i32* %160 to i64
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %296, i64 0, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = bitcast i32* %160 to i8*
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %162, %158
  %168 = bitcast %"class.std::__1::vector.3"* %296 to i8*
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %294, %167
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #14
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %183) #14
  br label %184

184:                                              ; preds = %169, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  %185 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 4, i32 0, i32 0, i32 0
  %187 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %186, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %187, i64 0, i32 14, i32 0, i32 1
  %189 = getelementptr inbounds i8, i8* %27, i64 8
  %190 = bitcast i8* %189 to %"class.spvtools::opt::Instruction"**
  %191 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, align 8
  %192 = icmp eq %"class.spvtools::opt::Instruction"* %191, null
  br i1 %192, label %205, label %193

193:                                              ; preds = %184
  %194 = getelementptr inbounds i8, i8* %27, i64 16
  %195 = bitcast i8* %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %191, i64 0, i32 0, i32 2
  %198 = bitcast %"class.spvtools::opt::Instruction"** %197 to i64*
  store i64 %196, i64* %198, align 8
  %199 = bitcast i8* %189 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast i8* %194 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %202 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %201, align 8
  %203 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %202, i64 0, i32 1
  %204 = bitcast %"class.spvtools::opt::Instruction"** %203 to i64*
  store i64 %200, i64* %204, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #13
  br label %205

205:                                              ; preds = %184, %193
  store %"class.spvtools::opt::Instruction"* %188, %"class.spvtools::opt::Instruction"** %190, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %187, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %207 = bitcast %"class.spvtools::opt::Instruction"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = getelementptr inbounds i8, i8* %27, i64 16
  %210 = bitcast i8* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::Instruction"** %206 to i8**
  store i8* %27, i8** %211, align 8
  %212 = bitcast i8* %209 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %213 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %212, align 8
  %214 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %213, i64 0, i32 1
  %215 = bitcast %"class.spvtools::opt::Instruction"** %214 to i8**
  store i8* %27, i8** %215, align 8
  %216 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 11
  %217 = load i32, i32* %216, align 8
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 6, i32 0, i32 0, i32 0
  %222 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %221, align 8
  %223 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %186, align 8, !noalias !3
  %224 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %223, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %225 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %224, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %222, %"class.spvtools::opt::Instruction"* %225) #13
  br label %226

226:                                              ; preds = %205, %220
  %227 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %228 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %227, i64 0, i32 11
  %229 = load i32, i32* %228, align 8
  %230 = trunc i32 %229 to i16
  %231 = icmp slt i16 %230, 0
  br i1 %231, label %247, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %227, i64 0, i32 5
  %234 = call i8* @_Znwm(i64 240) #14
  %235 = bitcast i8* %234 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %235, %"class.std::__1::function"* dereferenceable(32) %233, %"class.spvtools::opt::IRContext"* %227) #13
  %236 = ptrtoint i8* %234 to i64
  %237 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %227, i64 0, i32 20
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %238, align 8
  %240 = bitcast %"class.std::__1::unique_ptr.480"* %237 to i64*
  store i64 %236, i64* %240, align 8
  %241 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %239, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %232
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %239) #13
  %243 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %239 to i8*
  call void @_ZdlPv(i8* %243) #14
  br label %244

244:                                              ; preds = %242, %232
  %245 = load i32, i32* %228, align 8
  %246 = or i32 %245, 32768
  store i32 %246, i32* %228, align 8
  br label %247

247:                                              ; preds = %226, %244
  %248 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %227, i64 0, i32 20, i32 0, i32 0, i32 0
  %249 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %248, align 8
  %250 = call { %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Pointer"* } @_ZNK8spvtools3opt8analysis11TypeManager21GetTypeAndPointerTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %249, i32 %1, i32 7) #13
  %251 = extractvalue { %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Pointer"* } %250, 1
  %252 = bitcast %"class.spvtools::opt::analysis::Pointer"* %251 to %"class.spvtools::opt::analysis::Type"*
  %253 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %253, i64 0, i32 11
  %255 = load i32, i32* %254, align 8
  %256 = trunc i32 %255 to i16
  %257 = icmp slt i16 %256, 0
  br i1 %257, label %273, label %258

258:                                              ; preds = %247
  %259 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %253, i64 0, i32 5
  %260 = call i8* @_Znwm(i64 240) #14
  %261 = bitcast i8* %260 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %261, %"class.std::__1::function"* dereferenceable(32) %259, %"class.spvtools::opt::IRContext"* %253) #13
  %262 = ptrtoint i8* %260 to i64
  %263 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %253, i64 0, i32 20
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %263, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %264, align 8
  %266 = bitcast %"class.std::__1::unique_ptr.480"* %263 to i64*
  store i64 %262, i64* %266, align 8
  %267 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %265, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %258
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %265) #13
  %269 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %265 to i8*
  call void @_ZdlPv(i8* %269) #14
  br label %270

270:                                              ; preds = %268, %258
  %271 = load i32, i32* %254, align 8
  %272 = or i32 %271, 32768
  store i32 %272, i32* %254, align 8
  br label %273

273:                                              ; preds = %247, %270
  %274 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %253, i64 0, i32 20, i32 0, i32 0, i32 0
  %275 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %274, align 8
  call void @_ZN8spvtools3opt8analysis11TypeManager12RegisterTypeEjRKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %275, i32 %12, %"class.spvtools::opt::analysis::Type"* dereferenceable(40) %252) #13
  %276 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %251, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = bitcast %"class.spvtools::opt::analysis::Pointer"* %251 to void (%"class.spvtools::opt::analysis::Pointer"*)***
  %279 = load void (%"class.spvtools::opt::analysis::Pointer"*)**, void (%"class.spvtools::opt::analysis::Pointer"*)*** %278, align 8
  %280 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Pointer"*)*, void (%"class.spvtools::opt::analysis::Pointer"*)** %279, i64 1
  %281 = load void (%"class.spvtools::opt::analysis::Pointer"*)*, void (%"class.spvtools::opt::analysis::Pointer"*)** %280, align 8
  call void %281(%"class.spvtools::opt::analysis::Pointer"* nonnull %251) #13
  br label %282

282:                                              ; preds = %273, %277, %20, %14
  ret i32 %12

283:                                              ; preds = %153
  %284 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = icmp eq i32* %285, null
  br i1 %286, label %292, label %287

287:                                              ; preds = %283
  %288 = ptrtoint i32* %285 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 1
  %290 = bitcast i32** %289 to i64*
  store i64 %288, i64* %290, align 8
  %291 = bitcast i32* %285 to i8*
  call void @_ZdlPv(i8* %291) #14
  br label %292

292:                                              ; preds = %287, %283
  %293 = bitcast %"class.std::__1::vector.3"* %156 to i8*
  call void @_ZdlPv(i8* %293) #14
  br label %294

294:                                              ; preds = %292, %153
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %295 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %296 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %295, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %295, align 8
  %297 = icmp eq %"class.std::__1::vector.3"* %296, null
  br i1 %297, label %169, label %158
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare { %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Pointer"* } @_ZNK8spvtools3opt8analysis11TypeManager21GetTypeAndPointerTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"*, i32, i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis11TypeManager12RegisterTypeEjRKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, i32, %"class.spvtools::opt::analysis::Type"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass9AddBranchEjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, %"class.std::__1::unique_ptr.40"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #14
  %8 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #13
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %17 = bitcast i32** %15 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %16, %"struct.std::__1::aligned_storage<4, 4>::type"** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %19 = bitcast %"class.std::__1::unique_ptr.0"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %16 to i32*
  store i64 1, i64* %14, align 8
  store i32 %1, i32* %20, align 8
  %21 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %22, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  %31 = call i8* @_Znwm(i64 48) #14
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 48
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.spvtools::opt::Operand"** %35 to i8**
  store i8* %34, i8** %36, align 8
  %37 = bitcast i8* %31 to i32*
  %38 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds i8, i8* %31, i64 8
  %41 = bitcast i8* %40 to %"class.spvtools::utils::SmallVector"*
  %42 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %43 = bitcast i8* %40 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %31, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %31, i64 24
  %47 = getelementptr inbounds i8, i8* %31, i64 32
  %48 = bitcast i8* %46 to i8**
  store i8* %47, i8** %48, align 8
  %49 = getelementptr inbounds i8, i8* %31, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %41, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %42) #13
  %52 = getelementptr inbounds i8, i8* %31, i64 48
  %53 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %54 = bitcast %"struct.spvtools::opt::Operand"** %32 to i64*
  %55 = ptrtoint i8* %52 to i64
  store i64 %55, i64* %54, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %53, %"class.spvtools::opt::IRContext"* %9, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #13
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %87, label %59

59:                                               ; preds = %3
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %32, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, %57
  br i1 %62, label %85, label %63

63:                                               ; preds = %59, %81
  %64 = phi %"struct.spvtools::opt::Operand"* [ %65, %81 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %64, i64 -1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %64, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %64, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %67, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %67, align 8
  %69 = icmp eq %"class.std::__1::vector.3"* %68, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %68, i64 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp eq i32* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = ptrtoint i32* %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %68, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast i32* %72 to i8*
  call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %74, %70
  %80 = bitcast %"class.std::__1::vector.3"* %68 to i8*
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %79, %63
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %65, %57
  br i1 %82, label %83, label %63

83:                                               ; preds = %81
  %84 = load i8*, i8** %33, align 8
  br label %85

85:                                               ; preds = %83, %59
  %86 = phi i8* [ %84, %83 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %32, align 8
  call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %3, %85
  %88 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %89 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %89, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %89, align 8
  %91 = icmp eq %"class.std::__1::vector.3"* %90, null
  br i1 %91, label %103, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 0, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i32* %94 to i64
  %98 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 0, i32 0, i32 1
  %99 = bitcast i32** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast i32* %94 to i8*
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %96, %92
  %102 = bitcast %"class.std::__1::vector.3"* %90 to i8*
  call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %87, %101
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %104, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.3"* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %111, %107
  %117 = bitcast %"class.std::__1::vector.3"* %105 to i8*
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %103, %116
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %120, i64 0, i32 2, i32 0, i32 1
  %122 = getelementptr inbounds i8, i8* %7, i64 8
  %123 = bitcast i8* %122 to %"class.spvtools::opt::Instruction"**
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %123, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds i8, i8* %7, i64 16
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %124, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast i8* %122 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i8* %127 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 1
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %133, i64* %137, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #13
  br label %138

138:                                              ; preds = %118, %126
  store %"class.spvtools::opt::Instruction"* %121, %"class.spvtools::opt::Instruction"** %123, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %120, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %140 = bitcast %"class.spvtools::opt::Instruction"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds i8, i8* %7, i64 16
  %143 = bitcast i8* %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %139 to i8**
  store i8* %7, i8** %144, align 8
  %145 = bitcast i8* %142 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %146 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %146, i64 0, i32 1
  %148 = bitcast %"class.spvtools::opt::Instruction"** %147 to i8**
  store i8* %7, i8** %148, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass13AddBranchCondEjjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, i32, i32, %"class.std::__1::unique_ptr.40"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = tail call i8* @_Znwm(i64 112) #14
  %12 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %15) #13
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %54 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #13
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %59 = bitcast i32** %57 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %58, %"struct.std::__1::aligned_storage<4, 4>::type"** %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %61 = bitcast %"class.std::__1::unique_ptr.0"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %58 to i32*
  store i64 1, i64* %56, align 8
  store i32 %3, i32* %62, align 8
  %63 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 0
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %64, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 2
  %68 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 3, i64 0
  %69 = bitcast i32** %67 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %68, %"struct.std::__1::aligned_storage<4, 4>::type"** %69, align 8
  %70 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 4
  %71 = bitcast %"class.std::__1::unique_ptr.0"* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %73 = call i8* @_Znwm(i64 144) #14
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 144
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.spvtools::opt::Operand"** %77 to i8**
  store i8* %76, i8** %78, align 8
  %79 = bitcast i8* %73 to i32*
  %80 = load i32, i32* %25, align 8
  store i32 %80, i32* %79, align 8
  %81 = getelementptr inbounds i8, i8* %73, i64 8
  %82 = bitcast i8* %81 to %"class.spvtools::utils::SmallVector"*
  %83 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds i8, i8* %73, i64 16
  %85 = bitcast i8* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %73, i64 24
  %87 = getelementptr inbounds i8, i8* %73, i64 32
  %88 = bitcast i8* %86 to i8**
  store i8* %87, i8** %88, align 8
  %89 = getelementptr inbounds i8, i8* %73, i64 40
  %90 = bitcast i8* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %82, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %26) #13
  %92 = getelementptr inbounds i8, i8* %73, i64 48
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %44, align 8
  store i32 %94, i32* %93, align 8
  %95 = getelementptr inbounds i8, i8* %73, i64 56
  %96 = bitcast i8* %95 to %"class.spvtools::utils::SmallVector"*
  %97 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds i8, i8* %73, i64 64
  %99 = bitcast i8* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = getelementptr inbounds i8, i8* %73, i64 72
  %101 = getelementptr inbounds i8, i8* %73, i64 80
  %102 = bitcast i8* %100 to i8**
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %73, i64 88
  %104 = bitcast i8* %103 to i64*
  store i64 0, i64* %104, align 8
  %105 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %96, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %45) #13
  %106 = getelementptr inbounds i8, i8* %73, i64 96
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %63, align 8
  store i32 %108, i32* %107, align 8
  %109 = getelementptr inbounds i8, i8* %73, i64 104
  %110 = bitcast i8* %109 to %"class.spvtools::utils::SmallVector"*
  %111 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds i8, i8* %73, i64 112
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = getelementptr inbounds i8, i8* %73, i64 120
  %115 = getelementptr inbounds i8, i8* %73, i64 128
  %116 = bitcast i8* %114 to i8**
  store i8* %115, i8** %116, align 8
  %117 = getelementptr inbounds i8, i8* %73, i64 136
  %118 = bitcast i8* %117 to i64*
  store i64 0, i64* %118, align 8
  %119 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %64) #13
  %120 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %121 = bitcast %"struct.spvtools::opt::Operand"** %74 to i64*
  %122 = ptrtoint i8* %76 to i64
  store i64 %122, i64* %121, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %120, %"class.spvtools::opt::IRContext"* %13, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %124 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %123, align 8
  %125 = icmp eq %"struct.spvtools::opt::Operand"* %124, null
  br i1 %125, label %154, label %126

126:                                              ; preds = %5
  %127 = bitcast %"struct.spvtools::opt::Operand"* %124 to i8*
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %74, align 8
  %129 = icmp eq %"struct.spvtools::opt::Operand"* %128, %124
  br i1 %129, label %152, label %130

130:                                              ; preds = %126, %148
  %131 = phi %"struct.spvtools::opt::Operand"* [ %132, %148 ], [ %128, %126 ]
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %134, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %134, align 8
  %136 = icmp eq %"class.std::__1::vector.3"* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %141, %137
  %147 = bitcast %"class.std::__1::vector.3"* %135 to i8*
  call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %146, %130
  %149 = icmp eq %"struct.spvtools::opt::Operand"* %132, %124
  br i1 %149, label %150, label %130

150:                                              ; preds = %148
  %151 = load i8*, i8** %75, align 8
  br label %152

152:                                              ; preds = %150, %126
  %153 = phi i8* [ %151, %150 ], [ %127, %126 ]
  store %"struct.spvtools::opt::Operand"* %124, %"struct.spvtools::opt::Operand"** %74, align 8
  call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %5, %152
  %155 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %156, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %156, align 8
  %158 = icmp eq %"class.std::__1::vector.3"* %157, null
  br i1 %158, label %170, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = ptrtoint i32* %161 to i64
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 1
  %166 = bitcast i32** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast i32* %161 to i8*
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %163, %159
  %169 = bitcast %"class.std::__1::vector.3"* %157 to i8*
  call void @_ZdlPv(i8* %169) #14
  br label %170

170:                                              ; preds = %154, %168
  %171 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %172, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.3"* %173, null
  br i1 %174, label %258, label %247

175:                                              ; preds = %274
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #14
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.3"* %276 to i8*
  call void @_ZdlPv(i8* %185) #14
  br label %186

186:                                              ; preds = %274, %184
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %187, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %187, align 8
  %189 = icmp eq %"class.std::__1::vector.3"* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = ptrtoint i32* %192 to i64
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 1
  %197 = bitcast i32** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = bitcast i32* %192 to i8*
  call void @_ZdlPv(i8* %198) #14
  br label %199

199:                                              ; preds = %194, %190
  %200 = bitcast %"class.std::__1::vector.3"* %188 to i8*
  call void @_ZdlPv(i8* %200) #14
  br label %201

201:                                              ; preds = %186, %199
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %202 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %202, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %202, align 8
  %204 = icmp eq %"class.std::__1::vector.3"* %203, null
  br i1 %204, label %216, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %203, i64 0, i32 0, i32 0
  %207 = load i32*, i32** %206, align 8
  %208 = icmp eq i32* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = ptrtoint i32* %207 to i64
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %203, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = bitcast i32* %207 to i8*
  call void @_ZdlPv(i8* %213) #14
  br label %214

214:                                              ; preds = %209, %205
  %215 = bitcast %"class.std::__1::vector.3"* %203 to i8*
  call void @_ZdlPv(i8* %215) #14
  br label %216

216:                                              ; preds = %201, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %217, align 8
  %219 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %218, i64 0, i32 2, i32 0, i32 1
  %220 = getelementptr inbounds i8, i8* %11, i64 8
  %221 = bitcast i8* %220 to %"class.spvtools::opt::Instruction"**
  %222 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %221, align 8
  %223 = icmp eq %"class.spvtools::opt::Instruction"* %222, null
  br i1 %223, label %236, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds i8, i8* %11, i64 16
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %222, i64 0, i32 0, i32 2
  %229 = bitcast %"class.spvtools::opt::Instruction"** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast i8* %220 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast i8* %225 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %233 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %232, align 8
  %234 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %233, i64 0, i32 1
  %235 = bitcast %"class.spvtools::opt::Instruction"** %234 to i64*
  store i64 %231, i64* %235, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 16, i1 false) #13
  br label %236

236:                                              ; preds = %216, %224
  store %"class.spvtools::opt::Instruction"* %219, %"class.spvtools::opt::Instruction"** %221, align 8
  %237 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %218, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %238 = bitcast %"class.spvtools::opt::Instruction"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds i8, i8* %11, i64 16
  %241 = bitcast i8* %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = bitcast %"class.spvtools::opt::Instruction"** %237 to i8**
  store i8* %11, i8** %242, align 8
  %243 = bitcast i8* %240 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %244 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %243, align 8
  %245 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %244, i64 0, i32 1
  %246 = bitcast %"class.spvtools::opt::Instruction"** %245 to i8**
  store i8* %11, i8** %246, align 8
  ret void

247:                                              ; preds = %170
  %248 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %247
  %252 = ptrtoint i32* %249 to i64
  %253 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 1
  %254 = bitcast i32** %253 to i64*
  store i64 %252, i64* %254, align 8
  %255 = bitcast i32* %249 to i8*
  call void @_ZdlPv(i8* %255) #14
  br label %256

256:                                              ; preds = %251, %247
  %257 = bitcast %"class.std::__1::vector.3"* %173 to i8*
  call void @_ZdlPv(i8* %257) #14
  br label %258

258:                                              ; preds = %256, %170
  %259 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %259, align 8
  %260 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %261 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %260, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %260, align 8
  %262 = icmp eq %"class.std::__1::vector.3"* %261, null
  br i1 %262, label %274, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %261, i64 0, i32 0, i32 0
  %265 = load i32*, i32** %264, align 8
  %266 = icmp eq i32* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %263
  %268 = ptrtoint i32* %265 to i64
  %269 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %261, i64 0, i32 0, i32 1
  %270 = bitcast i32** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = bitcast i32* %265 to i8*
  call void @_ZdlPv(i8* %271) #14
  br label %272

272:                                              ; preds = %267, %263
  %273 = bitcast %"class.std::__1::vector.3"* %261 to i8*
  call void @_ZdlPv(i8* %273) #14
  br label %274

274:                                              ; preds = %272, %258
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %275 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %276 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %275, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %275, align 8
  %277 = icmp eq %"class.std::__1::vector.3"* %276, null
  br i1 %277, label %186, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass12AddLoopMergeEjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, i32, %"class.std::__1::unique_ptr.40"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = tail call i8* @_Znwm(i64 112) #14
  %11 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %14) #13
  %15 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %20 = bitcast i32** %18 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %19, %"struct.std::__1::aligned_storage<4, 4>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %22 = bitcast %"class.std::__1::unique_ptr.0"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %19 to i32*
  store i64 1, i64* %17, align 8
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %25, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  %34 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %38 to i32*
  store i64 1, i64* %36, align 8
  store i32 %2, i32* %42, align 8
  %43 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %44, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %48 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %49 = bitcast i32** %47 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %48, %"struct.std::__1::aligned_storage<4, 4>::type"** %49, align 8
  %50 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %51 = bitcast %"class.std::__1::unique_ptr.0"* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %44, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %53 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %57 to i32*
  store i64 1, i64* %55, align 8
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 0
  store i32 40, i32* %62, align 8
  %63 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %63, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 2
  %67 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 3, i64 0
  %68 = bitcast i32** %66 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %67, %"struct.std::__1::aligned_storage<4, 4>::type"** %68, align 8
  %69 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 4
  %70 = bitcast %"class.std::__1::unique_ptr.0"* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %63, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %72 = call i8* @_Znwm(i64 144) #14
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %72, i64 144
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast %"struct.spvtools::opt::Operand"** %76 to i8**
  store i8* %75, i8** %77, align 8
  %78 = bitcast i8* %72 to i32*
  %79 = load i32, i32* %24, align 8
  store i32 %79, i32* %78, align 8
  %80 = getelementptr inbounds i8, i8* %72, i64 8
  %81 = bitcast i8* %80 to %"class.spvtools::utils::SmallVector"*
  %82 = bitcast i8* %80 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %72, i64 16
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %72, i64 24
  %86 = getelementptr inbounds i8, i8* %72, i64 32
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %72, i64 40
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %81, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %25) #13
  %91 = getelementptr inbounds i8, i8* %72, i64 48
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %43, align 8
  store i32 %93, i32* %92, align 8
  %94 = getelementptr inbounds i8, i8* %72, i64 56
  %95 = bitcast i8* %94 to %"class.spvtools::utils::SmallVector"*
  %96 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %72, i64 64
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %72, i64 72
  %100 = getelementptr inbounds i8, i8* %72, i64 80
  %101 = bitcast i8* %99 to i8**
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %72, i64 88
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %95, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #13
  %105 = getelementptr inbounds i8, i8* %72, i64 96
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %62, align 8
  store i32 %107, i32* %106, align 8
  %108 = getelementptr inbounds i8, i8* %72, i64 104
  %109 = bitcast i8* %108 to %"class.spvtools::utils::SmallVector"*
  %110 = bitcast i8* %108 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %72, i64 112
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %72, i64 120
  %114 = getelementptr inbounds i8, i8* %72, i64 128
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %72, i64 136
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %109, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %63) #13
  %119 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  %120 = bitcast %"struct.spvtools::opt::Operand"** %73 to i64*
  %121 = ptrtoint i8* %75 to i64
  store i64 %121, i64* %120, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %119, %"class.spvtools::opt::IRContext"* %12, i32 246, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %123 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %122, align 8
  %124 = icmp eq %"struct.spvtools::opt::Operand"* %123, null
  br i1 %124, label %153, label %125

125:                                              ; preds = %4
  %126 = bitcast %"struct.spvtools::opt::Operand"* %123 to i8*
  %127 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %73, align 8
  %128 = icmp eq %"struct.spvtools::opt::Operand"* %127, %123
  br i1 %128, label %151, label %129

129:                                              ; preds = %125, %147
  %130 = phi %"struct.spvtools::opt::Operand"* [ %131, %147 ], [ %127, %125 ]
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %130, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %133, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %133, align 8
  %135 = icmp eq %"class.std::__1::vector.3"* %134, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %134, i64 0, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = ptrtoint i32* %138 to i64
  %142 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %134, i64 0, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast i32* %138 to i8*
  call void @_ZdlPv(i8* %144) #14
  br label %145

145:                                              ; preds = %140, %136
  %146 = bitcast %"class.std::__1::vector.3"* %134 to i8*
  call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %145, %129
  %148 = icmp eq %"struct.spvtools::opt::Operand"* %131, %123
  br i1 %148, label %149, label %129

149:                                              ; preds = %147
  %150 = load i8*, i8** %74, align 8
  br label %151

151:                                              ; preds = %149, %125
  %152 = phi i8* [ %150, %149 ], [ %126, %125 ]
  store %"struct.spvtools::opt::Operand"* %123, %"struct.spvtools::opt::Operand"** %73, align 8
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %4, %151
  %154 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %155, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %155, align 8
  %157 = icmp eq %"class.std::__1::vector.3"* %156, null
  br i1 %157, label %169, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = ptrtoint i32* %160 to i64
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = bitcast i32* %160 to i8*
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %162, %158
  %168 = bitcast %"class.std::__1::vector.3"* %156 to i8*
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %153, %167
  %170 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %171 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %171, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %171, align 8
  %173 = icmp eq %"class.std::__1::vector.3"* %172, null
  br i1 %173, label %257, label %246

174:                                              ; preds = %273
  %175 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %275, i64 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp eq i32* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = ptrtoint i32* %176 to i64
  %180 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %275, i64 0, i32 0, i32 1
  %181 = bitcast i32** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = bitcast i32* %176 to i8*
  call void @_ZdlPv(i8* %182) #14
  br label %183

183:                                              ; preds = %178, %174
  %184 = bitcast %"class.std::__1::vector.3"* %275 to i8*
  call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %273, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %187 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %186, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %186, align 8
  %188 = icmp eq %"class.std::__1::vector.3"* %187, null
  br i1 %188, label %200, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %187, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %198, label %193

193:                                              ; preds = %189
  %194 = ptrtoint i32* %191 to i64
  %195 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %187, i64 0, i32 0, i32 1
  %196 = bitcast i32** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast i32* %191 to i8*
  call void @_ZdlPv(i8* %197) #14
  br label %198

198:                                              ; preds = %193, %189
  %199 = bitcast %"class.std::__1::vector.3"* %187 to i8*
  call void @_ZdlPv(i8* %199) #14
  br label %200

200:                                              ; preds = %185, %198
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %201 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %202 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %201, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %201, align 8
  %203 = icmp eq %"class.std::__1::vector.3"* %202, null
  br i1 %203, label %215, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = icmp eq i32* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = ptrtoint i32* %206 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 1
  %211 = bitcast i32** %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = bitcast i32* %206 to i8*
  call void @_ZdlPv(i8* %212) #14
  br label %213

213:                                              ; preds = %208, %204
  %214 = bitcast %"class.std::__1::vector.3"* %202 to i8*
  call void @_ZdlPv(i8* %214) #14
  br label %215

215:                                              ; preds = %200, %213
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %216, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %217, i64 0, i32 2, i32 0, i32 1
  %219 = getelementptr inbounds i8, i8* %10, i64 8
  %220 = bitcast i8* %219 to %"class.spvtools::opt::Instruction"**
  %221 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %220, align 8
  %222 = icmp eq %"class.spvtools::opt::Instruction"* %221, null
  br i1 %222, label %235, label %223

223:                                              ; preds = %215
  %224 = getelementptr inbounds i8, i8* %10, i64 16
  %225 = bitcast i8* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %221, i64 0, i32 0, i32 2
  %228 = bitcast %"class.spvtools::opt::Instruction"** %227 to i64*
  store i64 %226, i64* %228, align 8
  %229 = bitcast i8* %219 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast i8* %224 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %232 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %232, i64 0, i32 1
  %234 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %230, i64* %234, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 16, i1 false) #13
  br label %235

235:                                              ; preds = %215, %223
  store %"class.spvtools::opt::Instruction"* %218, %"class.spvtools::opt::Instruction"** %220, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %217, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %237 = bitcast %"class.spvtools::opt::Instruction"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds i8, i8* %10, i64 16
  %240 = bitcast i8* %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast %"class.spvtools::opt::Instruction"** %236 to i8**
  store i8* %10, i8** %241, align 8
  %242 = bitcast i8* %239 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %243 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %242, align 8
  %244 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %243, i64 0, i32 1
  %245 = bitcast %"class.spvtools::opt::Instruction"** %244 to i8**
  store i8* %10, i8** %245, align 8
  ret void

246:                                              ; preds = %169
  %247 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = icmp eq i32* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = ptrtoint i32* %248 to i64
  %252 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 1
  %253 = bitcast i32** %252 to i64*
  store i64 %251, i64* %253, align 8
  %254 = bitcast i32* %248 to i8*
  call void @_ZdlPv(i8* %254) #14
  br label %255

255:                                              ; preds = %250, %246
  %256 = bitcast %"class.std::__1::vector.3"* %172 to i8*
  call void @_ZdlPv(i8* %256) #14
  br label %257

257:                                              ; preds = %255, %169
  %258 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %259 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %260 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %259, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %259, align 8
  %261 = icmp eq %"class.std::__1::vector.3"* %260, null
  br i1 %261, label %273, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %260, i64 0, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = icmp eq i32* %264, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %262
  %267 = ptrtoint i32* %264 to i64
  %268 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %260, i64 0, i32 0, i32 1
  %269 = bitcast i32** %268 to i64*
  store i64 %267, i64* %269, align 8
  %270 = bitcast i32* %264 to i8*
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %266, %262
  %272 = bitcast %"class.std::__1::vector.3"* %260 to i8*
  call void @_ZdlPv(i8* %272) #14
  br label %273

273:                                              ; preds = %271, %257
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %274 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %275 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %274, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %274, align 8
  %276 = icmp eq %"class.std::__1::vector.3"* %275, null
  br i1 %276, label %185, label %174
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass8AddStoreEjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPKNS0_11InstructionERKNS0_10DebugScopeE(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, i32, %"class.std::__1::unique_ptr.40"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DebugScope"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = tail call i8* @_Znwm(i64 112) #14
  %12 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #13
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %54 = call i8* @_Znwm(i64 96) #14
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = load i32, i32* %25, align 8
  store i32 %61, i32* %60, align 8
  %62 = getelementptr inbounds i8, i8* %54, i64 8
  %63 = bitcast i8* %62 to %"class.spvtools::utils::SmallVector"*
  %64 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %54, i64 16
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 24
  %68 = getelementptr inbounds i8, i8* %54, i64 32
  %69 = bitcast i8* %67 to i8**
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds i8, i8* %54, i64 40
  %71 = bitcast i8* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %63, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %26) #13
  %73 = getelementptr inbounds i8, i8* %54, i64 48
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %44, align 8
  store i32 %75, i32* %74, align 8
  %76 = getelementptr inbounds i8, i8* %54, i64 56
  %77 = bitcast i8* %76 to %"class.spvtools::utils::SmallVector"*
  %78 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 64
  %80 = bitcast i8* %79 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %54, i64 72
  %82 = getelementptr inbounds i8, i8* %54, i64 80
  %83 = bitcast i8* %81 to i8**
  store i8* %82, i8** %83, align 8
  %84 = getelementptr inbounds i8, i8* %54, i64 88
  %85 = bitcast i8* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %77, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %45) #13
  %87 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %88 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %89 = ptrtoint i8* %57 to i64
  store i64 %89, i64* %88, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %87, %"class.spvtools::opt::IRContext"* %13, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #13
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %91 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %90, align 8
  %92 = icmp eq %"struct.spvtools::opt::Operand"* %91, null
  br i1 %92, label %121, label %93

93:                                               ; preds = %6
  %94 = bitcast %"struct.spvtools::opt::Operand"* %91 to i8*
  %95 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %96 = icmp eq %"struct.spvtools::opt::Operand"* %95, %91
  br i1 %96, label %119, label %97

97:                                               ; preds = %93, %115
  %98 = phi %"struct.spvtools::opt::Operand"* [ %99, %115 ], [ %95, %93 ]
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %101, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %101, align 8
  %103 = icmp eq %"class.std::__1::vector.3"* %102, null
  br i1 %103, label %115, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %102, i64 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = ptrtoint i32* %106 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %102, i64 0, i32 0, i32 1
  %111 = bitcast i32** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast i32* %106 to i8*
  call void @_ZdlPv(i8* %112) #14
  br label %113

113:                                              ; preds = %108, %104
  %114 = bitcast %"class.std::__1::vector.3"* %102 to i8*
  call void @_ZdlPv(i8* %114) #14
  br label %115

115:                                              ; preds = %113, %97
  %116 = icmp eq %"struct.spvtools::opt::Operand"* %99, %91
  br i1 %116, label %117, label %97

117:                                              ; preds = %115
  %118 = load i8*, i8** %56, align 8
  br label %119

119:                                              ; preds = %117, %93
  %120 = phi i8* [ %118, %117 ], [ %94, %93 ]
  store %"struct.spvtools::opt::Operand"* %91, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %6, %119
  %122 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %123, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %123, align 8
  %125 = icmp eq %"class.std::__1::vector.3"* %124, null
  br i1 %125, label %137, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %124, i64 0, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = ptrtoint i32* %128 to i64
  %132 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %124, i64 0, i32 0, i32 1
  %133 = bitcast i32** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = bitcast i32* %128 to i8*
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %130, %126
  %136 = bitcast %"class.std::__1::vector.3"* %124 to i8*
  call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %121, %135
  %138 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %139, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %139, align 8
  %141 = icmp eq %"class.std::__1::vector.3"* %140, null
  br i1 %141, label %251, label %240

142:                                              ; preds = %251
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %253, i64 0, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = ptrtoint i32* %144 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %253, i64 0, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast i32* %144 to i8*
  call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %146, %142
  %152 = bitcast %"class.std::__1::vector.3"* %253 to i8*
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %251, %151
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %154 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %154, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %154, align 8
  %156 = icmp eq %"class.std::__1::vector.3"* %155, null
  br i1 %156, label %168, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = icmp eq i32* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint i32* %159 to i64
  %163 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 1
  %164 = bitcast i32** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i32* %159 to i8*
  call void @_ZdlPv(i8* %165) #14
  br label %166

166:                                              ; preds = %161, %157
  %167 = bitcast %"class.std::__1::vector.3"* %155 to i8*
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %153, %166
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %169 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  br i1 %169, label %185, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds i8, i8* %11, i64 88
  %172 = bitcast i8* %171 to %"class.spvtools::opt::Instruction"**
  %173 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %172, align 8
  %174 = getelementptr inbounds i8, i8* %11, i64 96
  %175 = bitcast i8* %174 to %"class.spvtools::opt::Instruction"**
  %176 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %175, align 8
  %177 = icmp eq %"class.spvtools::opt::Instruction"* %173, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %170
  call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %173, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %4) #13
  %179 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %173, i64 1
  %180 = ptrtoint %"class.spvtools::opt::Instruction"* %179 to i64
  %181 = bitcast i8* %171 to i64*
  store i64 %180, i64* %181, align 8
  br label %185

182:                                              ; preds = %170
  %183 = getelementptr inbounds i8, i8* %11, i64 80
  %184 = bitcast i8* %183 to %"class.std::__1::vector.14"*
  call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"* %184, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %4) #13
  br label %185

185:                                              ; preds = %168, %182, %178
  %186 = getelementptr inbounds i8, i8* %11, i64 104
  %187 = bitcast %"class.spvtools::opt::DebugScope"* %5 to i64*
  %188 = bitcast i8* %186 to i64*
  %189 = load i64, i64* %187, align 4
  store i64 %189, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %11, i64 80
  %191 = bitcast i8* %190 to %"class.spvtools::opt::Instruction"**
  %192 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %191, align 8
  %193 = getelementptr inbounds i8, i8* %11, i64 88
  %194 = bitcast i8* %193 to %"class.spvtools::opt::Instruction"**
  %195 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %194, align 8
  %196 = icmp eq %"class.spvtools::opt::Instruction"* %192, %195
  br i1 %196, label %209, label %197

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 8
  %199 = bitcast %"class.spvtools::opt::DebugScope"* %198 to i64*
  store i64 %189, i64* %199, align 8
  %200 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 1
  %201 = icmp eq %"class.spvtools::opt::Instruction"* %200, %195
  br i1 %201, label %209, label %202

202:                                              ; preds = %197, %202
  %203 = phi %"class.spvtools::opt::Instruction"* [ %207, %202 ], [ %200, %197 ]
  %204 = load i64, i64* %187, align 4
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 8
  %206 = bitcast %"class.spvtools::opt::DebugScope"* %205 to i64*
  store i64 %204, i64* %206, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 1
  %208 = icmp eq %"class.spvtools::opt::Instruction"* %207, %195
  br i1 %208, label %209, label %202

209:                                              ; preds = %202, %197, %185
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 0, i32 0, i32 0, i32 0
  %211 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %210, align 8
  %212 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %211, i64 0, i32 2, i32 0, i32 1
  %213 = getelementptr inbounds i8, i8* %11, i64 8
  %214 = bitcast i8* %213 to %"class.spvtools::opt::Instruction"**
  %215 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %214, align 8
  %216 = icmp eq %"class.spvtools::opt::Instruction"* %215, null
  br i1 %216, label %229, label %217

217:                                              ; preds = %209
  %218 = getelementptr inbounds i8, i8* %11, i64 16
  %219 = bitcast i8* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 0, i32 2
  %222 = bitcast %"class.spvtools::opt::Instruction"** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast i8* %213 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast i8* %218 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %226 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %225, align 8
  %227 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %226, i64 0, i32 1
  %228 = bitcast %"class.spvtools::opt::Instruction"** %227 to i64*
  store i64 %224, i64* %228, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 16, i1 false) #13
  br label %229

229:                                              ; preds = %209, %217
  store %"class.spvtools::opt::Instruction"* %212, %"class.spvtools::opt::Instruction"** %214, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %211, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %231 = bitcast %"class.spvtools::opt::Instruction"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds i8, i8* %11, i64 16
  %234 = bitcast i8* %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = bitcast %"class.spvtools::opt::Instruction"** %230 to i8**
  store i8* %11, i8** %235, align 8
  %236 = bitcast i8* %233 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %237 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %236, align 8
  %238 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %237, i64 0, i32 1
  %239 = bitcast %"class.spvtools::opt::Instruction"** %238 to i8**
  store i8* %11, i8** %239, align 8
  ret void

240:                                              ; preds = %137
  %241 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %140, i64 0, i32 0, i32 0
  %242 = load i32*, i32** %241, align 8
  %243 = icmp eq i32* %242, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %240
  %245 = ptrtoint i32* %242 to i64
  %246 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %140, i64 0, i32 0, i32 1
  %247 = bitcast i32** %246 to i64*
  store i64 %245, i64* %247, align 8
  %248 = bitcast i32* %242 to i8*
  call void @_ZdlPv(i8* %248) #14
  br label %249

249:                                              ; preds = %244, %240
  %250 = bitcast %"class.std::__1::vector.3"* %140 to i8*
  call void @_ZdlPv(i8* %250) #14
  br label %251

251:                                              ; preds = %249, %137
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %252 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %253 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %252, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %252, align 8
  %254 = icmp eq %"class.std::__1::vector.3"* %253, null
  br i1 %254, label %153, label %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass7AddLoadEjjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPKNS0_11InstructionERKNS0_10DebugScopeE(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32, i32, i32, %"class.std::__1::unique_ptr.40"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DebugScope"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = tail call i8* @_Znwm(i64 112) #14
  %12 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #13
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %3, i32* %24, align 8
  %25 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %35 = call i8* @_Znwm(i64 48) #14
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 48
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.spvtools::opt::Operand"** %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = bitcast i8* %35 to i32*
  %42 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 8
  %45 = bitcast i8* %44 to %"class.spvtools::utils::SmallVector"*
  %46 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %47 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %35, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %35, i64 24
  %51 = getelementptr inbounds i8, i8* %35, i64 32
  %52 = bitcast i8* %50 to i8**
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %35, i64 40
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #13
  %56 = getelementptr inbounds i8, i8* %35, i64 48
  %57 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %58 = bitcast %"struct.spvtools::opt::Operand"** %36 to i64*
  %59 = ptrtoint i8* %56 to i64
  store i64 %59, i64* %58, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %57, %"class.spvtools::opt::IRContext"* %13, i32 61, i32 %1, i32 %2, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #13
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %7
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %36, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %37, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %36, align 8
  call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %7, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %123, label %139, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds i8, i8* %11, i64 88
  %126 = bitcast i8* %125 to %"class.spvtools::opt::Instruction"**
  %127 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %126, align 8
  %128 = getelementptr inbounds i8, i8* %11, i64 96
  %129 = bitcast i8* %128 to %"class.spvtools::opt::Instruction"**
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = icmp eq %"class.spvtools::opt::Instruction"* %127, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %124
  call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %127, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %5) #13
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 1
  %134 = ptrtoint %"class.spvtools::opt::Instruction"* %133 to i64
  %135 = bitcast i8* %125 to i64*
  store i64 %134, i64* %135, align 8
  br label %139

136:                                              ; preds = %124
  %137 = getelementptr inbounds i8, i8* %11, i64 80
  %138 = bitcast i8* %137 to %"class.std::__1::vector.14"*
  call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"* %138, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %5) #13
  br label %139

139:                                              ; preds = %122, %136, %132
  %140 = getelementptr inbounds i8, i8* %11, i64 104
  %141 = bitcast %"class.spvtools::opt::DebugScope"* %6 to i64*
  %142 = bitcast i8* %140 to i64*
  %143 = load i64, i64* %141, align 4
  store i64 %143, i64* %142, align 8
  %144 = getelementptr inbounds i8, i8* %11, i64 80
  %145 = bitcast i8* %144 to %"class.spvtools::opt::Instruction"**
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %145, align 8
  %147 = getelementptr inbounds i8, i8* %11, i64 88
  %148 = bitcast i8* %147 to %"class.spvtools::opt::Instruction"**
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, align 8
  %150 = icmp eq %"class.spvtools::opt::Instruction"* %146, %149
  br i1 %150, label %163, label %151

151:                                              ; preds = %139
  %152 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 8
  %153 = bitcast %"class.spvtools::opt::DebugScope"* %152 to i64*
  store i64 %143, i64* %153, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 1
  %155 = icmp eq %"class.spvtools::opt::Instruction"* %154, %149
  br i1 %155, label %163, label %156

156:                                              ; preds = %151, %156
  %157 = phi %"class.spvtools::opt::Instruction"* [ %161, %156 ], [ %154, %151 ]
  %158 = load i64, i64* %141, align 4
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %157, i64 0, i32 8
  %160 = bitcast %"class.spvtools::opt::DebugScope"* %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %157, i64 1
  %162 = icmp eq %"class.spvtools::opt::Instruction"* %161, %149
  br i1 %162, label %163, label %156

163:                                              ; preds = %156, %151, %139
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %165, i64 0, i32 2, i32 0, i32 1
  %167 = getelementptr inbounds i8, i8* %11, i64 8
  %168 = bitcast i8* %167 to %"class.spvtools::opt::Instruction"**
  %169 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::Instruction"* %169, null
  br i1 %170, label %183, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds i8, i8* %11, i64 16
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %169, i64 0, i32 0, i32 2
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = bitcast i8* %167 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast i8* %172 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %180 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %179, align 8
  %181 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %180, i64 0, i32 1
  %182 = bitcast %"class.spvtools::opt::Instruction"** %181 to i64*
  store i64 %178, i64* %182, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 16, i1 false) #13
  br label %183

183:                                              ; preds = %163, %171
  store %"class.spvtools::opt::Instruction"* %166, %"class.spvtools::opt::Instruction"** %168, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %165, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %185 = bitcast %"class.spvtools::opt::Instruction"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds i8, i8* %11, i64 16
  %188 = bitcast i8* %187 to i64*
  store i64 %186, i64* %188, align 8
  %189 = bitcast %"class.spvtools::opt::Instruction"** %184 to i8**
  store i8* %11, i8** %189, align 8
  %190 = bitcast i8* %187 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %191 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %190, align 8
  %192 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %191, i64 0, i32 1
  %193 = bitcast %"class.spvtools::opt::Instruction"** %192 to i8**
  store i8* %11, i8** %193, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10InlinePass8NewLabelEj(%"class.spvtools::opt::InlinePass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = tail call i8* @_Znwm(i64 112) #14
  %5 = bitcast i8* %4 to %"class.spvtools::opt::Instruction"*
  %6 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %5, %"class.spvtools::opt::IRContext"* %7, i32 248, i32 0, i32 %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %3) #13
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %10 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %11 = icmp eq %"struct.spvtools::opt::Operand"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = icmp eq %"struct.spvtools::opt::Operand"* %15, %10
  br i1 %16, label %40, label %17

17:                                               ; preds = %12, %35
  %18 = phi %"struct.spvtools::opt::Operand"* [ %19, %35 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %21, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.3"* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint i32* %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast i32* %26 to i8*
  call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %28, %24
  %34 = bitcast %"class.std::__1::vector.3"* %22 to i8*
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %17
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %19, %10
  br i1 %36, label %37, label %17

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %12
  %41 = phi i8* [ %39, %37 ], [ %13, %12 ]
  store %"struct.spvtools::opt::Operand"* %10, %"struct.spvtools::opt::Operand"** %14, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %2, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  ret %"class.spvtools::opt::Instruction"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt10InlinePass10GetFalseIdEv(%"class.spvtools::opt::InlinePass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %65

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i32 @_ZNK8spvtools3opt6Module14GetGlobalValueE6SpvOp_(%"class.spvtools::opt::Module"* %9, i32 42) #13
  store i32 %10, i32* %2, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %65

12:                                               ; preds = %5
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i32 @_ZNK8spvtools3opt6Module14GetGlobalValueE6SpvOp_(%"class.spvtools::opt::Module"* %15, i32 20) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %12
  %19 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %20, align 8
  %22 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %21) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 5, i32 0, i32 2
  %26 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %26, i64 0, i32 2
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %65

30:                                               ; preds = %24
  %31 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %32 = getelementptr inbounds i8, i8* %31, i64 37
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 5, i32 0, i32 1, i32 0
  %34 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 5, i32 0, i32 0
  tail call void %34(%"union.std::__1::__function::__policy_storage"* %35, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %31) #13
  tail call void @_ZdlPv(i8* nonnull %31) #14
  br label %65

36:                                               ; preds = %18
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %38, align 8
  tail call void @_ZN8spvtools3opt6Module14AddGlobalValueE6SpvOp_jj(%"class.spvtools::opt::Module"* %39, i32 20, i32 %22, i32 0) #13
  br label %40

40:                                               ; preds = %36, %12
  %41 = phi i32 [ %22, %36 ], [ %16, %12 ]
  %42 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %43, align 8
  %45 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %44) #13
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %60

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %42, i64 0, i32 5, i32 0, i32 2
  %49 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 2
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %55 = getelementptr inbounds i8, i8* %54, i64 37
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %42, i64 0, i32 5, i32 0, i32 1, i32 0
  %57 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %42, i64 0, i32 5, i32 0, i32 0
  tail call void %57(%"union.std::__1::__function::__policy_storage"* %58, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %54) #13
  tail call void @_ZdlPv(i8* nonnull %54) #14
  br label %59

59:                                               ; preds = %47, %53
  store i32 0, i32* %2, align 8
  br label %65

60:                                               ; preds = %40
  store i32 %45, i32* %2, align 8
  %61 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %62, align 8
  tail call void @_ZN8spvtools3opt6Module14AddGlobalValueE6SpvOp_jj(%"class.spvtools::opt::Module"* %63, i32 42, i32 %45, i32 %41) #13
  %64 = load i32, i32* %2, align 8
  br label %65

65:                                               ; preds = %30, %24, %59, %60, %5, %1
  %66 = phi i32 [ %3, %1 ], [ %10, %5 ], [ %64, %60 ], [ 0, %59 ], [ 0, %24 ], [ 0, %30 ]
  ret i32 %66
}

declare i32 @_ZNK8spvtools3opt6Module14GetGlobalValueE6SpvOp_(%"class.spvtools::opt::Module"*, i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt6Module14AddGlobalValueE6SpvOp_jj(%"class.spvtools::opt::Module"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass9MapParamsEPNS0_8FunctionENS0_15InstructionList8iteratorEPNSt3__113unordered_mapIjjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorINS6_4pairIKjjEEEEEE(%"class.spvtools::opt::InlinePass"* nocapture readnone, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unordered_map.249"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::function.940", align 8
  store %"class.std::__1::unordered_map.249"* %3, %"class.std::__1::unordered_map.249"** %5, align 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 0, i32* %6, align 4
  %9 = bitcast %"class.std::__1::function.940"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass9MapParamsEPNS3_8FunctionENS3_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 24) #14, !noalias !6
  %13 = bitcast i8* %12 to %"class.spvtools::opt::InstructionList::iterator"**
  store %"class.spvtools::opt::InstructionList::iterator"* %2, %"class.spvtools::opt::InstructionList::iterator"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i32**
  store i32* %6, i32** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %5, %"class.std::__1::unordered_map.249"*** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %18, align 8
  call void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.940"* nonnull dereferenceable(32) %7, i1 zeroext false) #13
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %4
  %24 = load i8*, i8** %18, align 8
  call void %21(i8* %24) #13
  br label %25

25:                                               ; preds = %4, %23
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.940"* dereferenceable(32), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass17CloneAndMapLocalsEPNS0_8FunctionEPNSt3__16vectorINS4_10unique_ptrINS0_11InstructionENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEPNS4_13unordered_mapIjjNS4_4hashIjEENS4_8equal_toIjEENSB_INS4_4pairIKjjEEEEEEPNS0_8analysis21DebugInlinedAtContextE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.spvtools::opt::Function"*, %"class.std::__1::vector.31"*, %"class.std::__1::unordered_map.249"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::tuple.1073", align 8
  %8 = alloca %"class.std::__1::tuple.1054", align 1
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !11
  %18 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %21 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = bitcast i32* %10 to i8*
  %33 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %3, i64 0, i32 0
  %34 = bitcast %"class.std::__1::tuple.1073"* %7 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %7, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %8, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.21"** %37 to i64*
  br label %40

40:                                               ; preds = %57, %5
  %41 = phi i64 [ %17, %5 ], [ %58, %57 ]
  %42 = inttoptr i64 %41 to %"class.spvtools::opt::Instruction"*
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 59
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %42) #13
  %48 = icmp eq i32 %47, 28
  br i1 %48, label %49, label %213

49:                                               ; preds = %46
  %50 = load i32, i32* %43, align 8
  %51 = icmp eq i32 %50, 59
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  %53 = inttoptr i64 %41 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %54 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %53, i64 0, i32 1
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %52, %203
  %58 = phi i64 [ %195, %203 ], [ %56, %52 ]
  br label %40

59:                                               ; preds = %40, %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %19, align 8
  %60 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %61 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %42, %"class.spvtools::opt::IRContext"* %60) #13
  %62 = ptrtoint %"class.spvtools::opt::Instruction"* %61 to i64
  store i64 %62, i64* %21, align 8
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %66 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %65) #13
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 5, i32 0, i32 2
  %70 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %70, i64 0, i32 2
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %204

74:                                               ; preds = %68
  %75 = call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %76 = getelementptr inbounds i8, i8* %75, i64 37
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 5, i32 0, i32 1, i32 0
  %78 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %77, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 5, i32 0, i32 0
  call void %78(%"union.std::__1::__function::__policy_storage"* %79, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %75) #13
  call void @_ZdlPv(i8* nonnull %75) #14
  br label %204

80:                                               ; preds = %59
  %81 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 11
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %107

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 4, i32 0, i32 0, i32 0
  %88 = bitcast %"class.spvtools::opt::Module"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = call i8* @_Znwm(i64 48) #14
  %91 = bitcast i8* %90 to %"class.spvtools::opt::analysis::DecorationManager"*
  %92 = getelementptr inbounds i8, i8* %90, i64 32
  %93 = bitcast i8* %92 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %90, i64 40
  %95 = bitcast i8* %94 to i64*
  store i64 %89, i64* %95, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %91) #13
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 7
  %97 = ptrtoint i8* %90 to i64
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %96, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.122"* %96 to i64*
  store i64 %97, i64* %100, align 8
  %101 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %86
  %103 = bitcast %"class.std::__1::unique_ptr.122"* %96 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %103, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %99) #13
  br label %104

104:                                              ; preds = %102, %86
  %105 = load i32, i32* %82, align 8
  %106 = or i32 %105, 4
  store i32 %106, i32* %82, align 8
  br label %107

107:                                              ; preds = %80, %104
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %81, i64 0, i32 7, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %108, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = zext i8 %115 to i32
  %117 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 %116) #13
  br label %118

118:                                              ; preds = %107, %113
  %119 = phi i32 [ %117, %113 ], [ 0, %107 ]
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %109, i32 %119, i32 %66) #13
  %120 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %120, i64 0, i32 3
  %122 = load i8, i8* %121, align 4, !range !2
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %66, i32* %30, align 8
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %120, i64 0, i32 6, i32 0, i32 0
  %125 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %124, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %125, i64 %123, i32 1
  %127 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %126, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %31, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %31, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %141, label %130

130:                                              ; preds = %118
  %131 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %128, i64 0, i32 0, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = icmp eq i32* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = ptrtoint i32* %132 to i64
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %128, i64 0, i32 0, i32 1
  %137 = bitcast i32** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = bitcast i32* %132 to i8*
  call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %134, %130
  %140 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %118, %139
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #13
  %142 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %143 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 11
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 65536
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %162

148:                                              ; preds = %141
  %149 = call i8* @_Znwm(i64 232) #14
  %150 = bitcast i8* %149 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %150, %"class.spvtools::opt::IRContext"* %143) #13
  %151 = ptrtoint i8* %149 to i64
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 21
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %153, align 8
  %155 = bitcast %"class.std::__1::unique_ptr.593"* %152 to i64*
  store i64 %151, i64* %155, align 8
  %156 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %154, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %148
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %154) #13
  %158 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %154 to i8*
  call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %157, %148
  %160 = load i32, i32* %144, align 8
  %161 = or i32 %160, 65536
  store i32 %161, i32* %144, align 8
  br label %162

162:                                              ; preds = %141, %159
  %163 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 21, i32 0, i32 0, i32 0
  %164 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %163, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 8, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %164, i32 %166, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %4) #13
  call void @_ZN8spvtools3opt11Instruction20UpdateDebugInlinedAtEj(%"class.spvtools::opt::Instruction"* %142, i32 %167) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  %168 = load i8, i8* %110, align 1, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %175, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %172 = load i8, i8* %171, align 4, !range !2
  %173 = zext i8 %172 to i32
  %174 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 %173) #13
  br label %175

175:                                              ; preds = %162, %170
  %176 = phi i32 [ %174, %170 ], [ 0, %162 ]
  store i32 %176, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  store i32* %10, i32** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #13
  %177 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %33, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %8) #13
  %178 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %177, 0
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %178, i64 2
  %180 = bitcast %"struct.std::__1::__hash_node_base.254"* %179 to %"struct.std::__1::pair.960"*
  %181 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %180, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  store i32 %66, i32* %181, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  %182 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %37, align 8
  %183 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %38, align 8
  %184 = icmp ult %"class.std::__1::unique_ptr.21"* %182, %183
  br i1 %184, label %185, label %190

185:                                              ; preds = %175
  %186 = load i64, i64* %21, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %19, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.21"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %182, i64 1
  %189 = ptrtoint %"class.std::__1::unique_ptr.21"* %188 to i64
  store i64 %189, i64* %39, align 8
  br label %191

190:                                              ; preds = %175
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %2, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9) #13
  br label %191

191:                                              ; preds = %185, %190
  %192 = inttoptr i64 %41 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %193 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %192, i64 0, i32 1
  %194 = bitcast %"class.spvtools::opt::Instruction"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %19, align 8
  %197 = icmp eq %"class.spvtools::opt::Instruction"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.spvtools::opt::Instruction"* %196 to void (%"class.spvtools::opt::Instruction"*)***
  %200 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %200, i64 1
  %202 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %201, align 8
  call void %202(%"class.spvtools::opt::Instruction"* nonnull %196) #13
  br label %203

203:                                              ; preds = %191, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %57

204:                                              ; preds = %68, %74
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %19, align 8
  %206 = icmp eq %"class.spvtools::opt::Instruction"* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %204
  %208 = bitcast %"class.spvtools::opt::Instruction"* %205 to void (%"class.spvtools::opt::Instruction"*)***
  %209 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %209, i64 1
  %211 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %210, align 8
  call void %211(%"class.spvtools::opt::Instruction"* nonnull %205) #13
  br label %212

212:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %213

213:                                              ; preds = %46, %212
  %214 = phi i1 [ false, %212 ], [ true, %46 ]
  ret i1 %214
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11Instruction20UpdateDebugInlinedAtEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

declare i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, i32, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt10InlinePass15CreateReturnVarEPNS0_8FunctionEPNSt3__16vectorINS4_10unique_ptrINS0_11InstructionENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.spvtools::opt::Function"* nocapture readonly, %"class.std::__1::vector.31"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 0) #13
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %3 ]
  %17 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = trunc i32 %20 to i16
  %22 = icmp slt i16 %21, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 5
  %25 = tail call i8* @_Znwm(i64 240) #14
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %26, %"class.std::__1::function"* dereferenceable(32) %24, %"class.spvtools::opt::IRContext"* %18) #13
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 20
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.480"* %28 to i64*
  store i64 %27, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %23
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %30) #13
  %34 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %30 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %23
  %36 = load i32, i32* %19, align 8
  %37 = or i32 %36, 32768
  store i32 %37, i32* %19, align 8
  br label %38

38:                                               ; preds = %15, %35
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 20, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %39, align 8
  %41 = tail call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %40, i32 %16, i32 7) #13
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = tail call i32 @_ZN8spvtools3opt10InlinePass16AddPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::InlinePass"* %0, i32 %16, i32 7)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %242, label %46

46:                                               ; preds = %43, %38
  %47 = phi i32 [ %44, %43 ], [ %41, %38 ]
  %48 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %49, align 8
  %51 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %50) #13
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 5, i32 0, i32 2
  %55 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 2
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %242

59:                                               ; preds = %53
  %60 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %61 = getelementptr inbounds i8, i8* %60, i64 37
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 5, i32 0, i32 1, i32 0
  %63 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 5, i32 0, i32 0
  tail call void %63(%"union.std::__1::__function::__policy_storage"* %64, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %60) #13
  tail call void @_ZdlPv(i8* nonnull %60) #14
  br label %242

65:                                               ; preds = %46
  %66 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = tail call i8* @_Znwm(i64 112) #14
  %69 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %70 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  %71 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %71) #13
  %72 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %76 to i32*
  store i64 1, i64* %74, align 8
  store i32 7, i32* %80, align 8
  %81 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 16, i32* %81, align 8
  %82 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %82, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %86 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %87 = bitcast i32** %85 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %86, %"struct.std::__1::aligned_storage<4, 4>::type"** %87, align 8
  %88 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %89 = bitcast %"class.std::__1::unique_ptr.0"* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %82, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  %91 = call i8* @_Znwm(i64 48) #14
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %91, i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %91, i64 48
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"struct.spvtools::opt::Operand"** %95 to i8**
  store i8* %94, i8** %96, align 8
  %97 = bitcast i8* %91 to i32*
  %98 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %97, align 8
  %100 = getelementptr inbounds i8, i8* %91, i64 8
  %101 = bitcast i8* %100 to %"class.spvtools::utils::SmallVector"*
  %102 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %103 = bitcast i8* %100 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds i8, i8* %91, i64 16
  %105 = bitcast i8* %104 to i64*
  store i64 0, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %91, i64 24
  %107 = getelementptr inbounds i8, i8* %91, i64 32
  %108 = bitcast i8* %106 to i8**
  store i8* %107, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %91, i64 40
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 8
  %111 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %101, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %102) #13
  %112 = getelementptr inbounds i8, i8* %91, i64 48
  %113 = bitcast i8* %68 to %"class.spvtools::opt::Instruction"*
  %114 = bitcast %"struct.spvtools::opt::Operand"** %92 to i64*
  %115 = ptrtoint i8* %112 to i64
  store i64 %115, i64* %114, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %113, %"class.spvtools::opt::IRContext"* %69, i32 59, i32 %47, i32 %51, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  %116 = ptrtoint i8* %68 to i64
  %117 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %119 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %118, align 8
  %120 = icmp eq %"struct.spvtools::opt::Operand"* %119, null
  br i1 %120, label %149, label %121

121:                                              ; preds = %65
  %122 = bitcast %"struct.spvtools::opt::Operand"* %119 to i8*
  %123 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %92, align 8
  %124 = icmp eq %"struct.spvtools::opt::Operand"* %123, %119
  br i1 %124, label %147, label %125

125:                                              ; preds = %121, %143
  %126 = phi %"struct.spvtools::opt::Operand"* [ %127, %143 ], [ %123, %121 ]
  %127 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %126, i64 -1
  %128 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %126, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %126, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %129, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %129, align 8
  %131 = icmp eq %"class.std::__1::vector.3"* %130, null
  br i1 %131, label %143, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %130, i64 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint i32* %134 to i64
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %130, i64 0, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast i32* %134 to i8*
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %136, %132
  %142 = bitcast %"class.std::__1::vector.3"* %130 to i8*
  call void @_ZdlPv(i8* %142) #14
  br label %143

143:                                              ; preds = %141, %125
  %144 = icmp eq %"struct.spvtools::opt::Operand"* %127, %119
  br i1 %144, label %145, label %125

145:                                              ; preds = %143
  %146 = load i8*, i8** %93, align 8
  br label %147

147:                                              ; preds = %145, %121
  %148 = phi i8* [ %146, %145 ], [ %122, %121 ]
  store %"struct.spvtools::opt::Operand"* %119, %"struct.spvtools::opt::Operand"** %92, align 8
  call void @_ZdlPv(i8* %148) #14
  br label %149

149:                                              ; preds = %65, %147
  %150 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %151, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %151, align 8
  %153 = icmp eq %"class.std::__1::vector.3"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i32* %156 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %158, %154
  %164 = bitcast %"class.std::__1::vector.3"* %152 to i8*
  call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %149, %163
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %166 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %167 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %166, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %166, align 8
  %168 = icmp eq %"class.std::__1::vector.3"* %167, null
  br i1 %168, label %180, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %167, i64 0, i32 0, i32 0
  %171 = load i32*, i32** %170, align 8
  %172 = icmp eq i32* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = ptrtoint i32* %171 to i64
  %175 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %167, i64 0, i32 0, i32 1
  %176 = bitcast i32** %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = bitcast i32* %171 to i8*
  call void @_ZdlPv(i8* %177) #14
  br label %178

178:                                              ; preds = %173, %169
  %179 = bitcast %"class.std::__1::vector.3"* %167 to i8*
  call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %165, %178
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  %181 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 1
  %182 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %184 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %183, align 8
  %185 = icmp ult %"class.std::__1::unique_ptr.21"* %182, %184
  br i1 %185, label %186, label %192

186:                                              ; preds = %180
  %187 = load i64, i64* %117, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %67, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.21"* %182 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %182, i64 1
  %190 = ptrtoint %"class.std::__1::unique_ptr.21"* %189 to i64
  %191 = bitcast %"class.std::__1::unique_ptr.21"** %181 to i64*
  store i64 %190, i64* %191, align 8
  br label %193

192:                                              ; preds = %180
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %2, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4) #13
  br label %193

193:                                              ; preds = %186, %192
  %194 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %194, i64 0, i32 11
  %196 = load i32, i32* %195, align 8
  %197 = and i32 %196, 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %220

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %194, i64 0, i32 4, i32 0, i32 0, i32 0
  %201 = bitcast %"class.spvtools::opt::Module"** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = call i8* @_Znwm(i64 48) #14
  %204 = bitcast i8* %203 to %"class.spvtools::opt::analysis::DecorationManager"*
  %205 = getelementptr inbounds i8, i8* %203, i64 32
  %206 = bitcast i8* %205 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %206, align 4
  %207 = getelementptr inbounds i8, i8* %203, i64 40
  %208 = bitcast i8* %207 to i64*
  store i64 %202, i64* %208, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %204) #13
  %209 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %194, i64 0, i32 7
  %210 = ptrtoint i8* %203 to i64
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %209, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %211, align 8
  %213 = bitcast %"class.std::__1::unique_ptr.122"* %209 to i64*
  store i64 %210, i64* %213, align 8
  %214 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %212, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %199
  %216 = bitcast %"class.std::__1::unique_ptr.122"* %209 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %216, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %212) #13
  br label %217

217:                                              ; preds = %215, %199
  %218 = load i32, i32* %195, align 8
  %219 = or i32 %218, 4
  store i32 %219, i32* %195, align 8
  br label %220

220:                                              ; preds = %193, %217
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %194, i64 0, i32 7, i32 0, i32 0, i32 0
  %222 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %221, align 8
  %223 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %223, i64 0, i32 4
  %225 = load i8, i8* %224, align 1, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %232, label %227

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %223, i64 0, i32 3
  %229 = load i8, i8* %228, align 4, !range !2
  %230 = zext i8 %229 to i32
  %231 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %223, i32 %230) #13
  br label %232

232:                                              ; preds = %220, %227
  %233 = phi i32 [ %231, %227 ], [ 0, %220 ]
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %222, i32 %233, i32 %51) #13
  %234 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %67, align 8
  %235 = icmp eq %"class.spvtools::opt::Instruction"* %234, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = bitcast %"class.spvtools::opt::Instruction"* %234 to void (%"class.spvtools::opt::Instruction"*)***
  %238 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %238, i64 1
  %240 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %239, align 8
  call void %240(%"class.spvtools::opt::Instruction"* nonnull %234) #13
  br label %241

241:                                              ; preds = %232, %236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  br label %242

242:                                              ; preds = %59, %53, %43, %241
  %243 = phi i32 [ %51, %241 ], [ 0, %43 ], [ 0, %53 ], [ 0, %59 ]
  ret i32 %243
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt10InlinePass13IsSameBlockOpEPKNS0_11InstructionE(%"class.spvtools::opt::InlinePass"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 86
  %6 = icmp eq i32 %4, 100
  %7 = or i1 %5, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS9_IjPS4_SB_SD_NSE_INSF_ISG_SL_EEEEEEPNS3_INS0_10BasicBlockENS5_ISQ_EEEE(%"class.spvtools::opt::InlinePass"*, %"class.std::__1::unique_ptr.21"* nocapture readonly, %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %7 = alloca %"class.std::__1::unordered_map"*, align 8
  %8 = alloca %"class.std::__1::unique_ptr.40"*, align 8
  %9 = alloca %"class.std::__1::function.946", align 8
  store %"class.std::__1::unordered_map.249"* %2, %"class.std::__1::unordered_map.249"** %6, align 8
  store %"class.std::__1::unordered_map"* %3, %"class.std::__1::unordered_map"** %7, align 8
  store %"class.std::__1::unique_ptr.40"* %4, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = bitcast %"class.std::__1::function.946"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %9, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %9, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNSA_INS8_10BasicBlockENSC_ISX_EEEEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %14, align 8
  %15 = tail call i8* @_Znwm(i64 32) #14, !noalias !18
  %16 = bitcast i8* %15 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %6, %"class.std::__1::unordered_map.249"*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to %"class.std::__1::unordered_map"***
  store %"class.std::__1::unordered_map"** %7, %"class.std::__1::unordered_map"*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to %"class.std::__1::unique_ptr.40"***
  store %"class.std::__1::unique_ptr.40"** %8, %"class.std::__1::unique_ptr.40"*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 24
  %22 = bitcast i8* %21 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::InlinePass"** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 6, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 6, i32 0, i32 1
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %25, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %9, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi %"struct.spvtools::opt::Operand"* [ %25, %29 ], [ %47, %46 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %34) #13
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector.3"* %38, null
  %40 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1, i32 2
  %42 = select i1 %39, i32** %41, i32** %40
  %43 = load i32*, i32** %42, align 8
  %44 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  %45 = call zeroext i1 %44(%"union.std::__1::__function::__policy_storage"* nonnull %30, i32* %43) #13
  br i1 %45, label %46, label %49

46:                                               ; preds = %36, %31
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %47, %27
  br i1 %48, label %49, label %31

49:                                               ; preds = %46, %36
  %50 = phi i1 [ true, %46 ], [ false, %36 ]
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  br label %52

52:                                               ; preds = %49, %5
  %53 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %5 ], [ %51, %49 ]
  %54 = phi i1 [ true, %5 ], [ %50, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %53, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = load i8*, i8** %23, align 8
  call void %56(i8* %59) #13
  br label %60

60:                                               ; preds = %52, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass25MoveInstsBeforeEntryBlockEPNSt3__113unordered_mapIjPNS0_11InstructionENS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjS5_EEEEEEPNS0_10BasicBlockENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorISH_Lb0EEE(%"class.spvtools::opt::InlinePass"* nocapture readnone, %"class.std::__1::unordered_map"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple.1073", align 8
  %8 = alloca %"class.std::__1::tuple.1054", align 1
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8, !noalias !23
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %13, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %6
  %18 = bitcast i32* %9 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0
  %20 = bitcast %"class.std::__1::tuple.1073"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %8, i64 0, i32 0
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  br label %27

26:                                               ; preds = %71, %6
  ret void

27:                                               ; preds = %17, %71
  %28 = phi %"class.spvtools::opt::Instruction"* [ %13, %17 ], [ %77, %71 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 0, i32 2
  %30 = bitcast %"class.spvtools::opt::Instruction"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 0, i32 1
  %33 = bitcast %"class.spvtools::opt::Instruction"** %32 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %34 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %34, i64 0, i32 2
  %36 = bitcast %"class.spvtools::opt::Instruction"** %35 to i64*
  store i64 %31, i64* %36, align 8
  %37 = bitcast %"class.spvtools::opt::Instruction"** %32 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.spvtools::opt::Instruction"** %29 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %40 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %40, i64 0, i32 1
  %42 = bitcast %"class.spvtools::opt::Instruction"** %41 to i64*
  store i64 %38, i64* %42, align 8
  %43 = bitcast %"class.spvtools::opt::Instruction"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  switch i32 %45, label %71 [
    i32 100, label %46
    i32 86, label %46
  ]

46:                                               ; preds = %27, %27
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = zext i8 %52 to i32
  %54 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %28, i32 %53) #13
  br label %55

55:                                               ; preds = %50, %46
  %56 = phi i32 [ %54, %50 ], [ 0, %46 ]
  store i32 %56, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  store i32* %9, i32** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #13
  %57 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %19, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %8) #13
  %58 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %57, 0
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 3
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  store %"class.spvtools::opt::Instruction"* %28, %"class.spvtools::opt::Instruction"** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  %62 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %55
  %64 = load i64, i64* %30, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 2
  %66 = bitcast %"class.spvtools::opt::Instruction"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = load i64, i64* %37, align 8
  %68 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %39, align 8
  %69 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %68, i64 0, i32 1
  %70 = bitcast %"class.spvtools::opt::Instruction"** %69 to i64*
  store i64 %67, i64* %70, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  br label %71

71:                                               ; preds = %27, %63, %55
  store %"class.spvtools::opt::Instruction"* %23, %"class.spvtools::opt::Instruction"** %32, align 8
  %72 = load i64, i64* %25, align 8
  store i64 %72, i64* %30, align 8
  store %"class.spvtools::opt::Instruction"* %28, %"class.spvtools::opt::Instruction"** %24, align 8
  %73 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %39, align 8
  %74 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %73, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %28, %"class.spvtools::opt::Instruction"** %74, align 8
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %75, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %77 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %76, align 8, !noalias !23
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %79 = icmp eq %"class.spvtools::opt::Instruction"* %77, %78
  br i1 %79, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass13AddGuardBlockEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS9_INS2_4pairIKjjEEEEEES8_j(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unordered_map.249"*, %"class.spvtools::opt::BasicBlock"*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple.1051", align 8
  %7 = alloca %"class.std::__1::tuple.1054", align 1
  %8 = alloca %"class.std::__1::unique_ptr.40", align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %3, %"class.spvtools::opt::BasicBlock"** %10, align 8
  store i32 %4, i32* %9, align 4
  %11 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %14) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %81

23:                                               ; preds = %17
  %24 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %25 = getelementptr inbounds i8, i8* %24, i64 37
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 1, i32 0
  %27 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 0
  tail call void %27(%"union.std::__1::__function::__policy_storage"* %28, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %24) #13
  tail call void @_ZdlPv(i8* nonnull %24) #14
  br label %81

29:                                               ; preds = %5
  call void @_ZN8spvtools3opt10InlinePass9AddBranchEjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InlinePass"* %0, i32 %15, %"class.std::__1::unique_ptr.40"* nonnull %8)
  %30 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr.40"* %31, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.40"* %31 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %31, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.40"* %39 to i64
  %41 = bitcast %"class.std::__1::unique_ptr.40"** %30 to i64*
  store i64 %40, i64* %41, align 8
  br label %44

42:                                               ; preds = %29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %1, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %8) #13
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i64*
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i64* [ %36, %35 ], [ %43, %42 ]
  %46 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10InlinePass8NewLabelEj(%"class.spvtools::opt::InlinePass"* %0, i32 %15)
  %47 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  %48 = call i8* @_Znwm(i64 136) #14
  %49 = bitcast i8* %48 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 %47, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i32 (...)***
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i32 (...)***
  %56 = getelementptr inbounds i8, i8* %48, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %57 = getelementptr inbounds i8, i8* %48, i64 56
  %58 = getelementptr inbounds i8, i8* %48, i64 72
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %48, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 56, i1 false) #13
  %61 = bitcast i8* %56 to i8**
  store i8* %54, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %48, i64 40
  %63 = bitcast i8* %62 to i8**
  store i8* %54, i8** %63, align 8
  %64 = getelementptr inbounds i8, i8* %48, i64 48
  store i8 1, i8* %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %65 = ptrtoint i8* %48 to i64
  %66 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %10, align 8
  store i64 %65, i64* %45, align 8
  %67 = icmp eq %"class.spvtools::opt::BasicBlock"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %44
  %69 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %69, %"class.spvtools::opt::BasicBlock"* nonnull %66) #13
  br label %70

70:                                               ; preds = %68, %44
  %71 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0
  %72 = bitcast %"class.std::__1::tuple.1051"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #13
  %75 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %71, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %7) #13
  %76 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %76, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.254"* %77 to %"struct.std::__1::pair.960"*
  %79 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %78, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  store i32 %15, i32* %79, align 4
  %80 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %10, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %10, align 8
  br label %85

81:                                               ; preds = %23, %17
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %82 = icmp eq %"class.spvtools::opt::BasicBlock"* %3, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %84, %"class.spvtools::opt::BasicBlock"* nonnull %3) #13
  br label %85

85:                                               ; preds = %70, %81, %83
  %86 = phi %"class.spvtools::opt::BasicBlock"* [ %80, %70 ], [ null, %81 ], [ null, %83 ]
  ret %"class.spvtools::opt::BasicBlock"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass32AddStoresForVariableInitializersERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_8analysis21DebugInlinedAtContextEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISK_EEEENS0_18UptrVectorIteratorISK_Lb0EEE(%"class.spvtools::opt::InstructionList::iterator"* noalias nocapture sret, %"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::unordered_map.249"* dereferenceable(40), %"class.spvtools::opt::analysis::DebugInlinedAtContext"*, %"class.std::__1::unique_ptr.40"* nocapture readonly, %"class.spvtools::opt::UptrVectorIterator"* nocapture readonly byval(%"class.spvtools::opt::UptrVectorIterator") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.spvtools::opt::DebugScope"*
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %0, i64 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %5, i64 0, i32 1, i32 0
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %13, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %0 to i64*
  %16 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i64* %7 to i8*
  %19 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %1, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %190, %6
  %22 = phi %"class.spvtools::opt::Instruction"** [ %14, %6 ], [ %191, %190 ]
  %23 = bitcast %"class.spvtools::opt::Instruction"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %15, align 8
  %25 = inttoptr i64 %24 to %"class.spvtools::opt::Instruction"*
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 59
  %29 = inttoptr i64 %24 to %"class.spvtools::utils::IntrusiveNodeBase"*
  br i1 %28, label %36, label %30

30:                                               ; preds = %21
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %25) #13
  %32 = icmp eq i32 %31, 28
  br i1 %32, label %33, label %192

33:                                               ; preds = %30
  %34 = load i32, i32* %26, align 8
  %35 = icmp eq i32 %34, 59
  br i1 %35, label %36, label %159

36:                                               ; preds = %21, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 6
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"struct.spvtools::opt::Operand"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = sdiv exact i64 %43, 48
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 3
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 4
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = select i1 %50, i32 1, i32 2
  %52 = xor i1 %50, true
  %53 = zext i1 %52 to i32
  %54 = select i1 %47, i32 %53, i32 %51
  %55 = trunc i64 %44 to i32
  %56 = sub i32 %55, %54
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %159

58:                                               ; preds = %36
  br i1 %50, label %62, label %59

59:                                               ; preds = %58
  %60 = zext i8 %46 to i32
  %61 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %25, i32 %60) #13
  br label %62

62:                                               ; preds = %58, %59
  %63 = phi i32 [ %61, %59 ], [ 0, %58 ]
  %64 = zext i32 %63 to i64
  %65 = load i64, i64* %16, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %114, label %67

67:                                               ; preds = %62
  %68 = tail call i64 @llvm.ctpop.i64(i64 %65) #13, !range !24
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = add i64 %65, 4294967295
  %72 = and i64 %71, %64
  br label %77

73:                                               ; preds = %67
  %74 = icmp ugt i64 %65, %64
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %64, %65
  br label %77

77:                                               ; preds = %75, %73, %70
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %64, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %17, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %79, i64 %78
  %81 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %80, align 8
  %82 = icmp eq %"struct.std::__1::__hash_node_base.254"* %81, null
  br i1 %82, label %114, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %81, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.254"* %85, null
  br i1 %86, label %114, label %87

87:                                               ; preds = %83
  %88 = add i64 %65, -1
  br label %89

89:                                               ; preds = %110, %87
  %90 = phi %"struct.std::__1::__hash_node_base.254"* [ %85, %87 ], [ %112, %110 ]
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %90, i64 1
  %92 = bitcast %"struct.std::__1::__hash_node_base.254"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, %64
  br i1 %94, label %105, label %95

95:                                               ; preds = %89
  br i1 %69, label %98, label %96

96:                                               ; preds = %95
  %97 = and i64 %93, %88
  br label %102

98:                                               ; preds = %95
  %99 = icmp ult i64 %93, %65
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %93, %65
  br label %102

102:                                              ; preds = %100, %98, %96
  %103 = phi i64 [ %97, %96 ], [ %101, %100 ], [ %93, %98 ]
  %104 = icmp eq i64 %103, %78
  br i1 %104, label %110, label %114

105:                                              ; preds = %89
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %90, i64 2
  %107 = bitcast %"struct.std::__1::__hash_node_base.254"* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, %63
  br i1 %109, label %115, label %110

110:                                              ; preds = %105, %102
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %90, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base.254"* %112, null
  br i1 %113, label %114, label %89

114:                                              ; preds = %83, %77, %62, %110, %102
  tail call void @abort() #15
  unreachable

115:                                              ; preds = %105
  %116 = bitcast %"struct.std::__1::__hash_node_base.254"* %106 to %"struct.std::__1::pair.960"*
  %117 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %116, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = load i8, i8* %45, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  %121 = load i8, i8* %48, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = select i1 %122, i32 1, i32 2
  %124 = xor i1 %122, true
  %125 = zext i1 %124 to i32
  %126 = select i1 %120, i32 %125, i32 %123
  %127 = add nuw nsw i32 %126, 1
  %128 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %25, i32 %127) #13
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 7, i32 0, i32 0
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 7, i32 0, i32 1
  %132 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %133 = icmp eq %"class.spvtools::opt::Instruction"* %130, %132
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"* %130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %135 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %135, i64 0, i32 11
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 65536
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %154

140:                                              ; preds = %115
  %141 = tail call i8* @_Znwm(i64 232) #14
  %142 = bitcast i8* %141 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %142, %"class.spvtools::opt::IRContext"* %135) #13
  %143 = ptrtoint i8* %141 to i64
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %135, i64 0, i32 21
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %144, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %145, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.593"* %144 to i64*
  store i64 %143, i64* %147, align 8
  %148 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %146, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %140
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %146) #13
  %150 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %146 to i8*
  tail call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %149, %140
  %152 = load i32, i32* %136, align 8
  %153 = or i32 %152, 65536
  store i32 %153, i32* %136, align 8
  br label %154

154:                                              ; preds = %115, %151
  %155 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %135, i64 0, i32 21, i32 0, i32 0, i32 0
  %156 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %155, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 8
  %158 = tail call i64 @_ZN8spvtools3opt8analysis16DebugInfoManager15BuildDebugScopeERKNS0_10DebugScopeEPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %156, %"class.spvtools::opt::DebugScope"* dereferenceable(8) %157, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %3) #13
  store i64 %158, i64* %7, align 8
  call void @_ZN8spvtools3opt10InlinePass8AddStoreEjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPKNS0_11InstructionERKNS0_10DebugScopeE(%"class.spvtools::opt::InlinePass"* %1, i32 %118, i32 %128, %"class.std::__1::unique_ptr.40"* %4, %"class.spvtools::opt::Instruction"* %134, %"class.spvtools::opt::DebugScope"* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %159

159:                                              ; preds = %154, %36, %33
  %160 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %25) #13
  %161 = icmp eq i32 %160, 28
  br i1 %161, label %162, label %190

162:                                              ; preds = %159
  %163 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %20, align 8
  %164 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 11
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 65536
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %183

169:                                              ; preds = %162
  %170 = tail call i8* @_Znwm(i64 232) #14
  %171 = bitcast i8* %170 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %171, %"class.spvtools::opt::IRContext"* %164) #13
  %172 = ptrtoint i8* %170 to i64
  %173 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 21
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %174, align 8
  %176 = bitcast %"class.std::__1::unique_ptr.593"* %173 to i64*
  store i64 %172, i64* %176, align 8
  %177 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %175, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %169
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %175) #13
  %179 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %175 to i8*
  tail call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %178, %169
  %181 = load i32, i32* %165, align 8
  %182 = or i32 %181, 65536
  store i32 %182, i32* %165, align 8
  br label %183

183:                                              ; preds = %162, %180
  %184 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 21, i32 0, i32 0, i32 0
  %185 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %184, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 8, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = tail call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %185, i32 %187, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %3) #13
  %189 = tail call zeroext i1 @_ZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_10BasicBlockEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* %1, %"class.std::__1::unordered_map.249"* dereferenceable(40) %2, %"class.spvtools::opt::BasicBlock"* %163, %"class.spvtools::opt::Instruction"* %25, i32 %188)
  br label %190

190:                                              ; preds = %183, %159
  %191 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %29, i64 0, i32 1
  br label %21

192:                                              ; preds = %30
  ret void
}

declare i64 @_ZN8spvtools3opt8analysis16DebugInfoManager15BuildDebugScopeERKNS0_10DebugScopeEPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::DebugScope"* dereferenceable(8), %"class.spvtools::opt::analysis::DebugInlinedAtContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_10BasicBlockEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::unordered_map.249"* dereferenceable(40), %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function.946", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.std::__1::function.953", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -253
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %229, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %3, %"class.spvtools::opt::IRContext"* %15) #13
  %17 = bitcast %"class.std::__1::function.953"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #13
  %18 = ptrtoint %"class.std::__1::unordered_map.249"* %1 to i64
  %19 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %8, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNS8_10BasicBlockEPKNS8_11InstructionEjE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %19, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNS5_10BasicBlockEPKNS5_11InstructionEjE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %20, align 8
  %21 = bitcast %"class.std::__1::function.953"* %8 to i64*
  store i64 %18, i64* %21, align 8
  %22 = bitcast %"class.std::__1::function.946"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #13
  %23 = ptrtoint %"class.std::__1::function.953"* %8 to i64
  %24 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %24, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %25, align 8
  %26 = bitcast %"class.std::__1::function.946"* %6 to i64*
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 6, i32 0, i32 0
  %28 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 6, i32 0, i32 1
  %30 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %29, align 8
  %31 = icmp eq %"struct.spvtools::opt::Operand"* %28, %30
  br i1 %31, label %54, label %32

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %32
  %35 = phi %"struct.spvtools::opt::Operand"* [ %28, %32 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %37) #13
  br i1 %38, label %39, label %49

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %40, align 8
  %42 = icmp eq %"class.std::__1::vector.3"* %41, null
  %43 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %41, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1, i32 2
  %45 = select i1 %42, i32** %44, i32** %43
  %46 = load i32*, i32** %45, align 8
  %47 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %24, align 8
  %48 = call zeroext i1 %47(%"union.std::__1::__function::__policy_storage"* nonnull %33, i32* %46) #13
  br i1 %48, label %49, label %52

49:                                               ; preds = %39, %34
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %50, %30
  br i1 %51, label %52, label %34

52:                                               ; preds = %49, %39
  %53 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %25, align 8
  br label %54

54:                                               ; preds = %52, %13
  %55 = phi %"struct.std::__1::__function::__policy"* [ %53, %52 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %13 ]
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void %57(i8* %61) #13
  br label %62

62:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #13
  %63 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %63, i64 0, i32 1
  %65 = load void (i8*)*, void (i8*)** %64, align 8
  %66 = icmp eq void (i8*)* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %8, i64 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void %65(i8* %69) #13
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #13
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 4
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %195, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 3
  %76 = load i8, i8* %75, align 4, !range !2
  %77 = zext i8 %76 to i32
  %78 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %16, i32 %77) #13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %195, label %80

80:                                               ; preds = %74
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %222, label %85

85:                                               ; preds = %80
  %86 = call i64 @llvm.ctpop.i64(i64 %83) #13, !range !24
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = add i64 %83, 4294967295
  %90 = and i64 %89, %81
  br label %95

91:                                               ; preds = %85
  %92 = icmp ugt i64 %83, %81
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %81, %83
  br label %95

95:                                               ; preds = %93, %91, %88
  %96 = phi i64 [ %90, %88 ], [ %94, %93 ], [ %81, %91 ]
  %97 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %98, i64 %96
  %100 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.254"* %100, null
  br i1 %101, label %222, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %100, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.254"* %104, null
  br i1 %105, label %222, label %106

106:                                              ; preds = %102
  %107 = add i64 %83, -1
  br label %108

108:                                              ; preds = %129, %106
  %109 = phi %"struct.std::__1::__hash_node_base.254"* [ %104, %106 ], [ %131, %129 ]
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %109, i64 1
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, %81
  br i1 %113, label %124, label %114

114:                                              ; preds = %108
  br i1 %87, label %117, label %115

115:                                              ; preds = %114
  %116 = and i64 %112, %107
  br label %121

117:                                              ; preds = %114
  %118 = icmp ult i64 %112, %83
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %112, %83
  br label %121

121:                                              ; preds = %119, %117, %115
  %122 = phi i64 [ %116, %115 ], [ %120, %119 ], [ %112, %117 ]
  %123 = icmp eq i64 %122, %96
  br i1 %123, label %129, label %222

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %109, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base.254"* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %78
  br i1 %128, label %133, label %129

129:                                              ; preds = %124, %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %109, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.254"* %131, null
  br i1 %132, label %222, label %108

133:                                              ; preds = %124
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"* %125 to %"struct.std::__1::pair.960"*
  %135 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = load i8, i8* %75, align 4, !range !2
  %138 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #13
  %139 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %142 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %143 = bitcast i32** %141 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %142, %"struct.std::__1::aligned_storage<4, 4>::type"** %143, align 8
  %144 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %145 = bitcast %"class.std::__1::unique_ptr.0"* %144 to i64*
  store i64 0, i64* %145, align 8
  %146 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %142 to i32*
  store i64 1, i64* %140, align 8
  store i32 %136, i32* %146, align 8
  %147 = zext i8 %137 to i64
  %148 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %27, align 8
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147, i32 1
  %150 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %149, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %151, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %151, align 8
  %153 = icmp eq %"class.std::__1::vector.3"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %133
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i32* %156 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %158, %154
  %164 = bitcast %"class.std::__1::vector.3"* %152 to i8*
  call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %133, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #13
  %166 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %166, i64 0, i32 11
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %192

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %166, i64 0, i32 4, i32 0, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::Module"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = call i8* @_Znwm(i64 48) #14
  %176 = bitcast i8* %175 to %"class.spvtools::opt::analysis::DecorationManager"*
  %177 = getelementptr inbounds i8, i8* %175, i64 32
  %178 = bitcast i8* %177 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %178, align 4
  %179 = getelementptr inbounds i8, i8* %175, i64 40
  %180 = bitcast i8* %179 to i64*
  store i64 %174, i64* %180, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %176) #13
  %181 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %166, i64 0, i32 7
  %182 = ptrtoint i8* %175 to i64
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %181, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %183, align 8
  %185 = bitcast %"class.std::__1::unique_ptr.122"* %181 to i64*
  store i64 %182, i64* %185, align 8
  %186 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %184, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %171
  %188 = bitcast %"class.std::__1::unique_ptr.122"* %181 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %188, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %184) #13
  br label %189

189:                                              ; preds = %187, %171
  %190 = load i32, i32* %167, align 8
  %191 = or i32 %190, 4
  store i32 %191, i32* %167, align 8
  br label %192

192:                                              ; preds = %165, %189
  %193 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %166, i64 0, i32 7, i32 0, i32 0, i32 0
  %194 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %193, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %194, i32 %78, i32 %136) #13
  br label %195

195:                                              ; preds = %70, %192, %74
  call void @_ZN8spvtools3opt11Instruction20UpdateDebugInlinedAtEj(%"class.spvtools::opt::Instruction"* %16, i32 %4) #13
  %196 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 1
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %197, align 8
  %199 = icmp eq %"class.spvtools::opt::Instruction"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 2
  %202 = bitcast %"class.spvtools::opt::Instruction"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 2
  %205 = bitcast %"class.spvtools::opt::Instruction"** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = bitcast %"class.spvtools::opt::Instruction"** %197 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.spvtools::opt::Instruction"** %201 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %209 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %208, align 8
  %210 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %209, i64 0, i32 1
  %211 = bitcast %"class.spvtools::opt::Instruction"** %210 to i64*
  store i64 %207, i64* %211, align 8
  %212 = bitcast %"class.spvtools::opt::Instruction"** %197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 16, i1 false) #13
  br label %213

213:                                              ; preds = %195, %200
  store %"class.spvtools::opt::Instruction"* %196, %"class.spvtools::opt::Instruction"** %197, align 8
  %214 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %215 = bitcast %"class.spvtools::opt::Instruction"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 2
  %218 = bitcast %"class.spvtools::opt::Instruction"** %217 to i64*
  store i64 %216, i64* %218, align 8
  store %"class.spvtools::opt::Instruction"* %16, %"class.spvtools::opt::Instruction"** %214, align 8
  %219 = bitcast %"class.spvtools::opt::Instruction"** %217 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %220 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %219, align 8
  %221 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %220, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %16, %"class.spvtools::opt::Instruction"** %221, align 8
  br label %229

222:                                              ; preds = %129, %121, %102, %80, %95
  %223 = icmp eq %"class.spvtools::opt::Instruction"* %16, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %222
  %225 = bitcast %"class.spvtools::opt::Instruction"* %16 to void (%"class.spvtools::opt::Instruction"*)***
  %226 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %226, i64 1
  %228 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %227, align 8
  call void %228(%"class.spvtools::opt::Instruction"* nonnull %16) #13
  br label %229

229:                                              ; preds = %5, %224, %222, %213
  %230 = phi i1 [ true, %213 ], [ false, %222 ], [ false, %224 ], [ true, %5 ]
  ret i1 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass12InlineReturnERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS2_6vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISI_EEEENS8_ISL_EEEESL_PNS0_8analysis21DebugInlinedAtContextEPNS0_8FunctionEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::unordered_map.249"* nocapture readonly dereferenceable(40), %"class.std::__1::vector.38"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr.40", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.spvtools::opt::DebugScope"*
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %3, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 254
  br i1 %15, label %16, label %127

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i64 1, i64 2
  %24 = xor i1 %22, true
  %25 = zext i1 %24 to i64
  %26 = select i1 %19, i64 %25, i64 %23
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 6, i32 0, i32 0
  %28 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %27, align 8
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 %26, i32 1, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %29, align 8
  %31 = icmp eq %"class.std::__1::vector.3"* %30, null
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %30, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 %26, i32 1, i32 2
  %34 = select i1 %31, i32** %33, i32** %32
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %93, label %41

41:                                               ; preds = %16
  %42 = tail call i64 @llvm.ctpop.i64(i64 %39) #13, !range !24
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = add i64 %39, 4294967295
  %46 = and i64 %45, %37
  br label %51

47:                                               ; preds = %41
  %48 = icmp ugt i64 %39, %37
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %37, %39
  br label %51

51:                                               ; preds = %49, %47, %44
  %52 = phi i64 [ %46, %44 ], [ %50, %49 ], [ %37, %47 ]
  %53 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %54, i64 %52
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %93, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %56, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.254"* %60, null
  br i1 %61, label %93, label %62

62:                                               ; preds = %58
  %63 = add i64 %39, -1
  br label %64

64:                                               ; preds = %85, %62
  %65 = phi %"struct.std::__1::__hash_node_base.254"* [ %60, %62 ], [ %87, %85 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %65, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base.254"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %37
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  br i1 %43, label %73, label %71

71:                                               ; preds = %70
  %72 = and i64 %68, %63
  br label %77

73:                                               ; preds = %70
  %74 = icmp ult i64 %68, %39
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %68, %39
  br label %77

77:                                               ; preds = %75, %73, %71
  %78 = phi i64 [ %72, %71 ], [ %76, %75 ], [ %68, %73 ]
  %79 = icmp eq i64 %78, %52
  br i1 %79, label %85, label %93

80:                                               ; preds = %64
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %65, i64 2
  %82 = bitcast %"struct.std::__1::__hash_node_base.254"* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %36
  br i1 %84, label %89, label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %65, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base.254"* %87, null
  br i1 %88, label %93, label %64

89:                                               ; preds = %80
  %90 = bitcast %"struct.std::__1::__hash_node_base.254"* %81 to %"struct.std::__1::pair.960"*
  %91 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %85, %77, %58, %16, %51, %89
  %94 = phi i32 [ %92, %89 ], [ %36, %51 ], [ %36, %16 ], [ %36, %58 ], [ %36, %77 ], [ %36, %85 ]
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 7, i32 0, i32 0
  %96 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 7, i32 0, i32 1
  %98 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %97, align 8
  %99 = icmp eq %"class.spvtools::opt::Instruction"* %96, %98
  %100 = select i1 %99, %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"* %96
  %101 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %103 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %103, i64 0, i32 11
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 65536
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %93
  %109 = tail call i8* @_Znwm(i64 232) #14
  %110 = bitcast i8* %109 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %110, %"class.spvtools::opt::IRContext"* %103) #13
  %111 = ptrtoint i8* %109 to i64
  %112 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %103, i64 0, i32 21
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.593"* %112 to i64*
  store i64 %111, i64* %115, align 8
  %116 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %114, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %108
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %114) #13
  %118 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %114 to i8*
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %117, %108
  %120 = load i32, i32* %104, align 8
  %121 = or i32 %120, 65536
  store i32 %121, i32* %104, align 8
  br label %122

122:                                              ; preds = %93, %119
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %103, i64 0, i32 21, i32 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %123, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 8
  %126 = tail call i64 @_ZN8spvtools3opt8analysis16DebugInfoManager15BuildDebugScopeERKNS0_10DebugScopeEPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %124, %"class.spvtools::opt::DebugScope"* dereferenceable(8) %125, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %4) #13
  store i64 %126, i64* %10, align 8
  call void @_ZN8spvtools3opt10InlinePass8AddStoreEjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPKNS0_11InstructionERKNS0_10DebugScopeE(%"class.spvtools::opt::InlinePass"* %0, i32 %7, i32 %94, %"class.std::__1::unique_ptr.40"* nonnull %9, %"class.spvtools::opt::Instruction"* %100, %"class.spvtools::opt::DebugScope"* nonnull dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  br label %127

127:                                              ; preds = %122, %8
  %128 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %5, i64 0, i32 3, i32 0, i32 0
  %129 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %128, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %5, i64 0, i32 3, i32 0, i32 1
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %130, align 8
  %132 = icmp eq %"class.std::__1::unique_ptr.40"* %129, %131
  br i1 %132, label %165, label %136

133:                                              ; preds = %136
  %134 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %130, align 8
  %135 = icmp eq %"class.std::__1::unique_ptr.40"* %145, %134
  br i1 %135, label %165, label %136

136:                                              ; preds = %127, %133
  %137 = phi %"class.std::__1::unique_ptr.40"* [ %145, %133 ], [ %129, %127 ]
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %139, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %141 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %140, align 8, !noalias !25
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %141, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = tail call zeroext i1 @_Z16spvOpcodeIsAbort6SpvOp_(i32 %143) #13
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 1
  br i1 %144, label %146, label %133

146:                                              ; preds = %136
  %147 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %148 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %147, align 8
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %148, i64 0, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %149, align 8
  %151 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %150) #13
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %168

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %148, i64 0, i32 5, i32 0, i32 2
  %155 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %155, i64 0, i32 2
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %160, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %161 = getelementptr inbounds i8, i8* %160, i64 37
  store i8 0, i8* %161, align 1
  %162 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %148, i64 0, i32 5, i32 0, i32 1, i32 0
  %163 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %162, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %148, i64 0, i32 5, i32 0, i32 0
  tail call void %163(%"union.std::__1::__function::__policy_storage"* %164, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %160) #13
  tail call void @_ZdlPv(i8* nonnull %160) #14
  br label %165

165:                                              ; preds = %133, %127, %159, %153
  %166 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %12, align 8
  br label %212

168:                                              ; preds = %146
  %169 = load i32, i32* %13, align 8
  %170 = add i32 %169, -253
  %171 = icmp ult i32 %170, 2
  br i1 %171, label %172, label %173

172:                                              ; preds = %168
  call void @_ZN8spvtools3opt10InlinePass9AddBranchEjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InlinePass"* %0, i32 %151, %"class.std::__1::unique_ptr.40"* nonnull %9)
  br label %173

173:                                              ; preds = %168, %172
  %174 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2, i64 0, i32 0, i32 1
  %175 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %177 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %176, align 8
  %178 = icmp ult %"class.std::__1::unique_ptr.40"* %175, %177
  br i1 %178, label %179, label %186

179:                                              ; preds = %173
  %180 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.40"* %175 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %175, i64 1
  %184 = ptrtoint %"class.std::__1::unique_ptr.40"* %183 to i64
  %185 = bitcast %"class.std::__1::unique_ptr.40"** %174 to i64*
  store i64 %184, i64* %185, align 8
  br label %187

186:                                              ; preds = %173
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %9) #13
  br label %187

187:                                              ; preds = %179, %186
  %188 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10InlinePass8NewLabelEj(%"class.spvtools::opt::InlinePass"* %0, i32 %151)
  %189 = ptrtoint %"class.spvtools::opt::Instruction"* %188 to i64
  %190 = call i8* @_Znwm(i64 136) #14
  %191 = bitcast i8* %190 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %191, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 8
  %193 = bitcast i8* %192 to i64*
  store i64 %189, i64* %193, align 8
  %194 = getelementptr inbounds i8, i8* %190, i64 16
  %195 = bitcast i8* %194 to i32 (...)***
  %196 = getelementptr inbounds i8, i8* %190, i64 24
  %197 = bitcast i8* %196 to i32 (...)***
  %198 = getelementptr inbounds i8, i8* %190, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %197, align 8
  %199 = getelementptr inbounds i8, i8* %190, i64 56
  %200 = getelementptr inbounds i8, i8* %190, i64 72
  %201 = bitcast i8* %200 to i32*
  store i32 0, i32* %201, align 8
  %202 = getelementptr inbounds i8, i8* %190, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 56, i1 false) #13
  %203 = bitcast i8* %198 to i8**
  store i8* %196, i8** %203, align 8
  %204 = getelementptr inbounds i8, i8* %190, i64 40
  %205 = bitcast i8* %204 to i8**
  store i8* %196, i8** %205, align 8
  %206 = getelementptr inbounds i8, i8* %190, i64 48
  store i8 1, i8* %206, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %207 = ptrtoint i8* %190 to i64
  %208 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %209 = icmp eq %"class.spvtools::opt::BasicBlock"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %187
  %211 = bitcast %"class.std::__1::unique_ptr.40"* %9 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %211, %"class.spvtools::opt::BasicBlock"* nonnull %208) #13
  br label %212

212:                                              ; preds = %165, %187, %210
  %213 = phi i64 [ %167, %165 ], [ %207, %187 ], [ %207, %210 ]
  %214 = inttoptr i64 %213 to %"class.spvtools::opt::BasicBlock"*
  ret %"class.spvtools::opt::BasicBlock"* %214
}

declare zeroext i1 @_Z16spvOpcodeIsAbort6SpvOp_(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass16InlineEntryBlockERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISH_EEEENS0_18UptrVectorIteratorISH_Lb0EEEPNS0_8analysis21DebugInlinedAtContextE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::unordered_map.249"* dereferenceable(40), %"class.std::__1::unique_ptr.40"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %8 = alloca %"class.spvtools::opt::UptrVectorIterator", align 8
  %9 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %7, i64 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.38"* %3, %"class.std::__1::vector.38"** %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::unique_ptr.40"* %4, %"class.std::__1::unique_ptr.40"** %12, align 8
  call void @_ZN8spvtools3opt10InlinePass32AddStoresForVariableInitializersERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_8analysis21DebugInlinedAtContextEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISK_EEEENS0_18UptrVectorIteratorISK_Lb0EEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %7, %"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map.249"* dereferenceable(40) %1, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %5, %"class.std::__1::unique_ptr.40"* %2, %"class.spvtools::opt::UptrVectorIterator"* nonnull byval(%"class.spvtools::opt::UptrVectorIterator") align 8 %8)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %17 = icmp eq %"class.spvtools::opt::Instruction"* %16, %15
  br i1 %17, label %67, label %18

18:                                               ; preds = %6
  %19 = bitcast %"class.spvtools::opt::Instruction"* %16 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %22 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %7 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %18, %55
  %25 = phi i64 [ %23, %18 ], [ %58, %55 ]
  %26 = phi %"class.spvtools::utils::IntrusiveNodeBase"* [ %19, %18 ], [ %63, %55 ]
  %27 = phi %"class.spvtools::opt::Instruction"* [ %16, %18 ], [ %61, %55 ]
  %28 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %20, align 8
  %29 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %21, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %29, i64 0, i32 11
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 65536
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %24
  %35 = tail call i8* @_Znwm(i64 232) #14
  %36 = bitcast i8* %35 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %36, %"class.spvtools::opt::IRContext"* %29) #13
  %37 = ptrtoint i8* %35 to i64
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %29, i64 0, i32 21
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.593"* %38 to i64*
  store i64 %37, i64* %41, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %34
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %40) #13
  %44 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %40 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %43, %34
  %46 = load i32, i32* %30, align 8
  %47 = or i32 %46, 65536
  store i32 %47, i32* %30, align 8
  br label %48

48:                                               ; preds = %24, %45
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %29, i64 0, i32 21, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 8, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = tail call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %50, i32 %52, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %5) #13
  %54 = tail call zeroext i1 @_ZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_10BasicBlockEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map.249"* dereferenceable(40) %1, %"class.spvtools::opt::BasicBlock"* %28, %"class.spvtools::opt::Instruction"* %27, i32 %53)
  br i1 %54, label %55, label %64

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %57 = bitcast %"class.spvtools::opt::Instruction"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %59, i64 0, i32 2, i32 0, i32 1
  %61 = inttoptr i64 %58 to %"class.spvtools::opt::Instruction"*
  %62 = icmp eq %"class.spvtools::opt::Instruction"* %60, %61
  %63 = inttoptr i64 %58 to %"class.spvtools::utils::IntrusiveNodeBase"*
  br i1 %62, label %64, label %24

64:                                               ; preds = %55, %48
  %65 = phi i64 [ %58, %55 ], [ %25, %48 ]
  %66 = phi i1 [ true, %55 ], [ false, %48 ]
  store i64 %65, i64* %22, align 8
  br label %67

67:                                               ; preds = %64, %6
  %68 = phi i1 [ true, %6 ], [ %66, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i1 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass17InlineBasicBlocksEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEERKNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS9_INS2_4pairIKjjEEEEEES8_PNS0_8analysis21DebugInlinedAtContextEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unordered_map.249"* dereferenceable(40), %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.40", align 8
  %8 = alloca %"class.std::__1::unique_ptr.40", align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %3, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %5, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 1
  %13 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %5, i64 0, i32 3, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %12, %14
  br i1 %15, label %186, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i64*
  %20 = bitcast %"class.std::__1::unique_ptr.40"** %17 to i64*
  %21 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i8*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.40"* %7 to %"struct.std::__1::default_delete.44"*
  %26 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  %27 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  br label %32

28:                                               ; preds = %177, %139
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %33, i64 1
  %30 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %13, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.40"* %29, %30
  br i1 %31, label %184, label %32

32:                                               ; preds = %16, %28
  %33 = phi %"class.std::__1::unique_ptr.40"* [ %12, %16 ], [ %29, %28 ]
  %34 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %17, align 8
  %35 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %18, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.40"* %34, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = load i64, i64* %19, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.40"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %34, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr.40"* %40 to i64
  store i64 %41, i64* %20, align 8
  br label %43

42:                                               ; preds = %32
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %1, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %7) #13
  br label %43

43:                                               ; preds = %37, %42
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %33, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 3
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = zext i8 %53 to i32
  %55 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %54) #13
  br label %56

56:                                               ; preds = %43, %51
  %57 = phi i32 [ %55, %51 ], [ 0, %43 ]
  %58 = zext i32 %57 to i64
  %59 = load i64, i64* %21, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %188, label %61

61:                                               ; preds = %56
  %62 = call i64 @llvm.ctpop.i64(i64 %59) #13, !range !24
  %63 = icmp ugt i64 %62, 1
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = add i64 %59, 4294967295
  %66 = and i64 %65, %58
  br label %71

67:                                               ; preds = %61
  %68 = icmp ugt i64 %59, %58
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %58, %59
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %58, %67 ]
  %73 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %73, i64 %72
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %188, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %75, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.254"* %79, null
  br i1 %80, label %188, label %81

81:                                               ; preds = %77
  %82 = add i64 %59, -1
  br label %83

83:                                               ; preds = %104, %81
  %84 = phi %"struct.std::__1::__hash_node_base.254"* [ %79, %81 ], [ %106, %104 ]
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.254"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, %58
  br i1 %88, label %99, label %89

89:                                               ; preds = %83
  br i1 %63, label %92, label %90

90:                                               ; preds = %89
  %91 = and i64 %87, %82
  br label %96

92:                                               ; preds = %89
  %93 = icmp ult i64 %87, %59
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %87, %59
  br label %96

96:                                               ; preds = %94, %92, %90
  %97 = phi i64 [ %91, %90 ], [ %95, %94 ], [ %87, %92 ]
  %98 = icmp eq i64 %97, %72
  br i1 %98, label %104, label %188

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %84, i64 2
  %101 = bitcast %"struct.std::__1::__hash_node_base.254"* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %57
  br i1 %103, label %108, label %104

104:                                              ; preds = %99, %96
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %84, i64 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.254"* %106, null
  br i1 %107, label %188, label %83

108:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %109 = bitcast %"struct.std::__1::__hash_node_base.254"* %100 to %"struct.std::__1::pair.960"*
  %110 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10InlinePass8NewLabelEj(%"class.spvtools::opt::InlinePass"* %0, i32 %111)
  %113 = ptrtoint %"class.spvtools::opt::Instruction"* %112 to i64
  %114 = call i8* @_Znwm(i64 136) #14
  %115 = bitcast i8* %114 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %115, align 8
  %116 = getelementptr inbounds i8, i8* %114, i64 8
  %117 = bitcast i8* %116 to i64*
  store i64 %113, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %114, i64 16
  %119 = bitcast i8* %118 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %114, i64 24
  %121 = bitcast i8* %120 to i32 (...)***
  %122 = getelementptr inbounds i8, i8* %114, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %123 = getelementptr inbounds i8, i8* %114, i64 56
  %124 = getelementptr inbounds i8, i8* %114, i64 72
  %125 = bitcast i8* %124 to i32*
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds i8, i8* %114, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 56, i1 false) #13
  %127 = bitcast i8* %122 to i8**
  store i8* %120, i8** %127, align 8
  %128 = getelementptr inbounds i8, i8* %114, i64 40
  %129 = bitcast i8* %128 to i8**
  store i8* %120, i8** %129, align 8
  %130 = getelementptr inbounds i8, i8* %114, i64 48
  store i8 1, i8* %130, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %131 = ptrtoint i8* %114 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %24, align 8
  %132 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  store i64 %131, i64* %19, align 8
  %133 = icmp eq %"class.spvtools::opt::BasicBlock"* %132, null
  br i1 %133, label %134, label %135

134:                                              ; preds = %108
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %24, align 8
  br label %139

135:                                              ; preds = %108
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %25, %"class.spvtools::opt::BasicBlock"* nonnull %132) #13
  %136 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %24, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %24, align 8
  %137 = icmp eq %"class.spvtools::opt::BasicBlock"* %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %26, %"class.spvtools::opt::BasicBlock"* nonnull %136) #13
  br label %139

139:                                              ; preds = %138, %135, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %140 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %44, align 8
  %141 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %140, i64 0, i32 2, i32 0, i32 1
  %142 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %140, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = inttoptr i64 %144 to %"class.spvtools::opt::Instruction"*
  %146 = icmp eq %"class.spvtools::opt::Instruction"* %141, %145
  br i1 %146, label %28, label %147

147:                                              ; preds = %139, %177
  %148 = phi %"class.spvtools::opt::Instruction"* [ %182, %177 ], [ %145, %139 ]
  %149 = phi i64 [ %181, %177 ], [ %144, %139 ]
  %150 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %151 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %151, i64 0, i32 11
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 65536
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %170

156:                                              ; preds = %147
  %157 = call i8* @_Znwm(i64 232) #14
  %158 = bitcast i8* %157 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %158, %"class.spvtools::opt::IRContext"* %151) #13
  %159 = ptrtoint i8* %157 to i64
  %160 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %151, i64 0, i32 21
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %161, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.593"* %160 to i64*
  store i64 %159, i64* %163, align 8
  %164 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %162, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %156
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %162) #13
  %166 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %162 to i8*
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %165, %156
  %168 = load i32, i32* %152, align 8
  %169 = or i32 %168, 65536
  store i32 %169, i32* %152, align 8
  br label %170

170:                                              ; preds = %147, %167
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %151, i64 0, i32 21, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %171, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %148, i64 0, i32 8, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %172, i32 %174, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %4) #13
  %176 = call zeroext i1 @_ZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_10BasicBlockEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map.249"* dereferenceable(40) %2, %"class.spvtools::opt::BasicBlock"* %150, %"class.spvtools::opt::Instruction"* %148, i32 %175)
  br i1 %176, label %177, label %188

177:                                              ; preds = %170
  %178 = inttoptr i64 %149 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %179 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %178, i64 0, i32 1
  %180 = bitcast %"class.spvtools::opt::Instruction"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = inttoptr i64 %181 to %"class.spvtools::opt::Instruction"*
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %141, %182
  br i1 %183, label %28, label %147

184:                                              ; preds = %28
  %185 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  br label %186

186:                                              ; preds = %184, %6
  %187 = phi %"class.spvtools::opt::BasicBlock"* [ %185, %184 ], [ %3, %6 ]
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %9, align 8
  br label %192

188:                                              ; preds = %71, %56, %77, %96, %104, %170
  %189 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %190 = icmp eq %"class.spvtools::opt::BasicBlock"* %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %25, %"class.spvtools::opt::BasicBlock"* nonnull %189) #13
  br label %192

192:                                              ; preds = %186, %188, %191
  %193 = phi %"class.spvtools::opt::BasicBlock"* [ %187, %186 ], [ null, %188 ], [ null, %191 ]
  ret %"class.spvtools::opt::BasicBlock"* %193
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass32MoveCallerInstsAfterFunctionCallEPNSt3__113unordered_mapIjPNS0_11InstructionENS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjS5_EEEEEEPNS3_IjjS7_S9_NSA_INSB_ISC_jEEEEEEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISM_EEEENS0_15InstructionList8iteratorEb(%"class.spvtools::opt::InlinePass"*, %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map.249"*, %"class.std::__1::unique_ptr.40"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %8 = alloca %"class.std::__1::unordered_map"*, align 8
  %9 = alloca %"class.std::__1::unique_ptr.40"*, align 8
  %10 = alloca %"class.std::__1::function.946", align 8
  %11 = alloca %"class.std::__1::tuple.1051", align 8
  %12 = alloca %"class.std::__1::tuple.1054", align 1
  %13 = alloca i32, align 4
  %14 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %15 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %15, i64 0, i32 1
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  %21 = icmp eq %"class.spvtools::opt::Instruction"* %17, null
  %22 = or i1 %21, %20
  br i1 %22, label %150, label %23

23:                                               ; preds = %6
  %24 = bitcast %"class.std::__1::unordered_map.249"** %7 to i8*
  %25 = bitcast %"class.std::__1::unordered_map"** %8 to i8*
  %26 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i8*
  %27 = bitcast %"class.std::__1::function.946"* %10 to i8*
  %28 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %10, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %10, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %10, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %10, i64 0, i32 0, i32 0
  %32 = bitcast i32* %13 to i8*
  %33 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %2, i64 0, i32 0
  %34 = bitcast %"class.std::__1::tuple.1051"* %11 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %11, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %12, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 0, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %23, %136
  %39 = phi %"class.spvtools::opt::Instruction"* [ %17, %23 ], [ %144, %136 ]
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 0, i32 2
  %41 = bitcast %"class.spvtools::opt::Instruction"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 0, i32 1
  %44 = bitcast %"class.spvtools::opt::Instruction"** %43 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %45 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %45, i64 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  store i64 %42, i64* %47, align 8
  %48 = bitcast %"class.spvtools::opt::Instruction"** %43 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.spvtools::opt::Instruction"** %40 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #13
  br i1 %5, label %55, label %118

55:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store %"class.std::__1::unordered_map.249"* %2, %"class.std::__1::unordered_map.249"** %7, align 8
  store %"class.std::__1::unordered_map"* %1, %"class.std::__1::unordered_map"** %8, align 8
  store %"class.std::__1::unique_ptr.40"* %3, %"class.std::__1::unique_ptr.40"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNSA_INS8_10BasicBlockENSC_ISX_EEEEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %28, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %29, align 8
  %56 = call i8* @_Znwm(i64 32) #14, !noalias !28
  %57 = bitcast i8* %56 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %7, %"class.std::__1::unordered_map.249"*** %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to %"class.std::__1::unordered_map"***
  store %"class.std::__1::unordered_map"** %8, %"class.std::__1::unordered_map"*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::unique_ptr.40"***
  store %"class.std::__1::unique_ptr.40"** %9, %"class.std::__1::unique_ptr.40"*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  %63 = bitcast i8* %62 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::InlinePass"** %63, align 8
  store i8* %56, i8** %30, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 6, i32 0, i32 0
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 6, i32 0, i32 1
  %67 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %66, align 8
  %68 = icmp eq %"struct.spvtools::opt::Operand"* %65, %67
  br i1 %68, label %90, label %69

69:                                               ; preds = %55, %84
  %70 = phi %"struct.spvtools::opt::Operand"* [ %85, %84 ], [ %65, %55 ]
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %72) #13
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %75, align 8
  %77 = icmp eq %"class.std::__1::vector.3"* %76, null
  %78 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %76, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 2
  %80 = select i1 %77, i32** %79, i32** %78
  %81 = load i32*, i32** %80, align 8
  %82 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %28, align 8
  %83 = call zeroext i1 %82(%"union.std::__1::__function::__policy_storage"* nonnull %31, i32* %81) #13
  br i1 %83, label %84, label %87

84:                                               ; preds = %74, %69
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 1
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, %67
  br i1 %86, label %87, label %69

87:                                               ; preds = %84, %74
  %88 = phi i1 [ true, %84 ], [ false, %74 ]
  %89 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  br label %90

90:                                               ; preds = %87, %55
  %91 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %55 ], [ %89, %87 ]
  %92 = phi i1 [ true, %55 ], [ %88, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %91, i64 0, i32 1
  %94 = load void (i8*)*, void (i8*)** %93, align 8
  %95 = icmp eq void (i8*)* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = load i8*, i8** %30, align 8
  call void %94(i8* %97) #13
  br label %98

98:                                               ; preds = %90, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br i1 %92, label %99, label %131

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  switch i32 %101, label %118 [
    i32 100, label %102
    i32 86, label %102
  ]

102:                                              ; preds = %99, %99
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  store i32 -1431655766, i32* %13, align 4
  %103 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = zext i8 %108 to i32
  %110 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %39, i32 %109) #13
  br label %111

111:                                              ; preds = %102, %106
  %112 = phi i32 [ %110, %106 ], [ 0, %102 ]
  store i32 %112, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  store i32* %13, i32** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #13
  %113 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %33, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %12) #13
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %114, i64 2
  %116 = bitcast %"struct.std::__1::__hash_node_base.254"* %115 to %"struct.std::__1::pair.960"*
  %117 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %116, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  store i32 %112, i32* %117, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  br label %118

118:                                              ; preds = %99, %111, %38
  %119 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %119, i64 0, i32 2, i32 0, i32 1
  %121 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %43, align 8
  %122 = icmp eq %"class.spvtools::opt::Instruction"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = load i64, i64* %41, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %121, i64 0, i32 0, i32 2
  %126 = bitcast %"class.spvtools::opt::Instruction"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = load i64, i64* %48, align 8
  %128 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %129 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %128, i64 0, i32 1
  %130 = bitcast %"class.spvtools::opt::Instruction"** %129 to i64*
  store i64 %127, i64* %130, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #13
  br label %136

131:                                              ; preds = %98
  %132 = bitcast %"class.spvtools::opt::Instruction"* %39 to void (%"class.spvtools::opt::Instruction"*)***
  %133 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %133, i64 1
  %135 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %134, align 8
  call void %135(%"class.spvtools::opt::Instruction"* nonnull %39) #13
  br label %150

136:                                              ; preds = %118, %123
  store %"class.spvtools::opt::Instruction"* %120, %"class.spvtools::opt::Instruction"** %43, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %119, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %138 = bitcast %"class.spvtools::opt::Instruction"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %41, align 8
  store %"class.spvtools::opt::Instruction"* %39, %"class.spvtools::opt::Instruction"** %137, align 8
  %140 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %141 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %140, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %39, %"class.spvtools::opt::Instruction"** %141, align 8
  %142 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %14, align 8
  %143 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %142, i64 0, i32 1
  %144 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %144, i64 0, i32 0, i32 3
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp ne i8 %146, 0
  %148 = icmp eq %"class.spvtools::opt::Instruction"* %144, null
  %149 = or i1 %148, %147
  br i1 %149, label %150, label %38

150:                                              ; preds = %136, %6, %131
  %151 = phi i1 [ false, %131 ], [ true, %6 ], [ true, %136 ]
  ret i1 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass29MoveLoopMergeInstToFirstBlockEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.std::__1::vector.38"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %5 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 -1, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %14 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %13, align 8, !noalias !33
  %15 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %14, i64 0, i32 2
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %20 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %21 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %16, %"class.spvtools::opt::IRContext"* %20) #13
  %22 = ptrtoint %"class.spvtools::opt::Instruction"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %26, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !36
  %30 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %4 to i64*
  store i64 %29, i64* %30, align 8, !alias.scope !36
  %31 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %5, %"class.spvtools::opt::InstructionList::iterator"* nonnull %4, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 2
  %33 = bitcast %"class.spvtools::opt::Instruction"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 1
  %36 = bitcast %"class.spvtools::opt::Instruction"** %35 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %37 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %37, i64 0, i32 2
  %39 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  store i64 %34, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %35 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.spvtools::opt::Instruction"** %32 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %43 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %43, i64 0, i32 1
  %45 = bitcast %"class.spvtools::opt::Instruction"** %44 to i64*
  store i64 %41, i64* %45, align 8
  %46 = bitcast %"class.spvtools::opt::Instruction"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #13
  %47 = icmp eq %"class.spvtools::opt::Instruction"* %16, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %2
  %49 = bitcast %"class.spvtools::opt::Instruction"* %16 to void (%"class.spvtools::opt::Instruction"*)***
  %50 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %50, i64 1
  %52 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %51, align 8
  call void %52(%"class.spvtools::opt::Instruction"* nonnull %16) #13
  br label %53

53:                                               ; preds = %48, %2
  %54 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %55 = icmp eq %"class.spvtools::opt::Instruction"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.spvtools::opt::Instruction"* %54 to void (%"class.spvtools::opt::Instruction"*)***
  %58 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %58, i64 1
  %60 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %59, align 8
  call void %60(%"class.spvtools::opt::Instruction"* nonnull %54) #13
  br label %61

61:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  ret void
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass13GenInlineCodeEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEPNS3_INS4_INS0_11InstructionENS6_ISD_EEEENS9_ISF_EEEENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorIS5_Lb0EEE(%"class.spvtools::opt::InlinePass"*, %"class.std::__1::vector.38"*, %"class.std::__1::vector.31"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %9 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %10 = alloca %"class.std::__1::tuple.1051", align 8
  %11 = alloca %"class.std::__1::tuple.1054", align 1
  %12 = alloca %"class.std::__1::tuple.1073", align 8
  %13 = alloca %"class.std::__1::tuple.1054", align 1
  %14 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::__1::function.940", align 8
  %17 = alloca %"class.std::__1::tuple.1073", align 8
  %18 = alloca %"class.std::__1::tuple.1054", align 1
  %19 = alloca %"class.std::__1::unordered_map.249", align 8
  %20 = alloca %"class.std::__1::unordered_map", align 8
  %21 = alloca %"class.std::__1::unordered_map.249", align 8
  %22 = alloca %"class.spvtools::opt::analysis::DebugInlinedAtContext", align 8
  %23 = alloca %"class.std::__1::unique_ptr.40", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %26 = alloca i32, align 4
  %27 = alloca %"class.std::__1::unique_ptr.40", align 8
  %28 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %29 = alloca %"class.std::__1::unique_ptr.40", align 8
  %30 = alloca %"class.std::__1::function.961", align 8
  %31 = alloca %"class.std::__1::function.940", align 8
  %32 = alloca %"class.std::__1::unique_ptr.40", align 8
  %33 = alloca %"class.std::__1::unique_ptr.40", align 8
  %34 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %35 = alloca i32, align 4
  %36 = bitcast %"class.std::__1::unordered_map.249"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %19, i64 0, i32 0, i32 4, i64 0
  %40 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %19, i64 0, i32 0, i32 3
  %41 = bitcast %"class.std::__1::__compressed_pair.269"* %40 to i32*
  %42 = bitcast i8* %39 to i32*
  store i32 -1431655766, i32* %42, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %41, align 8
  %43 = bitcast %"class.std::__1::unordered_map"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0, i32 4, i64 0
  %47 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0, i32 3
  %48 = bitcast %"class.std::__1::__compressed_pair.81"* %47 to i32*
  %49 = bitcast i8* %46 to i32*
  store i32 -1431655766, i32* %49, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %48, align 8
  %50 = bitcast %"class.std::__1::unordered_map.249"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %21, i64 0, i32 0, i32 4, i64 0
  %54 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %21, i64 0, i32 0, i32 3
  %55 = bitcast %"class.std::__1::__compressed_pair.269"* %54 to i32*
  %56 = bitcast i8* %53 to i32*
  store i32 -1431655766, i32* %56, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %55, align 8
  %57 = bitcast %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 0
  %59 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 2, i32 0, i32 4, i64 0
  %62 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %3, i64 0, i32 0, i32 0
  %63 = bitcast i8* %61 to i32*
  store i32 -1431655766, i32* %63, align 4
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 7, i32 0, i32 0
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 7, i32 0, i32 1
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %66, %68
  %70 = select i1 %69, %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"* %66
  store %"class.spvtools::opt::Instruction"* %70, %"class.spvtools::opt::Instruction"** %58, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 1
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 8
  %73 = bitcast %"class.spvtools::opt::DebugScope"* %72 to i64*
  %74 = bitcast %"class.spvtools::opt::DebugScope"* %71 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 2
  %77 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInlinedAtContext", %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, i64 0, i32 2, i32 0, i32 3
  %78 = bitcast %"class.std::__1::__compressed_pair.269"* %77 to i32*
  %79 = bitcast %"class.std::__1::unordered_map.249"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %81 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %80, align 8
  tail call void @_ZN8spvtools3opt9IRContext18InvalidateAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %81, i32 1) #13
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %5, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %84 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %83) #13
  %85 = icmp ne %"class.spvtools::opt::Instruction"* %84, null
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %23, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %23 to i64*
  store i64 0, i64* %88, align 8
  %89 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #13
  %90 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %90, i32 2) #13
  store i32 %91, i32* %24, align 4
  %92 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0
  %93 = bitcast %"class.std::__1::tuple.1073"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #13
  %94 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %17, i64 0, i32 0, i32 0, i32 0
  store i32* %24, i32** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %95) #13
  %96 = call { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"* %92, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %18) #13
  %97 = extractvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %96, 0
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %97, i64 3
  %99 = bitcast %"struct.std::__1::__hash_node_base.206"* %98 to %"class.spvtools::opt::Function"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %95) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #13
  %100 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #13
  %101 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %3 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %25 to i64*
  store i64 %102, i64* %103, align 8
  %104 = bitcast %"class.std::__1::unordered_map.249"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)
  store %"class.std::__1::unordered_map.249"* %19, %"class.std::__1::unordered_map.249"** %14, align 8
  %105 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #13
  store i32 0, i32* %15, align 4
  %106 = bitcast %"class.std::__1::function.940"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %16, i64 0, i32 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %16, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass9MapParamsEPNS3_8FunctionENS3_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %107, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %108, align 8
  %109 = call i8* @_Znwm(i64 24) #14, !noalias !39
  %110 = bitcast i8* %109 to %"class.spvtools::opt::InstructionList::iterator"**
  store %"class.spvtools::opt::InstructionList::iterator"* %25, %"class.spvtools::opt::InstructionList::iterator"** %110, align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 8
  %112 = bitcast i8* %111 to i32**
  store i32* %15, i32** %112, align 8
  %113 = getelementptr inbounds i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %14, %"class.std::__1::unordered_map.249"*** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %16, i64 0, i32 0, i32 0, i32 0
  store i8* %109, i8** %115, align 8
  call void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"* %100, %"class.std::__1::function.940"* nonnull dereferenceable(32) %16, i1 zeroext false) #13
  %116 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %108, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %116, i64 0, i32 1
  %118 = load void (i8*)*, void (i8*)** %117, align 8
  %119 = icmp eq void (i8*)* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %6
  %121 = load i8*, i8** %115, align 8
  call void %118(i8* %121) #13
  br label %122

122:                                              ; preds = %6, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)
  %123 = call zeroext i1 @_ZN8spvtools3opt10InlinePass17CloneAndMapLocalsEPNS0_8FunctionEPNSt3__16vectorINS4_10unique_ptrINS0_11InstructionENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEPNS4_13unordered_mapIjjNS4_4hashIjEENS4_8equal_toIjEENSB_INS4_4pairIKjjEEEEEEPNS0_8analysis21DebugInlinedAtContextE(%"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::Function"* %100, %"class.std::__1::vector.31"* %2, %"class.std::__1::unordered_map.249"* nonnull %19, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* nonnull %22)
  br i1 %123, label %124, label %502

124:                                              ; preds = %122
  %125 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #13
  store i32 -1431655766, i32* %26, align 4
  %126 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %100, i64 0, i32 3
  %127 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %130, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 4
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %124
  %137 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 3
  %138 = load i8, i8* %137, align 4, !range !2
  %139 = zext i8 %138 to i32
  %140 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %132, i32 %139) #13
  br label %141

141:                                              ; preds = %124, %136
  %142 = phi i32 [ %140, %136 ], [ 0, %124 ]
  store i32 %142, i32* %26, align 4
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %144, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 0, i32 4
  %147 = load i8, i8* %146, align 1, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 0, i32 3
  %151 = load i8, i8* %150, align 4, !range !2
  %152 = zext i8 %151 to i32
  %153 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %145, i32 %152) #13
  br label %154

154:                                              ; preds = %141, %149
  %155 = phi i32 [ %153, %149 ], [ 0, %141 ]
  %156 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %19, i64 0, i32 0
  %157 = bitcast %"class.std::__1::tuple.1051"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #13
  %158 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %10, i64 0, i32 0, i32 0, i32 0
  store i32* %26, i32** %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %159) #13
  %160 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* nonnull %156, i32* nonnull dereferenceable(4) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %11) #13
  %161 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %160, 0
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %161, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.254"* %162 to %"struct.std::__1::pair.960"*
  %164 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %163, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %159) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #13
  store i32 %155, i32* %164, align 4
  %165 = bitcast %"class.std::__1::unique_ptr.40"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #13
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %166, align 8
  %167 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %167, i64 0, i32 1, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %169, i64 0, i32 4
  %171 = load i8, i8* %170, align 1, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %178, label %173

173:                                              ; preds = %154
  %174 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %169, i64 0, i32 3
  %175 = load i8, i8* %174, align 4, !range !2
  %176 = zext i8 %175 to i32
  %177 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %169, i32 %176) #13
  br label %178

178:                                              ; preds = %173, %154
  %179 = phi i32 [ %177, %173 ], [ 0, %154 ]
  %180 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10InlinePass8NewLabelEj(%"class.spvtools::opt::InlinePass"* %0, i32 %179)
  %181 = ptrtoint %"class.spvtools::opt::Instruction"* %180 to i64
  %182 = call i8* @_Znwm(i64 136) #14
  %183 = bitcast i8* %182 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %183, align 8
  %184 = getelementptr inbounds i8, i8* %182, i64 8
  %185 = bitcast i8* %184 to i64*
  store i64 %181, i64* %185, align 8
  %186 = getelementptr inbounds i8, i8* %182, i64 16
  %187 = bitcast i8* %186 to i32 (...)***
  %188 = getelementptr inbounds i8, i8* %182, i64 24
  %189 = bitcast i8* %188 to i32 (...)***
  %190 = getelementptr inbounds i8, i8* %182, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %191 = getelementptr inbounds i8, i8* %182, i64 56
  %192 = getelementptr inbounds i8, i8* %182, i64 72
  %193 = bitcast i8* %192 to i32*
  store i32 0, i32* %193, align 8
  %194 = getelementptr inbounds i8, i8* %182, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 56, i1 false) #13
  %195 = bitcast i8* %190 to i8**
  store i8* %188, i8** %195, align 8
  %196 = getelementptr inbounds i8, i8* %182, i64 40
  %197 = bitcast i8* %196 to i8**
  store i8* %188, i8** %197, align 8
  %198 = getelementptr inbounds i8, i8* %182, i64 48
  store i8 1, i8* %198, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %199 = bitcast %"class.std::__1::unique_ptr.40"* %27 to i8**
  store i8* %182, i8** %199, align 8
  %200 = bitcast i8* %182 to %"class.spvtools::opt::BasicBlock"*
  %201 = load i64, i64* %101, align 8
  %202 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %28 to i64*
  store i64 %201, i64* %202, align 8
  call void @_ZN8spvtools3opt10InlinePass25MoveInstsBeforeEntryBlockEPNSt3__113unordered_mapIjPNS0_11InstructionENS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjS5_EEEEEEPNS0_10BasicBlockENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorISH_Lb0EEE(%"class.spvtools::opt::InlinePass"* undef, %"class.std::__1::unordered_map"* nonnull %20, %"class.spvtools::opt::BasicBlock"* nonnull %200, %"class.spvtools::opt::InstructionList::iterator"* nonnull %28, %"class.std::__1::vector.38"* %4, %"class.std::__1::unique_ptr.40"* %5)
  br i1 %85, label %203, label %231

203:                                              ; preds = %178
  %204 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %205, align 8
  %207 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %206) #13
  %208 = icmp eq %"class.spvtools::opt::Instruction"* %207, null
  br i1 %208, label %231, label %209

209:                                              ; preds = %203
  %210 = bitcast %"class.std::__1::unique_ptr.40"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #13
  %211 = bitcast %"class.std::__1::unique_ptr.40"* %27 to i64*
  %212 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %213 = load i32, i32* %26, align 4
  %214 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass13AddGuardBlockEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS9_INS2_4pairIKjjEEEEEES8_j(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::vector.38"* %1, %"class.std::__1::unordered_map.249"* nonnull %19, %"class.spvtools::opt::BasicBlock"* %212, i32 %213)
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %29, i64 0, i32 0, i32 0, i32 0
  %216 = ptrtoint %"class.spvtools::opt::BasicBlock"* %214 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %217 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store i64 %216, i64* %211, align 8
  %218 = icmp eq %"class.spvtools::opt::BasicBlock"* %217, null
  br i1 %218, label %219, label %220

219:                                              ; preds = %209
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  br label %228

220:                                              ; preds = %209
  %221 = bitcast %"class.std::__1::unique_ptr.40"* %27 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %221, %"class.spvtools::opt::BasicBlock"* nonnull %217) #13
  %222 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %215, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %223 = icmp eq %"class.spvtools::opt::BasicBlock"* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %220
  %225 = bitcast %"class.std::__1::unique_ptr.40"* %29 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %225, %"class.spvtools::opt::BasicBlock"* nonnull %222) #13
  br label %226

226:                                              ; preds = %224, %220
  %227 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi %"class.spvtools::opt::BasicBlock"* [ %227, %226 ], [ %214, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #13
  %230 = icmp eq %"class.spvtools::opt::BasicBlock"* %229, null
  br i1 %230, label %495, label %231

231:                                              ; preds = %178, %203, %228
  %232 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %233 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %232, align 8
  %234 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 3
  %235 = load i8, i8* %234, align 4, !range !2
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %231
  %238 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %233, i32 0) #13
  br label %239

239:                                              ; preds = %231, %237
  %240 = phi i32 [ %238, %237 ], [ 0, %231 ]
  %241 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %80, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %241, i64 0, i32 11
  %243 = load i32, i32* %242, align 8
  %244 = trunc i32 %243 to i16
  %245 = icmp slt i16 %244, 0
  br i1 %245, label %261, label %246

246:                                              ; preds = %239
  %247 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %241, i64 0, i32 5
  %248 = call i8* @_Znwm(i64 240) #14
  %249 = bitcast i8* %248 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %249, %"class.std::__1::function"* dereferenceable(32) %247, %"class.spvtools::opt::IRContext"* %241) #13
  %250 = ptrtoint i8* %248 to i64
  %251 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %241, i64 0, i32 20
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %252, align 8
  %254 = bitcast %"class.std::__1::unique_ptr.480"* %251 to i64*
  store i64 %250, i64* %254, align 8
  %255 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %253, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %246
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %253) #13
  %257 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %253 to i8*
  call void @_ZdlPv(i8* %257) #14
  br label %258

258:                                              ; preds = %256, %246
  %259 = load i32, i32* %242, align 8
  %260 = or i32 %259, 32768
  store i32 %260, i32* %242, align 8
  br label %261

261:                                              ; preds = %239, %258
  %262 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %241, i64 0, i32 20, i32 0, i32 0, i32 0
  %263 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %262, align 8
  %264 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %263, i32 %240) #13
  %265 = bitcast %"class.spvtools::opt::analysis::Type"* %264 to %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)***
  %266 = load %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*** %265, align 8
  %267 = getelementptr inbounds %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)** %266, i64 6
  %268 = load %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)** %267, align 8
  %269 = call %"class.spvtools::opt::analysis::Void"* %268(%"class.spvtools::opt::analysis::Type"* %264) #13
  %270 = icmp eq %"class.spvtools::opt::analysis::Void"* %269, null
  br i1 %270, label %271, label %274

271:                                              ; preds = %261
  %272 = call i32 @_ZN8spvtools3opt10InlinePass15CreateReturnVarEPNS0_8FunctionEPNSt3__16vectorINS4_10unique_ptrINS0_11InstructionENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::Function"* %100, %"class.std::__1::vector.31"* %2)
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %495, label %274

274:                                              ; preds = %271, %261
  %275 = phi i32 [ %272, %271 ], [ 0, %261 ]
  %276 = bitcast %"class.std::__1::function.961"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %276) #13
  %277 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %30, i64 0, i32 0, i32 1, i32 0
  %278 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %30, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEPNSB_INSC_IS4_NSE_IS4_EEEENSH_ISM_EEEENS3_15InstructionList8iteratorENS3_18UptrVectorIteratorISD_Lb0EEEE3$_3S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %277, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_3FbPSH_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %278, align 8
  %279 = bitcast %"class.std::__1::function.961"* %30 to %"class.std::__1::unordered_map.249"**
  store %"class.std::__1::unordered_map.249"* %19, %"class.std::__1::unordered_map.249"** %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %30, i64 0, i32 0, i32 0, i32 1
  %281 = bitcast [8 x i8]* %280 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::InlinePass"** %281, align 8
  %282 = call zeroext i1 @_ZN8spvtools3opt8Function13WhileEachInstERKNSt3__18functionIFbPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %100, %"class.std::__1::function.961"* nonnull dereferenceable(32) %30, i1 zeroext false, i1 zeroext false) #13
  %283 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %278, align 8
  %284 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %283, i64 0, i32 1
  %285 = load void (i8*)*, void (i8*)** %284, align 8
  %286 = icmp eq void (i8*)* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %274
  %288 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %30, i64 0, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  call void %285(i8* %289) #13
  br label %290

290:                                              ; preds = %274, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #13
  %291 = bitcast %"class.std::__1::function.940"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #13
  %292 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %31, i64 0, i32 0, i32 1, i32 0
  %293 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %31, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEPNSB_INSC_IS4_NSE_IS4_EEEENSH_ISM_EEEENS3_15InstructionList8iteratorENS3_18UptrVectorIteratorISD_Lb0EEEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %292, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %293, align 8
  %294 = call i8* @_Znwm(i64 32) #14, !noalias !44
  %295 = bitcast i8* %294 to %"class.std::__1::unique_ptr.40"**
  store %"class.std::__1::unique_ptr.40"* %27, %"class.std::__1::unique_ptr.40"** %295, align 8
  %296 = getelementptr inbounds i8, i8* %294, i64 8
  %297 = bitcast i8* %296 to %"class.std::__1::unordered_map.249"**
  store %"class.std::__1::unordered_map.249"* %19, %"class.std::__1::unordered_map.249"** %297, align 8
  %298 = getelementptr inbounds i8, i8* %294, i64 16
  %299 = bitcast i8* %298 to %"class.spvtools::opt::analysis::DebugInlinedAtContext"**
  store %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %22, %"class.spvtools::opt::analysis::DebugInlinedAtContext"** %299, align 8
  %300 = getelementptr inbounds i8, i8* %294, i64 24
  %301 = bitcast i8* %300 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::InlinePass"** %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %31, i64 0, i32 0, i32 0, i32 0
  store i8* %294, i8** %302, align 8
  call void @_ZN8spvtools3opt8Function32ForEachDebugInstructionsInHeaderERKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::Function"* %100, %"class.std::__1::function.940"* nonnull dereferenceable(32) %31) #13
  %303 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %293, align 8
  %304 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %303, i64 0, i32 1
  %305 = load void (i8*)*, void (i8*)** %304, align 8
  %306 = icmp eq void (i8*)* %305, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %290
  %308 = load i8*, i8** %302, align 8
  call void %305(i8* %308) #13
  br label %309

309:                                              ; preds = %290, %307
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #13
  %310 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %311 = call zeroext i1 @_ZN8spvtools3opt10InlinePass16InlineEntryBlockERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISH_EEEENS0_18UptrVectorIteratorISH_Lb0EEEPNS0_8analysis21DebugInlinedAtContextE(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map.249"* nonnull dereferenceable(40) %19, %"class.std::__1::unique_ptr.40"* nonnull %27, %"class.std::__1::vector.38"* %126, %"class.std::__1::unique_ptr.40"* %310, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* nonnull %22)
  br i1 %311, label %312, label %495

312:                                              ; preds = %309
  %313 = bitcast %"class.std::__1::unique_ptr.40"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #13
  %314 = bitcast %"class.std::__1::unique_ptr.40"* %27 to i64*
  %315 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %316 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass17InlineBasicBlocksEPNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEERKNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS9_INS2_4pairIKjjEEEEEES8_PNS0_8analysis21DebugInlinedAtContextEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::vector.38"* %1, %"class.std::__1::unordered_map.249"* nonnull dereferenceable(40) %19, %"class.spvtools::opt::BasicBlock"* %315, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* nonnull %22, %"class.spvtools::opt::Function"* %100)
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %32, i64 0, i32 0, i32 0, i32 0
  %318 = ptrtoint %"class.spvtools::opt::BasicBlock"* %316 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  %319 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store i64 %318, i64* %314, align 8
  %320 = icmp eq %"class.spvtools::opt::BasicBlock"* %319, null
  br i1 %320, label %321, label %322

321:                                              ; preds = %312
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  br label %330

322:                                              ; preds = %312
  %323 = bitcast %"class.std::__1::unique_ptr.40"* %27 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %323, %"class.spvtools::opt::BasicBlock"* nonnull %319) #13
  %324 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %317, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  %325 = icmp eq %"class.spvtools::opt::BasicBlock"* %324, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %322
  %327 = bitcast %"class.std::__1::unique_ptr.40"* %32 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %327, %"class.spvtools::opt::BasicBlock"* nonnull %324) #13
  br label %328

328:                                              ; preds = %326, %322
  %329 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi %"class.spvtools::opt::BasicBlock"* [ %329, %328 ], [ %316, %321 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #13
  %332 = icmp eq %"class.spvtools::opt::BasicBlock"* %331, null
  br i1 %332, label %495, label %333

333:                                              ; preds = %330
  %334 = bitcast %"class.std::__1::unique_ptr.40"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #13
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %335 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %100, i64 0, i32 3, i32 0, i32 1
  %336 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %335, align 8
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %336, i64 -1, i32 0, i32 0, i32 0
  %338 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %337, align 8
  %339 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %338, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %340 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %339, align 8, !noalias !49
  %341 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10InlinePass12InlineReturnERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS2_6vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISI_EEEENS8_ISL_EEEESL_PNS0_8analysis21DebugInlinedAtContextEPNS0_8FunctionEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map.249"* nonnull dereferenceable(40) %19, %"class.std::__1::vector.38"* %1, %"class.spvtools::opt::BasicBlock"* nonnull %331, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* nonnull %22, %"class.spvtools::opt::Function"* %100, %"class.spvtools::opt::Instruction"* %340, i32 %275)
  %342 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %33, i64 0, i32 0, i32 0, i32 0
  %343 = ptrtoint %"class.spvtools::opt::BasicBlock"* %341 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %342, align 8
  %344 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store i64 %343, i64* %314, align 8
  %345 = icmp eq %"class.spvtools::opt::BasicBlock"* %344, null
  br i1 %345, label %346, label %347

346:                                              ; preds = %333
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %342, align 8
  br label %353

347:                                              ; preds = %333
  %348 = bitcast %"class.std::__1::unique_ptr.40"* %27 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %348, %"class.spvtools::opt::BasicBlock"* nonnull %344) #13
  %349 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %342, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %342, align 8
  %350 = icmp eq %"class.spvtools::opt::BasicBlock"* %349, null
  br i1 %350, label %353, label %351

351:                                              ; preds = %347
  %352 = bitcast %"class.std::__1::unique_ptr.40"* %33 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %352, %"class.spvtools::opt::BasicBlock"* nonnull %349) #13
  br label %353

353:                                              ; preds = %346, %347, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #13
  %354 = icmp eq i32 %275, 0
  br i1 %354, label %376, label %355

355:                                              ; preds = %353
  %356 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %356, i64 0, i32 4
  %358 = load i8, i8* %357, align 1, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %356, i64 0, i32 3
  %362 = load i8, i8* %361, align 4, !range !2
  %363 = zext i8 %362 to i32
  %364 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %356, i32 %363) #13
  %365 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  br label %366

366:                                              ; preds = %355, %360
  %367 = phi %"class.spvtools::opt::Instruction"* [ %365, %360 ], [ %356, %355 ]
  %368 = phi i32 [ %364, %360 ], [ 0, %355 ]
  %369 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 7, i32 0, i32 0
  %370 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %369, align 8
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 7, i32 0, i32 1
  %372 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %371, align 8
  %373 = icmp eq %"class.spvtools::opt::Instruction"* %370, %372
  %374 = select i1 %373, %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"* %370
  %375 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 8
  call void @_ZN8spvtools3opt10InlinePass7AddLoadEjjjPNSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPKNS0_11InstructionERKNS0_10DebugScopeE(%"class.spvtools::opt::InlinePass"* %0, i32 %240, i32 %368, i32 %275, %"class.std::__1::unique_ptr.40"* nonnull %27, %"class.spvtools::opt::Instruction"* %374, %"class.spvtools::opt::DebugScope"* dereferenceable(8) %375)
  br label %376

376:                                              ; preds = %353, %366
  %377 = load i64, i64* %101, align 8
  %378 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %34 to i64*
  store i64 %377, i64* %378, align 8
  %379 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %380 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %335, align 8
  %381 = icmp ne %"class.std::__1::unique_ptr.40"* %379, %380
  %382 = call zeroext i1 @_ZN8spvtools3opt10InlinePass32MoveCallerInstsAfterFunctionCallEPNSt3__113unordered_mapIjPNS0_11InstructionENS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjS5_EEEEEEPNS3_IjjS7_S9_NSA_INSB_ISC_jEEEEEEPNS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteISM_EEEENS0_15InstructionList8iteratorEb(%"class.spvtools::opt::InlinePass"* %0, %"class.std::__1::unordered_map"* nonnull %20, %"class.std::__1::unordered_map.249"* nonnull %21, %"class.std::__1::unique_ptr.40"* nonnull %27, %"class.spvtools::opt::InstructionList::iterator"* nonnull %34, i1 zeroext %381)
  br i1 %382, label %383, label %495

383:                                              ; preds = %376
  %384 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %385 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %384, align 8
  %386 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %387 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %386, align 8
  %388 = icmp ult %"class.std::__1::unique_ptr.40"* %385, %387
  br i1 %388, label %389, label %395

389:                                              ; preds = %383
  %390 = load i64, i64* %314, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %391 = bitcast %"class.std::__1::unique_ptr.40"* %385 to i64*
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %385, i64 1
  %393 = ptrtoint %"class.std::__1::unique_ptr.40"* %392 to i64
  %394 = bitcast %"class.std::__1::unique_ptr.40"** %384 to i64*
  store i64 %393, i64* %394, align 8
  br label %396

395:                                              ; preds = %383
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %1, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %27) #13
  br label %396

396:                                              ; preds = %389, %395
  br i1 %85, label %397, label %459

397:                                              ; preds = %396
  %398 = bitcast %"class.std::__1::unique_ptr.40"** %384 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = bitcast %"class.std::__1::vector.38"* %1 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = sub i64 %399, %401
  %403 = ashr exact i64 %402, 3
  %404 = icmp ugt i64 %403, 1
  br i1 %404, label %405, label %459

405:                                              ; preds = %397
  %406 = inttoptr i64 %399 to %"class.std::__1::unique_ptr.40"*
  %407 = inttoptr i64 %401 to %"class.std::__1::unique_ptr.40"*
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %406, i64 -1, i32 0, i32 0, i32 0
  %409 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %408, align 8
  %410 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %409, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %411 = bitcast %"class.spvtools::opt::Instruction"** %410 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %412 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %411, align 8, !noalias !52
  %413 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %412, i64 0, i32 2
  %414 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %413, align 8
  %415 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %415) #13
  %416 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  %417 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %80, align 8
  %418 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %414, %"class.spvtools::opt::IRContext"* %417) #13
  %419 = ptrtoint %"class.spvtools::opt::Instruction"* %418 to i64
  %420 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %419, i64* %420, align 8
  %421 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %421) #13
  %422 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %407, i64 0, i32 0, i32 0, i32 0
  %423 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %422, align 8
  %424 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %423, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %425 = bitcast %"class.spvtools::opt::Instruction"** %424 to i64*
  %426 = load i64, i64* %425, align 8, !noalias !55
  %427 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %8 to i64*
  store i64 %426, i64* %427, align 8, !alias.scope !55
  %428 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %428) #13
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %9, %"class.spvtools::opt::InstructionList::iterator"* nonnull %8, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %428) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %421) #13
  %429 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %414, i64 0, i32 0, i32 2
  %430 = bitcast %"class.spvtools::opt::Instruction"** %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %414, i64 0, i32 0, i32 1
  %433 = bitcast %"class.spvtools::opt::Instruction"** %432 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %434 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %433, align 8
  %435 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %434, i64 0, i32 2
  %436 = bitcast %"class.spvtools::opt::Instruction"** %435 to i64*
  store i64 %431, i64* %436, align 8
  %437 = bitcast %"class.spvtools::opt::Instruction"** %432 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = bitcast %"class.spvtools::opt::Instruction"** %429 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %440 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %439, align 8
  %441 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %440, i64 0, i32 1
  %442 = bitcast %"class.spvtools::opt::Instruction"** %441 to i64*
  store i64 %438, i64* %442, align 8
  %443 = bitcast %"class.spvtools::opt::Instruction"** %432 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 16, i1 false) #13
  %444 = icmp eq %"class.spvtools::opt::Instruction"* %414, null
  br i1 %444, label %450, label %445

445:                                              ; preds = %405
  %446 = bitcast %"class.spvtools::opt::Instruction"* %414 to void (%"class.spvtools::opt::Instruction"*)***
  %447 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %446, align 8
  %448 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %447, i64 1
  %449 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %448, align 8
  call void %449(%"class.spvtools::opt::Instruction"* nonnull %414) #13
  br label %450

450:                                              ; preds = %445, %405
  %451 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %416, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %416, align 8
  %452 = icmp eq %"class.spvtools::opt::Instruction"* %451, null
  br i1 %452, label %458, label %453

453:                                              ; preds = %450
  %454 = bitcast %"class.spvtools::opt::Instruction"* %451 to void (%"class.spvtools::opt::Instruction"*)***
  %455 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %454, align 8
  %456 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %455, i64 1
  %457 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %456, align 8
  call void %457(%"class.spvtools::opt::Instruction"* nonnull %451) #13
  br label %458

458:                                              ; preds = %450, %453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #13
  br label %459

459:                                              ; preds = %458, %397, %396
  %460 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %461 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %460, align 8
  %462 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %384, align 8
  %463 = icmp eq %"class.std::__1::unique_ptr.40"* %461, %462
  br i1 %463, label %470, label %464

464:                                              ; preds = %459
  %465 = bitcast i32* %35 to i8*
  %466 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0
  %467 = bitcast %"class.std::__1::tuple.1073"* %12 to i8*
  %468 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %12, i64 0, i32 0, i32 0, i32 0
  %469 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %13, i64 0, i32 0
  br label %473

470:                                              ; preds = %487, %459
  %471 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %80, align 8
  %472 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %471, %"class.spvtools::opt::Instruction"* %472) #13
  br label %495

473:                                              ; preds = %464, %487
  %474 = phi %"class.std::__1::unique_ptr.40"* [ %461, %464 ], [ %493, %487 ]
  %475 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %474, i64 0, i32 0, i32 0, i32 0
  %476 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %475, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %465) #13
  %477 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %476, i64 0, i32 1, i32 0, i32 0, i32 0
  %478 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %477, align 8
  %479 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %478, i64 0, i32 4
  %480 = load i8, i8* %479, align 1, !range !2
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %487, label %482

482:                                              ; preds = %473
  %483 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %478, i64 0, i32 3
  %484 = load i8, i8* %483, align 4, !range !2
  %485 = zext i8 %484 to i32
  %486 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %478, i32 %485) #13
  br label %487

487:                                              ; preds = %473, %482
  %488 = phi i32 [ %486, %482 ], [ 0, %473 ]
  store i32 %488, i32* %35, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %467) #13
  store i32* %35, i32** %468, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %469) #13
  %489 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %466, i32* nonnull dereferenceable(4) %35, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %13) #13
  %490 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %489, 0
  %491 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %490, i64 3
  %492 = bitcast %"struct.std::__1::__hash_node_base.333"* %491 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %469) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %467) #13
  store %"class.spvtools::opt::BasicBlock"* %476, %"class.spvtools::opt::BasicBlock"** %492, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %465) #13
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %474, i64 1
  %494 = icmp eq %"class.std::__1::unique_ptr.40"* %493, %462
  br i1 %494, label %470, label %473

495:                                              ; preds = %470, %271, %309, %330, %376, %228
  %496 = phi i1 [ false, %228 ], [ true, %470 ], [ false, %271 ], [ false, %309 ], [ false, %330 ], [ false, %376 ]
  %497 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %498 = icmp eq %"class.spvtools::opt::BasicBlock"* %497, null
  br i1 %498, label %501, label %499

499:                                              ; preds = %495
  %500 = bitcast %"class.std::__1::unique_ptr.40"* %27 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %500, %"class.spvtools::opt::BasicBlock"* nonnull %497) #13
  br label %501

501:                                              ; preds = %495, %499
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #13
  br label %502

502:                                              ; preds = %122, %501
  %503 = phi i1 [ %496, %501 ], [ false, %122 ]
  %504 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %87, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %505 = icmp eq %"class.spvtools::opt::BasicBlock"* %504, null
  br i1 %505, label %508, label %506

506:                                              ; preds = %502
  %507 = bitcast %"class.std::__1::unique_ptr.40"* %23 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %507, %"class.spvtools::opt::BasicBlock"* nonnull %504) #13
  br label %508

508:                                              ; preds = %502, %506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  %509 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %60, align 8
  %510 = icmp eq %"struct.std::__1::__hash_node_base.254"* %509, null
  br i1 %510, label %517, label %511

511:                                              ; preds = %508, %511
  %512 = phi %"struct.std::__1::__hash_node_base.254"* [ %514, %511 ], [ %509, %508 ]
  %513 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %512, i64 0, i32 0
  %514 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %513, align 8
  %515 = bitcast %"struct.std::__1::__hash_node_base.254"* %512 to i8*
  call void @_ZdlPv(i8* %515) #14
  %516 = icmp eq %"struct.std::__1::__hash_node_base.254"* %514, null
  br i1 %516, label %517, label %511

517:                                              ; preds = %511, %508
  %518 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %59, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %59, align 8
  %519 = icmp eq %"struct.std::__1::__hash_node_base.254"** %518, null
  br i1 %519, label %522, label %520

520:                                              ; preds = %517
  %521 = bitcast %"struct.std::__1::__hash_node_base.254"** %518 to i8*
  call void @_ZdlPv(i8* %521) #14
  br label %522

522:                                              ; preds = %517, %520
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57) #13
  %523 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, align 8
  %524 = icmp eq %"struct.std::__1::__hash_node_base.254"* %523, null
  br i1 %524, label %531, label %525

525:                                              ; preds = %522, %525
  %526 = phi %"struct.std::__1::__hash_node_base.254"* [ %528, %525 ], [ %523, %522 ]
  %527 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %526, i64 0, i32 0
  %528 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %527, align 8
  %529 = bitcast %"struct.std::__1::__hash_node_base.254"* %526 to i8*
  call void @_ZdlPv(i8* %529) #14
  %530 = icmp eq %"struct.std::__1::__hash_node_base.254"* %528, null
  br i1 %530, label %531, label %525

531:                                              ; preds = %525, %522
  %532 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %51, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %51, align 8
  %533 = icmp eq %"struct.std::__1::__hash_node_base.254"** %532, null
  br i1 %533, label %536, label %534

534:                                              ; preds = %531
  %535 = bitcast %"struct.std::__1::__hash_node_base.254"** %532 to i8*
  call void @_ZdlPv(i8* %535) #14
  br label %536

536:                                              ; preds = %531, %534
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #13
  %537 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %538 = icmp eq %"struct.std::__1::__hash_node_base"* %537, null
  br i1 %538, label %545, label %539

539:                                              ; preds = %536, %539
  %540 = phi %"struct.std::__1::__hash_node_base"* [ %542, %539 ], [ %537, %536 ]
  %541 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %540, i64 0, i32 0
  %542 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %541, align 8
  %543 = bitcast %"struct.std::__1::__hash_node_base"* %540 to i8*
  call void @_ZdlPv(i8* %543) #14
  %544 = icmp eq %"struct.std::__1::__hash_node_base"* %542, null
  br i1 %544, label %545, label %539

545:                                              ; preds = %539, %536
  %546 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %547 = icmp eq %"struct.std::__1::__hash_node_base"** %546, null
  br i1 %547, label %550, label %548

548:                                              ; preds = %545
  %549 = bitcast %"struct.std::__1::__hash_node_base"** %546 to i8*
  call void @_ZdlPv(i8* %549) #14
  br label %550

550:                                              ; preds = %545, %548
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #13
  %551 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %38, align 8
  %552 = icmp eq %"struct.std::__1::__hash_node_base.254"* %551, null
  br i1 %552, label %559, label %553

553:                                              ; preds = %550, %553
  %554 = phi %"struct.std::__1::__hash_node_base.254"* [ %556, %553 ], [ %551, %550 ]
  %555 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %554, i64 0, i32 0
  %556 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %555, align 8
  %557 = bitcast %"struct.std::__1::__hash_node_base.254"* %554 to i8*
  call void @_ZdlPv(i8* %557) #14
  %558 = icmp eq %"struct.std::__1::__hash_node_base.254"* %556, null
  br i1 %558, label %559, label %553

559:                                              ; preds = %553, %550
  %560 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %37, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %37, align 8
  %561 = icmp eq %"struct.std::__1::__hash_node_base.254"** %560, null
  br i1 %561, label %564, label %562

562:                                              ; preds = %559
  %563 = bitcast %"struct.std::__1::__hash_node_base.254"** %560 to i8*
  call void @_ZdlPv(i8* %563) #14
  br label %564

564:                                              ; preds = %559, %562
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #13
  ret i1 %503
}

declare void @_ZN8spvtools3opt9IRContext18InvalidateAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN8spvtools3opt8Function13WhileEachInstERKNSt3__18functionIFbPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.961"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8Function32ForEachDebugInstructionsInHeaderERKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::Function"*, %"class.std::__1::function.940"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass23IsInlinableFunctionCallEPKNS0_11InstructionE(%"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1051", align 8
  %4 = alloca %"class.std::__1::tuple.1054", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 57
  br i1 %11, label %12, label %119

12:                                               ; preds = %2
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #13
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 2) #13
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.1042"**
  %17 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node.1042"* %17, null
  br i1 %18, label %117, label %19

19:                                               ; preds = %12, %19
  %20 = phi %"class.std::__1::__tree_end_node"* [ %30, %19 ], [ %15, %12 ]
  %21 = phi %"class.std::__1::__tree_node.1042"* [ %31, %19 ], [ %17, %12 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp ult i32 %23, %14
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %21, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::__tree_node_base"** %25 to %"class.std::__1::__tree_node.1042"**
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %21, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node.1042"* %21 to %"class.std::__1::__tree_node.1042"**
  %29 = select i1 %24, %"class.std::__1::__tree_node.1042"** %26, %"class.std::__1::__tree_node.1042"** %28
  %30 = select i1 %24, %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"* %27
  %31 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %29, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.1042"* %31, null
  br i1 %32, label %33, label %19

33:                                               ; preds = %19
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %30, %15
  br i1 %34, label %117, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node.1042"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %14, %38
  br i1 %39, label %117, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node.1042"**
  %43 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.1042"* %43, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %40, %45
  %46 = phi %"class.std::__1::__tree_end_node"* [ %56, %45 ], [ %41, %40 ]
  %47 = phi %"class.std::__1::__tree_node.1042"* [ %57, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %49, %14
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %47, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node.1042"**
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %47, i64 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::__tree_node.1042"* %47 to %"class.std::__1::__tree_node.1042"**
  %55 = select i1 %50, %"class.std::__1::__tree_node.1042"** %52, %"class.std::__1::__tree_node.1042"** %54
  %56 = select i1 %50, %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"* %53
  %57 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %55, align 8
  %58 = icmp eq %"class.std::__1::__tree_node.1042"* %57, null
  br i1 %58, label %59, label %45

59:                                               ; preds = %45
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %56, %41
  br i1 %60, label %117, label %61

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_node.1042"*
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp ult i32 %14, %64
  br i1 %65, label %117, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #13
  %71 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0
  %73 = bitcast %"class.std::__1::tuple.1051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #13
  %74 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %75) #13
  %76 = call { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"* %72, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %4) #13
  %77 = extractvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %77, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.206"* %78 to %"class.spvtools::opt::Function"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %75) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #13
  %80 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %79, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, align 8
  call void @_ZNK8spvtools3opt11Instruction11PrettyPrintEj(%"class.std::__1::basic_string"* nonnull sret %8, %"class.spvtools::opt::Instruction"* %82, i32 0) #13
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %8, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #13, !noalias !58
  %84 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %84, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #13, !noalias !58
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.2, i64 0, i64 0)) #13, !noalias !61
  %86 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %86, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #13, !noalias !61
  %87 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %66
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %66, %91
  %95 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #13
  %103 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = load i8*, i8** %68, align 8
  %108 = select i1 %106, i8* %107, i8* %67
  %109 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %110 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void %110(%"union.std::__1::__function::__policy_storage"* %111, i32 3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.4, i8* %108) #13
  %112 = load i8, i8* %104, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %102
  %115 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %102, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  br label %117

117:                                              ; preds = %61, %59, %40, %35, %33, %12, %116
  %118 = phi i1 [ false, %116 ], [ false, %12 ], [ false, %33 ], [ false, %35 ], [ true, %40 ], [ true, %59 ], [ true, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #13
  br label %119

119:                                              ; preds = %2, %117
  %120 = phi i1 [ %118, %117 ], [ false, %2 ]
  ret i1 %120
}

declare void @_ZNK8spvtools3opt11Instruction11PrettyPrintEj(%"class.std::__1::basic_string"* sret, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE(%"class.spvtools::opt::InlinePass"*, %"class.std::__1::vector.38"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::function.974", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %3, align 4
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = zext i8 %20 to i32
  %22 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %14, i32 %21) #13
  br label %23

23:                                               ; preds = %2, %18
  %24 = phi i32 [ %22, %18 ], [ 0, %2 ]
  store i32 %24, i32* %3, align 4
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  store i32 -1431655766, i32* %4, align 4
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 -1, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 4
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = zext i8 %35 to i32
  %37 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %29, i32 %36) #13
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  br label %39

39:                                               ; preds = %23, %33
  %40 = phi %"class.spvtools::opt::BasicBlock"* [ %38, %33 ], [ %27, %23 ]
  %41 = phi i32 [ %37, %33 ], [ 0, %23 ]
  store i32 %41, i32* %4, align 4
  %42 = bitcast %"class.std::__1::function.974"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::function.974", %"class.std::__1::function.974"* %5, i64 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.974", %"class.std::__1::function.974"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS7_10BasicBlockENS_14default_deleteISB_EEEENS_9allocatorISE_EEEEE3$_5S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %43, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %44, align 8
  %45 = tail call i8* @_Znwm(i64 24) #14, !noalias !64
  %46 = bitcast i8* %45 to i32**
  store i32* %3, i32** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i32**
  store i32* %4, i32** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::InlinePass"** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::function.974", %"class.std::__1::function.974"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %51, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %40, %"class.std::__1::function.974"* nonnull dereferenceable(32) %5) #13
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %44, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %39
  %57 = load i8*, i8** %51, align 8
  call void %54(i8* %57) #13
  br label %58

58:                                               ; preds = %39, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.974"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass17HasNoReturnInLoopEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* nocapture readonly, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::FeatureManager"* %7, null
  br i1 %8, label %9, label %47

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 1
  %11 = tail call i8* @_Znwm(i64 48) #14
  %12 = bitcast i8* %11 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %10, %"class.spvtools::AssemblyGrammar"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 40, i1 false) #13
  %14 = ptrtoint i8* %11 to i64
  %15 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.152"* %5 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %"class.spvtools::opt::FeatureManager"* %15, null
  %18 = bitcast i8* %11 to %"class.spvtools::opt::FeatureManager"*
  br i1 %17, label %42, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %20, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %20, align 8
  %22 = icmp eq %"class.std::__1::set.158"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.1042"**
  %27 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %26, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %24, %"class.std::__1::__tree_node.1042"* %27) #13
  %28 = bitcast %"class.std::__1::set.158"* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %30, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %30, align 8
  %32 = icmp eq %"class.std::__1::set.158"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node.1042"**
  %37 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %36, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %34, %"class.std::__1::__tree_node.1042"* %37) #13
  %38 = bitcast %"class.std::__1::set.158"* %31 to i8*
  tail call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %33, %29
  %40 = bitcast %"class.spvtools::opt::FeatureManager"* %15 to i8*
  tail call void @_ZdlPv(i8* %40) #14
  %41 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi %"class.spvtools::opt::FeatureManager"* [ %41, %39 ], [ %18, %9 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %44, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %43, %"class.spvtools::opt::Module"* %45) #13
  %46 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %47

47:                                               ; preds = %2, %42
  %48 = phi %"class.spvtools::opt::FeatureManager"* [ %7, %2 ], [ %46, %42 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %48, i64 0, i32 2, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 2
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %151, label %53

53:                                               ; preds = %47
  %54 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 2048
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  tail call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %54) #13
  br label %60

60:                                               ; preds = %53, %59
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 27, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.40"* %64, %66
  br i1 %67, label %151, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %68, %148
  %72 = phi %"class.std::__1::unique_ptr.40"* [ %64, %68 ], [ %149, %148 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %74, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = tail call zeroext i1 @_Z17spvOpcodeIsReturn6SpvOp_(i32 %78) #13
  br i1 %79, label %80, label %148

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %82, i64 0, i32 4
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %82, i64 0, i32 3
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = zext i8 %88 to i32
  %90 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %82, i32 %89) #13
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi i32 [ %90, %86 ], [ 0, %80 ]
  %93 = zext i32 %92 to i64
  %94 = load i64, i64* %69, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %148, label %96

96:                                               ; preds = %91
  %97 = tail call i64 @llvm.ctpop.i64(i64 %94) #13, !range !24
  %98 = icmp ugt i64 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = add i64 %94, 4294967295
  %101 = and i64 %100, %93
  br label %106

102:                                              ; preds = %96
  %103 = icmp ugt i64 %94, %93
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %93, %94
  br label %106

106:                                              ; preds = %104, %102, %99
  %107 = phi i64 [ %101, %99 ], [ %105, %104 ], [ %93, %102 ]
  %108 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %70, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %108, i64 %107
  %110 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.881"* %110, null
  br i1 %111, label %148, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %110, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.881"* %114, null
  br i1 %115, label %148, label %116

116:                                              ; preds = %112
  %117 = add i64 %94, -1
  br label %118

118:                                              ; preds = %139, %116
  %119 = phi %"struct.std::__1::__hash_node_base.881"* [ %114, %116 ], [ %141, %139 ]
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %119, i64 1
  %121 = bitcast %"struct.std::__1::__hash_node_base.881"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %122, %93
  br i1 %123, label %134, label %124

124:                                              ; preds = %118
  br i1 %98, label %127, label %125

125:                                              ; preds = %124
  %126 = and i64 %122, %117
  br label %131

127:                                              ; preds = %124
  %128 = icmp ult i64 %122, %94
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %122, %94
  br label %131

131:                                              ; preds = %129, %127, %125
  %132 = phi i64 [ %126, %125 ], [ %130, %129 ], [ %122, %127 ]
  %133 = icmp eq i64 %132, %107
  br i1 %133, label %139, label %148

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %119, i64 2
  %136 = bitcast %"struct.std::__1::__hash_node_base.881"* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, %92
  br i1 %138, label %143, label %139

139:                                              ; preds = %134, %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %119, i64 0, i32 0
  %141 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.881"* %141, null
  br i1 %142, label %148, label %118

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %119, i64 3
  %145 = bitcast %"struct.std::__1::__hash_node_base.881"* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %139, %131, %112, %91, %106, %71, %143
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %72, i64 1
  %150 = icmp eq %"class.std::__1::unique_ptr.40"* %149, %66
  br i1 %150, label %151, label %71

151:                                              ; preds = %148, %143, %60, %47
  %152 = phi i1 [ false, %47 ], [ true, %60 ], [ true, %148 ], [ false, %143 ]
  ret i1 %152
}

declare zeroext i1 @_Z17spvOpcodeIsReturn6SpvOp_(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass14AnalyzeReturnsEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN8spvtools3opt10InlinePass17HasNoReturnInLoopEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::Function"* %1)
  br i1 %3, label %4, label %82

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #13
  br label %16

16:                                               ; preds = %4, %11
  %17 = phi i32 [ %15, %11 ], [ 0, %4 ]
  %18 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node.1042"**
  %20 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.1042"* %20, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %46, %22
  %25 = phi %"class.std::__1::__tree_node.1042"* [ %49, %46 ], [ %20, %22 ]
  %26 = phi %"class.std::__1::__tree_node_base"** [ %48, %46 ], [ %23, %22 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %17, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 0, i32 0
  br label %52

36:                                               ; preds = %24
  %37 = icmp ult i32 %28, %17
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 0, i32 1
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %25, i64 0, i32 0, i32 0
  br label %52

46:                                               ; preds = %38, %30
  %47 = phi %"class.std::__1::__tree_node_base"* [ %32, %30 ], [ %40, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %31, %30 ], [ %39, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node.1042"*
  br label %24

50:                                               ; preds = %16
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  br label %52

52:                                               ; preds = %50, %44, %42, %34
  %53 = phi %"class.std::__1::__tree_end_node"* [ %18, %50 ], [ %35, %34 ], [ %43, %42 ], [ %45, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %31, %34 ], [ %39, %42 ], [ %26, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node.1042"**
  %56 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node.1042"* %56, null
  br i1 %57, label %58, label %82

58:                                               ; preds = %52
  %59 = tail call i8* @_Znwm(i64 32) #14, !noalias !69
  %60 = getelementptr inbounds i8, i8* %59, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 %17, i32* %61, align 4, !noalias !69
  %62 = bitcast i8* %59 to %"class.std::__1::__tree_node_base"*
  %63 = getelementptr inbounds i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %64, align 8
  %65 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8**
  store i8* %59, i8** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %5, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %58
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %69 to i64
  %73 = bitcast %"class.std::__1::set.158"* %5 to i64*
  store i64 %72, i64* %73, align 8
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  br label %75

75:                                               ; preds = %71, %58
  %76 = phi %"class.std::__1::__tree_node_base"* [ %62, %58 ], [ %74, %71 ]
  %77 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %78, %"class.std::__1::__tree_node_base"* %76) #13
  %79 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %75, %52, %2
  %83 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %84 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %86 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %85, align 8
  %87 = icmp eq %"class.std::__1::unique_ptr.40"* %84, %86
  br i1 %87, label %183, label %88

88:                                               ; preds = %82, %180
  %89 = phi %"class.std::__1::unique_ptr.40"* [ %181, %180 ], [ %84, %82 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %91, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %93 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = tail call zeroext i1 @_Z17spvOpcodeIsReturn6SpvOp_(i32 %95) #13
  br i1 %96, label %97, label %180

97:                                               ; preds = %88
  %98 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %85, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 -1, i32 0, i32 0, i32 0
  %100 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %101 = icmp eq %"class.spvtools::opt::BasicBlock"* %91, %100
  br i1 %101, label %180, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4
  %104 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 4
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 3
  %111 = load i8, i8* %110, align 4, !range !2
  %112 = zext i8 %111 to i32
  %113 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %105, i32 %112) #13
  br label %114

114:                                              ; preds = %102, %109
  %115 = phi i32 [ %113, %109 ], [ 0, %102 ]
  %116 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.std::__1::__tree_node.1042"**
  %118 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node.1042"* %118, null
  br i1 %119, label %148, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %122

122:                                              ; preds = %144, %120
  %123 = phi %"class.std::__1::__tree_node.1042"* [ %147, %144 ], [ %118, %120 ]
  %124 = phi %"class.std::__1::__tree_node_base"** [ %146, %144 ], [ %121, %120 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %115, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %132, label %144

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 0, i32 0
  br label %150

134:                                              ; preds = %122
  %135 = icmp ult i32 %126, %115
  br i1 %135, label %136, label %142

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 0, i32 1
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 0, i32 0
  br label %150

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %123, i64 0, i32 0, i32 0
  br label %150

144:                                              ; preds = %136, %128
  %145 = phi %"class.std::__1::__tree_node_base"* [ %130, %128 ], [ %138, %136 ]
  %146 = phi %"class.std::__1::__tree_node_base"** [ %129, %128 ], [ %137, %136 ]
  %147 = bitcast %"class.std::__1::__tree_node_base"* %145 to %"class.std::__1::__tree_node.1042"*
  br label %122

148:                                              ; preds = %114
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  br label %150

150:                                              ; preds = %148, %142, %140, %132
  %151 = phi %"class.std::__1::__tree_end_node"* [ %116, %148 ], [ %133, %132 ], [ %141, %140 ], [ %143, %142 ]
  %152 = phi %"class.std::__1::__tree_node_base"** [ %149, %148 ], [ %129, %132 ], [ %137, %140 ], [ %124, %142 ]
  %153 = bitcast %"class.std::__1::__tree_node_base"** %152 to %"class.std::__1::__tree_node.1042"**
  %154 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node.1042"* %154, null
  br i1 %155, label %156, label %183

156:                                              ; preds = %150
  %157 = tail call i8* @_Znwm(i64 32) #14, !noalias !72
  %158 = getelementptr inbounds i8, i8* %157, i64 28
  %159 = bitcast i8* %158 to i32*
  store i32 %115, i32* %159, align 4, !noalias !72
  %160 = bitcast i8* %157 to %"class.std::__1::__tree_node_base"*
  %161 = getelementptr inbounds i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %151, %"class.std::__1::__tree_end_node"** %162, align 8
  %163 = bitcast %"class.std::__1::__tree_node_base"** %152 to i8**
  store i8* %157, i8** %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %103, i64 0, i32 0, i32 0
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %156
  %170 = ptrtoint %"class.std::__1::__tree_node_base"* %167 to i64
  %171 = bitcast %"class.std::__1::set.158"* %103 to i64*
  store i64 %170, i64* %171, align 8
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  br label %173

173:                                              ; preds = %169, %156
  %174 = phi %"class.std::__1::__tree_node_base"* [ %160, %156 ], [ %172, %169 ]
  %175 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %176, %"class.std::__1::__tree_node_base"* %174) #13
  %177 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %178, 1
  store i64 %179, i64* %177, align 8
  br label %183

180:                                              ; preds = %97, %88
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 1
  %182 = icmp eq %"class.std::__1::unique_ptr.40"* %181, %86
  br i1 %182, label %183, label %88

183:                                              ; preds = %180, %82, %150, %173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10InlinePass19IsInlinableFunctionEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.961", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.40"* %5, %7
  br i1 %8, label %142, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, i32 1, i32 2
  %19 = xor i1 %17, true
  %20 = zext i1 %19 to i32
  %21 = select i1 %14, i32 %20, i32 %18
  %22 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %11, i32 %21) #13
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %142

25:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt10InlinePass14AnalyzeReturnsEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::Function"* %1)
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = zext i8 %32 to i32
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %26, i32 %33) #13
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi i32 [ %34, %30 ], [ 0, %25 ]
  %37 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node.1042"**
  %39 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node.1042"* %39, null
  br i1 %40, label %142, label %41

41:                                               ; preds = %35, %41
  %42 = phi %"class.std::__1::__tree_end_node"* [ %52, %41 ], [ %37, %35 ]
  %43 = phi %"class.std::__1::__tree_node.1042"* [ %53, %41 ], [ %39, %35 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, %36
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %43, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node.1042"**
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %43, i64 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_node.1042"* %43 to %"class.std::__1::__tree_node.1042"**
  %51 = select i1 %46, %"class.std::__1::__tree_node.1042"** %48, %"class.std::__1::__tree_node.1042"** %50
  %52 = select i1 %46, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"* %49
  %53 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %51, align 8
  %54 = icmp eq %"class.std::__1::__tree_node.1042"* %53, null
  br i1 %54, label %55, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %52, %37
  br i1 %56, label %142, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node.1042"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %36, %60
  br i1 %61, label %142, label %62

62:                                               ; preds = %57
  %63 = tail call zeroext i1 @_ZNK8spvtools3opt8Function11IsRecursiveEv(%"class.spvtools::opt::Function"* %1) #13
  br i1 %63, label %142, label %64

64:                                               ; preds = %62
  %65 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 4
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 3
  %71 = load i8, i8* %70, align 4, !range !2
  %72 = zext i8 %71 to i32
  %73 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %65, i32 %72) #13
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i32 [ %73, %69 ], [ 0, %64 ]
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %141, label %80

80:                                               ; preds = %74
  %81 = tail call i64 @llvm.ctpop.i64(i64 %78) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = add i64 %78, 4294967295
  %85 = and i64 %84, %76
  br label %90

86:                                               ; preds = %80
  %87 = icmp ugt i64 %78, %76
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = urem i64 %76, %78
  br label %90

90:                                               ; preds = %88, %86, %83
  %91 = phi i64 [ %85, %83 ], [ %89, %88 ], [ %76, %86 ]
  %92 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %93, i64 %91
  %95 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.915"* %95, null
  br i1 %96, label %141, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %95, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.915"* %99, null
  br i1 %100, label %141, label %101

101:                                              ; preds = %97
  %102 = add i64 %78, -1
  br label %103

103:                                              ; preds = %124, %101
  %104 = phi %"struct.std::__1::__hash_node_base.915"* [ %99, %101 ], [ %126, %124 ]
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %104, i64 1
  %106 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %76
  br i1 %108, label %119, label %109

109:                                              ; preds = %103
  br i1 %82, label %112, label %110

110:                                              ; preds = %109
  %111 = and i64 %107, %102
  br label %116

112:                                              ; preds = %109
  %113 = icmp ult i64 %107, %78
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %107, %78
  br label %116

116:                                              ; preds = %114, %112, %110
  %117 = phi i64 [ %111, %110 ], [ %115, %114 ], [ %107, %112 ]
  %118 = icmp eq i64 %117, %91
  br i1 %118, label %124, label %141

119:                                              ; preds = %103
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %104, i64 2
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"* %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, %75
  br i1 %123, label %128, label %124

124:                                              ; preds = %119, %116
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %104, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.915"* %126, null
  br i1 %127, label %141, label %103

128:                                              ; preds = %119
  %129 = bitcast %"class.std::__1::function.961"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #13
  %130 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10InlinePass33ContainsKillOrTerminateInvocationEPNS3_8FunctionEE3$_6S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %130, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10InlinePass33ContainsKillOrTerminateInvocationEPNS5_8FunctionEE3$_6FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %131, align 8
  %132 = call zeroext i1 @_ZN8spvtools3opt8Function13WhileEachInstERKNSt3__18functionIFbPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.961"* nonnull dereferenceable(32) %3, i1 zeroext false, i1 zeroext false) #13
  %133 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %131, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %133, i64 0, i32 1
  %135 = load void (i8*)*, void (i8*)** %134, align 8
  %136 = icmp eq void (i8*)* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void %135(i8* %139) #13
  br label %140

140:                                              ; preds = %128, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #13
  br i1 %132, label %141, label %142

141:                                              ; preds = %116, %124, %140, %97, %74, %90
  br label %142

142:                                              ; preds = %140, %57, %55, %35, %141, %62, %9, %2
  %143 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %62 ], [ true, %141 ], [ false, %140 ], [ false, %35 ], [ false, %55 ], [ false, %57 ]
  ret i1 %143
}

declare zeroext i1 @_ZNK8spvtools3opt8Function11IsRecursiveEv(%"class.spvtools::opt::Function"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt10InlinePass33ContainsKillOrTerminateInvocationEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* nocapture readnone, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.961", align 8
  %4 = bitcast %"class.std::__1::function.961"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10InlinePass33ContainsKillOrTerminateInvocationEPNS3_8FunctionEE3$_6S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10InlinePass33ContainsKillOrTerminateInvocationEPNS5_8FunctionEE3$_6FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %6, align 8
  %7 = call zeroext i1 @_ZN8spvtools3opt8Function13WhileEachInstERKNSt3__18functionIFbPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.961"* nonnull dereferenceable(32) %3, i1 zeroext false, i1 zeroext false) #13
  %8 = xor i1 %7, true
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 1
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  %12 = icmp eq void (i8*)* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void %11(i8* %15) #13
  br label %16

16:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePass16InitializeInlineEv(%"class.spvtools::opt::InlinePass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.1073", align 8
  %3 = alloca %"class.std::__1::tuple.1054", align 1
  %4 = alloca %"class.std::__1::tuple.1073", align 8
  %5 = alloca %"class.std::__1::tuple.1054", align 1
  %6 = alloca %"class.std::__1::unordered_set.910", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 7
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.206"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"struct.std::__1::__hash_node_base.206"* [ %21, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %20, align 8
  %22 = bitcast %"struct.std::__1::__hash_node_base.206"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  %23 = icmp eq %"struct.std::__1::__hash_node_base.206"* %21, null
  br i1 %23, label %24, label %18

24:                                               ; preds = %18, %14
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %15, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.201"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = add i64 %26, -1
  %31 = and i64 %26, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = sub i64 %26, %31
  br label %47

35:                                               ; preds = %47, %28
  %36 = phi i64 [ 0, %28 ], [ %61, %47 ]
  %37 = icmp eq i64 %31, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %35, %38
  %39 = phi i64 [ %43, %38 ], [ %36, %35 ]
  %40 = phi i64 [ %44, %38 ], [ %31, %35 ]
  %41 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %29, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %41, i64 %39
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %42, align 8
  %43 = add nuw i64 %39, 1
  %44 = add i64 %40, -1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %38, !llvm.loop !75

46:                                               ; preds = %35, %38, %24
  store i64 0, i64* %11, align 8
  br label %64

47:                                               ; preds = %47, %33
  %48 = phi i64 [ 0, %33 ], [ %61, %47 ]
  %49 = phi i64 [ %34, %33 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %29, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %51, align 8
  %52 = or i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %29, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %54, align 8
  %55 = or i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %29, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %57, align 8
  %58 = or i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %29, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %35, label %47

64:                                               ; preds = %1, %46
  %65 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3
  %66 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %119, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.333"* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69, %73
  %74 = phi %"struct.std::__1::__hash_node_base.333"* [ %76, %73 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %75, align 8
  %77 = bitcast %"struct.std::__1::__hash_node_base.333"* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  %78 = icmp eq %"struct.std::__1::__hash_node_base.333"* %76, null
  br i1 %78, label %79, label %73

79:                                               ; preds = %73, %69
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %70, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %101, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = add i64 %81, -1
  %86 = and i64 %81, 3
  %87 = icmp ult i64 %85, 3
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = sub i64 %81, %86
  br label %102

90:                                               ; preds = %102, %83
  %91 = phi i64 [ 0, %83 ], [ %116, %102 ]
  %92 = icmp eq i64 %86, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %90, %93
  %94 = phi i64 [ %98, %93 ], [ %91, %90 ]
  %95 = phi i64 [ %99, %93 ], [ %86, %90 ]
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %84, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %94
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %98 = add nuw i64 %94, 1
  %99 = add i64 %95, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %93, !llvm.loop !77

101:                                              ; preds = %90, %93, %79
  store i64 0, i64* %66, align 8
  br label %119

102:                                              ; preds = %102, %88
  %103 = phi i64 [ 0, %88 ], [ %116, %102 ]
  %104 = phi i64 [ %89, %88 ], [ %117, %102 ]
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %84, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %107 = or i64 %103, 1
  %108 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %84, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %108, i64 %107
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %109, align 8
  %110 = or i64 %103, 2
  %111 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %84, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %111, i64 %110
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %112, align 8
  %113 = or i64 %103, 3
  %114 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %84, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %114, i64 %113
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %115, align 8
  %116 = add nuw i64 %103, 4
  %117 = add i64 %104, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %90, label %102

119:                                              ; preds = %64, %101
  %120 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6
  %121 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %120, i64 0, i32 0
  %122 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %123 = bitcast %"class.std::__1::__tree_end_node"* %122 to %"class.std::__1::__tree_node.1042"**
  %124 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %123, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %121, %"class.std::__1::__tree_node.1042"* %124) #13
  %125 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %120, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %122, %"class.std::__1::__tree_end_node"** %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %127, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5
  %129 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::__tree_node.1042"**
  %132 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %131, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %129, %"class.std::__1::__tree_node.1042"* %132) #13
  %133 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %128, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %130, %"class.std::__1::__tree_end_node"** %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %135, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4
  %137 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %136, i64 0, i32 0
  %138 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %139 = bitcast %"class.std::__1::__tree_end_node"* %138 to %"class.std::__1::__tree_node.1042"**
  %140 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %139, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %137, %"class.std::__1::__tree_node.1042"* %140) #13
  %141 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %136, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %138, %"class.std::__1::__tree_end_node"** %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %138, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %143, align 8
  %144 = bitcast %"class.std::__1::unordered_set.910"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %144) #13
  %145 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 2
  %146 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %146, i64 0, i32 11
  %148 = load i32, i32* %147, align 8
  %149 = and i32 %148, 2048
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %119
  tail call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %146) #13
  br label %152

152:                                              ; preds = %119, %151
  %153 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %146, i64 0, i32 27, i32 0, i32 0, i32 0
  %154 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %153, align 8
  call void @_ZN8spvtools3opt21StructuredCFGAnalysis27FindFuncsCalledFromContinueEv(%"class.std::__1::unordered_set.910"* nonnull sret %6, %"class.spvtools::opt::StructuredCFGAnalysis"* %154) #13
  %155 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0
  %156 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.911"* %156, %"class.std::__1::__hash_table.911"* nonnull dereferenceable(40) %155) #13
  %157 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %158 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.915"* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %152, %160
  %161 = phi %"struct.std::__1::__hash_node_base.915"* [ %163, %160 ], [ %158, %152 ]
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %161, i64 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %162, align 8
  %164 = bitcast %"struct.std::__1::__hash_node_base.915"* %161 to i8*
  call void @_ZdlPv(i8* %164) #14
  %165 = icmp eq %"struct.std::__1::__hash_node_base.915"* %163, null
  br i1 %165, label %166, label %160

166:                                              ; preds = %160, %152
  %167 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %167, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.915"** %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = bitcast %"struct.std::__1::__hash_node_base.915"** %168 to i8*
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %166, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %144) #13
  %173 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %145, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %175, i64 0, i32 15, i32 0, i32 0
  %177 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %176, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %175, i64 0, i32 15, i32 0, i32 1
  %179 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %178, align 8
  %180 = icmp eq %"class.std::__1::unique_ptr.28"* %177, %179
  br i1 %180, label %194, label %181

181:                                              ; preds = %172
  %182 = bitcast i32* %7 to i8*
  %183 = getelementptr inbounds %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.201"* %10, i64 0, i32 0
  %184 = bitcast %"class.std::__1::tuple.1073"* %2 to i8*
  %185 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %2, i64 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %3, i64 0, i32 0
  %187 = bitcast i32* %8 to i8*
  %188 = getelementptr inbounds %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328"* %65, i64 0, i32 0
  %189 = bitcast %"class.std::__1::tuple.1073"* %4 to i8*
  %190 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %4, i64 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %5, i64 0, i32 0
  %192 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %193 = bitcast %"class.std::__1::set.158"* %120 to i64*
  br label %195

194:                                              ; preds = %310, %172
  ret void

195:                                              ; preds = %181, %310
  %196 = phi %"class.std::__1::unique_ptr.28"* [ %177, %181 ], [ %311, %310 ]
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %197, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #13
  %199 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %198, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %199, align 8
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %200, i64 0, i32 4
  %202 = load i8, i8* %201, align 1, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %195
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %200, i64 0, i32 3
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = zext i8 %206 to i32
  %208 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %200, i32 %207) #13
  br label %209

209:                                              ; preds = %195, %204
  %210 = phi i32 [ %208, %204 ], [ 0, %195 ]
  store i32 %210, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #13
  store i32* %7, i32** %185, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %186) #13
  %211 = call { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"* %183, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %3) #13
  %212 = extractvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %211, 0
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %212, i64 3
  %214 = bitcast %"struct.std::__1::__hash_node_base.206"* %213 to %"class.spvtools::opt::Function"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %186) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #13
  store %"class.spvtools::opt::Function"* %198, %"class.spvtools::opt::Function"** %214, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #13
  %215 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %198, i64 0, i32 3, i32 0, i32 0
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %215, align 8
  %217 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %198, i64 0, i32 3, i32 0, i32 1
  %218 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %217, align 8
  %219 = icmp eq %"class.std::__1::unique_ptr.40"* %216, %218
  br i1 %219, label %220, label %222

220:                                              ; preds = %236, %209
  %221 = call zeroext i1 @_ZN8spvtools3opt10InlinePass19IsInlinableFunctionEPNS0_8FunctionE(%"class.spvtools::opt::InlinePass"* %0, %"class.spvtools::opt::Function"* %198)
  br i1 %221, label %244, label %310

222:                                              ; preds = %209, %236
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %242, %236 ], [ %216, %209 ]
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %224, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #13
  %226 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %225, i64 0, i32 1, i32 0, i32 0, i32 0
  %227 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %226, align 8
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 4
  %229 = load i8, i8* %228, align 1, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 3
  %233 = load i8, i8* %232, align 4, !range !2
  %234 = zext i8 %233 to i32
  %235 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %227, i32 %234) #13
  br label %236

236:                                              ; preds = %222, %231
  %237 = phi i32 [ %235, %231 ], [ 0, %222 ]
  store i32 %237, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  store i32* %8, i32** %190, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %191) #13
  %238 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %188, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1073"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %5) #13
  %239 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %238, 0
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %239, i64 3
  %241 = bitcast %"struct.std::__1::__hash_node_base.333"* %240 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %191) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  store %"class.spvtools::opt::BasicBlock"* %225, %"class.spvtools::opt::BasicBlock"** %241, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #13
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %223, i64 1
  %243 = icmp eq %"class.std::__1::unique_ptr.40"* %242, %218
  br i1 %243, label %220, label %222

244:                                              ; preds = %220
  %245 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %199, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %245, i64 0, i32 4
  %247 = load i8, i8* %246, align 1, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %254, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %245, i64 0, i32 3
  %251 = load i8, i8* %250, align 4, !range !2
  %252 = zext i8 %251 to i32
  %253 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %245, i32 %252) #13
  br label %254

254:                                              ; preds = %244, %249
  %255 = phi i32 [ %253, %249 ], [ 0, %244 ]
  %256 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %123, align 8
  %257 = icmp eq %"class.std::__1::__tree_node.1042"* %256, null
  br i1 %257, label %284, label %258

258:                                              ; preds = %254, %280
  %259 = phi %"class.std::__1::__tree_node.1042"* [ %283, %280 ], [ %256, %254 ]
  %260 = phi %"class.std::__1::__tree_node_base"** [ %282, %280 ], [ %192, %254 ]
  %261 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = icmp ult i32 %255, %262
  br i1 %263, label %264, label %270

264:                                              ; preds = %258
  %265 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  %267 = icmp eq %"class.std::__1::__tree_node_base"* %266, null
  br i1 %267, label %268, label %280

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 0, i32 0
  br label %284

270:                                              ; preds = %258
  %271 = icmp ult i32 %262, %255
  br i1 %271, label %272, label %278

272:                                              ; preds = %270
  %273 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 0, i32 1
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, null
  br i1 %275, label %276, label %280

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 0, i32 0
  br label %284

278:                                              ; preds = %270
  %279 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %259, i64 0, i32 0, i32 0
  br label %284

280:                                              ; preds = %272, %264
  %281 = phi %"class.std::__1::__tree_node_base"* [ %266, %264 ], [ %274, %272 ]
  %282 = phi %"class.std::__1::__tree_node_base"** [ %265, %264 ], [ %273, %272 ]
  %283 = bitcast %"class.std::__1::__tree_node_base"* %281 to %"class.std::__1::__tree_node.1042"*
  br label %258

284:                                              ; preds = %254, %278, %276, %268
  %285 = phi %"class.std::__1::__tree_end_node"* [ %269, %268 ], [ %277, %276 ], [ %279, %278 ], [ %122, %254 ]
  %286 = phi %"class.std::__1::__tree_node_base"** [ %265, %268 ], [ %273, %276 ], [ %260, %278 ], [ %127, %254 ]
  %287 = bitcast %"class.std::__1::__tree_node_base"** %286 to %"class.std::__1::__tree_node.1042"**
  %288 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %287, align 8
  %289 = icmp eq %"class.std::__1::__tree_node.1042"* %288, null
  br i1 %289, label %290, label %310

290:                                              ; preds = %284
  %291 = call i8* @_Znwm(i64 32) #14, !noalias !78
  %292 = getelementptr inbounds i8, i8* %291, i64 28
  %293 = bitcast i8* %292 to i32*
  store i32 %255, i32* %293, align 4, !noalias !78
  %294 = bitcast i8* %291 to %"class.std::__1::__tree_node_base"*
  %295 = getelementptr inbounds i8, i8* %291, i64 16
  %296 = bitcast i8* %295 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %285, %"class.std::__1::__tree_end_node"** %296, align 8
  %297 = bitcast %"class.std::__1::__tree_node_base"** %286 to i8**
  store i8* %291, i8** %297, align 8
  %298 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %299 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %298, i64 0, i32 0
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %290
  %303 = ptrtoint %"class.std::__1::__tree_node_base"* %300 to i64
  store i64 %303, i64* %193, align 8
  %304 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  br label %305

305:                                              ; preds = %302, %290
  %306 = phi %"class.std::__1::__tree_node_base"* [ %294, %290 ], [ %304, %302 ]
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %307, %"class.std::__1::__tree_node_base"* %306) #13
  %308 = load i64, i64* %125, align 8
  %309 = add i64 %308, 1
  store i64 %309, i64* %125, align 8
  br label %310

310:                                              ; preds = %305, %284, %220
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %196, i64 1
  %312 = icmp eq %"class.std::__1::unique_ptr.28"* %311, %179
  br i1 %312, label %194, label %195
}

declare void @_ZN8spvtools3opt21StructuredCFGAnalysis27FindFuncsCalledFromContinueEv(%"class.std::__1::unordered_set.910"* sret, %"class.spvtools::opt::StructuredCFGAnalysis"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10InlinePassC2Ev(%"class.spvtools::opt::InlinePass"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spvtools::opt::InlinePass"* %0 to %"class.spvtools::opt::Pass"*
  tail call void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"* %2) #13
  %3 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt10InlinePassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.221"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map.201"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.348"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.328"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9
  %25 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0, i32 3
  %26 = bitcast %"class.std::__1::__compressed_pair.929"* %25 to i32*
  %27 = bitcast %"class.std::__1::unordered_set.910"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %26, align 4
  ret void
}

declare void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt10InlinePassD2Ev(%"class.spvtools::opt::InlinePass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt10InlinePassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.915"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.1042"**
  %22 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %21, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %19, %"class.std::__1::__tree_node.1042"* %22) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0
  %24 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.1042"**
  %26 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %25, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %23, %"class.std::__1::__tree_node.1042"* %26) #13
  %27 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0
  %28 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.1042"**
  %30 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %29, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %27, %"class.std::__1::__tree_node.1042"* %30) #13
  %31 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.333"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %18, %34
  %35 = phi %"struct.std::__1::__hash_node_base.333"* [ %37, %34 ], [ %32, %18 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %36, align 8
  %38 = bitcast %"struct.std::__1::__hash_node_base.333"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #14
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %37, null
  br i1 %39, label %40, label %34

40:                                               ; preds = %34, %18
  %41 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.333"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.333"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %40, %44
  %47 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.206"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46, %50
  %51 = phi %"struct.std::__1::__hash_node_base.206"* [ %53, %50 ], [ %48, %46 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %52, align 8
  %54 = bitcast %"struct.std::__1::__hash_node_base.206"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = icmp eq %"struct.std::__1::__hash_node_base.206"* %53, null
  br i1 %55, label %56, label %50

56:                                               ; preds = %50, %46
  %57 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %57, align 8
  store %"struct.std::__1::__hash_node_base.206"** null, %"struct.std::__1::__hash_node_base.206"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.206"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.std::__1::__hash_node_base.206"** %58 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %56, %60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %64 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %64, i64 0, i32 1
  %66 = load void (i8*)*, void (i8*)** %65, align 8
  %67 = icmp eq void (i8*)* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  tail call void %66(i8* %70) #13
  br label %71

71:                                               ; preds = %62, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt10InlinePassD0Ev(%"class.spvtools::opt::InlinePass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #13
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #13
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #14
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.1022"**
  %11 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.1022"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1022", %"struct.std::__1::__hash_node_base.1022"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.1022"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.1022"***
  %22 = load %"struct.std::__1::__hash_node_base.1022"**, %"struct.std::__1::__hash_node_base.1022"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1022"** null, %"struct.std::__1::__hash_node_base.1022"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1022"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.1022"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.1022"**
  %45 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.1022"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1022", %"struct.std::__1::__hash_node_base.1022"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.1022"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.1022"***
  %56 = load %"struct.std::__1::__hash_node_base.1022"**, %"struct.std::__1::__hash_node_base.1022"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.1022"** null, %"struct.std::__1::__hash_node_base.1022"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1022"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.1022"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.1022"**
  %79 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.1022"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1022", %"struct.std::__1::__hash_node_base.1022"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1022"*, %"struct.std::__1::__hash_node_base.1022"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.1022"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #14
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1022"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.1022"***
  %90 = load %"struct.std::__1::__hash_node_base.1022"**, %"struct.std::__1::__hash_node_base.1022"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1022"** null, %"struct.std::__1::__hash_node_base.1022"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1022"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.1022"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #14
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #14
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.953"**
  %4 = load %"class.std::__1::function.953"*, %"class.std::__1::function.953"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #13
  ret i1 true
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1042"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1042"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1042"* %1 to %"class.std::__1::__tree_node.1042"**
  %6 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1042"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1042", %"class.std::__1::__tree_node.1042"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1042"**
  %9 = load %"class.std::__1::__tree_node.1042"*, %"class.std::__1::__tree_node.1042"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1042"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1042"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #14
  %3 = bitcast i8* %2 to %"class.spvtools::opt::StructuredCFGAnalysis"*
  tail call void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"* nonnull %3, %"class.spvtools::opt::IRContext"* %0) #13
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 27
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr.873"* %5 to i64*
  store i64 %4, i64* %8, align 8
  %9 = icmp eq %"class.spvtools::opt::StructuredCFGAnalysis"* %7, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.881"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.881"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.881"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  %28 = icmp eq %"struct.std::__1::__hash_node_base.881"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.881"** null, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.881"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.881"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %29
  %36 = bitcast %"class.spvtools::opt::StructuredCFGAnalysis"* %7 to i8*
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %35, %1
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = or i32 %39, 2048
  store i32 %40, i32* %38, align 8
  ret void
}

declare void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #13
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #13
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #13
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #13
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #14
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #13
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1051"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #14, !noalias !81
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !81
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !81
  store i32 %62, i32* %61, align 4, !noalias !81
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !81
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !81
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !81
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !24
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !24
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !24
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !84

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !24
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.911"*, %"class.std::__1::__hash_table.911"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.915"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base.915"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base.915"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  %15 = icmp eq %"struct.std::__1::__hash_node_base.915"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !85

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table.911"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table.911"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.915"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base.915"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base.915"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base.915"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base.915"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.915"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #13, !range !24
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1073"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.206"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.206"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.206"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.206"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.206"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #14, !noalias !86
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !86
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !86
  store i32 %62, i32* %61, align 8, !noalias !86
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %64, align 8, !noalias !86
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !86
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"**
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %67, align 8, !noalias !86
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.206"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.206"* %110, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.206"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.206"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.206"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.206"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } undef, %"struct.std::__1::__hash_node_base.206"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.206"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.202"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !24
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !24
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !24
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.202"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.206"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.206"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.208", %"class.std::__1::__bucket_list_deallocator.208"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !89

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.206"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.206"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !24
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.206"* %36, %"struct.std::__1::__hash_node_base.206"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.206"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.206"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.206"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.206"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.206"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.206"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.206"* %82, %"struct.std::__1::__hash_node_base.206"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.206"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.206"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.206"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.206"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.206"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.206"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.206"* %80, %"struct.std::__1::__hash_node_base.206"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.206"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.206"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.206"** null, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.206"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.208", %"class.std::__1::__bucket_list_deallocator.208"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #13
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #15
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #14
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #13
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Instruction"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.spvtools::opt::Instruction"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %9
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %32
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %35 to i64
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #13
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %38 = ptrtoint %"class.spvtools::opt::Instruction"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.spvtools::opt::Instruction"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.spvtools::opt::Instruction"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 -1
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 -1
  tail call void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"* %48, %"class.spvtools::opt::Instruction"* dereferenceable(112) %49) #13
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.spvtools::opt::Instruction"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.spvtools::opt::Instruction"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.spvtools::opt::Instruction"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.spvtools::opt::Instruction"*
  %60 = icmp eq %"class.spvtools::opt::Instruction"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.spvtools::opt::Instruction"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 -1
  %64 = bitcast %"class.spvtools::opt::Instruction"* %63 to void (%"class.spvtools::opt::Instruction"*)***
  %65 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %64, align 8
  %66 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %65, align 8
  tail call void %66(%"class.spvtools::opt::Instruction"* %63) #13
  %67 = icmp eq %"class.spvtools::opt::Instruction"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %8 = bitcast %"class.spvtools::opt::IRContext"** %6 to i8*
  %9 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 384307168202282325
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #15
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #14
  %27 = bitcast i8* %26 to %"struct.spvtools::opt::Operand"*
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"struct.spvtools::opt::Operand"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %27, i64 %19
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %36 = bitcast %"struct.spvtools::opt::Operand"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %39
  %40 = phi %"struct.spvtools::opt::Operand"* [ %56, %39 ], [ %27, %25 ]
  %41 = phi %"struct.spvtools::opt::Operand"* [ %55, %39 ], [ %34, %25 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #13
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %39
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"* %63, %"class.std::__1::vector.14"* dereferenceable(24) %64)
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %66 to i64*
  %68 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"*, %"class.std::__1::vector.14"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.14"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #15
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #14
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %27 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Instruction"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"class.spvtools::opt::Instruction"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %33) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 1
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass9MapParamsEPNS3_8FunctionENS3_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1051", align 8
  %4 = alloca %"class.std::__1::tuple.1054", align 1
  %5 = alloca i32, align 4
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1090"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1090"*, %"class.std::__1::__function::__default_alloc_func.1090"** %6, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %5, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #13
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  store i32 %18, i32* %5, align 4
  %19 = bitcast %"class.std::__1::__function::__default_alloc_func.1090"* %7 to %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"**
  %20 = load %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"*, %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template", %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"* %20, i64 0, i32 0
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1090", %"class.std::__1::__function::__default_alloc_func.1090"* %7, i64 0, i32 0, i32 1
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 3
  %27 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %26) #13
  %28 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1090", %"class.std::__1::__function::__default_alloc_func.1090"* %7, i64 0, i32 0, i32 2
  %29 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %28, align 8
  %30 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %30, i64 0, i32 0
  %32 = bitcast %"class.std::__1::tuple.1051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #13
  %35 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %31, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %4) #13
  %36 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %35, 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 2
  %38 = bitcast %"struct.std::__1::__hash_node_base.254"* %37 to %"struct.std::__1::pair.960"*
  %39 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %38, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  store i32 %27, i32* %39, align 4
  %40 = load i32*, i32** %23, align 8
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %40, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #14, !noalias !90
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1073"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #14, !noalias !95
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !95
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !95
  store i32 %62, i32* %61, align 4, !noalias !95
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !95
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !95
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !95
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.21"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.21"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.21"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.21"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.21"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.21"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.21"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.21"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.21"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Instruction"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.21"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.21"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.21"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.21"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !98

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.21"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.21"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.21"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.21"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.21"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.21"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.21"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.21"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.21"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.21"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.21"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.21"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.21"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.21"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.21"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.21"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.21"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.21"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.21"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.21"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.21"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.21"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.21"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.21"*
  %138 = icmp eq %"class.std::__1::unique_ptr.21"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.21"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Instruction"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::opt::Instruction"* %143 to void (%"class.spvtools::opt::Instruction"*)***
  %147 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, i64 1
  %149 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, align 8
  tail call void %149(%"class.spvtools::opt::Instruction"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.21"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNSA_INS8_10BasicBlockENSC_ISX_EEEEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %4 = alloca %"class.std::__1::unordered_map"*, align 8
  %5 = alloca %"class.std::__1::unique_ptr.40"*, align 8
  %6 = alloca %"class.std::__1::function.946", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.std::__1::tuple.1051", align 8
  %9 = alloca %"class.std::__1::tuple.1054", align 1
  %10 = alloca i32, align 4
  %11 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1095"**
  %12 = load %"class.std::__1::__function::__default_alloc_func.1095"*, %"class.std::__1::__function::__default_alloc_func.1095"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %12, i64 0, i32 0, i32 3
  %14 = load %"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::InlinePass"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %15, align 8
  %17 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %16, align 8
  %18 = load i32, i32* %1, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %71, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !24
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, 4294967295
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ugt i64 %21, %19
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %71, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.254"* %42, null
  br i1 %43, label %71, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base.254"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.254"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %71

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.254"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %18
  br i1 %66, label %347, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.254"* %69, null
  br i1 %70, label %71, label %46

71:                                               ; preds = %67, %59, %40, %33, %2
  %72 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %12, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::unordered_map"**, %"class.std::__1::unordered_map"*** %72, align 8
  %74 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %346, label %78

78:                                               ; preds = %71
  %79 = tail call i64 @llvm.ctpop.i64(i64 %76) #13, !range !24
  %80 = icmp ugt i64 %79, 1
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = add i64 %76, 4294967295
  %83 = and i64 %82, %19
  br label %88

84:                                               ; preds = %78
  %85 = icmp ugt i64 %76, %19
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = urem i64 %19, %76
  br label %88

88:                                               ; preds = %86, %84, %81
  %89 = phi i64 [ %83, %81 ], [ %87, %86 ], [ %19, %84 ]
  %90 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %91, i64 %89
  %93 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base"* %93, null
  br i1 %94, label %346, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base"* %97, null
  br i1 %98, label %346, label %99

99:                                               ; preds = %95
  %100 = add i64 %76, -1
  br label %101

101:                                              ; preds = %122, %99
  %102 = phi %"struct.std::__1::__hash_node_base"* [ %97, %99 ], [ %124, %122 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 1
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, %19
  br i1 %106, label %117, label %107

107:                                              ; preds = %101
  br i1 %80, label %110, label %108

108:                                              ; preds = %107
  %109 = and i64 %105, %100
  br label %114

110:                                              ; preds = %107
  %111 = icmp ult i64 %105, %76
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %105, %76
  br label %114

114:                                              ; preds = %112, %110, %108
  %115 = phi i64 [ %109, %108 ], [ %113, %112 ], [ %105, %110 ]
  %116 = icmp eq i64 %115, %89
  br i1 %116, label %122, label %346

117:                                              ; preds = %101
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, %18
  br i1 %121, label %126, label %122

122:                                              ; preds = %117, %114
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base"* %124, null
  br i1 %125, label %346, label %101

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to %"class.spvtools::opt::Instruction"**
  %129 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %14, i64 0, i32 0, i32 2
  %131 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %130, align 8
  %132 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %129, %"class.spvtools::opt::IRContext"* %131) #13
  %133 = ptrtoint %"class.spvtools::opt::Instruction"* %132 to i64
  %134 = bitcast %"class.std::__1::__function::__default_alloc_func.1095"* %12 to i64**
  %135 = load i64*, i64** %134, align 8
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.std::__1::unordered_map"*** %72 to i64**
  %138 = load i64*, i64** %137, align 8
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1095", %"class.std::__1::__function::__default_alloc_func.1095"* %12, i64 0, i32 0, i32 2
  %141 = bitcast %"class.std::__1::unique_ptr.40"*** %140 to i64**
  %142 = load i64*, i64** %141, align 8
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::unordered_map.249"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #13
  %145 = bitcast %"class.std::__1::unordered_map"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #13
  %146 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #13
  %147 = bitcast %"class.std::__1::unordered_map.249"** %3 to i64*
  store i64 %136, i64* %147, align 8
  %148 = bitcast %"class.std::__1::unordered_map"** %4 to i64*
  store i64 %139, i64* %148, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  store i64 %143, i64* %149, align 8
  %150 = bitcast %"class.std::__1::function.946"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #13
  %151 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 1, i32 0
  %152 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNSA_INS8_10BasicBlockENSC_ISX_EEEEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %151, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %152, align 8
  %153 = tail call i8* @_Znwm(i64 32) #14, !noalias !99
  %154 = bitcast i8* %153 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %3, %"class.std::__1::unordered_map.249"*** %154, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = bitcast i8* %155 to %"class.std::__1::unordered_map"***
  store %"class.std::__1::unordered_map"** %4, %"class.std::__1::unordered_map"*** %156, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 16
  %158 = bitcast i8* %157 to %"class.std::__1::unique_ptr.40"***
  store %"class.std::__1::unique_ptr.40"** %5, %"class.std::__1::unique_ptr.40"*** %158, align 8
  %159 = getelementptr inbounds i8, i8* %153, i64 24
  %160 = bitcast i8* %159 to %"class.spvtools::opt::InlinePass"**
  store %"class.spvtools::opt::InlinePass"* %14, %"class.spvtools::opt::InlinePass"** %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %153, i8** %161, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 6, i32 0, i32 0
  %163 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %162, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 6, i32 0, i32 1
  %165 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %164, align 8
  %166 = icmp eq %"struct.spvtools::opt::Operand"* %163, %165
  br i1 %166, label %190, label %167

167:                                              ; preds = %126
  %168 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %6, i64 0, i32 0, i32 0
  br label %169

169:                                              ; preds = %184, %167
  %170 = phi %"struct.spvtools::opt::Operand"* [ %163, %167 ], [ %185, %184 ]
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %170, i64 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %172) #13
  br i1 %173, label %174, label %184

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %170, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %176 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %175, align 8
  %177 = icmp eq %"class.std::__1::vector.3"* %176, null
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %176, i64 0, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %170, i64 0, i32 1, i32 2
  %180 = select i1 %177, i32** %179, i32** %178
  %181 = load i32*, i32** %180, align 8
  %182 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %151, align 8
  %183 = call zeroext i1 %182(%"union.std::__1::__function::__policy_storage"* nonnull %168, i32* %181) #13
  br i1 %183, label %184, label %187

184:                                              ; preds = %174, %169
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %170, i64 1
  %186 = icmp eq %"struct.spvtools::opt::Operand"* %185, %165
  br i1 %186, label %187, label %169

187:                                              ; preds = %184, %174
  %188 = phi i1 [ true, %184 ], [ false, %174 ]
  %189 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %152, align 8
  br label %190

190:                                              ; preds = %187, %126
  %191 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %126 ], [ %189, %187 ]
  %192 = phi i1 [ true, %126 ], [ %188, %187 ]
  %193 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %191, i64 0, i32 1
  %194 = load void (i8*)*, void (i8*)** %193, align 8
  %195 = icmp eq void (i8*)* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %190
  %197 = load i8*, i8** %161, align 8
  call void %194(i8* %197) #13
  br label %198

198:                                              ; preds = %196, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #13
  br i1 %192, label %199, label %334

199:                                              ; preds = %198
  %200 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #13
  store i32 -1431655766, i32* %10, align 4
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 4
  %202 = load i8, i8* %201, align 1, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 3
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = zext i8 %206 to i32
  %208 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %132, i32 %207) #13
  br label %209

209:                                              ; preds = %204, %199
  %210 = phi i32 [ %208, %204 ], [ 0, %199 ]
  store i32 %210, i32* %10, align 4
  %211 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %130, align 8
  %212 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %211, i64 0, i32 4, i32 0, i32 0, i32 0
  %213 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %212, align 8
  %214 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %213) #13
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %211, i64 0, i32 5, i32 0, i32 2
  %218 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %217, align 8
  %219 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %218, i64 0, i32 2
  %220 = load i8, i8* %219, align 8, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %331

222:                                              ; preds = %216
  %223 = call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %223, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %224 = getelementptr inbounds i8, i8* %223, i64 37
  store i8 0, i8* %224, align 1
  %225 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %211, i64 0, i32 5, i32 0, i32 1, i32 0
  %226 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %225, align 8
  %227 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %211, i64 0, i32 5, i32 0, i32 0
  call void %226(%"union.std::__1::__function::__policy_storage"* %227, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %223) #13
  call void @_ZdlPv(i8* nonnull %223) #14
  br label %331

228:                                              ; preds = %209
  %229 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %130, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 11
  %231 = load i32, i32* %230, align 8
  %232 = and i32 %231, 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %256

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  %236 = bitcast %"class.spvtools::opt::Module"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = call i8* @_Znwm(i64 48) #14
  %239 = bitcast i8* %238 to %"class.spvtools::opt::analysis::DecorationManager"*
  %240 = getelementptr inbounds i8, i8* %238, i64 32
  %241 = bitcast i8* %240 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %241, align 4
  %242 = getelementptr inbounds i8, i8* %238, i64 40
  %243 = bitcast i8* %242 to i64*
  store i64 %237, i64* %243, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %239) #13
  %244 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 7
  %245 = ptrtoint i8* %238 to i64
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %244, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %246, align 8
  %248 = bitcast %"class.std::__1::unique_ptr.122"* %244 to i64*
  store i64 %245, i64* %248, align 8
  %249 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %247, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %234
  %251 = bitcast %"class.std::__1::unique_ptr.122"* %244 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %251, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %247) #13
  br label %252

252:                                              ; preds = %250, %234
  %253 = load i32, i32* %230, align 8
  %254 = or i32 %253, 4
  store i32 %254, i32* %230, align 8
  %255 = load i32, i32* %10, align 4
  br label %256

256:                                              ; preds = %252, %228
  %257 = phi i32 [ %210, %228 ], [ %255, %252 ]
  %258 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 7, i32 0, i32 0, i32 0
  %259 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %258, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %259, i32 %257, i32 %214) #13
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 3
  %261 = load i8, i8* %260, align 4, !range !2
  %262 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %262) #13
  %263 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %263, align 8
  %264 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %265 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %266 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %267 = bitcast i32** %265 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %266, %"struct.std::__1::aligned_storage<4, 4>::type"** %267, align 8
  %268 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %269 = bitcast %"class.std::__1::unique_ptr.0"* %268 to i64*
  store i64 0, i64* %269, align 8
  %270 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %266 to i32*
  store i64 1, i64* %264, align 8
  store i32 %214, i32* %270, align 8
  %271 = zext i8 %261 to i64
  %272 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %162, align 8
  %273 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %272, i64 %271, i32 1
  %274 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %273, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %263, align 8
  %275 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %276 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %275, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %275, align 8
  %277 = icmp eq %"class.std::__1::vector.3"* %276, null
  br i1 %277, label %289, label %278

278:                                              ; preds = %256
  %279 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = icmp eq i32* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = ptrtoint i32* %280 to i64
  %284 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 1
  %285 = bitcast i32** %284 to i64*
  store i64 %283, i64* %285, align 8
  %286 = bitcast i32* %280 to i8*
  call void @_ZdlPv(i8* %286) #14
  br label %287

287:                                              ; preds = %282, %278
  %288 = bitcast %"class.std::__1::vector.3"* %276 to i8*
  call void @_ZdlPv(i8* %288) #14
  br label %289

289:                                              ; preds = %287, %256
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %262) #13
  %290 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %15, align 8
  %291 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %290, align 8
  %292 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %291, i64 0, i32 0
  %293 = bitcast %"class.std::__1::tuple.1051"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #13
  %294 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %295) #13
  %296 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %292, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %9) #13
  %297 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %296, 0
  %298 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %297, i64 2
  %299 = bitcast %"struct.std::__1::__hash_node_base.254"* %298 to %"struct.std::__1::pair.960"*
  %300 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %299, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %295) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #13
  store i32 %214, i32* %300, align 4
  store i32 %214, i32* %1, align 4
  %301 = load %"class.std::__1::unique_ptr.40"**, %"class.std::__1::unique_ptr.40"*** %140, align 8
  %302 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %301, align 8
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %302, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %303, align 8
  %305 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %304, i64 0, i32 2, i32 0, i32 1
  %306 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 0, i32 1
  %307 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %306, align 8
  %308 = icmp eq %"class.spvtools::opt::Instruction"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %289
  %310 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 0, i32 2
  %311 = bitcast %"class.spvtools::opt::Instruction"** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %307, i64 0, i32 0, i32 2
  %314 = bitcast %"class.spvtools::opt::Instruction"** %313 to i64*
  store i64 %312, i64* %314, align 8
  %315 = bitcast %"class.spvtools::opt::Instruction"** %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.spvtools::opt::Instruction"** %310 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %318 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %317, align 8
  %319 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %318, i64 0, i32 1
  %320 = bitcast %"class.spvtools::opt::Instruction"** %319 to i64*
  store i64 %316, i64* %320, align 8
  %321 = bitcast %"class.spvtools::opt::Instruction"** %306 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 16, i1 false) #13
  br label %322

322:                                              ; preds = %289, %309
  store %"class.spvtools::opt::Instruction"* %305, %"class.spvtools::opt::Instruction"** %306, align 8
  %323 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %304, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %324 = bitcast %"class.spvtools::opt::Instruction"** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %132, i64 0, i32 0, i32 2
  %327 = bitcast %"class.spvtools::opt::Instruction"** %326 to i64*
  store i64 %325, i64* %327, align 8
  store %"class.spvtools::opt::Instruction"* %132, %"class.spvtools::opt::Instruction"** %323, align 8
  %328 = bitcast %"class.spvtools::opt::Instruction"** %326 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %329 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %328, align 8
  %330 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %329, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %132, %"class.spvtools::opt::Instruction"** %330, align 8
  br label %331

331:                                              ; preds = %322, %222, %216
  %332 = phi i64 [ 0, %322 ], [ %133, %216 ], [ %133, %222 ]
  %333 = phi i32 [ 0, %322 ], [ 1, %216 ], [ 1, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #13
  br label %334

334:                                              ; preds = %331, %198
  %335 = phi i64 [ %332, %331 ], [ %133, %198 ]
  %336 = phi i32 [ %333, %331 ], [ 1, %198 ]
  %337 = icmp eq i64 %335, 0
  br i1 %337, label %344, label %338

338:                                              ; preds = %334
  %339 = inttoptr i64 %335 to %"class.spvtools::opt::Instruction"*
  %340 = inttoptr i64 %335 to void (%"class.spvtools::opt::Instruction"*)***
  %341 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %341, i64 1
  %343 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %342, align 8
  call void %343(%"class.spvtools::opt::Instruction"* nonnull %339) #13
  br label %344

344:                                              ; preds = %338, %334
  %345 = icmp eq i32 %336, 0
  br i1 %345, label %346, label %351

346:                                              ; preds = %122, %114, %344, %95, %88, %71
  br label %351

347:                                              ; preds = %62
  %348 = bitcast %"struct.std::__1::__hash_node_base.254"* %63 to %"struct.std::__1::pair.960"*
  %349 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %348, i64 0, i32 1
  %350 = load i32, i32* %349, align 4
  store i32 %350, i32* %1, align 4
  br label %351

351:                                              ; preds = %344, %346, %347
  %352 = phi i1 [ false, %344 ], [ true, %346 ], [ true, %347 ]
  ret i1 %352
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #14, !noalias !104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1073"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #14, !noalias !109
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !109
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !109
  store i32 %62, i32* %61, align 8, !noalias !109
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !109
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !109
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !109
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !24
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !24
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !24
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !112

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !24
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !113

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %141 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %143) #13
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNS8_10BasicBlockEPKNS8_11InstructionEjE3$_2S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_map.249"**
  %4 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %62, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !24
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.254"* %29, null
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.254"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %62

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %62, label %33

58:                                               ; preds = %49
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to %"struct.std::__1::pair.960"*
  %60 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %1, align 4
  br label %62

62:                                               ; preds = %46, %54, %2, %20, %27, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEPNSB_INSC_IS4_NSE_IS4_EEEENSH_ISM_EEEENS3_15InstructionList8iteratorENS3_18UptrVectorIteratorISD_Lb0EEEE3$_3S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1051", align 8
  %4 = alloca %"class.std::__1::tuple.1054", align 1
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to %"class.spvtools::opt::Pass"**
  %8 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %7, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %5, align 4
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i32 0, i32* %5, align 4
  br label %105

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %17) #13
  store i32 %18, i32* %5, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %105, label %20

20:                                               ; preds = %14
  %21 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_map.249"**
  %22 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %21, align 8
  %23 = zext i32 %18 to i64
  %24 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %75, label %27

27:                                               ; preds = %20
  %28 = tail call i64 @llvm.ctpop.i64(i64 %25) #13, !range !24
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = add i64 %25, 4294967295
  %32 = and i64 %31, %23
  br label %37

33:                                               ; preds = %27
  %34 = icmp ugt i64 %25, %23
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %23, %25
  br label %37

37:                                               ; preds = %35, %33, %30
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %23, %33 ]
  %39 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %40, i64 %38
  %42 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.254"* %42, null
  br i1 %43, label %75, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %42, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.254"* %46, null
  br i1 %47, label %75, label %48

48:                                               ; preds = %44
  %49 = add i64 %25, -1
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi %"struct.std::__1::__hash_node_base.254"* [ %46, %48 ], [ %73, %71 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %51, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.254"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  br i1 %29, label %59, label %57

57:                                               ; preds = %56
  %58 = and i64 %54, %49
  br label %63

59:                                               ; preds = %56
  %60 = icmp ult i64 %54, %25
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %54, %25
  br label %63

63:                                               ; preds = %61, %59, %57
  %64 = phi i64 [ %58, %57 ], [ %62, %61 ], [ %54, %59 ]
  %65 = icmp eq i64 %64, %38
  br i1 %65, label %71, label %75

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %51, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.254"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %18
  br i1 %70, label %105, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %51, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.254"* %73, null
  br i1 %74, label %75, label %50

75:                                               ; preds = %71, %63, %44, %37, %20
  %76 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %8, i64 0, i32 2
  %77 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %76, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %78, align 8
  %80 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %79) #13
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 5, i32 0, i32 2
  %84 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %84, i64 0, i32 2
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %105

88:                                               ; preds = %82
  %89 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #13
  %90 = getelementptr inbounds i8, i8* %89, i64 37
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 5, i32 0, i32 1, i32 0
  %92 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 5, i32 0, i32 0
  tail call void %92(%"union.std::__1::__function::__policy_storage"* %93, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %89) #13
  tail call void @_ZdlPv(i8* nonnull %89) #14
  br label %105

94:                                               ; preds = %75
  %95 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %21, align 8
  %96 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %95, i64 0, i32 0
  %97 = bitcast %"class.std::__1::tuple.1051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #13
  %98 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %99) #13
  %100 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %96, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %4) #13
  %101 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %101, i64 2
  %103 = bitcast %"struct.std::__1::__hash_node_base.254"* %102 to %"struct.std::__1::pair.960"*
  %104 = getelementptr inbounds %"struct.std::__1::pair.960", %"struct.std::__1::pair.960"* %103, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %99) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #13
  store i32 %80, i32* %104, align 4
  br label %105

105:                                              ; preds = %66, %13, %14, %82, %88, %94
  %106 = phi i1 [ true, %94 ], [ true, %13 ], [ true, %14 ], [ false, %82 ], [ false, %88 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEPNSB_INSC_IS4_NSE_IS4_EEEENSH_ISM_EEEENS3_15InstructionList8iteratorENS3_18UptrVectorIteratorISD_Lb0EEEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1115"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1115"*, %"class.std::__1::__function::__default_alloc_func.1115"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1115", %"class.std::__1::__function::__default_alloc_func.1115"* %4, i64 0, i32 0, i32 3
  %6 = load %"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::InlinePass"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1115", %"class.std::__1::__function::__default_alloc_func.1115"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1115", %"class.std::__1::__function::__default_alloc_func.1115"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %6, i64 0, i32 0, i32 2
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 65536
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %2
  %20 = tail call i8* @_Znwm(i64 232) #14
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %21, %"class.spvtools::opt::IRContext"* %14) #13
  %22 = ptrtoint i8* %20 to i64
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 21
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.593"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %19
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %25) #13
  %29 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %28, %19
  %31 = load i32, i32* %15, align 8
  %32 = or i32 %31, 65536
  store i32 %32, i32* %15, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 21, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1115", %"class.std::__1::__function::__default_alloc_func.1115"* %4, i64 0, i32 0, i32 2
  %39 = load %"class.spvtools::opt::analysis::DebugInlinedAtContext"*, %"class.spvtools::opt::analysis::DebugInlinedAtContext"** %38, align 8
  %40 = tail call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager24BuildDebugInlinedAtChainEjPNS1_21DebugInlinedAtContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* %35, i32 %37, %"class.spvtools::opt::analysis::DebugInlinedAtContext"* %39) #13
  %41 = tail call zeroext i1 @_ZN8spvtools3opt10InlinePass23InlineSingleInstructionERKNSt3__113unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS0_10BasicBlockEPKNS0_11InstructionEj(%"class.spvtools::opt::InlinePass"* %6, %"class.std::__1::unordered_map.249"* dereferenceable(40) %8, %"class.spvtools::opt::BasicBlock"* %12, %"class.spvtools::opt::Instruction"* %1, i32 %40) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #14, !noalias !114
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1073"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #14, !noalias !119
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1073", %"class.std::__1::tuple.1073"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !119
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !119
  store i32 %62, i32* %61, align 8, !noalias !119
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !119
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !119
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !119
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !24
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !24
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !24
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !122

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !24
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1051"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.206"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.206"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.206"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.206"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.206"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #14, !noalias !123
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !123
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !123
  store i32 %62, i32* %61, align 8, !noalias !123
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %64, align 8, !noalias !123
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !123
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"**
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %67, align 8, !noalias !123
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.206"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.206"* %110, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.206"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.206"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.206"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.206"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } undef, %"struct.std::__1::__hash_node_base.206"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.206"*, i8 } %150
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS7_10BasicBlockENS_14default_deleteISB_EEEENS_9allocatorISE_EEEEE3$_5S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::function.961", align 8
  %4 = alloca %"class.std::__1::tuple.1051", align 8
  %5 = alloca %"class.std::__1::tuple.1054", align 1
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::function.940", align 16
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1129"**
  %9 = load %"class.std::__1::__function::__default_alloc_func.1129"*, %"class.std::__1::__function::__default_alloc_func.1129"** %8, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 %1, i32* %6, align 4
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1129", %"class.std::__1::__function::__default_alloc_func.1129"* %9, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::InlinePass"*, %"class.spvtools::opt::InlinePass"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::InlinePass", %"class.spvtools::opt::InlinePass"* %12, i64 0, i32 3, i32 0
  %14 = bitcast %"class.std::__1::tuple.1051"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.1054", %"class.std::__1::tuple.1054"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %13, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1051"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1054"* nonnull dereferenceable(1) %5) #13
  %18 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %18, i64 3
  %20 = bitcast %"struct.std::__1::__hash_node_base.333"* %19 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %21 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %20, align 8
  %22 = bitcast %"class.std::__1::function.940"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #13
  %23 = bitcast %"class.std::__1::__function::__default_alloc_func.1129"* %9 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEENK3$_5clEjEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %25, align 16
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_5clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %26, align 8
  %27 = bitcast %"class.std::__1::function.940"* %7 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %27, align 16
  %28 = bitcast %"class.std::__1::function.961"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #13
  %29 = ptrtoint %"class.std::__1::function.940"* %7 to i64
  %30 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %30, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %31, align 8
  %32 = bitcast %"class.std::__1::function.961"* %3 to i64*
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %21, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %60, label %40

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %51, %40
  %43 = phi %"class.spvtools::opt::Instruction"* [ %55, %51 ], [ %34, %40 ]
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 0, i32 1
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 245
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 0, i32 3
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, %"class.spvtools::opt::Instruction"* %47, %"class.spvtools::opt::Instruction"* null
  %56 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %30, align 8
  %57 = call zeroext i1 %56(%"union.std::__1::__function::__policy_storage"* nonnull %41, %"class.spvtools::opt::Instruction"* nonnull %43) #13
  br i1 %57, label %42, label %58

58:                                               ; preds = %51, %45, %42
  %59 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %31, align 8
  br label %60

60:                                               ; preds = %58, %2
  %61 = phi %"struct.std::__1::__function::__policy"* [ %59, %58 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %61, i64 0, i32 1
  %63 = load void (i8*)*, void (i8*)** %62, align 8
  %64 = icmp eq void (i8*)* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::function.961", %"class.std::__1::function.961"* %3, i64 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void %63(i8* %67) #13
  br label %68

68:                                               ; preds = %65, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #13
  %69 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %26, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %69, i64 0, i32 1
  %71 = load void (i8*)*, void (i8*)** %70, align 8
  %72 = icmp eq void (i8*)* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %7, i64 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 16
  call void %71(i8* %75) #13
  br label %76

76:                                               ; preds = %68, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1051"* dereferenceable(8), %"class.std::__1::tuple.1054"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #14, !noalias !126
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1051", %"class.std::__1::tuple.1051"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !126
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !126
  store i32 %62, i32* %61, align 8, !noalias !126
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !126
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !126
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !126
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !24
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !24
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !24
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.940"**
  %4 = load %"class.std::__1::function.940"*, %"class.std::__1::function.940"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEENK3$_5clEjEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.946", align 8
  %4 = alloca %"class.std::__1::function.953", align 16
  %5 = bitcast %"class.std::__1::function.953"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %4, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS8_10BasicBlockENS_14default_deleteISC_EEEENS_9allocatorISF_EEEEENK3$_5clEjENKUlPNS8_11InstructionEE_clESM_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %8, align 16
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_5clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = bitcast %"class.std::__1::function.953"* %4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %10, align 16
  %11 = bitcast %"class.std::__1::function.946"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  %12 = ptrtoint %"class.std::__1::function.953"* %4 to i64
  %13 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %3, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %14, align 8
  %15 = bitcast %"class.std::__1::function.946"* %3 to i64*
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %19 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %18, align 8
  %20 = icmp eq %"struct.spvtools::opt::Operand"* %17, %19
  br i1 %20, label %43, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %3, i64 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %38, %21
  %24 = phi %"struct.spvtools::opt::Operand"* [ %17, %21 ], [ %39, %38 ]
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %26) #13
  br i1 %27, label %28, label %38

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %29, align 8
  %31 = icmp eq %"class.std::__1::vector.3"* %30, null
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %30, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1, i32 2
  %34 = select i1 %31, i32** %33, i32** %32
  %35 = load i32*, i32** %34, align 8
  %36 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  %37 = call zeroext i1 %36(%"union.std::__1::__function::__policy_storage"* nonnull %22, i32* %35) #13
  br i1 %37, label %38, label %41

38:                                               ; preds = %28, %23
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 1
  %40 = icmp eq %"struct.spvtools::opt::Operand"* %39, %19
  br i1 %40, label %41, label %23

41:                                               ; preds = %38, %28
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  br label %43

43:                                               ; preds = %41, %2
  %44 = phi %"struct.std::__1::__function::__policy"* [ %42, %41 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::function.946", %"class.std::__1::function.946"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #13
  br label %51

51:                                               ; preds = %48, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 16
  call void %54(i8* %58) #13
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS8_10BasicBlockENS_14default_deleteISC_EEEENS_9allocatorISF_EEEEENK3$_5clEjENKUlPNS8_11InstructionEE_clESM_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #11 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %10 = bitcast [8 x i8]* %9 to i32**
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #14, !noalias !129
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10InlinePass33ContainsKillOrTerminateInvocationEPNS3_8FunctionEE3$_6S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = tail call zeroext i1 @_Z28spvOpcodeTerminatesExecution6SpvOp_(i32 %4) #13
  %6 = xor i1 %5, true
  ret i1 %6
}

declare zeroext i1 @_Z28spvOpcodeTerminatesExecution6SpvOp_(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8spvtools3opt9IRContext16types_values_endEv: argument 0"}
!5 = distinct !{!5, !"_ZN8spvtools3opt9IRContext16types_values_endEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!11 = !{!12, !14, !16}
!12 = distinct !{!12, !13, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!14 = distinct !{!14, !15, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!16 = distinct !{!16, !17, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!23 = !{}
!24 = !{i64 0, i64 65}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!27 = distinct !{!27, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!31 = distinct !{!31, !32, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!35 = distinct !{!35, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!38 = distinct !{!38, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!42 = distinct !{!42, !43, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!47 = distinct !{!47, !48, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!51 = distinct !{!51, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!54 = distinct !{!54, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!57 = distinct !{!57, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!67 = distinct !{!67, !68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!74 = distinct !{!74, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!75 = distinct !{!75, !76}
!76 = !{!"llvm.loop.unroll.disable"}
!77 = distinct !{!77, !76}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!80 = distinct !{!80, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!84 = distinct !{!84, !76}
!85 = distinct !{!85, !76}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!89 = distinct !{!89, !76}
!90 = !{!91, !93}
!91 = distinct !{!91, !92, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!93 = distinct !{!93, !94, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass9MapParamsEPNS5_8FunctionENS5_15InstructionList8iteratorEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!98 = distinct !{!98, !76}
!99 = !{!100, !102}
!100 = distinct !{!100, !101, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!102 = distinct !{!102, !103, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!104 = !{!105, !107}
!105 = distinct !{!105, !106, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!107 = distinct !{!107, !108, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS7_INS5_10BasicBlockENS9_ISU_EEEEE3$_1FbPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!112 = distinct !{!112, !76}
!113 = distinct !{!113, !76}
!114 = !{!115, !117}
!115 = distinct !{!115, !116, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!116 = distinct !{!116, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!117 = distinct !{!117, !118, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass13GenInlineCodeEPNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEPNS7_INS8_INS5_11InstructionENSA_ISH_EEEENSD_ISJ_EEEENS5_15InstructionList8iteratorENS5_18UptrVectorIteratorIS9_Lb0EEEE3$_4FvPSH_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!122 = distinct !{!122, !76}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!125 = distinct !{!125, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!128 = distinct !{!128, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!129 = !{!130, !132}
!130 = distinct !{!130, !131, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!131 = distinct !{!131, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!132 = distinct !{!132, !133, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt10InlinePass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_5FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
