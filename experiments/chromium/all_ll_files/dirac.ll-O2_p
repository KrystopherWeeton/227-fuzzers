; ModuleID = '../../third_party/ffmpeg/libavcodec/dirac.c'
source_filename = "../../third_party/ffmpeg/libavcodec/dirac.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.dirac_source_params = type { i32, i32, i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8 }
%struct.AVRational = type { i32, i32 }
%struct.anon = type { i8, i32 }
%struct.anon.0 = type { i32, i32, i32 }
%struct.AVDiracSeqHeader = type { i32, i32, i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i32, i32, %struct.AVRational, %struct.AVRational, i32, i32, i32, i32, i32, %struct.DiracVersionInfo, i32 }
%struct.DiracVersionInfo = type { i32, i32 }

@.str = private unnamed_addr constant [32 x i8] c"Stream is old and may not work\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"Stream may have unhandled features\0A\00", align 1
@dirac_source_parameters_defaults = internal unnamed_addr constant [21 x %struct.dirac_source_params] [%struct.dirac_source_params { i32 640, i32 480, i8 2, i8 0, i8 0, i8 1, i8 1, i16 640, i16 480, i16 0, i16 0, i8 1, i8 0 }, %struct.dirac_source_params { i32 176, i32 120, i8 2, i8 0, i8 0, i8 9, i8 2, i16 176, i16 120, i16 0, i16 0, i8 1, i8 1 }, %struct.dirac_source_params { i32 176, i32 144, i8 2, i8 0, i8 1, i8 10, i8 3, i16 176, i16 144, i16 0, i16 0, i8 1, i8 2 }, %struct.dirac_source_params { i32 352, i32 240, i8 2, i8 0, i8 0, i8 9, i8 2, i16 352, i16 240, i16 0, i16 0, i8 1, i8 1 }, %struct.dirac_source_params { i32 352, i32 288, i8 2, i8 0, i8 1, i8 10, i8 3, i16 352, i16 288, i16 0, i16 0, i8 1, i8 2 }, %struct.dirac_source_params { i32 704, i32 480, i8 2, i8 0, i8 0, i8 9, i8 2, i16 704, i16 480, i16 0, i16 0, i8 1, i8 1 }, %struct.dirac_source_params { i32 704, i32 576, i8 2, i8 0, i8 1, i8 10, i8 3, i16 704, i16 576, i16 0, i16 0, i8 1, i8 2 }, %struct.dirac_source_params { i32 720, i32 480, i8 1, i8 1, i8 0, i8 4, i8 2, i16 704, i16 480, i16 8, i16 0, i8 3, i8 1 }, %struct.dirac_source_params { i32 720, i32 576, i8 1, i8 1, i8 1, i8 3, i8 3, i16 704, i16 576, i16 8, i16 0, i8 3, i8 2 }, %struct.dirac_source_params { i32 1280, i32 720, i8 1, i8 0, i8 1, i8 7, i8 1, i16 1280, i16 720, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 1280, i32 720, i8 1, i8 0, i8 1, i8 6, i8 1, i16 1280, i16 720, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 1920, i32 1080, i8 1, i8 1, i8 1, i8 4, i8 1, i16 1920, i16 1080, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 1920, i32 1080, i8 1, i8 1, i8 1, i8 3, i8 1, i16 1920, i16 1080, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 1920, i32 1080, i8 1, i8 0, i8 1, i8 7, i8 1, i16 1920, i16 1080, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 1920, i32 1080, i8 1, i8 0, i8 1, i8 6, i8 1, i16 1920, i16 1080, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 2048, i32 1080, i8 0, i8 0, i8 1, i8 2, i8 1, i16 2048, i16 1080, i16 0, i16 0, i8 4, i8 4 }, %struct.dirac_source_params { i32 4096, i32 2160, i8 0, i8 0, i8 1, i8 2, i8 1, i16 4096, i16 2160, i16 0, i16 0, i8 4, i8 4 }, %struct.dirac_source_params { i32 3840, i32 2160, i8 1, i8 0, i8 1, i8 7, i8 1, i16 3840, i16 2160, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 3840, i32 2160, i8 1, i8 0, i8 1, i8 6, i8 1, i16 3840, i16 2160, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 7680, i32 4320, i8 1, i8 0, i8 1, i8 7, i8 1, i16 3840, i16 2160, i16 0, i16 0, i8 3, i8 3 }, %struct.dirac_source_params { i32 7680, i32 4320, i8 1, i8 0, i8 1, i8 6, i8 1, i16 3840, i16 2160, i16 0, i16 0, i8 3, i8 3 }], align 16
@.str.2 = private unnamed_addr constant [35 x i8] c"Unsupported picture coding mode %d\00", align 1
@ff_interleaved_golomb_vlc_len = external local_unnamed_addr constant [256 x i8], align 16
@ff_interleaved_ue_golomb_vlc_code = external local_unnamed_addr constant [256 x i8], align 16
@ff_interleaved_dirac_golomb_vlc_code = external local_unnamed_addr constant [256 x i8], align 16
@.str.3 = private unnamed_addr constant [26 x i8] c"Unknown chroma format %d\0A\00", align 1
@ff_mpeg12_frame_rate_tab = external local_unnamed_addr constant [0 x %struct.AVRational], align 4
@dirac_frame_rate = internal unnamed_addr constant [2 x %struct.AVRational] [%struct.AVRational { i32 15000, i32 1001 }, %struct.AVRational { i32 25, i32 2 }], align 16
@dirac_preset_aspect_ratios = internal unnamed_addr constant [6 x %struct.AVRational] [%struct.AVRational { i32 1, i32 1 }, %struct.AVRational { i32 10, i32 11 }, %struct.AVRational { i32 12, i32 11 }, %struct.AVRational { i32 40, i32 33 }, %struct.AVRational { i32 16, i32 11 }, %struct.AVRational { i32 4, i32 3 }], align 16
@pixel_range_presets = internal unnamed_addr constant [4 x %struct.anon] [%struct.anon { i8 8, i32 2 }, %struct.anon { i8 8, i32 1 }, %struct.anon { i8 10, i32 1 }, %struct.anon { i8 12, i32 1 }], align 16
@dirac_pix_fmt = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] [i32 5, i32 70, i32 133], [3 x i32] [i32 4, i32 66, i32 129], [3 x i32] [i32 0, i32 64, i32 125]], align 16
@.str.4 = private unnamed_addr constant [66 x i8] c"Dimensions must be an integer multiple of the chroma subsampling\0A\00", align 1
@dirac_color_presets = internal unnamed_addr constant [5 x %struct.anon.0] [%struct.anon.0 { i32 1, i32 1, i32 1 }, %struct.anon.0 { i32 6, i32 5, i32 1 }, %struct.anon.0 { i32 5, i32 5, i32 1 }, %struct.anon.0 { i32 1, i32 1, i32 1 }, %struct.anon.0 { i32 1, i32 1, i32 2 }], align 16
@dirac_primaries = internal unnamed_addr constant [3 x i32] [i32 1, i32 6, i32 5], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_dirac_parse_sequence_header(%struct.AVDiracSeqHeader** nocapture, i8*, i64, i8*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.AVDiracSeqHeader*, align 8
  %8 = bitcast %struct.AVDiracSeqHeader** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = tail call noalias i8* @av_mallocz(i64 80) #4
  %10 = bitcast %struct.AVDiracSeqHeader** %7 to i8**
  store i8* %9, i8** %10, align 8
  %11 = icmp eq i8* %9, null
  br i1 %11, label %2389, label %12

12:                                               ; preds = %4
  %13 = trunc i64 %2 to i32
  %14 = icmp ugt i32 %13, 268435455
  %15 = shl i32 %13, 3
  %16 = select i1 %14, i32 -8, i32 %15
  %17 = icmp ult i32 %16, 2147483135
  %18 = icmp ne i8* %1, null
  %19 = and i1 %18, %17
  %20 = select i1 %19, i8* %1, i8* null
  %21 = add i32 %16, 8
  %22 = select i1 %19, i32 %21, i32 8
  br i1 %19, label %23, label %2387

23:                                               ; preds = %12
  %24 = bitcast i8* %20 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %25) #5, !srcloc !2
  %27 = and i32 %26, -1434451968
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %23
  %30 = lshr i32 %26, 24
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp ugt i32 %22, %34
  %36 = select i1 %35, i32 %34, i32 %22
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %31
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  br label %84

40:                                               ; preds = %23, %72
  %41 = phi i32 [ %80, %72 ], [ %26, %23 ]
  %42 = phi i32 [ %51, %72 ], [ 0, %23 ]
  %43 = phi i32 [ %70, %72 ], [ 1, %23 ]
  %44 = lshr i32 %41, 24
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp ult i8 %47, 8
  %49 = select i1 %48, i8 %47, i8 8
  %50 = zext i8 %49 to i32
  %51 = add i32 %42, %50
  %52 = icmp ugt i32 %22, %51
  %53 = select i1 %52, i32 %51, i32 %22
  %54 = icmp eq i8 %47, 9
  br i1 %54, label %65, label %55

55:                                               ; preds = %40
  %56 = zext i32 %44 to i64
  %57 = zext i8 %47 to i32
  %58 = add nsw i32 %57, -1
  %59 = ashr i32 %58, 1
  %60 = shl i32 %43, %59
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %56
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %60, %63
  br label %81

65:                                               ; preds = %40
  %66 = shl i32 %43, 4
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %45
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = or i32 %66, %69
  %71 = icmp ult i32 %70, 134217728
  br i1 %71, label %72, label %81

72:                                               ; preds = %65
  %73 = lshr i32 %53, 3
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %20, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 1
  %78 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %77) #5, !srcloc !2
  %79 = and i32 %53, 7
  %80 = shl i32 %78, %79
  br i1 %52, label %40, label %81

81:                                               ; preds = %72, %65, %55
  %82 = phi i32 [ %64, %55 ], [ %70, %65 ], [ %70, %72 ]
  %83 = add i32 %82, -1
  br label %84

84:                                               ; preds = %29, %81
  %85 = phi i32 [ %53, %81 ], [ %36, %29 ]
  %86 = phi i32 [ %83, %81 ], [ %39, %29 ]
  %87 = getelementptr inbounds i8, i8* %9, i64 68
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 4
  %89 = lshr i32 %85, 3
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %20, i64 %90
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 1
  %94 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %93) #5, !srcloc !2
  %95 = and i32 %85, 7
  %96 = shl i32 %94, %95
  %97 = and i32 %96, -1434451968
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %84
  %100 = lshr i32 %96, 24
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = add i32 %85, %104
  %106 = icmp ugt i32 %22, %105
  %107 = select i1 %106, i32 %105, i32 %22
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %101
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  br label %155

111:                                              ; preds = %84, %143
  %112 = phi i32 [ %151, %143 ], [ %96, %84 ]
  %113 = phi i32 [ %122, %143 ], [ %85, %84 ]
  %114 = phi i32 [ %141, %143 ], [ 1, %84 ]
  %115 = lshr i32 %112, 24
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = icmp ult i8 %118, 8
  %120 = select i1 %119, i8 %118, i8 8
  %121 = zext i8 %120 to i32
  %122 = add i32 %113, %121
  %123 = icmp ugt i32 %22, %122
  %124 = select i1 %123, i32 %122, i32 %22
  %125 = icmp eq i8 %118, 9
  br i1 %125, label %136, label %126

126:                                              ; preds = %111
  %127 = zext i32 %115 to i64
  %128 = zext i8 %118 to i32
  %129 = add nsw i32 %128, -1
  %130 = ashr i32 %129, 1
  %131 = shl i32 %114, %130
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %127
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = or i32 %131, %134
  br label %152

136:                                              ; preds = %111
  %137 = shl i32 %114, 4
  %138 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %116
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = or i32 %137, %140
  %142 = icmp ult i32 %141, 134217728
  br i1 %142, label %143, label %152

143:                                              ; preds = %136
  %144 = lshr i32 %124, 3
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %20, i64 %145
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 1
  %149 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %148) #5, !srcloc !2
  %150 = and i32 %124, 7
  %151 = shl i32 %149, %150
  br i1 %123, label %111, label %152

152:                                              ; preds = %143, %136, %126
  %153 = phi i32 [ %135, %126 ], [ %141, %136 ], [ %141, %143 ]
  %154 = add i32 %153, -1
  br label %155

155:                                              ; preds = %99, %152
  %156 = phi i32 [ %124, %152 ], [ %107, %99 ]
  %157 = phi i32 [ %154, %152 ], [ %110, %99 ]
  %158 = getelementptr inbounds i8, i8* %9, i64 72
  %159 = bitcast i8* %158 to i32*
  store i32 %157, i32* %159, align 4
  %160 = lshr i32 %156, 3
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %20, i64 %161
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 1
  %165 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %164) #5, !srcloc !2
  %166 = and i32 %156, 7
  %167 = shl i32 %165, %166
  %168 = and i32 %167, -1434451968
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %182, label %170

170:                                              ; preds = %155
  %171 = lshr i32 %167, 24
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = add i32 %156, %175
  %177 = icmp ugt i32 %22, %176
  %178 = select i1 %177, i32 %176, i32 %22
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %172
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  br label %226

182:                                              ; preds = %155, %214
  %183 = phi i32 [ %222, %214 ], [ %167, %155 ]
  %184 = phi i32 [ %193, %214 ], [ %156, %155 ]
  %185 = phi i32 [ %212, %214 ], [ 1, %155 ]
  %186 = lshr i32 %183, 24
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = icmp ult i8 %189, 8
  %191 = select i1 %190, i8 %189, i8 8
  %192 = zext i8 %191 to i32
  %193 = add i32 %184, %192
  %194 = icmp ugt i32 %22, %193
  %195 = select i1 %194, i32 %193, i32 %22
  %196 = icmp eq i8 %189, 9
  br i1 %196, label %207, label %197

197:                                              ; preds = %182
  %198 = zext i32 %186 to i64
  %199 = zext i8 %189 to i32
  %200 = add nsw i32 %199, -1
  %201 = ashr i32 %200, 1
  %202 = shl i32 %185, %201
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %198
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = or i32 %202, %205
  br label %223

207:                                              ; preds = %182
  %208 = shl i32 %185, 4
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %187
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = or i32 %208, %211
  %213 = icmp ult i32 %212, 134217728
  br i1 %213, label %214, label %223

214:                                              ; preds = %207
  %215 = lshr i32 %195, 3
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %20, i64 %216
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %218, align 1
  %220 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %219) #5, !srcloc !2
  %221 = and i32 %195, 7
  %222 = shl i32 %220, %221
  br i1 %194, label %182, label %223

223:                                              ; preds = %214, %207, %197
  %224 = phi i32 [ %206, %197 ], [ %212, %207 ], [ %212, %214 ]
  %225 = add i32 %224, -1
  br label %226

226:                                              ; preds = %170, %223
  %227 = phi i32 [ %195, %223 ], [ %178, %170 ]
  %228 = phi i32 [ %225, %223 ], [ %181, %170 ]
  %229 = getelementptr inbounds i8, i8* %9, i64 24
  %230 = bitcast i8* %229 to i32*
  store i32 %228, i32* %230, align 4
  %231 = lshr i32 %227, 3
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %20, i64 %232
  %234 = bitcast i8* %233 to i32*
  %235 = load i32, i32* %234, align 1
  %236 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %235) #5, !srcloc !2
  %237 = and i32 %227, 7
  %238 = shl i32 %236, %237
  %239 = and i32 %238, -1434451968
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %226
  %242 = lshr i32 %238, 24
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = add i32 %227, %246
  %248 = icmp ugt i32 %22, %247
  %249 = select i1 %248, i32 %247, i32 %22
  %250 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %243
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  br label %297

253:                                              ; preds = %226, %285
  %254 = phi i32 [ %293, %285 ], [ %238, %226 ]
  %255 = phi i32 [ %264, %285 ], [ %227, %226 ]
  %256 = phi i32 [ %283, %285 ], [ 1, %226 ]
  %257 = lshr i32 %254, 24
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = icmp ult i8 %260, 8
  %262 = select i1 %261, i8 %260, i8 8
  %263 = zext i8 %262 to i32
  %264 = add i32 %255, %263
  %265 = icmp ugt i32 %22, %264
  %266 = select i1 %265, i32 %264, i32 %22
  %267 = icmp eq i8 %260, 9
  br i1 %267, label %278, label %268

268:                                              ; preds = %253
  %269 = zext i32 %257 to i64
  %270 = zext i8 %260 to i32
  %271 = add nsw i32 %270, -1
  %272 = ashr i32 %271, 1
  %273 = shl i32 %256, %272
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %269
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = or i32 %273, %276
  br label %294

278:                                              ; preds = %253
  %279 = shl i32 %256, 4
  %280 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %258
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = or i32 %279, %282
  %284 = icmp ult i32 %283, 134217728
  br i1 %284, label %285, label %294

285:                                              ; preds = %278
  %286 = lshr i32 %266, 3
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i8, i8* %20, i64 %287
  %289 = bitcast i8* %288 to i32*
  %290 = load i32, i32* %289, align 1
  %291 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %290) #5, !srcloc !2
  %292 = and i32 %266, 7
  %293 = shl i32 %291, %292
  br i1 %265, label %253, label %294

294:                                              ; preds = %285, %278, %268
  %295 = phi i32 [ %277, %268 ], [ %283, %278 ], [ %283, %285 ]
  %296 = add i32 %295, -1
  br label %297

297:                                              ; preds = %241, %294
  %298 = phi i32 [ %266, %294 ], [ %249, %241 ]
  %299 = phi i32 [ %296, %294 ], [ %252, %241 ]
  %300 = getelementptr inbounds i8, i8* %9, i64 28
  %301 = bitcast i8* %300 to i32*
  store i32 %299, i32* %301, align 4
  %302 = lshr i32 %298, 3
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %20, i64 %303
  %305 = bitcast i8* %304 to i32*
  %306 = load i32, i32* %305, align 1
  %307 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %306) #5, !srcloc !2
  %308 = and i32 %298, 7
  %309 = shl i32 %307, %308
  %310 = and i32 %309, -1434451968
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %324, label %312

312:                                              ; preds = %297
  %313 = lshr i32 %309, 24
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  %318 = add i32 %298, %317
  %319 = icmp ugt i32 %22, %318
  %320 = select i1 %319, i32 %318, i32 %22
  %321 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %314
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i32
  br label %368

324:                                              ; preds = %297, %356
  %325 = phi i32 [ %364, %356 ], [ %309, %297 ]
  %326 = phi i32 [ %335, %356 ], [ %298, %297 ]
  %327 = phi i32 [ %354, %356 ], [ 1, %297 ]
  %328 = lshr i32 %325, 24
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = icmp ult i8 %331, 8
  %333 = select i1 %332, i8 %331, i8 8
  %334 = zext i8 %333 to i32
  %335 = add i32 %326, %334
  %336 = icmp ugt i32 %22, %335
  %337 = select i1 %336, i32 %335, i32 %22
  %338 = icmp eq i8 %331, 9
  br i1 %338, label %349, label %339

339:                                              ; preds = %324
  %340 = zext i32 %328 to i64
  %341 = zext i8 %331 to i32
  %342 = add nsw i32 %341, -1
  %343 = ashr i32 %342, 1
  %344 = shl i32 %327, %343
  %345 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %340
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = or i32 %344, %347
  br label %365

349:                                              ; preds = %324
  %350 = shl i32 %327, 4
  %351 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %329
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = or i32 %350, %353
  %355 = icmp ult i32 %354, 134217728
  br i1 %355, label %356, label %365

356:                                              ; preds = %349
  %357 = lshr i32 %337, 3
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i8, i8* %20, i64 %358
  %360 = bitcast i8* %359 to i32*
  %361 = load i32, i32* %360, align 1
  %362 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %361) #5, !srcloc !2
  %363 = and i32 %337, 7
  %364 = shl i32 %362, %363
  br i1 %336, label %324, label %365

365:                                              ; preds = %356, %349, %339
  %366 = phi i32 [ %348, %339 ], [ %354, %349 ], [ %354, %356 ]
  %367 = add i32 %366, -1
  br label %368

368:                                              ; preds = %312, %365
  %369 = phi i32 [ %337, %365 ], [ %320, %312 ]
  %370 = phi i32 [ %367, %365 ], [ %323, %312 ]
  %371 = icmp slt i32 %86, 2
  %372 = icmp ne i8* %3, null
  %373 = and i1 %372, %371
  br i1 %373, label %377, label %374

374:                                              ; preds = %368
  %375 = icmp sgt i32 %86, 2
  %376 = and i1 %372, %375
  br i1 %376, label %377, label %379

377:                                              ; preds = %374, %368
  %378 = phi i8* [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), %368 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %374 ]
  tail call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %3, i32 24, i8* %378) #4
  br label %379

379:                                              ; preds = %377, %374
  %380 = icmp ugt i32 %370, 20
  br i1 %380, label %2387, label %381

381:                                              ; preds = %379
  %382 = zext i32 %370 to i64
  %383 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = bitcast i8* %9 to i32*
  store i32 %384, i32* %385, align 4
  %386 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr inbounds i8, i8* %9, i64 4
  %389 = bitcast i8* %388 to i32*
  store i32 %387, i32* %389, align 4
  %390 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 2
  %391 = load i8, i8* %390, align 8
  %392 = getelementptr inbounds i8, i8* %9, i64 8
  store i8 %391, i8* %392, align 4
  %393 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 3
  %394 = load i8, i8* %393, align 1
  %395 = getelementptr inbounds i8, i8* %9, i64 9
  store i8 %394, i8* %395, align 1
  %396 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 4
  %397 = load i8, i8* %396, align 2
  %398 = getelementptr inbounds i8, i8* %9, i64 10
  store i8 %397, i8* %398, align 2
  %399 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 5
  %400 = load i8, i8* %399, align 1
  %401 = getelementptr inbounds i8, i8* %9, i64 11
  store i8 %400, i8* %401, align 1
  %402 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 6
  %403 = load i8, i8* %402, align 4
  %404 = getelementptr inbounds i8, i8* %9, i64 12
  store i8 %403, i8* %404, align 4
  %405 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 7
  %406 = load i16, i16* %405, align 2
  %407 = getelementptr inbounds i8, i8* %9, i64 14
  %408 = bitcast i8* %407 to i16*
  store i16 %406, i16* %408, align 2
  %409 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 8
  %410 = load i16, i16* %409, align 8
  %411 = getelementptr inbounds i8, i8* %9, i64 16
  %412 = bitcast i8* %411 to i16*
  store i16 %410, i16* %412, align 4
  %413 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 9
  %414 = load i16, i16* %413, align 2
  %415 = getelementptr inbounds i8, i8* %9, i64 18
  %416 = bitcast i8* %415 to i16*
  store i16 %414, i16* %416, align 2
  %417 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 10
  %418 = load i16, i16* %417, align 4
  %419 = getelementptr inbounds i8, i8* %9, i64 20
  %420 = bitcast i8* %419 to i16*
  store i16 %418, i16* %420, align 4
  %421 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 11
  %422 = load i8, i8* %421, align 2
  %423 = getelementptr inbounds i8, i8* %9, i64 22
  store i8 %422, i8* %423, align 2
  %424 = getelementptr inbounds [21 x %struct.dirac_source_params], [21 x %struct.dirac_source_params]* @dirac_source_parameters_defaults, i64 0, i64 %382, i32 12
  %425 = load i8, i8* %424, align 1
  %426 = getelementptr inbounds i8, i8* %9, i64 23
  store i8 %425, i8* %426, align 1
  %427 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %427) #4
  store i32 -1431655766, i32* %5, align 4
  %428 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %428) #4
  store i32 -1431655766, i32* %6, align 4
  %429 = lshr i32 %369, 3
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %20, i64 %430
  %432 = load i8, i8* %431, align 1
  %433 = and i32 %369, 7
  %434 = zext i8 %432 to i32
  %435 = shl i32 %434, %433
  %436 = icmp slt i32 %369, %22
  %437 = zext i1 %436 to i32
  %438 = add i32 %369, %437
  %439 = trunc i32 %435 to i8
  %440 = icmp sgt i8 %439, -1
  br i1 %440, label %580, label %441

441:                                              ; preds = %381
  %442 = lshr i32 %438, 3
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds i8, i8* %20, i64 %443
  %445 = bitcast i8* %444 to i32*
  %446 = load i32, i32* %445, align 1
  %447 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %446) #5, !srcloc !2
  %448 = and i32 %438, 7
  %449 = shl i32 %447, %448
  %450 = and i32 %449, -1434451968
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %464, label %452

452:                                              ; preds = %441
  %453 = lshr i32 %449, 24
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %454
  %456 = load i8, i8* %455, align 1
  %457 = zext i8 %456 to i32
  %458 = add i32 %438, %457
  %459 = icmp ugt i32 %22, %458
  %460 = select i1 %459, i32 %458, i32 %22
  %461 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %454
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  br label %508

464:                                              ; preds = %441, %496
  %465 = phi i32 [ %504, %496 ], [ %449, %441 ]
  %466 = phi i32 [ %475, %496 ], [ %438, %441 ]
  %467 = phi i32 [ %494, %496 ], [ 1, %441 ]
  %468 = lshr i32 %465, 24
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %469
  %471 = load i8, i8* %470, align 1
  %472 = icmp ult i8 %471, 8
  %473 = select i1 %472, i8 %471, i8 8
  %474 = zext i8 %473 to i32
  %475 = add i32 %466, %474
  %476 = icmp ugt i32 %22, %475
  %477 = select i1 %476, i32 %475, i32 %22
  %478 = icmp eq i8 %471, 9
  br i1 %478, label %489, label %479

479:                                              ; preds = %464
  %480 = zext i32 %468 to i64
  %481 = zext i8 %471 to i32
  %482 = add nsw i32 %481, -1
  %483 = ashr i32 %482, 1
  %484 = shl i32 %467, %483
  %485 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %480
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i32
  %488 = or i32 %484, %487
  br label %505

489:                                              ; preds = %464
  %490 = shl i32 %467, 4
  %491 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %469
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = or i32 %490, %493
  %495 = icmp ult i32 %494, 134217728
  br i1 %495, label %496, label %505

496:                                              ; preds = %489
  %497 = lshr i32 %477, 3
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds i8, i8* %20, i64 %498
  %500 = bitcast i8* %499 to i32*
  %501 = load i32, i32* %500, align 1
  %502 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %501) #5, !srcloc !2
  %503 = and i32 %477, 7
  %504 = shl i32 %502, %503
  br i1 %476, label %464, label %505

505:                                              ; preds = %496, %489, %479
  %506 = phi i32 [ %488, %479 ], [ %494, %489 ], [ %494, %496 ]
  %507 = add i32 %506, -1
  br label %508

508:                                              ; preds = %505, %452
  %509 = phi i32 [ %477, %505 ], [ %460, %452 ]
  %510 = phi i32 [ %507, %505 ], [ %463, %452 ]
  store i32 %510, i32* %385, align 4
  %511 = lshr i32 %509, 3
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds i8, i8* %20, i64 %512
  %514 = bitcast i8* %513 to i32*
  %515 = load i32, i32* %514, align 1
  %516 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %515) #5, !srcloc !2
  %517 = and i32 %509, 7
  %518 = shl i32 %516, %517
  %519 = and i32 %518, -1434451968
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %533, label %521

521:                                              ; preds = %508
  %522 = lshr i32 %518, 24
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = zext i8 %525 to i32
  %527 = add i32 %509, %526
  %528 = icmp ugt i32 %22, %527
  %529 = select i1 %528, i32 %527, i32 %22
  %530 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %523
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i32
  br label %577

533:                                              ; preds = %508, %565
  %534 = phi i32 [ %573, %565 ], [ %518, %508 ]
  %535 = phi i32 [ %544, %565 ], [ %509, %508 ]
  %536 = phi i32 [ %563, %565 ], [ 1, %508 ]
  %537 = lshr i32 %534, 24
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %538
  %540 = load i8, i8* %539, align 1
  %541 = icmp ult i8 %540, 8
  %542 = select i1 %541, i8 %540, i8 8
  %543 = zext i8 %542 to i32
  %544 = add i32 %535, %543
  %545 = icmp ugt i32 %22, %544
  %546 = select i1 %545, i32 %544, i32 %22
  %547 = icmp eq i8 %540, 9
  br i1 %547, label %558, label %548

548:                                              ; preds = %533
  %549 = zext i32 %537 to i64
  %550 = zext i8 %540 to i32
  %551 = add nsw i32 %550, -1
  %552 = ashr i32 %551, 1
  %553 = shl i32 %536, %552
  %554 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %549
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i32
  %557 = or i32 %553, %556
  br label %574

558:                                              ; preds = %533
  %559 = shl i32 %536, 4
  %560 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %538
  %561 = load i8, i8* %560, align 1
  %562 = zext i8 %561 to i32
  %563 = or i32 %559, %562
  %564 = icmp ult i32 %563, 134217728
  br i1 %564, label %565, label %574

565:                                              ; preds = %558
  %566 = lshr i32 %546, 3
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %20, i64 %567
  %569 = bitcast i8* %568 to i32*
  %570 = load i32, i32* %569, align 1
  %571 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %570) #5, !srcloc !2
  %572 = and i32 %546, 7
  %573 = shl i32 %571, %572
  br i1 %545, label %533, label %574

574:                                              ; preds = %565, %558, %548
  %575 = phi i32 [ %557, %548 ], [ %563, %558 ], [ %563, %565 ]
  %576 = add i32 %575, -1
  br label %577

577:                                              ; preds = %574, %521
  %578 = phi i32 [ %546, %574 ], [ %529, %521 ]
  %579 = phi i32 [ %576, %574 ], [ %532, %521 ]
  store i32 %579, i32* %389, align 4
  br label %580

580:                                              ; preds = %577, %381
  %581 = phi i32 [ %438, %381 ], [ %578, %577 ]
  %582 = lshr i32 %581, 3
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds i8, i8* %20, i64 %583
  %585 = load i8, i8* %584, align 1
  %586 = and i32 %581, 7
  %587 = zext i8 %585 to i32
  %588 = shl i32 %587, %586
  %589 = icmp slt i32 %581, %22
  %590 = zext i1 %589 to i32
  %591 = add i32 %581, %590
  %592 = trunc i32 %588 to i8
  %593 = icmp sgt i8 %592, -1
  br i1 %593, label %665, label %594

594:                                              ; preds = %580
  %595 = lshr i32 %591, 3
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds i8, i8* %20, i64 %596
  %598 = bitcast i8* %597 to i32*
  %599 = load i32, i32* %598, align 1
  %600 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %599) #5, !srcloc !2
  %601 = and i32 %591, 7
  %602 = shl i32 %600, %601
  %603 = and i32 %602, -1434451968
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %617, label %605

605:                                              ; preds = %594
  %606 = lshr i32 %602, 24
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %607
  %609 = load i8, i8* %608, align 1
  %610 = zext i8 %609 to i32
  %611 = add i32 %591, %610
  %612 = icmp ugt i32 %22, %611
  %613 = select i1 %612, i32 %611, i32 %22
  %614 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %607
  %615 = load i8, i8* %614, align 1
  %616 = zext i8 %615 to i32
  br label %661

617:                                              ; preds = %594, %649
  %618 = phi i32 [ %657, %649 ], [ %602, %594 ]
  %619 = phi i32 [ %628, %649 ], [ %591, %594 ]
  %620 = phi i32 [ %647, %649 ], [ 1, %594 ]
  %621 = lshr i32 %618, 24
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %622
  %624 = load i8, i8* %623, align 1
  %625 = icmp ult i8 %624, 8
  %626 = select i1 %625, i8 %624, i8 8
  %627 = zext i8 %626 to i32
  %628 = add i32 %619, %627
  %629 = icmp ugt i32 %22, %628
  %630 = select i1 %629, i32 %628, i32 %22
  %631 = icmp eq i8 %624, 9
  br i1 %631, label %642, label %632

632:                                              ; preds = %617
  %633 = zext i32 %621 to i64
  %634 = zext i8 %624 to i32
  %635 = add nsw i32 %634, -1
  %636 = ashr i32 %635, 1
  %637 = shl i32 %620, %636
  %638 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %633
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = or i32 %637, %640
  br label %658

642:                                              ; preds = %617
  %643 = shl i32 %620, 4
  %644 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %622
  %645 = load i8, i8* %644, align 1
  %646 = zext i8 %645 to i32
  %647 = or i32 %643, %646
  %648 = icmp ult i32 %647, 134217728
  br i1 %648, label %649, label %658

649:                                              ; preds = %642
  %650 = lshr i32 %630, 3
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds i8, i8* %20, i64 %651
  %653 = bitcast i8* %652 to i32*
  %654 = load i32, i32* %653, align 1
  %655 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %654) #5, !srcloc !2
  %656 = and i32 %630, 7
  %657 = shl i32 %655, %656
  br i1 %629, label %617, label %658

658:                                              ; preds = %649, %642, %632
  %659 = phi i32 [ %641, %632 ], [ %647, %642 ], [ %647, %649 ]
  %660 = add i32 %659, -1
  br label %661

661:                                              ; preds = %658, %605
  %662 = phi i32 [ %630, %658 ], [ %613, %605 ]
  %663 = phi i32 [ %660, %658 ], [ %616, %605 ]
  %664 = trunc i32 %663 to i8
  store i8 %664, i8* %392, align 4
  br label %665

665:                                              ; preds = %580, %661
  %666 = phi i32 [ %662, %661 ], [ %591, %580 ]
  %667 = phi i8 [ %664, %661 ], [ %391, %580 ]
  %668 = zext i8 %667 to i32
  %669 = icmp ugt i8 %667, 2
  br i1 %669, label %670, label %673

670:                                              ; preds = %665
  %671 = icmp eq i8* %3, null
  br i1 %671, label %2311, label %672

672:                                              ; preds = %670
  tail call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %3, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 %668) #4
  br label %2311

673:                                              ; preds = %665
  %674 = lshr i32 %666, 3
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds i8, i8* %20, i64 %675
  %677 = load i8, i8* %676, align 1
  %678 = and i32 %666, 7
  %679 = zext i8 %677 to i32
  %680 = shl i32 %679, %678
  %681 = icmp slt i32 %666, %22
  %682 = zext i1 %681 to i32
  %683 = add i32 %666, %682
  %684 = trunc i32 %680 to i8
  %685 = icmp sgt i8 %684, -1
  br i1 %685, label %757, label %686

686:                                              ; preds = %673
  %687 = lshr i32 %683, 3
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds i8, i8* %20, i64 %688
  %690 = bitcast i8* %689 to i32*
  %691 = load i32, i32* %690, align 1
  %692 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %691) #5, !srcloc !2
  %693 = and i32 %683, 7
  %694 = shl i32 %692, %693
  %695 = and i32 %694, -1434451968
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %709, label %697

697:                                              ; preds = %686
  %698 = lshr i32 %694, 24
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %699
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i32
  %703 = add i32 %683, %702
  %704 = icmp ugt i32 %22, %703
  %705 = select i1 %704, i32 %703, i32 %22
  %706 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %699
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i32
  br label %753

709:                                              ; preds = %686, %741
  %710 = phi i32 [ %749, %741 ], [ %694, %686 ]
  %711 = phi i32 [ %720, %741 ], [ %683, %686 ]
  %712 = phi i32 [ %739, %741 ], [ 1, %686 ]
  %713 = lshr i32 %710, 24
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %714
  %716 = load i8, i8* %715, align 1
  %717 = icmp ult i8 %716, 8
  %718 = select i1 %717, i8 %716, i8 8
  %719 = zext i8 %718 to i32
  %720 = add i32 %711, %719
  %721 = icmp ugt i32 %22, %720
  %722 = select i1 %721, i32 %720, i32 %22
  %723 = icmp eq i8 %716, 9
  br i1 %723, label %734, label %724

724:                                              ; preds = %709
  %725 = zext i32 %713 to i64
  %726 = zext i8 %716 to i32
  %727 = add nsw i32 %726, -1
  %728 = ashr i32 %727, 1
  %729 = shl i32 %712, %728
  %730 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %725
  %731 = load i8, i8* %730, align 1
  %732 = zext i8 %731 to i32
  %733 = or i32 %729, %732
  br label %750

734:                                              ; preds = %709
  %735 = shl i32 %712, 4
  %736 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %714
  %737 = load i8, i8* %736, align 1
  %738 = zext i8 %737 to i32
  %739 = or i32 %735, %738
  %740 = icmp ult i32 %739, 134217728
  br i1 %740, label %741, label %750

741:                                              ; preds = %734
  %742 = lshr i32 %722, 3
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds i8, i8* %20, i64 %743
  %745 = bitcast i8* %744 to i32*
  %746 = load i32, i32* %745, align 1
  %747 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %746) #5, !srcloc !2
  %748 = and i32 %722, 7
  %749 = shl i32 %747, %748
  br i1 %721, label %709, label %750

750:                                              ; preds = %741, %734, %724
  %751 = phi i32 [ %733, %724 ], [ %739, %734 ], [ %739, %741 ]
  %752 = add i32 %751, -1
  br label %753

753:                                              ; preds = %750, %697
  %754 = phi i32 [ %722, %750 ], [ %705, %697 ]
  %755 = phi i32 [ %752, %750 ], [ %708, %697 ]
  %756 = trunc i32 %755 to i8
  store i8 %756, i8* %395, align 1
  br label %757

757:                                              ; preds = %673, %753
  %758 = phi i32 [ %754, %753 ], [ %683, %673 ]
  %759 = phi i8 [ %756, %753 ], [ %394, %673 ]
  %760 = icmp ugt i8 %759, 1
  br i1 %760, label %2311, label %761

761:                                              ; preds = %757
  %762 = lshr i32 %758, 3
  %763 = zext i32 %762 to i64
  %764 = getelementptr inbounds i8, i8* %20, i64 %763
  %765 = load i8, i8* %764, align 1
  %766 = and i32 %758, 7
  %767 = zext i8 %765 to i32
  %768 = shl i32 %767, %766
  %769 = icmp slt i32 %758, %22
  %770 = zext i1 %769 to i32
  %771 = add i32 %758, %770
  %772 = trunc i32 %768 to i8
  %773 = icmp sgt i8 %772, -1
  br i1 %773, label %987, label %774

774:                                              ; preds = %761
  %775 = lshr i32 %771, 3
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds i8, i8* %20, i64 %776
  %778 = bitcast i8* %777 to i32*
  %779 = load i32, i32* %778, align 1
  %780 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %779) #5, !srcloc !2
  %781 = and i32 %771, 7
  %782 = shl i32 %780, %781
  %783 = and i32 %782, -1434451968
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %797, label %785

785:                                              ; preds = %774
  %786 = lshr i32 %782, 24
  %787 = zext i32 %786 to i64
  %788 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %787
  %789 = load i8, i8* %788, align 1
  %790 = zext i8 %789 to i32
  %791 = add i32 %771, %790
  %792 = icmp ugt i32 %22, %791
  %793 = select i1 %792, i32 %791, i32 %22
  %794 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %787
  %795 = load i8, i8* %794, align 1
  %796 = zext i8 %795 to i32
  br label %841

797:                                              ; preds = %774, %829
  %798 = phi i32 [ %837, %829 ], [ %782, %774 ]
  %799 = phi i32 [ %808, %829 ], [ %771, %774 ]
  %800 = phi i32 [ %827, %829 ], [ 1, %774 ]
  %801 = lshr i32 %798, 24
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %802
  %804 = load i8, i8* %803, align 1
  %805 = icmp ult i8 %804, 8
  %806 = select i1 %805, i8 %804, i8 8
  %807 = zext i8 %806 to i32
  %808 = add i32 %799, %807
  %809 = icmp ugt i32 %22, %808
  %810 = select i1 %809, i32 %808, i32 %22
  %811 = icmp eq i8 %804, 9
  br i1 %811, label %822, label %812

812:                                              ; preds = %797
  %813 = zext i32 %801 to i64
  %814 = zext i8 %804 to i32
  %815 = add nsw i32 %814, -1
  %816 = ashr i32 %815, 1
  %817 = shl i32 %800, %816
  %818 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %813
  %819 = load i8, i8* %818, align 1
  %820 = zext i8 %819 to i32
  %821 = or i32 %817, %820
  br label %838

822:                                              ; preds = %797
  %823 = shl i32 %800, 4
  %824 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %802
  %825 = load i8, i8* %824, align 1
  %826 = zext i8 %825 to i32
  %827 = or i32 %823, %826
  %828 = icmp ult i32 %827, 134217728
  br i1 %828, label %829, label %838

829:                                              ; preds = %822
  %830 = lshr i32 %810, 3
  %831 = zext i32 %830 to i64
  %832 = getelementptr inbounds i8, i8* %20, i64 %831
  %833 = bitcast i8* %832 to i32*
  %834 = load i32, i32* %833, align 1
  %835 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %834) #5, !srcloc !2
  %836 = and i32 %810, 7
  %837 = shl i32 %835, %836
  br i1 %809, label %797, label %838

838:                                              ; preds = %829, %822, %812
  %839 = phi i32 [ %821, %812 ], [ %827, %822 ], [ %827, %829 ]
  %840 = add i32 %839, -1
  br label %841

841:                                              ; preds = %838, %785
  %842 = phi i32 [ %810, %838 ], [ %793, %785 ]
  %843 = phi i32 [ %840, %838 ], [ %796, %785 ]
  %844 = trunc i32 %843 to i8
  store i8 %844, i8* %401, align 1
  %845 = and i32 %843, 255
  %846 = icmp ugt i32 %845, 10
  br i1 %846, label %2311, label %847

847:                                              ; preds = %841
  %848 = icmp eq i8 %844, 0
  br i1 %848, label %851, label %849

849:                                              ; preds = %847
  %850 = zext i32 %845 to i64
  br label %989

851:                                              ; preds = %847
  %852 = lshr i32 %842, 3
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds i8, i8* %20, i64 %853
  %855 = bitcast i8* %854 to i32*
  %856 = load i32, i32* %855, align 1
  %857 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %856) #5, !srcloc !2
  %858 = and i32 %842, 7
  %859 = shl i32 %857, %858
  %860 = and i32 %859, -1434451968
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %874, label %862

862:                                              ; preds = %851
  %863 = lshr i32 %859, 24
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %864
  %866 = load i8, i8* %865, align 1
  %867 = zext i8 %866 to i32
  %868 = add i32 %842, %867
  %869 = icmp ugt i32 %22, %868
  %870 = select i1 %869, i32 %868, i32 %22
  %871 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %864
  %872 = load i8, i8* %871, align 1
  %873 = zext i8 %872 to i32
  br label %918

874:                                              ; preds = %851, %906
  %875 = phi i32 [ %914, %906 ], [ %859, %851 ]
  %876 = phi i32 [ %885, %906 ], [ %842, %851 ]
  %877 = phi i32 [ %904, %906 ], [ 1, %851 ]
  %878 = lshr i32 %875, 24
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %879
  %881 = load i8, i8* %880, align 1
  %882 = icmp ult i8 %881, 8
  %883 = select i1 %882, i8 %881, i8 8
  %884 = zext i8 %883 to i32
  %885 = add i32 %876, %884
  %886 = icmp ugt i32 %22, %885
  %887 = select i1 %886, i32 %885, i32 %22
  %888 = icmp eq i8 %881, 9
  br i1 %888, label %899, label %889

889:                                              ; preds = %874
  %890 = zext i32 %878 to i64
  %891 = zext i8 %881 to i32
  %892 = add nsw i32 %891, -1
  %893 = ashr i32 %892, 1
  %894 = shl i32 %877, %893
  %895 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %890
  %896 = load i8, i8* %895, align 1
  %897 = zext i8 %896 to i32
  %898 = or i32 %894, %897
  br label %915

899:                                              ; preds = %874
  %900 = shl i32 %877, 4
  %901 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %879
  %902 = load i8, i8* %901, align 1
  %903 = zext i8 %902 to i32
  %904 = or i32 %900, %903
  %905 = icmp ult i32 %904, 134217728
  br i1 %905, label %906, label %915

906:                                              ; preds = %899
  %907 = lshr i32 %887, 3
  %908 = zext i32 %907 to i64
  %909 = getelementptr inbounds i8, i8* %20, i64 %908
  %910 = bitcast i8* %909 to i32*
  %911 = load i32, i32* %910, align 1
  %912 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %911) #5, !srcloc !2
  %913 = and i32 %887, 7
  %914 = shl i32 %912, %913
  br i1 %886, label %874, label %915

915:                                              ; preds = %906, %899, %889
  %916 = phi i32 [ %898, %889 ], [ %904, %899 ], [ %904, %906 ]
  %917 = add i32 %916, -1
  br label %918

918:                                              ; preds = %915, %862
  %919 = phi i32 [ %870, %862 ], [ %887, %915 ]
  %920 = phi i32 [ %873, %862 ], [ %917, %915 ]
  %921 = lshr i32 %919, 3
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds i8, i8* %20, i64 %922
  %924 = bitcast i8* %923 to i32*
  %925 = load i32, i32* %924, align 1
  %926 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %925) #5, !srcloc !2
  %927 = and i32 %919, 7
  %928 = shl i32 %926, %927
  %929 = and i32 %928, -1434451968
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %943, label %931

931:                                              ; preds = %918
  %932 = lshr i32 %928, 24
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %933
  %935 = load i8, i8* %934, align 1
  %936 = zext i8 %935 to i32
  %937 = add i32 %919, %936
  %938 = icmp ugt i32 %22, %937
  %939 = select i1 %938, i32 %937, i32 %22
  %940 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %933
  %941 = load i8, i8* %940, align 1
  %942 = zext i8 %941 to i32
  br label %1005

943:                                              ; preds = %918, %975
  %944 = phi i32 [ %983, %975 ], [ %928, %918 ]
  %945 = phi i32 [ %954, %975 ], [ %919, %918 ]
  %946 = phi i32 [ %973, %975 ], [ 1, %918 ]
  %947 = lshr i32 %944, 24
  %948 = zext i32 %947 to i64
  %949 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %948
  %950 = load i8, i8* %949, align 1
  %951 = icmp ult i8 %950, 8
  %952 = select i1 %951, i8 %950, i8 8
  %953 = zext i8 %952 to i32
  %954 = add i32 %945, %953
  %955 = icmp ugt i32 %22, %954
  %956 = select i1 %955, i32 %954, i32 %22
  %957 = icmp eq i8 %950, 9
  br i1 %957, label %968, label %958

958:                                              ; preds = %943
  %959 = zext i32 %947 to i64
  %960 = zext i8 %950 to i32
  %961 = add nsw i32 %960, -1
  %962 = ashr i32 %961, 1
  %963 = shl i32 %946, %962
  %964 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %959
  %965 = load i8, i8* %964, align 1
  %966 = zext i8 %965 to i32
  %967 = or i32 %963, %966
  br label %984

968:                                              ; preds = %943
  %969 = shl i32 %946, 4
  %970 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %948
  %971 = load i8, i8* %970, align 1
  %972 = zext i8 %971 to i32
  %973 = or i32 %969, %972
  %974 = icmp ult i32 %973, 134217728
  br i1 %974, label %975, label %984

975:                                              ; preds = %968
  %976 = lshr i32 %956, 3
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds i8, i8* %20, i64 %977
  %979 = bitcast i8* %978 to i32*
  %980 = load i32, i32* %979, align 1
  %981 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %980) #5, !srcloc !2
  %982 = and i32 %956, 7
  %983 = shl i32 %981, %982
  br i1 %955, label %943, label %984

984:                                              ; preds = %975, %968, %958
  %985 = phi i32 [ %967, %958 ], [ %973, %968 ], [ %973, %975 ]
  %986 = add i32 %985, -1
  br label %1005

987:                                              ; preds = %761
  %988 = zext i8 %400 to i64
  br label %989

989:                                              ; preds = %987, %849
  %990 = phi i64 [ %850, %849 ], [ %988, %987 ]
  %991 = phi i32 [ %842, %849 ], [ %771, %987 ]
  %992 = phi i8 [ %844, %849 ], [ %400, %987 ]
  %993 = icmp ult i8 %992, 9
  br i1 %993, label %994, label %999

994:                                              ; preds = %989
  %995 = getelementptr inbounds [0 x %struct.AVRational], [0 x %struct.AVRational]* @ff_mpeg12_frame_rate_tab, i64 0, i64 %990, i32 0
  %996 = load i32, i32* %995, align 4
  %997 = getelementptr inbounds [0 x %struct.AVRational], [0 x %struct.AVRational]* @ff_mpeg12_frame_rate_tab, i64 0, i64 %990, i32 1
  %998 = load i32, i32* %997, align 4
  br label %1005

999:                                              ; preds = %989
  %1000 = add nsw i64 %990, -9
  %1001 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* @dirac_frame_rate, i64 0, i64 %1000, i32 0
  %1002 = load i32, i32* %1001, align 8
  %1003 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* @dirac_frame_rate, i64 0, i64 %1000, i32 1
  %1004 = load i32, i32* %1003, align 4
  br label %1005

1005:                                             ; preds = %984, %931, %999, %994
  %1006 = phi i32 [ %991, %994 ], [ %991, %999 ], [ %956, %984 ], [ %939, %931 ]
  %1007 = phi i32 [ %996, %994 ], [ %1002, %999 ], [ %920, %984 ], [ %920, %931 ]
  %1008 = phi i32 [ %998, %994 ], [ %1004, %999 ], [ %986, %984 ], [ %942, %931 ]
  %1009 = getelementptr inbounds i8, i8* %9, i64 32
  %1010 = bitcast i8* %1009 to i32*
  store i32 %1007, i32* %1010, align 4
  %1011 = getelementptr inbounds i8, i8* %9, i64 36
  %1012 = bitcast i8* %1011 to i32*
  store i32 %1008, i32* %1012, align 4
  %1013 = lshr i32 %1006, 3
  %1014 = zext i32 %1013 to i64
  %1015 = getelementptr inbounds i8, i8* %20, i64 %1014
  %1016 = load i8, i8* %1015, align 1
  %1017 = and i32 %1006, 7
  %1018 = zext i8 %1016 to i32
  %1019 = shl i32 %1018, %1017
  %1020 = icmp slt i32 %1006, %22
  %1021 = zext i1 %1020 to i32
  %1022 = add i32 %1006, %1021
  %1023 = trunc i32 %1019 to i8
  %1024 = icmp sgt i8 %1023, -1
  br i1 %1024, label %1243, label %1025

1025:                                             ; preds = %1005
  %1026 = lshr i32 %1022, 3
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds i8, i8* %20, i64 %1027
  %1029 = bitcast i8* %1028 to i32*
  %1030 = load i32, i32* %1029, align 1
  %1031 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1030) #5, !srcloc !2
  %1032 = and i32 %1022, 7
  %1033 = shl i32 %1031, %1032
  %1034 = and i32 %1033, -1434451968
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1048, label %1036

1036:                                             ; preds = %1025
  %1037 = lshr i32 %1033, 24
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1038
  %1040 = load i8, i8* %1039, align 1
  %1041 = zext i8 %1040 to i32
  %1042 = add i32 %1022, %1041
  %1043 = icmp ugt i32 %22, %1042
  %1044 = select i1 %1043, i32 %1042, i32 %22
  %1045 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1038
  %1046 = load i8, i8* %1045, align 1
  %1047 = zext i8 %1046 to i32
  br label %1092

1048:                                             ; preds = %1025, %1080
  %1049 = phi i32 [ %1088, %1080 ], [ %1033, %1025 ]
  %1050 = phi i32 [ %1059, %1080 ], [ %1022, %1025 ]
  %1051 = phi i32 [ %1078, %1080 ], [ 1, %1025 ]
  %1052 = lshr i32 %1049, 24
  %1053 = zext i32 %1052 to i64
  %1054 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1053
  %1055 = load i8, i8* %1054, align 1
  %1056 = icmp ult i8 %1055, 8
  %1057 = select i1 %1056, i8 %1055, i8 8
  %1058 = zext i8 %1057 to i32
  %1059 = add i32 %1050, %1058
  %1060 = icmp ugt i32 %22, %1059
  %1061 = select i1 %1060, i32 %1059, i32 %22
  %1062 = icmp eq i8 %1055, 9
  br i1 %1062, label %1073, label %1063

1063:                                             ; preds = %1048
  %1064 = zext i32 %1052 to i64
  %1065 = zext i8 %1055 to i32
  %1066 = add nsw i32 %1065, -1
  %1067 = ashr i32 %1066, 1
  %1068 = shl i32 %1051, %1067
  %1069 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1064
  %1070 = load i8, i8* %1069, align 1
  %1071 = zext i8 %1070 to i32
  %1072 = or i32 %1068, %1071
  br label %1089

1073:                                             ; preds = %1048
  %1074 = shl i32 %1051, 4
  %1075 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1053
  %1076 = load i8, i8* %1075, align 1
  %1077 = zext i8 %1076 to i32
  %1078 = or i32 %1074, %1077
  %1079 = icmp ult i32 %1078, 134217728
  br i1 %1079, label %1080, label %1089

1080:                                             ; preds = %1073
  %1081 = lshr i32 %1061, 3
  %1082 = zext i32 %1081 to i64
  %1083 = getelementptr inbounds i8, i8* %20, i64 %1082
  %1084 = bitcast i8* %1083 to i32*
  %1085 = load i32, i32* %1084, align 1
  %1086 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1085) #5, !srcloc !2
  %1087 = and i32 %1061, 7
  %1088 = shl i32 %1086, %1087
  br i1 %1060, label %1048, label %1089

1089:                                             ; preds = %1080, %1073, %1063
  %1090 = phi i32 [ %1072, %1063 ], [ %1078, %1073 ], [ %1078, %1080 ]
  %1091 = add i32 %1090, -1
  br label %1092

1092:                                             ; preds = %1089, %1036
  %1093 = phi i32 [ %1061, %1089 ], [ %1044, %1036 ]
  %1094 = phi i32 [ %1091, %1089 ], [ %1047, %1036 ]
  %1095 = trunc i32 %1094 to i8
  store i8 %1095, i8* %404, align 4
  %1096 = and i32 %1094, 255
  %1097 = icmp ugt i32 %1096, 6
  br i1 %1097, label %2311, label %1098

1098:                                             ; preds = %1092
  %1099 = icmp eq i8 %1095, 0
  br i1 %1099, label %1100, label %1243

1100:                                             ; preds = %1098
  %1101 = lshr i32 %1093, 3
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds i8, i8* %20, i64 %1102
  %1104 = bitcast i8* %1103 to i32*
  %1105 = load i32, i32* %1104, align 1
  %1106 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1105) #5, !srcloc !2
  %1107 = and i32 %1093, 7
  %1108 = shl i32 %1106, %1107
  %1109 = and i32 %1108, -1434451968
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1123, label %1111

1111:                                             ; preds = %1100
  %1112 = lshr i32 %1108, 24
  %1113 = zext i32 %1112 to i64
  %1114 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1113
  %1115 = load i8, i8* %1114, align 1
  %1116 = zext i8 %1115 to i32
  %1117 = add i32 %1093, %1116
  %1118 = icmp ugt i32 %22, %1117
  %1119 = select i1 %1118, i32 %1117, i32 %22
  %1120 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1113
  %1121 = load i8, i8* %1120, align 1
  %1122 = zext i8 %1121 to i32
  br label %1167

1123:                                             ; preds = %1100, %1155
  %1124 = phi i32 [ %1163, %1155 ], [ %1108, %1100 ]
  %1125 = phi i32 [ %1134, %1155 ], [ %1093, %1100 ]
  %1126 = phi i32 [ %1153, %1155 ], [ 1, %1100 ]
  %1127 = lshr i32 %1124, 24
  %1128 = zext i32 %1127 to i64
  %1129 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1128
  %1130 = load i8, i8* %1129, align 1
  %1131 = icmp ult i8 %1130, 8
  %1132 = select i1 %1131, i8 %1130, i8 8
  %1133 = zext i8 %1132 to i32
  %1134 = add i32 %1125, %1133
  %1135 = icmp ugt i32 %22, %1134
  %1136 = select i1 %1135, i32 %1134, i32 %22
  %1137 = icmp eq i8 %1130, 9
  br i1 %1137, label %1148, label %1138

1138:                                             ; preds = %1123
  %1139 = zext i32 %1127 to i64
  %1140 = zext i8 %1130 to i32
  %1141 = add nsw i32 %1140, -1
  %1142 = ashr i32 %1141, 1
  %1143 = shl i32 %1126, %1142
  %1144 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1139
  %1145 = load i8, i8* %1144, align 1
  %1146 = zext i8 %1145 to i32
  %1147 = or i32 %1143, %1146
  br label %1164

1148:                                             ; preds = %1123
  %1149 = shl i32 %1126, 4
  %1150 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1128
  %1151 = load i8, i8* %1150, align 1
  %1152 = zext i8 %1151 to i32
  %1153 = or i32 %1149, %1152
  %1154 = icmp ult i32 %1153, 134217728
  br i1 %1154, label %1155, label %1164

1155:                                             ; preds = %1148
  %1156 = lshr i32 %1136, 3
  %1157 = zext i32 %1156 to i64
  %1158 = getelementptr inbounds i8, i8* %20, i64 %1157
  %1159 = bitcast i8* %1158 to i32*
  %1160 = load i32, i32* %1159, align 1
  %1161 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1160) #5, !srcloc !2
  %1162 = and i32 %1136, 7
  %1163 = shl i32 %1161, %1162
  br i1 %1135, label %1123, label %1164

1164:                                             ; preds = %1155, %1148, %1138
  %1165 = phi i32 [ %1147, %1138 ], [ %1153, %1148 ], [ %1153, %1155 ]
  %1166 = add i32 %1165, -1
  br label %1167

1167:                                             ; preds = %1164, %1111
  %1168 = phi i32 [ %1136, %1164 ], [ %1119, %1111 ]
  %1169 = phi i32 [ %1166, %1164 ], [ %1122, %1111 ]
  %1170 = getelementptr inbounds i8, i8* %9, i64 40
  %1171 = bitcast i8* %1170 to i32*
  store i32 %1169, i32* %1171, align 4
  %1172 = lshr i32 %1168, 3
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds i8, i8* %20, i64 %1173
  %1175 = bitcast i8* %1174 to i32*
  %1176 = load i32, i32* %1175, align 1
  %1177 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1176) #5, !srcloc !2
  %1178 = and i32 %1168, 7
  %1179 = shl i32 %1177, %1178
  %1180 = and i32 %1179, -1434451968
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1194, label %1182

1182:                                             ; preds = %1167
  %1183 = lshr i32 %1179, 24
  %1184 = zext i32 %1183 to i64
  %1185 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1184
  %1186 = load i8, i8* %1185, align 1
  %1187 = zext i8 %1186 to i32
  %1188 = add i32 %1168, %1187
  %1189 = icmp ugt i32 %22, %1188
  %1190 = select i1 %1189, i32 %1188, i32 %22
  %1191 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1184
  %1192 = load i8, i8* %1191, align 1
  %1193 = zext i8 %1192 to i32
  br label %1238

1194:                                             ; preds = %1167, %1226
  %1195 = phi i32 [ %1234, %1226 ], [ %1179, %1167 ]
  %1196 = phi i32 [ %1205, %1226 ], [ %1168, %1167 ]
  %1197 = phi i32 [ %1224, %1226 ], [ 1, %1167 ]
  %1198 = lshr i32 %1195, 24
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1199
  %1201 = load i8, i8* %1200, align 1
  %1202 = icmp ult i8 %1201, 8
  %1203 = select i1 %1202, i8 %1201, i8 8
  %1204 = zext i8 %1203 to i32
  %1205 = add i32 %1196, %1204
  %1206 = icmp ugt i32 %22, %1205
  %1207 = select i1 %1206, i32 %1205, i32 %22
  %1208 = icmp eq i8 %1201, 9
  br i1 %1208, label %1219, label %1209

1209:                                             ; preds = %1194
  %1210 = zext i32 %1198 to i64
  %1211 = zext i8 %1201 to i32
  %1212 = add nsw i32 %1211, -1
  %1213 = ashr i32 %1212, 1
  %1214 = shl i32 %1197, %1213
  %1215 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1210
  %1216 = load i8, i8* %1215, align 1
  %1217 = zext i8 %1216 to i32
  %1218 = or i32 %1214, %1217
  br label %1235

1219:                                             ; preds = %1194
  %1220 = shl i32 %1197, 4
  %1221 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1199
  %1222 = load i8, i8* %1221, align 1
  %1223 = zext i8 %1222 to i32
  %1224 = or i32 %1220, %1223
  %1225 = icmp ult i32 %1224, 134217728
  br i1 %1225, label %1226, label %1235

1226:                                             ; preds = %1219
  %1227 = lshr i32 %1207, 3
  %1228 = zext i32 %1227 to i64
  %1229 = getelementptr inbounds i8, i8* %20, i64 %1228
  %1230 = bitcast i8* %1229 to i32*
  %1231 = load i32, i32* %1230, align 1
  %1232 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1231) #5, !srcloc !2
  %1233 = and i32 %1207, 7
  %1234 = shl i32 %1232, %1233
  br i1 %1206, label %1194, label %1235

1235:                                             ; preds = %1226, %1219, %1209
  %1236 = phi i32 [ %1218, %1209 ], [ %1224, %1219 ], [ %1224, %1226 ]
  %1237 = add i32 %1236, -1
  br label %1238

1238:                                             ; preds = %1182, %1235
  %1239 = phi i32 [ %1207, %1235 ], [ %1190, %1182 ]
  %1240 = phi i32 [ %1237, %1235 ], [ %1193, %1182 ]
  %1241 = getelementptr inbounds i8, i8* %9, i64 44
  %1242 = bitcast i8* %1241 to i32*
  store i32 %1240, i32* %1242, align 4
  br label %1253

1243:                                             ; preds = %1005, %1098
  %1244 = phi i32 [ %1093, %1098 ], [ %1022, %1005 ]
  %1245 = phi i8 [ %1095, %1098 ], [ %403, %1005 ]
  %1246 = zext i8 %1245 to i64
  %1247 = getelementptr inbounds i8, i8* %9, i64 40
  %1248 = add nsw i64 %1246, -1
  %1249 = getelementptr inbounds [6 x %struct.AVRational], [6 x %struct.AVRational]* @dirac_preset_aspect_ratios, i64 0, i64 %1248
  %1250 = bitcast %struct.AVRational* %1249 to i64*
  %1251 = bitcast i8* %1247 to i64*
  %1252 = load i64, i64* %1250, align 8
  store i64 %1252, i64* %1251, align 4
  br label %1253

1253:                                             ; preds = %1238, %1243
  %1254 = phi i32 [ %1244, %1243 ], [ %1239, %1238 ]
  %1255 = lshr i32 %1254, 3
  %1256 = zext i32 %1255 to i64
  %1257 = getelementptr inbounds i8, i8* %20, i64 %1256
  %1258 = load i8, i8* %1257, align 1
  %1259 = and i32 %1254, 7
  %1260 = zext i8 %1258 to i32
  %1261 = shl i32 %1260, %1259
  %1262 = icmp slt i32 %1254, %22
  %1263 = zext i1 %1262 to i32
  %1264 = add i32 %1254, %1263
  %1265 = trunc i32 %1261 to i8
  %1266 = icmp sgt i8 %1265, -1
  br i1 %1266, label %1548, label %1267

1267:                                             ; preds = %1253
  %1268 = lshr i32 %1264, 3
  %1269 = zext i32 %1268 to i64
  %1270 = getelementptr inbounds i8, i8* %20, i64 %1269
  %1271 = bitcast i8* %1270 to i32*
  %1272 = load i32, i32* %1271, align 1
  %1273 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1272) #5, !srcloc !2
  %1274 = and i32 %1264, 7
  %1275 = shl i32 %1273, %1274
  %1276 = and i32 %1275, -1434451968
  %1277 = icmp eq i32 %1276, 0
  br i1 %1277, label %1290, label %1278

1278:                                             ; preds = %1267
  %1279 = lshr i32 %1275, 24
  %1280 = zext i32 %1279 to i64
  %1281 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1280
  %1282 = load i8, i8* %1281, align 1
  %1283 = zext i8 %1282 to i32
  %1284 = add i32 %1264, %1283
  %1285 = icmp ugt i32 %22, %1284
  %1286 = select i1 %1285, i32 %1284, i32 %22
  %1287 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1280
  %1288 = load i8, i8* %1287, align 1
  %1289 = zext i8 %1288 to i32
  br label %1334

1290:                                             ; preds = %1267, %1322
  %1291 = phi i32 [ %1330, %1322 ], [ %1275, %1267 ]
  %1292 = phi i32 [ %1301, %1322 ], [ %1264, %1267 ]
  %1293 = phi i32 [ %1320, %1322 ], [ 1, %1267 ]
  %1294 = lshr i32 %1291, 24
  %1295 = zext i32 %1294 to i64
  %1296 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1295
  %1297 = load i8, i8* %1296, align 1
  %1298 = icmp ult i8 %1297, 8
  %1299 = select i1 %1298, i8 %1297, i8 8
  %1300 = zext i8 %1299 to i32
  %1301 = add i32 %1292, %1300
  %1302 = icmp ugt i32 %22, %1301
  %1303 = select i1 %1302, i32 %1301, i32 %22
  %1304 = icmp eq i8 %1297, 9
  br i1 %1304, label %1315, label %1305

1305:                                             ; preds = %1290
  %1306 = zext i32 %1294 to i64
  %1307 = zext i8 %1297 to i32
  %1308 = add nsw i32 %1307, -1
  %1309 = ashr i32 %1308, 1
  %1310 = shl i32 %1293, %1309
  %1311 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1306
  %1312 = load i8, i8* %1311, align 1
  %1313 = zext i8 %1312 to i32
  %1314 = or i32 %1310, %1313
  br label %1331

1315:                                             ; preds = %1290
  %1316 = shl i32 %1293, 4
  %1317 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1295
  %1318 = load i8, i8* %1317, align 1
  %1319 = zext i8 %1318 to i32
  %1320 = or i32 %1316, %1319
  %1321 = icmp ult i32 %1320, 134217728
  br i1 %1321, label %1322, label %1331

1322:                                             ; preds = %1315
  %1323 = lshr i32 %1303, 3
  %1324 = zext i32 %1323 to i64
  %1325 = getelementptr inbounds i8, i8* %20, i64 %1324
  %1326 = bitcast i8* %1325 to i32*
  %1327 = load i32, i32* %1326, align 1
  %1328 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1327) #5, !srcloc !2
  %1329 = and i32 %1303, 7
  %1330 = shl i32 %1328, %1329
  br i1 %1302, label %1290, label %1331

1331:                                             ; preds = %1322, %1315, %1305
  %1332 = phi i32 [ %1314, %1305 ], [ %1320, %1315 ], [ %1320, %1322 ]
  %1333 = add i32 %1332, -1
  br label %1334

1334:                                             ; preds = %1331, %1278
  %1335 = phi i32 [ %1303, %1331 ], [ %1286, %1278 ]
  %1336 = phi i32 [ %1333, %1331 ], [ %1289, %1278 ]
  %1337 = trunc i32 %1336 to i16
  store i16 %1337, i16* %408, align 2
  %1338 = lshr i32 %1335, 3
  %1339 = zext i32 %1338 to i64
  %1340 = getelementptr inbounds i8, i8* %20, i64 %1339
  %1341 = bitcast i8* %1340 to i32*
  %1342 = load i32, i32* %1341, align 1
  %1343 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1342) #5, !srcloc !2
  %1344 = and i32 %1335, 7
  %1345 = shl i32 %1343, %1344
  %1346 = and i32 %1345, -1434451968
  %1347 = icmp eq i32 %1346, 0
  br i1 %1347, label %1360, label %1348

1348:                                             ; preds = %1334
  %1349 = lshr i32 %1345, 24
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1350
  %1352 = load i8, i8* %1351, align 1
  %1353 = zext i8 %1352 to i32
  %1354 = add i32 %1335, %1353
  %1355 = icmp ugt i32 %22, %1354
  %1356 = select i1 %1355, i32 %1354, i32 %22
  %1357 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1350
  %1358 = load i8, i8* %1357, align 1
  %1359 = zext i8 %1358 to i32
  br label %1404

1360:                                             ; preds = %1334, %1392
  %1361 = phi i32 [ %1400, %1392 ], [ %1345, %1334 ]
  %1362 = phi i32 [ %1371, %1392 ], [ %1335, %1334 ]
  %1363 = phi i32 [ %1390, %1392 ], [ 1, %1334 ]
  %1364 = lshr i32 %1361, 24
  %1365 = zext i32 %1364 to i64
  %1366 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1365
  %1367 = load i8, i8* %1366, align 1
  %1368 = icmp ult i8 %1367, 8
  %1369 = select i1 %1368, i8 %1367, i8 8
  %1370 = zext i8 %1369 to i32
  %1371 = add i32 %1362, %1370
  %1372 = icmp ugt i32 %22, %1371
  %1373 = select i1 %1372, i32 %1371, i32 %22
  %1374 = icmp eq i8 %1367, 9
  br i1 %1374, label %1385, label %1375

1375:                                             ; preds = %1360
  %1376 = zext i32 %1364 to i64
  %1377 = zext i8 %1367 to i32
  %1378 = add nsw i32 %1377, -1
  %1379 = ashr i32 %1378, 1
  %1380 = shl i32 %1363, %1379
  %1381 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1376
  %1382 = load i8, i8* %1381, align 1
  %1383 = zext i8 %1382 to i32
  %1384 = or i32 %1380, %1383
  br label %1401

1385:                                             ; preds = %1360
  %1386 = shl i32 %1363, 4
  %1387 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1365
  %1388 = load i8, i8* %1387, align 1
  %1389 = zext i8 %1388 to i32
  %1390 = or i32 %1386, %1389
  %1391 = icmp ult i32 %1390, 134217728
  br i1 %1391, label %1392, label %1401

1392:                                             ; preds = %1385
  %1393 = lshr i32 %1373, 3
  %1394 = zext i32 %1393 to i64
  %1395 = getelementptr inbounds i8, i8* %20, i64 %1394
  %1396 = bitcast i8* %1395 to i32*
  %1397 = load i32, i32* %1396, align 1
  %1398 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1397) #5, !srcloc !2
  %1399 = and i32 %1373, 7
  %1400 = shl i32 %1398, %1399
  br i1 %1372, label %1360, label %1401

1401:                                             ; preds = %1392, %1385, %1375
  %1402 = phi i32 [ %1384, %1375 ], [ %1390, %1385 ], [ %1390, %1392 ]
  %1403 = add i32 %1402, -1
  br label %1404

1404:                                             ; preds = %1401, %1348
  %1405 = phi i32 [ %1373, %1401 ], [ %1356, %1348 ]
  %1406 = phi i32 [ %1403, %1401 ], [ %1359, %1348 ]
  %1407 = trunc i32 %1406 to i16
  store i16 %1407, i16* %412, align 4
  %1408 = lshr i32 %1405, 3
  %1409 = zext i32 %1408 to i64
  %1410 = getelementptr inbounds i8, i8* %20, i64 %1409
  %1411 = bitcast i8* %1410 to i32*
  %1412 = load i32, i32* %1411, align 1
  %1413 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1412) #5, !srcloc !2
  %1414 = and i32 %1405, 7
  %1415 = shl i32 %1413, %1414
  %1416 = and i32 %1415, -1434451968
  %1417 = icmp eq i32 %1416, 0
  br i1 %1417, label %1430, label %1418

1418:                                             ; preds = %1404
  %1419 = lshr i32 %1415, 24
  %1420 = zext i32 %1419 to i64
  %1421 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1420
  %1422 = load i8, i8* %1421, align 1
  %1423 = zext i8 %1422 to i32
  %1424 = add i32 %1405, %1423
  %1425 = icmp ugt i32 %22, %1424
  %1426 = select i1 %1425, i32 %1424, i32 %22
  %1427 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1420
  %1428 = load i8, i8* %1427, align 1
  %1429 = zext i8 %1428 to i32
  br label %1474

1430:                                             ; preds = %1404, %1462
  %1431 = phi i32 [ %1470, %1462 ], [ %1415, %1404 ]
  %1432 = phi i32 [ %1441, %1462 ], [ %1405, %1404 ]
  %1433 = phi i32 [ %1460, %1462 ], [ 1, %1404 ]
  %1434 = lshr i32 %1431, 24
  %1435 = zext i32 %1434 to i64
  %1436 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1435
  %1437 = load i8, i8* %1436, align 1
  %1438 = icmp ult i8 %1437, 8
  %1439 = select i1 %1438, i8 %1437, i8 8
  %1440 = zext i8 %1439 to i32
  %1441 = add i32 %1432, %1440
  %1442 = icmp ugt i32 %22, %1441
  %1443 = select i1 %1442, i32 %1441, i32 %22
  %1444 = icmp eq i8 %1437, 9
  br i1 %1444, label %1455, label %1445

1445:                                             ; preds = %1430
  %1446 = zext i32 %1434 to i64
  %1447 = zext i8 %1437 to i32
  %1448 = add nsw i32 %1447, -1
  %1449 = ashr i32 %1448, 1
  %1450 = shl i32 %1433, %1449
  %1451 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1446
  %1452 = load i8, i8* %1451, align 1
  %1453 = zext i8 %1452 to i32
  %1454 = or i32 %1450, %1453
  br label %1471

1455:                                             ; preds = %1430
  %1456 = shl i32 %1433, 4
  %1457 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1435
  %1458 = load i8, i8* %1457, align 1
  %1459 = zext i8 %1458 to i32
  %1460 = or i32 %1456, %1459
  %1461 = icmp ult i32 %1460, 134217728
  br i1 %1461, label %1462, label %1471

1462:                                             ; preds = %1455
  %1463 = lshr i32 %1443, 3
  %1464 = zext i32 %1463 to i64
  %1465 = getelementptr inbounds i8, i8* %20, i64 %1464
  %1466 = bitcast i8* %1465 to i32*
  %1467 = load i32, i32* %1466, align 1
  %1468 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1467) #5, !srcloc !2
  %1469 = and i32 %1443, 7
  %1470 = shl i32 %1468, %1469
  br i1 %1442, label %1430, label %1471

1471:                                             ; preds = %1462, %1455, %1445
  %1472 = phi i32 [ %1454, %1445 ], [ %1460, %1455 ], [ %1460, %1462 ]
  %1473 = add i32 %1472, -1
  br label %1474

1474:                                             ; preds = %1471, %1418
  %1475 = phi i32 [ %1443, %1471 ], [ %1426, %1418 ]
  %1476 = phi i32 [ %1473, %1471 ], [ %1429, %1418 ]
  %1477 = trunc i32 %1476 to i16
  store i16 %1477, i16* %416, align 2
  %1478 = lshr i32 %1475, 3
  %1479 = zext i32 %1478 to i64
  %1480 = getelementptr inbounds i8, i8* %20, i64 %1479
  %1481 = bitcast i8* %1480 to i32*
  %1482 = load i32, i32* %1481, align 1
  %1483 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1482) #5, !srcloc !2
  %1484 = and i32 %1475, 7
  %1485 = shl i32 %1483, %1484
  %1486 = and i32 %1485, -1434451968
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1500, label %1488

1488:                                             ; preds = %1474
  %1489 = lshr i32 %1485, 24
  %1490 = zext i32 %1489 to i64
  %1491 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1490
  %1492 = load i8, i8* %1491, align 1
  %1493 = zext i8 %1492 to i32
  %1494 = add i32 %1475, %1493
  %1495 = icmp ugt i32 %22, %1494
  %1496 = select i1 %1495, i32 %1494, i32 %22
  %1497 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1490
  %1498 = load i8, i8* %1497, align 1
  %1499 = zext i8 %1498 to i32
  br label %1544

1500:                                             ; preds = %1474, %1532
  %1501 = phi i32 [ %1540, %1532 ], [ %1485, %1474 ]
  %1502 = phi i32 [ %1511, %1532 ], [ %1475, %1474 ]
  %1503 = phi i32 [ %1530, %1532 ], [ 1, %1474 ]
  %1504 = lshr i32 %1501, 24
  %1505 = zext i32 %1504 to i64
  %1506 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1505
  %1507 = load i8, i8* %1506, align 1
  %1508 = icmp ult i8 %1507, 8
  %1509 = select i1 %1508, i8 %1507, i8 8
  %1510 = zext i8 %1509 to i32
  %1511 = add i32 %1502, %1510
  %1512 = icmp ugt i32 %22, %1511
  %1513 = select i1 %1512, i32 %1511, i32 %22
  %1514 = icmp eq i8 %1507, 9
  br i1 %1514, label %1525, label %1515

1515:                                             ; preds = %1500
  %1516 = zext i32 %1504 to i64
  %1517 = zext i8 %1507 to i32
  %1518 = add nsw i32 %1517, -1
  %1519 = ashr i32 %1518, 1
  %1520 = shl i32 %1503, %1519
  %1521 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1516
  %1522 = load i8, i8* %1521, align 1
  %1523 = zext i8 %1522 to i32
  %1524 = or i32 %1520, %1523
  br label %1541

1525:                                             ; preds = %1500
  %1526 = shl i32 %1503, 4
  %1527 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1505
  %1528 = load i8, i8* %1527, align 1
  %1529 = zext i8 %1528 to i32
  %1530 = or i32 %1526, %1529
  %1531 = icmp ult i32 %1530, 134217728
  br i1 %1531, label %1532, label %1541

1532:                                             ; preds = %1525
  %1533 = lshr i32 %1513, 3
  %1534 = zext i32 %1533 to i64
  %1535 = getelementptr inbounds i8, i8* %20, i64 %1534
  %1536 = bitcast i8* %1535 to i32*
  %1537 = load i32, i32* %1536, align 1
  %1538 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1537) #5, !srcloc !2
  %1539 = and i32 %1513, 7
  %1540 = shl i32 %1538, %1539
  br i1 %1512, label %1500, label %1541

1541:                                             ; preds = %1532, %1525, %1515
  %1542 = phi i32 [ %1524, %1515 ], [ %1530, %1525 ], [ %1530, %1532 ]
  %1543 = add i32 %1542, -1
  br label %1544

1544:                                             ; preds = %1541, %1488
  %1545 = phi i32 [ %1513, %1541 ], [ %1496, %1488 ]
  %1546 = phi i32 [ %1543, %1541 ], [ %1499, %1488 ]
  %1547 = trunc i32 %1546 to i16
  store i16 %1547, i16* %420, align 4
  br label %1548

1548:                                             ; preds = %1544, %1253
  %1549 = phi i32 [ %1264, %1253 ], [ %1545, %1544 ]
  %1550 = lshr i32 %1549, 3
  %1551 = zext i32 %1550 to i64
  %1552 = getelementptr inbounds i8, i8* %20, i64 %1551
  %1553 = load i8, i8* %1552, align 1
  %1554 = and i32 %1549, 7
  %1555 = zext i8 %1553 to i32
  %1556 = shl i32 %1555, %1554
  %1557 = icmp slt i32 %1549, %22
  %1558 = zext i1 %1557 to i32
  %1559 = add i32 %1549, %1558
  %1560 = trunc i32 %1556 to i8
  %1561 = icmp sgt i8 %1560, -1
  br i1 %1561, label %1885, label %1562

1562:                                             ; preds = %1548
  %1563 = lshr i32 %1559, 3
  %1564 = zext i32 %1563 to i64
  %1565 = getelementptr inbounds i8, i8* %20, i64 %1564
  %1566 = bitcast i8* %1565 to i32*
  %1567 = load i32, i32* %1566, align 1
  %1568 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1567) #5, !srcloc !2
  %1569 = and i32 %1559, 7
  %1570 = shl i32 %1568, %1569
  %1571 = and i32 %1570, -1434451968
  %1572 = icmp eq i32 %1571, 0
  br i1 %1572, label %1585, label %1573

1573:                                             ; preds = %1562
  %1574 = lshr i32 %1570, 24
  %1575 = zext i32 %1574 to i64
  %1576 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1575
  %1577 = load i8, i8* %1576, align 1
  %1578 = zext i8 %1577 to i32
  %1579 = add i32 %1559, %1578
  %1580 = icmp ugt i32 %22, %1579
  %1581 = select i1 %1580, i32 %1579, i32 %22
  %1582 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1575
  %1583 = load i8, i8* %1582, align 1
  %1584 = zext i8 %1583 to i32
  br label %1629

1585:                                             ; preds = %1562, %1617
  %1586 = phi i32 [ %1625, %1617 ], [ %1570, %1562 ]
  %1587 = phi i32 [ %1596, %1617 ], [ %1559, %1562 ]
  %1588 = phi i32 [ %1615, %1617 ], [ 1, %1562 ]
  %1589 = lshr i32 %1586, 24
  %1590 = zext i32 %1589 to i64
  %1591 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1590
  %1592 = load i8, i8* %1591, align 1
  %1593 = icmp ult i8 %1592, 8
  %1594 = select i1 %1593, i8 %1592, i8 8
  %1595 = zext i8 %1594 to i32
  %1596 = add i32 %1587, %1595
  %1597 = icmp ugt i32 %22, %1596
  %1598 = select i1 %1597, i32 %1596, i32 %22
  %1599 = icmp eq i8 %1592, 9
  br i1 %1599, label %1610, label %1600

1600:                                             ; preds = %1585
  %1601 = zext i32 %1589 to i64
  %1602 = zext i8 %1592 to i32
  %1603 = add nsw i32 %1602, -1
  %1604 = ashr i32 %1603, 1
  %1605 = shl i32 %1588, %1604
  %1606 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1601
  %1607 = load i8, i8* %1606, align 1
  %1608 = zext i8 %1607 to i32
  %1609 = or i32 %1605, %1608
  br label %1626

1610:                                             ; preds = %1585
  %1611 = shl i32 %1588, 4
  %1612 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1590
  %1613 = load i8, i8* %1612, align 1
  %1614 = zext i8 %1613 to i32
  %1615 = or i32 %1611, %1614
  %1616 = icmp ult i32 %1615, 134217728
  br i1 %1616, label %1617, label %1626

1617:                                             ; preds = %1610
  %1618 = lshr i32 %1598, 3
  %1619 = zext i32 %1618 to i64
  %1620 = getelementptr inbounds i8, i8* %20, i64 %1619
  %1621 = bitcast i8* %1620 to i32*
  %1622 = load i32, i32* %1621, align 1
  %1623 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1622) #5, !srcloc !2
  %1624 = and i32 %1598, 7
  %1625 = shl i32 %1623, %1624
  br i1 %1597, label %1585, label %1626

1626:                                             ; preds = %1617, %1610, %1600
  %1627 = phi i32 [ %1609, %1600 ], [ %1615, %1610 ], [ %1615, %1617 ]
  %1628 = add i32 %1627, -1
  br label %1629

1629:                                             ; preds = %1626, %1573
  %1630 = phi i32 [ %1598, %1626 ], [ %1581, %1573 ]
  %1631 = phi i32 [ %1628, %1626 ], [ %1584, %1573 ]
  %1632 = trunc i32 %1631 to i8
  store i8 %1632, i8* %423, align 2
  %1633 = and i32 %1631, 255
  %1634 = icmp ugt i32 %1633, 4
  br i1 %1634, label %2311, label %1635

1635:                                             ; preds = %1629
  %1636 = icmp eq i8 %1632, 0
  br i1 %1636, label %1637, label %1885

1637:                                             ; preds = %1635
  %1638 = lshr i32 %1630, 3
  %1639 = zext i32 %1638 to i64
  %1640 = getelementptr inbounds i8, i8* %20, i64 %1639
  %1641 = bitcast i8* %1640 to i32*
  %1642 = load i32, i32* %1641, align 1
  %1643 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1642) #5, !srcloc !2
  %1644 = and i32 %1630, 7
  %1645 = shl i32 %1643, %1644
  %1646 = and i32 %1645, -1434451968
  %1647 = icmp eq i32 %1646, 0
  br i1 %1647, label %1660, label %1648

1648:                                             ; preds = %1637
  %1649 = lshr i32 %1645, 24
  %1650 = zext i32 %1649 to i64
  %1651 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1650
  %1652 = load i8, i8* %1651, align 1
  %1653 = zext i8 %1652 to i32
  %1654 = add i32 %1630, %1653
  %1655 = icmp ugt i32 %22, %1654
  %1656 = select i1 %1655, i32 %1654, i32 %22
  %1657 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1650
  %1658 = load i8, i8* %1657, align 1
  %1659 = zext i8 %1658 to i32
  br label %1704

1660:                                             ; preds = %1637, %1692
  %1661 = phi i32 [ %1700, %1692 ], [ %1645, %1637 ]
  %1662 = phi i32 [ %1671, %1692 ], [ %1630, %1637 ]
  %1663 = phi i32 [ %1690, %1692 ], [ 1, %1637 ]
  %1664 = lshr i32 %1661, 24
  %1665 = zext i32 %1664 to i64
  %1666 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1665
  %1667 = load i8, i8* %1666, align 1
  %1668 = icmp ult i8 %1667, 8
  %1669 = select i1 %1668, i8 %1667, i8 8
  %1670 = zext i8 %1669 to i32
  %1671 = add i32 %1662, %1670
  %1672 = icmp ugt i32 %22, %1671
  %1673 = select i1 %1672, i32 %1671, i32 %22
  %1674 = icmp eq i8 %1667, 9
  br i1 %1674, label %1685, label %1675

1675:                                             ; preds = %1660
  %1676 = zext i32 %1664 to i64
  %1677 = zext i8 %1667 to i32
  %1678 = add nsw i32 %1677, -1
  %1679 = ashr i32 %1678, 1
  %1680 = shl i32 %1663, %1679
  %1681 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1676
  %1682 = load i8, i8* %1681, align 1
  %1683 = zext i8 %1682 to i32
  %1684 = or i32 %1680, %1683
  br label %1701

1685:                                             ; preds = %1660
  %1686 = shl i32 %1663, 4
  %1687 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1665
  %1688 = load i8, i8* %1687, align 1
  %1689 = zext i8 %1688 to i32
  %1690 = or i32 %1686, %1689
  %1691 = icmp ult i32 %1690, 134217728
  br i1 %1691, label %1692, label %1701

1692:                                             ; preds = %1685
  %1693 = lshr i32 %1673, 3
  %1694 = zext i32 %1693 to i64
  %1695 = getelementptr inbounds i8, i8* %20, i64 %1694
  %1696 = bitcast i8* %1695 to i32*
  %1697 = load i32, i32* %1696, align 1
  %1698 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1697) #5, !srcloc !2
  %1699 = and i32 %1673, 7
  %1700 = shl i32 %1698, %1699
  br i1 %1672, label %1660, label %1701

1701:                                             ; preds = %1692, %1685, %1675
  %1702 = phi i32 [ %1684, %1675 ], [ %1690, %1685 ], [ %1690, %1692 ]
  %1703 = add i32 %1702, -1
  br label %1704

1704:                                             ; preds = %1701, %1648
  %1705 = phi i32 [ %1656, %1648 ], [ %1673, %1701 ]
  %1706 = phi i32 [ %1659, %1648 ], [ %1703, %1701 ]
  %1707 = lshr i32 %1705, 3
  %1708 = zext i32 %1707 to i64
  %1709 = getelementptr inbounds i8, i8* %20, i64 %1708
  %1710 = bitcast i8* %1709 to i32*
  %1711 = load i32, i32* %1710, align 1
  %1712 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1711) #5, !srcloc !2
  %1713 = and i32 %1705, 7
  %1714 = shl i32 %1712, %1713
  %1715 = and i32 %1714, -1434451968
  %1716 = icmp eq i32 %1715, 0
  br i1 %1716, label %1729, label %1717

1717:                                             ; preds = %1704
  %1718 = lshr i32 %1714, 24
  %1719 = zext i32 %1718 to i64
  %1720 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1719
  %1721 = load i8, i8* %1720, align 1
  %1722 = zext i8 %1721 to i32
  %1723 = add i32 %1705, %1722
  %1724 = icmp ugt i32 %22, %1723
  %1725 = select i1 %1724, i32 %1723, i32 %22
  %1726 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1719
  %1727 = load i8, i8* %1726, align 1
  %1728 = zext i8 %1727 to i32
  br label %1773

1729:                                             ; preds = %1704, %1761
  %1730 = phi i32 [ %1769, %1761 ], [ %1714, %1704 ]
  %1731 = phi i32 [ %1740, %1761 ], [ %1705, %1704 ]
  %1732 = phi i32 [ %1759, %1761 ], [ 1, %1704 ]
  %1733 = lshr i32 %1730, 24
  %1734 = zext i32 %1733 to i64
  %1735 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1734
  %1736 = load i8, i8* %1735, align 1
  %1737 = icmp ult i8 %1736, 8
  %1738 = select i1 %1737, i8 %1736, i8 8
  %1739 = zext i8 %1738 to i32
  %1740 = add i32 %1731, %1739
  %1741 = icmp ugt i32 %22, %1740
  %1742 = select i1 %1741, i32 %1740, i32 %22
  %1743 = icmp eq i8 %1736, 9
  br i1 %1743, label %1754, label %1744

1744:                                             ; preds = %1729
  %1745 = zext i32 %1733 to i64
  %1746 = zext i8 %1736 to i32
  %1747 = add nsw i32 %1746, -1
  %1748 = ashr i32 %1747, 1
  %1749 = shl i32 %1732, %1748
  %1750 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1745
  %1751 = load i8, i8* %1750, align 1
  %1752 = zext i8 %1751 to i32
  %1753 = or i32 %1749, %1752
  br label %1770

1754:                                             ; preds = %1729
  %1755 = shl i32 %1732, 4
  %1756 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1734
  %1757 = load i8, i8* %1756, align 1
  %1758 = zext i8 %1757 to i32
  %1759 = or i32 %1755, %1758
  %1760 = icmp ult i32 %1759, 134217728
  br i1 %1760, label %1761, label %1770

1761:                                             ; preds = %1754
  %1762 = lshr i32 %1742, 3
  %1763 = zext i32 %1762 to i64
  %1764 = getelementptr inbounds i8, i8* %20, i64 %1763
  %1765 = bitcast i8* %1764 to i32*
  %1766 = load i32, i32* %1765, align 1
  %1767 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1766) #5, !srcloc !2
  %1768 = and i32 %1742, 7
  %1769 = shl i32 %1767, %1768
  br i1 %1741, label %1729, label %1770

1770:                                             ; preds = %1761, %1754, %1744
  %1771 = phi i32 [ %1753, %1744 ], [ %1759, %1754 ], [ %1759, %1761 ]
  %1772 = add i32 %1771, -1
  br label %1773

1773:                                             ; preds = %1770, %1717
  %1774 = phi i32 [ %1725, %1717 ], [ %1742, %1770 ]
  %1775 = phi i32 [ %1728, %1717 ], [ %1772, %1770 ]
  %1776 = or i32 %1775, 1
  %1777 = tail call i32 @llvm.ctlz.i32(i32 %1776, i1 true) #4, !range !3
  %1778 = sub nuw nsw i32 32, %1777
  %1779 = lshr i32 %1774, 3
  %1780 = zext i32 %1779 to i64
  %1781 = getelementptr inbounds i8, i8* %20, i64 %1780
  %1782 = bitcast i8* %1781 to i32*
  %1783 = load i32, i32* %1782, align 1
  %1784 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1783) #5, !srcloc !2
  %1785 = and i32 %1774, 7
  %1786 = shl i32 %1784, %1785
  %1787 = and i32 %1786, -1434451968
  %1788 = icmp eq i32 %1787, 0
  br i1 %1788, label %1798, label %1789

1789:                                             ; preds = %1773
  %1790 = lshr i32 %1786, 24
  %1791 = zext i32 %1790 to i64
  %1792 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1791
  %1793 = load i8, i8* %1792, align 1
  %1794 = zext i8 %1793 to i32
  %1795 = add i32 %1774, %1794
  %1796 = icmp ugt i32 %22, %1795
  %1797 = select i1 %1796, i32 %1795, i32 %22
  br label %1829

1798:                                             ; preds = %1773, %1820
  %1799 = phi i32 [ %1828, %1820 ], [ %1786, %1773 ]
  %1800 = phi i32 [ %1809, %1820 ], [ %1774, %1773 ]
  %1801 = phi i32 [ %1818, %1820 ], [ 1, %1773 ]
  %1802 = lshr i32 %1799, 24
  %1803 = zext i32 %1802 to i64
  %1804 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1803
  %1805 = load i8, i8* %1804, align 1
  %1806 = icmp ult i8 %1805, 8
  %1807 = select i1 %1806, i8 %1805, i8 8
  %1808 = zext i8 %1807 to i32
  %1809 = add i32 %1800, %1808
  %1810 = icmp ugt i32 %22, %1809
  %1811 = select i1 %1810, i32 %1809, i32 %22
  %1812 = icmp eq i8 %1805, 9
  br i1 %1812, label %1813, label %1829

1813:                                             ; preds = %1798
  %1814 = shl i32 %1801, 4
  %1815 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1803
  %1816 = load i8, i8* %1815, align 1
  %1817 = zext i8 %1816 to i32
  %1818 = or i32 %1814, %1817
  %1819 = icmp ult i32 %1818, 134217728
  br i1 %1819, label %1820, label %1829

1820:                                             ; preds = %1813
  %1821 = lshr i32 %1811, 3
  %1822 = zext i32 %1821 to i64
  %1823 = getelementptr inbounds i8, i8* %20, i64 %1822
  %1824 = bitcast i8* %1823 to i32*
  %1825 = load i32, i32* %1824, align 1
  %1826 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1825) #5, !srcloc !2
  %1827 = and i32 %1811, 7
  %1828 = shl i32 %1826, %1827
  br i1 %1810, label %1798, label %1829

1829:                                             ; preds = %1820, %1813, %1798, %1789
  %1830 = phi i32 [ %1797, %1789 ], [ %1811, %1798 ], [ %22, %1820 ], [ %1811, %1813 ]
  %1831 = lshr i32 %1830, 3
  %1832 = zext i32 %1831 to i64
  %1833 = getelementptr inbounds i8, i8* %20, i64 %1832
  %1834 = bitcast i8* %1833 to i32*
  %1835 = load i32, i32* %1834, align 1
  %1836 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1835) #5, !srcloc !2
  %1837 = and i32 %1830, 7
  %1838 = shl i32 %1836, %1837
  %1839 = and i32 %1838, -1434451968
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1850, label %1841

1841:                                             ; preds = %1829
  %1842 = lshr i32 %1838, 24
  %1843 = zext i32 %1842 to i64
  %1844 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1843
  %1845 = load i8, i8* %1844, align 1
  %1846 = zext i8 %1845 to i32
  %1847 = add i32 %1830, %1846
  %1848 = icmp ugt i32 %22, %1847
  %1849 = select i1 %1848, i32 %1847, i32 %22
  br label %1881

1850:                                             ; preds = %1829, %1872
  %1851 = phi i32 [ %1880, %1872 ], [ %1838, %1829 ]
  %1852 = phi i32 [ %1861, %1872 ], [ %1830, %1829 ]
  %1853 = phi i32 [ %1870, %1872 ], [ 1, %1829 ]
  %1854 = lshr i32 %1851, 24
  %1855 = zext i32 %1854 to i64
  %1856 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1855
  %1857 = load i8, i8* %1856, align 1
  %1858 = icmp ult i8 %1857, 8
  %1859 = select i1 %1858, i8 %1857, i8 8
  %1860 = zext i8 %1859 to i32
  %1861 = add i32 %1852, %1860
  %1862 = icmp ugt i32 %22, %1861
  %1863 = select i1 %1862, i32 %1861, i32 %22
  %1864 = icmp eq i8 %1857, 9
  br i1 %1864, label %1865, label %1881

1865:                                             ; preds = %1850
  %1866 = shl i32 %1853, 4
  %1867 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1855
  %1868 = load i8, i8* %1867, align 1
  %1869 = zext i8 %1868 to i32
  %1870 = or i32 %1866, %1869
  %1871 = icmp ult i32 %1870, 134217728
  br i1 %1871, label %1872, label %1881

1872:                                             ; preds = %1865
  %1873 = lshr i32 %1863, 3
  %1874 = zext i32 %1873 to i64
  %1875 = getelementptr inbounds i8, i8* %20, i64 %1874
  %1876 = bitcast i8* %1875 to i32*
  %1877 = load i32, i32* %1876, align 1
  %1878 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1877) #5, !srcloc !2
  %1879 = and i32 %1863, 7
  %1880 = shl i32 %1878, %1879
  br i1 %1862, label %1850, label %1881

1881:                                             ; preds = %1850, %1865, %1872, %1841
  %1882 = phi i32 [ %1849, %1841 ], [ %1863, %1850 ], [ %22, %1872 ], [ %1863, %1865 ]
  %1883 = icmp eq i32 %1706, 0
  %1884 = select i1 %1883, i32 2, i32 1
  br label %1895

1885:                                             ; preds = %1548, %1635
  %1886 = phi i32 [ %1630, %1635 ], [ %1559, %1548 ]
  %1887 = phi i8 [ %1632, %1635 ], [ %422, %1548 ]
  %1888 = zext i8 %1887 to i64
  %1889 = add nsw i64 %1888, -1
  %1890 = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @pixel_range_presets, i64 0, i64 %1889, i32 0
  %1891 = load i8, i8* %1890, align 8
  %1892 = zext i8 %1891 to i32
  %1893 = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @pixel_range_presets, i64 0, i64 %1889, i32 1
  %1894 = load i32, i32* %1893, align 4
  br label %1895

1895:                                             ; preds = %1881, %1885
  %1896 = phi i32 [ %1884, %1881 ], [ %1894, %1885 ]
  %1897 = phi i32 [ %1882, %1881 ], [ %1886, %1885 ]
  %1898 = phi i8 [ 0, %1881 ], [ %1887, %1885 ]
  %1899 = phi i32 [ %1778, %1881 ], [ %1892, %1885 ]
  %1900 = getelementptr inbounds i8, i8* %9, i64 52
  %1901 = bitcast i8* %1900 to i32*
  store i32 %1896, i32* %1901, align 4
  %1902 = getelementptr inbounds i8, i8* %9, i64 76
  %1903 = bitcast i8* %1902 to i32*
  store i32 %1899, i32* %1903, align 4
  %1904 = icmp eq i8 %1898, 1
  %1905 = zext i1 %1904 to i8
  %1906 = add i8 %1898, %1905
  store i8 %1906, i8* %423, align 2
  %1907 = icmp ult i8 %1906, 2
  br i1 %1907, label %2311, label %1908

1908:                                             ; preds = %1895
  %1909 = zext i8 %1906 to i64
  %1910 = zext i8 %667 to i64
  %1911 = add nsw i64 %1909, -2
  %1912 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @dirac_pix_fmt, i64 0, i64 %1910, i64 %1911
  %1913 = load i32, i32* %1912, align 4
  %1914 = getelementptr inbounds i8, i8* %9, i64 48
  %1915 = bitcast i8* %1914 to i32*
  store i32 %1913, i32* %1915, align 4
  %1916 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %1913, i32* nonnull %5, i32* nonnull %6) #4
  %1917 = icmp eq i32 %1916, 0
  br i1 %1917, label %1918, label %2314

1918:                                             ; preds = %1908
  %1919 = load i32, i32* %385, align 4
  %1920 = load i32, i32* %5, align 4
  %1921 = shl nsw i32 -1, %1920
  %1922 = xor i32 %1921, -1
  %1923 = and i32 %1919, %1922
  %1924 = icmp eq i32 %1923, 0
  br i1 %1924, label %1925, label %1932

1925:                                             ; preds = %1918
  %1926 = load i32, i32* %389, align 4
  %1927 = load i32, i32* %6, align 4
  %1928 = shl nsw i32 -1, %1927
  %1929 = xor i32 %1928, -1
  %1930 = and i32 %1926, %1929
  %1931 = icmp eq i32 %1930, 0
  br i1 %1931, label %1935, label %1932

1932:                                             ; preds = %1925, %1918
  %1933 = icmp eq i8* %3, null
  br i1 %1933, label %2311, label %1934

1934:                                             ; preds = %1932
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %3, i32 16, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0)) #4
  br label %2311

1935:                                             ; preds = %1925
  %1936 = lshr i32 %1897, 3
  %1937 = zext i32 %1936 to i64
  %1938 = getelementptr inbounds i8, i8* %20, i64 %1937
  %1939 = load i8, i8* %1938, align 1
  %1940 = and i32 %1897, 7
  %1941 = zext i8 %1939 to i32
  %1942 = shl i32 %1941, %1940
  %1943 = icmp slt i32 %1897, %22
  %1944 = zext i1 %1943 to i32
  %1945 = add i32 %1897, %1944
  %1946 = trunc i32 %1942 to i8
  %1947 = icmp sgt i8 %1946, -1
  br i1 %1947, label %2296, label %1948

1948:                                             ; preds = %1935
  %1949 = lshr i32 %1945, 3
  %1950 = zext i32 %1949 to i64
  %1951 = getelementptr inbounds i8, i8* %20, i64 %1950
  %1952 = bitcast i8* %1951 to i32*
  %1953 = load i32, i32* %1952, align 1
  %1954 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1953) #5, !srcloc !2
  %1955 = and i32 %1945, 7
  %1956 = shl i32 %1954, %1955
  %1957 = and i32 %1956, -1434451968
  %1958 = icmp eq i32 %1957, 0
  br i1 %1958, label %1971, label %1959

1959:                                             ; preds = %1948
  %1960 = lshr i32 %1956, 24
  %1961 = zext i32 %1960 to i64
  %1962 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1961
  %1963 = load i8, i8* %1962, align 1
  %1964 = zext i8 %1963 to i32
  %1965 = add i32 %1945, %1964
  %1966 = icmp ugt i32 %22, %1965
  %1967 = select i1 %1966, i32 %1965, i32 %22
  %1968 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %1961
  %1969 = load i8, i8* %1968, align 1
  %1970 = zext i8 %1969 to i32
  br label %2015

1971:                                             ; preds = %1948, %2003
  %1972 = phi i32 [ %2011, %2003 ], [ %1956, %1948 ]
  %1973 = phi i32 [ %1982, %2003 ], [ %1945, %1948 ]
  %1974 = phi i32 [ %2001, %2003 ], [ 1, %1948 ]
  %1975 = lshr i32 %1972, 24
  %1976 = zext i32 %1975 to i64
  %1977 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %1976
  %1978 = load i8, i8* %1977, align 1
  %1979 = icmp ult i8 %1978, 8
  %1980 = select i1 %1979, i8 %1978, i8 8
  %1981 = zext i8 %1980 to i32
  %1982 = add i32 %1973, %1981
  %1983 = icmp ugt i32 %22, %1982
  %1984 = select i1 %1983, i32 %1982, i32 %22
  %1985 = icmp eq i8 %1978, 9
  br i1 %1985, label %1996, label %1986

1986:                                             ; preds = %1971
  %1987 = zext i32 %1975 to i64
  %1988 = zext i8 %1978 to i32
  %1989 = add nsw i32 %1988, -1
  %1990 = ashr i32 %1989, 1
  %1991 = shl i32 %1974, %1990
  %1992 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1987
  %1993 = load i8, i8* %1992, align 1
  %1994 = zext i8 %1993 to i32
  %1995 = or i32 %1991, %1994
  br label %2012

1996:                                             ; preds = %1971
  %1997 = shl i32 %1974, 4
  %1998 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %1976
  %1999 = load i8, i8* %1998, align 1
  %2000 = zext i8 %1999 to i32
  %2001 = or i32 %1997, %2000
  %2002 = icmp ult i32 %2001, 134217728
  br i1 %2002, label %2003, label %2012

2003:                                             ; preds = %1996
  %2004 = lshr i32 %1984, 3
  %2005 = zext i32 %2004 to i64
  %2006 = getelementptr inbounds i8, i8* %20, i64 %2005
  %2007 = bitcast i8* %2006 to i32*
  %2008 = load i32, i32* %2007, align 1
  %2009 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2008) #5, !srcloc !2
  %2010 = and i32 %1984, 7
  %2011 = shl i32 %2009, %2010
  br i1 %1983, label %1971, label %2012

2012:                                             ; preds = %2003, %1996, %1986
  %2013 = phi i32 [ %1995, %1986 ], [ %2001, %1996 ], [ %2001, %2003 ]
  %2014 = add i32 %2013, -1
  br label %2015

2015:                                             ; preds = %2012, %1959
  %2016 = phi i32 [ %1984, %2012 ], [ %1967, %1959 ]
  %2017 = phi i32 [ %2014, %2012 ], [ %1970, %1959 ]
  %2018 = trunc i32 %2017 to i8
  store i8 %2018, i8* %426, align 1
  %2019 = and i32 %2017, 255
  %2020 = icmp ugt i32 %2019, 4
  br i1 %2020, label %2311, label %2021

2021:                                             ; preds = %2015
  %2022 = zext i32 %2019 to i64
  %2023 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2022, i32 0
  %2024 = load i32, i32* %2023, align 4
  %2025 = getelementptr inbounds i8, i8* %9, i64 56
  %2026 = bitcast i8* %2025 to i32*
  store i32 %2024, i32* %2026, align 4
  %2027 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2022, i32 1
  %2028 = load i32, i32* %2027, align 4
  %2029 = getelementptr inbounds i8, i8* %9, i64 64
  %2030 = bitcast i8* %2029 to i32*
  store i32 %2028, i32* %2030, align 4
  %2031 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2022, i32 2
  %2032 = load i32, i32* %2031, align 4
  %2033 = getelementptr inbounds i8, i8* %9, i64 60
  %2034 = bitcast i8* %2033 to i32*
  store i32 %2032, i32* %2034, align 4
  %2035 = icmp eq i8 %2018, 0
  br i1 %2035, label %2036, label %2312

2036:                                             ; preds = %2021
  %2037 = lshr i32 %2016, 3
  %2038 = zext i32 %2037 to i64
  %2039 = getelementptr inbounds i8, i8* %20, i64 %2038
  %2040 = load i8, i8* %2039, align 1
  %2041 = and i32 %2016, 7
  %2042 = zext i8 %2040 to i32
  %2043 = shl i32 %2042, %2041
  %2044 = icmp slt i32 %2016, %22
  %2045 = zext i1 %2044 to i32
  %2046 = add i32 %2016, %2045
  %2047 = trunc i32 %2043 to i8
  %2048 = icmp sgt i8 %2047, -1
  br i1 %2048, label %2124, label %2049

2049:                                             ; preds = %2036
  %2050 = lshr i32 %2046, 3
  %2051 = zext i32 %2050 to i64
  %2052 = getelementptr inbounds i8, i8* %20, i64 %2051
  %2053 = bitcast i8* %2052 to i32*
  %2054 = load i32, i32* %2053, align 1
  %2055 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2054) #5, !srcloc !2
  %2056 = and i32 %2046, 7
  %2057 = shl i32 %2055, %2056
  %2058 = and i32 %2057, -1434451968
  %2059 = icmp eq i32 %2058, 0
  br i1 %2059, label %2072, label %2060

2060:                                             ; preds = %2049
  %2061 = lshr i32 %2057, 24
  %2062 = zext i32 %2061 to i64
  %2063 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2062
  %2064 = load i8, i8* %2063, align 1
  %2065 = zext i8 %2064 to i32
  %2066 = add i32 %2046, %2065
  %2067 = icmp ugt i32 %22, %2066
  %2068 = select i1 %2067, i32 %2066, i32 %22
  %2069 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %2062
  %2070 = load i8, i8* %2069, align 1
  %2071 = zext i8 %2070 to i32
  br label %2116

2072:                                             ; preds = %2049, %2104
  %2073 = phi i32 [ %2112, %2104 ], [ %2057, %2049 ]
  %2074 = phi i32 [ %2083, %2104 ], [ %2046, %2049 ]
  %2075 = phi i32 [ %2102, %2104 ], [ 1, %2049 ]
  %2076 = lshr i32 %2073, 24
  %2077 = zext i32 %2076 to i64
  %2078 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2077
  %2079 = load i8, i8* %2078, align 1
  %2080 = icmp ult i8 %2079, 8
  %2081 = select i1 %2080, i8 %2079, i8 8
  %2082 = zext i8 %2081 to i32
  %2083 = add i32 %2074, %2082
  %2084 = icmp ugt i32 %22, %2083
  %2085 = select i1 %2084, i32 %2083, i32 %22
  %2086 = icmp eq i8 %2079, 9
  br i1 %2086, label %2097, label %2087

2087:                                             ; preds = %2072
  %2088 = zext i32 %2076 to i64
  %2089 = zext i8 %2079 to i32
  %2090 = add nsw i32 %2089, -1
  %2091 = ashr i32 %2090, 1
  %2092 = shl i32 %2075, %2091
  %2093 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2088
  %2094 = load i8, i8* %2093, align 1
  %2095 = zext i8 %2094 to i32
  %2096 = or i32 %2092, %2095
  br label %2113

2097:                                             ; preds = %2072
  %2098 = shl i32 %2075, 4
  %2099 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2077
  %2100 = load i8, i8* %2099, align 1
  %2101 = zext i8 %2100 to i32
  %2102 = or i32 %2098, %2101
  %2103 = icmp ult i32 %2102, 134217728
  br i1 %2103, label %2104, label %2113

2104:                                             ; preds = %2097
  %2105 = lshr i32 %2085, 3
  %2106 = zext i32 %2105 to i64
  %2107 = getelementptr inbounds i8, i8* %20, i64 %2106
  %2108 = bitcast i8* %2107 to i32*
  %2109 = load i32, i32* %2108, align 1
  %2110 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2109) #5, !srcloc !2
  %2111 = and i32 %2085, 7
  %2112 = shl i32 %2110, %2111
  br i1 %2084, label %2072, label %2113

2113:                                             ; preds = %2104, %2097, %2087
  %2114 = phi i32 [ %2096, %2087 ], [ %2102, %2097 ], [ %2102, %2104 ]
  %2115 = add i32 %2114, -1
  br label %2116

2116:                                             ; preds = %2113, %2060
  %2117 = phi i32 [ %2085, %2113 ], [ %2068, %2060 ]
  %2118 = phi i32 [ %2115, %2113 ], [ %2071, %2060 ]
  %2119 = icmp ult i32 %2118, 3
  br i1 %2119, label %2120, label %2124

2120:                                             ; preds = %2116
  %2121 = sext i32 %2118 to i64
  %2122 = getelementptr inbounds [3 x i32], [3 x i32]* @dirac_primaries, i64 0, i64 %2121
  %2123 = load i32, i32* %2122, align 4
  store i32 %2123, i32* %2026, align 4
  br label %2124

2124:                                             ; preds = %2120, %2116, %2036
  %2125 = phi i32 [ %2046, %2036 ], [ %2117, %2116 ], [ %2117, %2120 ]
  %2126 = lshr i32 %2125, 3
  %2127 = zext i32 %2126 to i64
  %2128 = getelementptr inbounds i8, i8* %20, i64 %2127
  %2129 = load i8, i8* %2128, align 1
  %2130 = and i32 %2125, 7
  %2131 = zext i8 %2129 to i32
  %2132 = shl i32 %2131, %2130
  %2133 = icmp slt i32 %2125, %22
  %2134 = zext i1 %2133 to i32
  %2135 = add i32 %2125, %2134
  %2136 = trunc i32 %2132 to i8
  %2137 = icmp sgt i8 %2136, -1
  br i1 %2137, label %2210, label %2138

2138:                                             ; preds = %2124
  %2139 = lshr i32 %2135, 3
  %2140 = zext i32 %2139 to i64
  %2141 = getelementptr inbounds i8, i8* %20, i64 %2140
  %2142 = bitcast i8* %2141 to i32*
  %2143 = load i32, i32* %2142, align 1
  %2144 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2143) #5, !srcloc !2
  %2145 = and i32 %2135, 7
  %2146 = shl i32 %2144, %2145
  %2147 = and i32 %2146, -1434451968
  %2148 = icmp eq i32 %2147, 0
  br i1 %2148, label %2161, label %2149

2149:                                             ; preds = %2138
  %2150 = lshr i32 %2146, 24
  %2151 = zext i32 %2150 to i64
  %2152 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2151
  %2153 = load i8, i8* %2152, align 1
  %2154 = zext i8 %2153 to i32
  %2155 = add i32 %2135, %2154
  %2156 = icmp ugt i32 %22, %2155
  %2157 = select i1 %2156, i32 %2155, i32 %22
  %2158 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %2151
  %2159 = load i8, i8* %2158, align 1
  %2160 = zext i8 %2159 to i32
  br label %2205

2161:                                             ; preds = %2138, %2193
  %2162 = phi i32 [ %2201, %2193 ], [ %2146, %2138 ]
  %2163 = phi i32 [ %2172, %2193 ], [ %2135, %2138 ]
  %2164 = phi i32 [ %2191, %2193 ], [ 1, %2138 ]
  %2165 = lshr i32 %2162, 24
  %2166 = zext i32 %2165 to i64
  %2167 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2166
  %2168 = load i8, i8* %2167, align 1
  %2169 = icmp ult i8 %2168, 8
  %2170 = select i1 %2169, i8 %2168, i8 8
  %2171 = zext i8 %2170 to i32
  %2172 = add i32 %2163, %2171
  %2173 = icmp ugt i32 %22, %2172
  %2174 = select i1 %2173, i32 %2172, i32 %22
  %2175 = icmp eq i8 %2168, 9
  br i1 %2175, label %2186, label %2176

2176:                                             ; preds = %2161
  %2177 = zext i32 %2165 to i64
  %2178 = zext i8 %2168 to i32
  %2179 = add nsw i32 %2178, -1
  %2180 = ashr i32 %2179, 1
  %2181 = shl i32 %2164, %2180
  %2182 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2177
  %2183 = load i8, i8* %2182, align 1
  %2184 = zext i8 %2183 to i32
  %2185 = or i32 %2181, %2184
  br label %2202

2186:                                             ; preds = %2161
  %2187 = shl i32 %2164, 4
  %2188 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2166
  %2189 = load i8, i8* %2188, align 1
  %2190 = zext i8 %2189 to i32
  %2191 = or i32 %2187, %2190
  %2192 = icmp ult i32 %2191, 134217728
  br i1 %2192, label %2193, label %2202

2193:                                             ; preds = %2186
  %2194 = lshr i32 %2174, 3
  %2195 = zext i32 %2194 to i64
  %2196 = getelementptr inbounds i8, i8* %20, i64 %2195
  %2197 = bitcast i8* %2196 to i32*
  %2198 = load i32, i32* %2197, align 1
  %2199 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2198) #5, !srcloc !2
  %2200 = and i32 %2174, 7
  %2201 = shl i32 %2199, %2200
  br i1 %2173, label %2161, label %2202

2202:                                             ; preds = %2193, %2186, %2176
  %2203 = phi i32 [ %2185, %2176 ], [ %2191, %2186 ], [ %2191, %2193 ]
  %2204 = add i32 %2203, -1
  br label %2205

2205:                                             ; preds = %2202, %2149
  %2206 = phi i32 [ %2174, %2202 ], [ %2157, %2149 ]
  %2207 = phi i32 [ %2204, %2202 ], [ %2160, %2149 ]
  switch i32 %2207, label %2210 [
    i32 0, label %2208
    i32 1, label %2209
  ]

2208:                                             ; preds = %2205
  store i32 1, i32* %2030, align 4
  br label %2210

2209:                                             ; preds = %2205
  store i32 5, i32* %2030, align 4
  br label %2210

2210:                                             ; preds = %2209, %2208, %2205, %2124
  %2211 = phi i32 [ %2135, %2124 ], [ %2206, %2205 ], [ %2206, %2209 ], [ %2206, %2208 ]
  %2212 = lshr i32 %2211, 3
  %2213 = zext i32 %2212 to i64
  %2214 = getelementptr inbounds i8, i8* %20, i64 %2213
  %2215 = load i8, i8* %2214, align 1
  %2216 = and i32 %2211, 7
  %2217 = zext i8 %2215 to i32
  %2218 = shl i32 %2217, %2216
  %2219 = icmp slt i32 %2211, %22
  %2220 = zext i1 %2219 to i32
  %2221 = add i32 %2211, %2220
  %2222 = trunc i32 %2218 to i8
  %2223 = icmp sgt i8 %2222, -1
  br i1 %2223, label %2312, label %2224

2224:                                             ; preds = %2210
  %2225 = lshr i32 %2221, 3
  %2226 = zext i32 %2225 to i64
  %2227 = getelementptr inbounds i8, i8* %20, i64 %2226
  %2228 = bitcast i8* %2227 to i32*
  %2229 = load i32, i32* %2228, align 1
  %2230 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2229) #5, !srcloc !2
  %2231 = and i32 %2221, 7
  %2232 = shl i32 %2230, %2231
  %2233 = and i32 %2232, -1434451968
  %2234 = icmp eq i32 %2233, 0
  br i1 %2234, label %2247, label %2235

2235:                                             ; preds = %2224
  %2236 = lshr i32 %2232, 24
  %2237 = zext i32 %2236 to i64
  %2238 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2237
  %2239 = load i8, i8* %2238, align 1
  %2240 = zext i8 %2239 to i32
  %2241 = add i32 %2221, %2240
  %2242 = icmp ugt i32 %22, %2241
  %2243 = select i1 %2242, i32 %2241, i32 %22
  %2244 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %2237
  %2245 = load i8, i8* %2244, align 1
  %2246 = zext i8 %2245 to i32
  br label %2291

2247:                                             ; preds = %2224, %2279
  %2248 = phi i32 [ %2287, %2279 ], [ %2232, %2224 ]
  %2249 = phi i32 [ %2258, %2279 ], [ %2221, %2224 ]
  %2250 = phi i32 [ %2277, %2279 ], [ 1, %2224 ]
  %2251 = lshr i32 %2248, 24
  %2252 = zext i32 %2251 to i64
  %2253 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2252
  %2254 = load i8, i8* %2253, align 1
  %2255 = icmp ult i8 %2254, 8
  %2256 = select i1 %2255, i8 %2254, i8 8
  %2257 = zext i8 %2256 to i32
  %2258 = add i32 %2249, %2257
  %2259 = icmp ugt i32 %22, %2258
  %2260 = select i1 %2259, i32 %2258, i32 %22
  %2261 = icmp eq i8 %2254, 9
  br i1 %2261, label %2272, label %2262

2262:                                             ; preds = %2247
  %2263 = zext i32 %2251 to i64
  %2264 = zext i8 %2254 to i32
  %2265 = add nsw i32 %2264, -1
  %2266 = ashr i32 %2265, 1
  %2267 = shl i32 %2250, %2266
  %2268 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2263
  %2269 = load i8, i8* %2268, align 1
  %2270 = zext i8 %2269 to i32
  %2271 = or i32 %2267, %2270
  br label %2288

2272:                                             ; preds = %2247
  %2273 = shl i32 %2250, 4
  %2274 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2252
  %2275 = load i8, i8* %2274, align 1
  %2276 = zext i8 %2275 to i32
  %2277 = or i32 %2273, %2276
  %2278 = icmp ult i32 %2277, 134217728
  br i1 %2278, label %2279, label %2288

2279:                                             ; preds = %2272
  %2280 = lshr i32 %2260, 3
  %2281 = zext i32 %2280 to i64
  %2282 = getelementptr inbounds i8, i8* %20, i64 %2281
  %2283 = bitcast i8* %2282 to i32*
  %2284 = load i32, i32* %2283, align 1
  %2285 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2284) #5, !srcloc !2
  %2286 = and i32 %2260, 7
  %2287 = shl i32 %2285, %2286
  br i1 %2259, label %2247, label %2288

2288:                                             ; preds = %2279, %2272, %2262
  %2289 = phi i32 [ %2271, %2262 ], [ %2277, %2272 ], [ %2277, %2279 ]
  %2290 = add i32 %2289, -1
  br label %2291

2291:                                             ; preds = %2288, %2235
  %2292 = phi i32 [ %2260, %2288 ], [ %2243, %2235 ]
  %2293 = phi i32 [ %2290, %2288 ], [ %2246, %2235 ]
  %2294 = icmp eq i32 %2293, 0
  br i1 %2294, label %2295, label %2312

2295:                                             ; preds = %2291
  store i32 1, i32* %2034, align 4
  br label %2312

2296:                                             ; preds = %1935
  %2297 = load i8, i8* %426, align 1
  %2298 = zext i8 %2297 to i64
  %2299 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2298, i32 0
  %2300 = load i32, i32* %2299, align 4
  %2301 = getelementptr inbounds i8, i8* %9, i64 56
  %2302 = bitcast i8* %2301 to i32*
  store i32 %2300, i32* %2302, align 4
  %2303 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2298, i32 1
  %2304 = load i32, i32* %2303, align 4
  %2305 = getelementptr inbounds i8, i8* %9, i64 64
  %2306 = bitcast i8* %2305 to i32*
  store i32 %2304, i32* %2306, align 4
  %2307 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @dirac_color_presets, i64 0, i64 %2298, i32 2
  %2308 = load i32, i32* %2307, align 4
  %2309 = getelementptr inbounds i8, i8* %9, i64 60
  %2310 = bitcast i8* %2309 to i32*
  store i32 %2308, i32* %2310, align 4
  br label %2312

2311:                                             ; preds = %670, %672, %757, %841, %1092, %1629, %1895, %1932, %1934, %2015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %428) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %427) #4
  br label %2387

2312:                                             ; preds = %2291, %2210, %2021, %2295, %2296
  %2313 = phi i32 [ %2016, %2021 ], [ %2292, %2291 ], [ %2292, %2295 ], [ %2221, %2210 ], [ %1945, %2296 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %428) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %427) #4
  br label %2316

2314:                                             ; preds = %1908
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %428) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %427) #4
  %2315 = icmp slt i32 %1916, 0
  br i1 %2315, label %2387, label %2316

2316:                                             ; preds = %2312, %2314
  %2317 = phi i32 [ %2313, %2312 ], [ %1897, %2314 ]
  %2318 = lshr i32 %2317, 3
  %2319 = zext i32 %2318 to i64
  %2320 = getelementptr inbounds i8, i8* %20, i64 %2319
  %2321 = bitcast i8* %2320 to i32*
  %2322 = load i32, i32* %2321, align 1
  %2323 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2322) #5, !srcloc !2
  %2324 = and i32 %2317, 7
  %2325 = shl i32 %2323, %2324
  %2326 = and i32 %2325, -1434451968
  %2327 = icmp eq i32 %2326, 0
  br i1 %2327, label %2334, label %2328

2328:                                             ; preds = %2316
  %2329 = lshr i32 %2325, 24
  %2330 = zext i32 %2329 to i64
  %2331 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %2330
  %2332 = load i8, i8* %2331, align 1
  %2333 = zext i8 %2332 to i32
  br label %2378

2334:                                             ; preds = %2316, %2366
  %2335 = phi i32 [ %2374, %2366 ], [ %2325, %2316 ]
  %2336 = phi i32 [ %2345, %2366 ], [ %2317, %2316 ]
  %2337 = phi i32 [ %2364, %2366 ], [ 1, %2316 ]
  %2338 = lshr i32 %2335, 24
  %2339 = zext i32 %2338 to i64
  %2340 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %2339
  %2341 = load i8, i8* %2340, align 1
  %2342 = icmp ult i8 %2341, 8
  %2343 = select i1 %2342, i8 %2341, i8 8
  %2344 = zext i8 %2343 to i32
  %2345 = add i32 %2336, %2344
  %2346 = icmp ugt i32 %22, %2345
  %2347 = select i1 %2346, i32 %2345, i32 %22
  %2348 = icmp eq i8 %2341, 9
  br i1 %2348, label %2359, label %2349

2349:                                             ; preds = %2334
  %2350 = zext i32 %2338 to i64
  %2351 = zext i8 %2341 to i32
  %2352 = add nsw i32 %2351, -1
  %2353 = ashr i32 %2352, 1
  %2354 = shl i32 %2337, %2353
  %2355 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2350
  %2356 = load i8, i8* %2355, align 1
  %2357 = zext i8 %2356 to i32
  %2358 = or i32 %2354, %2357
  br label %2375

2359:                                             ; preds = %2334
  %2360 = shl i32 %2337, 4
  %2361 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %2339
  %2362 = load i8, i8* %2361, align 1
  %2363 = zext i8 %2362 to i32
  %2364 = or i32 %2360, %2363
  %2365 = icmp ult i32 %2364, 134217728
  br i1 %2365, label %2366, label %2375

2366:                                             ; preds = %2359
  %2367 = lshr i32 %2347, 3
  %2368 = zext i32 %2367 to i64
  %2369 = getelementptr inbounds i8, i8* %20, i64 %2368
  %2370 = bitcast i8* %2369 to i32*
  %2371 = load i32, i32* %2370, align 1
  %2372 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2371) #5, !srcloc !2
  %2373 = and i32 %2347, 7
  %2374 = shl i32 %2372, %2373
  br i1 %2346, label %2334, label %2375

2375:                                             ; preds = %2366, %2359, %2349
  %2376 = phi i32 [ %2358, %2349 ], [ %2364, %2359 ], [ %2364, %2366 ]
  %2377 = add i32 %2376, -1
  br label %2378

2378:                                             ; preds = %2328, %2375
  %2379 = phi i32 [ %2333, %2328 ], [ %2377, %2375 ]
  %2380 = icmp eq i32 %2379, 0
  br i1 %2380, label %2383, label %2381

2381:                                             ; preds = %2378
  br i1 %372, label %2382, label %2387

2382:                                             ; preds = %2381
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %3, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 %2379) #4
  br label %2387

2383:                                             ; preds = %2378
  %2384 = bitcast %struct.AVDiracSeqHeader** %7 to i64*
  %2385 = load i64, i64* %2384, align 8
  %2386 = bitcast %struct.AVDiracSeqHeader** %0 to i64*
  store i64 %2385, i64* %2386, align 8
  br label %2389

2387:                                             ; preds = %12, %2311, %2381, %2382, %379, %2314
  %2388 = phi i32 [ -1094995529, %12 ], [ %1916, %2314 ], [ -1094995529, %379 ], [ -1094995529, %2382 ], [ -1094995529, %2381 ], [ -1094995529, %2311 ]
  call void @av_freep(i8* nonnull %8) #4
  store %struct.AVDiracSeqHeader* null, %struct.AVDiracSeqHeader** %0, align 8
  br label %2389

2389:                                             ; preds = %4, %2387, %2383
  %2390 = phi i32 [ %2388, %2387 ], [ 0, %2383 ], [ -12, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  ret i32 %2390
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

declare i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32*, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1835014}
!3 = !{i32 0, i32 32}
