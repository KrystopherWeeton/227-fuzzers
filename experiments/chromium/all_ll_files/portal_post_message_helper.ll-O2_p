; ModuleID = '../../third_party/blink/renderer/core/html/portal/portal_post_message_helper.cc'
source_filename = "../../third_party/blink/renderer/core/html/portal/portal_post_message_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.195" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.177" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::BlinkTransferableMessage" = type <{ %"struct.blink::BlinkCloneableMessage", %"class.WTF::Vector.281", %"class.mojo::InlinedStructPtr", i8, [7 x i8] }>
%"struct.blink::BlinkCloneableMessage" = type { %class.scoped_refptr.200, %class.scoped_refptr.254, %"struct.v8_inspector::V8StackTraceId", %"class.absl::optional.276" }
%class.scoped_refptr.200 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.206", i64, %"class.WTF::Vector.210", %"class.WTF::Vector.215", %"class.WTF::Vector.221", %"class.WTF::Vector.239", %class.scoped_refptr.250, %"class.WTF::HashMap.255", %"class.WTF::Vector.260", %"class.WTF::Vector.210", %"class.WTF::Vector.265", %"class.WTF::HashMap.270", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.201" }
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i32 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { i8* }
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217", [8 x i8] }
%"class.WTF::VectorBufferBase.217" = type { %class.scoped_refptr.218*, i32, i32 }
%class.scoped_refptr.218 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.242", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.242" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.250 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.251", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.254 }
%"class.WTF::RefCounted.251" = type { %"class.base::RefCounted.252" }
%"class.base::RefCounted.252" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.194 }
%class.scoped_refptr.194 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::HashMap.255" = type { %"class.WTF::HashTable.256" }
%"class.WTF::HashTable.256" = type <{ %"struct.WTF::KeyValuePair.259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.259" = type opaque
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212", [16 x i8] }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.270" = type { %"class.WTF::HashTable.271" }
%"class.WTF::HashTable.271" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type { i8**, %"class.std::__1::unique_ptr.621" }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%class.scoped_refptr.254 = type { %"class.blink::SecurityOrigin"* }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.275", i8, [7 x i8] }>
%"struct.std::__1::pair.275" = type { i64, i64 }
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"class.base::UnguessableToken" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::UserActivationSnapshot", i32 }
%"class.blink::mojom::blink::UserActivationSnapshot" = type { i8, i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.175" }
%"class.blink::Persistent.175" = type { %"class.blink::PersistentBase.176" }
%"class.blink::PersistentBase.176" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.182", %class.scoped_refptr.185 }
%"class.blink::TraceWrapperV8Reference.182" = type { %"class.v8::TracedReference.183" }
%"class.v8::TracedReference.183" = type { %"class.v8::BasicTracedReference.184" }
%"class.v8::BasicTracedReference.184" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.185 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::PostMessageOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.blink::HeapVector" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.190" }
%"class.WTF::Vector.190" = type { %"class.WTF::VectorBuffer.191" }
%"class.WTF::VectorBuffer.191" = type { %"class.WTF::VectorBufferBase.192" }
%"class.WTF::VectorBufferBase.192" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.182" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Transferables" = type { %"class.blink::HeapVector.286", %"class.blink::HeapVector.295", %"class.blink::HeapVector.303", %"class.blink::HeapVector.311", %"class.blink::HeapVector.424", %"class.blink::HeapVector.432", %"class.blink::HeapVector.446", %"class.blink::HeapVector.454", %"class.blink::HeapHashMap.462" }
%"class.blink::HeapVector.286" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.295" = type { %"class.WTF::Vector.298" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.blink::Member.301"*, i32, i32 }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::ImageBitmap"* }
%"class.blink::ImageBitmap" = type opaque
%"class.blink::HeapVector.303" = type { %"class.WTF::Vector.306" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"class.blink::Member.309"*, i32, i32 }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type opaque
%"class.blink::HeapVector.311" = type { %"class.WTF::Vector.314" }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::Member.317"*, i32, i32 }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.347", i8, i8, %class.scoped_refptr.422, %"class.blink::MessagePortDescriptor" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.333" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.321" }
%"class.blink::HeapVector.321" = type { %"class.WTF::Vector.324" }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326", [32 x i8] }
%"class.WTF::VectorBufferBase.326" = type { %"struct.std::__1::pair.327"*, i32, i32 }
%"struct.std::__1::pair.327" = type { %"class.WTF::AtomicString", %"class.blink::Member.328" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::HeapVector.330"* }
%"class.blink::HeapVector.330" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.WTF::Vector.336"* }
%"class.WTF::Vector.336" = type opaque
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.340" }
%"class.blink::WeakMember.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"class.blink::WeakMember.346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.346" = type opaque
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.352", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.353, %"class.std::__1::unique_ptr.355", %"class.absl::optional.370", %"struct.std::__1::atomic.170", i8, i8, i8, i8, i32, i32, %"class.absl::optional.380", %"class.std::__1::unique_ptr.385", i8, i64, %class.scoped_refptr.415, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.418" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.350 }
%class.scoped_refptr.350 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.351", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.351" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase.352" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.353 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.354" }>
%"class.base::RefCountedThreadSafe.354" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.353, i8, %"class.mojo::ScopedHandleBase.358", %class.scoped_refptr.359, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.358" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.359 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.360 }
%class.scoped_refptr.360 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.361", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.362" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.absl::optional.370" = type { %"class.absl::optional_internal::optional_data.371" }
%"class.absl::optional_internal::optional_data.371" = type { %"class.absl::optional_internal::optional_data_base.372" }
%"class.absl::optional_internal::optional_data_base.372" = type { %"class.absl::optional_internal::optional_data_dtor_base.373" }
%"class.absl::optional_internal::optional_data_dtor_base.373" = type { i8, %union.anon.374 }
%union.anon.374 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.375", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.375" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, %union.anon.384 }
%union.anon.384 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.388", i8, i64, %class.scoped_refptr.389, %class.scoped_refptr.411 }
%"class.base::RepeatingCallback.388" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.389 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.390", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.400", i8, [7 x i8] }>
%"class.base::RefCounted.390" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.391 }
%class.scoped_refptr.391 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.400" = type { %"class.std::__1::__tree.401" }
%"class.std::__1::__tree.401" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%class.scoped_refptr.411 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.415 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.416 }
%class.scoped_refptr.416 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.471", [4 x i8], %"class.base::RepeatingCallback.472", %class.scoped_refptr.353, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.195", [4 x i8] }>
%"class.base::RefCountedThreadSafe.471" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.472" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.418" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.422 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase.352", %"class.base::UnguessableToken", i64 }
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::MojoHandle"* }
%"class.blink::MojoHandle" = type <{ %"class.blink::ScriptWrappable", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.blink::HeapVector.432" = type { %"class.WTF::Vector.435" }
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"class.blink::Member.438"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.440", i8, %"class.blink::Member.441", %"class.blink::Member.443", %"class.blink::TraceWrapperV8Reference.182", %"class.std::__1::unique_ptr.225" }
%"class.base::StrongAlias.440" = type { i8 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.469", %"class.blink::Member.438" }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::Member.452"*, i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::WritableStream"* }
%"class.blink::WritableStream" = type opaque
%"class.blink::HeapVector.454" = type { %"class.WTF::Vector.457" }
%"class.WTF::Vector.457" = type { %"class.WTF::VectorBuffer.458" }
%"class.WTF::VectorBuffer.458" = type { %"class.WTF::VectorBufferBase.459" }
%"class.WTF::VectorBufferBase.459" = type { %"class.blink::Member.460"*, i32, i32 }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::TransformStream"* }
%"class.blink::TransformStream" = type opaque
%"class.blink::HeapHashMap.462" = type { %"class.WTF::HashMap.465" }
%"class.WTF::HashMap.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"struct.WTF::KeyValuePair.468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.468" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.527", i32, i8, [3 x i8], %"class.blink::HeapVector.529", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.548", %"class.blink::Member.554", %"class.blink::Member.556", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.473" }
%"class.blink::HeapHashMap.473" = type { %"class.WTF::HashMap.476" }
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.480" }
%"class.blink::Supplementable.480" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.481" }
%"class.blink::HeapHashMap.481" = type { %"class.WTF::HashMap.484" }
%"class.WTF::HashMap.484" = type { %"class.WTF::HashTable.485" }
%"class.WTF::HashTable.485" = type <{ %"struct.WTF::KeyValuePair.487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.487" = type { i8*, %"class.blink::Member.627" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.629" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.250, %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515", %"class.blink::Member.521", i32, [4 x i8], %"class.WTF::HashSet.523", i32, i32 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.491", %"class.std::__1::map.502", %"class.std::__1::map.511"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.491" = type { %"class.std::__1::__tree.492" }
%"class.std::__1::__tree.492" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.502" = type { %"class.std::__1::__tree.503" }
%"class.std::__1::__tree.503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.511" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.529" = type { %"class.WTF::Vector.532" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534" }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::Member.535"*, i32, i32 }
%"class.blink::Member.535" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.541", i32, i32 }
%"class.blink::HeapHashMap.541" = type { %"class.WTF::HashMap.544" }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.558", %"class.WTF::Vector.564", %"class.WTF::Vector.570", %"class.WTF::Vector.575" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { %"class.std::__1::unique_ptr.567"*, i32, i32 }
%"class.std::__1::unique_ptr.567" = type opaque
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { i8**, i32, i32 }
%"class.blink::UserActivation" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.580", i8, i8, [6 x i8] }>
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.593", %"class.WTF::String", %"class.blink::Member.597", %"class.blink::Member.603", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.587", %"class.blink::Member.605", i8, [7 x i8], %"class.WTF::Vector.281", %"class.blink::Member.607", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.587", %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.582" }
%"class.absl::optional.582" = type { %"class.absl::optional_internal::optional_data.583" }
%"class.absl::optional_internal::optional_data.583" = type { %"class.absl::optional_internal::optional_data_base.584" }
%"class.absl::optional_internal::optional_data_base.584" = type { %"class.absl::optional_internal::optional_data_dtor_base.585" }
%"class.absl::optional_internal::optional_data_dtor_base.585" = type { i8, %union.anon.586 }
%union.anon.586 = type { i64 }
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::Event"* }
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.200, %"class.blink::HeapVector.286", %"class.blink::HeapVector.295" }
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.599 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.599 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.600", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.602", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.600" = type { %"class.base::RefCountedThreadSafe.601" }
%"class.base::RefCountedThreadSafe.601" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.602" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.352", i32 }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::HeapVector.311"* }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::UserActivation"* }
%"class.blink::MainThreadDebugger" = type { %"class.blink::ThreadDebugger", %"class.std::__1::unique_ptr.609", i8, %"class.std::__1::unique_ptr.615" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.blink::MainThreadDebugger::ClientMessageLoop"* }
%"class.blink::MainThreadDebugger::ClientMessageLoop" = type { i32 (...)** }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::DocumentLifecycle::PostponeTransitionScope"* }
%"class.blink::DocumentLifecycle::PostponeTransitionScope" = type { %"class.blink::DocumentLifecycle"* }
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18MessagePortChannelEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c"postMessage\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18MessagePortChannelEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MessagePortChannel]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23PortalPostMessageHelper13CreateMessageEPNS_11ScriptStateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_14ExceptionStateE(%"struct.blink::BlinkTransferableMessage"* noalias sret, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::PostMessageOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca i16, align 2
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %9 = alloca %"class.blink::Transferables", align 8
  %10 = alloca %"class.WTF::Vector.281", align 8
  %11 = alloca %"struct.v8_inspector::V8StackTraceId", align 16
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.mojo::InlinedStructPtr", align 4
  %14 = bitcast %"struct.blink::BlinkTransferableMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 104, i1 false)
  call void @_ZN5blink24BlinkTransferableMessageC1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %8) #5
  %15 = bitcast %"class.blink::Transferables"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 152, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 148, i1 false) #5
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = call %"class.blink::SerializedScriptValue"* @_ZN5blink17PostMessageHelper22SerializeMessageByMoveEPN2v87IsolateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"* %17, %"class.blink::ScriptValue"* dereferenceable(24) %2, %"class.blink::PostMessageOptions"* %3, %"class.blink::Transferables"* nonnull dereferenceable(152) %9, %"class.blink::ExceptionState"* dereferenceable(72) %4) #5
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %5
  call void @_ZN5blink24BlinkTransferableMessageC1Ev(%"struct.blink::BlinkTransferableMessage"* %0) #5
  br label %135

23:                                               ; preds = %5
  %24 = icmp eq %"class.blink::SerializedScriptValue"* %18, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #5
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  br label %32

32:                                               ; preds = %23, %25, %29
  %33 = ptrtoint %"class.blink::SerializedScriptValue"* %18 to i64
  %34 = bitcast %"struct.blink::BlinkTransferableMessage"* %8 to i64*
  %35 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %35, align 8
  store i64 %33, i64* %34, align 8
  %37 = icmp eq %"class.blink::SerializedScriptValue"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %36) #5
  %43 = bitcast %"class.blink::SerializedScriptValue"* %36 to i8*
  call void @free(i8* %43) #5
  br label %44

44:                                               ; preds = %32, %38, %42
  %45 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #5
  %46 = bitcast %"class.WTF::Vector.281"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #5
  %47 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %9, i64 0, i32 3
  call void @_ZN5blink11MessagePort16DisentanglePortsEPNS_16ExecutionContextERKNS_10HeapVectorINS_6MemberIS0_EELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.281"* nonnull sret %10, %"class.blink::ExecutionContext"* %45, %"class.blink::HeapVector.311"* dereferenceable(16) %47, %"class.blink::ExceptionState"* dereferenceable(72) %4) #5
  %48 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 1
  %49 = bitcast %"class.WTF::Vector.281"* %10 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.WTF::Vector.281"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store atomic i64 %52, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %51 monotonic, align 8
  %53 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %10, i64 0, i32 0, i32 0, i32 1
  %55 = load i32, i32* %53, align 8
  %56 = load i32, i32* %54, align 8
  store i32 %56, i32* %53, align 8
  store i32 %55, i32* %54, align 8
  %57 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %10, i64 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  store i32 %59, i32* %58, align 4
  %61 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %10, i64 0, i32 0, i32 0, i32 0
  %62 = inttoptr i64 %52 to %"class.blink::MessagePortChannel"*
  %63 = icmp eq i64 %52, 0
  br i1 %63, label %79, label %64, !prof !2

64:                                               ; preds = %44
  %65 = inttoptr i64 %52 to i8*
  %66 = icmp eq i32 %59, 0
  br i1 %66, label %77, label %67, !prof !3

67:                                               ; preds = %64
  %68 = zext i32 %59 to i64
  %69 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %62, i64 %68
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi %"class.blink::MessagePortChannel"* [ %72, %70 ], [ %62, %67 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %71) #5
  %72 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %71, i64 1
  %73 = icmp eq %"class.blink::MessagePortChannel"* %72, %69
  br i1 %73, label %74, label %70

74:                                               ; preds = %70
  store i32 0, i32* %58, align 4
  %75 = bitcast %"class.WTF::Vector.281"* %10 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %64
  %78 = phi i8* [ %76, %74 ], [ %65, %64 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #5
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %61, align 8
  br label %79

79:                                               ; preds = %44, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #5
  %80 = load i32, i32* %19, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN5blink24BlinkTransferableMessageC1Ev(%"struct.blink::BlinkTransferableMessage"* %0) #5
  br label %135

83:                                               ; preds = %79
  %84 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %45) #5
  %85 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %84) #5
  %86 = ptrtoint %"class.blink::SecurityOrigin"* %85 to i64
  %87 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 0, i32 1
  %88 = bitcast %class.scoped_refptr.254* %87 to i64*
  %89 = getelementptr inbounds %class.scoped_refptr.254, %class.scoped_refptr.254* %87, i64 0, i32 0
  %90 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %89, align 8
  store i64 %86, i64* %88, align 8
  %91 = icmp eq %"class.blink::SecurityOrigin"* %90, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %90, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %93) #5
  %94 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %90) #5
  %98 = bitcast %"class.blink::SecurityOrigin"* %90 to i8*
  call void @free(i8* %98) #5
  br label %99

99:                                               ; preds = %97, %92, %83
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %100) #5
  %102 = icmp eq %"class.blink::ThreadDebugger"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %99
  %104 = bitcast %"struct.v8_inspector::V8StackTraceId"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #5
  %105 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #5
  %106 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %107 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 11, i32* %109, align 8
  call void @_ZN5blink14ThreadDebugger22StoreCurrentStackTraceERKN3WTF10StringViewE(%"struct.v8_inspector::V8StackTraceId"* nonnull sret %11, %"class.blink::ThreadDebugger"* nonnull %101, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #5
  %110 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 0, i32 2, i32 0
  %111 = bitcast %"struct.v8_inspector::V8StackTraceId"* %11 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 16
  %113 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %113, align 8
  %114 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %11, i64 0, i32 1, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 0, i32 2, i32 1, i32 1
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %11, i64 0, i32 2
  %118 = load i8, i8* %117, align 8, !range !4
  %119 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 0, i32 2, i32 2
  store i8 %118, i8* %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #5
  br label %120

120:                                              ; preds = %99, %103
  %121 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #5
  call void @_ZN5blink17PostMessageHelper28CreateUserActivationSnapshotEPNS_16ExecutionContextEPKNS_18PostMessageOptionsE(%"class.mojo::InlinedStructPtr"* nonnull sret %13, %"class.blink::ExecutionContext"* %45, %"class.blink::PostMessageOptions"* %3) #5
  %122 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 2
  %123 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %8, i64 0, i32 2, i32 1
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %122, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22UserActivationSnapshotD1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"* %124) #5
  call void @_ZN5blink5mojom5blink22UserActivationSnapshotC1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"* %124) #5
  %125 = bitcast i16* %6 to %"class.blink::mojom::blink::UserActivationSnapshot"*
  %126 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %126) #5
  %127 = bitcast %"class.mojo::InlinedStructPtr"* %122 to i16*
  %128 = load i16, i16* %127, align 8
  store i16 %128, i16* %6, align 2
  %129 = bitcast %"class.mojo::InlinedStructPtr"* %13 to i16*
  %130 = load i16, i16* %129, align 4
  store i16 %130, i16* %127, align 8
  store i16 %128, i16* %129, align 4
  call void @_ZN5blink5mojom5blink22UserActivationSnapshotD1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"* nonnull %125) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %126) #5
  %131 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %13, i64 0, i32 1
  %132 = load i32, i32* %123, align 4
  %133 = load i32, i32* %131, align 4
  store i32 %133, i32* %123, align 4
  store i32 %132, i32* %131, align 4
  %134 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %13, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22UserActivationSnapshotD1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"* nonnull %134) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #5
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %0, %"struct.blink::BlinkTransferableMessage"* nonnull dereferenceable(104) %8) #5
  br label %135

135:                                              ; preds = %82, %120, %22
  %136 = icmp eq %"class.blink::SerializedScriptValue"* %18, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %18) #5
  %142 = bitcast %"class.blink::SerializedScriptValue"* %18 to i8*
  call void @free(i8* %142) #5
  br label %143

143:                                              ; preds = %135, %137, %141
  call void @_ZN5blink13TransferablesD1Ev(%"class.blink::Transferables"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %15) #5
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %14) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink24BlinkTransferableMessageC1Ev(%"struct.blink::BlinkTransferableMessage"*) unnamed_addr #2

declare %"class.blink::SerializedScriptValue"* @_ZN5blink17PostMessageHelper22SerializeMessageByMoveEPN2v87IsolateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::PostMessageOptions"*, %"class.blink::Transferables"* dereferenceable(152), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN5blink11MessagePort16DisentanglePortsEPNS_16ExecutionContextERKNS_10HeapVectorINS_6MemberIS0_EELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.281"* sret, %"class.blink::ExecutionContext"*, %"class.blink::HeapVector.311"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink14ThreadDebugger22StoreCurrentStackTraceERKN3WTF10StringViewE(%"struct.v8_inspector::V8StackTraceId"* sret, %"class.blink::ThreadDebugger"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink17PostMessageHelper28CreateUserActivationSnapshotEPNS_16ExecutionContextEPKNS_18PostMessageOptionsE(%"class.mojo::InlinedStructPtr"* sret, %"class.blink::ExecutionContext"*, %"class.blink::PostMessageOptions"*) local_unnamed_addr #2

declare void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13TransferablesD1Ev(%"class.blink::Transferables"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23PortalPostMessageHelper29CreateAndDispatchMessageEventEPNS_11EventTargetENS_24BlinkTransferableMessageE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::EventTarget"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.200, align 8
  %5 = alloca %"class.blink::EventTarget"*, align 8
  %6 = alloca %"class.blink::UserActivation"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.WTF::Vector.281", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 2, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 2, i32 0, i32 1
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #5
  %19 = bitcast i8* %18 to %"class.blink::UserActivation"*
  %20 = load i8, i8* %16, align 1, !range !4
  %21 = icmp ne i8 %20, 0
  %22 = load i8, i8* %17, align 1, !range !4
  %23 = icmp ne i8 %22, 0
  tail call void @_ZN5blink14UserActivationC1Ebb(%"class.blink::UserActivation"* %19, i1 zeroext %21, i1 zeroext %23) #5
  %24 = getelementptr inbounds i8, i8* %18, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  br label %28

28:                                               ; preds = %3, %15
  %29 = phi %"class.blink::UserActivation"* [ %19, %15 ], [ null, %3 ]
  %30 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %9, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %33, align 8
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %28
  %36 = zext i32 %31 to i64
  %37 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18MessagePortChannelEEEmm(i64 %36) #5
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18MessagePortChannelEEEPKcv, i64 0, i64 0)) #5
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast %"class.WTF::Vector.281"* %9 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = lshr i64 %37, 3
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %33, align 8
  %43 = bitcast i8* %38 to %"class.blink::MessagePortChannel"*
  br label %44

44:                                               ; preds = %35, %28
  %45 = phi %"class.blink::MessagePortChannel"* [ null, %28 ], [ %43, %35 ]
  %46 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %49, align 8
  %51 = zext i32 %47 to i64
  %52 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %50, i64 %51
  %53 = icmp eq i32 %47, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %44, %54
  %55 = phi %"class.blink::MessagePortChannel"* [ %57, %54 ], [ %45, %44 ]
  %56 = phi %"class.blink::MessagePortChannel"* [ %58, %54 ], [ %50, %44 ]
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %55, %"class.blink::MessagePortChannel"* dereferenceable(8) %56) #5
  %57 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %55, i64 1
  %58 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %56, i64 1
  %59 = icmp eq %"class.blink::MessagePortChannel"* %58, %52
  br i1 %59, label %60, label %54

60:                                               ; preds = %54, %44
  %61 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %61, align 8
  %63 = icmp eq %"class.blink::SerializedScriptValue"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #5
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #5
  br label %71

71:                                               ; preds = %60, %64, %68
  %72 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #5
  %73 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %2) #5
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  %75 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %77 = bitcast %class.scoped_refptr.200* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast %"class.blink::EventTarget"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast %"class.blink::UserActivation"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  %80 = getelementptr inbounds %class.scoped_refptr.200, %class.scoped_refptr.200* %4, i64 0, i32 0
  store %"class.blink::SerializedScriptValue"* %62, %"class.blink::SerializedScriptValue"** %80, align 8
  store %"class.blink::EventTarget"* %0, %"class.blink::EventTarget"** %5, align 8
  store %"class.blink::UserActivation"* %29, %"class.blink::UserActivation"** %6, align 8
  store i8 0, i8* %7, align 1
  %81 = call %"class.blink::MessageEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_(%class.scoped_refptr.200* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::EventTarget"** nonnull dereferenceable(8) %5, %"class.WTF::Vector.281"* nonnull dereferenceable(16) %9, %"class.blink::UserActivation"** nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7) #5
  %82 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %80, align 8
  %83 = icmp eq %"class.blink::SerializedScriptValue"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %71
  %85 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %82) #5
  %89 = bitcast %"class.blink::SerializedScriptValue"* %82 to i8*
  call void @free(i8* %89) #5
  br label %90

90:                                               ; preds = %71, %84, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #5
  br label %106

106:                                              ; preds = %90, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #5
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #5
  %123 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %32, align 8
  %124 = icmp eq %"class.blink::MessagePortChannel"* %123, null
  br i1 %124, label %141, label %125, !prof !2

125:                                              ; preds = %122
  %126 = bitcast %"class.blink::MessagePortChannel"* %123 to i8*
  %127 = load i32, i32* %48, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %139, label %129, !prof !3

129:                                              ; preds = %125
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %123, i64 %130
  br label %132

132:                                              ; preds = %132, %129
  %133 = phi %"class.blink::MessagePortChannel"* [ %134, %132 ], [ %123, %129 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %133) #5
  %134 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %133, i64 1
  %135 = icmp eq %"class.blink::MessagePortChannel"* %134, %131
  br i1 %135, label %136, label %132

136:                                              ; preds = %132
  store i32 0, i32* %48, align 4
  %137 = bitcast %"class.WTF::Vector.281"* %9 to i8**
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %136, %125
  %140 = phi i8* [ %138, %136 ], [ %126, %125 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %140) #5
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %32, align 8
  br label %141

141:                                              ; preds = %122, %139
  %142 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %143 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %143, i64 10
  %145 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %144, align 8
  %146 = call %"class.blink::ExecutionContext"* %145(%"class.blink::EventTarget"* %0) #5
  call void @_ZN5blink12MessageEvent20EntangleMessagePortsEPNS_16ExecutionContextE(%"class.blink::MessageEvent"* %81, %"class.blink::ExecutionContext"* %146) #5
  %147 = call %"class.blink::MainThreadDebugger"* @_ZN5blink18MainThreadDebugger8InstanceEv() #5
  %148 = getelementptr inbounds %"class.blink::MainThreadDebugger", %"class.blink::MainThreadDebugger"* %147, i64 0, i32 0
  %149 = icmp eq %"class.blink::MainThreadDebugger"* %147, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 0, i32 2
  call void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* %148, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %151) #5
  %152 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %81, i64 0, i32 0
  %153 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %0, %"class.blink::Event"* dereferenceable(104) %152) #5
  call void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* %148, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %151) #5
  br label %157

154:                                              ; preds = %141
  %155 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %81, i64 0, i32 0
  %156 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %0, %"class.blink::Event"* dereferenceable(104) %155) #5
  br label %157

157:                                              ; preds = %154, %150
  %158 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %160) #5
  %161 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %2) #5
  %165 = bitcast %"class.blink::SecurityOrigin"* %2 to i8*
  call void @free(i8* %165) #5
  br label %166

166:                                              ; preds = %157, %159, %164
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink12MessageEvent20EntangleMessagePortsEPNS_16ExecutionContextE(%"class.blink::MessageEvent"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::MainThreadDebugger"* @_ZN5blink18MainThreadDebugger8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #2

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22UserActivationSnapshotD1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MessageEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_(%class.scoped_refptr.200* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"** dereferenceable(8), %"class.WTF::Vector.281"* dereferenceable(16), %"class.blink::UserActivation"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.WTF::Vector.281", align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #5
  %10 = bitcast i8* %9 to %"class.blink::MessageEvent"*
  %11 = getelementptr inbounds %class.scoped_refptr.200, %class.scoped_refptr.200* %0, i64 0, i32 0
  %12 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %11, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %11, align 8
  %13 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %3, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %8, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %8, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.WTF::Vector.281"* %4 to i64*
  %17 = bitcast %"class.WTF::Vector.281"* %8 to i64*
  store i64 0, i64* %17, align 8
  %18 = load i64, i64* %16, align 8
  %19 = bitcast %"class.WTF::Vector.281"* %8 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %4, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %14, align 8
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %4, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %15, align 4
  store i32 0, i32* %22, align 4
  %24 = load %"class.blink::UserActivation"*, %"class.blink::UserActivation"** %5, align 8
  %25 = load i8, i8* %6, align 1, !range !4
  %26 = icmp ne i8 %25, 0
  call void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb(%"class.blink::MessageEvent"* %10, %"class.blink::SerializedScriptValue"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::EventTarget"* %13, %"class.WTF::Vector.281"* nonnull %8, %"class.blink::UserActivation"* %24, i1 zeroext %26) #5
  %27 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %27, align 8
  %29 = icmp eq %"class.blink::MessagePortChannel"* %28, null
  br i1 %29, label %46, label %30, !prof !2

30:                                               ; preds = %7
  %31 = bitcast %"class.blink::MessagePortChannel"* %28 to i8*
  %32 = load i32, i32* %15, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34, !prof !3

34:                                               ; preds = %30
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %28, i64 %35
  br label %37

37:                                               ; preds = %37, %34
  %38 = phi %"class.blink::MessagePortChannel"* [ %39, %37 ], [ %28, %34 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %38) #5
  %39 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %38, i64 1
  %40 = icmp eq %"class.blink::MessagePortChannel"* %39, %36
  br i1 %40, label %41, label %37

41:                                               ; preds = %37
  store i32 0, i32* %15, align 4
  %42 = bitcast %"class.WTF::Vector.281"* %8 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %30
  %45 = phi i8* [ %43, %41 ], [ %31, %30 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #5
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %27, align 8
  br label %46

46:                                               ; preds = %7, %44
  %47 = getelementptr inbounds i8, i8* %9, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  ret %"class.blink::MessageEvent"* %10
}

declare void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb(%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"*, %"class.WTF::Vector.281"*, %"class.blink::UserActivation"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.195"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.195"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.195"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #5
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #5
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #5
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #5
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #5
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #5
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink22UserActivationSnapshotC1Ev(%"class.blink::mojom::blink::UserActivationSnapshot"*) unnamed_addr #2

declare void @_ZN5blink14UserActivationC1Ebb(%"class.blink::UserActivation"*, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18MessagePortChannelEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
