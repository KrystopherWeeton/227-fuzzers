; ModuleID = '../../third_party/dav1d/libdav1d/src/x86/msac_init.c'
source_filename = "../../third_party/dav1d/libdav1d/src/x86/msac_init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.MsacContext = type { i8*, i8*, i64, i32, i32, i32, i32 (%struct.MsacContext*, i16*, i64)* }

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_msac_init_x86(%struct.MsacContext* nocapture) local_unnamed_addr #0 {
  %2 = tail call i32 @dav1d_get_cpu_flags() #2
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.MsacContext, %struct.MsacContext* %0, i64 0, i32 6
  store i32 (%struct.MsacContext*, i16*, i64)* @dav1d_msac_decode_symbol_adapt16_sse2, i32 (%struct.MsacContext*, i16*, i64)** %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = and i32 %2, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.MsacContext, %struct.MsacContext* %0, i64 0, i32 6
  store i32 (%struct.MsacContext*, i16*, i64)* @dav1d_msac_decode_symbol_adapt16_avx2, i32 (%struct.MsacContext*, i16*, i64)** %11, align 8
  br label %12

12:                                               ; preds = %7, %10
  ret void
}

declare i32 @dav1d_get_cpu_flags() local_unnamed_addr #1

declare i32 @dav1d_msac_decode_symbol_adapt16_sse2(%struct.MsacContext*, i16*, i64) #1

declare i32 @dav1d_msac_decode_symbol_adapt16_avx2(%struct.MsacContext*, i16*, i64) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
