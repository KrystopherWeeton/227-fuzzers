; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_simple_parser.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_simple_parser.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_SimpleParser = type <{ %"class.pdfium::span", i32, [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }

@PDF_CharType = external local_unnamed_addr constant [256 x i8], align 16

@_ZN17CPDF_SimpleParserC1EN6pdfium4spanIKhEE = hidden unnamed_addr alias void (%class.CPDF_SimpleParser*, %"class.pdfium::span"*), void (%class.CPDF_SimpleParser*, %"class.pdfium::span"*)* @_ZN17CPDF_SimpleParserC2EN6pdfium4spanIKhEE
@_ZN17CPDF_SimpleParserD1Ev = hidden unnamed_addr alias void (%class.CPDF_SimpleParser*), void (%class.CPDF_SimpleParser*)* @_ZN17CPDF_SimpleParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_SimpleParserC2EN6pdfium4spanIKhEE(%class.CPDF_SimpleParser* nocapture, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPDF_SimpleParser* %0 to i8*
  %4 = bitcast %"class.pdfium::span"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.CPDF_SimpleParser, %class.CPDF_SimpleParser* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17CPDF_SimpleParserD2Ev(%class.CPDF_SimpleParser* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_SimpleParser7GetWordEv(%"class.fxcrt::StringViewTemplate"* noalias nocapture sret, %class.CPDF_SimpleParser*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_SimpleParser, %class.CPDF_SimpleParser* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CPDF_SimpleParser, %class.CPDF_SimpleParser* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = icmp ugt i64 %4, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPDF_SimpleParser, %class.CPDF_SimpleParser* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %17

12:                                               ; preds = %52, %52
  %13 = zext i32 %53 to i64
  %14 = icmp ugt i64 %4, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %12, %2
  %16 = bitcast %"class.fxcrt::StringViewTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  br label %234

17:                                               ; preds = %9, %12
  %18 = phi i64 [ %7, %9 ], [ %13, %12 ]
  %19 = phi i32 [ %6, %9 ], [ %53, %12 ]
  %20 = add i32 %19, 1
  store i32 %20, i32* %5, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 %18
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @PDF_CharType, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 87
  br i1 %26, label %27, label %41

27:                                               ; preds = %17, %33
  %28 = phi i32 [ %34, %33 ], [ %20, %17 ]
  %29 = zext i32 %28 to i64
  %30 = icmp ugt i64 %4, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.fxcrt::StringViewTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false)
  br label %234

33:                                               ; preds = %27
  %34 = add i32 %28, 1
  store i32 %34, i32* %5, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 %29
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @PDF_CharType, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 87
  br i1 %40, label %27, label %41

41:                                               ; preds = %33, %17
  %42 = phi i32 [ %20, %17 ], [ %34, %33 ]
  %43 = phi i8 [ %22, %17 ], [ %36, %33 ]
  %44 = phi i8 [ %25, %17 ], [ %39, %33 ]
  %45 = icmp eq i8 %43, 37
  br i1 %45, label %46, label %56

46:                                               ; preds = %41, %52
  %47 = phi i32 [ %53, %52 ], [ %42, %41 ]
  %48 = zext i32 %47 to i64
  %49 = icmp ugt i64 %4, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.fxcrt::StringViewTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false)
  br label %234

52:                                               ; preds = %46
  %53 = add i32 %47, 1
  store i32 %53, i32* %5, align 8
  %54 = getelementptr inbounds i8, i8* %11, i64 %48
  %55 = load i8, i8* %54, align 1
  switch i8 %55, label %46 [
    i8 13, label %12
    i8 10, label %12
  ]

56:                                               ; preds = %41
  %57 = add i32 %42, -1
  %58 = icmp eq i8 %44, 68
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = zext i32 %42 to i64
  %61 = icmp ugt i64 %4, %60
  br i1 %61, label %205, label %220

62:                                               ; preds = %56
  switch i8 %43, label %190 [
    i8 47, label %66
    i8 60, label %98
    i8 62, label %129
    i8 40, label %63
  ]

63:                                               ; preds = %62
  %64 = zext i32 %42 to i64
  %65 = icmp ugt i64 %4, %64
  br i1 %65, label %150, label %181

66:                                               ; preds = %62
  %67 = zext i32 %42 to i64
  %68 = icmp ugt i64 %4, %67
  br i1 %68, label %69, label %85

69:                                               ; preds = %66, %82
  %70 = phi i64 [ %83, %82 ], [ %67, %66 ]
  %71 = phi i32 [ %72, %82 ], [ %42, %66 ]
  %72 = add i32 %71, 1
  store i32 %72, i32* %5, align 8
  %73 = getelementptr inbounds i8, i8* %11, i64 %70
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* @PDF_CharType, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  switch i8 %77, label %78 [
    i8 82, label %82
    i8 78, label %82
  ]

78:                                               ; preds = %69
  store i32 %71, i32* %5, align 8
  %79 = sub i32 %71, %57
  %80 = and i32 %79, 255
  %81 = zext i32 %80 to i64
  br label %85

82:                                               ; preds = %69, %69
  %83 = zext i32 %72 to i64
  %84 = icmp ugt i64 %4, %83
  br i1 %84, label %69, label %85

85:                                               ; preds = %82, %66, %78
  %86 = phi i64 [ %81, %78 ], [ 0, %66 ], [ 0, %82 ]
  %87 = zext i32 %57 to i64
  %88 = icmp ult i64 %4, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %85
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !3, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !3, !srcloc !7
  unreachable

90:                                               ; preds = %85
  %91 = sub i64 %4, %87
  %92 = icmp ult i64 %91, %86
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %90
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !3, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !3, !srcloc !9
  unreachable

94:                                               ; preds = %90
  %95 = getelementptr inbounds i8, i8* %11, i64 %87
  %96 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 %86, i64* %97, align 8
  br label %234

98:                                               ; preds = %62
  %99 = zext i32 %42 to i64
  %100 = icmp ugt i64 %4, %99
  br i1 %100, label %112, label %101

101:                                              ; preds = %98
  %102 = zext i32 %57 to i64
  %103 = icmp ult i64 %4, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %101
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !10, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !10, !srcloc !7
  unreachable

105:                                              ; preds = %101
  %106 = icmp eq i64 %4, %102
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %105
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !10, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !10, !srcloc !9
  unreachable

108:                                              ; preds = %105
  %109 = getelementptr inbounds i8, i8* %11, i64 %102
  %110 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %109, i8** %110, align 8
  %111 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 1, i64* %111, align 8
  br label %234

112:                                              ; preds = %98
  %113 = add i32 %42, 1
  store i32 %113, i32* %5, align 8
  %114 = getelementptr inbounds i8, i8* %11, i64 %99
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 60
  br i1 %116, label %190, label %117

117:                                              ; preds = %112, %121
  %118 = phi i32 [ %125, %121 ], [ %113, %112 ]
  %119 = zext i32 %118 to i64
  %120 = icmp ugt i64 %4, %119
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = getelementptr inbounds i8, i8* %11, i64 %119
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 62
  %125 = add i32 %118, 1
  store i32 %125, i32* %5, align 8
  br i1 %124, label %126, label %117

126:                                              ; preds = %121, %117
  %127 = phi i32 [ %125, %121 ], [ %118, %117 ]
  %128 = sub i32 %127, %57
  br label %190

129:                                              ; preds = %62
  %130 = zext i32 %42 to i64
  %131 = icmp ugt i64 %4, %130
  br i1 %131, label %143, label %132

132:                                              ; preds = %129
  %133 = zext i32 %57 to i64
  %134 = icmp ult i64 %4, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %132
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !13, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !13, !srcloc !7
  unreachable

136:                                              ; preds = %132
  %137 = icmp eq i64 %4, %133
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %136
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !13, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !13, !srcloc !9
  unreachable

139:                                              ; preds = %136
  %140 = getelementptr inbounds i8, i8* %11, i64 %133
  %141 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %140, i8** %141, align 8
  %142 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 1, i64* %142, align 8
  br label %234

143:                                              ; preds = %129
  %144 = add i32 %42, 1
  store i32 %144, i32* %5, align 8
  %145 = getelementptr inbounds i8, i8* %11, i64 %130
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 62
  %148 = select i1 %147, i32 %144, i32 %42
  store i32 %148, i32* %5, align 8
  %149 = select i1 %147, i32 2, i32 1
  br label %190

150:                                              ; preds = %63, %173
  %151 = phi i64 [ %175, %173 ], [ %64, %63 ]
  %152 = phi i32 [ %174, %173 ], [ %42, %63 ]
  %153 = phi i32 [ %170, %173 ], [ 1, %63 ]
  %154 = getelementptr inbounds i8, i8* %11, i64 %151
  %155 = load i8, i8* %154, align 1
  switch i8 %155, label %163 [
    i8 41, label %156
    i8 92, label %161
  ]

156:                                              ; preds = %150
  %157 = add nsw i32 %153, -1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %156
  %160 = zext i32 %152 to i64
  br label %181

161:                                              ; preds = %150
  %162 = add i32 %152, 1
  store i32 %162, i32* %5, align 8
  br label %168

163:                                              ; preds = %150, %156
  %164 = phi i32 [ %157, %156 ], [ %153, %150 ]
  %165 = icmp eq i8 %155, 40
  %166 = zext i1 %165 to i32
  %167 = add nsw i32 %164, %166
  br label %168

168:                                              ; preds = %163, %161
  %169 = phi i32 [ %162, %161 ], [ %152, %163 ]
  %170 = phi i32 [ %153, %161 ], [ %167, %163 ]
  %171 = zext i32 %169 to i64
  %172 = icmp ugt i64 %4, %171
  br i1 %172, label %173, label %177

173:                                              ; preds = %168
  %174 = add i32 %169, 1
  store i32 %174, i32* %5, align 8
  %175 = zext i32 %174 to i64
  %176 = icmp ugt i64 %4, %175
  br i1 %176, label %150, label %179

177:                                              ; preds = %168
  %178 = zext i32 %169 to i64
  br label %181

179:                                              ; preds = %173
  %180 = zext i32 %174 to i64
  br label %181

181:                                              ; preds = %177, %179, %159, %63
  %182 = phi i64 [ %64, %63 ], [ %160, %159 ], [ %178, %177 ], [ %180, %179 ]
  %183 = phi i32 [ %42, %63 ], [ %152, %159 ], [ %169, %177 ], [ %174, %179 ]
  %184 = icmp ugt i64 %4, %182
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = add i32 %183, 1
  store i32 %186, i32* %5, align 8
  br label %187

187:                                              ; preds = %185, %181
  %188 = phi i32 [ %186, %185 ], [ %183, %181 ]
  %189 = sub i32 %188, %57
  br label %190

190:                                              ; preds = %143, %62, %112, %187, %126
  %191 = phi i32 [ %128, %126 ], [ %189, %187 ], [ 2, %112 ], [ 1, %62 ], [ %149, %143 ]
  %192 = zext i32 %57 to i64
  %193 = and i32 %191, 255
  %194 = zext i32 %193 to i64
  %195 = icmp ult i64 %4, %192
  br i1 %195, label %196, label %197, !prof !2

196:                                              ; preds = %190
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !16, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !16, !srcloc !7
  unreachable

197:                                              ; preds = %190
  %198 = sub i64 %4, %192
  %199 = icmp ult i64 %198, %194
  br i1 %199, label %200, label %201, !prof !2

200:                                              ; preds = %197
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !16, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !16, !srcloc !9
  unreachable

201:                                              ; preds = %197
  %202 = getelementptr inbounds i8, i8* %11, i64 %192
  %203 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %202, i8** %203, align 8
  %204 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 %194, i64* %204, align 8
  br label %234

205:                                              ; preds = %59, %216
  %206 = phi i64 [ %218, %216 ], [ %60, %59 ]
  %207 = phi i32 [ %209, %216 ], [ %42, %59 ]
  %208 = phi i8 [ %217, %216 ], [ 1, %59 ]
  %209 = add i32 %207, 1
  store i32 %209, i32* %5, align 8
  %210 = getelementptr inbounds i8, i8* %11, i64 %206
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @PDF_CharType, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  switch i8 %214, label %216 [
    i8 68, label %215
    i8 87, label %215
  ]

215:                                              ; preds = %205, %205
  store i32 %207, i32* %5, align 8
  br label %220

216:                                              ; preds = %205
  %217 = add i8 %208, 1
  %218 = zext i32 %209 to i64
  %219 = icmp ugt i64 %4, %218
  br i1 %219, label %205, label %220

220:                                              ; preds = %216, %59, %215
  %221 = phi i8 [ %208, %215 ], [ 1, %59 ], [ %217, %216 ]
  %222 = zext i32 %57 to i64
  %223 = zext i8 %221 to i64
  %224 = icmp ult i64 %4, %222
  br i1 %224, label %225, label %226, !prof !2

225:                                              ; preds = %220
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !19, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !19, !srcloc !7
  unreachable

226:                                              ; preds = %220
  %227 = sub i64 %4, %222
  %228 = icmp ult i64 %227, %223
  br i1 %228, label %229, label %230, !prof !2

229:                                              ; preds = %226
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !19, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #3, !noalias !19, !srcloc !9
  unreachable

230:                                              ; preds = %226
  %231 = getelementptr inbounds i8, i8* %11, i64 %222
  %232 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %231, i8** %232, align 8
  %233 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 %223, i64* %233, align 8
  br label %234

234:                                              ; preds = %94, %108, %139, %201, %230, %50, %31, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!5 = distinct !{!5, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
!6 = !{i32 -2143849193}
!7 = !{i32 -2143849172}
!8 = !{i32 -2143848606}
!9 = !{i32 -2143848585}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!12 = distinct !{!12, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!15 = distinct !{!15, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!18 = distinct !{!18, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!21 = distinct !{!21, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
