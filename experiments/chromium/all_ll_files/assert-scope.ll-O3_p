; ModuleID = '../../v8/src/common/assert-scope.cc'
source_filename = "../../v8/src/common/assert-scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::PerThreadAssertScope" = type { %"class.v8::base::Optional" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::PerThreadAssertScope.0" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.1" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.2" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.3" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.4" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.5" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.6" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.7" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.8" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.9" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.10" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerThreadAssertScope.11" = type { %"class.v8::base::Optional" }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.332", %"class.std::__1::unique_ptr.333", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.339", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.364", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.371", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.381", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.392", %"struct.std::__1::atomic.56", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.418", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.435"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.436", i32, i8, i8, i32, i32, %"class.std::__1::vector.442", %"class.std::__1::vector.442", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.449", i64, %"class.std::__1::unordered_map.450", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.205", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.64", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.509", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.515", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.549", %"class.std::__1::vector.553", %"class.std::__1::vector.553", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type opaque
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.31", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.31", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.31", i64, i64, %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.41", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.65", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.31", i64, i8, %"struct.std::__1::atomic.31", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.69", %"class.std::__1::vector.69", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::shared_ptr.166", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.167", %"class.std::__1::unique_ptr.193", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.199", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.212", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.267", %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.291", %"class.std::__1::vector.319", i8, %"class.std::__1::unique_ptr.326", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.14", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.28", [4 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i64 }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.60", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.31", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.64" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i64 }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.166" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.167" = type { %"class.std::__1::__hash_table.168" }
%"class.std::__1::__hash_table.168" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.172"** }
%"struct.std::__1::__hash_node_base.172" = type { %"struct.std::__1::__hash_node_base.172"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator.174" }
%"class.std::__1::__bucket_list_deallocator.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.172" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.205", %"class.std::__1::vector.205" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::unordered_map.241" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.321" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.205" }
%"class.std::__1::shared_ptr.332" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.339" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.352", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type opaque
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.31", %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.346" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.358" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { i32*, i32*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.381" = type { %"struct.std::__1::__atomic_base.382" }
%"struct.std::__1::__atomic_base.382" = type { %"struct.std::__1::__cxx_atomic_impl.383" }
%"struct.std::__1::__cxx_atomic_impl.383" = type { %"struct.std::__1::__cxx_atomic_base_impl.384" }
%"struct.std::__1::__cxx_atomic_base_impl.384" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.388 }
%union.anon.388 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.392" = type { %"class.std::__1::__hash_table.393" }
%"class.std::__1::__hash_table.393" = type <{ %"class.std::__1::unique_ptr.394", %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.412", [4 x i8] }>
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396", %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"struct.std::__1::__hash_node_base.397"** }
%"struct.std::__1::__hash_node_base.397" = type { %"struct.std::__1::__hash_node_base.397"* }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.std::__1::__bucket_list_deallocator.399" }
%"class.std::__1::__bucket_list_deallocator.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.397" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.v8::internal::Debug" = type opaque
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.430" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.424"**, %"struct.std::__1::pair.424"**, %"struct.std::__1::pair.424"**, %"class.std::__1::__compressed_pair.425" }
%"struct.std::__1::pair.424" = type opaque
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::pair.424"** }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.435" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.376", i32, %"class.v8::Local.12" }
%"class.v8::Local.376" = type { %"class.v8::Promise"* }
%"class.v8::Local.12" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.442" = type { %"class.std::__1::__vector_base.443" }
%"class.std::__1::__vector_base.443" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.449" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.450" = type { %"class.std::__1::__hash_table.451" }
%"class.std::__1::__hash_table.451" = type <{ %"class.std::__1::unique_ptr.452", %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.467", %"class.std::__1::__compressed_pair.472", [4 x i8] }>
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454", %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.std::__1::__hash_node_base.455"** }
%"struct.std::__1::__hash_node_base.455" = type { %"struct.std::__1::__hash_node_base.455"* }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::__bucket_list_deallocator.457" }
%"class.std::__1::__bucket_list_deallocator.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"struct.std::__1::__hash_node_base.455" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.64" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.478", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.507", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.478" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.503, %union.anon.505, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.503 = type { i64 }
%union.anon.505 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.507" = type { %"class.v8::PersistentBase.508" }
%"class.v8::PersistentBase.508" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.479", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.479" = type { %"class.std::__1::__hash_table.480" }
%"class.std::__1::__hash_table.480" = type <{ %"class.std::__1::unique_ptr.481", %"class.std::__1::__compressed_pair.491", %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.499", [4 x i8] }>
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483", %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::__hash_node_base.484"** }
%"struct.std::__1::__hash_node_base.484" = type { %"struct.std::__1::__hash_node_base.484"* }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.std::__1::__bucket_list_deallocator.486" }
%"class.std::__1::__bucket_list_deallocator.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.std::__1::__hash_node_base.484" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type opaque
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.377", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.377" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.523" }
%"class.std::__1::unordered_map.523" = type { %"class.std::__1::__hash_table.524" }
%"class.std::__1::__hash_table.524" = type <{ %"class.std::__1::unique_ptr.525", %"class.std::__1::__compressed_pair.535", %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.543", [4 x i8] }>
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527", %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node_base.528"** }
%"struct.std::__1::__hash_node_base.528" = type { %"struct.std::__1::__hash_node_base.528"* }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.std::__1::__bucket_list_deallocator.530" }
%"class.std::__1::__bucket_list_deallocator.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.std::__1::__hash_node_base.528" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.549" = type { %"struct.std::__1::__atomic_base.550" }
%"struct.std::__1::__atomic_base.550" = type { %"struct.std::__1::__cxx_atomic_impl.551" }
%"struct.std::__1::__cxx_atomic_impl.551" = type { %"struct.std::__1::__cxx_atomic_base_impl.552" }
%"struct.std::__1::__cxx_atomic_base_impl.552" = type { %"class.std::__1::vector.553"* }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.555" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::PerIsolateAssertScope.560" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.562" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.564" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.566" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.568" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.570" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.572" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.574" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.576" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.578" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::PerIsolateAssertScope.580" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EE9IsAllowedEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EEC5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EED5Ev = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EE7ReleaseEv = comdat any

$_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EE9IsAllowedEv = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE5CloseEPNS0_7IsolateEb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EEC5EPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EED5Ev = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE9IsAllowedEPNS0_7IsolateE = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE4OpenEPNS0_7IsolateEPb = comdat any

$_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE5CloseEPNS0_7IsolateEb = comdat any

@_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE = internal thread_local unnamed_addr global i32 -1, align 4
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1

@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope"*), void (%"class.v8::internal::PerThreadAssertScope"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope"*), void (%"class.v8::internal::PerThreadAssertScope"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.0"*), void (%"class.v8::internal::PerThreadAssertScope.0"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.0"*), void (%"class.v8::internal::PerThreadAssertScope.0"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.1"*), void (%"class.v8::internal::PerThreadAssertScope.1"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.1"*), void (%"class.v8::internal::PerThreadAssertScope.1"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.2"*), void (%"class.v8::internal::PerThreadAssertScope.2"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.2"*), void (%"class.v8::internal::PerThreadAssertScope.2"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.3"*), void (%"class.v8::internal::PerThreadAssertScope.3"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.3"*), void (%"class.v8::internal::PerThreadAssertScope.3"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.4"*), void (%"class.v8::internal::PerThreadAssertScope.4"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.4"*), void (%"class.v8::internal::PerThreadAssertScope.4"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.5"*), void (%"class.v8::internal::PerThreadAssertScope.5"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.5"*), void (%"class.v8::internal::PerThreadAssertScope.5"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.6"*), void (%"class.v8::internal::PerThreadAssertScope.6"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.6"*), void (%"class.v8::internal::PerThreadAssertScope.6"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.7"*), void (%"class.v8::internal::PerThreadAssertScope.7"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.7"*), void (%"class.v8::internal::PerThreadAssertScope.7"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.8"*), void (%"class.v8::internal::PerThreadAssertScope.8"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.8"*), void (%"class.v8::internal::PerThreadAssertScope.8"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.9"*), void (%"class.v8::internal::PerThreadAssertScope.9"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.9"*), void (%"class.v8::internal::PerThreadAssertScope.9"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.10"*), void (%"class.v8::internal::PerThreadAssertScope.10"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.10"*), void (%"class.v8::internal::PerThreadAssertScope.10"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EED2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.11"*), void (%"class.v8::internal::PerThreadAssertScope.11"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EEC2Ev
@_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerThreadAssertScope.11"*), void (%"class.v8::internal::PerThreadAssertScope.11"*)* @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope"*), void (%"class.v8::internal::PerIsolateAssertScope"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.560"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.560"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.560"*), void (%"class.v8::internal::PerIsolateAssertScope.560"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.562"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.562"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.562"*), void (%"class.v8::internal::PerIsolateAssertScope.562"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.564"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.564"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.564"*), void (%"class.v8::internal::PerIsolateAssertScope.564"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.566"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.566"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.566"*), void (%"class.v8::internal::PerIsolateAssertScope.566"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.568"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.568"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.568"*), void (%"class.v8::internal::PerIsolateAssertScope.568"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.570"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.570"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.570"*), void (%"class.v8::internal::PerIsolateAssertScope.570"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.572"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.572"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.572"*), void (%"class.v8::internal::PerIsolateAssertScope.572"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.574"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.574"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.574"*), void (%"class.v8::internal::PerIsolateAssertScope.574"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.576"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.576"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.576"*), void (%"class.v8::internal::PerIsolateAssertScope.576"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.578"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.578"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.578"*), void (%"class.v8::internal::PerIsolateAssertScope.578"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EED2Ev
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EEC1EPNS0_7IsolateE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.580"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::PerIsolateAssertScope.580"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EEC2EPNS0_7IsolateE
@_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::PerIsolateAssertScope.580"*), void (%"class.v8::internal::PerIsolateAssertScope.580"*)* @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EED2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -3
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope", %"class.v8::internal::PerThreadAssertScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 2
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.0"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 2
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.0"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.0"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.0", %"class.v8::internal::PerThreadAssertScope.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE1ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 2
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.1"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -2
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.1"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.1"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.1", %"class.v8::internal::PerThreadAssertScope.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 1
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.2"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 1
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.2"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.2"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.2", %"class.v8::internal::PerThreadAssertScope.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE0ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 1
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.3"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -5
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.3"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.3"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.3", %"class.v8::internal::PerThreadAssertScope.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 4
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.4"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 4
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.4"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.4"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.4", %"class.v8::internal::PerThreadAssertScope.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE2ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 4
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.5"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -9
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.5"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.5"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.5", %"class.v8::internal::PerThreadAssertScope.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 8
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.6"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 8
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.6"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.6"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.6", %"class.v8::internal::PerThreadAssertScope.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE3ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 8
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.7"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -17
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.7"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.7"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.7", %"class.v8::internal::PerThreadAssertScope.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 16
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.8"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 16
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.8"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.8"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.8", %"class.v8::internal::PerThreadAssertScope.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE4ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 16
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.9"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -33
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.9"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.9"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.9", %"class.v8::internal::PerThreadAssertScope.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 32
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EEC2Ev(%"class.v8::internal::PerThreadAssertScope.10"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = or i32 %4, 32
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EED2Ev(%"class.v8::internal::PerThreadAssertScope.10"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.10"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.10", %"class.v8::internal::PerThreadAssertScope.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE5ELb1EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 32
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EEC2Ev(%"class.v8::internal::PerThreadAssertScope.11"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  store i32 %4, i32* %3, align 4
  %5 = and i32 %4, -65
  store i32 %5, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EED2Ev(%"class.v8::internal::PerThreadAssertScope.11"*) unnamed_addr #0 comdat($_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %8 = load i8, i8* %2, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  br label %11

11:                                               ; preds = %1, %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EE7ReleaseEv(%"class.v8::internal::PerThreadAssertScope.11"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #2
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PerThreadAssertScope.11", %"class.v8::internal::PerThreadAssertScope.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %9 = load i8, i8* %2, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store i8 0, i8* %2, align 4
  br label %12

12:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal20PerThreadAssertScopeILNS0_19PerThreadAssertTypeE6ELb0EE9IsAllowedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load i32, i32* @_ZN2v88internal12_GLOBAL__N_130current_per_thread_assert_dataE, align 4
  %2 = and i32 %1, 64
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope", %"class.v8::internal::PerIsolateAssertScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope", %"class.v8::internal::PerIsolateAssertScope"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -2
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope", %"class.v8::internal::PerIsolateAssertScope"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope", %"class.v8::internal::PerIsolateAssertScope"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = trunc i32 %4 to i8
  %6 = and i8 %5, 1
  store i8 %6, i8* %1, align 1
  %7 = and i32 %4, -2
  store i32 %7, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -2
  %6 = zext i1 %1 to i32
  %7 = or i32 %5, %6
  store i32 %7, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.560"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.560", %"class.v8::internal::PerIsolateAssertScope.560"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.560", %"class.v8::internal::PerIsolateAssertScope.560"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 1
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.560"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.560", %"class.v8::internal::PerIsolateAssertScope.560"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.560", %"class.v8::internal::PerIsolateAssertScope.560"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = trunc i32 %4 to i8
  %6 = and i8 %5, 1
  store i8 %6, i8* %1, align 1
  %7 = or i32 %4, 1
  store i32 %7, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -2
  %6 = zext i1 %1 to i32
  %7 = or i32 %5, %6
  store i32 %7, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.562"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.562", %"class.v8::internal::PerIsolateAssertScope.562"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.562", %"class.v8::internal::PerIsolateAssertScope.562"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -3
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope.562"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.562", %"class.v8::internal::PerIsolateAssertScope.562"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.562", %"class.v8::internal::PerIsolateAssertScope.562"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 1
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = and i32 %4, -3
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -3
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 1
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.564"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.564", %"class.v8::internal::PerIsolateAssertScope.564"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.564", %"class.v8::internal::PerIsolateAssertScope.564"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 2
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.564"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.564", %"class.v8::internal::PerIsolateAssertScope.564"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.564", %"class.v8::internal::PerIsolateAssertScope.564"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 1
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = or i32 %4, 2
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -3
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 1
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.566"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.566", %"class.v8::internal::PerIsolateAssertScope.566"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.566", %"class.v8::internal::PerIsolateAssertScope.566"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -5
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope.566"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.566", %"class.v8::internal::PerIsolateAssertScope.566"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.566", %"class.v8::internal::PerIsolateAssertScope.566"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 4
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 2
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = and i32 %4, -5
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -5
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 2
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.568"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.568", %"class.v8::internal::PerIsolateAssertScope.568"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.568", %"class.v8::internal::PerIsolateAssertScope.568"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 4
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.568"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.568", %"class.v8::internal::PerIsolateAssertScope.568"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.568", %"class.v8::internal::PerIsolateAssertScope.568"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 4
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 2
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = or i32 %4, 4
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -5
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 2
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.570"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.570", %"class.v8::internal::PerIsolateAssertScope.570"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.570", %"class.v8::internal::PerIsolateAssertScope.570"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -9
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope.570"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.570", %"class.v8::internal::PerIsolateAssertScope.570"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.570", %"class.v8::internal::PerIsolateAssertScope.570"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 8
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 3
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = and i32 %4, -9
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -9
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 3
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.572"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.572", %"class.v8::internal::PerIsolateAssertScope.572"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.572", %"class.v8::internal::PerIsolateAssertScope.572"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 8
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.572"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.572", %"class.v8::internal::PerIsolateAssertScope.572"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.572", %"class.v8::internal::PerIsolateAssertScope.572"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 8
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 3
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = or i32 %4, 8
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE3ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -9
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 3
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.574"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.574", %"class.v8::internal::PerIsolateAssertScope.574"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.574", %"class.v8::internal::PerIsolateAssertScope.574"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -17
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope.574"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.574", %"class.v8::internal::PerIsolateAssertScope.574"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.574", %"class.v8::internal::PerIsolateAssertScope.574"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 4
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = and i32 %4, -17
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -17
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 4
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.576"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.576", %"class.v8::internal::PerIsolateAssertScope.576"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.576", %"class.v8::internal::PerIsolateAssertScope.576"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 16
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.576"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.576", %"class.v8::internal::PerIsolateAssertScope.576"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.576", %"class.v8::internal::PerIsolateAssertScope.576"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 4
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = or i32 %4, 16
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE4ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -17
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 4
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.578"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.578", %"class.v8::internal::PerIsolateAssertScope.578"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.578", %"class.v8::internal::PerIsolateAssertScope.578"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = and i32 %6, -33
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EED2Ev(%"class.v8::internal::PerIsolateAssertScope.578"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.578", %"class.v8::internal::PerIsolateAssertScope.578"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.578", %"class.v8::internal::PerIsolateAssertScope.578"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 32
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 5
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = and i32 %4, -33
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb0EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -33
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 5
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EEC2EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.580"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EEC5EPNS0_7IsolateE) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.580", %"class.v8::internal::PerIsolateAssertScope.580"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.580", %"class.v8::internal::PerIsolateAssertScope.580"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 100
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = or i32 %6, 32
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EED2Ev(%"class.v8::internal::PerIsolateAssertScope.580"*) unnamed_addr #0 comdat($_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.580", %"class.v8::internal::PerIsolateAssertScope.580"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PerIsolateAssertScope.580", %"class.v8::internal::PerIsolateAssertScope.580"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 100
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 32
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE4OpenEPNS0_7IsolateEPb(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 5
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %1, align 1
  %8 = or i32 %4, 32
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE5ELb1EE5CloseEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 100
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -33
  %6 = zext i1 %1 to i32
  %7 = shl nuw nsw i32 %6, 5
  %8 = or i32 %5, %7
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
