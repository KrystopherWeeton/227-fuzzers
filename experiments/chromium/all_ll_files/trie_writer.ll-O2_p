; ModuleID = '../../net/tools/huffman_trie/trie/trie_writer.cc'
source_filename = "../../net/tools/huffman_trie/trie/trie_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"struct.net::huffman_trie::ReversedEntry" = type { %"class.std::__1::vector", %"class.net::huffman_trie::TrieEntry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.net::huffman_trie::TrieEntry" = type { i32 (...)** }
%"class.net::huffman_trie::TrieWriter" = type { %"class.net::huffman_trie::BitWriter", %"class.std::__1::map"*, %"class.net::huffman_trie::HuffmanBuilder"* }
%"class.net::huffman_trie::BitWriter" = type { i8, i8, i32, %"class.std::__1::vector" }
%"class.std::__1::map" = type opaque
%"class.net::huffman_trie::HuffmanBuilder" = type { %"class.std::__1::map.1" }
%"class.std::__1::map.1" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.net::huffman_trie::TrieEntry"**, %"class.net::huffman_trie::TrieEntry"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.net::huffman_trie::TrieEntry"** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.net::huffman_trie::ReversedEntry"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::huffman_trie::TrieBitBuffer" = type { i8, i32, %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"class.std::__1::__compressed_pair.35" }
%"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition" = type { i8, i8, i32 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* }
%"class.std::__1::reverse_iterator.55" = type { %"class.std::__1::__wrap_iter.32", %"class.std::__1::__wrap_iter.32" }
%"class.std::__1::__wrap_iter.32" = type { %"class.std::__1::unique_ptr"* }

$_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_SD_NS_11__wrap_iterISD_EEEEvT0_SG_T1_SH_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_PNS_15iterator_traitsISG_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_NS_11__wrap_iterISD_EESF_EEvT0_SG_T1_SH_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EENSF_INS_11__wrap_iterISG_EEEESK_EEvT0_SL_T1_SM_T2_T_ = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN3net12huffman_trie13ReversedEntryC1ENSt3__16vectorIhNS2_9allocatorIhEEEEPKNS0_9TrieEntryE = hidden unnamed_addr alias void (%"struct.net::huffman_trie::ReversedEntry"*, %"class.std::__1::vector"*, %"class.net::huffman_trie::TrieEntry"*), void (%"struct.net::huffman_trie::ReversedEntry"*, %"class.std::__1::vector"*, %"class.net::huffman_trie::TrieEntry"*)* @_ZN3net12huffman_trie13ReversedEntryC2ENSt3__16vectorIhNS2_9allocatorIhEEEEPKNS0_9TrieEntryE
@_ZN3net12huffman_trie13ReversedEntryD1Ev = hidden unnamed_addr alias void (%"struct.net::huffman_trie::ReversedEntry"*), void (%"struct.net::huffman_trie::ReversedEntry"*)* @_ZN3net12huffman_trie13ReversedEntryD2Ev
@_ZN3net12huffman_trie10TrieWriterC1ERKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE = hidden unnamed_addr alias void (%"class.net::huffman_trie::TrieWriter"*, %"class.std::__1::map"*, %"class.net::huffman_trie::HuffmanBuilder"*), void (%"class.net::huffman_trie::TrieWriter"*, %"class.std::__1::map"*, %"class.net::huffman_trie::HuffmanBuilder"*)* @_ZN3net12huffman_trie10TrieWriterC2ERKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE
@_ZN3net12huffman_trie10TrieWriterD1Ev = hidden unnamed_addr alias void (%"class.net::huffman_trie::TrieWriter"*), void (%"class.net::huffman_trie::TrieWriter"*)* @_ZN3net12huffman_trie10TrieWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13ReversedEntryC2ENSt3__16vectorIhNS2_9allocatorIhEEEEPKNS0_9TrieEntryE(%"struct.net::huffman_trie::ReversedEntry"*, %"class.std::__1::vector"* nocapture readonly, %"class.net::huffman_trie::TrieEntry"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %3
  %13 = icmp slt i64 %10, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #12
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %10) #13
  %18 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 0, i32 0, i32 1
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 %10
  %21 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = load i64, i64* %6, align 8
  %25 = bitcast i8** %18 to i64*
  %26 = ptrtoint i8* %23 to i64
  %27 = sub i64 %24, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 %23, i64 %27, i1 false) #11
  %30 = getelementptr inbounds i8, i8* %17, i64 %27
  br label %31

31:                                               ; preds = %29, %16
  %32 = phi i8* [ %30, %29 ], [ %17, %16 ]
  %33 = ptrtoint i8* %32 to i64
  store i64 %33, i64* %25, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 1
  store %"class.net::huffman_trie::TrieEntry"* %2, %"class.net::huffman_trie::TrieEntry"** %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13ReversedEntryD2Ev(%"struct.net::huffman_trie::ReversedEntry"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #13
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie10TrieWriterC2ERKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieWriter"*, %"class.std::__1::map"*, %"class.net::huffman_trie::HuffmanBuilder"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9BitWriterC1Ev(%"class.net::huffman_trie::BitWriter"* %4) #11
  %5 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 1
  store %"class.std::__1::map"* %1, %"class.std::__1::map"** %5, align 8
  %6 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 2
  store %"class.net::huffman_trie::HuffmanBuilder"* %2, %"class.net::huffman_trie::HuffmanBuilder"** %6, align 8
  ret void
}

declare void @_ZN3net12huffman_trie9BitWriterC1Ev(%"class.net::huffman_trie::BitWriter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie10TrieWriterD2Ev(%"class.net::huffman_trie::TrieWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9BitWriterD1Ev(%"class.net::huffman_trie::BitWriter"* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12huffman_trie9BitWriterD1Ev(%"class.net::huffman_trie::BitWriter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12huffman_trie10TrieWriter12WriteEntriesERKNSt3__16vectorIPNS0_9TrieEntryENS2_9allocatorIS5_EEEEPj(%"class.net::huffman_trie::TrieWriter"*, %"class.std::__1::vector.10"* nocapture readonly dereferenceable(24), i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, align 8
  %5 = alloca %"class.std::__1::vector.17", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.net::huffman_trie::TrieEntry"**, %"class.net::huffman_trie::TrieEntry"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.net::huffman_trie::TrieEntry"**, %"class.net::huffman_trie::TrieEntry"*** %11, align 8
  %13 = icmp eq %"class.net::huffman_trie::TrieEntry"** %10, %12
  br i1 %13, label %250, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.17"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %19 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.std::__1::vector"* %7 to i8*
  %29 = bitcast i8** %26 to i64*
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::vector"* %7 to i64*
  %32 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %33 = bitcast %"class.std::__1::unique_ptr"** %17 to i64*
  br label %91

34:                                               ; preds = %247
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %37 = bitcast i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %36 to i64
  store i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)* @_ZN3net12huffman_trie12_GLOBAL__N_122CompareReversedEntriesERKNSt3__110unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS4_EEEES9_, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %4, align 8
  %40 = sub i64 %39, %38
  %41 = ashr exact i64 %40, 3
  %42 = icmp sgt i64 %40, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %34
  %44 = icmp slt i64 %41, 1152921504606846975
  %45 = select i1 %44, i64 %41, i64 1152921504606846975
  br label %46

46:                                               ; preds = %51, %43
  %47 = phi i64 [ %52, %51 ], [ %45, %43 ]
  %48 = shl i64 %47, 3
  %49 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %48, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %46
  %52 = lshr i64 %47, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %46

54:                                               ; preds = %51, %34
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %35, %"class.std::__1::unique_ptr"* %36, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %4, i64 %41, %"class.std::__1::unique_ptr"* null, i64 0) #11
  br label %57

55:                                               ; preds = %46
  %56 = bitcast i8* %49 to %"class.std::__1::unique_ptr"*
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %35, %"class.std::__1::unique_ptr"* %36, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %4, i64 %41, %"class.std::__1::unique_ptr"* nonnull %56, i64 %47) #11
  call void @_ZdlPv(i8* nonnull %49) #13
  br label %57

57:                                               ; preds = %54, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %58 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %60 = call zeroext i1 @_ZN3net12huffman_trie10TrieWriter19WriteDispatchTablesENSt3__111__wrap_iterIPNS2_10unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS5_EEEEEESA_Pj(%"class.net::huffman_trie::TrieWriter"* %0, %"class.std::__1::unique_ptr"* %58, %"class.std::__1::unique_ptr"* %59, i32* %2)
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr"* %61, null
  br i1 %62, label %90, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::unique_ptr"* %61 to i8*
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr"* %65, %61
  br i1 %66, label %88, label %67

67:                                               ; preds = %63, %83
  %68 = phi %"class.std::__1::unique_ptr"* [ %69, %83 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %70, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %70, align 8
  %72 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %71, i64 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = ptrtoint i8* %75 to i64
  %79 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %71, i64 0, i32 0, i32 0, i32 1
  %80 = bitcast i8** %79 to i64*
  store i64 %78, i64* %80, align 8
  call void @_ZdlPv(i8* nonnull %75) #13
  br label %81

81:                                               ; preds = %77, %73
  %82 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %71 to i8*
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %81, %67
  %84 = icmp eq %"class.std::__1::unique_ptr"* %69, %61
  br i1 %84, label %85, label %67

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.17"* %5 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %63
  %89 = phi i8* [ %87, %85 ], [ %64, %63 ]
  store %"class.std::__1::unique_ptr"* %61, %"class.std::__1::unique_ptr"** %17, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %57, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %250

91:                                               ; preds = %14, %247
  %92 = phi %"class.net::huffman_trie::TrieEntry"** [ %10, %14 ], [ %248, %247 ]
  %93 = load %"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieEntry"** %92, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"struct.net::huffman_trie::ReversedEntry"* inttoptr (i64 -6148914691236517206 to %"struct.net::huffman_trie::ReversedEntry"*), %"struct.net::huffman_trie::ReversedEntry"** %20, align 8
  %94 = call i8* @_Znwm(i64 32) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %95 = bitcast %"class.net::huffman_trie::TrieEntry"* %93 to void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)***
  %96 = load void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)**, void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)*, void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)** %96, i64 2
  %98 = load void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)*, void (%"class.std::__1::basic_string"*, %"class.net::huffman_trie::TrieEntry"*)** %97, align 8
  call void %98(%"class.std::__1::basic_string"* nonnull sret %8, %"class.net::huffman_trie::TrieEntry"* %93) #11
  %99 = load i8, i8* %23, align 1, !noalias !2
  %100 = icmp slt i8 %99, 0
  %101 = load i64, i64* %24, align 8, !noalias !2
  %102 = zext i8 %99 to i64
  %103 = select i1 %100, i64 %101, i64 %102
  %104 = add i64 %103, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %119, label %106

106:                                              ; preds = %91
  %107 = icmp slt i64 %104, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %109) #12
  unreachable

110:                                              ; preds = %106
  %111 = call i8* @_Znwm(i64 %104) #13
  store i8* %111, i8** %25, align 8, !alias.scope !2
  %112 = getelementptr inbounds i8, i8* %111, i64 %104
  store i8* %112, i8** %27, align 8, !alias.scope !2
  %113 = ptrtoint i8* %111 to i64
  %114 = sub i64 %104, %113
  %115 = getelementptr i8, i8* %111, i64 %114
  %116 = ptrtoint i8* %115 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %111, i8 0, i64 %116, i1 false) #11, !noalias !2
  %117 = ptrtoint i8* %112 to i64
  store i64 %117, i64* %29, align 8, !alias.scope !2
  %118 = icmp eq i64 %103, 0
  br i1 %118, label %187, label %119

119:                                              ; preds = %110, %91
  %120 = phi i64 [ %113, %110 ], [ 0, %91 ]
  %121 = phi i64 [ %117, %110 ], [ 0, %91 ]
  %122 = phi i8* [ %111, %110 ], [ null, %91 ]
  %123 = add nsw i64 %103, -1
  %124 = load i8*, i8** %30, align 8, !noalias !2
  %125 = select i1 %100, i8* %124, i8* %21
  %126 = getelementptr inbounds i8, i8* %125, i64 %123
  %127 = load i8, i8* %126, align 1
  store i8 %127, i8* %122, align 1
  %128 = icmp eq i64 %103, 1
  br i1 %128, label %187, label %129

129:                                              ; preds = %119
  %130 = add i64 %103, -2
  %131 = icmp slt i8 %99, 0
  %132 = select i1 %131, i8* %124, i8* %21
  %133 = getelementptr inbounds i8, i8* %132, i64 %130
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 %134, i8* %135, align 1
  %136 = icmp eq i64 %103, 2
  br i1 %136, label %157, label %137

137:                                              ; preds = %129
  %138 = add i64 %103, -2
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %103, 3
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  %142 = sub i64 %138, %139
  br label %160

143:                                              ; preds = %160, %137
  %144 = phi i64 [ 2, %137 ], [ %184, %160 ]
  %145 = icmp eq i64 %139, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %143
  %147 = load i8, i8* %23, align 1, !noalias !2
  %148 = load i8*, i8** %25, align 8, !alias.scope !2
  %149 = load i8*, i8** %30, align 8, !noalias !2
  %150 = xor i64 %144, -1
  %151 = add i64 %103, %150
  %152 = icmp slt i8 %147, 0
  %153 = select i1 %152, i8* %149, i8* %21
  %154 = getelementptr inbounds i8, i8* %153, i64 %151
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %148, i64 %144
  store i8 %155, i8* %156, align 1
  br label %157

157:                                              ; preds = %146, %143, %129
  %158 = load i64, i64* %29, align 8, !alias.scope !2
  %159 = load i64, i64* %31, align 8, !alias.scope !2
  br label %187

160:                                              ; preds = %160, %141
  %161 = phi i64 [ 2, %141 ], [ %184, %160 ]
  %162 = phi i64 [ %142, %141 ], [ %185, %160 ]
  %163 = load i8, i8* %23, align 1, !noalias !2
  %164 = load i8*, i8** %25, align 8, !alias.scope !2
  %165 = load i8*, i8** %30, align 8, !noalias !2
  %166 = xor i64 %161, -1
  %167 = add i64 %103, %166
  %168 = icmp slt i8 %163, 0
  %169 = select i1 %168, i8* %165, i8* %21
  %170 = getelementptr inbounds i8, i8* %169, i64 %167
  %171 = load i8, i8* %170, align 1
  %172 = getelementptr inbounds i8, i8* %164, i64 %161
  store i8 %171, i8* %172, align 1
  %173 = or i64 %161, 1
  %174 = load i8, i8* %23, align 1, !noalias !2
  %175 = load i8*, i8** %25, align 8, !alias.scope !2
  %176 = load i8*, i8** %30, align 8, !noalias !2
  %177 = sub nuw nsw i64 -2, %161
  %178 = add i64 %103, %177
  %179 = icmp slt i8 %174, 0
  %180 = select i1 %179, i8* %176, i8* %21
  %181 = getelementptr inbounds i8, i8* %180, i64 %178
  %182 = load i8, i8* %181, align 1
  %183 = getelementptr inbounds i8, i8* %175, i64 %173
  store i8 %182, i8* %183, align 1
  %184 = add nuw i64 %161, 2
  %185 = add i64 %162, -2
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %143, label %160

187:                                              ; preds = %119, %157, %110
  %188 = phi i64 [ %113, %110 ], [ %159, %157 ], [ %120, %119 ]
  %189 = phi i64 [ %117, %110 ], [ %158, %157 ], [ %121, %119 ]
  %190 = xor i64 %188, -1
  %191 = add i64 %189, %190
  %192 = inttoptr i64 %188 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 %191
  store i8 0, i8* %193, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 24, i1 false) #11
  %194 = load i64, i64* %29, align 8
  %195 = load i64, i64* %31, align 8
  %196 = sub i64 %194, %195
  %197 = icmp eq i64 %196, 0
  %198 = inttoptr i64 %195 to i8*
  br i1 %197, label %213, label %199

199:                                              ; preds = %187
  %200 = icmp slt i64 %196, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %199
  %202 = bitcast i8* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %202) #12
  unreachable

203:                                              ; preds = %199
  %204 = call i8* @_Znwm(i64 %196) #13
  %205 = getelementptr inbounds i8, i8* %94, i64 8
  %206 = bitcast i8* %205 to i8**
  store i8* %204, i8** %206, align 8
  %207 = bitcast i8* %94 to i8**
  store i8* %204, i8** %207, align 8
  %208 = getelementptr inbounds i8, i8* %204, i64 %196
  %209 = getelementptr inbounds i8, i8* %94, i64 16
  %210 = bitcast i8* %209 to i8**
  store i8* %208, i8** %210, align 8
  %211 = bitcast i8* %205 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 %198, i64 %196, i1 false) #11
  %212 = ptrtoint i8* %208 to i64
  store i64 %212, i64* %211, align 8
  br label %213

213:                                              ; preds = %187, %203
  %214 = getelementptr inbounds i8, i8* %94, i64 24
  %215 = bitcast i8* %214 to %"class.net::huffman_trie::TrieEntry"**
  store %"class.net::huffman_trie::TrieEntry"* %93, %"class.net::huffman_trie::TrieEntry"** %215, align 8
  %216 = ptrtoint i8* %94 to i64
  store i64 %216, i64* %32, align 8
  %217 = icmp eq i64 %195, 0
  br i1 %217, label %219, label %218

218:                                              ; preds = %213
  store i64 %195, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %198) #13
  br label %219

219:                                              ; preds = %213, %218
  %220 = load i8, i8* %23, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %219
  %223 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %223) #13
  br label %224

224:                                              ; preds = %219, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %225 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %226 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %227 = icmp ult %"class.std::__1::unique_ptr"* %225, %226
  br i1 %227, label %228, label %233

228:                                              ; preds = %224
  %229 = load i64, i64* %32, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %20, align 8
  %230 = bitcast %"class.std::__1::unique_ptr"* %225 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %225, i64 1
  %232 = ptrtoint %"class.std::__1::unique_ptr"* %231 to i64
  store i64 %232, i64* %33, align 8
  br label %234

233:                                              ; preds = %224
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.17"* nonnull %5, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #11
  br label %234

234:                                              ; preds = %228, %233
  %235 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %20, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %20, align 8
  %236 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %235, null
  br i1 %236, label %247, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %235, i64 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = ptrtoint i8* %239 to i64
  %243 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %235, i64 0, i32 0, i32 0, i32 1
  %244 = bitcast i8** %243 to i64*
  store i64 %242, i64* %244, align 8
  call void @_ZdlPv(i8* nonnull %239) #13
  br label %245

245:                                              ; preds = %241, %237
  %246 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %235 to i8*
  call void @_ZdlPv(i8* %246) #13
  br label %247

247:                                              ; preds = %234, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %248 = getelementptr inbounds %"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieEntry"** %92, i64 1
  %249 = icmp eq %"class.net::huffman_trie::TrieEntry"** %248, %12
  br i1 %249, label %34, label %91

250:                                              ; preds = %3, %90
  %251 = phi i1 [ %60, %90 ], [ false, %3 ]
  ret i1 %251
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12huffman_trie12_GLOBAL__N_122CompareReversedEntriesERKNSt3__110unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS4_EEEES9_(%"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) #5 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %6, i64 0, i32 0, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %27, %14
  %18 = phi i8* [ %28, %27 ], [ %16, %14 ]
  %19 = phi i8* [ %29, %27 ], [ %10, %14 ]
  %20 = icmp eq i8* %18, %8
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = load i8, i8* %18, align 1
  %23 = load i8, i8* %19, align 1
  %24 = icmp ult i8 %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = icmp ult i8 %23, %22
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %18, i64 1
  %29 = getelementptr inbounds i8, i8* %19, i64 1
  %30 = icmp eq i8* %29, %12
  br i1 %30, label %31, label %17

31:                                               ; preds = %17, %21, %25, %27, %2
  %32 = phi i1 [ false, %2 ], [ false, %27 ], [ false, %25 ], [ true, %17 ], [ true, %21 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12huffman_trie10TrieWriter19WriteDispatchTablesENSt3__111__wrap_iterIPNS2_10unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS5_EEEEEESA_Pj(%"class.net::huffman_trie::TrieWriter"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.net::huffman_trie::TrieBitBuffer", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN3net12huffman_trie13TrieBitBufferC1Ev(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7) #11
  %12 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  %16 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  br i1 %15, label %17, label %19

17:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11, !alias.scope !5
  %18 = bitcast i8** %13 to i64*
  call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteSizeEm(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i64 0) #11
  br label %199

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11, !noalias !5
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11, !noalias !5
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %23, align 8, !noalias !5
  %25 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %24, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !5
  %28 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %24 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !5
  %30 = bitcast i8** %21 to i64*
  %31 = bitcast %"class.std::__1::vector"* %6 to i64*
  %32 = bitcast i8** %22 to i64*
  %33 = icmp eq i64 %27, %29
  br i1 %33, label %36, label %39

34:                                               ; preds = %113
  %35 = icmp ugt i64 %123, %116
  br i1 %35, label %39, label %36

36:                                               ; preds = %34, %19
  %37 = phi %"struct.net::huffman_trie::ReversedEntry"* [ %24, %19 ], [ %117, %34 ]
  %38 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %38) #12, !noalias !5
  unreachable

39:                                               ; preds = %19, %34
  %40 = phi i64 [ %116, %34 ], [ 0, %19 ]
  %41 = phi i64 [ %122, %34 ], [ %29, %19 ]
  %42 = phi i8* [ %115, %34 ], [ null, %19 ]
  %43 = phi i64 [ %114, %34 ], [ 0, %19 ]
  %44 = inttoptr i64 %41 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %40
  %46 = load i8, i8* %45, align 1, !noalias !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %125, label %48

48:                                               ; preds = %39, %66
  %49 = phi %"class.std::__1::unique_ptr"* [ %50, %66 ], [ %1, %39 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %2
  br i1 %51, label %71, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %53, align 8, !noalias !5
  %55 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %54, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !5
  %58 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %54 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !5
  %60 = sub i64 %57, %59
  %61 = icmp ugt i64 %40, %60
  br i1 %61, label %125, label %62

62:                                               ; preds = %52
  %63 = icmp ugt i64 %60, %40
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %54 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %65) #12, !noalias !5
  unreachable

66:                                               ; preds = %62
  %67 = inttoptr i64 %59 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %40
  %69 = load i8, i8* %68, align 1, !noalias !5
  %70 = icmp eq i8 %69, %46
  br i1 %70, label %48, label %125

71:                                               ; preds = %48
  %72 = load i8*, i8** %22, align 8, !noalias !5
  %73 = icmp eq i8* %42, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  store i8 %46, i8* %42, align 1, !noalias !5
  %75 = getelementptr inbounds i8, i8* %42, i64 1
  %76 = ptrtoint i8* %75 to i64
  store i64 %76, i64* %30, align 8, !noalias !5
  br label %113

77:                                               ; preds = %71
  %78 = ptrtoint i8* %42 to i64
  %79 = load i64, i64* %31, align 8, !noalias !5
  %80 = sub i64 %78, %79
  %81 = add i64 %80, 1
  %82 = icmp slt i64 %81, 0
  %83 = inttoptr i64 %79 to i8*
  br i1 %82, label %84, label %86

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %85) #12, !noalias !5
  unreachable

86:                                               ; preds = %77
  %87 = icmp ult i64 %80, 4611686018427387903
  br i1 %87, label %88, label %93

88:                                               ; preds = %86
  %89 = shl i64 %80, 1
  %90 = icmp ult i64 %89, %81
  %91 = select i1 %90, i64 %81, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88, %86
  %94 = phi i64 [ %91, %88 ], [ 9223372036854775807, %86 ]
  %95 = call i8* @_Znwm(i64 %94) #13, !noalias !5
  br label %96

96:                                               ; preds = %93, %88
  %97 = phi i64 [ %94, %93 ], [ 0, %88 ]
  %98 = phi i8* [ %95, %93 ], [ null, %88 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %80
  %100 = getelementptr inbounds i8, i8* %98, i64 %97
  %101 = ptrtoint i8* %100 to i64
  store i8 %46, i8* %99, align 1, !noalias !5
  %102 = getelementptr inbounds i8, i8* %99, i64 1
  %103 = ptrtoint i8* %102 to i64
  %104 = sub i64 %43, %79
  %105 = sub i64 0, %104
  %106 = getelementptr inbounds i8, i8* %99, i64 %105
  %107 = ptrtoint i8* %106 to i64
  %108 = icmp sgt i64 %104, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %83, i64 %104, i1 false) #11, !noalias !5
  br label %110

110:                                              ; preds = %109, %96
  store i64 %107, i64* %31, align 8, !noalias !5
  store i64 %103, i64* %30, align 8, !noalias !5
  store i64 %101, i64* %32, align 8, !noalias !5
  %111 = icmp eq i64 %79, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  call void @_ZdlPv(i8* nonnull %83) #13, !noalias !5
  br label %113

113:                                              ; preds = %112, %110, %74
  %114 = phi i64 [ %76, %74 ], [ %103, %110 ], [ %103, %112 ]
  %115 = phi i8* [ %75, %74 ], [ %102, %110 ], [ %102, %112 ]
  %116 = add nuw i64 %40, 1
  %117 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %23, align 8, !noalias !5
  %118 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %117, i64 0, i32 0, i32 0, i32 1
  %119 = bitcast i8** %118 to i64*
  %120 = load i64, i64* %119, align 8, !noalias !5
  %121 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %117 to i64*
  %122 = load i64, i64* %121, align 8, !noalias !5
  %123 = sub i64 %120, %122
  %124 = icmp ult i64 %40, %123
  br i1 %124, label %34, label %125

125:                                              ; preds = %39, %113, %52, %66
  %126 = phi i64 [ %43, %66 ], [ %43, %52 ], [ %43, %39 ], [ %114, %113 ]
  %127 = load i64, i64* %31, align 8, !noalias !5
  %128 = bitcast %"class.std::__1::vector"* %8 to i64*
  store i64 %127, i64* %128, align 8, !alias.scope !5
  %129 = bitcast i8** %13 to i64*
  store i64 %126, i64* %129, align 8, !alias.scope !5
  %130 = load i64, i64* %32, align 8, !noalias !5
  %131 = bitcast i8** %14 to i64*
  store i64 %130, i64* %131, align 8, !alias.scope !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11, !noalias !5
  %132 = inttoptr i64 %127 to i8*
  %133 = sub i64 %126, %127
  call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteSizeEm(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i64 %133) #11
  %134 = icmp eq i64 %126, %127
  br i1 %134, label %147, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 1
  %137 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 2
  %138 = inttoptr i64 %127 to i8*
  br label %139

139:                                              ; preds = %135, %139
  %140 = phi i64 [ 0, %135 ], [ %145, %139 ]
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = load %"class.std::__1::map"*, %"class.std::__1::map"** %136, align 8
  %144 = load %"class.net::huffman_trie::HuffmanBuilder"*, %"class.net::huffman_trie::HuffmanBuilder"** %137, align 8
  call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteCharEhRKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i8 zeroext %142, %"class.std::__1::map"* %143, %"class.net::huffman_trie::HuffmanBuilder"* %144) #11
  %145 = add nuw i64 %140, 1
  %146 = icmp ult i64 %145, %133
  br i1 %146, label %139, label %147

147:                                              ; preds = %139, %125
  br i1 %15, label %199, label %148

148:                                              ; preds = %147
  %149 = icmp eq i64 %133, 0
  %150 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %151 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %150 to i64
  %152 = sub i64 %151, %5
  %153 = and i64 %152, 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %173

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %157 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %156, align 8
  %158 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 %133
  br i1 %149, label %171, label %161

161:                                              ; preds = %155
  %162 = ptrtoint i8* %160 to i64
  %163 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %157, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast i8** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %162
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %161
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %159, i8* align 1 %160, i64 %166, i1 false) #11
  br label %169

169:                                              ; preds = %168, %161
  %170 = getelementptr inbounds i8, i8* %159, i64 %166
  store i8* %170, i8** %163, align 8
  br label %171

171:                                              ; preds = %169, %155
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  br label %173

173:                                              ; preds = %171, %148
  %174 = phi %"class.std::__1::unique_ptr"* [ %1, %148 ], [ %172, %171 ]
  %175 = icmp ult i64 %152, 8
  br i1 %175, label %203, label %176

176:                                              ; preds = %173, %360
  %177 = phi %"class.std::__1::unique_ptr"* [ %361, %360 ], [ %174, %173 ]
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %178, align 8
  %180 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 %133
  br i1 %149, label %193, label %183

183:                                              ; preds = %176
  %184 = ptrtoint i8* %182 to i64
  %185 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %179, i64 0, i32 0, i32 0, i32 1
  %186 = bitcast i8** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %187, %184
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %183
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 %182, i64 %188, i1 false) #11
  br label %191

191:                                              ; preds = %190, %183
  %192 = getelementptr inbounds i8, i8* %181, i64 %188
  store i8* %192, i8** %185, align 8
  br label %193

193:                                              ; preds = %191, %176
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 1, i32 0, i32 0, i32 0
  %195 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %194, align 8
  %196 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %195, i64 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 %133
  br i1 %149, label %360, label %350

199:                                              ; preds = %17, %147
  %200 = phi i64* [ %129, %147 ], [ %18, %17 ]
  %201 = phi i8* [ %132, %147 ], [ null, %17 ]
  %202 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #11
  store i32 -1, i32* %9, align 4
  br label %324

203:                                              ; preds = %360, %173
  %204 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #11
  store i32 -1, i32* %9, align 4
  br i1 %15, label %324, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 1
  %207 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 2
  %208 = bitcast i32* %10 to i8*
  br label %209

209:                                              ; preds = %205, %322
  %210 = phi %"class.std::__1::unique_ptr"* [ %1, %205 ], [ %246, %322 ]
  %211 = phi i64 [ %5, %205 ], [ %247, %322 ]
  %212 = ptrtoint %"class.std::__1::unique_ptr"* %210 to i64
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 0, i32 0, i32 0, i32 0
  %214 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %213, align 8
  %215 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %214, i64 0, i32 0, i32 0, i32 1
  %216 = bitcast i8** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %214 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = icmp eq i64 %217, %219
  br i1 %220, label %221, label %223

221:                                              ; preds = %209
  %222 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %214 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %222) #12
  unreachable

223:                                              ; preds = %209
  %224 = inttoptr i64 %219 to i8*
  %225 = load i8, i8* %224, align 1
  br label %226

226:                                              ; preds = %241, %223
  %227 = phi %"class.std::__1::unique_ptr"* [ %210, %223 ], [ %228, %241 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %227, i64 1
  %229 = icmp eq %"class.std::__1::unique_ptr"* %228, %2
  br i1 %229, label %245, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %228, i64 0, i32 0, i32 0, i32 0
  %232 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %231, align 8
  %233 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %232, i64 0, i32 0, i32 0, i32 1
  %234 = bitcast i8** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %232 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = icmp eq i64 %235, %237
  br i1 %238, label %239, label %241

239:                                              ; preds = %230
  %240 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %232 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %240) #12
  unreachable

241:                                              ; preds = %230
  %242 = inttoptr i64 %237 to i8*
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, %225
  br i1 %244, label %226, label %245

245:                                              ; preds = %226, %241
  %246 = phi %"class.std::__1::unique_ptr"* [ %2, %226 ], [ %228, %241 ]
  %247 = ptrtoint %"class.std::__1::unique_ptr"* %246 to i64
  %248 = load %"class.std::__1::map"*, %"class.std::__1::map"** %206, align 8
  %249 = load %"class.net::huffman_trie::HuffmanBuilder"*, %"class.net::huffman_trie::HuffmanBuilder"** %207, align 8
  call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteCharEhRKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i8 zeroext %225, %"class.std::__1::map"* %248, %"class.net::huffman_trie::HuffmanBuilder"* %249) #11
  %250 = icmp eq i8 %225, 0
  br i1 %250, label %251, label %263

251:                                              ; preds = %245
  %252 = sub i64 %247, %211
  %253 = icmp eq i64 %252, 8
  br i1 %253, label %254, label %336

254:                                              ; preds = %251
  %255 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %213, align 8
  %256 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %255, i64 0, i32 1
  %257 = load %"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieEntry"** %256, align 8
  %258 = bitcast %"class.net::huffman_trie::TrieEntry"* %257 to i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)***
  %259 = load i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)**, i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)*** %258, align 8
  %260 = getelementptr inbounds i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)*, i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)** %259, i64 3
  %261 = load i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)*, i1 (%"class.net::huffman_trie::TrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)** %260, align 8
  %262 = call zeroext i1 %261(%"class.net::huffman_trie::TrieEntry"* %257, %"class.net::huffman_trie::TrieBitBuffer"* nonnull %7) #11
  br i1 %262, label %322, label %336

263:                                              ; preds = %245
  %264 = icmp eq %"class.std::__1::unique_ptr"* %246, %210
  br i1 %264, label %317, label %265

265:                                              ; preds = %263
  %266 = ptrtoint %"class.std::__1::unique_ptr"* %227 to i64
  %267 = sub i64 %266, %212
  %268 = and i64 %267, 8
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %286

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 0, i32 0, i32 0, i32 0
  %272 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %271, align 8
  %273 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 1
  %276 = ptrtoint i8* %275 to i64
  %277 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %272, i64 0, i32 0, i32 0, i32 1
  %278 = bitcast i8** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = sub i64 %279, %276
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %283, label %282

282:                                              ; preds = %270
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %274, i8* align 1 %275, i64 %280, i1 false) #11
  br label %283

283:                                              ; preds = %282, %270
  %284 = getelementptr inbounds i8, i8* %274, i64 %280
  store i8* %284, i8** %277, align 8
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 1
  br label %286

286:                                              ; preds = %283, %265
  %287 = phi %"class.std::__1::unique_ptr"* [ %285, %283 ], [ %210, %265 ]
  %288 = icmp ult i64 %267, 8
  br i1 %288, label %317, label %289

289:                                              ; preds = %286, %346
  %290 = phi %"class.std::__1::unique_ptr"* [ %348, %346 ], [ %287, %286 ]
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %290, i64 0, i32 0, i32 0, i32 0
  %292 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %291, align 8
  %293 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %292, i64 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = ptrtoint i8* %295 to i64
  %297 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %292, i64 0, i32 0, i32 0, i32 1
  %298 = bitcast i8** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = sub i64 %299, %296
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %303, label %302

302:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %295, i64 %300, i1 false) #11
  br label %303

303:                                              ; preds = %302, %289
  %304 = getelementptr inbounds i8, i8* %294, i64 %300
  store i8* %304, i8** %297, align 8
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %290, i64 1
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %305, i64 0, i32 0, i32 0, i32 0
  %307 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %306, align 8
  %308 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %307, i64 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 1
  %311 = ptrtoint i8* %310 to i64
  %312 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %307, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast i8** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = sub i64 %314, %311
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %346, label %345

317:                                              ; preds = %286, %346, %263
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208) #11
  store i32 -1431655766, i32* %10, align 4
  %318 = call zeroext i1 @_ZN3net12huffman_trie10TrieWriter19WriteDispatchTablesENSt3__111__wrap_iterIPNS2_10unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS5_EEEEEESA_Pj(%"class.net::huffman_trie::TrieWriter"* %0, %"class.std::__1::unique_ptr"* %210, %"class.std::__1::unique_ptr"* %246, i32* nonnull %10)
  br i1 %318, label %319, label %321

319:                                              ; preds = %317
  %320 = load i32, i32* %10, align 4
  call void @_ZN3net12huffman_trie13TrieBitBuffer13WritePositionEjPi(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i32 %320, i32* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #11
  br label %322

321:                                              ; preds = %317
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #11
  br label %336

322:                                              ; preds = %254, %319
  %323 = icmp eq %"class.std::__1::unique_ptr"* %246, %2
  br i1 %323, label %324, label %209

324:                                              ; preds = %322, %199, %203
  %325 = phi i8* [ %202, %199 ], [ %204, %203 ], [ %204, %322 ]
  %326 = phi i8* [ %201, %199 ], [ %132, %203 ], [ %132, %322 ]
  %327 = phi i64* [ %200, %199 ], [ %129, %203 ], [ %129, %322 ]
  %328 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 1
  %329 = load %"class.std::__1::map"*, %"class.std::__1::map"** %328, align 8
  %330 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 2
  %331 = load %"class.net::huffman_trie::HuffmanBuilder"*, %"class.net::huffman_trie::HuffmanBuilder"** %330, align 8
  call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteCharEhRKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, i8 zeroext 127, %"class.std::__1::map"* %329, %"class.net::huffman_trie::HuffmanBuilder"* %331) #11
  %332 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0
  %333 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0, i32 2
  %334 = load i32, i32* %333, align 4
  store i32 %334, i32* %3, align 4
  call void @_ZN3net12huffman_trie13TrieBitBuffer5FlushEv(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7) #11
  %335 = call i32 @_ZN3net12huffman_trie13TrieBitBuffer16WriteToBitWriterEPNS0_9BitWriterE(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7, %"class.net::huffman_trie::BitWriter"* %332) #11
  br label %336

336:                                              ; preds = %254, %251, %321, %324
  %337 = phi i8* [ %325, %324 ], [ %204, %321 ], [ %204, %251 ], [ %204, %254 ]
  %338 = phi i8* [ %326, %324 ], [ %132, %321 ], [ %132, %251 ], [ %132, %254 ]
  %339 = phi i64* [ %327, %324 ], [ %129, %321 ], [ %129, %251 ], [ %129, %254 ]
  %340 = phi i1 [ true, %324 ], [ false, %321 ], [ false, %251 ], [ false, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %337) #11
  %341 = icmp eq i8* %338, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %336
  %343 = ptrtoint i8* %338 to i64
  store i64 %343, i64* %339, align 8
  call void @_ZdlPv(i8* nonnull %338) #13
  br label %344

344:                                              ; preds = %336, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN3net12huffman_trie13TrieBitBufferD1Ev(%"class.net::huffman_trie::TrieBitBuffer"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret i1 %340

345:                                              ; preds = %303
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %309, i8* align 1 %310, i64 %315, i1 false) #11
  br label %346

346:                                              ; preds = %345, %303
  %347 = getelementptr inbounds i8, i8* %309, i64 %315
  store i8* %347, i8** %312, align 8
  %348 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %290, i64 2
  %349 = icmp eq %"class.std::__1::unique_ptr"* %305, %227
  br i1 %349, label %317, label %289

350:                                              ; preds = %193
  %351 = ptrtoint i8* %198 to i64
  %352 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %195, i64 0, i32 0, i32 0, i32 1
  %353 = bitcast i8** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = sub i64 %354, %351
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %358, label %357

357:                                              ; preds = %350
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %198, i64 %355, i1 false) #11
  br label %358

358:                                              ; preds = %357, %350
  %359 = getelementptr inbounds i8, i8* %197, i64 %355
  store i8* %359, i8** %352, align 8
  br label %360

360:                                              ; preds = %358, %193
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 2
  %362 = icmp eq %"class.std::__1::unique_ptr"* %361, %2
  br i1 %362, label %203, label %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3net12huffman_trie13TrieBitBufferC1Ev(%"class.net::huffman_trie::TrieBitBuffer"*) unnamed_addr #1

declare void @_ZN3net12huffman_trie13TrieBitBuffer9WriteSizeEm(%"class.net::huffman_trie::TrieBitBuffer"*, i64) local_unnamed_addr #1

declare void @_ZN3net12huffman_trie13TrieBitBuffer9WriteCharEhRKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieBitBuffer"*, i8 zeroext, %"class.std::__1::map"*, %"class.net::huffman_trie::HuffmanBuilder"*) local_unnamed_addr #1

declare void @_ZN3net12huffman_trie13TrieBitBuffer13WritePositionEjPi(%"class.net::huffman_trie::TrieBitBuffer"*, i32, i32*) local_unnamed_addr #1

declare void @_ZN3net12huffman_trie13TrieBitBuffer5FlushEv(%"class.net::huffman_trie::TrieBitBuffer"*) local_unnamed_addr #1

declare i32 @_ZN3net12huffman_trie13TrieBitBuffer16WriteToBitWriterEPNS0_9BitWriterE(%"class.net::huffman_trie::TrieBitBuffer"*, %"class.net::huffman_trie::BitWriter"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net12huffman_trie13TrieBitBufferD1Ev(%"class.net::huffman_trie::TrieBitBuffer"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net12huffman_trie10TrieWriter8positionEv(%"class.net::huffman_trie::TrieWriter"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie10TrieWriter5FlushEv(%"class.net::huffman_trie::TrieWriter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieWriter", %"class.net::huffman_trie::TrieWriter"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9BitWriter5FlushEv(%"class.net::huffman_trie::BitWriter"* %2) #11
  ret void
}

declare void @_ZN3net12huffman_trie9BitWriter5FlushEv(%"class.net::huffman_trie::BitWriter"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.17"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !8

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %142, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %142, align 8
  %144 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %143, i64 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %145
  %150 = ptrtoint i8* %147 to i64
  %151 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %143, i64 0, i32 0, i32 0, i32 1
  %152 = bitcast i8** %151 to i64*
  store i64 %150, i64* %152, align 8
  tail call void @_ZdlPv(i8* nonnull %147) #13
  br label %153

153:                                              ; preds = %149, %145
  %154 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %143 to i8*
  tail call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %153, %139
  %156 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #13
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %16 [
    i64 0, label %50
    i64 1, label %50
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %10 = tail call zeroext i1 %8(%"class.std::__1::unique_ptr"* dereferenceable(8) %9, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #11
  br i1 %10, label %11, label %50

11:                                               ; preds = %7
  %12 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  br label %50

16:                                               ; preds = %6
  %17 = icmp slt i64 %3, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  br label %50

19:                                               ; preds = %16
  %20 = lshr i64 %3, 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %20
  %22 = icmp sgt i64 %3, %5
  br i1 %22, label %48, label %23

23:                                               ; preds = %19
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, %"class.std::__1::unique_ptr"* %4)
  %24 = sub nsw i64 %3, %20
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %20
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %24, %"class.std::__1::unique_ptr"* %25)
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_SD_NS_11__wrap_iterISD_EEEEvT0_SG_T1_SH_T2_T_(%"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %26, %"class.std::__1::unique_ptr"* %0, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  %27 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %27, label %50, label %28

28:                                               ; preds = %23, %44
  %29 = phi i64 [ %45, %44 ], [ 0, %23 ]
  %30 = phi %"class.std::__1::unique_ptr"* [ %46, %44 ], [ %4, %23 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %31, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %31, align 8
  %33 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i8* %36 to i64
  %40 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %32, i64 0, i32 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 8
  tail call void @_ZdlPv(i8* nonnull %36) #13
  br label %42

42:                                               ; preds = %38, %34
  %43 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %32 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %42, %28
  %45 = add nuw i64 %29, 1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 1
  %47 = icmp eq i64 %45, %3
  br i1 %47, label %50, label %28

48:                                               ; preds = %19
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %49 = sub nsw i64 %3, %20
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %49, %"class.std::__1::unique_ptr"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, i64 %49, %"class.std::__1::unique_ptr"* %4, i64 %5)
  ret void

50:                                               ; preds = %44, %23, %7, %11, %6, %6, %18
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %5, label %80, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %80, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  br label %13

13:                                               ; preds = %9, %57
  %14 = phi %"class.std::__1::unique_ptr"* [ %7, %9 ], [ %58, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %15, align 8
  store i64 %17, i64* %12, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr"* %14, %0
  br i1 %18, label %27, label %19

19:                                               ; preds = %13, %78
  %20 = phi %"class.std::__1::unique_ptr"* [ %22, %78 ], [ %14, %13 ]
  %21 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 -1
  %23 = call zeroext i1 %21(%"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4, %"class.std::__1::unique_ptr"* dereferenceable(8) %22) #11
  br i1 %23, label %60, label %24

24:                                               ; preds = %78, %19
  %25 = phi %"class.std::__1::unique_ptr"* [ %20, %19 ], [ %0, %78 ]
  %26 = load i64, i64* %12, align 8
  br label %27

27:                                               ; preds = %24, %13
  %28 = phi i64 [ %17, %13 ], [ %26, %24 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %0, %13 ], [ %25, %24 ]
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %11, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %31, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %31, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i8* %36 to i64
  %40 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %31, i64 0, i32 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 8
  call void @_ZdlPv(i8* nonnull %36) #13
  br label %42

42:                                               ; preds = %38, %34
  %43 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %31 to i8*
  call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %27, %42
  %45 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %11, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %11, align 8
  %46 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %45, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i8* %49 to i64
  %53 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %45, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  call void @_ZdlPv(i8* nonnull %49) #13
  br label %55

55:                                               ; preds = %51, %47
  %56 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %45 to i8*
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %44, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr"* %58, %1
  br i1 %59, label %80, label %13

60:                                               ; preds = %19
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %65, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i8* %70 to i64
  %74 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %65, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %73, i64* %75, align 8
  call void @_ZdlPv(i8* nonnull %70) #13
  br label %76

76:                                               ; preds = %72, %68
  %77 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %65 to i8*
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %60, %76
  %79 = icmp eq %"class.std::__1::unique_ptr"* %22, %0
  br i1 %79, label %24, label %19

80:                                               ; preds = %57, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %35 [
    i64 0, label %230
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %9, i64* %10, align 8
  br label %230

11:                                               ; preds = %5
  %12 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %14 = tail call zeroext i1 %12(%"class.std::__1::unique_ptr"* dereferenceable(8) %13, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #11
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %16, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %23, i64* %24, align 8
  br label %230

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %33 = load i64, i64* %32, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %33, i64* %34, align 8
  br label %230

35:                                               ; preds = %5
  %36 = icmp slt i64 %3, 9
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_PNS_15iterator_traitsISG_E10value_typeET_(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %4, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  br label %230

38:                                               ; preds = %35
  %39 = lshr i64 %3, 1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %39
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %40, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %39, %"class.std::__1::unique_ptr"* %4, i64 %39)
  %41 = sub nsw i64 %3, %39
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %39
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %40, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %41, %"class.std::__1::unique_ptr"* %42, i64 %41)
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %44, label %125

44:                                               ; preds = %225, %38
  %45 = phi %"class.std::__1::unique_ptr"* [ %40, %38 ], [ %226, %225 ]
  %46 = phi %"class.std::__1::unique_ptr"* [ %4, %38 ], [ %228, %225 ]
  %47 = icmp eq %"class.std::__1::unique_ptr"* %45, %1
  br i1 %47, label %230, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %50 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %51 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %48, %57
  %58 = phi %"class.std::__1::unique_ptr"* [ %66, %57 ], [ %46, %48 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ %65, %57 ], [ %45, %48 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %48 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %61, align 8
  %64 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !10

69:                                               ; preds = %57, %48
  %70 = phi %"class.std::__1::unique_ptr"* [ %46, %48 ], [ %66, %57 ]
  %71 = phi %"class.std::__1::unique_ptr"* [ %45, %48 ], [ %65, %57 ]
  %72 = icmp ult i64 %52, 56
  br i1 %72, label %230, label %73

73:                                               ; preds = %69, %73
  %74 = phi %"class.std::__1::unique_ptr"* [ %123, %73 ], [ %70, %69 ]
  %75 = phi %"class.std::__1::unique_ptr"* [ %122, %73 ], [ %71, %69 ]
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %76, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 2
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 3
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 4
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 5
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 6
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 7
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 8
  %124 = icmp eq %"class.std::__1::unique_ptr"* %122, %1
  br i1 %124, label %230, label %73

125:                                              ; preds = %38, %225
  %126 = phi %"class.std::__1::unique_ptr"* [ %228, %225 ], [ %4, %38 ]
  %127 = phi %"class.std::__1::unique_ptr"* [ %227, %225 ], [ %0, %38 ]
  %128 = phi %"class.std::__1::unique_ptr"* [ %226, %225 ], [ %40, %38 ]
  %129 = icmp eq %"class.std::__1::unique_ptr"* %128, %1
  br i1 %129, label %130, label %210

130:                                              ; preds = %125
  %131 = icmp eq %"class.std::__1::unique_ptr"* %127, %40
  br i1 %131, label %230, label %132

132:                                              ; preds = %130
  %133 = ptrtoint %"class.std::__1::unique_ptr"* %127 to i64
  %134 = add nsw i64 %39, -1
  %135 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %134, i32 0, i32 0, i32 0
  %136 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %135 to i64
  %137 = sub i64 %136, %133
  %138 = lshr i64 %137, 3
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %154, label %142

142:                                              ; preds = %132, %142
  %143 = phi %"class.std::__1::unique_ptr"* [ %151, %142 ], [ %126, %132 ]
  %144 = phi %"class.std::__1::unique_ptr"* [ %150, %142 ], [ %127, %132 ]
  %145 = phi i64 [ %152, %142 ], [ %140, %132 ]
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 0, i32 0, i32 0, i32 0
  %147 = bitcast %"class.std::__1::unique_ptr"* %144 to i64*
  %148 = load i64, i64* %147, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %146, align 8
  %149 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 1
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %142, !llvm.loop !11

154:                                              ; preds = %142, %132
  %155 = phi %"class.std::__1::unique_ptr"* [ %126, %132 ], [ %151, %142 ]
  %156 = phi %"class.std::__1::unique_ptr"* [ %127, %132 ], [ %150, %142 ]
  %157 = icmp ult i64 %137, 56
  br i1 %157, label %230, label %158

158:                                              ; preds = %154, %158
  %159 = phi %"class.std::__1::unique_ptr"* [ %208, %158 ], [ %155, %154 ]
  %160 = phi %"class.std::__1::unique_ptr"* [ %207, %158 ], [ %156, %154 ]
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  %163 = load i64, i64* %162, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %161, align 8
  %164 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 1
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 1
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 0, i32 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  %169 = load i64, i64* %168, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %167, align 8
  %170 = bitcast %"class.std::__1::unique_ptr"* %166 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 2
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 2
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %171, i64 0, i32 0, i32 0, i32 0
  %174 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %173, align 8
  %176 = bitcast %"class.std::__1::unique_ptr"* %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 3
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 3
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  %181 = load i64, i64* %180, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 4
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 4
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 5
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 5
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 6
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 6
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 7
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 7
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %203, align 8
  %206 = bitcast %"class.std::__1::unique_ptr"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 8
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 8
  %209 = icmp eq %"class.std::__1::unique_ptr"* %207, %40
  br i1 %209, label %230, label %158

210:                                              ; preds = %125
  %211 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %212 = tail call zeroext i1 %211(%"class.std::__1::unique_ptr"* dereferenceable(8) %128, %"class.std::__1::unique_ptr"* dereferenceable(8) %127) #11
  br i1 %212, label %213, label %219

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %215 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %216 = load i64, i64* %215, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %214, align 8
  %217 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 1
  br label %225

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 0, i32 0, i32 0, i32 0
  %221 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  %222 = load i64, i64* %221, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %220, align 8
  %223 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 1
  br label %225

225:                                              ; preds = %219, %213
  %226 = phi %"class.std::__1::unique_ptr"* [ %218, %213 ], [ %128, %219 ]
  %227 = phi %"class.std::__1::unique_ptr"* [ %127, %213 ], [ %224, %219 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 1
  %229 = icmp eq %"class.std::__1::unique_ptr"* %227, %40
  br i1 %229, label %44, label %125

230:                                              ; preds = %154, %158, %69, %73, %130, %44, %25, %15, %5, %37, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_SD_NS_11__wrap_iterISD_EEEEvT0_SG_T1_SH_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %86, %6
  %9 = phi %"class.std::__1::unique_ptr"* [ %4, %6 ], [ %89, %86 ]
  %10 = phi %"class.std::__1::unique_ptr"* [ %2, %6 ], [ %87, %86 ]
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %3
  br i1 %11, label %115, label %91

12:                                               ; preds = %6, %86
  %13 = phi %"class.std::__1::unique_ptr"* [ %88, %86 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::unique_ptr"* [ %87, %86 ], [ %2, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %89, %86 ], [ %4, %6 ]
  %16 = icmp eq %"class.std::__1::unique_ptr"* %14, %3
  br i1 %16, label %17, label %43

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::unique_ptr"* %13, %1
  br i1 %18, label %115, label %19

19:                                               ; preds = %17, %39
  %20 = phi %"class.std::__1::unique_ptr"* [ %40, %39 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %15, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %22, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %26, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i8* %31 to i64
  %35 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %26, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  store i64 %34, i64* %36, align 8
  tail call void @_ZdlPv(i8* nonnull %31) #13
  br label %37

37:                                               ; preds = %33, %29
  %38 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %26 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %19, %37
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr"* %40, %1
  br i1 %42, label %115, label %19

43:                                               ; preds = %12
  %44 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %5, align 8
  %45 = tail call zeroext i1 %44(%"class.std::__1::unique_ptr"* dereferenceable(8) %14, %"class.std::__1::unique_ptr"* dereferenceable(8) %13) #11
  br i1 %45, label %46, label %66

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %49 = load i64, i64* %48, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %47, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %51, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %51, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = ptrtoint i8* %56 to i64
  %60 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %51, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast i8** %60 to i64*
  store i64 %59, i64* %61, align 8
  tail call void @_ZdlPv(i8* nonnull %56) #13
  br label %62

62:                                               ; preds = %58, %54
  %63 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %51 to i8*
  tail call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %46, %62
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br label %86

66:                                               ; preds = %43
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %69 = load i64, i64* %68, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %69, i64* %72, align 8
  %73 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %71, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %71, i64 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i8* %76 to i64
  %80 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %71, i64 0, i32 0, i32 0, i32 1
  %81 = bitcast i8** %80 to i64*
  store i64 %79, i64* %81, align 8
  tail call void @_ZdlPv(i8* nonnull %76) #13
  br label %82

82:                                               ; preds = %78, %74
  %83 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %71 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %66, %82
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  br label %86

86:                                               ; preds = %64, %84
  %87 = phi %"class.std::__1::unique_ptr"* [ %65, %64 ], [ %14, %84 ]
  %88 = phi %"class.std::__1::unique_ptr"* [ %13, %64 ], [ %85, %84 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %90 = icmp eq %"class.std::__1::unique_ptr"* %88, %1
  br i1 %90, label %8, label %12

91:                                               ; preds = %8, %111
  %92 = phi %"class.std::__1::unique_ptr"* [ %112, %111 ], [ %10, %8 ]
  %93 = phi %"class.std::__1::unique_ptr"* [ %113, %111 ], [ %9, %8 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %94, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %96, i64* %99, align 8
  %100 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %98, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %98, i64 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = ptrtoint i8* %103 to i64
  %107 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %98, i64 0, i32 0, i32 0, i32 1
  %108 = bitcast i8** %107 to i64*
  store i64 %106, i64* %108, align 8
  tail call void @_ZdlPv(i8* nonnull %103) #13
  br label %109

109:                                              ; preds = %105, %101
  %110 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %98 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %91, %109
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 1
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 1
  %114 = icmp eq %"class.std::__1::unique_ptr"* %112, %3
  br i1 %114, label %115, label %91

115:                                              ; preds = %39, %111, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %252, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  br label %13

13:                                               ; preds = %10, %245
  %14 = phi %"class.std::__1::unique_ptr"* [ %250, %245 ], [ %2, %10 ]
  %15 = phi i64 [ %249, %245 ], [ %4, %10 ]
  %16 = phi i64 [ %248, %245 ], [ %5, %10 ]
  %17 = phi i64 [ %247, %245 ], [ %11, %10 ]
  %18 = phi i64 [ %246, %245 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %252, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  br label %29

26:                                               ; preds = %13
  %27 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %28 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeE(%"class.std::__1::unique_ptr"* %27, %"class.std::__1::unique_ptr"* %28, %"class.std::__1::unique_ptr"* %14, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %15, i64 %16, %"class.std::__1::unique_ptr"* %6)
  br label %252

29:                                               ; preds = %24, %35
  %30 = phi i64 [ %15, %24 ], [ %38, %35 ]
  %31 = phi i64 [ %18, %24 ], [ %37, %35 ]
  %32 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %33 = inttoptr i64 %31 to %"class.std::__1::unique_ptr"*
  %34 = tail call zeroext i1 %32(%"class.std::__1::unique_ptr"* dereferenceable(8) %25, %"class.std::__1::unique_ptr"* dereferenceable(8) %33) #11
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %36 to i64
  %38 = add nsw i64 %30, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %252, label %29

40:                                               ; preds = %29
  %41 = inttoptr i64 %31 to %"class.std::__1::unique_ptr"*
  %42 = icmp slt i64 %30, %16
  br i1 %42, label %43, label %69

43:                                               ; preds = %40
  %44 = sdiv i64 %16, 2
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 %44
  %46 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %47 = sub i64 %17, %31
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %43
  %50 = ashr exact i64 %47, 3
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi %"class.std::__1::unique_ptr"* [ %62, %51 ], [ %41, %49 ]
  %53 = phi i64 [ %61, %51 ], [ %50, %49 ]
  %54 = lshr i64 %53, 1
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %54
  %56 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %57 = tail call zeroext i1 %56(%"class.std::__1::unique_ptr"* dereferenceable(8) %45, %"class.std::__1::unique_ptr"* dereferenceable(8) %55) #11
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 1
  %59 = xor i64 %54, -1
  %60 = add i64 %53, %59
  %61 = select i1 %57, i64 %54, i64 %60
  %62 = select i1 %57, %"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"* %58
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %51, %43
  %65 = phi %"class.std::__1::unique_ptr"* [ %41, %43 ], [ %62, %51 ]
  %66 = ptrtoint %"class.std::__1::unique_ptr"* %65 to i64
  %67 = sub i64 %66, %31
  %68 = ashr exact i64 %67, 3
  br label %103

69:                                               ; preds = %40
  %70 = icmp eq i64 %30, 1
  br i1 %70, label %71, label %76

71:                                               ; preds = %69
  %72 = inttoptr i64 %31 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = inttoptr i64 %17 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %72, align 8
  store i64 %73, i64* %74, align 8
  br label %252

76:                                               ; preds = %69
  %77 = sdiv i64 %30, 2
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %77
  %79 = ptrtoint %"class.std::__1::unique_ptr"* %78 to i64
  %80 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %81 = sub i64 %80, %17
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %76
  %84 = ashr exact i64 %81, 3
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi %"class.std::__1::unique_ptr"* [ %96, %85 ], [ %25, %83 ]
  %87 = phi i64 [ %95, %85 ], [ %84, %83 ]
  %88 = lshr i64 %87, 1
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 %88
  %90 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %91 = tail call zeroext i1 %90(%"class.std::__1::unique_ptr"* dereferenceable(8) %89, %"class.std::__1::unique_ptr"* dereferenceable(8) %78) #11
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 1
  %93 = xor i64 %88, -1
  %94 = add i64 %87, %93
  %95 = select i1 %91, i64 %94, i64 %88
  %96 = select i1 %91, %"class.std::__1::unique_ptr"* %92, %"class.std::__1::unique_ptr"* %86
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %85

98:                                               ; preds = %85, %76
  %99 = phi %"class.std::__1::unique_ptr"* [ %25, %76 ], [ %96, %85 ]
  %100 = ptrtoint %"class.std::__1::unique_ptr"* %99 to i64
  %101 = sub i64 %100, %17
  %102 = ashr exact i64 %101, 3
  br label %103

103:                                              ; preds = %98, %64
  %104 = phi i64 [ %66, %64 ], [ %79, %98 ]
  %105 = phi i64 [ %46, %64 ], [ %100, %98 ]
  %106 = phi i64 [ %44, %64 ], [ %102, %98 ]
  %107 = phi i64 [ %68, %64 ], [ %77, %98 ]
  %108 = sub nsw i64 %30, %107
  %109 = sub nsw i64 %16, %106
  %110 = inttoptr i64 %104 to %"class.std::__1::unique_ptr"*
  %111 = inttoptr i64 %105 to %"class.std::__1::unique_ptr"*
  %112 = icmp eq %"class.std::__1::unique_ptr"* %110, %25
  br i1 %112, label %237, label %113

113:                                              ; preds = %103
  %114 = icmp eq %"class.std::__1::unique_ptr"* %25, %111
  br i1 %114, label %237, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %104 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = inttoptr i64 %17 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %116, align 8
  store i64 %117, i64* %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 1
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %122 = icmp eq %"class.std::__1::unique_ptr"* %121, %111
  br i1 %122, label %211, label %123

123:                                              ; preds = %115
  %124 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %111, i64 -2
  %125 = bitcast %"class.std::__1::unique_ptr"* %124 to i8*
  %126 = sub i64 0, %17
  %127 = getelementptr i8, i8* %125, i64 %126
  %128 = ptrtoint i8* %127 to i64
  %129 = lshr i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 3
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %153, label %133

133:                                              ; preds = %123, %133
  %134 = phi %"class.std::__1::unique_ptr"* [ %148, %133 ], [ %25, %123 ]
  %135 = phi %"class.std::__1::unique_ptr"* [ %147, %133 ], [ %121, %123 ]
  %136 = phi %"class.std::__1::unique_ptr"* [ %146, %133 ], [ %120, %123 ]
  %137 = phi i64 [ %141, %133 ], [ %17, %123 ]
  %138 = phi i64 [ %149, %133 ], [ %131, %123 ]
  %139 = ptrtoint %"class.std::__1::unique_ptr"* %135 to i64
  %140 = icmp eq %"class.std::__1::unique_ptr"* %136, %134
  %141 = select i1 %140, i64 %139, i64 %137
  %142 = bitcast %"class.std::__1::unique_ptr"* %136 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::unique_ptr"* %135 to i64*
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* %142, align 8
  store i64 %143, i64* %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 1
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 1
  %148 = inttoptr i64 %141 to %"class.std::__1::unique_ptr"*
  %149 = add i64 %138, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %133, !llvm.loop !12

151:                                              ; preds = %133
  %152 = inttoptr i64 %141 to %"class.std::__1::unique_ptr"*
  br label %153

153:                                              ; preds = %123, %151
  %154 = phi i64 [ undef, %123 ], [ %141, %151 ]
  %155 = phi %"class.std::__1::unique_ptr"* [ undef, %123 ], [ %146, %151 ]
  %156 = phi %"class.std::__1::unique_ptr"* [ %25, %123 ], [ %152, %151 ]
  %157 = phi %"class.std::__1::unique_ptr"* [ %121, %123 ], [ %147, %151 ]
  %158 = phi %"class.std::__1::unique_ptr"* [ %120, %123 ], [ %146, %151 ]
  %159 = phi i64 [ %17, %123 ], [ %141, %151 ]
  %160 = icmp ult i8* %127, inttoptr (i64 24 to i8*)
  br i1 %160, label %207, label %161

161:                                              ; preds = %153, %161
  %162 = phi %"class.std::__1::unique_ptr"* [ %206, %161 ], [ %156, %153 ]
  %163 = phi %"class.std::__1::unique_ptr"* [ %204, %161 ], [ %157, %153 ]
  %164 = phi %"class.std::__1::unique_ptr"* [ %203, %161 ], [ %158, %153 ]
  %165 = phi i64 [ %198, %161 ], [ %159, %153 ]
  %166 = ptrtoint %"class.std::__1::unique_ptr"* %163 to i64
  %167 = icmp eq %"class.std::__1::unique_ptr"* %164, %162
  %168 = select i1 %167, i64 %166, i64 %165
  %169 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %169, align 8
  store i64 %170, i64* %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 1
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 1
  %175 = inttoptr i64 %168 to %"class.std::__1::unique_ptr"*
  %176 = ptrtoint %"class.std::__1::unique_ptr"* %174 to i64
  %177 = icmp eq %"class.std::__1::unique_ptr"* %173, %175
  %178 = select i1 %177, i64 %176, i64 %168
  %179 = bitcast %"class.std::__1::unique_ptr"* %173 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %179, align 8
  store i64 %180, i64* %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 2
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 2
  %185 = inttoptr i64 %178 to %"class.std::__1::unique_ptr"*
  %186 = ptrtoint %"class.std::__1::unique_ptr"* %184 to i64
  %187 = icmp eq %"class.std::__1::unique_ptr"* %183, %185
  %188 = select i1 %187, i64 %186, i64 %178
  %189 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::unique_ptr"* %184 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %189, align 8
  store i64 %190, i64* %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 3
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 3
  %195 = inttoptr i64 %188 to %"class.std::__1::unique_ptr"*
  %196 = ptrtoint %"class.std::__1::unique_ptr"* %194 to i64
  %197 = icmp eq %"class.std::__1::unique_ptr"* %193, %195
  %198 = select i1 %197, i64 %196, i64 %188
  %199 = bitcast %"class.std::__1::unique_ptr"* %193 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.std::__1::unique_ptr"* %194 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %199, align 8
  store i64 %200, i64* %201, align 8
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 4
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 4
  %205 = icmp eq %"class.std::__1::unique_ptr"* %204, %111
  %206 = inttoptr i64 %198 to %"class.std::__1::unique_ptr"*
  br i1 %205, label %207, label %161

207:                                              ; preds = %161, %153
  %208 = phi i64 [ %154, %153 ], [ %198, %161 ]
  %209 = phi %"class.std::__1::unique_ptr"* [ %155, %153 ], [ %203, %161 ]
  %210 = inttoptr i64 %208 to %"class.std::__1::unique_ptr"*
  br label %211

211:                                              ; preds = %207, %115
  %212 = phi i64 [ %17, %115 ], [ %208, %207 ]
  %213 = phi %"class.std::__1::unique_ptr"* [ %120, %115 ], [ %209, %207 ]
  %214 = phi %"class.std::__1::unique_ptr"* [ %25, %115 ], [ %210, %207 ]
  %215 = icmp eq %"class.std::__1::unique_ptr"* %213, %214
  br i1 %215, label %237, label %216

216:                                              ; preds = %211, %234
  %217 = phi i64 [ %236, %234 ], [ %212, %211 ]
  %218 = phi %"class.std::__1::unique_ptr"* [ %229, %234 ], [ %213, %211 ]
  %219 = phi i64 [ %235, %234 ], [ %212, %211 ]
  %220 = inttoptr i64 %217 to %"class.std::__1::unique_ptr"*
  br label %221

221:                                              ; preds = %216, %233
  %222 = phi %"class.std::__1::unique_ptr"* [ %229, %233 ], [ %218, %216 ]
  %223 = phi i64 [ %217, %233 ], [ %219, %216 ]
  %224 = inttoptr i64 %223 to %"class.std::__1::unique_ptr"*
  %225 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = inttoptr i64 %223 to i64*
  %228 = load i64, i64* %227, align 8
  store i64 %228, i64* %225, align 8
  store i64 %226, i64* %227, align 8
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 1
  %231 = icmp eq %"class.std::__1::unique_ptr"* %230, %111
  %232 = icmp eq %"class.std::__1::unique_ptr"* %229, %220
  br i1 %231, label %233, label %234

233:                                              ; preds = %221
  br i1 %232, label %237, label %221

234:                                              ; preds = %221
  %235 = ptrtoint %"class.std::__1::unique_ptr"* %230 to i64
  %236 = select i1 %232, i64 %235, i64 %217
  br label %216

237:                                              ; preds = %233, %103, %113, %211
  %238 = phi %"class.std::__1::unique_ptr"* [ %110, %113 ], [ %111, %103 ], [ %213, %211 ], [ %213, %233 ]
  %239 = add nsw i64 %107, %106
  %240 = add nsw i64 %108, %109
  %241 = icmp slt i64 %239, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = ptrtoint %"class.std::__1::unique_ptr"* %238 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"* %110, %"class.std::__1::unique_ptr"* %238, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %107, i64 %106, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %245

244:                                              ; preds = %237
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %238, %"class.std::__1::unique_ptr"* %111, %"class.std::__1::unique_ptr"* %14, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %108, i64 %109, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %245

245:                                              ; preds = %242, %244
  %246 = phi i64 [ %243, %242 ], [ %31, %244 ]
  %247 = phi i64 [ %105, %242 ], [ %104, %244 ]
  %248 = phi i64 [ %109, %242 ], [ %106, %244 ]
  %249 = phi i64 [ %108, %242 ], [ %107, %244 ]
  %250 = phi %"class.std::__1::unique_ptr"* [ %14, %242 ], [ %238, %244 ]
  %251 = icmp eq i64 %248, 0
  br i1 %251, label %252, label %13

252:                                              ; preds = %245, %22, %35, %8, %71, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_PNS_15iterator_traitsISG_E10value_typeET_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %5, label %79, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %79, label %13

13:                                               ; preds = %6, %76
  %14 = phi %"class.std::__1::unique_ptr"* [ %77, %76 ], [ %11, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %16, %76 ], [ %2, %6 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %17 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %18 = tail call zeroext i1 %17(%"class.std::__1::unique_ptr"* dereferenceable(8) %14, %"class.std::__1::unique_ptr"* dereferenceable(8) %15) #11
  br i1 %18, label %19, label %71

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %22 = load i64, i64* %21, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %22, i64* %23, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr"* %15, %2
  br i1 %24, label %52, label %25

25:                                               ; preds = %19, %50
  %26 = phi %"class.std::__1::unique_ptr"* [ %28, %50 ], [ %15, %19 ]
  %27 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 -1
  %29 = tail call zeroext i1 %27(%"class.std::__1::unique_ptr"* dereferenceable(8) %14, %"class.std::__1::unique_ptr"* dereferenceable(8) %28) #11
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  br label %52

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %33, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %37, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %37, i64 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = ptrtoint i8* %42 to i64
  %46 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %37, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  store i64 %45, i64* %47, align 8
  tail call void @_ZdlPv(i8* nonnull %42) #13
  br label %48

48:                                               ; preds = %44, %40
  %49 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %37 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %32, %48
  %51 = icmp eq %"class.std::__1::unique_ptr"* %28, %2
  br i1 %51, label %52, label %25

52:                                               ; preds = %50, %30, %19
  %53 = phi i64* [ %10, %19 ], [ %31, %30 ], [ %10, %50 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %2, %19 ], [ %26, %30 ], [ %2, %50 ]
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %57 = load i64, i64* %56, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %55, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %58, align 8
  store i64 %57, i64* %53, align 8
  %60 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %59, i64 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = ptrtoint i8* %63 to i64
  %67 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %59, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast i8** %67 to i64*
  store i64 %66, i64* %68, align 8
  tail call void @_ZdlPv(i8* nonnull %63) #13
  br label %69

69:                                               ; preds = %65, %61
  %70 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %59 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %76

71:                                               ; preds = %13
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %74 = load i64, i64* %73, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %72, align 8
  %75 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %69, %52, %71
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr"* %77, %1
  br i1 %78, label %79, label %13

79:                                               ; preds = %76, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %10 = alloca %"class.std::__1::reverse_iterator.55", align 8
  %11 = alloca %"class.std::__1::reverse_iterator.55", align 8
  %12 = icmp sgt i64 %4, %5
  br i1 %12, label %44, label %13

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %14, label %78, label %15

15:                                               ; preds = %13
  %16 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %17 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %16 to i64
  %18 = sub i64 %17, %8
  %19 = lshr i64 %18, 3
  %20 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %21 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %20 to i64
  %22 = sub i64 %21, %8
  %23 = lshr i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %15, %27
  %28 = phi %"class.std::__1::unique_ptr"* [ %36, %27 ], [ %6, %15 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %35, %27 ], [ %0, %15 ]
  %30 = phi i64 [ %37, %27 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %37 = add i64 %30, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %27, !llvm.loop !13

39:                                               ; preds = %27, %15
  %40 = phi %"class.std::__1::unique_ptr"* [ undef, %15 ], [ %36, %27 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %6, %15 ], [ %36, %27 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %0, %15 ], [ %35, %27 ]
  %43 = icmp ult i64 %22, 56
  br i1 %43, label %75, label %81

44:                                               ; preds = %7
  %45 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %48 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %47 to i64
  %49 = sub i64 %48, %9
  %50 = lshr i64 %49, 3
  %51 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %52 = ptrtoint %"struct.net::huffman_trie::ReversedEntry"** %51 to i64
  %53 = sub i64 %52, %9
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %46, %58
  %59 = phi %"class.std::__1::unique_ptr"* [ %67, %58 ], [ %6, %46 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %66, %58 ], [ %1, %46 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %46 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %62, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !14

70:                                               ; preds = %58, %46
  %71 = phi %"class.std::__1::unique_ptr"* [ undef, %46 ], [ %67, %58 ]
  %72 = phi %"class.std::__1::unique_ptr"* [ %6, %46 ], [ %67, %58 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %1, %46 ], [ %66, %58 ]
  %74 = icmp ult i64 %53, 56
  br i1 %74, label %133, label %144

75:                                               ; preds = %81, %39
  %76 = phi %"class.std::__1::unique_ptr"* [ %40, %39 ], [ %131, %81 ]
  %77 = add nuw nsw i64 %19, 1
  br label %78

78:                                               ; preds = %75, %13
  %79 = phi i64 [ 0, %13 ], [ %77, %75 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %6, %13 ], [ %76, %75 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_NS_11__wrap_iterISD_EESF_EEvT0_SG_T1_SH_T2_T_(%"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %80, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"* %0, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3)
  br label %196

81:                                               ; preds = %39, %81
  %82 = phi %"class.std::__1::unique_ptr"* [ %131, %81 ], [ %41, %39 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %130, %81 ], [ %42, %39 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %84, align 8
  %87 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %90, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 2
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 3
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  %104 = load i64, i64* %103, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %102, align 8
  %105 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 4
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 5
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %112, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  %116 = load i64, i64* %115, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr"* %113 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 6
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr"* %118 to i64*
  %122 = load i64, i64* %121, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 7
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %124, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  %128 = load i64, i64* %127, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 8
  %132 = icmp eq %"class.std::__1::unique_ptr"* %130, %1
  br i1 %132, label %75, label %81

133:                                              ; preds = %144, %70
  %134 = phi %"class.std::__1::unique_ptr"* [ %71, %70 ], [ %194, %144 ]
  %135 = add nuw nsw i64 %50, 1
  br label %136

136:                                              ; preds = %133, %44
  %137 = phi i64 [ 0, %44 ], [ %135, %133 ]
  %138 = phi %"class.std::__1::unique_ptr"* [ %6, %44 ], [ %134, %133 ]
  %139 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %10, i64 0, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"** %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %10, i64 0, i32 1, i32 0
  store %"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %11, i64 0, i32 1, i32 0
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %142, align 8
  %143 = ptrtoint i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EENSF_INS_11__wrap_iterISG_EEEESK_EEvT0_SL_T1_SM_T2_T_(%"class.std::__1::unique_ptr"* %138, %"class.std::__1::unique_ptr"* %138, %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::reverse_iterator.55"* nonnull byval(%"class.std::__1::reverse_iterator.55") align 8 %10, %"class.std::__1::reverse_iterator.55"* nonnull byval(%"class.std::__1::reverse_iterator.55") align 8 %11, i64 %143)
  br label %196

144:                                              ; preds = %70, %144
  %145 = phi %"class.std::__1::unique_ptr"* [ %194, %144 ], [ %72, %70 ]
  %146 = phi %"class.std::__1::unique_ptr"* [ %193, %144 ], [ %73, %70 ]
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 1
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 0, i32 0, i32 0, i32 0
  %154 = bitcast %"class.std::__1::unique_ptr"* %151 to i64*
  %155 = load i64, i64* %154, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %153, align 8
  %156 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 2
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 2
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %157, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.std::__1::unique_ptr"* %157 to i64*
  %161 = load i64, i64* %160, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %159, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 3
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 3
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %165, align 8
  %168 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 4
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 4
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  %173 = load i64, i64* %172, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %171, align 8
  %174 = bitcast %"class.std::__1::unique_ptr"* %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 5
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 5
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  %179 = load i64, i64* %178, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %177, align 8
  %180 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 6
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 6
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  %185 = load i64, i64* %184, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %183, align 8
  %186 = bitcast %"class.std::__1::unique_ptr"* %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 7
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 7
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %187, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  %191 = load i64, i64* %190, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %189, align 8
  %192 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 8
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 8
  %195 = icmp eq %"class.std::__1::unique_ptr"* %193, %2
  br i1 %195, label %133, label %144

196:                                              ; preds = %136, %78
  %197 = phi i64 [ %137, %136 ], [ %79, %78 ]
  %198 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  %199 = icmp eq i64 %197, 0
  %200 = or i1 %198, %199
  br i1 %200, label %221, label %201

201:                                              ; preds = %196, %217
  %202 = phi i64 [ %218, %217 ], [ 0, %196 ]
  %203 = phi %"class.std::__1::unique_ptr"* [ %219, %217 ], [ %6, %196 ]
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %204, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %204, align 8
  %206 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %205, null
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %205, i64 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %215, label %211

211:                                              ; preds = %207
  %212 = ptrtoint i8* %209 to i64
  %213 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %205, i64 0, i32 0, i32 0, i32 1
  %214 = bitcast i8** %213 to i64*
  store i64 %212, i64* %214, align 8
  tail call void @_ZdlPv(i8* nonnull %209) #13
  br label %215

215:                                              ; preds = %211, %207
  %216 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %205 to i8*
  tail call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %215, %201
  %218 = add nuw nsw i64 %202, 1
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 1
  %220 = icmp eq i64 %218, %197
  br i1 %220, label %221, label %201

221:                                              ; preds = %217, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS4_EEEES9_EPS7_NS_11__wrap_iterISD_EESF_EEvT0_SG_T1_SH_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %7, label %85, label %8

8:                                                ; preds = %6, %80
  %9 = phi %"class.std::__1::unique_ptr"* [ %82, %80 ], [ %0, %6 ]
  %10 = phi %"class.std::__1::unique_ptr"* [ %83, %80 ], [ %4, %6 ]
  %11 = phi %"class.std::__1::unique_ptr"* [ %81, %80 ], [ %2, %6 ]
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %3
  br i1 %12, label %13, label %37

13:                                               ; preds = %8, %33
  %14 = phi %"class.std::__1::unique_ptr"* [ %35, %33 ], [ %10, %8 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %34, %33 ], [ %9, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %16, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %20, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %20, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = ptrtoint i8* %25 to i64
  %29 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %20, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  tail call void @_ZdlPv(i8* nonnull %25) #13
  br label %31

31:                                               ; preds = %27, %23
  %32 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %20 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %31, %13
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %36 = icmp eq %"class.std::__1::unique_ptr"* %34, %1
  br i1 %36, label %85, label %13

37:                                               ; preds = %8
  %38 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %5, align 8
  %39 = tail call zeroext i1 %38(%"class.std::__1::unique_ptr"* dereferenceable(8) %11, %"class.std::__1::unique_ptr"* dereferenceable(8) %9) #11
  br i1 %39, label %40, label %60

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %43 = load i64, i64* %42, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %41, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %45, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = ptrtoint i8* %50 to i64
  %54 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %45, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast i8** %54 to i64*
  store i64 %53, i64* %55, align 8
  tail call void @_ZdlPv(i8* nonnull %50) #13
  br label %56

56:                                               ; preds = %52, %48
  %57 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %45 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %40, %56
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  br label %80

60:                                               ; preds = %37
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %65, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i8* %70 to i64
  %74 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %65, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %73, i64* %75, align 8
  tail call void @_ZdlPv(i8* nonnull %70) #13
  br label %76

76:                                               ; preds = %72, %68
  %77 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %65 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %60, %76
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 1
  br label %80

80:                                               ; preds = %58, %78
  %81 = phi %"class.std::__1::unique_ptr"* [ %59, %58 ], [ %11, %78 ]
  %82 = phi %"class.std::__1::unique_ptr"* [ %9, %58 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 1
  %84 = icmp eq %"class.std::__1::unique_ptr"* %82, %1
  br i1 %84, label %85, label %8

85:                                               ; preds = %80, %33, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN3net12huffman_trie13ReversedEntryENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EENSF_INS_11__wrap_iterISG_EEEESK_EEvT0_SL_T1_SM_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::reverse_iterator.55"* byval(%"class.std::__1::reverse_iterator.55") align 8, %"class.std::__1::reverse_iterator.55"* byval(%"class.std::__1::reverse_iterator.55") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = inttoptr i64 %8 to i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)**
  %11 = icmp eq %"class.std::__1::unique_ptr"* %1, %3
  br i1 %11, label %95, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator.55", %"class.std::__1::reverse_iterator.55"* %7, i64 0, i32 1, i32 0
  br label %15

15:                                               ; preds = %12, %89
  %16 = phi %"class.std::__1::unique_ptr"* [ %1, %12 ], [ %91, %89 ]
  %17 = phi %"class.std::__1::unique_ptr"* [ %5, %12 ], [ %90, %89 ]
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, %18
  br i1 %19, label %20, label %46

20:                                               ; preds = %15
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  br label %22

22:                                               ; preds = %20, %44
  %23 = phi %"class.std::__1::unique_ptr"* [ %25, %44 ], [ %16, %20 ]
  %24 = phi %"class.std::__1::unique_ptr"* [ %26, %44 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 -1
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %31, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %31, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i8* %36 to i64
  %40 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %31, i64 0, i32 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 8
  tail call void @_ZdlPv(i8* nonnull %36) #13
  br label %42

42:                                               ; preds = %38, %34
  %43 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %31 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %42, %22
  %45 = icmp eq %"class.std::__1::unique_ptr"* %25, %3
  br i1 %45, label %95, label %22

46:                                               ; preds = %15
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 -1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 -1
  %49 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %10, align 8
  %50 = tail call zeroext i1 %49(%"class.std::__1::unique_ptr"* dereferenceable(8) %48, %"class.std::__1::unique_ptr"* dereferenceable(8) %47) #11
  %51 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 -1
  br i1 %50, label %53, label %71

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %54, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %58 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %56, i64* %59, align 8
  %60 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %58, null
  br i1 %60, label %89, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %58, i64 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = ptrtoint i8* %63 to i64
  %67 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %58, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast i8** %67 to i64*
  store i64 %66, i64* %68, align 8
  tail call void @_ZdlPv(i8* nonnull %63) #13
  br label %69

69:                                               ; preds = %65, %61
  %70 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %58 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %89

71:                                               ; preds = %46
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %74 = load i64, i64* %73, align 8
  store %"struct.net::huffman_trie::ReversedEntry"* null, %"struct.net::huffman_trie::ReversedEntry"** %72, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.net::huffman_trie::ReversedEntry"*, %"struct.net::huffman_trie::ReversedEntry"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %"struct.net::huffman_trie::ReversedEntry"* %76, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %76, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = ptrtoint i8* %81 to i64
  %85 = getelementptr inbounds %"struct.net::huffman_trie::ReversedEntry", %"struct.net::huffman_trie::ReversedEntry"* %76, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast i8** %85 to i64*
  store i64 %84, i64* %86, align 8
  tail call void @_ZdlPv(i8* nonnull %81) #13
  br label %87

87:                                               ; preds = %83, %79
  %88 = bitcast %"struct.net::huffman_trie::ReversedEntry"* %76 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %71, %69, %53
  %90 = phi %"class.std::__1::unique_ptr"* [ %47, %53 ], [ %47, %69 ], [ %17, %71 ], [ %17, %87 ]
  %91 = phi %"class.std::__1::unique_ptr"* [ %16, %53 ], [ %16, %69 ], [ %48, %71 ], [ %48, %87 ]
  %92 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 -1
  store %"class.std::__1::unique_ptr"* %93, %"class.std::__1::unique_ptr"** %14, align 8
  %94 = icmp eq %"class.std::__1::unique_ptr"* %91, %3
  br i1 %94, label %95, label %15

95:                                               ; preds = %89, %44, %9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12huffman_trie12_GLOBAL__N_111ReverseNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12huffman_trie12_GLOBAL__N_111ReverseNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net12huffman_trie12_GLOBAL__N_119LongestCommonPrefixENSt3__111__wrap_iterIPKNS2_10unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS5_EEEEEESB_: argument 0"}
!7 = distinct !{!7, !"_ZN3net12huffman_trie12_GLOBAL__N_119LongestCommonPrefixENSt3__111__wrap_iterIPKNS2_10unique_ptrINS0_13ReversedEntryENS2_14default_deleteIS5_EEEEEESB_"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = distinct !{!14, !9}
