; ModuleID = '../../v8/src/compiler/backend/x64/unwinding-info-writer-x64.cc'
source_filename = "../../v8/src/compiler/backend/x64/unwinding-info-writer-x64.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::UnwindingInfoWriter" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::EhFrameWriter", i8, i8, %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::EhFrameWriter" = type { i32, i32, i32, %"class.v8::internal::Register", i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.std::__1::__compressed_pair.14" }
%"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState" = type <{ %"class.v8::internal::Register", i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.18", %"class.v8::internal::ZoneVector.18", %"class.v8::internal::ZoneVector.25", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.18" = type { %"class.std::__1::vector.19" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::ZoneAllocator.24" }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.25" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.35" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.28" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.v8::internal::ZoneVector.28" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::ZoneAllocator.34" }
%"class.v8::internal::ZoneAllocator.34" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.v8::internal::ZoneAllocator.38" }
%"class.v8::internal::ZoneAllocator.38" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }

@_ZN2v88internal29FLAG_perf_prof_unwinding_infoE = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19UnwindingInfoWriter21BeginInstructionBlockEiPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::UnwindingInfoWriter"*, i32, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 4, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %12, i64 %10
  %14 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %14, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %22, label %33, label %28

28:                                               ; preds = %16
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %17, i32 %1) #2
  %29 = load i32, i32* %20, align 4
  br i1 %27, label %32, label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %23, align 4
  tail call void @_ZN2v88internal13EhFrameWriter31SetBaseAddressRegisterAndOffsetENS0_8RegisterEi(%"class.v8::internal::EhFrameWriter"* %17, i32 %29, i32 %31) #2
  br label %36

32:                                               ; preds = %28
  tail call void @_ZN2v88internal13EhFrameWriter22SetBaseAddressRegisterENS0_8RegisterE(%"class.v8::internal::EhFrameWriter"* %17, i32 %29) #2
  br label %36

33:                                               ; preds = %16
  br i1 %27, label %36, label %34

34:                                               ; preds = %33
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %17, i32 %1) #2
  %35 = load i32, i32* %23, align 4
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %17, i32 %35) #2
  br label %36

36:                                               ; preds = %33, %32, %34, %30
  %37 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %14, i64 0, i32 2
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 2
  store i8 %38, i8* %39, align 8
  br label %40

40:                                               ; preds = %3, %36, %6
  ret void
}

declare void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal13EhFrameWriter31SetBaseAddressRegisterAndOffsetENS0_8RegisterEi(%"class.v8::internal::EhFrameWriter"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal13EhFrameWriter22SetBaseAddressRegisterENS0_8RegisterE(%"class.v8::internal::EhFrameWriter"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19UnwindingInfoWriter19EndInstructionBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::UnwindingInfoWriter"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %56, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %56

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %11, %13
  br i1 %14, label %56, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 2
  br label %21

21:                                               ; preds = %15, %53
  %22 = phi %"class.v8::internal::compiler::RpoNumber"* [ %11, %15 ], [ %54, %53 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*** %16, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %26, i64 %25
  %28 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %28, null
  br i1 %29, label %30, label %53

30:                                               ; preds = %21
  %31 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %32 = load i32, i32* %18, align 4
  %33 = load i32, i32* %19, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %31, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %31, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ult i64 %38, 16
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %30
  %41 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %31, i64 16) #2
  br label %44

42:                                               ; preds = %30
  %43 = add i64 %35, 16
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*
  %47 = load i8, i8* %20, align 1, !range !2
  %48 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %46, i64 0, i32 0, i32 0, i32 0
  store i32 %32, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %46, i64 0, i32 1
  store i32 %33, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState", %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %46, i64 0, i32 2
  store i8 %47, i8* %50, align 4
  %51 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*** %16, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %51, i64 %25
  store %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"* %46, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %52, align 8
  br label %53

53:                                               ; preds = %21, %44
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %22, i64 1
  %55 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %54, %13
  br i1 %55, label %56, label %21

56:                                               ; preds = %53, %9, %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19UnwindingInfoWriter20MarkFrameConstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1
  %7 = add nsw i32 %1, 1
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %7) #2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 8
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %10) #2
  %11 = load i32, i32* %8, align 8
  %12 = sub nsw i32 0, %11
  %13 = tail call i32 @_ZN2v88internal13EhFrameWriter19RegisterToDwarfCodeENS0_8RegisterE(i32 5) #2
  tail call void @_ZN2v88internal13EhFrameWriter26RecordRegisterSavedToStackEii(%"class.v8::internal::EhFrameWriter"* %6, i32 %13, i32 %12) #2
  %14 = add nsw i32 %1, 4
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %14) #2
  tail call void @_ZN2v88internal13EhFrameWriter22SetBaseAddressRegisterENS0_8RegisterE(%"class.v8::internal::EhFrameWriter"* %6, i32 5) #2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 2
  store i8 1, i8* %15, align 8
  br label %16

16:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19UnwindingInfoWriter22MarkFrameDeconstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1
  %7 = add nsw i32 %1, 3
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %7) #2
  tail call void @_ZN2v88internal13EhFrameWriter22SetBaseAddressRegisterENS0_8RegisterE(%"class.v8::internal::EhFrameWriter"* %6, i32 4) #2
  %8 = add nsw i32 %1, 4
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %8) #2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 1, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, -8
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %6, i32 %11) #2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %0, i64 0, i32 2
  store i8 0, i8* %12, align 8
  br label %13

13:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN2v88internal13EhFrameWriter26RecordRegisterSavedToStackEii(%"class.v8::internal::EhFrameWriter"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal13EhFrameWriter19RegisterToDwarfCodeENS0_8RegisterE(i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
